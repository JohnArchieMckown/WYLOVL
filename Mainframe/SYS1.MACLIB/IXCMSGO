*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMSGO                               -02/26/99-<3> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Message Out                               * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5647-A01 (C) COPYRIGHT IBM CORP. 1990, 1999                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6608                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IXCMSGO macro is the interface to the Cross System         * 00002200
*      Coupling Facility (XCF) Message-Out service.  An active member * 00002300
*      of an XCF group uses the Message-Out service to send data to   * 00002400
*      one or more active member(s) of the same group.  XCF delivers  * 00002500
*      the message by calling the message exit routine that the       * 00002600
*      target member defined when it joined (IXCJOIN) the group.  The * 00002700
*      target member can invoke the message-in service (IXCMSGI) to   * 00002800
*      receive the data, or can invoke the message-control service    * 00002900
*      (IXCMSGC) to save the message in XCF managed storage for later * 00003000
*      processing.                                                    * 00003100
*                                                                     * 00003200
*      The Message-Out routine is given control from the IXCMSGO      * 00003300
*      macro.  The IXCMSGO macro will complete the parameter list     * 00003400
*      with caller provided data and generate a stacking, space       * 00003500
*      switching, program call to the Message-Out service.  The       * 00003600
*      IXCMSGO macro is provided in list, execute, and standard form. * 00003700
*      The list form accepts no variable parameters and is used only  * 00003800
*      to reserve space for the Message-Out parameter list.  The      * 00003900
*      standard form is provided for use with routines which do not   * 00004000
*      require reentrant code.  The execute form is provided for use  * 00004100
*      with the list format for reentrant routines.  The IXCMSGO      * 00004200
*      macro is provided in PL/AS and assembler formats.              * 00004300
*                                                                     * 00004400
*      The parameter list must be located in the caller's primary     * 00004500
*      address space.                                                 * 00004600
*                                                                     * 00004700
*                                                                     * 00004800
*                                                                     * 00004900
*      INPUT REGISTERS:                                               * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*                          GR0-GR1     reserved                       * 00005300
*                                                                     * 00005400
*                          GR2-GR13    undefined                      * 00005500
*                                                                     * 00005600
*                          GR14-GR15   reserved                       * 00005700
*                                                                     * 00005800
*                          AR0-AR1     reserved                       * 00005900
*                                                                     * 00006000
*                          AR2-AR13    undefined                      * 00006100
*                                                                     * 00006200
*                          AR14-AR15   reserved                       * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00006700
*                                                                     * 00006800
*      OUTPUT REGISTERS:                                              * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                          GR0         reason code based on GR15      * 00007200
*                                                                     * 00007300
*                          GR1         used as work register by the   * 00007400
*                                      system                         * 00007500
*                                                                     * 00007600
*                          GR2-GR13    unchanged                      * 00007700
*                                                                     * 00007800
*                          GR14        used as work register by the   * 00007900
*                                      system                         * 00008000
*                                                                     * 00008100
*                          GR15        return code                    * 00008200
*                                                                     * 00008300
*                          AR0-AR1     used as work registers by the  * 00008400
*                                      system                         * 00008500
*                                                                     * 00008600
*                          AR2-AR13    unchanged                      * 00008700
*                                                                     * 00008800
*                          AR14-AR15   used as work registers by the  * 00008900
*                                      system                         * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*01* EXTERNAL CLASSIFICATION:                                         * 00009600
*                                                                     * 00009700
*02* GUPI: BASE                                                       * 00009800
*                                                                     * 00009900
*02* NONE: FIELDS                                                     * 00010000
*          LINKAGE                                                    * 00010100
*          XCFDATA                                                    * 00010200
*                                                                     * 00010300
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00010400
*                                                                     * 00010500
*01* ENVIRONMENT:                                                     * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*      Dispatchable unit mode: Task or SRB mode.                      * 00010900
*                                                                     * 00011000
*      Minimum authorization: Problem or Supervisor state.  System    * 00011100
*                        PSW key.                                     * 00011200
*                                                                     * 00011300
*      AMODE:            31-bit.                                      * 00011400
*                                                                     * 00011500
*      ASC mode:         Primary or Access Register.                  * 00011600
*                                                                     * 00011700
*                        If in Access Register ASC mode, specify      * 00011800
*                        SYSSTATE ASCENV=AR before invoking this      * 00011900
*                        macro.                                       * 00012000
*                                                                     * 00012100
*                        Unless MSGOUTASID(ANY) was specified at the  * 00012200
*                        time the group was joined, the primary must  * 00012300
*                        be equal to the requesting member's primary  * 00012400
*                        at the time the group was joined or MASTER   * 00012500
*                        address space, any secondary address space,  * 00012600
*                        any home address space.  If MSGOUTASID(ANY)  * 00012700
*                        was specified when the group was joined,     * 00012800
*                        IXCMSGO can be used from any address space.  * 00012900
*                                                                     * 00013000
*                        Swappable or non-swappable primary address   * 00013100
*                        space.                                       * 00013200
*                                                                     * 00013300
*                        When invoked from someplace besides the      * 00013400
*                        joiner's primary address space, some         * 00013500
*                        functions may not be available.  See macro   * 00013600
*                        usage notes below for more detail.           * 00013700
*                                                                     * 00013800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00013900
*                                                                     * 00014000
*      Locks:            No locks held.                               * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*01* SYNTAX:                                                          * 00014500
*                                                                     * 00014600
*[xlabel]  IXCMSGO     MEMTOKEN=xmemtoken                             * 00014700
*                   [,SENDTO=MEMBER                                  * 00014800
*                   |     ,TARGET=xtarget                             * 00014900
*                   |   [,DELIVERMSG=UNORDERED]                      * 00015000
*                   |   [,DELIVERMSG=ORDERED                         * 00015100
*                   |        [,STREAMID=xstreamid|1]]               * 00015200
*                   |   [,GETRESPONSE=NO                             * 00015300
*                   |   |    [,TIMEOUT=xtimeout|ZERO]]              * 00015400
*                   |   [,GETRESPONSE=YES                            * 00015500
*                   |         ,TIMEOUT=xtimeout]]                     * 00015600
*                   [,SENDTO=GROUP                                   * 00015700
*                   |    ,MEMBERS=TABLE                              * 00015800
*                   |   |     ,TARGETS=xtargets                       * 00015900
*                   |   |     ,#TARGETS=x#targets                     * 00016000
*                   |   |    [,NEXTTARGETOFF=xnexttargetoff|8]      * 00016100
*                   |   [,DELIVERMSG=UNORDERED]                      * 00016200
*                   |   [,DELIVERMSG=ORDERED                         * 00016300
*                   |        [,STREAMID=xstreamid|1]]               * 00016400
*                   |   [,GETRESPONSE=NO                             * 00016500
*                   |   |    [,TIMEOUT=xtimeout|ZERO]]              * 00016600
*                   |   [,GETRESPONSE=YES                            * 00016700
*                   |         ,TIMEOUT=xtimeout]]                     * 00016800
*                   [,SENDTO=ORIGINATOR                              * 00016900
*                         ,RESPONSEID=xresponseid                     * 00017000
*                        [,TIMEOUT=xtimeout|ZERO]]                  * 00017100
*                   [,MULTIPART=NO                                   * 00017200
*                   |    ,MSGCNTL=xmsgcntl                           * 00017300
*                   |    ,MSGBUF=xmsgbuf                             * 00017400
*                   |         ,MSGLEN=xmsglen]                        * 00017500
*                   [,MULTIPART=YES                                  * 00017600
*                        [,MSGCNTL=xmsgcntl|ALLZERO]                * 00017700
*                        [,MSGLEN=xmsglen|SUMPARTLENS]              * 00017800
*                        [,#MSGPARTS=x#msgparts|ATLEASTONE]         * 00017900
*                         ,ELEMENT=xelement                           * 00018000
*                        ,ELEMFORM=TABLE                             * 00018100
*                       |     ,NEXTOFF=xnextoff                       * 00018200
*                        ,ELEMFORM=QUEUE                             * 00018300
*                             ,NEXTPTROFF=xnextptroff                 * 00018400
*                            [,ENDOFQUEUE=xendofqueue|ZERO]         * 00018500
*                        ,PARTOFF=xpartoff                           * 00018600
*                        ,PARTPTROFF=xpartptroff                     * 00018700
*                           [,PARTALET=xpartalet|ZERO              * 00018800
*                            ,PARTALETOFF=xpartaletoff             * 00018900
*                            ,PARTALETTBL=xpartalettbl]            * 00019000
*                        ,PARTLEN=xpartlen                           * 00019100
*                        ,PARTLENOFF=xpartlenoff                     * 00019200
*                        ,PARTLENTBL=xpartlentbl]                    * 00019300
*                    [,MSGSTGKEY=xmsgstgkey|ANY]                    * 00019400
*                    [,MSGACCESS=SYNC|ASYNC]                        * 00019500
*                   [,NOTIFY=NO]                                     * 00019600
*                   [,NOTIFY=YES                                     * 00019700
*                        [,USERDATA=xuserdata|ALLZERO]              * 00019800
*                       [,NOTIFYIF=COMPLETED]                        * 00019900
*                       [,NOTIFYIF=FAILED]                           * 00020000
*                       [,NOTIFYBY=EXIT                              * 00020100
*                       |    [,NOTIFYEXIT=xnotifyexit|FROMJOIN]]    * 00020200
*                       |[,RETMSGOTOKEN=xretmsgotoken]]               * 00020300
*                   [,LINKAGE=SYSTEM]                                * 00020400
*                   [,LINKAGE=INTERNAL                               * 00020500
*                         ,XCFDATA=xxcfdata]                          * 00020600
*                    [,RETCODE=xretcode]                              * 00020700
*                    [,RSNCODE=xrsncode]                              * 00020800
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00020900
*                   [,MF=S]                                          * 00021000
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00021100
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*      Where:                                                         * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*      [xlabel]                                                       * 00021800
*          is an optional symbol, starting in column 1, that is the   * 00021900
*          name on the IXCMSGO macro invocation.  The name must       * 00022000
*          conform to the rules for an ordinary assembler language    * 00022100
*          symbol.                                                    * 00022200
*          DEFAULT: No name.                                          * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*      MEMTOKEN=xmemtoken                                             * 00022800
*          is the name (RS-type), or address in register (2)-(12), of * 00022900
*          a required 64 bit input variable containing the member     * 00023000
*          token as returned by IXCJOIN for the sending member.       * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*      [SENDTO=MEMBER|GROUP|ORIGINATOR]                             * 00023600
*          is an optional keyword input that indicates the member(s)  * 00023700
*          to which the message should be sent.                       * 00023800
*          DEFAULT: MEMBER                                            * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*          [SENDTO=MEMBER                                             * 00024200
*              Send the message to the (one) member indicated by      * 00024300
*              TARGET.                                                * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*              TARGET=xtarget                                         * 00024700
*                  is the name (RS-type), or address in register      * 00024800
*                  (2)-(12), of a required 64 bit input variable      * 00024900
*                  containing the member token of the target member.  * 00025000
*                                                                     * 00025100
*                  Typically, the target member token is obtained     * 00025200
*                  from data presented to the source member's group   * 00025300
*                  exit when XCF provides notification that the       * 00025400
*                  target member became active in the group, from     * 00025500
*                  answer data provided by the IXCQUERY service       * 00025600
*                  (mapped by IXCYQUAA), from the MEPLSRCE field in   * 00025700
*                  the Message Exit Parameter List (mapped by         * 00025800
*                  IXCYMEPL), or from the MnplTrRespSrce field in the * 00025900
*                  Message Notification Parameter List (mapped by     * 00026000
*                  IXCYMNPL).                                         * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*              [DELIVERMSG=UNORDERED|ORDERED]                       * 00026600
*                  is an optional keyword input that indicates        * 00026700
*                  whether the message is to be delivered in          * 00026800
*                  sequential order or not.                           * 00026900
*                  DEFAULT: UNORDERED                                 * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                  [DELIVERMSG=UNORDERED]                             * 00027300
*                      The message is to be delivered as soon as      * 00027400
*                      possible.  No ordering is imposed on this      * 00027500
*                      message with respect to any other message sent * 00027600
*                      by the sending member to the target member.    * 00027700
*                                                                     * 00027800
*                      Given any other message sent by the sending    * 00027900
*                      member to the target member, no assumption can * 00028000
*                      be made about the order in which that message  * 00028100
*                      and this message will be delivered.            * 00028200
*                                                                     * 00028300
*                  [DELIVERMSG=ORDERED                                * 00028400
*                      An ordering is to be imposed on this message   * 00028500
*                      with respect to other ordered messages sent by * 00028600
*                      the sending member to the target member.  The  * 00028700
*                      ordering is determined by the order in which   * 00028800
*                      the message-out service accepts the messages   * 00028900
*                      for delivery.  For a sender to be absolutely   * 00029000
*                      certain of the order in which two such         * 00029100
*                      messages will be delivered, it must wait for   * 00029200
*                      the message-out service to return from         * 00029300
*                      processing the first message before attempting * 00029400
*                      to send the second ordered message.  The       * 00029500
*                      message exit routine of the target member will * 00029600
*                      be presented the ordered messages in the same  * 00029700
*                      order that they were accepted for delivery.    * 00029800
*                      Delivery of these messages will be delayed as  * 00029900
*                      needed to ensure that proper ordering occurs.  * 00030000
*                                                                     * 00030100
*                      Note that the ordering is imposed on the       * 00030200
*                      messages sent between a particular pair of     * 00030300
*                      members.  The ordered delivery of messages     * 00030400
*                      sent between one particular pair of members is * 00030500
*                      independent of message delivery between any    * 00030600
*                      other pair of members and is also independent  * 00030700
*                      of message delivery of unordered messages.     * 00030800
*                                                                     * 00030900
*                      Between a particular pair of members, the      * 00031000
*                      STREAMID keyword can be used to send messages  * 00031100
*                      in independently ordered streams.  The streams * 00031200
*                      of any one pair of members are independent of  * 00031300
*                      the streams of any other pair of members.  For * 00031400
*                      a given pair of members, messages within a     * 00031500
*                      particular stream are delivered independently  * 00031600
*                      of any other stream.                           * 00031700
*                                                                     * 00031800
*                      The systems on which the sending member and    * 00031900
*                      target member reside must both be running a    * 00032000
*                      release of MVS that supports ordered message   * 00032100
*                      delivery in order for ordered delivery to      * 00032200
*                      occur.  Unordered delivery occurs if the       * 00032300
*                      message is sent to a target member that        * 00032400
*                      resides on a system running a release of MVS   * 00032500
*                      that does not support ordered message          * 00032600
*                      delivery. The IXCQUERY service can be used to  * 00032700
*                      determine whether the ordered delivery         * 00032800
*                      protocol is supported for a particular target  * 00032900
*                      member.                                        * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                      [STREAMID=xstreamid|1]]                      * 00033300
*                          is the name (RS-type), or address in       * 00033400
*                          register (2)-(12), of an optional fullword * 00033500
*                          input variable, or decimal value,          * 00033600
*                          identifying the stream of ordered messages * 00033700
*                          to which this message belongs.  The value  * 00033800
*                          specified for STREAMID must be between 1   * 00033900
*                          and 15 (decimal), inclusive.  XCF assigns  * 00034000
*                          no meaning to the STREAMID other than for  * 00034100
*                          the purpose of providing independently     * 00034200
*                          ordered streams of messages between the    * 00034300
*                          sending member and target member.          * 00034400
*                          DEFAULT: 1 - stream id 1                   * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*              [GETRESPONSE=NO|YES]                                 * 00035400
*                  is an optional keyword input indicating whether    * 00035500
*                  XCF is to manage the collection of responses to    * 00035600
*                  this message.                                      * 00035700
*                  DEFAULT: NO                                        * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                  [GETRESPONSE=NO                                    * 00036100
*                      XCF is not to manage collection of responses   * 00036200
*                      for this message.  Management of responses, if * 00036300
*                      any, is the responsibility of the user.        * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                      [TIMEOUT=xtimeout|ZERO]]                     * 00036700
*                          is the name (RS-type), or address in       * 00036800
*                          register (2)-(12), of an optional halfword * 00036900
*                          input indicating the number of seconds     * 00037000
*                          that the user is willing to allow for the  * 00037100
*                          message to complete.  The timeout value    * 00037200
*                          specified must be between one and '7FFF'X, * 00037300
*                          inclusive.  If the message has not         * 00037400
*                          otherwise completed before the timeout     * 00037500
*                          value expires, the message is declared to  * 00037600
*                          be completed.  Message completion is then  * 00037700
*                          processed as indicated by the NOTIFY       * 00037800
*                          keywords.  See the NOTIFY keyword for a    * 00037900
*                          definition of message completion.          * 00038000
*                                                                     * 00038100
*                          Note that a specification of a timeout     * 00038200
*                          value allows XCF to queue a message that   * 00038300
*                          might otherwise have been rejected for     * 00038400
*                          lack of an XCF I/O buffer or for lack of   * 00038500
*                          signalling connectivity to the target      * 00038600
*                          system (return code 'C'x, reason codes 4   * 00038700
*                          and 8 respectively).                       * 00038800
*                          DEFAULT: ZERO - immediate send required    * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                  [GETRESPONSE=YES                                   * 00039300
*                      XCF is to manage the collection of any         * 00039400
*                      response(s) to this message.  When completed,  * 00039500
*                      the sender is presented with the collected     * 00039600
*                      response message(s).  As part of this          * 00039700
*                      management, XCF recognizes situations for      * 00039800
*                      which it is no longer reasonable to expect a   * 00039900
*                      response (ie, target member's system fails).   * 00040000
*                                                                     * 00040100
*                      Response collection is a cooperative effort    * 00040200
*                      between XCF and the target member(s).  When    * 00040300
*                      XCF presents this message to the target        * 00040400
*                      member's exit routine (message or notify), a   * 00040500
*                      flag in the parameter list is set to indicate  * 00040600
*                      that XCF is managing response collection, and  * 00040700
*                      a response ID is provided to allow XCF to      * 00040800
*                      identify the message to which the response is  * 00040900
*                      to be associated.  After composing the         * 00041000
*                      response, the target member replies by         * 00041100
*                      invoking the Message-out service to send the   * 00041200
*                      response to the ORIGINATOR of the message      * 00041300
*                      identified by the RESPONSEID.  The particular  * 00041400
*                      form of the message-out invocation used to     * 00041500
*                      make the reply allows XCF to recognize the     * 00041600
*                      message as a response.  When collection of the * 00041700
*                      response(s) has completed, XCF presents the    * 00041800
*                      collected response message(s) to the member    * 00041900
*                      that originated the GETRESPONSE message-out    * 00042000
*                      request.  The manner in which the collected    * 00042100
*                      response(s) are presented is determined by the * 00042200
*                      NOTIFYBY keyword.                              * 00042300
*                                                                     * 00042400
*                      The system on which a target member resides    * 00042500
*                      must be running a release of MVS that supports * 00042600
*                      XCF managed response collection in order for   * 00042700
*                      XCF to collect a response.  Furthermore, the   * 00042800
*                      target member itself must be capable of        * 00042900
*                      participating in this protocol by invoking the * 00043000
*                      message-out service to send its reply in a way * 00043100
*                      that allows XCF to recognize it as a response. * 00043200
*                      The message is sent to a target member even if * 00043300
*                      it appears that the member is not able to      * 00043400
*                      participate in the XCF response collection     * 00043500
*                      protocol.  XCF will not however, expect a      * 00043600
*                      reply from such a member.  The XCF Query       * 00043700
*                      Service (IXCQUERY) can be used to determine    * 00043800
*                      whether the XCF managed response collection    * 00043900
*                      protocol is supported for a particular target  * 00044000
*                      member.                                        * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*                      TIMEOUT=xtimeout]]                             * 00044400
*                          is the name (RS-type), or address in       * 00044500
*                          register (2)-(12), of a required halfword  * 00044600
*                          input indicating the number of seconds     * 00044700
*                          that the user is willing to allow for the  * 00044800
*                          message to complete.  The timeout value    * 00044900
*                          specified must be between one and '7FFF'X, * 00045000
*                          inclusive.  If the message has not         * 00045100
*                          otherwise completed before the timeout     * 00045200
*                          value expires, the message is declared to  * 00045300
*                          be completed.  Message completion is then  * 00045400
*                          processed as indicated by the the NOTIFY   * 00045500
*                          keywords.  See the NOTIFY keyword for a    * 00045600
*                          definition of message completion.          * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*          [SENDTO=GROUP                                              * 00046500
*              Send the message to a collection of members.  This     * 00046600
*              type of send is often referred to as a "broadcast".    * 00046700
*                                                                     * 00046800
*              Note that a send to GROUP where the collection of      * 00046900
*              members consists of only one member does not           * 00047000
*              necessarily have the same behavior as a send to        * 00047100
*              MEMBER.  For example, suppose that in both cases the   * 00047200
*              one target member specified was not a valid target.    * 00047300
*              The send to MEMBER request would be rejected with      * 00047400
*              return code 8 reason code 8 (target not valid),        * 00047500
*              whereas the send to GROUP would be rejected with       * 00047600
*              return code 4 reason code '404'x indicating that the   * 00047700
*              broadcast completed but the send to at least one       * 00047800
*              target was rejected.  The send reason code reported    * 00047900
*              for the individual target in the collection would      * 00048000
*              however indicate target not valid.                     * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*              MEMBERS=TABLE                                         * 00048400
*                  is a required keyword input indicating how the     * 00048500
*                  collection of target members is to be determined.  * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                  MEMBERS=TABLE                                      * 00048900
*                      The sender is providing a table that contains  * 00049000
*                      a member token for each intended target        * 00049100
*                      member.                                        * 00049200
*                                                                     * 00049300
*                      The table is an array of entries.  Each entry  * 00049400
*                      has the same fixed size, and can contain data  * 00049500
*                      other than a target member token.  The storage * 00049600
*                      location named by TARGETS contains the first   * 00049700
*                      BIT(64) target member token.  Subsequent       * 00049800
*                      target member tokens are iteratively located   * 00049900
*                      by adding the value NEXTTARGETOFF to the       * 00050000
*                      address of each member token in turn.  The     * 00050100
*                      keyword #TARGETS indicates the number of       * 00050200
*                      entries in the table.                          * 00050300
*                                                                     * 00050400
*                      The table can contain "holes" in the sense     * 00050500
*                      that XCF will skip an entry if the indicated   * 00050600
*                      target member token is hexadecimal zero.       * 00050700
*                      However, XCF will preserve the "holes" so that * 00050800
*                      the TARGETS table has a one-to-one             * 00050900
*                      correspondence with any XCF table constructed  * 00051000
*                      for this request.  For example, the i'th entry * 00051100
*                      of the TARGETS table would correspond to the   * 00051200
*                      i'th MqaTargRespEntry (or MqaTargOnlyEntry)    * 00051300
*                      returned by the XCF Message Control Query      * 00051400
*                      Message Service (IXCMSGC), or would correspond * 00051500
*                      to the i'th MnplTargRespEntry (or              * 00051600
*                      MnplTargOnlyEntry) presented to a user         * 00051700
*                      notification exit routine.  The system incurs  * 00051800
*                      the least overhead if there are no "holes".    * 00051900
*                                                                     * 00052000
*                      The invoker is responsible for maintaining the * 00052100
*                      integrity of the TARGETS table until the       * 00052200
*                      Message-Out service returns.  If the table     * 00052300
*                      changes while being processed by the           * 00052400
*                      Message-Out service, the message may be sent   * 00052500
*                      to a different set of targets than expected.   * 00052600
*                      Also, the content of the entries in tables     * 00052700
*                      constructed by XCF about this request might no * 00052800
*                      longer correspond to the content of the        * 00052900
*                      entries in the TARGETS table.                  * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*                      TARGETS=xtargets                               * 00053300
*                          is the name (RS-type), or address in       * 00053400
*                          register (2)-(12), of a required character * 00053500
*                          input table containing a member token for  * 00053600
*                          each intended target member.  The storage  * 00053700
*                          location named by TARGETS contains the     * 00053800
*                          first member token to be processed.        * 00053900
*                                                                     * 00054000
*                          The storage area indicated by TARGETS must * 00054100
*                          either be in the caller's primary address  * 00054200
*                          space, or in an address/data space that is * 00054300
*                          addressable through a public entry on the  * 00054400
*                          caller's dispatchable unit access list     * 00054500
*                          (DU-AL), or in a common area data space.   * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                      #TARGETS=x#targets                             * 00055100
*                          is the name (RS-type), or address in       * 00055200
*                          register (2)-(12), of a required fullword  * 00055300
*                          input variable, or decimal value,          * 00055400
*                          containing the number of entries in the    * 00055500
*                          TARGETS table.  The value specified for    * 00055600
*                          #TARGETS must be between one and the       * 00055700
*                          maximum number of members per XCF group    * 00055800
*                          that is supported by the sending system,   * 00055900
*                          inclusive.                                 * 00056000
*                                                                     * 00056100
*                          Note that #TARGETS indicates the number of * 00056200
*                          potential targets.  A TARGETS table entry  * 00056300
*                          containing a zero member token is          * 00056400
*                          considered a potential target and should   * 00056500
*                          be included in the #TARGETS count.         * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*                                                                     * 00057000
*                      [NEXTTARGETOFF=xnexttargetoff|8]             * 00057100
*                          is the name (RS-type), or address in       * 00057200
*                          register (2)-(12), of an optional fullword * 00057300
*                          input which indicates, in bytes, the       * 00057400
*                          relative location of the next member token * 00057500
*                          within the TARGETS table.  The next member * 00057600
*                          token is located by adding the indicated   * 00057700
*                          value to the location of the current       * 00057800
*                          member token.  Usually this value is       * 00057900
*                          simply the length of an individual entry   * 00058000
*                          in the TARGETS table.                      * 00058100
*                          DEFAULT: 8 - each table entry is a member  * 00058200
*                          token only                                 * 00058300
*                                                                     * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*              [DELIVERMSG=UNORDERED|ORDERED]                       * 00059200
*                  is an optional keyword input that indicates        * 00059300
*                  whether the message is to be delivered in          * 00059400
*                  sequential order or not.                           * 00059500
*                  DEFAULT: UNORDERED                                 * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                  [DELIVERMSG=UNORDERED]                             * 00059900
*                      The message is to be delivered as soon as      * 00060000
*                      possible.  No ordering is imposed on this      * 00060100
*                      message with respect to any other message sent * 00060200
*                      by the sending member to the target member.    * 00060300
*                                                                     * 00060400
*                      Given any other message sent by the sending    * 00060500
*                      member to the target member, no assumption can * 00060600
*                      be made about the order in which that message  * 00060700
*                      and this message will be delivered.            * 00060800
*                                                                     * 00060900
*                  [DELIVERMSG=ORDERED                                * 00061000
*                      An ordering is to be imposed on this message   * 00061100
*                      with respect to other ordered messages sent by * 00061200
*                      the sending member to the target member.  The  * 00061300
*                      ordering is determined by the order in which   * 00061400
*                      the message-out service accepts the messages   * 00061500
*                      for delivery.  The message exit routine of the * 00061600
*                      target member will be presented the ordered    * 00061700
*                      messages in the same order that they were      * 00061800
*                      accepted for delivery.  Delivery of these      * 00061900
*                      messages will be delayed as needed to ensure   * 00062000
*                      that proper ordering occurs.                   * 00062100
*                                                                     * 00062200
*                      Note that the ordering is imposed on the       * 00062300
*                      messages sent between a particular pair of     * 00062400
*                      members.  The ordered delivery of messages     * 00062500
*                      sent between one particular pair of members is * 00062600
*                      independent of message delivery between any    * 00062700
*                      other pair of members.                         * 00062800
*                                                                     * 00062900
*                      Between a particular pair of members, the      * 00063000
*                      STREAMID keyword can be used to send messages  * 00063100
*                      in independently ordered streams.  The streams * 00063200
*                      of any one pair of members are independent of  * 00063300
*                      the streams of any other pair of members.  For * 00063400
*                      a given pair of members, messages within a     * 00063500
*                      particular stream are delivered independently  * 00063600
*                      of any other stream.                           * 00063700
*                                                                     * 00063800
*                      The systems on which the sending member and    * 00063900
*                      target member reside must both be running a    * 00064000
*                      release of MVS that supports ordered message   * 00064100
*                      delivery in order for ordered delivery to      * 00064200
*                      occur.  Unordered delivery occurs if the       * 00064300
*                      message is sent to a target member that        * 00064400
*                      resides on a system running a release of MVS   * 00064500
*                      that does not support ordered message          * 00064600
*                      delivery.  The XCF Query Service (IXCQUERY)    * 00064700
*                      can be used to determine whether the ordered   * 00064800
*                      delivery protocol is supported for a           * 00064900
*                      particular target member.                      * 00065000
*                                                                     * 00065100
*                                                                     * 00065200
*                      [STREAMID=xstreamid|1]]                      * 00065300
*                          is the name (RS-type), or address in       * 00065400
*                          register (2)-(12), of an optional fullword * 00065500
*                          input variable, or decimal value,          * 00065600
*                          identifying the stream of ordered messages * 00065700
*                          to which this message belongs.  The value  * 00065800
*                          specified for STREAMID must be between 1   * 00065900
*                          and 15 (decimal), inclusive.               * 00066000
*                          DEFAULT: 1 - stream id 1                   * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*                                                                     * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*              [GETRESPONSE=NO|YES]                                 * 00067000
*                  is an optional keyword input indicating whether    * 00067100
*                  XCF is to manage the collection of responses to    * 00067200
*                  this message.                                      * 00067300
*                  DEFAULT: NO                                        * 00067400
*                                                                     * 00067500
*                                                                     * 00067600
*                  [GETRESPONSE=NO                                    * 00067700
*                      XCF is not to manage collection of responses   * 00067800
*                      for this message.  Management of responses, if * 00067900
*                      any, is the responsibility of the user.        * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                      [TIMEOUT=xtimeout|ZERO]]                     * 00068300
*                          is the name (RS-type), or address in       * 00068400
*                          register (2)-(12), of an optional halfword * 00068500
*                          input indicating the number of seconds     * 00068600
*                          that the user is willing to allow for the  * 00068700
*                          message to complete.  The timeout value    * 00068800
*                          specified must be between one and '7FFF'X, * 00068900
*                          inclusive.  If the message has not         * 00069000
*                          otherwise completed before the timeout     * 00069100
*                          value expires, the message is declared to  * 00069200
*                          be completed.  Message completion is then  * 00069300
*                          processed as indicated by the NOTIFY       * 00069400
*                          keywords.  See the NOTIFY keyword for a    * 00069500
*                          definition of message completion.          * 00069600
*                                                                     * 00069700
*                          Note that a specification of a timeout     * 00069800
*                          value allows XCF to queue a message that   * 00069900
*                          might otherwise have been rejected for     * 00070000
*                          lack of an XCF I/O buffer or for lack of   * 00070100
*                          signalling connectivity to the target      * 00070200
*                          system (return code 'C'x, reason codes 4   * 00070300
*                          and 8 respectively).                       * 00070400
*                                                                     * 00070500
*                          A nonzero TIMEOUT value is required if     * 00070600
*                          MSGACCESS of ASYNC is specified.           * 00070700
*                          DEFAULT: ZERO - immediate send required    * 00070800
*                                                                     * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*                  [GETRESPONSE=YES                                   * 00071200
*                      XCF is to manage the collection of any         * 00071300
*                      response(s) to this message.  When completed,  * 00071400
*                      the sender is presented with the collected     * 00071500
*                      response message(s).  As part of this          * 00071600
*                      management, XCF recognizes situations for      * 00071700
*                      which it is no longer reasonable to expect a   * 00071800
*                      response (ie, target member's system fails).   * 00071900
*                                                                     * 00072000
*                      Response collection is a cooperative effort    * 00072100
*                      between XCF and the target member(s).  When    * 00072200
*                      XCF presents this message to the target        * 00072300
*                      member's exit routine (message or notify), a   * 00072400
*                      flag in the parameter list is set to indicate  * 00072500
*                      that XCF is managing response collection, and  * 00072600
*                      a response ID is provided to allow XCF to      * 00072700
*                      identify the message to which the response is  * 00072800
*                      to be associated.  After composing the         * 00072900
*                      response, the target member replies by         * 00073000
*                      invoking the Message-out service to send the   * 00073100
*                      response to the ORIGINATOR of the message      * 00073200
*                      identified by the RESPONSEID.  The particular  * 00073300
*                      form of the message-out invocation used to     * 00073400
*                      make the reply allows XCF to recognize the     * 00073500
*                      message as a response.  When collection of the * 00073600
*                      response(s) has completed, XCF presents the    * 00073700
*                      collected response message(s) to the member    * 00073800
*                      that originated the GETRESPONSE message-out    * 00073900
*                      request.  The manner in which the collected    * 00074000
*                      response(s) are presented is determined by the * 00074100
*                      NOTIFYBY keyword.                              * 00074200
*                                                                     * 00074300
*                      The system on which a target member resides    * 00074400
*                      must be running a release of MVS that supports * 00074500
*                      XCF managed response collection in order for   * 00074600
*                      XCF to collect a response.  Furthermore, the   * 00074700
*                      target member itself must be capable of        * 00074800
*                      participating in this protocol by invoking the * 00074900
*                      message-out service to send its reply in a way * 00075000
*                      that allows XCF to recognize it as a response. * 00075100
*                      The message is sent to a target member even if * 00075200
*                      it appears that the member is not able to      * 00075300
*                      participate in the XCF response collection     * 00075400
*                      protocol.  XCF will not however, expect a      * 00075500
*                      reply from such a member.  The XCF Query       * 00075600
*                      Service (IXCQUERY) can be used to determine    * 00075700
*                      whether the XCF managed response collection    * 00075800
*                      protocol is supported for a particular target  * 00075900
*                      member.                                        * 00076000
*                                                                     * 00076100
*                                                                     * 00076200
*                      TIMEOUT=xtimeout]]                             * 00076300
*                          is the name (RS-type), or address in       * 00076400
*                          register (2)-(12), of a required halfword  * 00076500
*                          input indicating the number of seconds     * 00076600
*                          that the user is willing to allow for the  * 00076700
*                          message to complete.  The timeout value    * 00076800
*                          specified must be between one and '7FFF'X, * 00076900
*                          inclusive.  If the message has not         * 00077000
*                          otherwise completed before the timeout     * 00077100
*                          value expires, the message is declared to  * 00077200
*                          be completed.  Message completion is then  * 00077300
*                          processed as indicated by the the NOTIFY   * 00077400
*                          keywords.  See the NOTIFY keyword for a    * 00077500
*                          definition of message completion.          * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*                                                                     * 00078300
*          [SENDTO=ORIGINATOR                                         * 00078400
*              Send a response message.                               * 00078500
*                                                                     * 00078600
*              A previously received message indicated that its       * 00078700
*              sender had requested that XCF manage the gathering of  * 00078800
*              response(s) to that message.  This message-out request * 00078900
*              is sending a response for that message.                * 00079000
*                                                                     * 00079100
*                                                                     * 00079200
*              RESPONSEID=xresponseid                                 * 00079300
*                  is the name (RS-type), or address in register      * 00079400
*                  (2)-(12), of a required 24 character input         * 00079500
*                  variable containing an XCF identifier for the      * 00079600
*                  originating message to which this request is       * 00079700
*                  making a response.                                 * 00079800
*                                                                     * 00079900
*                  The RESPONSEID is obtained from the MeplResponseID * 00080000
*                  field in the Message Exit Parameter List           * 00080100
*                  (IXCYMEPL) that was presented to a message exit    * 00080200
*                  routine, or from the MnplTrResponseID field in the * 00080300
*                  Message Notification Parameter List (IXCYMNPL)     * 00080400
*                  that was presented to a notify exit routine, or    * 00080500
*                  from the MqaMidResponseID field in the Message     * 00080600
*                  Query Answer Area (IXCYMQAA) that was returned by  * 00080700
*                  the XCF Message Control QUERYMSG Service           * 00080800
*                  (IXCMSGC).                                         * 00080900
*                                                                     * 00081000
*                                                                     * 00081100
*                                                                     * 00081200
*                                                                     * 00081300
*              [TIMEOUT=xtimeout|ZERO]]                             * 00081400
*                  is the name (RS-type), or address in register      * 00081500
*                  (2)-(12), of an optional halfword input indicating * 00081600
*                  the number of seconds that the user is willing to  * 00081700
*                  allow for the message to complete.  The timeout    * 00081800
*                  value specified must be between one and '7FFF'X,   * 00081900
*                  inclusive.  If the message has not otherwise       * 00082000
*                  completed before the timeout value expires, the    * 00082100
*                  message is declared to be completed.  Message      * 00082200
*                  completion is then processed as indicated by the   * 00082300
*                  NOTIFY keywords.  See the NOTIFY keyword for a     * 00082400
*                  definition of message completion.                  * 00082500
*                                                                     * 00082600
*                  Note that a specification of a timeout value       * 00082700
*                  allows XCF to queue a message that might otherwise * 00082800
*                  have been rejected for lack of an XCF I/O buffer   * 00082900
*                  or for lack of signalling connectivity to the      * 00083000
*                  target system (return code 'C'x, reason codes 4    * 00083100
*                  and 8 respectively).                               * 00083200
*                  DEFAULT: ZERO - immediate send required            * 00083300
*                                                                     * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*                                                                     * 00083700
*                                                                     * 00083800
*                                                                     * 00083900
*                                                                     * 00084000
*                                                                     * 00084100
*      [MULTIPART=NO|YES                                            * 00084200
*          is an optional keyword input indicating whether or not the * 00084300
*          message data may reside in more than one area of storage.  * 00084400
*          DEFAULT: NO                                                * 00084500
*                                                                     * 00084600
*                                                                     * 00084700
*          [MULTIPART=NO                                              * 00084800
*              indicates that the message data resides in one         * 00084900
*              contiguous area of storage.                            * 00085000
*                                                                     * 00085100
*                                                                     * 00085200
*              The following is a group of keys.  At least one must   * 00085300
*              be specified.                                          * 00085400
*                                                                     * 00085500
*                                                                     * 00085600
*              MSGCNTL=xmsgcntl                                       * 00085700
*                  is the name (RS-type), or address in register      * 00085800
*                  (2)-(12), of a 32 character input area containing  * 00085900
*                  control information for the message to be sent.    * 00086000
*                  The message control data can help the receiving    * 00086100
*                  member process the message.  For example it might  * 00086200
*                  be used to identify the type of message being      * 00086300
*                  sent, or it might be used to identify which        * 00086400
*                  message format is being used when the sender and   * 00086500
*                  receiver are running different releases of a       * 00086600
*                  program.  It is up to the user to decide what data * 00086700
*                  is needed and how it is to be used.                * 00086800
*                                                                     * 00086900
*                  A copy of the contents of this 32-byte area is     * 00087000
*                  provided to the message exit through the message   * 00087100
*                  exit parameter list (mapped by IXCYMEPL).          * 00087200
*                                                                     * 00087300
*                  DEFAULT: ALLZERO - the message control data        * 00087400
*                  presented to the target member consists of         * 00087500
*                  hexadecimal zeros.                                 * 00087600
*                                                                     * 00087700
*              MSGBUF=xmsgbuf                                         * 00087800
*                  is the name (RS-type), or address in register      * 00087900
*                  (2)-(12), of a character input area containing the * 00088000
*                  message to be sent.  The message buffer must       * 00088100
*                  either reside in the caller's primary address      * 00088200
*                  space, or in a data space that is accessible via a * 00088300
*                  public entry on the caller's Dispatchable Unit     * 00088400
*                  Access List (DU-AL), or in a common area data      * 00088500
*                  space.                                             * 00088600
*                                                                     * 00088700
*                  If MSGACCESS of ASYNC is specified, the storage    * 00088800
*                  indicated by MSGBUF is subject to the following    * 00088900
*                  additional restrictions:                           * 00089000
*                                                                     * 00089100
*                   - If the storage is in the caller's primary       * 00089200
*                  address space and this space is not the same space * 00089300
*                  that was primary when the sending member joined    * 00089400
*                  its XCF group (ie, the joiner's space), the        * 00089500
*                  caller's primary address space must be             * 00089600
*                  non-swappable.                                     * 00089700
*                   - If the storage is in a data space accessible    * 00089800
*                  via a public entry on the caller's DU-AL, the data * 00089900
*                  space must either be owned by the joiner's address * 00090000
*                  space, or be owned by a non-swappable address      * 00090100
*                  space, or be a common area data space.             * 00090200
*                   - If the storage is in an address space           * 00090300
*                  accessible via a public entry on the caller's      * 00090400
*                  DU-AL, that address space must either be the       * 00090500
*                  joiner's address space or be a non-swappable       * 00090600
*                  address space.                                     * 00090700
*                                                                     * 00090800
*                  The storage key of the storage area containing the * 00090900
*                  message data must match the storage protect key    * 00091000
*                  indicated by the MSGSTGKEY keyword.                * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*                  MSGLEN=xmsglen]                                    * 00091400
*                      is the name (RS-type), or address in register  * 00091500
*                      (2)-(12), of a required fullword input         * 00091600
*                      variable containing the length in bytes of the * 00091700
*                      entire message.                                * 00091800
*                                                                     * 00091900
*                      For MSGACCESS of SYNC, MSGLEN must be in the   * 00092000
*                      decimal range of 0-62464 bytes.                * 00092100
*                                                                     * 00092200
*                      For MSGACCESS of ASYNC, MSGLEN can be in the   * 00092300
*                      decimal range of 0 to 134,217,728 (128M)       * 00092400
*                      bytes.  If MSGLEN exceeds 62464 (61K), both    * 00092500
*                      the sending member and target member must have * 00092600
*                      specified YES for the GT61KMSG keyword when    * 00092700
*                      the IXCJOIN macro was invoked to join the      * 00092800
*                      group.  Use the IXCQUERY service to determine  * 00092900
*                      whether the large message delivery protocol is * 00093000
*                      supported for a particular target member.      * 00093100
*                                                                     * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*                                                                     * 00093600
*              End of group of keys.                                  * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*          [MULTIPART=YES                                             * 00094000
*              indicates that the message data resides in one or more * 00094100
*              areas of storage.                                      * 00094200
*                                                                     * 00094300
*              The message parts and the buffer areas that contain    * 00094400
*              them are described by elements.  The Message-Out       * 00094500
*              service gathers the message data from the indicated    * 00094600
*              buffer areas, thereby assembling the message data into * 00094700
*              a single contiguous message.  Processing each element  * 00094800
*              consecutively, the Message-Out service moves message   * 00094900
*              data from a buffer area until the part is complete or  * 00095000
*              the indicated total number of bytes of message data    * 00095100
*              have been gathered.  A part is complete when the       * 00095200
*              number of bytes of message data moved from the buffer  * 00095300
*              area equals the length of the part.  When a part is    * 00095400
*              complete and message data remains, the next element,   * 00095500
*              if any, is used to gather the message data from        * 00095600
*              another buffer area.                                   * 00095700
*                                                                     * 00095800
*              If the indicated total message length exceeds the      * 00095900
*              number of bytes of message data gathered from the      * 00096000
*              parts, no message is sent since it is assumed that an  * 00096100
*              error has occurred.  However, having the number of     * 00096200
*              bytes of message data available from the parts exceed  * 00096300
*              the indicated total message length is not considered   * 00096400
*              an error.  Thus the sender could provide a static part * 00096500
*              structure and specify the total message length to vary * 00096600
*              the amount of message data sent.                       * 00096700
*                                                                     * 00096800
*              The gathering of message data from the indicated parts * 00096900
*              ends when one of the following conditions is met:      * 00097000
*                                                                     * 00097100
*              o Specified total number of bytes of message data have * 00097200
*              been gathered                                          * 00097300
*                                                                     * 00097400
*              o Specified number of message parts processed          * 00097500
*                                                                     * 00097600
*              o End of queue of elements reached                     * 00097700
*                                                                     * 00097800
*              o Number of message parts was not specified and more   * 00097900
*              than 65,536 zero length parts processed consecutively  * 00098000
*              (message is never sent for this case)                  * 00098100
*                                                                     * 00098200
*                                                                     * 00098300
*              [MSGCNTL=xmsgcntl|ALLZERO]                           * 00098400
*                  is the name (RS-type), or address in register      * 00098500
*                  (2)-(12), of an optional 32 character input area   * 00098600
*                  containing control information for the message to  * 00098700
*                  be sent.  The message control data can help the    * 00098800
*                  receiving member process the message.  For example * 00098900
*                  it might be used to identify the type of message   * 00099000
*                  being sent, or it might be used to identify which  * 00099100
*                  message format is being used when the sender and   * 00099200
*                  receiver are running different releases of a       * 00099300
*                  program.  It is up to the user to decide what data * 00099400
*                  is needed and how it is to be used.                * 00099500
*                                                                     * 00099600
*                  A copy of the contents of this 32-byte area is     * 00099700
*                  provided to the message exit through the message   * 00099800
*                  exit parameter list (mapped by IXCYMEPL).          * 00099900
*                                                                     * 00100000
*                  DEFAULT: ALLZERO - the message control data        * 00100100
*                  presented to the target member consists of         * 00100200
*                  hexadecimal zeros.                                 * 00100300
*                                                                     * 00100400
*                                                                     * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*              [MSGLEN=xmsglen|SUMPARTLENS]                         * 00100800
*                  is the name (RS-type), or address in register      * 00100900
*                  (2)-(12), of an optional fullword input containing * 00101000
*                  the length in bytes of the entire message.         * 00101100
*                                                                     * 00101200
*                  For MSGACCESS of SYNC, MSGLEN must be in the       * 00101300
*                  decimal range of 0-62464 bytes.                    * 00101400
*                                                                     * 00101500
*                  For MSGACCESS of ASYNC, MSGLEN can be in the       * 00101600
*                  decimal range of 0 to 134,217,728 (128M) bytes.    * 00101700
*                  If MSGLEN exceeds 62464 (61K), both the sending    * 00101800
*                  member and target member must have specified YES   * 00101900
*                  for the GT61KMSG keyword when the IXCJOIN macro    * 00102000
*                  was invoked to join the group.  Use the IXCQUERY   * 00102100
*                  service to determine whether the large message     * 00102200
*                  delivery protocol is supported for a particular    * 00102300
*                  target member.                                     * 00102400
*                                                                     * 00102500
*                  If MSGLEN is specified, the Message-Out service    * 00102600
*                  requires that there be enough elements to describe * 00102700
*                  all the parts needed to allow a message of the     * 00102800
*                  indicated length to be sent.  That is, the sum of  * 00102900
*                  the part lengths must be greater than or equal to  * 00103000
*                  the indicated total message length.                * 00103100
*                                                                     * 00103200
*                  If MSGLEN is not specified, the Message-Out        * 00103300
*                  service may need to determine the message length.  * 00103400
*                  Specifying the total message length avoids this    * 00103500
*                  processing.                                        * 00103600
*                                                                     * 00103700
*                  DEFAULT: SUMPARTLENS - sum of the lengths of the   * 00103800
*                  parts                                              * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*                                                                     * 00104300
*              [#MSGPARTS=x#msgparts|ATLEASTONE]                    * 00104400
*                  is the name (RS-type), or address in register      * 00104500
*                  (2)-(12), of an optional fullword input containing * 00104600
*                  the number of message parts to be gathered into a  * 00104700
*                  contiguous message.  If specified, the number of   * 00104800
*                  message parts must be greater than zero.           * 00104900
*                                                                     * 00105000
*                  The default value used when #MSGPARTS is not coded * 00105100
*                  depends on whether or not MSGLEN is coded.  If     * 00105200
*                  MSGLEN is coded, the Message-Out service assumes   * 00105300
*                  that there are enough elements to describe all the * 00105400
*                  parts needed to allow a message of the indicated   * 00105500
*                  length to be sent.  If MSGLEN is not coded, the    * 00105600
*                  default value used for #MSGPARTS depends on the    * 00105700
*                  element form.  For a table of elements, the        * 00105800
*                  Message-Out service processes only one part.  For  * 00105900
*                  a queue of elements, the Message-Out service       * 00106000
*                  processes parts until the end of the queue is      * 00106100
*                  reached.                                           * 00106200
*                                                                     * 00106300
*                  If #MSGPARTS is not coded and more than 65,536     * 00106400
*                  zero length parts are processed consecutively, the * 00106500
*                  Message-Out service does not send the message and  * 00106600
*                  returns to the caller with a failure indicating    * 00106700
*                  that progress could not be made.  This lack of     * 00106800
*                  progress could be caused by a circular queue of    * 00106900
*                  elements.                                          * 00107000
*                                                                     * 00107100
*                  DEFAULT: ATLEASTONE - at least one, more as needed * 00107200
*                  to send MSGLEN bytes                               * 00107300
*                                                                     * 00107400
*                                                                     * 00107500
*                                                                     * 00107600
*                                                                     * 00107700
*              ELEMENT=xelement                                       * 00107800
*                  is the name (RS-type), or address in register      * 00107900
*                  (2)-(12), of a required character input area which * 00108000
*                  is the first element containing the data that      * 00108100
*                  describes the parts of the message.  The           * 00108200
*                  Message-Out service gathers the various parts of   * 00108300
*                  the message together based on information provided * 00108400
*                  in the elements and delivers the message parts to  * 00108500
*                  the target member as a single contiguous message.  * 00108600
*                  The target member can receive the data as one      * 00108700
*                  contiguous message or can receive it into          * 00108800
*                  discontiguous buffer areas.                        * 00108900
*                                                                     * 00109000
*                  The elements can be structured either as a table   * 00109100
*                  or as a queue.  The elements must either reside in * 00109200
*                  the caller's primary address space, or in a space  * 00109300
*                  that is accessible via a public entry on the       * 00109400
*                  caller's Dispatchable Unit Access List (DU-AL), or * 00109500
*                  in a common area data space.  For MSGACCESS of     * 00109600
*                  ASYNC, additional restrictions may apply to the    * 00109700
*                  space that contains the elements:                  * 00109800
*                                                                     * 00109900
*                   - If the elements reside in the caller's primary  * 00110000
*                  address space and this space is not the same space * 00110100
*                  that was primary when the sending member joined    * 00110200
*                  its XCF group (ie, the joiner's space) the         * 00110300
*                  caller's primary address space must be             * 00110400
*                  non-swappable.                                     * 00110500
*                   - If the elements reside in a data space          * 00110600
*                  accessible via a public entry on the caller's      * 00110700
*                  DU-AL, the data space must either be owned by the  * 00110800
*                  joiner's address space, or be owned by a           * 00110900
*                  non-swappable address space, or be a common area   * 00111000
*                  data space.                                        * 00111100
*                   - If the elements reside in an address space      * 00111200
*                  accessible via a public entry on the caller's      * 00111300
*                  DU-AL, the address space must either be the        * 00111400
*                  joiner's address space or be a non-swappable       * 00111500
*                  address space.                                     * 00111600
*                                                                     * 00111700
*                  All the elements must reside in the same space so  * 00111800
*                  that a single ALET can be used to access them.     * 00111900
*                  The keyword ELEMENT identifies the first element   * 00112000
*                  to be processed.  The i'th element describes the   * 00112100
*                  i'th message part.  The location of the next       * 00112200
*                  element is indicated by the keyword NEXTOFF (for   * 00112300
*                  tables) or NEXTPTROFF (for queues).                * 00112400
*                                                                     * 00112500
*                  For MSGACCESS of SYNC, the caller is responsible   * 00112600
*                  for maintaining the integrity of the element       * 00112700
*                  structure until the Message-Out service returns.   * 00112800
*                  For MSGACCESS of ASYNC, the caller is responsible  * 00112900
*                  for maintaining the integrity of the element       * 00113000
*                  structure until the message is completed.  If the  * 00113100
*                  elements or their structure change while being     * 00113200
*                  processed by the Message-Out service, the message  * 00113300
*                  data actually sent may differ from the message     * 00113400
*                  data that the invoker intended to send.            * 00113500
*                                                                     * 00113600
*                  Each element describes how to locate the contents  * 00113700
*                  of one part of the message.  The keyword PARTOFF   * 00113800
*                  or PARTPTROFF is used to indicate whether the      * 00113900
*                  element contains the text of the message part or   * 00114000
*                  the address of the text of the message part.       * 00114100
*                                                                     * 00114200
*                  The length in bytes of each part is indicated by   * 00114300
*                  the keyword PARTLENTBL, PARTLEN, or PARTLENOFF.    * 00114400
*                  PARTLENTBL is used when the part lengths are       * 00114500
*                  contained in a separately addressable table.       * 00114600
*                  PARTLEN is used when each part has the same        * 00114700
*                  length.  PARTLENOFF is used when the element       * 00114800
*                  itself contains the length of the part that it     * 00114900
*                  describes.                                         * 00115000
*                                                                     * 00115100
*                  The PARTALETTBL, PARTALET, or PARTALETOFF keyword  * 00115200
*                  can further qualify the address of each part when  * 00115300
*                  the elements contain a pointer to the text of the  * 00115400
*                  message part (PARTPTROFF).  PARTALETTBL is used    * 00115500
*                  when the part ALETs are contained in a separately  * 00115600
*                  addressable table.  PARTALET is used when each     * 00115700
*                  part has the same ALET.  PARTALETOFF is used when  * 00115800
*                  the element itself contains the ALET of the part   * 00115900
*                  that it describes.                                 * 00116000
*                                                                     * 00116100
*                  If the text of the message part is contained       * 00116200
*                  within the element (PARTOFF), the ALET used to     * 00116300
*                  qualify the address of the text of the message     * 00116400
*                  part is the same as the ALET used to qualify the   * 00116500
*                  address of the element.                            * 00116600
*                                                                     * 00116700
*                  The storage key of the storage area containing     * 00116800
*                  each message part must match the storage protect   * 00116900
*                  key indicated by the MSGSTGKEY keyword.            * 00117000
*                                                                     * 00117100
*                                                                     * 00117200
*                                                                     * 00117300
*                                                                     * 00117400
*              ELEMFORM=TABLE|QUEUE]                                * 00117500
*                  is a required keyword input indicating whether the * 00117600
*                  elements describing the message parts are          * 00117700
*                  structured as a table or as a queue.               * 00117800
*                                                                     * 00117900
*                                                                     * 00118000
*                  ELEMFORM=TABLE                                     * 00118100
*                      indicates that the elements describing the     * 00118200
*                      message parts are structured as a table.       * 00118300
*                                                                     * 00118400
*                                                                     * 00118500
*                      NEXTOFF=xnextoff                               * 00118600
*                          is the name (RS-type), or address in       * 00118700
*                          register (2)-(12), of a required fullword  * 00118800
*                          input that indicates, in bytes, the        * 00118900
*                          relative location of the next element in   * 00119000
*                          the table.  The next element is located by * 00119100
*                          adding the indicated value to the location * 00119200
*                          of the current element.  Typically this    * 00119300
*                          value equals the number of bytes in one    * 00119400
*                          table entry.                               * 00119500
*                                                                     * 00119600
*                                                                     * 00119700
*                                                                     * 00119800
*                  ELEMFORM=QUEUE                                     * 00119900
*                      indicates that the elements describing the     * 00120000
*                      message parts are structured as a queue.       * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*                      NEXTPTROFF=xnextptroff                         * 00120400
*                          is the name (RS-type), or address in       * 00120500
*                          register (2)-(12), of a required fullword  * 00120600
*                          input containing the number of bytes to    * 00120700
*                          offset within an element in order to       * 00120800
*                          locate a PTR(31) field that contains the   * 00120900
*                          address of the next element.  This keyword * 00121000
*                          is used when the elements are structured   * 00121100
*                          as a queue, in which case it provides the  * 00121200
*                          location of the pointer to the next        * 00121300
*                          element.                                   * 00121400
*                                                                     * 00121500
*                                                                     * 00121600
*                                                                     * 00121700
*                                                                     * 00121800
*                      [ENDOFQUEUE=xendofqueue|ZERO]                * 00121900
*                          is the name (RS-type), or address in       * 00122000
*                          register (2)-(12), of an optional 4 byte   * 00122100
*                          input that contains the address which      * 00122200
*                          denotes the end of the queue.  When the    * 00122300
*                          next element pointer located at offset     * 00122400
*                          NEXTPTROFF equals this value, no more      * 00122500
*                          elements remain.  Note there must be at    * 00122600
*                          least one element on the queue.            * 00122700
*                                                                     * 00122800
*                          DEFAULT: ZERO - the end of the queue is    * 00122900
*                          indicated by a zero nextptr                * 00123000
*                                                                     * 00123100
*                                                                     * 00123200
*                                                                     * 00123300
*                                                                     * 00123400
*                                                                     * 00123500
*                                                                     * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*              The following is a set of mutually exclusive keys.     * 00123900
*              This set is required; only one key must be specified.  * 00124000
*                                                                     * 00124100
*                                                                     * 00124200
*              PARTOFF=xpartoff                                       * 00124300
*                  belongs to a set of mutually exclusive keys. It is * 00124400
*                  the name (RS-type), or address in register         * 00124500
*                  (2)-(12), of a fullword input containing the       * 00124600
*                  number of bytes to offset within an element in     * 00124700
*                  order to locate the text of the message part.      * 00124800
*                  This keyword is used when the elements contain the * 00124900
*                  text of the message part.  The ALET used to access * 00125000
*                  the element is used to access the text of the      * 00125100
*                  message part.                                      * 00125200
*                                                                     * 00125300
*              PARTPTROFF=xpartptroff                                 * 00125400
*                  belongs to a set of mutually exclusive keys. It is * 00125500
*                  the name (RS-type), or address in register         * 00125600
*                  (2)-(12), of a fullword input containing the       * 00125700
*                  number of bytes to offset within a part element in * 00125800
*                  order to locate a PTR(31) field that contains the  * 00125900
*                  address of the text of the message part.  This     * 00126000
*                  keyword is used when the part elements contain a   * 00126100
*                  pointer to the text of the message part.  One of   * 00126200
*                  the keywords PARTALETTBL, PARTALET, or PARTALETOFF * 00126300
*                  is coded to indicate the ALET that qualifies the   * 00126400
*                  address of the text of the message part.           * 00126500
*                                                                     * 00126600
*                                                                     * 00126700
*                  The following is a set of mutually exclusive keys. * 00126800
*                  This set is optional; only one key may be          * 00126900
*                  specified.                                         * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*                  [PARTALET=xpartalet|ZERO                         * 00127300
*                      belongs to a set of mutually exclusive keys.   * 00127400
*                      It is the name (RS-type), or address in        * 00127500
*                      register (2)-(12), of an optional fullword     * 00127600
*                      input that contains the one ALET that          * 00127700
*                      qualifies the address of every part of the     * 00127800
*                      message.  The ALET must be zero or a valid     * 00127900
*                      public entry on the caller's Dispatchable Unit * 00128000
*                      Access List (DU-AL), or a valid entry for a    * 00128100
*                      common area data space.                        * 00128200
*                      DEFAULT: ZERO - the message data resides in    * 00128300
*                      the caller's primary address space.            * 00128400
*                                                                     * 00128500
*                  PARTALETOFF=xpartaletoff                         * 00128600
*                      belongs to a set of mutually exclusive keys.   * 00128700
*                      It is the name (RS-type), or address in        * 00128800
*                      register (2)-(12), of an optional fullword     * 00128900
*                      input containing the number of bytes to offset * 00129000
*                      within a part element in order to locate a     * 00129100
*                      FIXED(32) field that contains an ALET that     * 00129200
*                      qualifies the address of an individual message * 00129300
*                      part.  The ALET must be zero or a valid public * 00129400
*                      entry on the caller's Dispatchable Unit Access * 00129500
*                      List (DU-AL), or a valid entry for a common    * 00129600
*                      area data space.                               * 00129700
*                                                                     * 00129800
*                  PARTALETTBL=xpartalettbl]                        * 00129900
*                      belongs to a set of mutually exclusive keys.   * 00130000
*                      It is the name (RS-type), or address in        * 00130100
*                      register (2)-(12), of an optional character    * 00130200
*                      input containing a table of FIXED(32) ALETs.   * 00130300
*                      There must be an entry in the table for each   * 00130400
*                      element processed.  The table must be aligned  * 00130500
*                      on a word boundary.  Each entry in the table   * 00130600
*                      indicates the ALET that qualifies the address  * 00130700
*                      of one part of the message.  The i'th entry in * 00130800
*                      the table provides the ALET of the i'th        * 00130900
*                      message part.  Each ALET must be zero or a     * 00131000
*                      valid public entry on the caller's             * 00131100
*                      Dispatchable Unit Access List (DU-AL), or a    * 00131200
*                      valid entry for a common area data space.      * 00131300
*                                                                     * 00131400
*                                                                     * 00131500
*                                                                     * 00131600
*                  End of a set of mutually exclusive optional keys.  * 00131700
*                  DEFAULT: PARTALET                                  * 00131800
*                                                                     * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*              End of a set of mutually exclusive required keys.      * 00132300
*                                                                     * 00132400
*                                                                     * 00132500
*                                                                     * 00132600
*              The following is a set of mutually exclusive keys.     * 00132700
*              This set is required; only one key must be specified.  * 00132800
*                                                                     * 00132900
*                                                                     * 00133000
*              PARTLEN=xpartlen                                       * 00133100
*                  belongs to a set of mutually exclusive keys. It is * 00133200
*                  the name (RS-type), or address in register         * 00133300
*                  (2)-(12), of a fullword input containing the       * 00133400
*                  length in bytes of an individual message part      * 00133500
*                  PARTLEN is coded when all the message parts have   * 00133600
*                  the same length.  The length of the entire message * 00133700
*                  is equal to PARTLEN times the number of elements   * 00133800
*                  processed.                                         * 00133900
*                                                                     * 00134000
*                  For MSGACCESS of SYNC, PARTLEN must be in the      * 00134100
*                  decimal range of 0-62464 bytes.  The length of the * 00134200
*                  entire message must be in the decimal range of     * 00134300
*                  0-62464 bytes.                                     * 00134400
*                                                                     * 00134500
*                  For MSGACCESS of ASYNC, PARTLEN can be in the      * 00134600
*                  decimal range of 0 to 134,217,728 (128M) bytes.    * 00134700
*                  The length of the entire message must be in the    * 00134800
*                  decimal range of 0 to 134,217,728 (128M) bytes.    * 00134900
*                  If the length of the entire message exceeds 62464  * 00135000
*                  (61K) bytes, both the sending member and target    * 00135100
*                  member must have specified YES for the GT61KMSG    * 00135200
*                  keyword when the IXCJOIN macro was invoked to join * 00135300
*                  the group.  Use the IXCQUERY service to determine  * 00135400
*                  whether the large message delivery protocol is     * 00135500
*                  supported for a particular target member.          * 00135600
*                                                                     * 00135700
*              PARTLENOFF=xpartlenoff                                 * 00135800
*                  belongs to a set of mutually exclusive keys. It is * 00135900
*                  the name (RS-type), or address in register         * 00136000
*                  (2)-(12), of a fullword input containing the       * 00136100
*                  number of bytes to offset within a part element in * 00136200
*                  order to locate a FIXED(32) field that contains    * 00136300
*                  the length in bytes of an individual message part. * 00136400
*                  (decimal 0-62464 bytes).  If the length of the     * 00136500
*                  part is zero, the address and ALET of the message  * 00136600
*                  part are ignored.  Gathering of the message text   * 00136700
*                  continues with the next element.  The length of    * 00136800
*                  the entire message equals the sum of the lengths   * 00136900
*                  found at offset PARTLENOFF within the elements     * 00137000
*                  processed.                                         * 00137100
*                                                                     * 00137200
*                  For MSGACCESS of SYNC, the length of an individual * 00137300
*                  message part must be in the decimal range of       * 00137400
*                  0-62464 bytes.  The length of the entire message   * 00137500
*                  must be decimal 0-62464 bytes.                     * 00137600
*                                                                     * 00137700
*                  For MSGACCESS of ASYNC, the length of an           * 00137800
*                  individual part must be in the decimal range of 0  * 00137900
*                  to 134,217,728 (128M) bytes.  The length of the    * 00138000
*                  entire message must be in the decimal range of 0   * 00138100
*                  to 134,217,728 (128M) bytes.  If the length of the * 00138200
*                  entire message exceeds 62464 (61K) bytes, both the * 00138300
*                  sending member and target member must have         * 00138400
*                  specified YES for the GT61KMSG keyword when the    * 00138500
*                  IXCJOIN macro was invoked to join the group.  Use  * 00138600
*                  the IXCQUERY service to determine whether the      * 00138700
*                  large message delivery protocol is supported for a * 00138800
*                  particular target member.                          * 00138900
*                                                                     * 00139000
*                  If the target member requires the lengths of the   * 00139100
*                  individual parts, the source member and target     * 00139200
*                  member must provide their own protocol to make     * 00139300
*                  this information known.  One could, for example,   * 00139400
*                  send the part lengths as part of the message data  * 00139500
*                  or the message control data.                       * 00139600
*                                                                     * 00139700
*              PARTLENTBL=xpartlentbl]                                * 00139800
*                  belongs to a set of mutually exclusive keys. It is * 00139900
*                  the name (RS-type), or address in register         * 00140000
*                  (2)-(12), of a character input containing a table  * 00140100
*                  of FIXED(32) lengths.  There must be an entry in   * 00140200
*                  the table for each element processed.  The table   * 00140300
*                  must be aligned on a word boundary.  Each entry in * 00140400
*                  the table indicates the length in bytes of one     * 00140500
*                  part of the message.  The i'th entry in the table  * 00140600
*                  provides the length of the i'th message part.  If  * 00140700
*                  the i'th entry in PARTLENTBL is zero, the address  * 00140800
*                  and ALET of the i'th message part are ignored.     * 00140900
*                  The length of the entire message equals the sum of * 00141000
*                  the entries in PARTLENTBL.                         * 00141100
*                                                                     * 00141200
*                  For MSGACCESS of SYNC, the length of an individual * 00141300
*                  message part must be in the decimal range of       * 00141400
*                  0-62464 bytes.  The length of the entire message   * 00141500
*                  must be decimal 0-62464 bytes.                     * 00141600
*                                                                     * 00141700
*                  For MSGACCESS of ASYNC, the length of an           * 00141800
*                  individual part must be in the decimal range of 0  * 00141900
*                  to 134,217,728 (128M) bytes.  The length of the    * 00142000
*                  entire message must be in the decimal range of 0   * 00142100
*                  to 134,217,728 (128M) bytes.  If the length of the * 00142200
*                  entire message exceeds 62464 (61K) bytes, both the * 00142300
*                  sending member and target member must have         * 00142400
*                  specified YES for the GT61KMSG keyword when the    * 00142500
*                  IXCJOIN macro was invoked to join the group.  Use  * 00142600
*                  the IXCQUERY service to determine whether the      * 00142700
*                  large message delivery protocol is supported for a * 00142800
*                  particular target member.                          * 00142900
*                                                                     * 00143000
*                  If the target member requires the lengths of the   * 00143100
*                  individual parts, the source member and target     * 00143200
*                  member must provide their own protocol to make     * 00143300
*                  this information known.  One could, for example,   * 00143400
*                  send the part lengths as part of the message data  * 00143500
*                  or the message control data.                       * 00143600
*                                                                     * 00143700
*                                                                     * 00143800
*                                                                     * 00143900
*              End of a set of mutually exclusive required keys.      * 00144000
*                                                                     * 00144100
*                                                                     * 00144200
*                                                                     * 00144300
*                                                                     * 00144400
*                                                                     * 00144500
*                                                                     * 00144600
*                                                                     * 00144700
*      [MSGSTGKEY=xmsgstgkey|ANY]                                   * 00144800
*          is the name (RS-type), or address in register (2)-(12), of * 00144900
*          an optional 8 bit input containing the storage key to be   * 00145000
*          used when fetching the message data.  The message data is  * 00145100
*          fetched from either the storage area indicated by the      * 00145200
*          MSGBUF keyword, or the storage area at offset PARTOFF      * 00145300
*          within the i'th element, or from the storage area pointed  * 00145400
*          to by the pointer at offset PARTPTROFF within the i'th     * 00145500
*          element.  The high order nibble contains the storage key,  * 00145600
*          the low order nibble is ignored.  For example, set 'kkkk'  * 00145700
*          in the binary bit string 'kkkkxxxx'B to correspond to the  * 00145800
*          desired storage key.                                       * 00145900
*                                                                     * 00146000
*          If MSGSTGKEY is not specified, then the message data can   * 00146100
*          reside in any storage key.                                 * 00146200
*                                                                     * 00146300
*          Note that key-controlled protection will permit the        * 00146400
*          message data to be moved successfully if either the access * 00146500
*          key specified by MSGSTGKEY matches the storage protect key * 00146600
*          of the indicated storage areas, or if the indicated        * 00146700
*          storage areas are not fetch protected.                     * 00146800
*                                                                     * 00146900
*          DEFAULT: ANY - the message can reside in any storage key.  * 00147000
*                                                                     * 00147100
*                                                                     * 00147200
*                                                                     * 00147300
*                                                                     * 00147400
*      [MSGACCESS=SYNC|ASYNC]                                       * 00147500
*          is an optional keyword input that indicates how XCF can    * 00147600
*          access the storage containing the text of the message.     * 00147700
*          DEFAULT: SYNC                                              * 00147800
*                                                                     * 00147900
*                                                                     * 00148000
*          MSGACCESS=SYNC                                             * 00148100
*              The storage containing the text of the message must be * 00148200
*              accessed synchronously with the Message-Out request.   * 00148300
*              After the Message-Out service returns, the sender is   * 00148400
*              free to dispose of the storage containing the message. * 00148500
*              For multipart messages, the sender can dispose of the  * 00148600
*              storage containing the elements and/or tables that     * 00148700
*              define the parts of the message as well.               * 00148800
*                                                                     * 00148900
*          MSGACCESS=ASYNC                                            * 00149000
*              The Message-Out Service is allowed to access the       * 00149100
*              storage containing the text of the message after the   * 00149200
*              Message-Out request returns to the sender.  Note that  * 00149300
*              specifying MSGACCESS of ASYNC does not necessarily     * 00149400
*              imply that XCF will access the storage asynchronously. * 00149500
*              When possible, XCF will attempt to use synchronous     * 00149600
*              access.                                                * 00149700
*                                                                     * 00149800
*              If the Message-Out service returns with RETCODE=4 and  * 00149900
*              RSNCODE='410'x, the sender must preserve the storage   * 00150000
*              containing the message text until the message is       * 00150100
*              completed.  For multipart messages, the elements       * 00150200
*              and/or tables that define the parts of the message     * 00150300
*              must be preserved as well.  For any other              * 00150400
*              return/reason code, the sender is free to dispose of   * 00150500
*              the storage as if MSGACCESS of SYNC was specified.     * 00150600
*                                                                     * 00150700
*              XCF notifies the sender that a message is complete by  * 00150800
*              calling the message notify user exit routine.  The XCF * 00150900
*              Message Control Query Service (IXCMSGC) also indicates * 00151000
*              when a message is complete (in IXCYMQAA,               * 00151100
*              MqaMosCompleted='1'B for summary query and             * 00151200
*              MqaModCompleted='1'B for detail query).                * 00151300
*                                                                     * 00151400
*              If the sending member becomes inactive before an ASYNC * 00151500
*              message is completed, the Message-Out Service may      * 00151600
*              terminate processing for the message.  In particular,  * 00151700
*              the message may not be delivered to the target         * 00151800
*              member(s) once the sender becomes inactive.  In        * 00151900
*              contrast, for MSGACCESS of SYNC, delivery of messages  * 00152000
*              that were accepted by the Message-Out Service          * 00152100
*              continues even after the sender becomes inactive.      * 00152200
*                                                                     * 00152300
*              Note that if the sending member's associated task      * 00152400
*              and/or address space (see keyword MEMASSOC on the      * 00152500
*              IXCJOIN service) is undergoing termination, XCF will   * 00152600
*              not be able to asynchronously access the sender's data * 00152700
*              areas.  Thus a message-out request issued from the     * 00152800
*              sender's task and/or address space resource manager    * 00152900
*              termination routine that completes with RETCODE=4      * 00153000
*              RSNCODE='410'x will not be able to successfully        * 00153100
*              complete the send of the message.                      * 00153200
*                                                                     * 00153300
*              To send messages longer than 62464 bytes, MSGACCESS of * 00153400
*              ASYNC must be specified.  Note however, that RETCODE=4 * 00153500
*              RSNCODE='410'x indicating that the sender must         * 00153600
*              preserve the message until the message is completed is * 00153700
*              not restricted to such messages.                       * 00153800
*                                                                     * 00153900
*              A nonzero TIMEOUT value is required if MSGACCESS of    * 00154000
*              ASYNC is specified.                                    * 00154100
*                                                                     * 00154200
*              When MSGACCESS of ASYNC is specified, the Dispatchable * 00154300
*              Unit Access List (DUAL) under which the caller is      * 00154400
*              running must adhere to certain restrictions.  It must  * 00154500
*              never have had access to a subspace, it must never     * 00154600
*              have had access to more than 255 spaces of any kind at * 00154700
*              one time, and it must not be full.  If the Message-out * 00154800
*              service is unable to process the request because the   * 00154900
*              DUAL is unsuitable, the request is rejected with       * 00155000
*              RETCODE 'C'x and an appropriate RSNCODE.               * 00155100
*                                                                     * 00155200
*                                                                     * 00155300
*                                                                     * 00155400
*                                                                     * 00155500
*                                                                     * 00155600
*                                                                     * 00155700
*      [NOTIFY=NO|YES                                               * 00155800
*          is an optional keyword input that indicates whether the    * 00155900
*          member is to be notified of message completion.            * 00156000
*                                                                     * 00156100
*          A message without response is considered complete as soon  * 00156200
*          as XCF has initiated the send of the message.  If the      * 00156300
*          message is broadcast to multiple targets, the message is   * 00156400
*          considered complete when XCF has initiated the send of the * 00156500
*          message to each valid target member.  Note that the        * 00156600
*          message is still considered complete even if it takes more * 00156700
*          than one attempt for XCF to successfully send the message  * 00156800
*          to an intended target member (multiple attempts might be   * 00156900
*          needed to resolve things like I/O errors).  In particular, * 00157000
*          the fact that a send without response is completed implies * 00157100
*          nothing about whether the message has been delivered to    * 00157200
*          the target member or even whether the message data has     * 00157300
*          been transferred to the system on which the target member  * 00157400
*          resides.                                                   * 00157500
*                                                                     * 00157600
*          A message with response is considered complete when the    * 00157700
*          expected response(s) arrive.                               * 00157800
*                                                                     * 00157900
*          Any message whose timeout value expires is considered      * 00158000
*          complete.  The Message Control COMPLETION Service can also * 00158100
*          be used to FORCE a message to be considered complete.      * 00158200
*          DEFAULT: NO                                                * 00158300
*                                                                     * 00158400
*                                                                     * 00158500
*          [NOTIFY=NO]                                                * 00158600
*              No notification capability is required.  This option   * 00158700
*              is provided to maintain compatibility with previous    * 00158800
*              versions of the message-out service.                   * 00158900
*                                                                     * 00159000
*              At its discretion, XCF may maintain status information * 00159100
*              related to the message up until the time the message   * 00159200
*              is completed.  If such status information is           * 00159300
*              maintained, the message can be manipulated with the    * 00159400
*              Message Control Service until the message is           * 00159500
*              completed.  Upon completion of the message, XCF will   * 00159600
*              discard any such status information.                   * 00159700
*                                                                     * 00159800
*          [NOTIFY=YES                                                * 00159900
*              A notification capability is required.  XCF will       * 00160000
*              maintain status information related to the message up  * 00160100
*              until the time the message is completed.  Upon         * 00160200
*              completion of the message, the state of the message    * 00160300
*              and the NOTIFYIF keyword determines how XCF is to      * 00160400
*              proceed.  If notification is warranted, XCF preserves  * 00160500
*              status information for the message.  The NOTIFYBY      * 00160600
*              keyword then determines the method by which XCF        * 00160700
*              performs the notification of message completion.       * 00160800
*                                                                     * 00160900
*              Note that notification is applicable only if the       * 00161000
*              message-out service accepts the message for delivery   * 00161100
*              (return code 0 or 4).                                  * 00161200
*                                                                     * 00161300
*                                                                     * 00161400
*              [USERDATA=xuserdata|ALLZERO]                         * 00161500
*                  is the name (RS-type), or address in register      * 00161600
*                  (2)-(12), of an optional 8 character input         * 00161700
*                  containing user data that is to be associated with * 00161800
*                  the message.  This data will be presented in the   * 00161900
*                  Message Notification Parameter List (mapped by     * 00162000
*                  IXCYMNPL) with the message if the message must be  * 00162100
*                  presented to the notification exit.                * 00162200
*                                                                     * 00162300
*                  This data is not delivered to the targets of the   * 00162400
*                  message.                                           * 00162500
*                  DEFAULT: ALLZERO - the user data associated with   * 00162600
*                  the message will consist of hexadecimal zeros.     * 00162700
*                                                                     * 00162800
*                                                                     * 00162900
*                                                                     * 00163000
*                                                                     * 00163100
*              [NOTIFYIF=COMPLETED|FAILED]                          * 00163200
*                  is an optional keyword input that identifies the   * 00163300
*                  conditions under which notification is to be       * 00163400
*                  provided.                                          * 00163500
*                  DEFAULT: COMPLETED                                 * 00163600
*                                                                     * 00163700
*                                                                     * 00163800
*                  [NOTIFYIF=COMPLETED]                               * 00163900
*                      Provide notification when the message is       * 00164000
*                      completed.  Thus notification occurs           * 00164100
*                      regardless of whether the message succeeded or * 00164200
*                      failed.                                        * 00164300
*                                                                     * 00164400
*                  [NOTIFYIF=FAILED]                                  * 00164500
*                      Provide notification only if the message       * 00164600
*                      failed.  For the purpose of completion         * 00164700
*                      notification, a message without response is    * 00164800
*                      considered to have failed if the message was   * 00164900
*                      not sent to one of the possible target         * 00165000
*                      members.  A message with response is           * 00165100
*                      considered to have failed if XCF did not       * 00165200
*                      receive a response from every possible target  * 00165300
*                      member.  Note that skipped targets are ignored * 00165400
*                      for the purpose of determining whether the     * 00165500
*                      message failed.  A skipped target is one whose * 00165600
*                      member token from the TARGETS array was zero.  * 00165700
*                                                                     * 00165800
*                                                                     * 00165900
*                                                                     * 00166000
*                                                                     * 00166100
*                                                                     * 00166200
*                                                                     * 00166300
*              [NOTIFYBY=EXIT]]                                      * 00166400
*                  is an optional keyword input that indicates how    * 00166500
*                  the member is to be notified of message            * 00166600
*                  completion.                                        * 00166700
*                  DEFAULT: EXIT                                      * 00166800
*                                                                     * 00166900
*                                                                     * 00167000
*                  [NOTIFYBY=EXIT                                     * 00167100
*                      XCF will schedule a notify exit routine to     * 00167200
*                      process the message.                           * 00167300
*                                                                     * 00167400
*                                                                     * 00167500
*                      [NOTIFYEXIT=xnotifyexit|FROMJOIN]]           * 00167600
*                          is an optional input.  It is the name      * 00167700
*                          (RS-type), or address in register          * 00167800
*                          (2)-(12), of a 31 bit notify exit routine  * 00167900
*                          receive control when the message is        * 00168000
*                          complete.  This routine receives control   * 00168100
*                          running as an SRB scheduled to the address * 00168200
*                          space that was primary when the sending    * 00168300
*                          member joined the group.                   * 00168400
*                          DEFAULT: FROMJOIN - use NOTIFYEXIT         * 00168500
*                          specified on IXCJOIN                       * 00168600
*                                                                     * 00168700
*                                                                     * 00168800
*                                                                     * 00168900
*                                                                     * 00169000
*                                                                     * 00169100
*                                                                     * 00169200
*                                                                     * 00169300
*                                                                     * 00169400
*              [RETMSGOTOKEN=xretmsgotoken]]                          * 00169500
*                  is the name (RS-type), or address in register      * 00169600
*                  (2)-(12), of an optional 16 character output area  * 00169700
*                  that is to contain a token that can be used to     * 00169800
*                  identify this message to the XCF Message Control   * 00169900
*                  Service (IXCMSGC).                                 * 00170000
*                                                                     * 00170100
*                  The storage area indicated by RETMSGOTOKEN must    * 00170200
*                  either be in the caller's primary address space or * 00170300
*                  in an address/data space that is addressable       * 00170400
*                  through a public entry on the caller's             * 00170500
*                  dispatchable unit access list (DU-AL), or in a     * 00170600
*                  common area data space.                            * 00170700
*                                                                     * 00170800
*                                                                     * 00170900
*                                                                     * 00171000
*                                                                     * 00171100
*                                                                     * 00171200
*                                                                     * 00171300
*                                                                     * 00171400
*                                                                     * 00171500
*      [LINKAGE=SYSTEM|INTERNAL]                                    * 00171600
*          is an optional keyword input indicating linkage to use     * 00171700
*          when calling the Message-out Service routine.  This        * 00171800
*          keyword is not part of the intended IXCMSGO interface.     * 00171900
*          Its use is restricted to the XCF component of MVS.         * 00172000
*                                                                     * 00172100
*          Do not code the LINKAGE keyword.  Coding the LINKAGE       * 00172200
*          keyword causes the assemble to fail.                       * 00172300
*          DEFAULT: SYSTEM                                            * 00172400
*                                                                     * 00172500
*                                                                     * 00172600
*          [LINKAGE=SYSTEM]                                           * 00172700
*              Use linkage intended as the interface to the           * 00172800
*              message-out service.                                   * 00172900
*                                                                     * 00173000
*          [LINKAGE=INTERNAL                                          * 00173100
*              This keyword value is not part of the intended         * 00173200
*              interface.  Its use is restricted to the XCF component * 00173300
*              of MVS.                                                * 00173400
*                                                                     * 00173500
*                                                                     * 00173600
*              XCFDATA=xxcfdata]                                      * 00173700
*                  is the name (RS-type), or address in register      * 00173800
*                  (2)-(12), of a required fullword input containing  * 00173900
*                  internal XCF data for the service routine.  This   * 00174000
*                  keyword is not part of the intended IXCMSGO        * 00174100
*                  interface.  Its use is restricted to the XCF       * 00174200
*                  component of MVS.                                  * 00174300
*                                                                     * 00174400
*                                                                     * 00174500
*                                                                     * 00174600
*                                                                     * 00174700
*                                                                     * 00174800
*                                                                     * 00174900
*                                                                     * 00175000
*                                                                     * 00175100
*      [RETCODE=xretcode]                                             * 00175200
*          is the name (RS-type) of an optional fullword output       * 00175300
*          variable, or register (2)-(12), into which the return code * 00175400
*          is to be copied from GPR 15.                               * 00175500
*                                                                     * 00175600
*                                                                     * 00175700
*                                                                     * 00175800
*                                                                     * 00175900
*      [RSNCODE=xrsncode]                                             * 00176000
*          is the name (RS-type) of an optional fullword output       * 00176100
*          variable, or register (2)-(12), into which the reason code * 00176200
*          is to be copied from GPR 0.                                * 00176300
*                                                                     * 00176400
*                                                                     * 00176500
*                                                                     * 00176600
*                                                                     * 00176700
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00176800
*          is an optional byte input decimal value in the "0-3" range * 00176900
*          that specifies the macro version.  PLISTVER is the only    * 00177000
*          key allowed on the list form of MF and determines which    * 00177100
*          parameter list is generated.  The macro keys associated    * 00177200
*          with each supported version of the macro are listed in     * 00177300
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00177400
*          instead of a number, and the parameter list will be of the * 00177500
*          largest size currently supported. This size may grow from  * 00177600
*          release to release (thus possibly affecting the amount of  * 00177700
*          storage needed by your program).  If your program can      * 00177800
*          tolerate this, IBM recommends that you always specify MAX  * 00177900
*          when creating the list form parameter list as that will    * 00178000
*          ensure that the list form parameter list is always long    * 00178100
*          enough to hold whatever parameters might be specified on   * 00178200
*          the execute form.                                          * 00178300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00178400
*          default is the lowest version which allows all of the      * 00178500
*          parameters specified on the invocation to be processed.    * 00178600
*                                                                     * 00178700
*                                                                     * 00178800
*                                                                     * 00178900
*                                                                     * 00179000
*      [MF=S|L|E]                                                   * 00179100
*          is an optional keyword input which specifies the macro     * 00179200
*          form.                                                      * 00179300
*          DEFAULT: S                                                 * 00179400
*                                                                     * 00179500
*                                                                     * 00179600
*          [MF=S]                                                     * 00179700
*              specifies the standard form of the macro.  The "S"     * 00179800
*              form generates code to put the parameters into an      * 00179900
*              in-line parameter list and invoke the desired service. * 00180000
*              Full checking for required macro keys is done along    * 00180100
*              with supplying defaults for omitted optional           * 00180200
*              parameters.                                            * 00180300
*                                                                     * 00180400
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00180500
*              specifies the list form of the macro.  The "L" form    * 00180600
*              defines an area to be used for the parameter list.     * 00180700
*              Only the PLISTVER key may be specified on the          * 00180800
*              invocation.  All other macro parameters are flagged as * 00180900
*              errors.  If PLISTVER is not specified, the original    * 00181000
*              parameter list definition is used.                     * 00181100
*                                                                     * 00181200
*            ,xmfctrl                                                 * 00181300
*              is a required input.  It is the name of a storage area * 00181400
*              for the parameter list.                                * 00181500
*                                                                     * 00181600
*            ,xmfattr|0D                                            * 00181700
*              is an optional 60 character input string that varies   * 00181800
*              from 1 to 60 characters. Use it to force boundary      * 00181900
*              alignment of the parameter list. Use only 0F or 0D.    * 00182000
*              DEFAULT: 0D which forces the parameter list to a       * 00182100
*              doubleword boundary.                                   * 00182200
*                                                                     * 00182300
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00182400
*              specifies the execute form of the macro.  The "E" form * 00182500
*              generates code to put the parameters into the          * 00182600
*              parameter list specified by xmfctrl and provides full  * 00182700
*              syntax checking with default setting.                  * 00182800
*                                                                     * 00182900
*            ,xmfctrl                                                 * 00183000
*              is a required input.  It is the name (RS-type), or     * 00183100
*              address in register (1)-(12), of a storage area for    * 00183200
*              the parameter list.                                    * 00183300
*                                                                     * 00183400
*            ,COMPLETE                                              * 00183500
*              is an optional keyword input which specifies the       * 00183600
*              degree of macro parameter syntax checking.             * 00183700
*              DEFAULT: COMPLETE                                      * 00183800
*                                                                     * 00183900
*                                                                     * 00184000
*              COMPLETE                                               * 00184100
*                  Checking for required macro keys is done and       * 00184200
*                  defaults are supplied for omitted optional         * 00184300
*                  parameters.                                        * 00184400
*                                                                     * 00184500
*                                                                     * 00184600
*                                                                     * 00184700
*                                                                     * 00184800
*                                                                     * 00184900
*                                                                     * 00185000
*                                                                     * 00185100
*01* RETURN CODES:                                                    * 00185200
*                                                                     * 00185300
*                                                                     * 00185400
*       0         IxcRetCodeOk:  Successful completion.  Message has  * 00185500
*                 been accepted for delivery.  For a send to GROUP,   * 00185600
*                 the message was accepted for delivery to each       * 00185700
*                 target member.                                      * 00185800
*                                                                     * 00185900
*       4         IxcRetCodeWarning:  Message accepted for delivery,  * 00186000
*                 but with exceptional circumstances.                 * 00186100
*                                                                     * 00186200
*                 HEX REASON       MEANING                            * 00186300
*                 CODE                                                * 00186400
*                                                                     * 00186500
*                                                                     * 00186600
*                 401         ixcMsgoRsnSendPending:  Send message    * 00186700
*                             pending.  The send to the requested     * 00186800
*                             target member could not be initiated    * 00186900
*                             immediately and is pending.  XCF will   * 00187000
*                             continue trying to send the message     * 00187100
*                             until the specified TIMEOUT value       * 00187200
*                             expires.                                * 00187300
*                                                                     * 00187400
*                 402         ixcMsgoRsnBcPendingNoRejects:           * 00187500
*                             Broadcast pending, no rejections.  The  * 00187600
*                             send to one or more target members      * 00187700
*                             could not be initiated immediately and  * 00187800
*                             is pending.  No send was rejected.  XCF * 00187900
*                             will continue trying to send the        * 00188000
*                             pending message(s) until the specified  * 00188100
*                             TIMEOUT value expires.                  * 00188200
*                                                                     * 00188300
*                 403         ixcMsgoRsnBcPendingWithRejects:         * 00188400
*                             Broadcast pending, some send(s)         * 00188500
*                             rejected.  The send to one or more      * 00188600
*                             target members could not be initiated   * 00188700
*                             immediately and is pending.  The send   * 00188800
*                             for at least one target member was      * 00188900
*                             rejected.  XCF will continue trying to  * 00189000
*                             send the pending message(s) until the   * 00189100
*                             specified TIMEOUT value expires.        * 00189200
*                                                                     * 00189300
*                 404         ixcMsgoRsnBcCompleteWithRejects:        * 00189400
*                             Broadcast completed, some send(s)       * 00189500
*                             rejected.  No sends are pending.  The   * 00189600
*                             send for at least one target member was * 00189700
*                             rejected.                               * 00189800
*                                                                     * 00189900
*                 0405xxxx    ixcMsgoRsnRetMsgoTokenNoAccess:         * 00190000
*                             RETMSGOTOKEN not accessible.  The       * 00190100
*                             Message-Out service was not able to     * 00190200
*                             store a message token in the storage    * 00190300
*                             area indicated by RETMSGOTOKEN.  The    * 00190400
*                             low order halfword of the reason code   * 00190500
*                             (xxxx) indicates the reason code that   * 00190600
*                             would have been returned if the storage * 00190700
*                             area indicated by RETMSGOTOKEN had been * 00190800
*                             accessible.                             * 00190900
*                                                                     * 00191000
*                 410         ixcMsgoRsnAsyncSendPending:  Send       * 00191100
*                             message pending.  The send to a         * 00191200
*                             requested target member could not be    * 00191300
*                             initiated immediately and is pending.   * 00191400
*                             XCF will continue trying to send the    * 00191500
*                             message until the specified TIMEOUT     * 00191600
*                             value expires.  This reason code is     * 00191700
*                             applicable only when MSGACCESS of ASYNC * 00191800
*                             is specified.                           * 00191900
*                                                                     * 00192000
*                             The sender must preserve the storage    * 00192100
*                             containing the text of the message      * 00192200
*                             until the message is completed.  For    * 00192300
*                             multipart messages, the storage         * 00192400
*                             containing the elements that describe   * 00192500
*                             the parts of the message must be        * 00192600
*                             preserved as well.                      * 00192700
*                                                                     * 00192800
*                                                                     * 00192900
*                                                                     * 00193000
*       8         IxcRetCodeParmError:  Parameters are not valid.     * 00193100
*                                                                     * 00193200
*                 If the error was detected while gathering message   * 00193300
*                 data from more than one buffer area (MULTIPART is   * 00193400
*                 YES) and the error can be associated with a         * 00193500
*                 particular part, the index of the part and the      * 00193600
*                 address of the element that describes the part are  * 00193700
*                 placed in the parameter list.                       * 00193800
*                                                                     * 00193900
*                 HEX REASON       MEANING                            * 00194000
*                 CODE                                                * 00194100
*                                                                     * 00194200
*                                                                     * 00194300
*                 4           ixcMsgoRsnSenderNotValid:  Member token * 00194400
*                             does not identify an active member      * 00194500
*                             associated with the primary address     * 00194600
*                             space current when the Message-Out      * 00194700
*                             service was invoked.                    * 00194800
*                                                                     * 00194900
*                 8           ixcMsgoRsnTargetNotValid:  TARGET not   * 00195000
*                             valid.  Either the target member token  * 00195100
*                             is not valid, or the target member is   * 00195200
*                             not in the same group as the sending    * 00195300
*                             member, or the target member is no      * 00195400
*                             longer active in the group.             * 00195500
*                                                                     * 00195600
*                 C           ixcMsgoRsnMsgLenNotValid:  Message      * 00195700
*                             length not valid.  For MSGACCESS of     * 00195800
*                             SYNC, total message length is not in    * 00195900
*                             the range 0-62464 (decimal).  For       * 00196000
*                             MSGACCESS of ASYNC, total message       * 00196100
*                             length is not in the range 0 to         * 00196200
*                             134,217,728 (decimal) and/or the        * 00196300
*                             sending member did not specify YES for  * 00196400
*                             the GT61KMSG keyword when it invoked    * 00196500
*                             IXCJOIN to join the group.              * 00196600
*                                                                     * 00196700
*                 10          ixcMsgoRsnMsgbufBadStg:  Message data   * 00196800
*                             not accessible.  The storage named by   * 00196900
*                             MSGBUF is not accessible.               * 00197000
*                                                                     * 00197100
*                 14          ixcMsgoRsnMsgCntlBadAlet:  The ALET     * 00197200
*                             that qualifies the address of the       * 00197300
*                             message control data (MSGCNTL) is       * 00197400
*                             neither zero nor a valid entry on the   * 00197500
*                             caller's Dispatchable Unit Access List  * 00197600
*                             (DU-AL), nor a valid entry for a common * 00197700
*                             area data space.                        * 00197800
*                                                                     * 00197900
*                 18          ixcMsgoRsnMsgCntlBadStg:  Message       * 00198000
*                             control data (MSGCNTL) is not           * 00198100
*                             accessible.                             * 00198200
*                                                                     * 00198300
*                 1C          ixcMsgoRsnTargetNoMsgExit:  Target      * 00198400
*                             member does not have a message exit     * 00198500
*                                                                     * 00198600
*                 40          ixcMsgoRsnPlistRsvdNotValid:  Reserved  * 00198700
*                             field is not 0.  The parameter list has * 00198800
*                             been corrupted.                         * 00198900
*                                                                     * 00199000
*                 100         ixcMsgoRsnPlistBadAlet:  The ALET that  * 00199100
*                             qualifies the address of the parameter  * 00199200
*                             list is not zero.                       * 00199300
*                                                                     * 00199400
*                 104         ixcMsgoRsnPlistVersionNotValid:         * 00199500
*                             Version number in parameter list is not * 00199600
*                             valid.  The release level of XCF on     * 00199700
*                             which the caller is running does not    * 00199800
*                             support this version of the XCF         * 00199900
*                             Message-Out service.                    * 00200000
*                                                                     * 00200100
*                 10C         ixcMsgoRsnPlistBadStg:  Parameter list  * 00200200
*                             is not accessible.                      * 00200300
*                                                                     * 00200400
*                 11C         ixcMsgoRsnNotEnabled:  Program error.   * 00200500
*                             Caller must be enabled.                 * 00200600
*                                                                     * 00200700
*                 12C         ixcMsgoRsnLockHeld:  Program error.     * 00200800
*                             Caller must not hold locks.             * 00200900
*                                                                     * 00201000
*                 208         ixcMsgoRsnMsgbufBadAlet:  Message data  * 00201100
*                             ALET is not valid.  The ALET that       * 00201200
*                             qualifies the address of MSGBUF is      * 00201300
*                             neither zero nor a valid entry on the   * 00201400
*                             caller's Dispatchable Unit Access List  * 00201500
*                             (DU-AL), nor a valid entry for a common * 00201600
*                             area data space.                        * 00201700
*                                                                     * 00201800
*                 20C         ixcMsgoRsnMsgbufKeyMismatch:  Message   * 00201900
*                             data key mismatch.  The storage area    * 00202000
*                             named by MSGBUF can not be fetched      * 00202100
*                             using the storage key indicated by      * 00202200
*                             MSGSTGKEY.                              * 00202300
*                                                                     * 00202400
*                 210         ixcMsgoRsnPartPtrOffBadStg:  Element    * 00202500
*                             not accessible.  The part pointer at    * 00202600
*                             offset PARTPTROFF within an element     * 00202700
*                             (ELEMENT) is not accessible.  The       * 00202800
*                             fields PART# and ELEMENTPTR in the      * 00202900
*                             parameter list identify the index of    * 00203000
*                             the part and the address of the element * 00203100
*                             that describes the erroneous part.      * 00203200
*                                                                     * 00203300
*                 212         ixcMsgoRsnElementBadAlet:  The ALET     * 00203400
*                             that qualifies the address of an        * 00203500
*                             element (ELEMENT) is neither zero nor a * 00203600
*                             valid entry on the caller's             * 00203700
*                             Dispatchable Unit Access List (DU-AL),  * 00203800
*                             nor a valid entry for a common area     * 00203900
*                             data space.                             * 00204000
*                                                                     * 00204100
*                 213         ixcMsgoRsnNextPtrOffBadStg:  Element    * 00204200
*                             not accessible.  The next element       * 00204300
*                             pointer at offset NEXTPTROFF within an  * 00204400
*                             element (ELEMENT) is not accessible.    * 00204500
*                             The fields PART# and ELEMENTPTR in the  * 00204600
*                             parameter list identify the index of    * 00204700
*                             the part and the address of the element * 00204800
*                             that describes the erroneous part.      * 00204900
*                                                                     * 00205000
*                 214         ixcMsgoRsn#MsgPartsZero:  Number of     * 00205100
*                             message parts (#MSGPARTS) is zero.      * 00205200
*                                                                     * 00205300
*                 215         ixcMsgoRsnTooManyZeroLenParts:  Not     * 00205400
*                             making progress.  The number of message * 00205500
*                             parts (#MSGPARTS) was not specified and * 00205600
*                             more than 65,536 consecutive zero       * 00205700
*                             length parts were processed.  The       * 00205800
*                             elements are assumed to be damaged.     * 00205900
*                                                                     * 00206000
*                 218         ixcMsgoRsnPartPtrOff@BadStg:  Message   * 00206100
*                             data not accessible.  The storage area  * 00206200
*                             pointed to by the pointer field at      * 00206300
*                             offset PARTPTROFF within an element     * 00206400
*                             (ELEMENT) is not accessible.  The       * 00206500
*                             fields PART# and ELEMENTPTR in the      * 00206600
*                             parameter list identify the index of    * 00206700
*                             the part and the address of the element * 00206800
*                             that describes the erroneous part.      * 00206900
*                                                                     * 00207000
*                 219         ixcMsgoRsnPartOffBadStg:  Message data  * 00207100
*                             not accessible.  The storage area at    * 00207200
*                             offset PARTOFF within an element        * 00207300
*                             (ELEMENT) is not accessible.  The       * 00207400
*                             fields PART# and ELEMENTPTR in the      * 00207500
*                             parameter list identify the index of    * 00207600
*                             the part and the address of the element * 00207700
*                             that describes the erroneous part.      * 00207800
*                                                                     * 00207900
*                 21C         ixcMsgoRsnPartPtrOff@KeyMismatch:       * 00208000
*                             Message data key mismatch.  The storage * 00208100
*                             area pointed to by the pointer field at * 00208200
*                             offset PARTPTROFF within an element     * 00208300
*                             (ELEMENT) can not be fetched using the  * 00208400
*                             storage key indicated by MSGSTGKEY.     * 00208500
*                             The fields PART# and ELEMENTPTR in the  * 00208600
*                             parameter list identify the index of    * 00208700
*                             the part and the address of the element * 00208800
*                             that describes the erroneous part.      * 00208900
*                                                                     * 00209000
*                 21D         ixcMsgoRsnPartOffKeyMismatch:  Message  * 00209100
*                             data key mismatch.  The storage area at * 00209200
*                             offset PARTOFF within an element        * 00209300
*                             (ELEMENT) can not be fetched using the  * 00209400
*                             storage key indicated by MSGSTGKEY.     * 00209500
*                             The fields PART# and ELEMENTPTR in the  * 00209600
*                             parameter list identify the index of    * 00209700
*                             the part and the address of the element * 00209800
*                             that describes the erroneous part.      * 00209900
*                                                                     * 00210000
*                 220         ixcMsgoRsnPartLenTblBadStg:  Table of   * 00210100
*                             message part lengths (PARTLENTBL) is    * 00210200
*                             not accessible.                         * 00210300
*                                                                     * 00210400
*                 221         ixcMsgoRsnPartLenTblNotWordBdy:  Table  * 00210500
*                             of message part lengths (PARTLENTBL) is * 00210600
*                             not aligned on a word boundary.         * 00210700
*                                                                     * 00210800
*                 222         ixcMsgoRsnPartLenTblBadAlet:  The ALET  * 00210900
*                             that qualifies the address of the       * 00211000
*                             message parts lengths table             * 00211100
*                             (PARTLENTBL) is neither zero nor a      * 00211200
*                             valid entry on the caller's             * 00211300
*                             Dispatchable Unit Access List (DU-AL),  * 00211400
*                             nor a valid entry for a common area     * 00211500
*                             data space.                             * 00211600
*                                                                     * 00211700
*                 223         ixcMsgoRsnPartLenOffBadStg:  Element    * 00211800
*                             not accessible.  The part length at     * 00211900
*                             offset PARTLENOFF within an element     * 00212000
*                             (ELEMENT) is not accessible.  The       * 00212100
*                             fields PART# and ELEMENTPTR in the      * 00212200
*                             parameter list identify the index of    * 00212300
*                             the part and the address of the element * 00212400
*                             that describes the erroneous part.      * 00212500
*                                                                     * 00212600
*                 224         ixcMsgoRsnMsglenGtSumPartLen:  Message  * 00212700
*                             length not valid.  The total message    * 00212800
*                             length exceeds the sum of the lengths   * 00212900
*                             of the parts.                           * 00213000
*                                                                     * 00213100
*                 225         ixcMsgoRsnPartLenBadLen:  Message       * 00213200
*                             length not valid.  For MSGACCESS of     * 00213300
*                             SYNC, PARTLEN exceeds 62464 (decimal).  * 00213400
*                             For MSGACCESS of ASYNC, PARTLEN exceeds * 00213500
*                             134,217,728 (decimal).  The fields      * 00213600
*                             PART# and ELEMENTPTR in the parameter   * 00213700
*                             list identify the index of the part and * 00213800
*                             the address of the element that         * 00213900
*                             describes the erroneous part.           * 00214000
*                                                                     * 00214100
*                 226         ixcMsgoRsnPartLenTblBadLen:  Message    * 00214200
*                             length not valid.  For MSGACCESS of     * 00214300
*                             SYNC, an entry in PARTLENTBL exceeds    * 00214400
*                             62464 (decimal).  For MSGACCESS of      * 00214500
*                             ASYNC, an entry in PARTLENTBL exceeds   * 00214600
*                             134,217,728 (decimal).  The fields      * 00214700
*                             PART# and ELEMENTPTR in the parameter   * 00214800
*                             list identify the index of the part and * 00214900
*                             the address of the element that         * 00215000
*                             describes the erroneous part.           * 00215100
*                                                                     * 00215200
*                 227         ixcMsgoRsnPartLenOffBadLen:  Message    * 00215300
*                             length not valid.  For MSGACCESS of     * 00215400
*                             SYNC, the part length at offset         * 00215500
*                             PARTLENOFF within an element (ELEMENT)  * 00215600
*                             exceeds 62464 (decimal).  For MSGACCESS * 00215700
*                             of ASYNC, the part length at offset     * 00215800
*                             PARTLENOFF within an element (ELEMENT)  * 00215900
*                             exceeds 134,217,728 (decimal).  The     * 00216000
*                             fields PART# and ELEMENTPTR in the      * 00216100
*                             parameter list identify the index of    * 00216200
*                             the part and the address of the element * 00216300
*                             that describes the erroneous part.      * 00216400
*                                                                     * 00216500
*                 230         ixcMsgoRsnPartAletTblBadStg:  Table of  * 00216600
*                             message part ALETs (PARTALETTBL) is not * 00216700
*                             accessible.                             * 00216800
*                                                                     * 00216900
*                 231         ixcMsgoRsnPartAletTblNotWordBdy:  Table * 00217000
*                             of message part ALETs (PARTALETTBL) is  * 00217100
*                             not aligned on a word boundary.         * 00217200
*                                                                     * 00217300
*                 232         ixcMsgoRsnPartAletTblBadAlet:  The ALET * 00217400
*                             that qualifies the address of the       * 00217500
*                             message parts ALET table (PARTALETTBL)  * 00217600
*                             is neither zero nor a valid entry on    * 00217700
*                             the caller's Dispatchable Unit Access   * 00217800
*                             List (DU-AL), nor a valid entry for a   * 00217900
*                             common area data space.                 * 00218000
*                                                                     * 00218100
*                 233         ixcMsgoRsnPartAletOffBadStg:  Element   * 00218200
*                             not accessible.  The part ALET at       * 00218300
*                             offset PARTALETOFF within an element    * 00218400
*                             (ELEMENT) is not accessible.  The       * 00218500
*                             fields PART# and ELEMENTPTR in the      * 00218600
*                             parameter list identify the index of    * 00218700
*                             the part and the address of the element * 00218800
*                             that describes the erroneous part.      * 00218900
*                                                                     * 00219000
*                 234         ixcMsgoRsnPartAlet@BadAlet:  Message    * 00219100
*                             data ALET is not valid.  The ALET       * 00219200
*                             indicated by PARTALET is neither zero   * 00219300
*                             nor a valid entry on the caller's       * 00219400
*                             Dispatchable Unit Access List (DU-AL),  * 00219500
*                             nor a valid entry for a common area     * 00219600
*                             data space.                             * 00219700
*                                                                     * 00219800
*                 235         ixcMsgoRsnPartAletTbl@BadAlet:  Message * 00219900
*                             data ALET is not valid.  The ALET       * 00220000
*                             indicated by an entry in PARTALETTBL is * 00220100
*                             neither zero nor a valid entry on the   * 00220200
*                             caller's Dispatchable Unit Access List  * 00220300
*                             (DU-AL), nor a valid entry for a common * 00220400
*                             area data space.  The fields PART# and  * 00220500
*                             ELEMENTPTR in the parameter list        * 00220600
*                             identify the index of the part and the  * 00220700
*                             address of the element that describes   * 00220800
*                             the erroneous part.                     * 00220900
*                                                                     * 00221000
*                 236         ixcMsgoRsnPartAletOff@BadAlet:  Message * 00221100
*                             data ALET is not valid.  The ALET at    * 00221200
*                             offset PARTALETOFF within an element    * 00221300
*                             (ELEMENT) is neither zero nor a valid   * 00221400
*                             entry on the caller's Dispatchable Unit * 00221500
*                             Access List (DU-AL), nor a valid entry  * 00221600
*                             for a common area data space.  The      * 00221700
*                             fields PART# and ELEMENTPTR in the      * 00221800
*                             parameter list identify the index of    * 00221900
*                             the part and the address of the element * 00222000
*                             that describes the erroneous part.      * 00222100
*                                                                     * 00222200
*                 300         ixcMsgoRsnSenderNoNotifyExit:           * 00222300
*                             NOTIFYEXIT not defined.  NOTIFYEXIT     * 00222400
*                             defaulted to the address of the exit    * 00222500
*                             routine defined when the member joined  * 00222600
*                             the group, but no NOTIFYEXIT was        * 00222700
*                             specified when the IXCJOIN service was  * 00222800
*                             invoked.  Code the NOTIFYEXIT           * 00222900
*                             explicitly.                             * 00223000
*                                                                     * 00223100
*                 304         ixcMsgoRsnTargetsBadAlet:  The ALET     * 00223200
*                             that qualifies the address of the       * 00223300
*                             TARGETS table is neither zero nor a     * 00223400
*                             valid entry on the caller's             * 00223500
*                             Dispatchable Unit Access List (DU-AL),  * 00223600
*                             nor a valid entry for a common area     * 00223700
*                             data space.                             * 00223800
*                                                                     * 00223900
*                 308         ixcMsgoRsnRetMsgoTokenBadAlet:  The     * 00224000
*                             ALET that qualifies the address of the  * 00224100
*                             RETMSGOTOKEN is neither zero nor a      * 00224200
*                             valid entry on the caller's             * 00224300
*                             Dispatchable Unit Access List (DU-AL),  * 00224400
*                             nor a valid entry for a common area     * 00224500
*                             data space.                             * 00224600
*                                                                     * 00224700
*                 30C         ixcMsgoRsnBadResponseID:  The           * 00224800
*                             RESPONSEID is not valid.  The           * 00224900
*                             RESPONSEID token has been corrupted.    * 00225000
*                                                                     * 00225100
*                 310         ixcMsgoRsnBadStreamID:  The value       * 00225200
*                             specified for STREAMID not valid.  The  * 00225300
*                             Stream ID must be in the range of 1-15  * 00225400
*                             (decimal).                              * 00225500
*                                                                     * 00225600
*                 314         ixcMsgoRsnTargetsBadStg:  The TARGETS   * 00225700
*                             table is not accessible.                * 00225800
*                                                                     * 00225900
*                 320         ixcMsgoRsnBad#Targets:  The value       * 00226000
*                             specified for #TARGETS is not valid.    * 00226100
*                             The number of targets must be a nonzero * 00226200
*                             value less than or equal to the maximum * 00226300
*                             number of members per group supported   * 00226400
*                             by the sysplex.                         * 00226500
*                                                                     * 00226600
*                             The maximum number of members per XCF   * 00226700
*                             group is determined by the system       * 00226800
*                             programmer when the XCF format utility  * 00226900
*                             (IXCL1DSU) is used to create the        * 00227000
*                             sysplex couple data set that is being   * 00227100
*                             used by the sysplex.  In practical      * 00227200
*                             terms, #TARGETS will either be the      * 00227300
*                             number of active members in the group,  * 00227400
*                             or the maximum number of members that   * 00227500
*                             were simultaneously active in the       * 00227600
*                             group.  In any event, #TARGETS cannot   * 00227700
*                             be larger than the maximum number of    * 00227800
*                             members permitted to join the group.    * 00227900
*                                                                     * 00228000
*                 324         ixcMsgoRsnBadTimeout:  The timeout      * 00228100
*                             value specified is invalid.  The        * 00228200
*                             timeout value must be between one and   * 00228300
*                             '7FFF'X, inclusive.  If MSGACCESS of    * 00228400
*                             ASYNC is coded, a nonzero timeout value * 00228500
*                             must be provided.                       * 00228600
*                                                                     * 00228700
*                 340         ixcMsgoRsnTargetMaxMsglen61K:  Message  * 00228800
*                             length not valid for target.            * 00228900
*                                                                     * 00229000
*                             Either the target member or the system  * 00229100
*                             on which the target member resides does * 00229200
*                             not support messages larger than 62462  * 00229300
*                             bytes (decimal).  The message was not   * 00229400
*                             sent.                                   * 00229500
*                                                                     * 00229600
*                             Use the IXCQUERY service to determine   * 00229700
*                             which members reside on systems capable * 00229800
*                             of sending/receiving messages larger    * 00229900
*                             than 62462 bytes.  For XCF to deliver a * 00230000
*                             message greater than 62462 bytes in     * 00230100
*                             length, the target member must reside   * 00230200
*                             on a system that supports 128MB message * 00230300
*                             delivery, and the target member must    * 00230400
*                             specify YES for the GT61KMSG keyword    * 00230500
*                             when it invokes the IXCJOIN macro to    * 00230600
*                             join its group.                         * 00230700
*                                                                     * 00230800
*                 344         ixcMsgoRsnSenderBecameInactive:         * 00230900
*                             Sending member became inactive while    * 00231000
*                             message-out was in progress.            * 00231100
*                                                                     * 00231200
*                             The sending member became inactive      * 00231300
*                             during the message-out request.  The    * 00231400
*                             message-out request is terminated.      * 00231500
*                             Some, none, or all the targets may      * 00231600
*                             receive the message.                    * 00231700
*                                                                     * 00231800
*                 010Cxxxx    ixcMsgoRsnPlistNoPartInfoBadStg:        * 00231900
*                             Parameter list not accessible.  A       * 00232000
*                             parameter associated with one of the    * 00232100
*                             parts of a multipart message is not     * 00232200
*                             valid, but the Message-Out service was  * 00232300
*                             not able to store the index of the part * 00232400
*                             and the address of the element that     * 00232500
*                             describes the part in the parameter     * 00232600
*                             list.  The low order halfword of the    * 00232700
*                             reason code (xxxx) indicates the reason * 00232800
*                             code that would have been returned if   * 00232900
*                             the part information could have been    * 00233000
*                             placed in the parameter list.           * 00233100
*                                                                     * 00233200
*                                                                     * 00233300
*                                                                     * 00233400
*                                                                     * 00233500
*       C         IxcRetCodeEnvError:  Environmental error.  This     * 00233600
*                 currently includes the case where all resources     * 00233700
*                 associated with a destination system have been      * 00233800
*                 exhausted.                                          * 00233900
*                                                                     * 00234000
*                 Hex Reason       Meaning                            * 00234100
*                 Code                                                * 00234200
*                                                                     * 00234300
*                                                                     * 00234400
*                 4           ixcMsgoRsnNoBuffer:  No message buffer  * 00234500
*                             available, timeout not specified.       * 00234600
*                                                                     * 00234700
*                             XCF signalling resources (message       * 00234800
*                             buffers) are temporarily unavailable.   * 00234900
*                             Retry the request after allowing some   * 00235000
*                             time for the condition to clear.        * 00235100
*                             Alternatively, retry the request with a * 00235200
*                             nonzero TIMEOUT value to have XCF try   * 00235300
*                             to handle the condition.  If this       * 00235400
*                             condition reoccurs when a nonzero       * 00235500
*                             TIMEOUT value is specified, the         * 00235600
*                             message-out service will either accept  * 00235700
*                             the message with return code 4 or will  * 00235800
*                             reject the message with return code     * 00235900
*                             'C'x reason 'C'x.                       * 00236000
*                                                                     * 00236100
*                                                                     * 00236200
*                 8           ixcMsgoRsnNoPath:  No signalling path   * 00236300
*                             available, timeout not specified.       * 00236400
*                                                                     * 00236500
*                             XCF signalling resources (signalling    * 00236600
*                             paths) are temporarily unavailable.     * 00236700
*                             Retry the request after allowing some   * 00236800
*                             time for the condition to clear.        * 00236900
*                             Alternatively, retry the request with a * 00237000
*                             nonzero TIMEOUT value to have XCF try   * 00237100
*                             to handle the condition.  If this       * 00237200
*                             condition occurs and a nonzero TIMEOUT  * 00237300
*                             value is specified, the message-out     * 00237400
*                             service will either accept the message  * 00237500
*                             with return code 4 or will reject the   * 00237600
*                             message with return code 'C'x reason    * 00237700
*                             '18'x.                                  * 00237800
*                                                                     * 00237900
*                                                                     * 00238000
*                 C           ixcMsgoRsnNoMsgSpace:  No member        * 00238100
*                             message space available.                * 00238200
*                                                                     * 00238300
*                             The message space managed by XCF on     * 00238400
*                             behalf of the member has no more        * 00238500
*                             capacity.  Generally this condition     * 00238600
*                             suggests that the volume of message     * 00238700
*                             traffic has exceeded processing         * 00238800
*                             capacity of the member or its group.    * 00238900
*                             Depending on how the member is using    * 00239000
*                             the signalling service, member message  * 00239100
*                             space may become available as the       * 00239200
*                             system continues to process work.  The  * 00239300
*                             member may need to use the Message      * 00239400
*                             Control Request(COMPLETION) Type(FORCE) * 00239500
*                             Service to Force the completion of one  * 00239600
*                             or more messages in order to make more  * 00239700
*                             member message space storage available. * 00239800
*                             The member may need to take steps to    * 00239900
*                             reduce its message traffic volume.      * 00240000
*                                                                     * 00240100
*                             If the member specified a notify exit   * 00240200
*                             when it invoked the IXCJOIN service to  * 00240300
*                             join its XCF group, retry the request   * 00240400
*                             when XCF indicates that resources are   * 00240500
*                             once again available.  Otherwise, retry * 00240600
*                             the request after allowing some time    * 00240700
*                             for the condition to clear, or after    * 00240800
*                             taking appropriate actions to release   * 00240900
*                             member message space.                   * 00241000
*                                                                     * 00241100
*                 10          ixcMsgoRsnSystemNoStorage:  System      * 00241200
*                             storage shortage.                       * 00241300
*                                                                     * 00241400
*                             A shortage of system resources          * 00241500
*                             (storage) has occurred. The request is  * 00241600
*                             rejected. Retry the request after       * 00241700
*                             allowing some time for the condition to * 00241800
*                             clear. Subsequent requests may also be  * 00241900
*                             rejected until the shortage is          * 00242000
*                             relieved.  The member may need to use   * 00242100
*                             the Message Control Request(COMPLETION) * 00242200
*                             Type(FORCE) Service to Force the        * 00242300
*                             completion of one or more messages in   * 00242400
*                             order to make more system storage       * 00242500
*                             available.                              * 00242600
*                                                                     * 00242700
*                 14          ixcMsgoRsnNoBufferNotQueued:  No        * 00242800
*                             message buffer available, timeout was   * 00242900
*                             specified.                              * 00243000
*                                                                     * 00243100
*                             XCF signalling resources (message       * 00243200
*                             buffers) are unavailable.  Message      * 00243300
*                             delivery is not making progress.  Retry * 00243400
*                             the request after allowing some time    * 00243500
*                             for the condition to clear.  Until the  * 00243600
*                             condition is resolved, XCF will reject  * 00243700
*                             this message.                           * 00243800
*                                                                     * 00243900
*                 18          ixcMsgoRsnNoPathNotQueued:  No          * 00244000
*                             signalling path available, timeout was  * 00244100
*                             specified.                              * 00244200
*                                                                     * 00244300
*                             XCF signalling resources (signalling    * 00244400
*                             paths) are unavailable.  Attempts to    * 00244500
*                             reestablish signalling connectivity are * 00244600
*                             not making progress.  Retry the request * 00244700
*                             after allowing some time for the        * 00244800
*                             condition to clear.  Until the          * 00244900
*                             condition is resolved,  XCF rejects all * 00245000
*                             message-out requests to the system on   * 00245100
*                             which the target member resides.        * 00245200
*                                                                     * 00245300
*                 1C          ixcMsgoRsnMsgPendingMustQueue:          * 00245400
*                             Messages pending, timeout not           * 00245500
*                             specified.                              * 00245600
*                                                                     * 00245700
*                             The send for this message could not be  * 00245800
*                             initiated immediately because there are * 00245900
*                             other message-out requests already      * 00246000
*                             pending that must be initiated first.   * 00246100
*                             Retry the request after allowing some   * 00246200
*                             time for the condition to clear.        * 00246300
*                             Alternatively, retry the request with a * 00246400
*                             nonzero TIMEOUT value to have XCF try   * 00246500
*                             to handle the condition.  If this       * 00246600
*                             condition reoccurs when a nonzero       * 00246700
*                             TIMEOUT value is specified, the         * 00246800
*                             message-out service will either accept  * 00246900
*                             the message with return code 4 or will  * 00247000
*                             reject the message with some other      * 00247100
*                             return code 'C'x reason.                * 00247200
*                                                                     * 00247300
*                 20          ixcMsgoRsnDualFull:  DU-AL is full.     * 00247400
*                                                                     * 00247500
*                             The Dispatchable Unit Access List       * 00247600
*                             (DU-AL) is full.  Retry the request     * 00247700
*                             after removing at least one space from  * 00247800
*                             the DU-AL.  Applies only when MSGACCESS * 00247900
*                             of ASYNC is specified.                  * 00248000
*                                                                     * 00248100
*                 24          ixcMsgoRsnDualNoStorage:  Unable to     * 00248200
*                             obtain DU-AL storage.                   * 00248300
*                                                                     * 00248400
*                             XCF could not obtain storage to create  * 00248500
*                             the Dispatchable Unit Access List       * 00248600
*                             needed to process the request.  Retry   * 00248700
*                             the request after allowing some time    * 00248800
*                             for the condition to clear.  Applies    * 00248900
*                             only when MSGACCESS of ASYNC is         * 00249000
*                             specified.                              * 00249100
*                                                                     * 00249200
*                 28          ixcMsgoRsnDualNotSuitable:  DU-AL is    * 00249300
*                             unsuitable.                             * 00249400
*                                                                     * 00249500
*                             The Dispatchable Unit Access List       * 00249600
*                             (DU-AL) is unsuitable.  The DU-AL is    * 00249700
*                             too large or provided access to a       * 00249800
*                             subspace at some point during its       * 00249900
*                             existence.  Retry the request under     * 00250000
*                             some other work unit.  Applies only     * 00250100
*                             when MSGACCESS of ASYNC is specified.   * 00250200
*                                                                     * 00250300
*                                                                     * 00250400
*                                                                     * 00250500
*                                                                     * 00250600
*       10        IxcRetCodeCompError:  Failure in XCF processing.    * 00250700
*                 Reason codes are not documented.                    * 00250800
*                                                                     * 00250900
*                                                                     * 00251000
*                                                                     * 00251100
*01* REASON CODES:                                                    * 00251200
*                                                                     * 00251300
*       A unique reason code will be returned whenever the return     * 00251400
*       code is non-zero.                                             * 00251500
*                                                                     * 00251600
*       Return code and reason code constants are defined in the      * 00251700
*       IXCYCON macro.                                                * 00251800
*                                                                     * 00251900
*01* MODULE TYPE:  ASSEM MACRO                                        * 00252000
*                                                                     * 00252100
*02*   PROCESSOR:  ASSEM                                              * 00252200
*                                                                     * 00252300
*01* COMPONENT:  SCXCF                                                * 00252400
*                                                                     * 00252500
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00252600
*                                                                     * 00252700
*01* ABEND CODES:                                                     * 00252800
*                                                                     * 00252900
*                                                                     * 00253000
*       073       Environment not valid.  The caller held a lock.     * 00253100
*                                                                     * 00253200
*       C78       XCF could not obtain storage to process the request * 00253300
*                 .                                                   * 00253400
*                 Try again later.                                    * 00253500
*                                                                     * 00253600
*                                                                     * 00253700
*                                                                     * 00253800
*01* MACRO USAGE NOTES:                                               * 00253900
*                                                                     * 00254000
*                                                                     * 00254100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00254200
*        global macro variable.  Any value other than 'NO' will       * 00254300
*        result in the macro expansion being printed.  The default is * 00254400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00254500
*        variable should be set.                                      * 00254600
*                                                                     * 00254700
*                    GBLC &ZPRINT                                     * 00254800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00254900
*                                                                     * 00255000
*                                                                     * 00255100
*    2.  The  IXCMSGO macro supports multiple versions. The macro key * 00255200
*        list  below  contains the version level in which the key was * 00255300
*        first  introduced.  Positionals  are  identified by the word * 00255400
*        'Positional'  followed by the numeric value of its position. * 00255500
*        Nested  positionals  are  preceded  by their outer key.  The * 00255600
*        lowest value represents the original version and the highest * 00255700
*        value  represents  the  most  recent  version of the IXCMSGO * 00255800
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00255900
*        least  as high as the highest version number of all the keys * 00256000
*        being used.                                                  * 00256100
*                                                                     * 00256200
*        VERSION   KEY                                                * 00256300
*                                                                     * 00256400
*              0      MEMTOKEN                                        * 00256500
*                     MSGBUF                                          * 00256600
*                     MSGCNTL                                         * 00256700
*                     MSGLEN                                          * 00256800
*                     MULTIPART                                       * 00256900
*                     NOTIFY                                          * 00257000
*                     TARGET                                          * 00257100
*              1      #MSGPARTS                                       * 00257200
*                     ELEMENT                                         * 00257300
*                     ELEMFORM                                        * 00257400
*                     ENDOFQUEUE                                      * 00257500
*                     MSGSTGKEY                                       * 00257600
*                     NEXTOFF                                         * 00257700
*                     NEXTPTROFF                                      * 00257800
*                     PARTALET                                        * 00257900
*                     PARTALETOFF                                     * 00258000
*                     PARTALETTBL                                     * 00258100
*                     PARTLEN                                         * 00258200
*                     PARTLENOFF                                      * 00258300
*                     PARTLENTBL                                      * 00258400
*                     PARTOFF                                         * 00258500
*                     PARTPTROFF                                      * 00258600
*              2      #TARGETS                                        * 00258700
*                     DELIVERMSG                                      * 00258800
*                     GETRESPONSE                                     * 00258900
*                     MEMBERS                                         * 00259000
*                     NEXTTARGETOFF                                   * 00259100
*                     NOTIFYBY                                        * 00259200
*                     NOTIFYEXIT                                      * 00259300
*                     NOTIFYIF                                        * 00259400
*                     RESPONSEID                                      * 00259500
*                     RETMSGOTOKEN                                    * 00259600
*                     SENDTO                                          * 00259700
*                     STREAMID                                        * 00259800
*                     TARGETS                                         * 00259900
*                     TIMEOUT                                         * 00260000
*                     USERDATA                                        * 00260100
*              3      LINKAGE                                         * 00260200
*                     MSGACCESS                                       * 00260300
*                     XCFDATA                                         * 00260400
*                                                                     * 00260500
*    3.  When  invoked  from  someplace  besides the joiner's primary * 00260600
*        address   space,  some  message-out  functions  may  not  be * 00260700
*        available.    Any  request  that  requires use of one of the * 00260800
*        member  data  spaces that is managed by XCF on behalf of the * 00260900
*        member is subject to rejection.  XCF will attempt to perform * 00261000
*        the requested function without use of these data spaces.  If * 00261100
*        a  member  data  space is required, the request is rejected. * 00261200
*        Do  not  use the following keywords if such rejection cannot * 00261300
*        be tolerated:  SENDTO(GROUP), GETRESPONSE(YES), NOTIFY(YES), * 00261400
*        TIMEOUT, or MSGACCESS(ASYNC).                                * 00261500
*                                                                     * 00261600
*                                                                     * 00261700
*                                                                     * 00261800
*01* CHANGE ACTIVITY:                                                 * 00261900
*                                                                     * 00262000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00262100
*                                                                     * 00262200
*    $L0=SYSLKXMG HBB4410 860901 PDXB:  Coupling Support COUPLXSI     * 00262300
*                                         line item                   * 00262400
*    $P1=PEO1482  HBB4410 890206 PDT8:  Update reason codes           * 00262500
*    $L1=SYSLKTSG HBB5510 910923 PD00CJ:  Gather message parts table  * 00262600
*                                         support                     * 00262700
*    $P2=PKB2941  HBB4430 920617 PD00T8:  Update prolog to state only * 00262800
*                                         31 bit addressing mode is   * 00262900
*                                         supported                   * 00263000
*    $L2=SYSLKTSG HBB5510 921105 PD00BJ:  Gather message parts queue  * 00263100
*                                         support                     * 00263200
*    $P3=PIG0970  HBB5510 921223 PD00BJ:  ASAP unit test fixes        * 00263300
*    $P4=PIG1641  HBB5510 930520 PD00DV:  Removed NO_MESSAGE keyword  * 00263400
*                                         and restructured macro to   * 00263500
*                                         fix assembler error for     * 00263600
*                                         undefined symbol            * 00263700
*    $P5=PIG1643  HBB5510 930520 PD00DV:  Added new bit SumPartLens   * 00263800
*                                         which is set when           * 00263900
*                                         SumPartLens is defaulted or * 00264000
*                                         specified.                  * 00264100
*    $L3=XCFBCXMG JBB6602 950406 PD00EA:  XCF Broadcast               * 00264200
*    $P6=PSD0557  JBB6602 960111 PD00HX:  XCF Broadcast               * 00264300
*    $P7=PSD0530  JBB6602 960122 PD00HX:  XCF Broadcast               * 00264400
*    $P8=PSD0667  JBB6602 960122 PD00DT:  XCF Broadcast               * 00264500
*    $P9=PSD0517  JBB6602 960130 PD00HX:  XCF Broadcast               * 00264600
*    $D1=DSD0007  JBB6602 960230 PD00DT:  XCF Broadcast               * 00264700
*    $PA=PQC1649  HBB6603 960815 PD00EA:  XCF Broadcast - NotifyIf    * 00264800
*                                         failed support              * 00264900
*    $D2=DQC0028  HBB6603 960815 PD00EA:  XCF Broadcast - remove      * 00265000
*                                         keywords for functions not  * 00265100
*                                         supported                   * 00265200
*    $01=OW24876  JBB6602 970314 PD00BJ:  Changed #TARGETS            * 00265300
*                                         documentation               * 00265400
*    $02=OW16903  HBB5510 970314 PD00BJ:  Add retcode C reason 1C.    * 00265500
*                                         Clarify eplanations of      * 00265600
*                                         other retcode C reasons.    * 00265700
*                                         Generalize explanations of  * 00265800
*                                         retcode 4 reasons 401, 402, * 00265900
*                                         403.                        * 00266000
*    $03=OW28439  HBB4430 970801 PD00MP:  MSGOUTASID(MEMBER | ANY)    * 00266100
*    $L4=LSD      HBB6608 980901 PD00BJ:  Large Signal Delivery       * 00266200
*    $PB=PWK0553  HBB6608 981214 PD00BJ:  Fix expansion when MSGLEN   * 00266300
*                                         not coded for MULTIPART=NO  * 00266400
****** END OF SPECIFICATIONS *****************************************/ 00266500
*/* TLINE 1 *********************************************************** 00266600
         MACRO                                                          00266700
&XLABEL  IXCMSGO &MEMTOKEN=,&SENDTO=,&TARGET=,&DELIVERMSG=,&STREAMID=, *00266800
               &GETRESPONSE=,&TIMEOUT=,&MEMBERS=,&TARGETS=,&#TARGETS=, *00266900
               &NEXTTARGETOFF=,&RESPONSEID=,&MULTIPART=,&MSGCNTL=,     *00267000
               &MSGBUF=,&MSGLEN=,&#MSGPARTS=,&ELEMENT=,&ELEMFORM=,     *00267100
               &NEXTOFF=,&NEXTPTROFF=,&ENDOFQUEUE=,&PARTOFF=,          *00267200
               &PARTPTROFF=,&PARTALET=,&PARTALETOFF=,&PARTALETTBL=,    *00267300
               &PARTLEN=,&PARTLENOFF=,&PARTLENTBL=,&MSGSTGKEY=,        *00267400
               &MSGACCESS=,&NOTIFY=,&USERDATA=,&NOTIFYIF=,&NOTIFYBY=,  *00267500
               &NOTIFYEXIT=,&RETMSGOTOKEN=,&LINKAGE=,&XCFDATA=,        *00267600
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00267700
.*                                                                      00267800
*                   MACDATE -02/26/99-<3>                               00267900
.*                                                                      00268000
.*******************************************************************    00268100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00268200
.*******************************************************************    00268300
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00268400
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00268500
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00268600
.*                                                                      00268700
                   GBLC  &ZIXCMSGO   YES=MACRO USED AT LEAST ONCE       00268800
.*******************************************************************    00268900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00269000
.*******************************************************************    00269100
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00269200
                   LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS       00269300
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00269400
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00269500
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00269600
                   LCLA  &ZAWRK      USED AS A WORK AREA                00269700
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00269800
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00269900
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00270000
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00270100
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00270200
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00270300
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00270400
.*                                                                      00270500
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00270600
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00270700
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00270800
                   LCLC  &ZENDBASEPL            End of base PL          00270900
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00271000
.*******************************************************************    00271100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00271200
.*******************************************************************    00271300
                   LCLA  &ZI         INDEX FOR ARRAY                    00271400
                   LCLA  &ZJ         INDEX FOR PARMS                    00271500
                   LCLA  &ZK         INDEX FOR PARSE                    00271600
                   LCLA  &ZLO        LOW RANGE VALUE                    00271700
                   LCLA  &ZHI        HIGH RANGE VALUE                   00271800
                   LCLC  &ZW         WORK AREA FOR PARM                 00271900
.********************************************************************   00272000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00272100
.********************************************************************   00272200
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00272300
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00272400
.*                                                                      00272500
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00272600
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00272700
                   SPLEVEL  TEST                                        00272800
.ZSYS2             ANOP  ,                                              00272900
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00273000
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00273100
                   SYSSTATE TEST                                        00273200
                   AGO   .ZSYS4                                         00273300
.ZSYS3             ANOP  ,                                              00273400
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00273500
.ZSYS4             ANOP  ,                                              00273600
.*******************************************************************    00273700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00273800
.*******************************************************************    00273900
                   LCLC  &XMEMTOKEN  ++ NAME                            00274000
                   LCLC  &XSENDTO    ++ VALUE                           00274100
                   LCLC  &XTARGET    ++ NAME                            00274200
                   LCLC  &XDELIVERMSG           ++ VALUE                00274300
                   LCLC  &XSTREAMID  ++ NAME                            00274400
                   LCLC  &XGETRESPONSE          ++ VALUE                00274500
                   LCLC  &XTIMEOUT   ++ NAME                            00274600
                   LCLC  &XMEMBERS   ++ VALUE                           00274700
                   LCLC  &XTARGETS   ++ NAME                            00274800
                   LCLC  &X#TARGETS  ++ NAME                            00274900
                   LCLC  &XNEXTTARGETOFF        ++ NAME                 00275000
                   LCLC  &XRESPONSEID           ++ NAME                 00275100
                   LCLC  &XMULTIPART            ++ VALUE                00275200
                   LCLC  &XMSGCNTL   ++ NAME                            00275300
                   LCLC  &XMSGBUF    ++ NAME                            00275400
                   LCLC  &XMSGLEN    ++ NAME                            00275500
                   LCLC  &X#MSGPARTS            ++ NAME                 00275600
                   LCLC  &XELEMENT   ++ NAME                            00275700
                   LCLC  &XELEMFORM  ++ VALUE                           00275800
                   LCLC  &XNEXTOFF   ++ NAME                            00275900
                   LCLC  &XNEXTPTROFF           ++ NAME                 00276000
                   LCLC  &XENDOFQUEUE           ++ NAME                 00276100
                   LCLC  &XPARTMODE  ++ NAME                            00276200
                   LCLC  &XPARTOFF   ++ NAME                            00276300
                   LCLC  &XPARTPTROFF           ++ NAME                 00276400
                   LCLC  &XDELLIST3  ++ NAME                            00276500
                   LCLC  &XPARTALET  ++ NAME                            00276600
                   LCLC  &XPARTALETOFF          ++ NAME                 00276700
                   LCLC  &XPARTALETTBL          ++ NAME                 00276800
                   LCLC  &XLENMODE   ++ NAME                            00276900
                   LCLC  &XPARTLEN   ++ NAME                            00277000
                   LCLC  &XPARTLENOFF           ++ NAME                 00277100
                   LCLC  &XPARTLENTBL           ++ NAME                 00277200
                   LCLC  &XMSGSTGKEY            ++ NAME                 00277300
                   LCLC  &XMSGACCESS            ++ VALUE                00277400
                   LCLC  &XNOTIFY    ++ VALUE                           00277500
                   LCLC  &XUSERDATA  ++ NAME                            00277600
                   LCLC  &XNOTIFYIF  ++ VALUE                           00277700
                   LCLC  &XNOTIFYBY  ++ VALUE                           00277800
                   LCLC  &XNOTIFYEXIT           ++ NAME                 00277900
                   LCLC  &XRETMSGOTOKEN         ++ NAME                 00278000
                   LCLC  &XLINKAGE   ++ VALUE                           00278100
                   LCLC  &XXCFDATA   ++ NAME                            00278200
                   LCLC  &XRETCODE   ++ NAME                            00278300
                   LCLC  &XRSNCODE   ++ NAME                            00278400
                   LCLA  &XPLISTVER  ++ VALUE                           00278500
                   LCLC  &XMF        ++ VALUE                           00278600
                   LCLC  &XMFCTRL    ++ NAME                            00278700
                   LCLC  &XMFATTR    ++ VALUE                           00278800
                   LCLC  &XMFSCK     ++ VALUE                           00278900
.*******************************************************************    00279000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00279100
.*******************************************************************    00279200
                   LCLC  &ZXMEMTOKEN            ++ INPUT NAME           00279300
                   LCLC  &ZXSENDTO   ++ INPUT VALUE                     00279400
                   LCLC  &ZXTARGET   ++ INPUT NAME                      00279500
                   LCLC  &ZXDELIVERMSG          ++ INPUT VALUE          00279600
                   LCLC  &ZXSTREAMID            ++ INPUT NAME           00279700
                   LCLC  &ZXGETRESPONSE         ++ INPUT VALUE          00279800
                   LCLC  &ZXTIMEOUT  ++ INPUT NAME                      00279900
                   LCLC  &ZXMEMBERS  ++ INPUT VALUE                     00280000
                   LCLC  &ZXTARGETS  ++ INPUT NAME                      00280100
                   LCLC  &ZX#TARGETS            ++ INPUT NAME           00280200
                   LCLC  &ZXNEXTTARGETOFF       ++ INPUT NAME           00280300
                   LCLC  &ZXRESPONSEID          ++ INPUT NAME           00280400
                   LCLC  &ZXMULTIPART           ++ INPUT VALUE          00280500
                   LCLC  &ZXMSGCNTL  ++ INPUT NAME                      00280600
                   LCLC  &ZXMSGBUF   ++ INPUT NAME                      00280700
                   LCLC  &ZXMSGLEN   ++ INPUT NAME                      00280800
                   LCLC  &ZX#MSGPARTS           ++ INPUT NAME           00280900
                   LCLC  &ZXELEMENT  ++ INPUT NAME                      00281000
                   LCLC  &ZXELEMFORM            ++ INPUT VALUE          00281100
                   LCLC  &ZXNEXTOFF  ++ INPUT NAME                      00281200
                   LCLC  &ZXNEXTPTROFF          ++ INPUT NAME           00281300
                   LCLC  &ZXENDOFQUEUE          ++ INPUT NAME           00281400
                   LCLC  &ZXPARTMODE            ++ INPUT NAME           00281500
                   LCLC  &ZXPARTOFF  ++ INPUT NAME                      00281600
                   LCLC  &ZXPARTPTROFF          ++ INPUT NAME           00281700
                   LCLC  &ZXDELLIST3            ++ INPUT NAME           00281800
                   LCLC  &ZXPARTALET            ++ INPUT NAME           00281900
                   LCLC  &ZXPARTALETOFF         ++ INPUT NAME           00282000
                   LCLC  &ZXPARTALETTBL         ++ INPUT NAME           00282100
                   LCLC  &ZXLENMODE  ++ INPUT NAME                      00282200
                   LCLC  &ZXPARTLEN  ++ INPUT NAME                      00282300
                   LCLC  &ZXPARTLENOFF          ++ INPUT NAME           00282400
                   LCLC  &ZXPARTLENTBL          ++ INPUT NAME           00282500
                   LCLC  &ZXMSGSTGKEY           ++ INPUT NAME           00282600
                   LCLC  &ZXMSGACCESS           ++ INPUT VALUE          00282700
                   LCLC  &ZXNOTIFY   ++ INPUT VALUE                     00282800
                   LCLC  &ZXUSERDATA            ++ INPUT NAME           00282900
                   LCLC  &ZXNOTIFYIF            ++ INPUT VALUE          00283000
                   LCLC  &ZXNOTIFYBY            ++ INPUT VALUE          00283100
                   LCLC  &ZXNOTIFYEXIT          ++ INPUT NAME           00283200
                   LCLC  &ZXRETMSGOTOKEN        ++ OUTPUT NAME          00283300
                   LCLC  &ZXLINKAGE  ++ INPUT VALUE                     00283400
                   LCLC  &ZXXCFDATA  ++ INPUT NAME                      00283500
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00283600
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00283700
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00283800
                   LCLC  &ZXMF       ++ INPUT VALUE                     00283900
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00284000
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00284100
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00284200
.********************************************************************   00284300
.***AC.PLV01  PROCESS PLISTVER                                      *   00284400
.********************************************************************   00284500
&XPLISTVER      SETA  0                                                 00284600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00284700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00284800
&XPLISTVER      SETA  3                                                 00284900
.ZPLV0          ANOP  ,                                                 00285000
.*                                                                      00285100
                AIF   ('&SENDTO' EQ '').ZPLV1E                          00285200
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00285300
&XPLISTVER      SETA  2                                                 00285400
.ZPLV1E         ANOP  ,                                                 00285500
.*                                                                      00285600
                AIF   ('&DELIVERMSG' EQ '').ZPLV2E                      00285700
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00285800
&XPLISTVER      SETA  2                                                 00285900
.ZPLV2E         ANOP  ,                                                 00286000
.*                                                                      00286100
                AIF   ('&STREAMID' EQ '').ZPLV3E                        00286200
                AIF   (&XPLISTVER GE 2).ZPLV3E                          00286300
&XPLISTVER      SETA  2                                                 00286400
.ZPLV3E         ANOP  ,                                                 00286500
.*                                                                      00286600
                AIF   ('&GETRESPONSE' EQ '').ZPLV4E                     00286700
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00286800
&XPLISTVER      SETA  2                                                 00286900
.ZPLV4E         ANOP  ,                                                 00287000
.*                                                                      00287100
                AIF   ('&TIMEOUT' EQ '').ZPLV5E                         00287200
                AIF   (&XPLISTVER GE 2).ZPLV5E                          00287300
&XPLISTVER      SETA  2                                                 00287400
.ZPLV5E         ANOP  ,                                                 00287500
.*                                                                      00287600
                AIF   ('&TIMEOUT' EQ '').ZPLV6E                         00287700
                AIF   (&XPLISTVER GE 2).ZPLV6E                          00287800
&XPLISTVER      SETA  2                                                 00287900
.ZPLV6E         ANOP  ,                                                 00288000
.*                                                                      00288100
                AIF   ('&MEMBERS' EQ '').ZPLV7E                         00288200
                AIF   (&XPLISTVER GE 2).ZPLV7E                          00288300
&XPLISTVER      SETA  2                                                 00288400
.ZPLV7E         ANOP  ,                                                 00288500
.*                                                                      00288600
                AIF   ('&TARGETS' EQ '').ZPLV8E                         00288700
                AIF   (&XPLISTVER GE 2).ZPLV8E                          00288800
&XPLISTVER      SETA  2                                                 00288900
.ZPLV8E         ANOP  ,                                                 00289000
.*                                                                      00289100
                AIF   ('&#TARGETS' EQ '').ZPLV9E                        00289200
                AIF   (&XPLISTVER GE 2).ZPLV9E                          00289300
&XPLISTVER      SETA  2                                                 00289400
.ZPLV9E         ANOP  ,                                                 00289500
.*                                                                      00289600
                AIF   ('&NEXTTARGETOFF' EQ '').ZPLV10E                  00289700
                AIF   (&XPLISTVER GE 2).ZPLV10E                         00289800
&XPLISTVER      SETA  2                                                 00289900
.ZPLV10E        ANOP  ,                                                 00290000
.*                                                                      00290100
                AIF   ('&DELIVERMSG' EQ '').ZPLV11E                     00290200
                AIF   (&XPLISTVER GE 2).ZPLV11E                         00290300
&XPLISTVER      SETA  2                                                 00290400
.ZPLV11E        ANOP  ,                                                 00290500
.*                                                                      00290600
                AIF   ('&STREAMID' EQ '').ZPLV12E                       00290700
                AIF   (&XPLISTVER GE 2).ZPLV12E                         00290800
&XPLISTVER      SETA  2                                                 00290900
.ZPLV12E        ANOP  ,                                                 00291000
.*                                                                      00291100
                AIF   ('&GETRESPONSE' EQ '').ZPLV13E                    00291200
                AIF   (&XPLISTVER GE 2).ZPLV13E                         00291300
&XPLISTVER      SETA  2                                                 00291400
.ZPLV13E        ANOP  ,                                                 00291500
.*                                                                      00291600
                AIF   ('&TIMEOUT' EQ '').ZPLV14E                        00291700
                AIF   (&XPLISTVER GE 2).ZPLV14E                         00291800
&XPLISTVER      SETA  2                                                 00291900
.ZPLV14E        ANOP  ,                                                 00292000
.*                                                                      00292100
                AIF   ('&TIMEOUT' EQ '').ZPLV15E                        00292200
                AIF   (&XPLISTVER GE 2).ZPLV15E                         00292300
&XPLISTVER      SETA  2                                                 00292400
.ZPLV15E        ANOP  ,                                                 00292500
.*                                                                      00292600
                AIF   ('&RESPONSEID' EQ '').ZPLV16E                     00292700
                AIF   (&XPLISTVER GE 2).ZPLV16E                         00292800
&XPLISTVER      SETA  2                                                 00292900
.ZPLV16E        ANOP  ,                                                 00293000
.*                                                                      00293100
                AIF   ('&TIMEOUT' EQ '').ZPLV17E                        00293200
                AIF   (&XPLISTVER GE 2).ZPLV17E                         00293300
&XPLISTVER      SETA  2                                                 00293400
.ZPLV17E        ANOP  ,                                                 00293500
.*                                                                      00293600
                AIF   ('&#MSGPARTS' EQ '').ZPLV18E                      00293700
                AIF   (&XPLISTVER GE 1).ZPLV18E                         00293800
&XPLISTVER      SETA  1                                                 00293900
.ZPLV18E        ANOP  ,                                                 00294000
.*                                                                      00294100
                AIF   ('&ELEMENT' EQ '').ZPLV19E                        00294200
                AIF   (&XPLISTVER GE 1).ZPLV19E                         00294300
&XPLISTVER      SETA  1                                                 00294400
.ZPLV19E        ANOP  ,                                                 00294500
.*                                                                      00294600
                AIF   ('&ELEMFORM' EQ '').ZPLV20E                       00294700
                AIF   (&XPLISTVER GE 1).ZPLV20E                         00294800
&XPLISTVER      SETA  1                                                 00294900
.ZPLV20E        ANOP  ,                                                 00295000
.*                                                                      00295100
                AIF   ('&NEXTOFF' EQ '').ZPLV21E                        00295200
                AIF   (&XPLISTVER GE 1).ZPLV21E                         00295300
&XPLISTVER      SETA  1                                                 00295400
.ZPLV21E        ANOP  ,                                                 00295500
.*                                                                      00295600
                AIF   ('&NEXTPTROFF' EQ '').ZPLV22E                     00295700
                AIF   (&XPLISTVER GE 1).ZPLV22E                         00295800
&XPLISTVER      SETA  1                                                 00295900
.ZPLV22E        ANOP  ,                                                 00296000
.*                                                                      00296100
                AIF   ('&ENDOFQUEUE' EQ '').ZPLV23E                     00296200
                AIF   (&XPLISTVER GE 1).ZPLV23E                         00296300
&XPLISTVER      SETA  1                                                 00296400
.ZPLV23E        ANOP  ,                                                 00296500
.*                                                                      00296600
                AIF   ('&PARTOFF' EQ '').ZPLV24E                        00296700
                AIF   (&XPLISTVER GE 1).ZPLV24E                         00296800
&XPLISTVER      SETA  1                                                 00296900
.ZPLV24E        ANOP  ,                                                 00297000
.*                                                                      00297100
                AIF   ('&PARTPTROFF' EQ '').ZPLV25E                     00297200
                AIF   (&XPLISTVER GE 1).ZPLV25E                         00297300
&XPLISTVER      SETA  1                                                 00297400
.ZPLV25E        ANOP  ,                                                 00297500
.*                                                                      00297600
                AIF   ('&PARTALET' EQ '').ZPLV26E                       00297700
                AIF   (&XPLISTVER GE 1).ZPLV26E                         00297800
&XPLISTVER      SETA  1                                                 00297900
.ZPLV26E        ANOP  ,                                                 00298000
.*                                                                      00298100
                AIF   ('&PARTALETOFF' EQ '').ZPLV27E                    00298200
                AIF   (&XPLISTVER GE 1).ZPLV27E                         00298300
&XPLISTVER      SETA  1                                                 00298400
.ZPLV27E        ANOP  ,                                                 00298500
.*                                                                      00298600
                AIF   ('&PARTALETTBL' EQ '').ZPLV28E                    00298700
                AIF   (&XPLISTVER GE 1).ZPLV28E                         00298800
&XPLISTVER      SETA  1                                                 00298900
.ZPLV28E        ANOP  ,                                                 00299000
.*                                                                      00299100
                AIF   ('&PARTLEN' EQ '').ZPLV29E                        00299200
                AIF   (&XPLISTVER GE 1).ZPLV29E                         00299300
&XPLISTVER      SETA  1                                                 00299400
.ZPLV29E        ANOP  ,                                                 00299500
.*                                                                      00299600
                AIF   ('&PARTLENOFF' EQ '').ZPLV30E                     00299700
                AIF   (&XPLISTVER GE 1).ZPLV30E                         00299800
&XPLISTVER      SETA  1                                                 00299900
.ZPLV30E        ANOP  ,                                                 00300000
.*                                                                      00300100
                AIF   ('&PARTLENTBL' EQ '').ZPLV31E                     00300200
                AIF   (&XPLISTVER GE 1).ZPLV31E                         00300300
&XPLISTVER      SETA  1                                                 00300400
.ZPLV31E        ANOP  ,                                                 00300500
.*                                                                      00300600
                AIF   ('&MSGSTGKEY' EQ '').ZPLV32E                      00300700
                AIF   (&XPLISTVER GE 1).ZPLV32E                         00300800
&XPLISTVER      SETA  1                                                 00300900
.ZPLV32E        ANOP  ,                                                 00301000
.*                                                                      00301100
                AIF   ('&MSGACCESS' EQ '').ZPLV33E                      00301200
                AIF   (&XPLISTVER GE 3).ZPLV33E                         00301300
&XPLISTVER      SETA  3                                                 00301400
.ZPLV33E        ANOP  ,                                                 00301500
.*                                                                      00301600
                AIF   ('&USERDATA' EQ '').ZPLV34E                       00301700
                AIF   (&XPLISTVER GE 2).ZPLV34E                         00301800
&XPLISTVER      SETA  2                                                 00301900
.ZPLV34E        ANOP  ,                                                 00302000
.*                                                                      00302100
                AIF   ('&NOTIFYIF' EQ '').ZPLV35E                       00302200
                AIF   (&XPLISTVER GE 2).ZPLV35E                         00302300
&XPLISTVER      SETA  2                                                 00302400
.ZPLV35E        ANOP  ,                                                 00302500
.*                                                                      00302600
                AIF   ('&NOTIFYBY' EQ '').ZPLV36E                       00302700
                AIF   (&XPLISTVER GE 2).ZPLV36E                         00302800
&XPLISTVER      SETA  2                                                 00302900
.ZPLV36E        ANOP  ,                                                 00303000
.*                                                                      00303100
                AIF   ('&NOTIFYEXIT' EQ '').ZPLV37E                     00303200
                AIF   (&XPLISTVER GE 2).ZPLV37E                         00303300
&XPLISTVER      SETA  2                                                 00303400
.ZPLV37E        ANOP  ,                                                 00303500
.*                                                                      00303600
                AIF   ('&RETMSGOTOKEN' EQ '').ZPLV38E                   00303700
                AIF   (&XPLISTVER GE 2).ZPLV38E                         00303800
&XPLISTVER      SETA  2                                                 00303900
.ZPLV38E        ANOP  ,                                                 00304000
.*                                                                      00304100
                AIF   ('&LINKAGE' EQ '').ZPLV39E                        00304200
                AIF   (&XPLISTVER GE 3).ZPLV39E                         00304300
&XPLISTVER      SETA  3                                                 00304400
.ZPLV39E        ANOP  ,                                                 00304500
.*                                                                      00304600
                AIF   ('&XCFDATA' EQ '').ZPLV40E                        00304700
                AIF   (&XPLISTVER GE 3).ZPLV40E                         00304800
&XPLISTVER      SETA  3                                                 00304900
.ZPLV40E        ANOP  ,                                                 00305000
.*                                                                      00305100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00305200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00305300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00305400
.*-------------------------------------------------------------------   00305500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00305600
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00305700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00305800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00305900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00306000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00306100
                AGO   .ZPVCK2                                           00306200
.ZPVCK3         ANOP  ,                                                 00306300
.*-------------------------------------------------------------------   00306400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00306500
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00306600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00306700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00306800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00306900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00307000
                AGO   .ZPVCKE                                           00307100
.ZPVCK2         ANOP  ,                                                 00307200
.*-------------------------------------------------------------------   00307300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00307400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00307500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00307600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00307700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00307800
                AIF   (&ZN LE 3).ZPVCK4A   NOT HIGH                     00307900
.ZPVCK6         ANOP  ,                                                 00308000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00308100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00308200
&ZMS            SETC  '&ZMS THE RANGE IS "0-3"'                         00308300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00308400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00308500
&XPLISTVER      SETA  3                                                 00308600
                AGO   .ZPVCKE                                           00308700
.*-------------------------------------------------------------------   00308800
.ZPVCK4A        ANOP  ,                                                 00308900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00309000
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00309100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00309200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00309300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00309400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00309500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00309600
                AGO   .ZPVCK5                                           00309700
.ZPVCK4         ANOP  ,                                                 00309800
&XPLISTVER      SETA  &PLISTVER(1)                                      00309900
.ZPVCK5         ANOP  ,                                                 00310000
.ZPVCKE         ANOP  ,                                                 00310100
.********************************************************************   00310200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00310300
.********************************************************************   00310400
                   ACTR  10000                                          00310500
.*------------------------------------------------------------------    00310600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00310700
&XMF               SETC  ''          INITIALIZE XVARIABLE               00310800
.*-------------------------------------------------------------------   00310900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00311000
.ZG172             ANOP  ,                                              00311100
&ZTLC              SETC 'S'                                             00311200
                   AIF   ('&MF(1)' NE '&ZTLC').ZG173                    00311300
&XMF               SETC  'S'         SET KEYWORD                        00311400
                   AIF   (N'&MF LE 1).ZG172A    CK NUM                  00311500
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00311600
&ZMS               SETC  '&ZMS.&MF"'                                    00311700
&ZMS               SETC  '&ZMS "MF"'                                    00311800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00311900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00312000
.ZG172A            ANOP  ,                                              00312100
.*-------------------------------------------------------------------   00312200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00312300
.ZG173             ANOP  ,                                              00312400
&ZTLC              SETC 'L'                                             00312500
                   AIF   ('&MF(1)' NE '&ZTLC').ZG180                    00312600
&XMF               SETC  'L'         SET KEYWORD                        00312700
                   AIF   (N'&MF LE 3).ZG173A    CK NUM                  00312800
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00312900
&ZMS               SETC  '&ZMS.&MF"'                                    00313000
&ZMS               SETC  '&ZMS "MF"'                                    00313100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00313200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00313300
.ZG173A            ANOP  ,                                              00313400
.*-------------------------------------------------------------------   00313500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00313600
                   AIF   (N'&SYSLIST NE 0).ZG173B  POSITIONALS?         00313700
                   AIF   ('&MEMTOKEN' NE '').ZG173B  KEYS?              00313800
                   AIF   ('&SENDTO' NE '').ZG173B  KEYS?                00313900
                   AIF   ('&TARGET' NE '').ZG173B  KEYS?                00314000
                   AIF   ('&DELIVERMSG' NE '').ZG173B  KEYS?            00314100
                   AIF   ('&STREAMID' NE '').ZG173B  KEYS?              00314200
                   AIF   ('&GETRESPONSE' NE '').ZG173B  KEYS?           00314300
                   AIF   ('&TIMEOUT' NE '').ZG173B  KEYS?               00314400
                   AIF   ('&MEMBERS' NE '').ZG173B  KEYS?               00314500
                   AIF   ('&TARGETS' NE '').ZG173B  KEYS?               00314600
                   AIF   ('&#TARGETS' NE '').ZG173B  KEYS?              00314700
                   AIF   ('&NEXTTARGETOFF' NE '').ZG173B  KEYS?         00314800
                   AIF   ('&RESPONSEID' NE '').ZG173B  KEYS?            00314900
                   AIF   ('&MULTIPART' NE '').ZG173B  KEYS?             00315000
                   AIF   ('&MSGCNTL' NE '').ZG173B  KEYS?               00315100
                   AIF   ('&MSGBUF' NE '').ZG173B  KEYS?                00315200
                   AIF   ('&MSGLEN' NE '').ZG173B  KEYS?                00315300
                   AIF   ('&#MSGPARTS' NE '').ZG173B  KEYS?             00315400
                   AIF   ('&ELEMENT' NE '').ZG173B  KEYS?               00315500
                   AIF   ('&ELEMFORM' NE '').ZG173B  KEYS?              00315600
                   AIF   ('&NEXTOFF' NE '').ZG173B  KEYS?               00315700
                   AIF   ('&NEXTPTROFF' NE '').ZG173B  KEYS?            00315800
                   AIF   ('&ENDOFQUEUE' NE '').ZG173B  KEYS?            00315900
                   AIF   ('&PARTOFF' NE '').ZG173B  KEYS?               00316000
                   AIF   ('&PARTPTROFF' NE '').ZG173B  KEYS?            00316100
                   AIF   ('&PARTALET' NE '').ZG173B  KEYS?              00316200
                   AIF   ('&PARTALETOFF' NE '').ZG173B  KEYS?           00316300
                   AIF   ('&PARTALETTBL' NE '').ZG173B  KEYS?           00316400
                   AIF   ('&PARTLEN' NE '').ZG173B  KEYS?               00316500
                   AIF   ('&PARTLENOFF' NE '').ZG173B  KEYS?            00316600
                   AIF   ('&PARTLENTBL' NE '').ZG173B  KEYS?            00316700
                   AIF   ('&MSGSTGKEY' NE '').ZG173B  KEYS?             00316800
                   AIF   ('&MSGACCESS' NE '').ZG173B  KEYS?             00316900
                   AIF   ('&NOTIFY' NE '').ZG173B  KEYS?                00317000
                   AIF   ('&USERDATA' NE '').ZG173B  KEYS?              00317100
                   AIF   ('&NOTIFYIF' NE '').ZG173B  KEYS?              00317200
                   AIF   ('&NOTIFYBY' NE '').ZG173B  KEYS?              00317300
                   AIF   ('&NOTIFYEXIT' NE '').ZG173B  KEYS?            00317400
                   AIF   ('&RETMSGOTOKEN' NE '').ZG173B  KEYS?          00317500
                   AIF   ('&LINKAGE' NE '').ZG173B  KEYS?               00317600
                   AIF   ('&XCFDATA' NE '').ZG173B  KEYS?               00317700
                   AIF   ('&RETCODE' NE '').ZG173B  KEYS?               00317800
                   AIF   ('&RSNCODE' NE '').ZG173B  KEYS?               00317900
                   AGO    .ZG173C    INVOCATION OKAY                    00318000
.ZG173B            ANOP  ,                                              00318100
&ZMS               SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE           00318200
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00318300
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00318400
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00318500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00318600
.ZG173C            ANOP  ,                                              00318700
.*-------------------------------------------------------------------   00318800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00318900
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00319000
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00319100
                   AIF   (N'&MF(2) GT 1).ZG175B  MULTI PARMS            00319200
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00319300
.ZG175B            AIF   (K'&MF(2) GT 0).ZG175C                         00319400
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00319500
&ZMS               SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*               00319600
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00319700
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00319800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00319900
.ZG175C            ANOP  ,                                              00320000
.*-------------------------------------------------------------------   00320100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00320200
                   AIF   (K'&ZXMFCTRL LE 0).ZG175P  NOT I/O             00320300
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG175P                00320400
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00320500
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00320600
&ZMS               SETC  '&ZMS.&MF"'                                    00320700
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00320800
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00320900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00321000
.ZG175P            ANOP  ,                                              00321100
.*-------------------------------------------------------------------   00321200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00321300
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00321400
&XMFATTR           SETC  '0D'                                           00321500
                   AIF   (K'&MF(3) LE 0).ZG178B  PARM                   00321600
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00321700
                   AIF   (N'&MF(3) GT 1).ZG178B  MULTI PARMS            00321800
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00321900
.ZG178B            ANOP  ,                                              00322000
.*-------------------------------------------------------------------   00322100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00322200
                   AIF   (K'&ZXMFATTR LE 0).ZG178P  NOT I/O             00322300
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG178P                00322400
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00322500
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00322600
&ZMS               SETC  '&ZMS.&MF"'                                    00322700
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00322800
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00322900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00323000
.ZG178P            ANOP  ,                                              00323100
.*-------------------------------------------------------------------   00323200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00323300
                   AIF   (K'&ZXMFATTR LE 0).ZG178S  NOT I/O             00323400
                   AIF   (K'&XMFATTR LE 60).ZG178S  LNG OK              00323500
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00323600
&ZMS               SETC  '"MF='      *KLNGA* MNOTE                      00323700
&ZMS               SETC  '&ZMS.&MF"'                                    00323800
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00323900
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00324000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00324100
.ZG178S            ANOP  ,                                              00324200
.*-------------------------------------------------------------------   00324300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00324400
.ZG180             ANOP  ,                                              00324500
&ZTLC              SETC 'E'                                             00324600
                   AIF   ('&MF(1)' NE '&ZTLC').ZG188                    00324700
&XMF               SETC  'E'         SET KEYWORD                        00324800
                   AIF   (N'&MF LE 3).ZG180A    CK NUM                  00324900
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00325000
&ZMS               SETC  '&ZMS.&MF"'                                    00325100
&ZMS               SETC  '&ZMS "MF"'                                    00325200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00325300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00325400
.ZG180A            ANOP  ,                                              00325500
.*-------------------------------------------------------------------   00325600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00325700
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00325800
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00325900
                   AIF   (N'&MF(2) GT 1).ZG182B  MULTI PARMS            00326000
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00326100
.ZG182B            AIF   (K'&MF(2) GT 0).ZG182C                         00326200
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00326300
&ZMS               SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*               00326400
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00326500
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00326600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00326700
.ZG182C            ANOP  ,                                              00326800
.*-------------------------------------------------------------------   00326900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00327000
                   AIF   (K'&ZXMFCTRL LE 0).ZG182R  NOT I/O             00327100
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG182R                00327200
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00327300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG182P                  00327400
                   AIF   (K'&ZCGPR GT 2).ZG182Q                         00327500
                   AIF   ('&ZCGPR' EQ '0').ZG182Q                       00327600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00327700
                   AIF   (T'&ZCGPR NE 'N').ZG182Q  INVALID REG NAME     00327800
.ZG182P            ANOP  ,                                              00327900
                   AIF   (T'&ZCGPR NE 'N').ZG182R  NON NUMERIC          00328000
                   AIF   ('&ZCGPR' LT '1').ZG182Q                       00328100
                   AIF   ('&ZCGPR' LE '12').ZG182R                      00328200
.ZG182Q            ANOP  ,                                              00328300
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00328400
&ZMS               SETC  '&ZMS.&MF"'                                    00328500
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00328600
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00328700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00328800
.ZG182R            ANOP  ,                                              00328900
.*-------------------------------------------------------------------   00329000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00329100
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00329200
.ZG186A   AIF   ('&MF(3)' NE 'COMPLETE').ZG187A                         00329300
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00329400
.*-------------------------------------------------------------------   00329500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00329600
.ZG187A            AIF   (K'&XMFSCK GT 0).ZG187C  KEYWORD               00329700
                   AIF   (K'&MF(3) LE 0).ZG187B                         00329800
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00329900
&ZMS               SETC  '&ZMS.&MF"'                                    00330000
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00330100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00330200
&ZMS               SETC  '&ZMS "COMPLETE".'                             00330300
                   MNOTE 8,' &ZMS '                                     00330400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00330500
.ZG187B            ANOP  ,                                              00330600
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00330700
.ZG187C            ANOP  ,                                              00330800
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00330900
.*------------------------------------------------------------------    00331000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00331100
.ZG188             ANOP  ,                                              00331200
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00331300
                   AIF   (K'&XMF GT 0).ZG188E   VALID ARG               00331400
                   AIF   (T'&MF EQ 'O').ZG188D  OMITTED                 00331500
&ZASYSLNDX         SETA  0                                              00331600
.ZG188A            ANOP  ,           POSITIONAL MACRO KEY               00331700
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00331800
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG188C              00331900
&ZTLC              SETC 'MF'                                            00332000
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG188A     00332100
.ZG188B            ANOP  ,                                              00332200
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00332300
&ZMS               SETC  'THE "MF" KEY'         *KOPTA* MNOTE           00332400
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00332500
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00332600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00332700
                   AGO   .ZG188E                                        00332800
.ZG188C            ANOP  ,                                              00332900
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00333000
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00333100
&ZMS               SETC  '&ZMS.&MF"'                                    00333200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00333300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00333400
&ZMS               SETC  '&ZMS "S",'                                    00333500
&ZMS               SETC  '&ZMS "L",'                                    00333600
&ZMS               SETC  '&ZMS OR "E".'                                 00333700
                   MNOTE 8,' &ZMS '                                     00333800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00333900
                   AGO   .ZG188E                                        00334000
.ZG188D            ANOP  ,                                              00334100
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00334200
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00334300
.ZG188E            ANOP  ,                                              00334400
.********************************************************************   00334500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00334600
.********************************************************************   00334700
                   ACTR  10000                                          00334800
.*-------------------------------------------------------------------   00334900
.***AG.MF03 MF=(SLE)                                                    00335000
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00335100
.*----------------------------------------------------------------***   00335200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00335300
                   AIF   (N'&MEMTOKEN LE 1).ZG2A  CK NUM                00335400
&ZMS               SETC  '"MEMTOKEN='           *KPOSA* MNOTE           00335500
&ZMS               SETC  '&ZMS.&MEMTOKEN"'                              00335600
&ZMS               SETC  '&ZMS "MEMTOKEN"'                              00335700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00335800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00335900
.ZG2A              ANOP  ,                                              00336000
.*-------------------------------------------------------------------   00336100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00336200
&ZXMEMTOKEN        SETC  'INPUT'     SET IN/OUTPUT                      00336300
&XMEMTOKEN         SETC  '&MEMTOKEN(1)'         SET XVARIABLE           00336400
                   AIF   (N'&MEMTOKEN GT 1).ZG2B  MULTI PARMS           00336500
&XMEMTOKEN         SETC  '&MEMTOKEN'            SET XVARIABLE           00336600
.ZG2B              AIF   (K'&MEMTOKEN(1) GT 0).ZG2C                     00336700
&ZXMEMTOKEN        SETC  ''          RESET IN/OUTPUT                    00336800
&ZMS               SETC  ' '         *KRQDA*                            00336900
&ZMS               SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                  00337000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00337100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00337200
.ZG2C              ANOP  ,                                              00337300
.*-------------------------------------------------------------------   00337400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00337500
                   AIF   (K'&ZXMEMTOKEN LE 0).ZG2R  NOT I/O             00337600
                   AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG2R                00337700
&ZCGPR             SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                 00337800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    00337900
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           00338000
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         00338100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00338200
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       00338300
.ZG2P              ANOP  ,                                              00338400
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            00338500
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         00338600
                   AIF   ('&ZCGPR' LE '12').ZG2R                        00338700
.ZG2Q              ANOP  ,                                              00338800
&ZMS               SETC  '"MEMTOKEN='           *KGPRA* MNOTE           00338900
&ZMS               SETC  '&ZMS.&MEMTOKEN"'                              00339000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00339100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00339200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00339300
.ZG2R              ANOP  ,                                              00339400
.*------------------------------------------------------------------    00339500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00339600
&XSENDTO           SETC  ''          INITIALIZE XVARIABLE               00339700
.*-------------------------------------------------------------------   00339800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00339900
.ZG6               ANOP  ,                                              00340000
                   AIF   (K'&SENDTO(1) LE 0).ZG6A                       00340100
&ZTLC              SETC 'MEMBER'                                        00340200
                   AIF   ('&SENDTO(1)' NE '&ZTLC').ZG29                 00340300
&XSENDTO           SETC  'MEMBER'    SET KEYWORD                        00340400
                   AIF   (N'&SENDTO LE 1).ZG6A  CK NUM                  00340500
&ZMS               SETC  '"SENDTO='  *KPOSA* MNOTE                      00340600
&ZMS               SETC  '&ZMS.&SENDTO"'                                00340700
&ZMS               SETC  '&ZMS "SENDTO"'                                00340800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00340900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00341000
.ZG6A              ANOP  ,                                              00341100
.*------------------------------------------------------------------    00341200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00341400
.ZG6A0             AIF   (K'&MEMBERS LE 0).ZG6A1  OK                    00341500
&ZCVAL             SETC '&ZCVAL MEMBERS'        INCORRECT KEY USED      00341600
.ZG6A1             AIF   (K'&TARGETS LE 0).ZG6A2  OK                    00341700
&ZCVAL             SETC '&ZCVAL TARGETS'        INCORRECT KEY USED      00341800
.ZG6A2             AIF   (K'&#TARGETS LE 0).ZG6A3  OK                   00341900
&ZCVAL             SETC '&ZCVAL #TARGETS'       INCORRECT KEY USED      00342000
.ZG6A3             AIF   (K'&NEXTTARGETOFF LE 0).ZG6A4  OK              00342100
&ZCVAL             SETC '&ZCVAL NEXTTARGETOFF'  INCORRECT KEY USED      00342200
.ZG6A4             AIF   (K'&RESPONSEID LE 0).ZG6A5  OK                 00342300
&ZCVAL             SETC '&ZCVAL RESPONSEID'     INCORRECT KEY USED      00342400
.ZG6A5             AIF   (K'&ZCVAL LE 0).ZG6A6  OK                      00342500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00342600
&ZMS               SETC  '"SENDTO'   *KMEIA* MNOTE                      00342700
&ZMS               SETC  '&ZMS.=&SENDTO"'                               00342800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00342900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00343000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00343100
.ZG6A6             ANOP  ,                                              00343200
.*----------------------------------------------------------------***   00343300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00343400
                   AIF   (N'&TARGET LE 1).ZG8A  CK NUM                  00343500
&ZMS               SETC  '"TARGET='  *KPOSA* MNOTE                      00343600
&ZMS               SETC  '&ZMS.&TARGET"'                                00343700
&ZMS               SETC  '&ZMS "TARGET"'                                00343800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00343900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00344000
.ZG8A              ANOP  ,                                              00344100
.*-------------------------------------------------------------------   00344200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00344300
&ZXTARGET          SETC  'INPUT'     SET IN/OUTPUT                      00344400
&XTARGET           SETC  '&TARGET(1)'           SET XVARIABLE           00344500
                   AIF   (N'&TARGET GT 1).ZG8B  MULTI PARMS             00344600
&XTARGET           SETC  '&TARGET'   SET XVARIABLE                      00344700
.ZG8B              AIF   (K'&TARGET(1) GT 0).ZG8C                       00344800
&ZXTARGET          SETC  ''          RESET IN/OUTPUT                    00344900
&ZMS               SETC  ' '         *KRQDA*                            00345000
&ZMS               SETC  '&ZMS "TARGET" KEY AND ITS'                    00345100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00345200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00345300
.ZG8C              ANOP  ,                                              00345400
.*-------------------------------------------------------------------   00345500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00345600
                   AIF   (K'&ZXTARGET LE 0).ZG8R  NOT I/O               00345700
                   AIF   ('&XTARGET'(1,1) NE '(').ZG8R                  00345800
&ZCGPR             SETC  '&XTARGET'(2,K'&XTARGET-2)                     00345900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                    00346000
                   AIF   (K'&ZCGPR GT 2).ZG8Q                           00346100
                   AIF   ('&ZCGPR' EQ '0').ZG8Q                         00346200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00346300
                   AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME       00346400
.ZG8P              ANOP  ,                                              00346500
                   AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC            00346600
                   AIF   ('&ZCGPR' LT '2').ZG8Q                         00346700
                   AIF   ('&ZCGPR' LE '12').ZG8R                        00346800
.ZG8Q              ANOP  ,                                              00346900
&ZMS               SETC  '"TARGET='  *KGPRA* MNOTE                      00347000
&ZMS               SETC  '&ZMS.&TARGET"'                                00347100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00347200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00347300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00347400
.ZG8R              ANOP  ,                                              00347500
.*------------------------------------------------------------------    00347600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00347700
&XDELIVERMSG       SETC  ''          INITIALIZE XVARIABLE               00347800
.*-------------------------------------------------------------------   00347900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00348000
.ZG12              ANOP  ,                                              00348100
                   AIF   (K'&DELIVERMSG(1) LE 0).ZG12A                  00348200
&ZTLC              SETC 'UNORDERED'                                     00348300
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG13             00348400
&XDELIVERMSG       SETC  'UNORDERED'            SET KEYWORD             00348500
                   AIF   (N'&DELIVERMSG LE 1).ZG12A  CK NUM             00348600
&ZMS               SETC  '"DELIVERMSG='         *KPOSA* MNOTE           00348700
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00348800
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00348900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00349000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00349100
.ZG12A             ANOP  ,                                              00349200
.*------------------------------------------------------------------    00349300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00349400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00349500
.ZG12A0            AIF   (K'&STREAMID LE 0).ZG12A1  OK                  00349600
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00349700
.ZG12A1            AIF   (K'&ZCVAL LE 0).ZG12A2  OK                     00349800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00349900
&ZMS               SETC  '"DELIVERMSG'          *KMEIA* MNOTE           00350000
&ZMS               SETC  '&ZMS.=&DELIVERMSG"'                           00350100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00350200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00350300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00350400
.ZG12A2            ANOP  ,                                              00350500
.*-------------------------------------------------------------------   00350600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00350700
.ZG13              ANOP  ,                                              00350800
&ZTLC              SETC 'ORDERED'                                       00350900
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG17             00351000
&XDELIVERMSG       SETC  'ORDERED'   SET KEYWORD                        00351100
                   AIF   (N'&DELIVERMSG LE 1).ZG13A  CK NUM             00351200
&ZMS               SETC  '"DELIVERMSG='         *KPOSA* MNOTE           00351300
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00351400
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00351500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00351600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00351700
.ZG13A             ANOP  ,                                              00351800
.*----------------------------------------------------------------***   00351900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00352000
                   AIF   (N'&STREAMID LE 1).ZG15A  CK NUM               00352100
&ZMS               SETC  '"STREAMID='           *KPOSA* MNOTE           00352200
&ZMS               SETC  '&ZMS.&STREAMID"'                              00352300
&ZMS               SETC  '&ZMS "STREAMID"'                              00352400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00352500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00352600
.ZG15A             ANOP  ,                                              00352700
.*-------------------------------------------------------------------   00352800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00352900
&ZXSTREAMID        SETC  'INPUT'     SET IN/OUTPUT                      00353000
&XSTREAMID         SETC  '1'                                            00353100
                   AIF   (K'&STREAMID(1) LE 0).ZG15B  PARM              00353200
&XSTREAMID         SETC  '&STREAMID(1)'         SET XVARIABLE           00353300
                   AIF   (N'&STREAMID GT 1).ZG15B  MULTI PARMS          00353400
&XSTREAMID         SETC  '&STREAMID'            SET XVARIABLE           00353500
.ZG15B             ANOP  ,                                              00353600
.*-------------------------------------------------------------------   00353700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00353800
                   AIF   (K'&ZXSTREAMID LE 0).ZG15R  NOT I/O            00353900
                   AIF   ('&XSTREAMID'(1,1) NE '(').ZG15R               00354000
&ZCGPR             SETC  '&XSTREAMID'(2,K'&XSTREAMID-2)                 00354100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                   00354200
                   AIF   (K'&ZCGPR GT 2).ZG15Q                          00354300
                   AIF   ('&ZCGPR' EQ '0').ZG15Q                        00354400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00354500
                   AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME      00354600
.ZG15P             ANOP  ,                                              00354700
                   AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC           00354800
                   AIF   ('&ZCGPR' LT '2').ZG15Q                        00354900
                   AIF   ('&ZCGPR' LE '12').ZG15R                       00355000
.ZG15Q             ANOP  ,                                              00355100
&ZMS               SETC  '"STREAMID='           *KGPRA* MNOTE           00355200
&ZMS               SETC  '&ZMS.&STREAMID"'                              00355300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00355400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00355500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00355600
.ZG15R             ANOP  ,                                              00355700
.*------------------------------------------------------------------    00355800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00355900
.ZG17              ANOP  ,                                              00356000
&ZXDELIVERMSG      SETC  'INPUT'     SET IN/OUTPUT                      00356100
                   AIF   (K'&XDELIVERMSG GT 0).ZG17E  VALID ARG         00356200
                   AIF   (T'&DELIVERMSG EQ 'O').ZG17D  OMITTED          00356300
&ZASYSLNDX         SETA  0                                              00356400
.ZG17A             ANOP  ,           POSITIONAL MACRO KEY               00356500
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00356600
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG17C               00356700
&ZTLC              SETC 'DELIVERMSG'                                    00356800
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG17A      00356900
.ZG17B             ANOP  ,                                              00357000
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00357100
&ZMS               SETC  'THE "DELIVERMSG" KEY'  *KOPTA* MNOTE          00357200
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00357300
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00357400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00357500
                   AGO   .ZG17E                                         00357600
.ZG17C             ANOP  ,                                              00357700
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00357800
&ZMS               SETC  '"DELIVERMSG='         *KUKWA* MNOTE           00357900
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00358000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00358100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00358200
&ZMS               SETC  '&ZMS "UNORDERED"'                             00358300
&ZMS               SETC  '&ZMS OR "ORDERED".'                           00358400
                   MNOTE 8,' &ZMS '                                     00358500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00358600
                   AGO   .ZG17E                                         00358700
.ZG17D             ANOP  ,                                              00358800
&XDELIVERMSG       SETC  'UNORDERED'            SET DEFAULT KEYWORD     00358900
.ZG17E             ANOP  ,                                              00359000
.*------------------------------------------------------------------    00359100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00359200
&XGETRESPONSE      SETC  ''          INITIALIZE XVARIABLE               00359300
.*-------------------------------------------------------------------   00359400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00359500
.ZG20              ANOP  ,                                              00359600
                   AIF   (K'&GETRESPONSE(1) LE 0).ZG20A                 00359700
&ZTLC              SETC 'NO'                                            00359800
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG24            00359900
&XGETRESPONSE      SETC  'NO'        SET KEYWORD                        00360000
                   AIF   (N'&GETRESPONSE LE 1).ZG20A  CK NUM            00360100
&ZMS               SETC  '"GETRESPONSE='        *KPOSA* MNOTE           00360200
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00360300
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00360400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00360500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00360600
.ZG20A             ANOP  ,                                              00360700
.*----------------------------------------------------------------***   00360800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00360900
                   AIF   (N'&TIMEOUT LE 1).ZG22A  CK NUM                00361000
&ZMS               SETC  '"TIMEOUT='            *KPOSA* MNOTE           00361100
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00361200
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00361300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00361400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00361500
.ZG22A             ANOP  ,                                              00361600
.*-------------------------------------------------------------------   00361700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00361800
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00361900
&XTIMEOUT          SETC  'ZERO'                                         00362000
                   AIF   (K'&TIMEOUT(1) LE 0).ZG22B  PARM               00362100
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00362200
                   AIF   (N'&TIMEOUT GT 1).ZG22B  MULTI PARMS           00362300
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00362400
.ZG22B             ANOP  ,                                              00362500
.*-------------------------------------------------------------------   00362600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00362700
                   AIF   (K'&ZXTIMEOUT LE 0).ZG22R  NOT I/O             00362800
         AIF   ('&XTIMEOUT' EQ 'ZERO').ZG22R                            00362900
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG22R                00363000
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00363100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                   00363200
                   AIF   (K'&ZCGPR GT 2).ZG22Q                          00363300
                   AIF   ('&ZCGPR' EQ '0').ZG22Q                        00363400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00363500
                   AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME      00363600
.ZG22P             ANOP  ,                                              00363700
                   AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC           00363800
                   AIF   ('&ZCGPR' LT '2').ZG22Q                        00363900
                   AIF   ('&ZCGPR' LE '12').ZG22R                       00364000
.ZG22Q             ANOP  ,                                              00364100
&ZMS               SETC  '"TIMEOUT='            *KGPRA* MNOTE           00364200
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00364300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00364400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00364500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00364600
.ZG22R             ANOP  ,                                              00364700
.*-------------------------------------------------------------------   00364800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00364900
.ZG24              ANOP  ,                                              00365000
&ZTLC              SETC 'YES'                                           00365100
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG28            00365200
&XGETRESPONSE      SETC  'YES'       SET KEYWORD                        00365300
                   AIF   (N'&GETRESPONSE LE 1).ZG24A  CK NUM            00365400
&ZMS               SETC  '"GETRESPONSE='        *KPOSA* MNOTE           00365500
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00365600
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00365700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00365800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00365900
.ZG24A             ANOP  ,                                              00366000
.*----------------------------------------------------------------***   00366100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00366200
                   AIF   (N'&TIMEOUT LE 1).ZG26A  CK NUM                00366300
&ZMS               SETC  '"TIMEOUT='            *KPOSA* MNOTE           00366400
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00366500
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00366600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00366700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00366800
.ZG26A             ANOP  ,                                              00366900
.*-------------------------------------------------------------------   00367000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00367100
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00367200
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00367300
                   AIF   (N'&TIMEOUT GT 1).ZG26B  MULTI PARMS           00367400
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00367500
.ZG26B             AIF   (K'&TIMEOUT(1) GT 0).ZG26C                     00367600
&ZXTIMEOUT         SETC  ''          RESET IN/OUTPUT                    00367700
&ZMS               SETC  ' '         *KRQDA*                            00367800
&ZMS               SETC  '&ZMS "TIMEOUT" KEY AND ITS'                   00367900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00368000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00368100
.ZG26C             ANOP  ,                                              00368200
.*-------------------------------------------------------------------   00368300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00368400
                   AIF   (K'&ZXTIMEOUT LE 0).ZG26R  NOT I/O             00368500
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG26R                00368600
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00368700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                   00368800
                   AIF   (K'&ZCGPR GT 2).ZG26Q                          00368900
                   AIF   ('&ZCGPR' EQ '0').ZG26Q                        00369000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00369100
                   AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME      00369200
.ZG26P             ANOP  ,                                              00369300
                   AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC           00369400
                   AIF   ('&ZCGPR' LT '2').ZG26Q                        00369500
                   AIF   ('&ZCGPR' LE '12').ZG26R                       00369600
.ZG26Q             ANOP  ,                                              00369700
&ZMS               SETC  '"TIMEOUT='            *KGPRA* MNOTE           00369800
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00369900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00370000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00370100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00370200
.ZG26R             ANOP  ,                                              00370300
.*------------------------------------------------------------------    00370400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00370500
.ZG28              ANOP  ,                                              00370600
&ZXGETRESPONSE     SETC  'INPUT'     SET IN/OUTPUT                      00370700
                   AIF   (K'&XGETRESPONSE GT 0).ZG28E  VALID ARG        00370800
                   AIF   (T'&GETRESPONSE EQ 'O').ZG28D  OMITTED         00370900
&ZASYSLNDX         SETA  0                                              00371000
.ZG28A             ANOP  ,           POSITIONAL MACRO KEY               00371100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00371200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG28C               00371300
&ZTLC              SETC 'GETRESPONSE'                                   00371400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG28A      00371500
.ZG28B             ANOP  ,                                              00371600
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00371700
&ZMS               SETC  'THE "GETRESPONSE" KEY'  *KOPTA* MNOTE         00371800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00371900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00372000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00372100
                   AGO   .ZG28E                                         00372200
.ZG28C             ANOP  ,                                              00372300
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00372400
&ZMS               SETC  '"GETRESPONSE='        *KUKWA* MNOTE           00372500
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00372600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00372700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00372800
&ZMS               SETC  '&ZMS "NO"'                                    00372900
&ZMS               SETC  '&ZMS OR "YES".'                               00373000
                   MNOTE 8,' &ZMS '                                     00373100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00373200
                   AGO   .ZG28E                                         00373300
.ZG28D             ANOP  ,                                              00373400
&XGETRESPONSE      SETC  'NO'        SET DEFAULT KEYWORD                00373500
.ZG28E             ANOP  ,                                              00373600
.*-------------------------------------------------------------------   00373700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00373800
.ZG29              ANOP  ,                                              00373900
&ZTLC              SETC 'GROUP'                                         00374000
                   AIF   ('&SENDTO(1)' NE '&ZTLC').ZG62                 00374100
&XSENDTO           SETC  'GROUP'     SET KEYWORD                        00374200
                   AIF   (N'&SENDTO LE 1).ZG29A  CK NUM                 00374300
&ZMS               SETC  '"SENDTO='  *KPOSA* MNOTE                      00374400
&ZMS               SETC  '&ZMS.&SENDTO"'                                00374500
&ZMS               SETC  '&ZMS "SENDTO"'                                00374600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00374700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00374800
.ZG29A             ANOP  ,                                              00374900
.*------------------------------------------------------------------    00375000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00375100
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00375200
.ZG29A0            AIF   (K'&TARGET LE 0).ZG29A1  OK                    00375300
&ZCVAL             SETC '&ZCVAL TARGET'         INCORRECT KEY USED      00375400
.ZG29A1            AIF   (K'&RESPONSEID LE 0).ZG29A2  OK                00375500
&ZCVAL             SETC '&ZCVAL RESPONSEID'     INCORRECT KEY USED      00375600
.ZG29A2            AIF   (K'&ZCVAL LE 0).ZG29A3  OK                     00375700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00375800
&ZMS               SETC  '"SENDTO'   *KMEIA* MNOTE                      00375900
&ZMS               SETC  '&ZMS.=&SENDTO"'                               00376000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00376100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00376200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00376300
.ZG29A3            ANOP  ,                                              00376400
.*------------------------------------------------------------------    00376500
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00376600
&XMEMBERS          SETC  ''          INITIALIZE XVARIABLE               00376700
.*-------------------------------------------------------------------   00376800
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00376900
.ZG32              ANOP  ,                                              00377000
                   AIF   (K'&MEMBERS(1) LE 0).ZG32A                     00377100
&ZTLC              SETC 'TABLE'                                         00377200
                   AIF   ('&MEMBERS(1)' NE '&ZTLC').ZG42                00377300
&XMEMBERS          SETC  'TABLE'     SET KEYWORD                        00377400
                   AIF   (N'&MEMBERS LE 1).ZG32A  CK NUM                00377500
&ZMS               SETC  '"MEMBERS='            *KPOSA* MNOTE           00377600
&ZMS               SETC  '&ZMS.&MEMBERS"'                               00377700
&ZMS               SETC  '&ZMS "MEMBERS"'                               00377800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00377900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00378000
.ZG32A             ANOP  ,                                              00378100
.*----------------------------------------------------------------***   00378200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00378300
                   AIF   (N'&TARGETS LE 1).ZG34A  CK NUM                00378400
&ZMS               SETC  '"TARGETS='            *KPOSA* MNOTE           00378500
&ZMS               SETC  '&ZMS.&TARGETS"'                               00378600
&ZMS               SETC  '&ZMS "TARGETS"'                               00378700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00378800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00378900
.ZG34A             ANOP  ,                                              00379000
.*-------------------------------------------------------------------   00379100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00379200
&ZXTARGETS         SETC  'INPUT'     SET IN/OUTPUT                      00379300
&XTARGETS          SETC  '&TARGETS(1)'          SET XVARIABLE           00379400
                   AIF   (N'&TARGETS GT 1).ZG34B  MULTI PARMS           00379500
&XTARGETS          SETC  '&TARGETS'  SET XVARIABLE                      00379600
.ZG34B             AIF   (K'&TARGETS(1) GT 0).ZG34C                     00379700
&ZXTARGETS         SETC  ''          RESET IN/OUTPUT                    00379800
&ZMS               SETC  ' '         *KRQDA*                            00379900
&ZMS               SETC  '&ZMS "TARGETS" KEY AND ITS'                   00380000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00380100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00380200
.ZG34C             ANOP  ,                                              00380300
.*-------------------------------------------------------------------   00380400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00380500
                   AIF   (K'&ZXTARGETS LE 0).ZG34R  NOT I/O             00380600
                   AIF   ('&XTARGETS'(1,1) NE '(').ZG34R                00380700
&ZCGPR             SETC  '&XTARGETS'(2,K'&XTARGETS-2)                   00380800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                   00380900
                   AIF   (K'&ZCGPR GT 2).ZG34Q                          00381000
                   AIF   ('&ZCGPR' EQ '0').ZG34Q                        00381100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00381200
                   AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME      00381300
.ZG34P             ANOP  ,                                              00381400
                   AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC           00381500
                   AIF   ('&ZCGPR' LT '2').ZG34Q                        00381600
                   AIF   ('&ZCGPR' LE '12').ZG34R                       00381700
.ZG34Q             ANOP  ,                                              00381800
&ZMS               SETC  '"TARGETS='            *KGPRA* MNOTE           00381900
&ZMS               SETC  '&ZMS.&TARGETS"'                               00382000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00382100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00382200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00382300
.ZG34R             ANOP  ,                                              00382400
.*----------------------------------------------------------------***   00382500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00382600
                   AIF   (N'&#TARGETS LE 1).ZG37A  CK NUM               00382700
&ZMS               SETC  '"#TARGETS='           *KPOSA* MNOTE           00382800
&ZMS               SETC  '&ZMS.&#TARGETS"'                              00382900
&ZMS               SETC  '&ZMS "#TARGETS"'                              00383000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00383100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00383200
.ZG37A             ANOP  ,                                              00383300
.*-------------------------------------------------------------------   00383400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00383500
&ZX#TARGETS        SETC  'INPUT'     SET IN/OUTPUT                      00383600
&X#TARGETS         SETC  '&#TARGETS(1)'         SET XVARIABLE           00383700
                   AIF   (N'&#TARGETS GT 1).ZG37B  MULTI PARMS          00383800
&X#TARGETS         SETC  '&#TARGETS'            SET XVARIABLE           00383900
.ZG37B             AIF   (K'&#TARGETS(1) GT 0).ZG37C                    00384000
&ZX#TARGETS        SETC  ''          RESET IN/OUTPUT                    00384100
&ZMS               SETC  ' '         *KRQDA*                            00384200
&ZMS               SETC  '&ZMS "#TARGETS" KEY AND ITS'                  00384300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00384400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00384500
.ZG37C             ANOP  ,                                              00384600
.*-------------------------------------------------------------------   00384700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00384800
                   AIF   (K'&ZX#TARGETS LE 0).ZG37R  NOT I/O            00384900
                   AIF   ('&X#TARGETS'(1,1) NE '(').ZG37R               00385000
&ZCGPR             SETC  '&X#TARGETS'(2,K'&X#TARGETS-2)                 00385100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                   00385200
                   AIF   (K'&ZCGPR GT 2).ZG37Q                          00385300
                   AIF   ('&ZCGPR' EQ '0').ZG37Q                        00385400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00385500
                   AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME      00385600
.ZG37P             ANOP  ,                                              00385700
                   AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC           00385800
                   AIF   ('&ZCGPR' LT '2').ZG37Q                        00385900
                   AIF   ('&ZCGPR' LE '12').ZG37R                       00386000
.ZG37Q             ANOP  ,                                              00386100
&ZMS               SETC  '"#TARGETS='           *KGPRA* MNOTE           00386200
&ZMS               SETC  '&ZMS.&#TARGETS"'                              00386300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00386400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00386500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00386600
.ZG37R             ANOP  ,                                              00386700
.*----------------------------------------------------------------***   00386800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00386900
                   AIF   (N'&NEXTTARGETOFF LE 1).ZG40A  CK NUM          00387000
&ZMS               SETC  '"NEXTTARGETOFF='      *KPOSA* MNOTE           00387100
&ZMS               SETC  '&ZMS.&NEXTTARGETOFF"'                         00387200
&ZMS               SETC  '&ZMS "NEXTTARGETOFF"'                         00387300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00387400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00387500
.ZG40A             ANOP  ,                                              00387600
.*-------------------------------------------------------------------   00387700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00387800
&ZXNEXTTARGETOFF   SETC  'INPUT'     SET IN/OUTPUT                      00387900
&XNEXTTARGETOFF    SETC  '8'                                            00388000
                   AIF   (K'&NEXTTARGETOFF(1) LE 0).ZG40B  PARM         00388100
&XNEXTTARGETOFF    SETC  '&NEXTTARGETOFF(1)'    SET XVARIABLE           00388200
                   AIF   (N'&NEXTTARGETOFF GT 1).ZG40B  MULTI PARMS     00388300
&XNEXTTARGETOFF    SETC  '&NEXTTARGETOFF'       SET XVARIABLE           00388400
.ZG40B             ANOP  ,                                              00388500
.*-------------------------------------------------------------------   00388600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00388700
                   AIF   (K'&ZXNEXTTARGETOFF LE 0).ZG40R  NOT I/O       00388800
                   AIF   ('&XNEXTTARGETOFF'(1,1) NE '(').ZG40R          00388900
&ZCGPR             SETC  '&XNEXTTARGETOFF'(2,K'&XNEXTTARGETOFF-2)       00389000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                   00389100
                   AIF   (K'&ZCGPR GT 2).ZG40Q                          00389200
                   AIF   ('&ZCGPR' EQ '0').ZG40Q                        00389300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00389400
                   AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME      00389500
.ZG40P             ANOP  ,                                              00389600
                   AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC           00389700
                   AIF   ('&ZCGPR' LT '2').ZG40Q                        00389800
                   AIF   ('&ZCGPR' LE '12').ZG40R                       00389900
.ZG40Q             ANOP  ,                                              00390000
&ZMS               SETC  '"NEXTTARGETOFF='      *KGPRA* MNOTE           00390100
&ZMS               SETC  '&ZMS.&NEXTTARGETOFF"'                         00390200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00390300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00390400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00390500
.ZG40R             ANOP  ,                                              00390600
.*------------------------------------------------------------------    00390700
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00390800
.ZG42              ANOP  ,                                              00390900
&ZXMEMBERS         SETC  'INPUT'     SET IN/OUTPUT                      00391000
                   AIF   (K'&XMEMBERS GT 0).ZG42E  VALID ARG            00391100
                   AIF   (T'&MEMBERS EQ 'O').ZG42D  OMITTED             00391200
&ZASYSLNDX         SETA  0                                              00391300
.ZG42A             ANOP  ,           POSITIONAL MACRO KEY               00391400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00391500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG42C               00391600
&ZTLC              SETC 'MEMBERS'                                       00391700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG42A      00391800
.ZG42B             ANOP  ,                                              00391900
&ZXMEMBERS         SETC  ''          RESET IN/OUTPUT                    00392000
&ZMS               SETC  'THE "MEMBERS" KEY'    *KOPTA* MNOTE           00392100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00392200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00392300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00392400
                   AGO   .ZG42E                                         00392500
.ZG42C             ANOP  ,                                              00392600
&ZXMEMBERS         SETC  ''          RESET IN/OUTPUT                    00392700
&ZMS               SETC  '"MEMBERS='            *KUKWA* MNOTE           00392800
&ZMS               SETC  '&ZMS.&MEMBERS"'                               00392900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00393000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00393100
&ZMS               SETC  '&ZMS "TABLE".'                                00393200
                   MNOTE 8,' &ZMS '                                     00393300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00393400
                   AGO   .ZG42E                                         00393500
.ZG42D             ANOP  ,                                              00393600
&XMEMBERS          SETC  'TABLE'     SET DEFAULT KEYWORD                00393700
.ZG42E             ANOP  ,                                              00393800
.*------------------------------------------------------------------    00393900
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00394000
                   AIF   (K'&MEMBERS(1) GT 0).ZG42F  PARM               00394100
&XMEMBERS          SETC  ''          ENSURE NULL KEYWORD                00394200
&ZXMEMBERS         SETC  ''          RESET IN/OUTPUT                    00394300
&ZMS               SETC  'THE'                                          00394400
&ZMS               SETC  '&ZMS "MEMBERS" KEY AND ITS'                   00394500
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00394600
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00394700
&ZMS               SETC  '&ZMS "TABLE".'                                00394800
                   MNOTE 8,' &ZMS '                                     00394900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00395000
.ZG42F             ANOP  ,                                              00395100
.*------------------------------------------------------------------    00395200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00395300
&XDELIVERMSG       SETC  ''          INITIALIZE XVARIABLE               00395400
.*-------------------------------------------------------------------   00395500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00395600
.ZG45              ANOP  ,                                              00395700
                   AIF   (K'&DELIVERMSG(1) LE 0).ZG45A                  00395800
&ZTLC              SETC 'UNORDERED'                                     00395900
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG46             00396000
&XDELIVERMSG       SETC  'UNORDERED'            SET KEYWORD             00396100
                   AIF   (N'&DELIVERMSG LE 1).ZG45A  CK NUM             00396200
&ZMS               SETC  '"DELIVERMSG='         *KPOSA* MNOTE           00396300
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00396400
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00396500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00396600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00396700
.ZG45A             ANOP  ,                                              00396800
.*------------------------------------------------------------------    00396900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00397000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00397100
.ZG45A0            AIF   (K'&STREAMID LE 0).ZG45A1  OK                  00397200
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00397300
.ZG45A1            AIF   (K'&ZCVAL LE 0).ZG45A2  OK                     00397400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00397500
&ZMS               SETC  '"DELIVERMSG'          *KMEIA* MNOTE           00397600
&ZMS               SETC  '&ZMS.=&DELIVERMSG"'                           00397700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00397800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00397900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00398000
.ZG45A2            ANOP  ,                                              00398100
.*-------------------------------------------------------------------   00398200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00398300
.ZG46              ANOP  ,                                              00398400
&ZTLC              SETC 'ORDERED'                                       00398500
                   AIF   ('&DELIVERMSG(1)' NE '&ZTLC').ZG50             00398600
&XDELIVERMSG       SETC  'ORDERED'   SET KEYWORD                        00398700
                   AIF   (N'&DELIVERMSG LE 1).ZG46A  CK NUM             00398800
&ZMS               SETC  '"DELIVERMSG='         *KPOSA* MNOTE           00398900
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00399000
&ZMS               SETC  '&ZMS "DELIVERMSG"'                            00399100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00399200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00399300
.ZG46A             ANOP  ,                                              00399400
.*----------------------------------------------------------------***   00399500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00399600
                   AIF   (N'&STREAMID LE 1).ZG48A  CK NUM               00399700
&ZMS               SETC  '"STREAMID='           *KPOSA* MNOTE           00399800
&ZMS               SETC  '&ZMS.&STREAMID"'                              00399900
&ZMS               SETC  '&ZMS "STREAMID"'                              00400000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00400100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00400200
.ZG48A             ANOP  ,                                              00400300
.*-------------------------------------------------------------------   00400400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00400500
&ZXSTREAMID        SETC  'INPUT'     SET IN/OUTPUT                      00400600
&XSTREAMID         SETC  '1'                                            00400700
                   AIF   (K'&STREAMID(1) LE 0).ZG48B  PARM              00400800
&XSTREAMID         SETC  '&STREAMID(1)'         SET XVARIABLE           00400900
                   AIF   (N'&STREAMID GT 1).ZG48B  MULTI PARMS          00401000
&XSTREAMID         SETC  '&STREAMID'            SET XVARIABLE           00401100
.ZG48B             ANOP  ,                                              00401200
.*-------------------------------------------------------------------   00401300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00401400
                   AIF   (K'&ZXSTREAMID LE 0).ZG48R  NOT I/O            00401500
                   AIF   ('&XSTREAMID'(1,1) NE '(').ZG48R               00401600
&ZCGPR             SETC  '&XSTREAMID'(2,K'&XSTREAMID-2)                 00401700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                   00401800
                   AIF   (K'&ZCGPR GT 2).ZG48Q                          00401900
                   AIF   ('&ZCGPR' EQ '0').ZG48Q                        00402000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00402100
                   AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME      00402200
.ZG48P             ANOP  ,                                              00402300
                   AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC           00402400
                   AIF   ('&ZCGPR' LT '2').ZG48Q                        00402500
                   AIF   ('&ZCGPR' LE '12').ZG48R                       00402600
.ZG48Q             ANOP  ,                                              00402700
&ZMS               SETC  '"STREAMID='           *KGPRA* MNOTE           00402800
&ZMS               SETC  '&ZMS.&STREAMID"'                              00402900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00403000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00403100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00403200
.ZG48R             ANOP  ,                                              00403300
.*------------------------------------------------------------------    00403400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00403500
.ZG50              ANOP  ,                                              00403600
&ZXDELIVERMSG      SETC  'INPUT'     SET IN/OUTPUT                      00403700
                   AIF   (K'&XDELIVERMSG GT 0).ZG50E  VALID ARG         00403800
                   AIF   (T'&DELIVERMSG EQ 'O').ZG50D  OMITTED          00403900
&ZASYSLNDX         SETA  0                                              00404000
.ZG50A             ANOP  ,           POSITIONAL MACRO KEY               00404100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00404200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG50C               00404300
&ZTLC              SETC 'DELIVERMSG'                                    00404400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG50A      00404500
.ZG50B             ANOP  ,                                              00404600
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00404700
&ZMS               SETC  'THE "DELIVERMSG" KEY'  *KOPTA* MNOTE          00404800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00404900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00405000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00405100
                   AGO   .ZG50E                                         00405200
.ZG50C             ANOP  ,                                              00405300
&ZXDELIVERMSG      SETC  ''          RESET IN/OUTPUT                    00405400
&ZMS               SETC  '"DELIVERMSG='         *KUKWA* MNOTE           00405500
&ZMS               SETC  '&ZMS.&DELIVERMSG"'                            00405600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00405700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00405800
&ZMS               SETC  '&ZMS "UNORDERED"'                             00405900
&ZMS               SETC  '&ZMS OR "ORDERED".'                           00406000
                   MNOTE 8,' &ZMS '                                     00406100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00406200
                   AGO   .ZG50E                                         00406300
.ZG50D             ANOP  ,                                              00406400
&XDELIVERMSG       SETC  'UNORDERED'            SET DEFAULT KEYWORD     00406500
.ZG50E             ANOP  ,                                              00406600
.*------------------------------------------------------------------    00406700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00406800
&XGETRESPONSE      SETC  ''          INITIALIZE XVARIABLE               00406900
.*-------------------------------------------------------------------   00407000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00407100
.ZG53              ANOP  ,                                              00407200
                   AIF   (K'&GETRESPONSE(1) LE 0).ZG53A                 00407300
&ZTLC              SETC 'NO'                                            00407400
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG57            00407500
&XGETRESPONSE      SETC  'NO'        SET KEYWORD                        00407600
                   AIF   (N'&GETRESPONSE LE 1).ZG53A  CK NUM            00407700
&ZMS               SETC  '"GETRESPONSE='        *KPOSA* MNOTE           00407800
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00407900
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00408000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00408100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00408200
.ZG53A             ANOP  ,                                              00408300
.*----------------------------------------------------------------***   00408400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00408500
                   AIF   (N'&TIMEOUT LE 1).ZG55A  CK NUM                00408600
&ZMS               SETC  '"TIMEOUT='            *KPOSA* MNOTE           00408700
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00408800
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00408900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00409000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00409100
.ZG55A             ANOP  ,                                              00409200
.*-------------------------------------------------------------------   00409300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00409400
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00409500
&XTIMEOUT          SETC  'ZERO'                                         00409600
                   AIF   (K'&TIMEOUT(1) LE 0).ZG55B  PARM               00409700
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00409800
                   AIF   (N'&TIMEOUT GT 1).ZG55B  MULTI PARMS           00409900
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00410000
.ZG55B             ANOP  ,                                              00410100
.*-------------------------------------------------------------------   00410200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00410300
                   AIF   (K'&ZXTIMEOUT LE 0).ZG55R  NOT I/O             00410400
         AIF   ('&XTIMEOUT' EQ 'ZERO').ZG55R                            00410500
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG55R                00410600
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00410700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG55P                   00410800
                   AIF   (K'&ZCGPR GT 2).ZG55Q                          00410900
                   AIF   ('&ZCGPR' EQ '0').ZG55Q                        00411000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00411100
                   AIF   (T'&ZCGPR NE 'N').ZG55Q  INVALID REG NAME      00411200
.ZG55P             ANOP  ,                                              00411300
                   AIF   (T'&ZCGPR NE 'N').ZG55R  NON NUMERIC           00411400
                   AIF   ('&ZCGPR' LT '2').ZG55Q                        00411500
                   AIF   ('&ZCGPR' LE '12').ZG55R                       00411600
.ZG55Q             ANOP  ,                                              00411700
&ZMS               SETC  '"TIMEOUT='            *KGPRA* MNOTE           00411800
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00411900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00412000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00412100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00412200
.ZG55R             ANOP  ,                                              00412300
.*-------------------------------------------------------------------   00412400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00412500
.ZG57              ANOP  ,                                              00412600
&ZTLC              SETC 'YES'                                           00412700
                   AIF   ('&GETRESPONSE(1)' NE '&ZTLC').ZG61            00412800
&XGETRESPONSE      SETC  'YES'       SET KEYWORD                        00412900
                   AIF   (N'&GETRESPONSE LE 1).ZG57A  CK NUM            00413000
&ZMS               SETC  '"GETRESPONSE='        *KPOSA* MNOTE           00413100
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00413200
&ZMS               SETC  '&ZMS "GETRESPONSE"'                           00413300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00413400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00413500
.ZG57A             ANOP  ,                                              00413600
.*----------------------------------------------------------------***   00413700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00413800
                   AIF   (N'&TIMEOUT LE 1).ZG59A  CK NUM                00413900
&ZMS               SETC  '"TIMEOUT='            *KPOSA* MNOTE           00414000
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00414100
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00414200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00414300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00414400
.ZG59A             ANOP  ,                                              00414500
.*-------------------------------------------------------------------   00414600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00414700
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00414800
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00414900
                   AIF   (N'&TIMEOUT GT 1).ZG59B  MULTI PARMS           00415000
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00415100
.ZG59B             AIF   (K'&TIMEOUT(1) GT 0).ZG59C                     00415200
&ZXTIMEOUT         SETC  ''          RESET IN/OUTPUT                    00415300
&ZMS               SETC  ' '         *KRQDA*                            00415400
&ZMS               SETC  '&ZMS "TIMEOUT" KEY AND ITS'                   00415500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00415600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00415700
.ZG59C             ANOP  ,                                              00415800
.*-------------------------------------------------------------------   00415900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00416000
                   AIF   (K'&ZXTIMEOUT LE 0).ZG59R  NOT I/O             00416100
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG59R                00416200
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00416300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                   00416400
                   AIF   (K'&ZCGPR GT 2).ZG59Q                          00416500
                   AIF   ('&ZCGPR' EQ '0').ZG59Q                        00416600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00416700
                   AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME      00416800
.ZG59P             ANOP  ,                                              00416900
                   AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC           00417000
                   AIF   ('&ZCGPR' LT '2').ZG59Q                        00417100
                   AIF   ('&ZCGPR' LE '12').ZG59R                       00417200
.ZG59Q             ANOP  ,                                              00417300
&ZMS               SETC  '"TIMEOUT='            *KGPRA* MNOTE           00417400
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00417500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00417600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00417700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00417800
.ZG59R             ANOP  ,                                              00417900
.*------------------------------------------------------------------    00418000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00418100
.ZG61              ANOP  ,                                              00418200
&ZXGETRESPONSE     SETC  'INPUT'     SET IN/OUTPUT                      00418300
                   AIF   (K'&XGETRESPONSE GT 0).ZG61E  VALID ARG        00418400
                   AIF   (T'&GETRESPONSE EQ 'O').ZG61D  OMITTED         00418500
&ZASYSLNDX         SETA  0                                              00418600
.ZG61A             ANOP  ,           POSITIONAL MACRO KEY               00418700
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00418800
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG61C               00418900
&ZTLC              SETC 'GETRESPONSE'                                   00419000
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG61A      00419100
.ZG61B             ANOP  ,                                              00419200
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00419300
&ZMS               SETC  'THE "GETRESPONSE" KEY'  *KOPTA* MNOTE         00419400
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00419500
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00419600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00419700
                   AGO   .ZG61E                                         00419800
.ZG61C             ANOP  ,                                              00419900
&ZXGETRESPONSE     SETC  ''          RESET IN/OUTPUT                    00420000
&ZMS               SETC  '"GETRESPONSE='        *KUKWA* MNOTE           00420100
&ZMS               SETC  '&ZMS.&GETRESPONSE"'                           00420200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00420300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00420400
&ZMS               SETC  '&ZMS "NO"'                                    00420500
&ZMS               SETC  '&ZMS OR "YES".'                               00420600
                   MNOTE 8,' &ZMS '                                     00420700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00420800
                   AGO   .ZG61E                                         00420900
.ZG61D             ANOP  ,                                              00421000
&XGETRESPONSE      SETC  'NO'        SET DEFAULT KEYWORD                00421100
.ZG61E             ANOP  ,                                              00421200
.*-------------------------------------------------------------------   00421300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00421400
.ZG62              ANOP  ,                                              00421500
&ZTLC              SETC 'ORIGINATOR'                                    00421600
                   AIF   ('&SENDTO(1)' NE '&ZTLC').ZG69                 00421700
&XSENDTO           SETC  'ORIGINATOR'           SET KEYWORD             00421800
                   AIF   (N'&SENDTO LE 1).ZG62A  CK NUM                 00421900
&ZMS               SETC  '"SENDTO='  *KPOSA* MNOTE                      00422000
&ZMS               SETC  '&ZMS.&SENDTO"'                                00422100
&ZMS               SETC  '&ZMS "SENDTO"'                                00422200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00422300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00422400
.ZG62A             ANOP  ,                                              00422500
.*------------------------------------------------------------------    00422600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00422700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00422800
.ZG62A0            AIF   (K'&TARGET LE 0).ZG62A1  OK                    00422900
&ZCVAL             SETC '&ZCVAL TARGET'         INCORRECT KEY USED      00423000
.ZG62A1            AIF   (K'&DELIVERMSG LE 0).ZG62A2  OK                00423100
&ZCVAL             SETC '&ZCVAL DELIVERMSG'     INCORRECT KEY USED      00423200
.ZG62A2            AIF   (K'&STREAMID LE 0).ZG62A3  OK                  00423300
&ZCVAL             SETC '&ZCVAL STREAMID'       INCORRECT KEY USED      00423400
.ZG62A3            AIF   (K'&GETRESPONSE LE 0).ZG62A4  OK               00423500
&ZCVAL             SETC '&ZCVAL GETRESPONSE'    INCORRECT KEY USED      00423600
.ZG62A4            AIF   (K'&MEMBERS LE 0).ZG62A5  OK                   00423700
&ZCVAL             SETC '&ZCVAL MEMBERS'        INCORRECT KEY USED      00423800
.ZG62A5            AIF   (K'&TARGETS LE 0).ZG62A6  OK                   00423900
&ZCVAL             SETC '&ZCVAL TARGETS'        INCORRECT KEY USED      00424000
.ZG62A6            AIF   (K'&#TARGETS LE 0).ZG62A7  OK                  00424100
&ZCVAL             SETC '&ZCVAL #TARGETS'       INCORRECT KEY USED      00424200
.ZG62A7            AIF   (K'&NEXTTARGETOFF LE 0).ZG62A8  OK             00424300
&ZCVAL             SETC '&ZCVAL NEXTTARGETOFF'  INCORRECT KEY USED      00424400
.ZG62A8            AIF   (K'&ZCVAL LE 0).ZG62A9  OK                     00424500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00424600
&ZMS               SETC  '"SENDTO'   *KMEIA* MNOTE                      00424700
&ZMS               SETC  '&ZMS.=&SENDTO"'                               00424800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00424900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00425000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00425100
.ZG62A9            ANOP  ,                                              00425200
.*----------------------------------------------------------------***   00425300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00425400
                   AIF   (N'&RESPONSEID LE 1).ZG64A  CK NUM             00425500
&ZMS               SETC  '"RESPONSEID='         *KPOSA* MNOTE           00425600
&ZMS               SETC  '&ZMS.&RESPONSEID"'                            00425700
&ZMS               SETC  '&ZMS "RESPONSEID"'                            00425800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00425900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00426000
.ZG64A             ANOP  ,                                              00426100
.*-------------------------------------------------------------------   00426200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00426300
&ZXRESPONSEID      SETC  'INPUT'     SET IN/OUTPUT                      00426400
&XRESPONSEID       SETC  '&RESPONSEID(1)'       SET XVARIABLE           00426500
                   AIF   (N'&RESPONSEID GT 1).ZG64B  MULTI PARMS        00426600
&XRESPONSEID       SETC  '&RESPONSEID'          SET XVARIABLE           00426700
.ZG64B             AIF   (K'&RESPONSEID(1) GT 0).ZG64C                  00426800
&ZXRESPONSEID      SETC  ''          RESET IN/OUTPUT                    00426900
&ZMS               SETC  ' '         *KRQDA*                            00427000
&ZMS               SETC  '&ZMS "RESPONSEID" KEY AND ITS'                00427100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00427200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00427300
.ZG64C             ANOP  ,                                              00427400
.*-------------------------------------------------------------------   00427500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00427600
                   AIF   (K'&ZXRESPONSEID LE 0).ZG64R  NOT I/O          00427700
                   AIF   ('&XRESPONSEID'(1,1) NE '(').ZG64R             00427800
&ZCGPR             SETC  '&XRESPONSEID'(2,K'&XRESPONSEID-2)             00427900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG64P                   00428000
                   AIF   (K'&ZCGPR GT 2).ZG64Q                          00428100
                   AIF   ('&ZCGPR' EQ '0').ZG64Q                        00428200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00428300
                   AIF   (T'&ZCGPR NE 'N').ZG64Q  INVALID REG NAME      00428400
.ZG64P             ANOP  ,                                              00428500
                   AIF   (T'&ZCGPR NE 'N').ZG64R  NON NUMERIC           00428600
                   AIF   ('&ZCGPR' LT '2').ZG64Q                        00428700
                   AIF   ('&ZCGPR' LE '12').ZG64R                       00428800
.ZG64Q             ANOP  ,                                              00428900
&ZMS               SETC  '"RESPONSEID='         *KGPRA* MNOTE           00429000
&ZMS               SETC  '&ZMS.&RESPONSEID"'                            00429100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00429200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00429300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00429400
.ZG64R             ANOP  ,                                              00429500
.*----------------------------------------------------------------***   00429600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00429700
                   AIF   (N'&TIMEOUT LE 1).ZG67A  CK NUM                00429800
&ZMS               SETC  '"TIMEOUT='            *KPOSA* MNOTE           00429900
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00430000
&ZMS               SETC  '&ZMS "TIMEOUT"'                               00430100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00430200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00430300
.ZG67A             ANOP  ,                                              00430400
.*-------------------------------------------------------------------   00430500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00430600
&ZXTIMEOUT         SETC  'INPUT'     SET IN/OUTPUT                      00430700
&XTIMEOUT          SETC  'ZERO'                                         00430800
                   AIF   (K'&TIMEOUT(1) LE 0).ZG67B  PARM               00430900
&XTIMEOUT          SETC  '&TIMEOUT(1)'          SET XVARIABLE           00431000
                   AIF   (N'&TIMEOUT GT 1).ZG67B  MULTI PARMS           00431100
&XTIMEOUT          SETC  '&TIMEOUT'  SET XVARIABLE                      00431200
.ZG67B             ANOP  ,                                              00431300
.*-------------------------------------------------------------------   00431400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00431500
                   AIF   (K'&ZXTIMEOUT LE 0).ZG67R  NOT I/O             00431600
         AIF   ('&XTIMEOUT' EQ 'ZERO').ZG67R                            00431700
                   AIF   ('&XTIMEOUT'(1,1) NE '(').ZG67R                00431800
&ZCGPR             SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                   00431900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG67P                   00432000
                   AIF   (K'&ZCGPR GT 2).ZG67Q                          00432100
                   AIF   ('&ZCGPR' EQ '0').ZG67Q                        00432200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00432300
                   AIF   (T'&ZCGPR NE 'N').ZG67Q  INVALID REG NAME      00432400
.ZG67P             ANOP  ,                                              00432500
                   AIF   (T'&ZCGPR NE 'N').ZG67R  NON NUMERIC           00432600
                   AIF   ('&ZCGPR' LT '2').ZG67Q                        00432700
                   AIF   ('&ZCGPR' LE '12').ZG67R                       00432800
.ZG67Q             ANOP  ,                                              00432900
&ZMS               SETC  '"TIMEOUT='            *KGPRA* MNOTE           00433000
&ZMS               SETC  '&ZMS.&TIMEOUT"'                               00433100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00433200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00433300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00433400
.ZG67R             ANOP  ,                                              00433500
.*------------------------------------------------------------------    00433600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00433700
.ZG69              ANOP  ,                                              00433800
&ZXSENDTO          SETC  'INPUT'     SET IN/OUTPUT                      00433900
                   AIF   (K'&XSENDTO GT 0).ZG69E  VALID ARG             00434000
                   AIF   (T'&SENDTO EQ 'O').ZG69D  OMITTED              00434100
&ZASYSLNDX         SETA  0                                              00434200
.ZG69A             ANOP  ,           POSITIONAL MACRO KEY               00434300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00434400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C               00434500
&ZTLC              SETC 'SENDTO'                                        00434600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG69A      00434700
.ZG69B             ANOP  ,                                              00434800
&ZXSENDTO          SETC  ''          RESET IN/OUTPUT                    00434900
&ZMS               SETC  'THE "SENDTO" KEY'     *KOPTA* MNOTE           00435000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00435100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00435200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00435300
                   AGO   .ZG69E                                         00435400
.ZG69C             ANOP  ,                                              00435500
&ZXSENDTO          SETC  ''          RESET IN/OUTPUT                    00435600
&ZMS               SETC  '"SENDTO='  *KUKWA* MNOTE                      00435700
&ZMS               SETC  '&ZMS.&SENDTO"'                                00435800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00435900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00436000
&ZMS               SETC  '&ZMS "MEMBER",'                               00436100
&ZMS               SETC  '&ZMS "GROUP",'                                00436200
&ZMS               SETC  '&ZMS OR "ORIGINATOR".'                        00436300
                   MNOTE 8,' &ZMS '                                     00436400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00436500
                   AGO   .ZG69E                                         00436600
.ZG69D             ANOP  ,                                              00436700
&XSENDTO           SETC  'MEMBER'    SET DEFAULT KEYWORD                00436800
.ZG69E             ANOP  ,                                              00436900
.*------------------------------------------------------------------    00437000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00437100
&XMULTIPART        SETC  ''          INITIALIZE XVARIABLE               00437200
.*-------------------------------------------------------------------   00437300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00437400
.ZG72              ANOP  ,                                              00437500
                   AIF   (K'&MULTIPART(1) LE 0).ZG72A                   00437600
&ZTLC              SETC 'NO'                                            00437700
                   AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG80              00437800
&XMULTIPART        SETC  'NO'        SET KEYWORD                        00437900
                   AIF   (N'&MULTIPART LE 1).ZG72A  CK NUM              00438000
&ZMS               SETC  '"MULTIPART='          *KPOSA* MNOTE           00438100
&ZMS               SETC  '&ZMS.&MULTIPART"'                             00438200
&ZMS               SETC  '&ZMS "MULTIPART"'                             00438300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00438400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00438500
.ZG72A             ANOP  ,                                              00438600
.*------------------------------------------------------------------    00438700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00438800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00438900
.ZG72A0            AIF   (K'&#MSGPARTS LE 0).ZG72A1  OK                 00439000
&ZCVAL             SETC '&ZCVAL #MSGPARTS'      INCORRECT KEY USED      00439100
.ZG72A1            AIF   (K'&ELEMENT LE 0).ZG72A2  OK                   00439200
&ZCVAL             SETC '&ZCVAL ELEMENT'        INCORRECT KEY USED      00439300
.ZG72A2            AIF   (K'&ELEMFORM LE 0).ZG72A3  OK                  00439400
&ZCVAL             SETC '&ZCVAL ELEMFORM'       INCORRECT KEY USED      00439500
.ZG72A3            AIF   (K'&NEXTOFF LE 0).ZG72A4  OK                   00439600
&ZCVAL             SETC '&ZCVAL NEXTOFF'        INCORRECT KEY USED      00439700
.ZG72A4            AIF   (K'&NEXTPTROFF LE 0).ZG72A5  OK                00439800
&ZCVAL             SETC '&ZCVAL NEXTPTROFF'     INCORRECT KEY USED      00439900
.ZG72A5            AIF   (K'&ENDOFQUEUE LE 0).ZG72A6  OK                00440000
&ZCVAL             SETC '&ZCVAL ENDOFQUEUE'     INCORRECT KEY USED      00440100
.ZG72A6            AIF   (K'&PARTOFF LE 0).ZG72A7  OK                   00440200
&ZCVAL             SETC '&ZCVAL PARTOFF'        INCORRECT KEY USED      00440300
.ZG72A7            AIF   (K'&PARTPTROFF LE 0).ZG72A8  OK                00440400
&ZCVAL             SETC '&ZCVAL PARTPTROFF'     INCORRECT KEY USED      00440500
.ZG72A8            AIF   (K'&PARTALET LE 0).ZG72A9  OK                  00440600
&ZCVAL             SETC '&ZCVAL PARTALET'       INCORRECT KEY USED      00440700
.ZG72A9            AIF   (K'&PARTALETOFF LE 0).ZG72A10  OK              00440800
&ZCVAL             SETC '&ZCVAL PARTALETOFF'    INCORRECT KEY USED      00440900
.ZG72A10           AIF   (K'&PARTALETTBL LE 0).ZG72A11  OK              00441000
&ZCVAL             SETC '&ZCVAL PARTALETTBL'    INCORRECT KEY USED      00441100
.ZG72A11           AIF   (K'&PARTLEN LE 0).ZG72A12  OK                  00441200
&ZCVAL             SETC '&ZCVAL PARTLEN'        INCORRECT KEY USED      00441300
.ZG72A12           AIF   (K'&PARTLENOFF LE 0).ZG72A13  OK               00441400
&ZCVAL             SETC '&ZCVAL PARTLENOFF'     INCORRECT KEY USED      00441500
.ZG72A13           AIF   (K'&PARTLENTBL LE 0).ZG72A14  OK               00441600
&ZCVAL             SETC '&ZCVAL PARTLENTBL'     INCORRECT KEY USED      00441700
.ZG72A14           AIF   (K'&ZCVAL LE 0).ZG72A15  OK                    00441800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00441900
&ZMS               SETC  '"MULTIPART'           *KMEIA* MNOTE           00442000
&ZMS               SETC  '&ZMS.=&MULTIPART"'                            00442100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00442200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00442300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00442400
.ZG72A15           ANOP  ,                                              00442500
.*----------------------------------------------------------------***   00442600
.***AG.KMGRP05 NAME,  INPUT, ME GROUP -XVARIABLE KEY                    00442700
                   AIF   (N'&MSGCNTL LE 1).ZG74A  CK NUM                00442800
&ZMS               SETC  '"MSGCNTL='            *KPOSA* MNOTE           00442900
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00443000
&ZMS               SETC  '&ZMS "MSGCNTL"'                               00443100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00443200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00443300
.ZG74A             ANOP  ,                                              00443400
.*-------------------------------------------------------------------   00443500
.***AG.KMGRP06 NAME,  INPUT, ME GROUP -XVARIABLE                        00443600
&ZXMSGCNTL         SETC  'INPUT'     SET IN/OUTPUT                      00443700
&XMSGCNTL          SETC  '&MSGCNTL(1)'          SET XVARIABLE           00443800
                   AIF   (N'&MSGCNTL GT 1).ZG74B  MULTIPLE PARMS        00443900
&XMSGCNTL          SETC  '&MSGCNTL'  SET XVARIABLE                      00444000
.ZG74B             AIF   (K'&MSGCNTL(1) GT 0).ZG74C                     00444100
&ZXMSGCNTL         SETC  ''          RESET IN/OUTPUT                    00444200
.ZG74C             ANOP  ,                                              00444300
.*-------------------------------------------------------------------   00444400
.***AG.KCK02 NAME,  INPUT, ME GROUP -GPR OUT OF RANGE                   00444500
                   AIF   (K'&ZXMSGCNTL LE 0).ZG74R  NOT I/O             00444600
         AIF   ('&XMSGCNTL' EQ 'ALLZERO').ZG74R                         00444700
                   AIF   ('&XMSGCNTL'(1,1) NE '(').ZG74R                00444800
&ZCGPR             SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                   00444900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                   00445000
                   AIF   (K'&ZCGPR GT 2).ZG74Q                          00445100
                   AIF   ('&ZCGPR' EQ '0').ZG74Q                        00445200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00445300
                   AIF   (T'&ZCGPR NE 'N').ZG74Q  INVALID REG NAME      00445400
.ZG74P             ANOP  ,                                              00445500
                   AIF   (T'&ZCGPR NE 'N').ZG74R  NON NUMERIC           00445600
                   AIF   ('&ZCGPR' LT '2').ZG74Q                        00445700
                   AIF   ('&ZCGPR' LE '12').ZG74R                       00445800
.ZG74Q             ANOP  ,                                              00445900
&ZMS               SETC  '"MSGCNTL='            *KGPRA* MNOTE           00446000
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00446100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00446200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00446300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00446400
.ZG74R             ANOP  ,                                              00446500
.*----------------------------------------------------------------***   00446600
.***AG.KMGRP05 NAME,  INPUT, ME GROUP -XVARIABLE KEY                    00446700
                   AIF   (N'&MSGBUF LE 1).ZG75A  CK NUM                 00446800
&ZMS               SETC  '"MSGBUF='  *KPOSA* MNOTE                      00446900
&ZMS               SETC  '&ZMS.&MSGBUF"'                                00447000
&ZMS               SETC  '&ZMS "MSGBUF"'                                00447100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00447200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00447300
.ZG75A             ANOP  ,                                              00447400
.*-------------------------------------------------------------------   00447500
.***AG.KMGRP06 NAME,  INPUT, ME GROUP -XVARIABLE                        00447600
&ZXMSGBUF          SETC  'INPUT'     SET IN/OUTPUT                      00447700
&XMSGBUF           SETC  '&MSGBUF(1)'           SET XVARIABLE           00447800
                   AIF   (N'&MSGBUF GT 1).ZG75B  MULTIPLE PARMS         00447900
&XMSGBUF           SETC  '&MSGBUF'   SET XVARIABLE                      00448000
.ZG75B             AIF   (K'&MSGBUF(1) GT 0).ZG75C                      00448100
&ZXMSGBUF          SETC  ''          RESET IN/OUTPUT                    00448200
.ZG75C             ANOP  ,                                              00448300
.*-------------------------------------------------------------------   00448400
.***AG.KCK02 NAME,  INPUT, ME GROUP -GPR OUT OF RANGE                   00448500
                   AIF   (K'&ZXMSGBUF LE 0).ZG75R  NOT I/O              00448600
                   AIF   ('&XMSGBUF'(1,1) NE '(').ZG75R                 00448700
&ZCGPR             SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                     00448800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG75P                   00448900
                   AIF   (K'&ZCGPR GT 2).ZG75Q                          00449000
                   AIF   ('&ZCGPR' EQ '0').ZG75Q                        00449100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00449200
                   AIF   (T'&ZCGPR NE 'N').ZG75Q  INVALID REG NAME      00449300
.ZG75P             ANOP  ,                                              00449400
                   AIF   (T'&ZCGPR NE 'N').ZG75R  NON NUMERIC           00449500
                   AIF   ('&ZCGPR' LT '2').ZG75Q                        00449600
                   AIF   ('&ZCGPR' LE '12').ZG75R                       00449700
.ZG75Q             ANOP  ,                                              00449800
&ZMS               SETC  '"MSGBUF='  *KGPRA* MNOTE                      00449900
&ZMS               SETC  '&ZMS.&MSGBUF"'                                00450000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00450100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00450200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00450300
.ZG75R             ANOP  ,                                              00450400
.*----------------------------------------------------------------***   00450500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00450600
                   AIF   (N'&MSGLEN LE 1).ZG77A  CK NUM                 00450700
&ZMS               SETC  '"MSGLEN='  *KPOSA* MNOTE                      00450800
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00450900
&ZMS               SETC  '&ZMS "MSGLEN"'                                00451000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00451100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00451200
.ZG77A             ANOP  ,                                              00451300
.*-------------------------------------------------------------------   00451400
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00451500
&ZXMSGLEN          SETC  'INPUT'     SET IN/OUTPUT                      00451600
&XMSGLEN           SETC  '&MSGLEN(1)'           SET XVARIABLE           00451700
                   AIF   (N'&MSGLEN GT 1).ZG77B  MULTI PARMS            00451800
&XMSGLEN           SETC  '&MSGLEN'   SET XVARIABLE                      00451900
.ZG77B             AIF   (K'&MSGBUF(1) GT 0).ZG77C  KEY                 00452000
                   AIF   (K'&MSGLEN(1) LE 0).ZG77D  PARM                00452100
&ZMS               SETC  '"MSGLEN'   *KDEPA* MNOTE                      00452200
&ZMS               SETC  '&ZMS.=&MSGLEN"'                               00452300
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00452400
&ZMS               SETC  '&ZMS '                                        00452500
&ZMS               SETC  '&ZMS "MSGBUF"'                                00452600
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00452700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00452800
                   AGO   .ZG77E                                         00452900
.*                                                                      00453000
.ZG77C             AIF   (K'&MSGLEN(1) GT 0).ZG77E  PARM                00453100
                   AIF   (T'&XMSGBUF EQ 'O').ZG77E  OMITTED             00453200
&ZXMSGLEN          SETC  ''          RESET IN/OUTPUT                    00453300
&ZMS               SETC  ' '         *KRQDA*                            00453400
&ZMS               SETC  '&ZMS "MSGLEN" KEY AND ITS'                    00453500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00453600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00453700
.ZG77D             ANOP  ,                                              00453800
&XMSGLEN           SETC  '0'         SET DEFAULT                        00453900
.ZG77E             ANOP  ,                                              00454000
                   AIF   (K'&MSGLEN(1) GT 0).ZG77F  SPECIFIED           00454100
&ZXMSGLEN          SETC  ''          RESET IN/OUTPUT                    00454200
.ZG77F             ANOP  ,                                              00454300
.*-------------------------------------------------------------------   00454400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00454500
                   AIF   (K'&ZXMSGLEN LE 0).ZG77R  NOT I/O              00454600
                   AIF   ('&XMSGLEN'(1,1) NE '(').ZG77R                 00454700
&ZCGPR             SETC  '&XMSGLEN'(2,K'&XMSGLEN-2)                     00454800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG77P                   00454900
                   AIF   (K'&ZCGPR GT 2).ZG77Q                          00455000
                   AIF   ('&ZCGPR' EQ '0').ZG77Q                        00455100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00455200
                   AIF   (T'&ZCGPR NE 'N').ZG77Q  INVALID REG NAME      00455300
.ZG77P             ANOP  ,                                              00455400
                   AIF   (T'&ZCGPR NE 'N').ZG77R  NON NUMERIC           00455500
                   AIF   ('&ZCGPR' LT '2').ZG77Q                        00455600
                   AIF   ('&ZCGPR' LE '12').ZG77R                       00455700
.ZG77Q             ANOP  ,                                              00455800
&ZMS               SETC  '"MSGLEN='  *KGPRA* MNOTE                      00455900
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00456000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00456100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00456200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00456300
.ZG77R             ANOP  ,                                              00456400
.*-------------------------------------------------------------------   00456500
.***AG.KMGRP11 NAME,  INPUT, ME GROUP -AT LEAST ONE SPECIFIED           00456600
&ZCVAL             SETC ''           ERROR KEY FIELD                    00456700
                   AIF   (K'&XMSGCNTL GT 0).ZG79J                       00456800
&ZCVAL             SETC '&ZCVAL,MSGCNTL'        NOT USED KEY            00456900
                   AIF   (K'&XMSGBUF GT 0).ZG79J                        00457000
&ZCVAL             SETC '&ZCVAL,MSGBUF'         NOT USED KEY            00457100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00457200
&ZMS               SETC  'ONE OR MORE OF THE'   *MGRPA* MNOTE           00457300
&ZMS               SETC  '&ZMS FOLLOWING KEY(S) IS REQUIRED: '          00457400
&ZMS               SETC  '&ZMS "MSGCNTL",'                              00457500
                   MNOTE 8,' &ZMS " MSGBUF".'                           00457600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00457700
.ZG79J             ANOP  ,                                              00457800
.ZG79K             ANOP  ,                                              00457900
.*-------------------------------------------------------------------   00458000
.***AG.KCK02 NAME,  INPUT, ME GROUP -GPR OUT OF RANGE                   00458100
                   AIF   (K'&ZXMSGLEN LE 0).ZG79R  NOT I/O              00458200
                   AIF   ('&XMSGLEN'(1,1) NE '(').ZG79R                 00458300
&ZCGPR             SETC  '&XMSGLEN'(2,K'&XMSGLEN-2)                     00458400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                   00458500
                   AIF   (K'&ZCGPR GT 2).ZG79Q                          00458600
                   AIF   ('&ZCGPR' EQ '0').ZG79Q                        00458700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00458800
                   AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME      00458900
.ZG79P             ANOP  ,                                              00459000
                   AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC           00459100
                   AIF   ('&ZCGPR' LT '2').ZG79Q                        00459200
                   AIF   ('&ZCGPR' LE '12').ZG79R                       00459300
.ZG79Q             ANOP  ,                                              00459400
&ZMS               SETC  '"MSGLEN='  *KGPRA* MNOTE                      00459500
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00459600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00459700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00459800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00459900
.ZG79R             ANOP  ,                                              00460000
.*-------------------------------------------------------------------   00460100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00460200
.ZG80              ANOP  ,                                              00460300
&ZTLC              SETC 'YES'                                           00460400
                   AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG121             00460500
&XMULTIPART        SETC  'YES'       SET KEYWORD                        00460600
                   AIF   (N'&MULTIPART LE 1).ZG80A  CK NUM              00460700
&ZMS               SETC  '"MULTIPART='          *KPOSA* MNOTE           00460800
&ZMS               SETC  '&ZMS.&MULTIPART"'                             00460900
&ZMS               SETC  '&ZMS "MULTIPART"'                             00461000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00461100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00461200
.ZG80A             ANOP  ,                                              00461300
.*------------------------------------------------------------------    00461400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00461500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00461600
.ZG80A0            AIF   (K'&MSGBUF LE 0).ZG80A1  OK                    00461700
&ZCVAL             SETC '&ZCVAL MSGBUF'         INCORRECT KEY USED      00461800
.ZG80A1            AIF   (K'&ZCVAL LE 0).ZG80A2  OK                     00461900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00462000
&ZMS               SETC  '"MULTIPART'           *KMEIA* MNOTE           00462100
&ZMS               SETC  '&ZMS.=&MULTIPART"'                            00462200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00462300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00462400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00462500
.ZG80A2            ANOP  ,                                              00462600
.*----------------------------------------------------------------***   00462700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00462800
                   AIF   (N'&MSGCNTL LE 1).ZG82A  CK NUM                00462900
&ZMS               SETC  '"MSGCNTL='            *KPOSA* MNOTE           00463000
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00463100
&ZMS               SETC  '&ZMS "MSGCNTL"'                               00463200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00463300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00463400
.ZG82A             ANOP  ,                                              00463500
.*-------------------------------------------------------------------   00463600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00463700
&ZXMSGCNTL         SETC  'INPUT'     SET IN/OUTPUT                      00463800
&XMSGCNTL          SETC  'ALLZERO'                                      00463900
                   AIF   (K'&MSGCNTL(1) LE 0).ZG82B  PARM               00464000
&XMSGCNTL          SETC  '&MSGCNTL(1)'          SET XVARIABLE           00464100
                   AIF   (N'&MSGCNTL GT 1).ZG82B  MULTI PARMS           00464200
&XMSGCNTL          SETC  '&MSGCNTL'  SET XVARIABLE                      00464300
.ZG82B             ANOP  ,                                              00464400
.*-------------------------------------------------------------------   00464500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00464600
                   AIF   (K'&ZXMSGCNTL LE 0).ZG82R  NOT I/O             00464700
         AIF   ('&XMSGCNTL' EQ 'ALLZERO').ZG82R                         00464800
                   AIF   ('&XMSGCNTL'(1,1) NE '(').ZG82R                00464900
&ZCGPR             SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                   00465000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                   00465100
                   AIF   (K'&ZCGPR GT 2).ZG82Q                          00465200
                   AIF   ('&ZCGPR' EQ '0').ZG82Q                        00465300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00465400
                   AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME      00465500
.ZG82P             ANOP  ,                                              00465600
                   AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC           00465700
                   AIF   ('&ZCGPR' LT '2').ZG82Q                        00465800
                   AIF   ('&ZCGPR' LE '12').ZG82R                       00465900
.ZG82Q             ANOP  ,                                              00466000
&ZMS               SETC  '"MSGCNTL='            *KGPRA* MNOTE           00466100
&ZMS               SETC  '&ZMS.&MSGCNTL"'                               00466200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00466300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00466400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00466500
.ZG82R             ANOP  ,                                              00466600
.*----------------------------------------------------------------***   00466700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00466800
                   AIF   (N'&MSGLEN LE 1).ZG85A  CK NUM                 00466900
&ZMS               SETC  '"MSGLEN='  *KPOSA* MNOTE                      00467000
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00467100
&ZMS               SETC  '&ZMS "MSGLEN"'                                00467200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00467300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00467400
.ZG85A             ANOP  ,                                              00467500
.*-------------------------------------------------------------------   00467600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00467700
&ZXMSGLEN          SETC  'INPUT'     SET IN/OUTPUT                      00467800
&XMSGLEN           SETC  'SUMPARTLENS'                                  00467900
                   AIF   (K'&MSGLEN(1) LE 0).ZG85B  PARM                00468000
&XMSGLEN           SETC  '&MSGLEN(1)'           SET XVARIABLE           00468100
                   AIF   (N'&MSGLEN GT 1).ZG85B  MULTI PARMS            00468200
&XMSGLEN           SETC  '&MSGLEN'   SET XVARIABLE                      00468300
.ZG85B             ANOP  ,                                              00468400
.*-------------------------------------------------------------------   00468500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00468600
                   AIF   (K'&ZXMSGLEN LE 0).ZG85R  NOT I/O              00468700
         AIF   ('&XMSGLEN' EQ 'SUMPARTLENS').ZG85R                      00468800
                   AIF   ('&XMSGLEN'(1,1) NE '(').ZG85R                 00468900
&ZCGPR             SETC  '&XMSGLEN'(2,K'&XMSGLEN-2)                     00469000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG85P                   00469100
                   AIF   (K'&ZCGPR GT 2).ZG85Q                          00469200
                   AIF   ('&ZCGPR' EQ '0').ZG85Q                        00469300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00469400
                   AIF   (T'&ZCGPR NE 'N').ZG85Q  INVALID REG NAME      00469500
.ZG85P             ANOP  ,                                              00469600
                   AIF   (T'&ZCGPR NE 'N').ZG85R  NON NUMERIC           00469700
                   AIF   ('&ZCGPR' LT '2').ZG85Q                        00469800
                   AIF   ('&ZCGPR' LE '12').ZG85R                       00469900
.ZG85Q             ANOP  ,                                              00470000
&ZMS               SETC  '"MSGLEN='  *KGPRA* MNOTE                      00470100
&ZMS               SETC  '&ZMS.&MSGLEN"'                                00470200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00470300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00470400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00470500
.ZG85R             ANOP  ,                                              00470600
.*----------------------------------------------------------------***   00470700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00470800
                   AIF   (N'&#MSGPARTS LE 1).ZG88A  CK NUM              00470900
&ZMS               SETC  '"#MSGPARTS='          *KPOSA* MNOTE           00471000
&ZMS               SETC  '&ZMS.&#MSGPARTS"'                             00471100
&ZMS               SETC  '&ZMS "#MSGPARTS"'                             00471200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00471300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00471400
.ZG88A             ANOP  ,                                              00471500
.*-------------------------------------------------------------------   00471600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00471700
&ZX#MSGPARTS       SETC  'INPUT'     SET IN/OUTPUT                      00471800
&X#MSGPARTS        SETC  'ATLEASTONE'                                   00471900
                   AIF   (K'&#MSGPARTS(1) LE 0).ZG88B  PARM             00472000
&X#MSGPARTS        SETC  '&#MSGPARTS(1)'        SET XVARIABLE           00472100
                   AIF   (N'&#MSGPARTS GT 1).ZG88B  MULTI PARMS         00472200
&X#MSGPARTS        SETC  '&#MSGPARTS'           SET XVARIABLE           00472300
.ZG88B             ANOP  ,                                              00472400
.*-------------------------------------------------------------------   00472500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00472600
                   AIF   (K'&ZX#MSGPARTS LE 0).ZG88R  NOT I/O           00472700
         AIF   ('&X#MSGPARTS' EQ 'ATLEASTONE').ZG88R                    00472800
                   AIF   ('&X#MSGPARTS'(1,1) NE '(').ZG88R              00472900
&ZCGPR             SETC  '&X#MSGPARTS'(2,K'&X#MSGPARTS-2)               00473000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                   00473100
                   AIF   (K'&ZCGPR GT 2).ZG88Q                          00473200
                   AIF   ('&ZCGPR' EQ '0').ZG88Q                        00473300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00473400
                   AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME      00473500
.ZG88P             ANOP  ,                                              00473600
                   AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC           00473700
                   AIF   ('&ZCGPR' LT '2').ZG88Q                        00473800
                   AIF   ('&ZCGPR' LE '12').ZG88R                       00473900
.ZG88Q             ANOP  ,                                              00474000
&ZMS               SETC  '"#MSGPARTS='          *KGPRA* MNOTE           00474100
&ZMS               SETC  '&ZMS.&#MSGPARTS"'                             00474200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00474300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00474400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00474500
.ZG88R             ANOP  ,                                              00474600
.*----------------------------------------------------------------***   00474700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00474800
                   AIF   (N'&ELEMENT LE 1).ZG91A  CK NUM                00474900
&ZMS               SETC  '"ELEMENT='            *KPOSA* MNOTE           00475000
&ZMS               SETC  '&ZMS.&ELEMENT"'                               00475100
&ZMS               SETC  '&ZMS "ELEMENT"'                               00475200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00475300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00475400
.ZG91A             ANOP  ,                                              00475500
.*-------------------------------------------------------------------   00475600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00475700
&ZXELEMENT         SETC  'INPUT'     SET IN/OUTPUT                      00475800
&XELEMENT          SETC  '&ELEMENT(1)'          SET XVARIABLE           00475900
                   AIF   (N'&ELEMENT GT 1).ZG91B  MULTI PARMS           00476000
&XELEMENT          SETC  '&ELEMENT'  SET XVARIABLE                      00476100
.ZG91B             AIF   (K'&ELEMENT(1) GT 0).ZG91C                     00476200
&ZXELEMENT         SETC  ''          RESET IN/OUTPUT                    00476300
&ZMS               SETC  ' '         *KRQDA*                            00476400
&ZMS               SETC  '&ZMS "ELEMENT" KEY AND ITS'                   00476500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00476600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00476700
.ZG91C             ANOP  ,                                              00476800
.*-------------------------------------------------------------------   00476900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00477000
                   AIF   (K'&ZXELEMENT LE 0).ZG91R  NOT I/O             00477100
                   AIF   ('&XELEMENT'(1,1) NE '(').ZG91R                00477200
&ZCGPR             SETC  '&XELEMENT'(2,K'&XELEMENT-2)                   00477300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG91P                   00477400
                   AIF   (K'&ZCGPR GT 2).ZG91Q                          00477500
                   AIF   ('&ZCGPR' EQ '0').ZG91Q                        00477600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00477700
                   AIF   (T'&ZCGPR NE 'N').ZG91Q  INVALID REG NAME      00477800
.ZG91P             ANOP  ,                                              00477900
                   AIF   (T'&ZCGPR NE 'N').ZG91R  NON NUMERIC           00478000
                   AIF   ('&ZCGPR' LT '2').ZG91Q                        00478100
                   AIF   ('&ZCGPR' LE '12').ZG91R                       00478200
.ZG91Q             ANOP  ,                                              00478300
&ZMS               SETC  '"ELEMENT='            *KGPRA* MNOTE           00478400
&ZMS               SETC  '&ZMS.&ELEMENT"'                               00478500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00478600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00478700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00478800
.ZG91R             ANOP  ,                                              00478900
.*------------------------------------------------------------------    00479000
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00479100
&XELEMFORM         SETC  ''          INITIALIZE XVARIABLE               00479200
.*-------------------------------------------------------------------   00479300
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00479400
.ZG95              ANOP  ,                                              00479500
                   AIF   (K'&ELEMFORM(1) LE 0).ZG95A                    00479600
&ZTLC              SETC 'TABLE'                                         00479700
                   AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG99               00479800
&XELEMFORM         SETC  'TABLE'     SET KEYWORD                        00479900
                   AIF   (N'&ELEMFORM LE 1).ZG95A  CK NUM               00480000
&ZMS               SETC  '"ELEMFORM='           *KPOSA* MNOTE           00480100
&ZMS               SETC  '&ZMS.&ELEMFORM"'                              00480200
&ZMS               SETC  '&ZMS "ELEMFORM"'                              00480300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00480400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00480500
.ZG95A             ANOP  ,                                              00480600
.*------------------------------------------------------------------    00480700
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00480800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00480900
.ZG95A0            AIF   (K'&NEXTPTROFF LE 0).ZG95A1  OK                00481000
&ZCVAL             SETC '&ZCVAL NEXTPTROFF'     INCORRECT KEY USED      00481100
.ZG95A1            AIF   (K'&ENDOFQUEUE LE 0).ZG95A2  OK                00481200
&ZCVAL             SETC '&ZCVAL ENDOFQUEUE'     INCORRECT KEY USED      00481300
.ZG95A2            AIF   (K'&ZCVAL LE 0).ZG95A3  OK                     00481400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00481500
&ZMS               SETC  '"ELEMFORM'            *KMEIA* MNOTE           00481600
&ZMS               SETC  '&ZMS.=&ELEMFORM"'                             00481700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00481800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00481900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00482000
.ZG95A3            ANOP  ,                                              00482100
.*----------------------------------------------------------------***   00482200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00482300
                   AIF   (N'&NEXTOFF LE 1).ZG97A  CK NUM                00482400
&ZMS               SETC  '"NEXTOFF='            *KPOSA* MNOTE           00482500
&ZMS               SETC  '&ZMS.&NEXTOFF"'                               00482600
&ZMS               SETC  '&ZMS "NEXTOFF"'                               00482700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00482800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00482900
.ZG97A             ANOP  ,                                              00483000
.*-------------------------------------------------------------------   00483100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00483200
&ZXNEXTOFF         SETC  'INPUT'     SET IN/OUTPUT                      00483300
&XNEXTOFF          SETC  '&NEXTOFF(1)'          SET XVARIABLE           00483400
                   AIF   (N'&NEXTOFF GT 1).ZG97B  MULTI PARMS           00483500
&XNEXTOFF          SETC  '&NEXTOFF'  SET XVARIABLE                      00483600
.ZG97B             AIF   (K'&NEXTOFF(1) GT 0).ZG97C                     00483700
&ZXNEXTOFF         SETC  ''          RESET IN/OUTPUT                    00483800
&ZMS               SETC  ' '         *KRQDA*                            00483900
&ZMS               SETC  '&ZMS "NEXTOFF" KEY AND ITS'                   00484000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00484100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00484200
.ZG97C             ANOP  ,                                              00484300
.*-------------------------------------------------------------------   00484400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00484500
                   AIF   (K'&ZXNEXTOFF LE 0).ZG97R  NOT I/O             00484600
                   AIF   ('&XNEXTOFF'(1,1) NE '(').ZG97R                00484700
&ZCGPR             SETC  '&XNEXTOFF'(2,K'&XNEXTOFF-2)                   00484800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                   00484900
                   AIF   (K'&ZCGPR GT 2).ZG97Q                          00485000
                   AIF   ('&ZCGPR' EQ '0').ZG97Q                        00485100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00485200
                   AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME      00485300
.ZG97P             ANOP  ,                                              00485400
                   AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC           00485500
                   AIF   ('&ZCGPR' LT '2').ZG97Q                        00485600
                   AIF   ('&ZCGPR' LE '12').ZG97R                       00485700
.ZG97Q             ANOP  ,                                              00485800
&ZMS               SETC  '"NEXTOFF='            *KGPRA* MNOTE           00485900
&ZMS               SETC  '&ZMS.&NEXTOFF"'                               00486000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00486100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00486200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00486300
.ZG97R             ANOP  ,                                              00486400
.*-------------------------------------------------------------------   00486500
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00486600
.ZG99              ANOP  ,                                              00486700
&ZTLC              SETC 'QUEUE'                                         00486800
                   AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG106              00486900
&XELEMFORM         SETC  'QUEUE'     SET KEYWORD                        00487000
                   AIF   (N'&ELEMFORM LE 1).ZG99A  CK NUM               00487100
&ZMS               SETC  '"ELEMFORM='           *KPOSA* MNOTE           00487200
&ZMS               SETC  '&ZMS.&ELEMFORM"'                              00487300
&ZMS               SETC  '&ZMS "ELEMFORM"'                              00487400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00487500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00487600
.ZG99A             ANOP  ,                                              00487700
.*------------------------------------------------------------------    00487800
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00487900
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00488000
.ZG99A0            AIF   (K'&NEXTOFF LE 0).ZG99A1  OK                   00488100
&ZCVAL             SETC '&ZCVAL NEXTOFF'        INCORRECT KEY USED      00488200
.ZG99A1            AIF   (K'&ZCVAL LE 0).ZG99A2  OK                     00488300
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00488400
&ZMS               SETC  '"ELEMFORM'            *KMEIA* MNOTE           00488500
&ZMS               SETC  '&ZMS.=&ELEMFORM"'                             00488600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00488700
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00488800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00488900
.ZG99A2            ANOP  ,                                              00489000
.*----------------------------------------------------------------***   00489100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00489200
                   AIF   (N'&NEXTPTROFF LE 1).ZG101A  CK NUM            00489300
&ZMS               SETC  '"NEXTPTROFF='         *KPOSA* MNOTE           00489400
&ZMS               SETC  '&ZMS.&NEXTPTROFF"'                            00489500
&ZMS               SETC  '&ZMS "NEXTPTROFF"'                            00489600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00489700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00489800
.ZG101A            ANOP  ,                                              00489900
.*-------------------------------------------------------------------   00490000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00490100
&ZXNEXTPTROFF      SETC  'INPUT'     SET IN/OUTPUT                      00490200
&XNEXTPTROFF       SETC  '&NEXTPTROFF(1)'       SET XVARIABLE           00490300
                   AIF   (N'&NEXTPTROFF GT 1).ZG101B  MULTI PARMS       00490400
&XNEXTPTROFF       SETC  '&NEXTPTROFF'          SET XVARIABLE           00490500
.ZG101B            AIF   (K'&NEXTPTROFF(1) GT 0).ZG101C                 00490600
&ZXNEXTPTROFF      SETC  ''          RESET IN/OUTPUT                    00490700
&ZMS               SETC  ' '         *KRQDA*                            00490800
&ZMS               SETC  '&ZMS "NEXTPTROFF" KEY AND ITS'                00490900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00491000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00491100
.ZG101C            ANOP  ,                                              00491200
.*-------------------------------------------------------------------   00491300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00491400
                   AIF   (K'&ZXNEXTPTROFF LE 0).ZG101R  NOT I/O         00491500
                   AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZG101R            00491600
&ZCGPR             SETC  '&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2)             00491700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                  00491800
                   AIF   (K'&ZCGPR GT 2).ZG101Q                         00491900
                   AIF   ('&ZCGPR' EQ '0').ZG101Q                       00492000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00492100
                   AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME     00492200
.ZG101P            ANOP  ,                                              00492300
                   AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC          00492400
                   AIF   ('&ZCGPR' LT '2').ZG101Q                       00492500
                   AIF   ('&ZCGPR' LE '12').ZG101R                      00492600
.ZG101Q            ANOP  ,                                              00492700
&ZMS               SETC  '"NEXTPTROFF='         *KGPRA* MNOTE           00492800
&ZMS               SETC  '&ZMS.&NEXTPTROFF"'                            00492900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00493000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00493100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00493200
.ZG101R            ANOP  ,                                              00493300
.*----------------------------------------------------------------***   00493400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00493500
                   AIF   (N'&ENDOFQUEUE LE 1).ZG104A  CK NUM            00493600
&ZMS               SETC  '"ENDOFQUEUE='         *KPOSA* MNOTE           00493700
&ZMS               SETC  '&ZMS.&ENDOFQUEUE"'                            00493800
&ZMS               SETC  '&ZMS "ENDOFQUEUE"'                            00493900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00494000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00494100
.ZG104A            ANOP  ,                                              00494200
.*-------------------------------------------------------------------   00494300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00494400
&ZXENDOFQUEUE      SETC  'INPUT'     SET IN/OUTPUT                      00494500
&XENDOFQUEUE       SETC  'ZERO'                                         00494600
                   AIF   (K'&ENDOFQUEUE(1) LE 0).ZG104B  PARM           00494700
&XENDOFQUEUE       SETC  '&ENDOFQUEUE(1)'       SET XVARIABLE           00494800
                   AIF   (N'&ENDOFQUEUE GT 1).ZG104B  MULTI PARMS       00494900
&XENDOFQUEUE       SETC  '&ENDOFQUEUE'          SET XVARIABLE           00495000
.ZG104B            ANOP  ,                                              00495100
.*-------------------------------------------------------------------   00495200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00495300
                   AIF   (K'&ZXENDOFQUEUE LE 0).ZG104R  NOT I/O         00495400
         AIF   ('&XENDOFQUEUE' EQ 'ZERO').ZG104R                        00495500
                   AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZG104R            00495600
&ZCGPR             SETC  '&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2)             00495700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG104P                  00495800
                   AIF   (K'&ZCGPR GT 2).ZG104Q                         00495900
                   AIF   ('&ZCGPR' EQ '0').ZG104Q                       00496000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00496100
                   AIF   (T'&ZCGPR NE 'N').ZG104Q  INVALID REG NAME     00496200
.ZG104P            ANOP  ,                                              00496300
                   AIF   (T'&ZCGPR NE 'N').ZG104R  NON NUMERIC          00496400
                   AIF   ('&ZCGPR' LT '2').ZG104Q                       00496500
                   AIF   ('&ZCGPR' LE '12').ZG104R                      00496600
.ZG104Q            ANOP  ,                                              00496700
&ZMS               SETC  '"ENDOFQUEUE='         *KGPRA* MNOTE           00496800
&ZMS               SETC  '&ZMS.&ENDOFQUEUE"'                            00496900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00497000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00497100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00497200
.ZG104R            ANOP  ,                                              00497300
.*------------------------------------------------------------------    00497400
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00497500
.ZG106             ANOP  ,                                              00497600
&ZXELEMFORM        SETC  'INPUT'     SET IN/OUTPUT                      00497700
                   AIF   (K'&XELEMFORM GT 0).ZG106E  VALID ARG          00497800
                   AIF   (T'&ELEMFORM EQ 'O').ZG106D  OMITTED           00497900
&ZASYSLNDX         SETA  0                                              00498000
.ZG106A            ANOP  ,           POSITIONAL MACRO KEY               00498100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00498200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG106C              00498300
&ZTLC              SETC 'ELEMFORM'                                      00498400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG106A     00498500
.ZG106B            ANOP  ,                                              00498600
&ZXELEMFORM        SETC  ''          RESET IN/OUTPUT                    00498700
&ZMS               SETC  'THE "ELEMFORM" KEY'   *KOPTA* MNOTE           00498800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00498900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00499000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00499100
                   AGO   .ZG106E                                        00499200
.ZG106C            ANOP  ,                                              00499300
&ZXELEMFORM        SETC  ''          RESET IN/OUTPUT                    00499400
&ZMS               SETC  '"ELEMFORM='           *KUKWA* MNOTE           00499500
&ZMS               SETC  '&ZMS.&ELEMFORM"'                              00499600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00499700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00499800
&ZMS               SETC  '&ZMS "TABLE"'                                 00499900
&ZMS               SETC  '&ZMS OR "QUEUE".'                             00500000
                   MNOTE 8,' &ZMS '                                     00500100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00500200
                   AGO   .ZG106E                                        00500300
.ZG106D            ANOP  ,                                              00500400
&XELEMFORM         SETC  'TABLE'     SET DEFAULT KEYWORD                00500500
.ZG106E            ANOP  ,                                              00500600
.*------------------------------------------------------------------    00500700
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00500800
                   AIF   (K'&ELEMFORM(1) GT 0).ZG106F  PARM             00500900
&XELEMFORM         SETC  ''          ENSURE NULL KEYWORD                00501000
&ZXELEMFORM        SETC  ''          RESET IN/OUTPUT                    00501100
&ZMS               SETC  'THE'                                          00501200
&ZMS               SETC  '&ZMS "ELEMFORM" KEY AND ITS'                  00501300
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00501400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00501500
&ZMS               SETC  '&ZMS "TABLE"'                                 00501600
&ZMS               SETC  '&ZMS OR "QUEUE".'                             00501700
                   MNOTE 8,' &ZMS '                                     00501800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00501900
.ZG106F            ANOP  ,                                              00502000
.*----------------------------------------------------------------***   00502100
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00502200
&XPARTMODE         SETC  ''          INITIALIZE XVARIABLE               00502300
                   AIF   (K'&PARTOFF LE 0).ZG108C                       00502400
&ZXPARTMODE        SETC  'INPUT'     SET IN/OUTPUT                      00502500
&XPARTMODE         SETC  'PARTOFF'   SET XVARIABLE                      00502600
&ZXPARTOFF         SETC  'INPUT'     SET IN/OUTPUT                      00502700
&XPARTOFF          SETC  '&PARTOFF(1)'          SET XVARIABLE PARM      00502800
                   AIF   (N'&PARTOFF GT 1).ZG108A                       00502900
&XPARTOFF          SETC  '&PARTOFF'  SET XVARIABLE PARM                 00503000
.ZG108A            AIF   (N'&PARTOFF LE 1).ZG108B  CK NUM               00503100
&ZMS               SETC  '"PARTOFF='            *KPOSA* MNOTE           00503200
&ZMS               SETC  '&ZMS.&PARTOFF"'                               00503300
&ZMS               SETC  '&ZMS "PARTOFF"'                               00503400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00503500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00503600
.ZG108B            AIF   (K'&XPARTOFF GT 0).ZG108C  ONE PARM            00503700
&ZXPARTMODE        SETC  ''          RESET IN/OUTPUT                    00503800
&ZXPARTOFF         SETC  ''          RESET IN/OUTPUT                    00503900
&ZMS               SETC  ' '         *KRQDA*                            00504000
&ZMS               SETC  '&ZMS "PARTOFF" KEY AND ITS'                   00504100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00504200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00504300
.ZG108C            ANOP  ,                                              00504400
.*----------------------------------------------------------------***   00504500
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00504600
                   AIF   (K'&PARTPTROFF LE 0).ZG109D  NO ME KEY         00504700
                   AIF   (N'&PARTPTROFF LE 1).ZG109A  CK NUM            00504800
&ZMS               SETC  '"PARTPTROFF='         *KPOSA* MNOTE           00504900
&ZMS               SETC  '&ZMS.&PARTPTROFF"'                            00505000
&ZMS               SETC  '&ZMS "PARTPTROFF"'                            00505100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00505200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00505300
.ZG109A            AIF   (K'&XPARTMODE LE 0).ZG109B                     00505400
&ZMS               SETC  '"PARTPTROFF'          *KMEKA* MNOTE           00505500
&ZMS               SETC  '&ZMS.=&PARTPTROFF"'                           00505600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00505700
&ZMS               SETC  '&ZMS "&XPARTMODE"'                            00505800
                   MNOTE 8,' &ZMS KEY.'                                 00505900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00506000
                   AGO   .ZG109D                                        00506100
.*                                                                      00506200
.ZG109B            ANOP  ,                                              00506300
&ZXPARTMODE        SETC  'INPUT'     SET IN/OUTPUT                      00506400
&XPARTMODE         SETC  'PARTPTROFF'           SET XVARIABLE           00506500
&ZXPARTPTROFF      SETC  'INPUT'     SET IN/OUTPUT                      00506600
&XPARTPTROFF       SETC  '&PARTPTROFF(1)'       SET XVARIABLE PARM      00506700
                   AIF   (N'&PARTPTROFF GT 1).ZG109C                    00506800
&XPARTPTROFF       SETC  '&PARTPTROFF'          SET XVARIABLE PARM      00506900
.ZG109C            AIF   (K'&XPARTPTROFF GT 0).ZG109D  ONE PARM         00507000
&ZXPARTMODE        SETC  ''          RESET IN/OUTPUT                    00507100
&ZXPARTPTROFF      SETC  ''          RESET IN/OUTPUT                    00507200
&ZMS               SETC  ' '         *KRQDA*                            00507300
&ZMS               SETC  '&ZMS "PARTPTROFF" KEY AND ITS'                00507400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00507500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00507600
.ZG109D            ANOP  ,                                              00507700
.*------------------------------------------------------------------    00507800
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00507900
                   AIF   (K'&XPARTMODE GT 0).ZG115B                     00508000
&ZXPARTMODE        SETC  ''          RESET IN/OUTPUT                    00508100
&ZXPARTOFF         SETC  ''          RESET IN/OUTPUT                    00508200
&XPARTMODE         SETC  ''          ENSURE NULL                        00508300
&XPARTOFF          SETC  ''          ENSURE NULL                        00508400
&ZMS               SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE          00508500
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00508600
&ZMS               SETC  '&ZMS REQUIRED:'                               00508700
&ZMS               SETC  '&ZMS "PARTOFF"'       VALID ME KEY            00508800
&ZMS               SETC  '&ZMS OR "PARTPTROFF".'  VALID ME KEY          00508900
                   MNOTE 8,' &ZMS '                                     00509000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00509100
.ZG115B            ANOP  ,                                              00509200
.*-------------------------------------------------------------------   00509300
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00509400
.ZG108             AIF   ('&XPARTMODE' NE 'PARTOFF').ZG109              00509500
.*-------------------------------------------------------------------   00509600
.***AG.KMEKY14 NAME, OPT RQD INPUT, ME KEYS -DISALLOWED KEYS            00509700
&ZCVAL             SETC ''           ERROR KEY FIELD                    00509800
.ZG108I0           AIF   (K'&PARTALET LE 0).ZG108I1                     00509900
&ZCVAL             SETC '&ZCVAL PARTALET'       DISALLOWED KEY          00510000
.ZG108I1           AIF   (K'&PARTALETOFF LE 0).ZG108I2                  00510100
&ZCVAL             SETC '&ZCVAL PARTALETOFF'    DISALLOWED KEY          00510200
.ZG108I2           AIF   (K'&PARTALETTBL LE 0).ZG108I3                  00510300
&ZCVAL             SETC '&ZCVAL PARTALETTBL'    DISALLOWED KEY          00510400
.ZG108I3           AIF   (K'&ZCVAL LE 0).ZG108J  KEY                    00510500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00510600
&ZMS               SETC  '"PARTOFF'  *KMEIA* MNOTE                      00510700
&ZMS               SETC  '&ZMS.=&PARTOFF"'                              00510800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00510900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00511000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00511100
.ZG108J            ANOP  ,                                              00511200
.*-------------------------------------------------------------------   00511300
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00511400
                   AIF   (K'&ZXPARTOFF LE 0).ZG108R  NOT I/O            00511500
                   AIF   ('&XPARTOFF'(1,1) NE '(').ZG108R               00511600
&ZCGPR             SETC  '&XPARTOFF'(2,K'&XPARTOFF-2)                   00511700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                  00511800
                   AIF   (K'&ZCGPR GT 2).ZG108Q                         00511900
                   AIF   ('&ZCGPR' EQ '0').ZG108Q                       00512000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00512100
                   AIF   (T'&ZCGPR NE 'N').ZG108Q  INVALID REG NAME     00512200
.ZG108P            ANOP  ,                                              00512300
                   AIF   (T'&ZCGPR NE 'N').ZG108R  NON NUMERIC          00512400
                   AIF   ('&ZCGPR' LT '2').ZG108Q                       00512500
                   AIF   ('&ZCGPR' LE '12').ZG108R                      00512600
.ZG108Q            ANOP  ,                                              00512700
&ZMS               SETC  '"PARTOFF='            *KGPRA* MNOTE           00512800
&ZMS               SETC  '&ZMS.&PARTOFF"'                               00512900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00513000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00513100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00513200
.ZG108R            ANOP  ,                                              00513300
.*-------------------------------------------------------------------   00513400
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00513500
.ZG109             AIF   ('&XPARTMODE' NE 'PARTPTROFF').ZG115           00513600
.*-------------------------------------------------------------------   00513700
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00513800
                   AIF   (K'&ZXPARTPTROFF LE 0).ZG109R  NOT I/O         00513900
                   AIF   ('&XPARTPTROFF'(1,1) NE '(').ZG109R            00514000
&ZCGPR             SETC  '&XPARTPTROFF'(2,K'&XPARTPTROFF-2)             00514100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG109P                  00514200
                   AIF   (K'&ZCGPR GT 2).ZG109Q                         00514300
                   AIF   ('&ZCGPR' EQ '0').ZG109Q                       00514400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00514500
                   AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME     00514600
.ZG109P            ANOP  ,                                              00514700
                   AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC          00514800
                   AIF   ('&ZCGPR' LT '2').ZG109Q                       00514900
                   AIF   ('&ZCGPR' LE '12').ZG109R                      00515000
.ZG109Q            ANOP  ,                                              00515100
&ZMS               SETC  '"PARTPTROFF='         *KGPRA* MNOTE           00515200
&ZMS               SETC  '&ZMS.&PARTPTROFF"'                            00515300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00515400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00515500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00515600
.ZG109R            ANOP  ,                                              00515700
.*----------------------------------------------------------------***   00515800
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00515900
&XDELLIST3         SETC  ''          INITIALIZE XVARIABLE               00516000
                   AIF   (K'&PARTALET LE 0).ZG111C                      00516100
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00516200
&XDELLIST3         SETC  'PARTALET'  SET XVARIABLE                      00516300
&ZXPARTALET        SETC  'INPUT'     SET IN/OUTPUT                      00516400
&XPARTALET         SETC  '&PARTALET(1)'         SET XVARIABLE PARM      00516500
                   AIF   (N'&PARTALET GT 1).ZG111A                      00516600
&XPARTALET         SETC  '&PARTALET'            SET XVARIABLE PARM      00516700
.ZG111A            AIF   (N'&PARTALET LE 1).ZG111B  CK NUM              00516800
&ZMS               SETC  '"PARTALET='           *KPOSA* MNOTE           00516900
&ZMS               SETC  '&ZMS.&PARTALET"'                              00517000
&ZMS               SETC  '&ZMS "PARTALET"'                              00517100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00517200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00517300
.ZG111B            AIF   (K'&XPARTALET GT 0).ZG111C  ONE PARM           00517400
&ZXDELLIST3        SETC  ''          RESET IN/OUTPUT                    00517500
&ZXPARTALET        SETC  ''          RESET IN/OUTPUT                    00517600
&ZMS               SETC  'WHEN "PARTPTROFF" IS SPECIFIED'  *KRQDA*      00517700
&ZMS               SETC  '&ZMS , "PARTALET" KEY AND ITS'                00517800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00517900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00518000
.ZG111C            ANOP  ,                                              00518100
.*----------------------------------------------------------------***   00518200
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00518300
                   AIF   (K'&PARTALETOFF LE 0).ZG112D  NO ME KEY        00518400
                   AIF   (N'&PARTALETOFF LE 1).ZG112A  CK NUM           00518500
&ZMS               SETC  '"PARTALETOFF='        *KPOSA* MNOTE           00518600
&ZMS               SETC  '&ZMS.&PARTALETOFF"'                           00518700
&ZMS               SETC  '&ZMS "PARTALETOFF"'                           00518800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00518900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00519000
.ZG112A            AIF   (K'&XDELLIST3 LE 0).ZG112B                     00519100
&ZMS               SETC  '"PARTALETOFF'         *KMEKA* MNOTE           00519200
&ZMS               SETC  '&ZMS.=&PARTALETOFF"'                          00519300
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00519400
&ZMS               SETC  '&ZMS "&XDELLIST3"'                            00519500
                   MNOTE 8,' &ZMS KEY.'                                 00519600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00519700
                   AGO   .ZG112D                                        00519800
.*                                                                      00519900
.ZG112B            ANOP  ,                                              00520000
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00520100
&XDELLIST3         SETC  'PARTALETOFF'          SET XVARIABLE           00520200
&ZXPARTALETOFF     SETC  'INPUT'     SET IN/OUTPUT                      00520300
&XPARTALETOFF      SETC  '&PARTALETOFF(1)'      SET XVARIABLE PARM      00520400
                   AIF   (N'&PARTALETOFF GT 1).ZG112C                   00520500
&XPARTALETOFF      SETC  '&PARTALETOFF'         SET XVARIABLE PARM      00520600
.ZG112C            AIF   (K'&XPARTALETOFF GT 0).ZG112D  ONE PARM        00520700
&ZXDELLIST3        SETC  ''          RESET IN/OUTPUT                    00520800
&ZXPARTALETOFF     SETC  ''          RESET IN/OUTPUT                    00520900
&ZMS               SETC  'WHEN "PARTPTROFF" IS SPECIFIED'  *KRQDA*      00521000
&ZMS               SETC  '&ZMS , "PARTALETOFF" KEY AND ITS'             00521100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00521200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00521300
.ZG112D            ANOP  ,                                              00521400
.*----------------------------------------------------------------***   00521500
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00521600
                   AIF   (K'&PARTALETTBL LE 0).ZG113D  NO ME KEY        00521700
                   AIF   (N'&PARTALETTBL LE 1).ZG113A  CK NUM           00521800
&ZMS               SETC  '"PARTALETTBL='        *KPOSA* MNOTE           00521900
&ZMS               SETC  '&ZMS.&PARTALETTBL"'                           00522000
&ZMS               SETC  '&ZMS "PARTALETTBL"'                           00522100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00522200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00522300
.ZG113A            AIF   (K'&XDELLIST3 LE 0).ZG113B                     00522400
&ZMS               SETC  '"PARTALETTBL'         *KMEKA* MNOTE           00522500
&ZMS               SETC  '&ZMS.=&PARTALETTBL"'                          00522600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00522700
&ZMS               SETC  '&ZMS "&XDELLIST3"'                            00522800
                   MNOTE 8,' &ZMS KEY.'                                 00522900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00523000
                   AGO   .ZG113D                                        00523100
.*                                                                      00523200
.ZG113B            ANOP  ,                                              00523300
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00523400
&XDELLIST3         SETC  'PARTALETTBL'          SET XVARIABLE           00523500
&ZXPARTALETTBL     SETC  'INPUT'     SET IN/OUTPUT                      00523600
&XPARTALETTBL      SETC  '&PARTALETTBL(1)'      SET XVARIABLE PARM      00523700
                   AIF   (N'&PARTALETTBL GT 1).ZG113C                   00523800
&XPARTALETTBL      SETC  '&PARTALETTBL'         SET XVARIABLE PARM      00523900
.ZG113C            AIF   (K'&XPARTALETTBL GT 0).ZG113D  ONE PARM        00524000
&ZXDELLIST3        SETC  ''          RESET IN/OUTPUT                    00524100
&ZXPARTALETTBL     SETC  ''          RESET IN/OUTPUT                    00524200
&ZMS               SETC  'WHEN "PARTPTROFF" IS SPECIFIED'  *KRQDA*      00524300
&ZMS               SETC  '&ZMS , "PARTALETTBL" KEY AND ITS'             00524400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00524500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00524600
.ZG113D            ANOP  ,                                              00524700
.*------------------------------------------------------------------    00524800
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00524900
                   AIF   (K'&XDELLIST3 GT 0).ZG114B                     00525000
&ZXDELLIST3        SETC  'INPUT'     SET IN/OUTPUT                      00525100
&XDELLIST3         SETC  'PARTALET'  SET DEFAULT                        00525200
&ZXPARTALET        SETC  'INPUT'     SET IN/OUTPUT                      00525300
&XPARTALET         SETC  'ZERO'      SET DEFAULT PARM                   00525400
.ZG114B            ANOP  ,                                              00525500
.*-------------------------------------------------------------------   00525600
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00525700
                   AIF   (K'&ZXPARTALETTBL LE 0).ZG114R  NOT I/O        00525800
         AIF   ('&XPARTALETTBL' EQ 'ZERO').ZG114R                       00525900
                   AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG114R           00526000
&ZCGPR             SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)           00526100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                  00526200
                   AIF   (K'&ZCGPR GT 2).ZG114Q                         00526300
                   AIF   ('&ZCGPR' EQ '0').ZG114Q                       00526400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00526500
                   AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME     00526600
.ZG114P            ANOP  ,                                              00526700
                   AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC          00526800
                   AIF   ('&ZCGPR' LT '2').ZG114Q                       00526900
                   AIF   ('&ZCGPR' LE '12').ZG114R                      00527000
.ZG114Q            ANOP  ,                                              00527100
&ZMS               SETC  '"PARTALETTBL='        *KGPRA* MNOTE           00527200
&ZMS               SETC  '&ZMS.&PARTALETTBL"'                           00527300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00527400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00527500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00527600
.ZG114R            ANOP  ,                                              00527700
.*-------------------------------------------------------------------   00527800
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00527900
.ZG111             AIF   ('&XDELLIST3' NE 'PARTALET').ZG112             00528000
.*-------------------------------------------------------------------   00528100
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00528200
                   AIF   (K'&ZXPARTALET LE 0).ZG111R  NOT I/O           00528300
         AIF   ('&XPARTALET' EQ 'ZERO').ZG111R                          00528400
                   AIF   ('&XPARTALET'(1,1) NE '(').ZG111R              00528500
&ZCGPR             SETC  '&XPARTALET'(2,K'&XPARTALET-2)                 00528600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                  00528700
                   AIF   (K'&ZCGPR GT 2).ZG111Q                         00528800
                   AIF   ('&ZCGPR' EQ '0').ZG111Q                       00528900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00529000
                   AIF   (T'&ZCGPR NE 'N').ZG111Q  INVALID REG NAME     00529100
.ZG111P            ANOP  ,                                              00529200
                   AIF   (T'&ZCGPR NE 'N').ZG111R  NON NUMERIC          00529300
                   AIF   ('&ZCGPR' LT '2').ZG111Q                       00529400
                   AIF   ('&ZCGPR' LE '12').ZG111R                      00529500
.ZG111Q            ANOP  ,                                              00529600
&ZMS               SETC  '"PARTALET='           *KGPRA* MNOTE           00529700
&ZMS               SETC  '&ZMS.&PARTALET"'                              00529800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00529900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00530000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00530100
.ZG111R            ANOP  ,                                              00530200
.*-------------------------------------------------------------------   00530300
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00530400
.ZG112             AIF   ('&XDELLIST3' NE 'PARTALETOFF').ZG113          00530500
.*-------------------------------------------------------------------   00530600
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00530700
                   AIF   (K'&ZXPARTALETOFF LE 0).ZG112R  NOT I/O        00530800
                   AIF   ('&XPARTALETOFF'(1,1) NE '(').ZG112R           00530900
&ZCGPR             SETC  '&XPARTALETOFF'(2,K'&XPARTALETOFF-2)           00531000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG112P                  00531100
                   AIF   (K'&ZCGPR GT 2).ZG112Q                         00531200
                   AIF   ('&ZCGPR' EQ '0').ZG112Q                       00531300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00531400
                   AIF   (T'&ZCGPR NE 'N').ZG112Q  INVALID REG NAME     00531500
.ZG112P            ANOP  ,                                              00531600
                   AIF   (T'&ZCGPR NE 'N').ZG112R  NON NUMERIC          00531700
                   AIF   ('&ZCGPR' LT '2').ZG112Q                       00531800
                   AIF   ('&ZCGPR' LE '12').ZG112R                      00531900
.ZG112Q            ANOP  ,                                              00532000
&ZMS               SETC  '"PARTALETOFF='        *KGPRA* MNOTE           00532100
&ZMS               SETC  '&ZMS.&PARTALETOFF"'                           00532200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00532300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00532400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00532500
.ZG112R            ANOP  ,                                              00532600
.*-------------------------------------------------------------------   00532700
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00532800
.ZG113             AIF   ('&XDELLIST3' NE 'PARTALETTBL').ZG114          00532900
.*-------------------------------------------------------------------   00533000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00533100
                   AIF   (K'&ZXPARTALETTBL LE 0).ZG113R  NOT I/O        00533200
                   AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG113R           00533300
&ZCGPR             SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)           00533400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG113P                  00533500
                   AIF   (K'&ZCGPR GT 2).ZG113Q                         00533600
                   AIF   ('&ZCGPR' EQ '0').ZG113Q                       00533700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00533800
                   AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME     00533900
.ZG113P            ANOP  ,                                              00534000
                   AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC          00534100
                   AIF   ('&ZCGPR' LT '2').ZG113Q                       00534200
                   AIF   ('&ZCGPR' LE '12').ZG113R                      00534300
.ZG113Q            ANOP  ,                                              00534400
&ZMS               SETC  '"PARTALETTBL='        *KGPRA* MNOTE           00534500
&ZMS               SETC  '&ZMS.&PARTALETTBL"'                           00534600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00534700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00534800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00534900
.ZG113R            ANOP  ,                                              00535000
.*-------------------------------------------------------------------   00535100
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00535200
.ZG114             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00535300
.*-------------------------------------------------------------------   00535400
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00535500
.ZG115             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00535600
.*----------------------------------------------------------------***   00535700
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00535800
&XLENMODE          SETC  ''          INITIALIZE XVARIABLE               00535900
                   AIF   (K'&PARTLEN LE 0).ZG117C                       00536000
&ZXLENMODE         SETC  'INPUT'     SET IN/OUTPUT                      00536100
&XLENMODE          SETC  'PARTLEN'   SET XVARIABLE                      00536200
&ZXPARTLEN         SETC  'INPUT'     SET IN/OUTPUT                      00536300
&XPARTLEN          SETC  '&PARTLEN(1)'          SET XVARIABLE PARM      00536400
                   AIF   (N'&PARTLEN GT 1).ZG117A                       00536500
&XPARTLEN          SETC  '&PARTLEN'  SET XVARIABLE PARM                 00536600
.ZG117A            AIF   (N'&PARTLEN LE 1).ZG117B  CK NUM               00536700
&ZMS               SETC  '"PARTLEN='            *KPOSA* MNOTE           00536800
&ZMS               SETC  '&ZMS.&PARTLEN"'                               00536900
&ZMS               SETC  '&ZMS "PARTLEN"'                               00537000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00537100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00537200
.ZG117B            AIF   (K'&XPARTLEN GT 0).ZG117C  ONE PARM            00537300
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00537400
&ZXPARTLEN         SETC  ''          RESET IN/OUTPUT                    00537500
&ZMS               SETC  ' '         *KRQDA*                            00537600
&ZMS               SETC  '&ZMS "PARTLEN" KEY AND ITS'                   00537700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00537800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00537900
.ZG117C            ANOP  ,                                              00538000
.*----------------------------------------------------------------***   00538100
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00538200
                   AIF   (K'&PARTLENOFF LE 0).ZG118D  NO ME KEY         00538300
                   AIF   (N'&PARTLENOFF LE 1).ZG118A  CK NUM            00538400
&ZMS               SETC  '"PARTLENOFF='         *KPOSA* MNOTE           00538500
&ZMS               SETC  '&ZMS.&PARTLENOFF"'                            00538600
&ZMS               SETC  '&ZMS "PARTLENOFF"'                            00538700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00538800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00538900
.ZG118A            AIF   (K'&XLENMODE LE 0).ZG118B                      00539000
&ZMS               SETC  '"PARTLENOFF'          *KMEKA* MNOTE           00539100
&ZMS               SETC  '&ZMS.=&PARTLENOFF"'                           00539200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00539300
&ZMS               SETC  '&ZMS "&XLENMODE"'                             00539400
                   MNOTE 8,' &ZMS KEY.'                                 00539500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00539600
                   AGO   .ZG118D                                        00539700
.*                                                                      00539800
.ZG118B            ANOP  ,                                              00539900
&ZXLENMODE         SETC  'INPUT'     SET IN/OUTPUT                      00540000
&XLENMODE          SETC  'PARTLENOFF'           SET XVARIABLE           00540100
&ZXPARTLENOFF      SETC  'INPUT'     SET IN/OUTPUT                      00540200
&XPARTLENOFF       SETC  '&PARTLENOFF(1)'       SET XVARIABLE PARM      00540300
                   AIF   (N'&PARTLENOFF GT 1).ZG118C                    00540400
&XPARTLENOFF       SETC  '&PARTLENOFF'          SET XVARIABLE PARM      00540500
.ZG118C            AIF   (K'&XPARTLENOFF GT 0).ZG118D  ONE PARM         00540600
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00540700
&ZXPARTLENOFF      SETC  ''          RESET IN/OUTPUT                    00540800
&ZMS               SETC  ' '         *KRQDA*                            00540900
&ZMS               SETC  '&ZMS "PARTLENOFF" KEY AND ITS'                00541000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00541100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00541200
.ZG118D            ANOP  ,                                              00541300
.*----------------------------------------------------------------***   00541400
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00541500
                   AIF   (K'&PARTLENTBL LE 0).ZG119D  NO ME KEY         00541600
                   AIF   (N'&PARTLENTBL LE 1).ZG119A  CK NUM            00541700
&ZMS               SETC  '"PARTLENTBL='         *KPOSA* MNOTE           00541800
&ZMS               SETC  '&ZMS.&PARTLENTBL"'                            00541900
&ZMS               SETC  '&ZMS "PARTLENTBL"'                            00542000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00542100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00542200
.ZG119A            AIF   (K'&XLENMODE LE 0).ZG119B                      00542300
&ZMS               SETC  '"PARTLENTBL'          *KMEKA* MNOTE           00542400
&ZMS               SETC  '&ZMS.=&PARTLENTBL"'                           00542500
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00542600
&ZMS               SETC  '&ZMS "&XLENMODE"'                             00542700
                   MNOTE 8,' &ZMS KEY.'                                 00542800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00542900
                   AGO   .ZG119D                                        00543000
.*                                                                      00543100
.ZG119B            ANOP  ,                                              00543200
&ZXLENMODE         SETC  'INPUT'     SET IN/OUTPUT                      00543300
&XLENMODE          SETC  'PARTLENTBL'           SET XVARIABLE           00543400
&ZXPARTLENTBL      SETC  'INPUT'     SET IN/OUTPUT                      00543500
&XPARTLENTBL       SETC  '&PARTLENTBL(1)'       SET XVARIABLE PARM      00543600
                   AIF   (N'&PARTLENTBL GT 1).ZG119C                    00543700
&XPARTLENTBL       SETC  '&PARTLENTBL'          SET XVARIABLE PARM      00543800
.ZG119C            AIF   (K'&XPARTLENTBL GT 0).ZG119D  ONE PARM         00543900
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00544000
&ZXPARTLENTBL      SETC  ''          RESET IN/OUTPUT                    00544100
&ZMS               SETC  ' '         *KRQDA*                            00544200
&ZMS               SETC  '&ZMS "PARTLENTBL" KEY AND ITS'                00544300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00544400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00544500
.ZG119D            ANOP  ,                                              00544600
.*------------------------------------------------------------------    00544700
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00544800
                   AIF   (K'&XLENMODE GT 0).ZG120B                      00544900
&ZXLENMODE         SETC  ''          RESET IN/OUTPUT                    00545000
&ZXPARTLEN         SETC  ''          RESET IN/OUTPUT                    00545100
&XLENMODE          SETC  ''          ENSURE NULL                        00545200
&XPARTLEN          SETC  ''          ENSURE NULL                        00545300
&ZMS               SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE          00545400
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00545500
&ZMS               SETC  '&ZMS REQUIRED:'                               00545600
&ZMS               SETC  '&ZMS "PARTLEN",'      VALID ME KEY            00545700
&ZMS               SETC  '&ZMS "PARTLENOFF",'   VALID ME KEY            00545800
&ZMS               SETC  '&ZMS OR "PARTLENTBL".'  VALID ME KEY          00545900
                   MNOTE 8,' &ZMS '                                     00546000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00546100
.ZG120B            ANOP  ,                                              00546200
.*-------------------------------------------------------------------   00546300
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00546400
.ZG117             AIF   ('&XLENMODE' NE 'PARTLEN').ZG118               00546500
.*-------------------------------------------------------------------   00546600
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00546700
                   AIF   (K'&ZXPARTLEN LE 0).ZG117R  NOT I/O            00546800
                   AIF   ('&XPARTLEN'(1,1) NE '(').ZG117R               00546900
&ZCGPR             SETC  '&XPARTLEN'(2,K'&XPARTLEN-2)                   00547000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG117P                  00547100
                   AIF   (K'&ZCGPR GT 2).ZG117Q                         00547200
                   AIF   ('&ZCGPR' EQ '0').ZG117Q                       00547300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00547400
                   AIF   (T'&ZCGPR NE 'N').ZG117Q  INVALID REG NAME     00547500
.ZG117P            ANOP  ,                                              00547600
                   AIF   (T'&ZCGPR NE 'N').ZG117R  NON NUMERIC          00547700
                   AIF   ('&ZCGPR' LT '2').ZG117Q                       00547800
                   AIF   ('&ZCGPR' LE '12').ZG117R                      00547900
.ZG117Q            ANOP  ,                                              00548000
&ZMS               SETC  '"PARTLEN='            *KGPRA* MNOTE           00548100
&ZMS               SETC  '&ZMS.&PARTLEN"'                               00548200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00548300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00548400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00548500
.ZG117R            ANOP  ,                                              00548600
.*-------------------------------------------------------------------   00548700
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00548800
.ZG118             AIF   ('&XLENMODE' NE 'PARTLENOFF').ZG119            00548900
.*-------------------------------------------------------------------   00549000
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00549100
                   AIF   (K'&ZXPARTLENOFF LE 0).ZG118R  NOT I/O         00549200
                   AIF   ('&XPARTLENOFF'(1,1) NE '(').ZG118R            00549300
&ZCGPR             SETC  '&XPARTLENOFF'(2,K'&XPARTLENOFF-2)             00549400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG118P                  00549500
                   AIF   (K'&ZCGPR GT 2).ZG118Q                         00549600
                   AIF   ('&ZCGPR' EQ '0').ZG118Q                       00549700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00549800
                   AIF   (T'&ZCGPR NE 'N').ZG118Q  INVALID REG NAME     00549900
.ZG118P            ANOP  ,                                              00550000
                   AIF   (T'&ZCGPR NE 'N').ZG118R  NON NUMERIC          00550100
                   AIF   ('&ZCGPR' LT '2').ZG118Q                       00550200
                   AIF   ('&ZCGPR' LE '12').ZG118R                      00550300
.ZG118Q            ANOP  ,                                              00550400
&ZMS               SETC  '"PARTLENOFF='         *KGPRA* MNOTE           00550500
&ZMS               SETC  '&ZMS.&PARTLENOFF"'                            00550600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00550700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00550800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00550900
.ZG118R            ANOP  ,                                              00551000
.*-------------------------------------------------------------------   00551100
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00551200
.ZG119             AIF   ('&XLENMODE' NE 'PARTLENTBL').ZG120            00551300
.*-------------------------------------------------------------------   00551400
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00551500
                   AIF   (K'&ZXPARTLENTBL LE 0).ZG119R  NOT I/O         00551600
                   AIF   ('&XPARTLENTBL'(1,1) NE '(').ZG119R            00551700
&ZCGPR             SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)             00551800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG119P                  00551900
                   AIF   (K'&ZCGPR GT 2).ZG119Q                         00552000
                   AIF   ('&ZCGPR' EQ '0').ZG119Q                       00552100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00552200
                   AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME     00552300
.ZG119P            ANOP  ,                                              00552400
                   AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC          00552500
                   AIF   ('&ZCGPR' LT '2').ZG119Q                       00552600
                   AIF   ('&ZCGPR' LE '12').ZG119R                      00552700
.ZG119Q            ANOP  ,                                              00552800
&ZMS               SETC  '"PARTLENTBL='         *KGPRA* MNOTE           00552900
&ZMS               SETC  '&ZMS.&PARTLENTBL"'                            00553000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00553100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00553200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00553300
.ZG119R            ANOP  ,                                              00553400
.*-------------------------------------------------------------------   00553500
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00553600
.ZG120             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00553700
.*------------------------------------------------------------------    00553800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00553900
.ZG121             ANOP  ,                                              00554000
&ZXMULTIPART       SETC  'INPUT'     SET IN/OUTPUT                      00554100
                   AIF   (K'&XMULTIPART GT 0).ZG121E  VALID ARG         00554200
                   AIF   (T'&MULTIPART EQ 'O').ZG121D  OMITTED          00554300
&ZASYSLNDX         SETA  0                                              00554400
.ZG121A            ANOP  ,           POSITIONAL MACRO KEY               00554500
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00554600
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG121C              00554700
&ZTLC              SETC 'MULTIPART'                                     00554800
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG121A     00554900
.ZG121B            ANOP  ,                                              00555000
&ZXMULTIPART       SETC  ''          RESET IN/OUTPUT                    00555100
&ZMS               SETC  'THE "MULTIPART" KEY'  *KOPTA* MNOTE           00555200
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00555300
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00555400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00555500
                   AGO   .ZG121E                                        00555600
.ZG121C            ANOP  ,                                              00555700
&ZXMULTIPART       SETC  ''          RESET IN/OUTPUT                    00555800
&ZMS               SETC  '"MULTIPART='          *KUKWA* MNOTE           00555900
&ZMS               SETC  '&ZMS.&MULTIPART"'                             00556000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00556100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00556200
&ZMS               SETC  '&ZMS "NO"'                                    00556300
&ZMS               SETC  '&ZMS OR "YES".'                               00556400
                   MNOTE 8,' &ZMS '                                     00556500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00556600
                   AGO   .ZG121E                                        00556700
.ZG121D            ANOP  ,                                              00556800
&XMULTIPART        SETC  'NO'        SET DEFAULT KEYWORD                00556900
.ZG121E            ANOP  ,                                              00557000
.*----------------------------------------------------------------***   00557100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00557200
                   AIF   (N'&MSGSTGKEY LE 1).ZG123A  CK NUM             00557300
&ZMS               SETC  '"MSGSTGKEY='          *KPOSA* MNOTE           00557400
&ZMS               SETC  '&ZMS.&MSGSTGKEY"'                             00557500
&ZMS               SETC  '&ZMS "MSGSTGKEY"'                             00557600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00557700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00557800
.ZG123A            ANOP  ,                                              00557900
.*-------------------------------------------------------------------   00558000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00558100
&ZXMSGSTGKEY       SETC  'INPUT'     SET IN/OUTPUT                      00558200
&XMSGSTGKEY        SETC  'ANY'                                          00558300
                   AIF   (K'&MSGSTGKEY(1) LE 0).ZG123B  PARM            00558400
&XMSGSTGKEY        SETC  '&MSGSTGKEY(1)'        SET XVARIABLE           00558500
                   AIF   (N'&MSGSTGKEY GT 1).ZG123B  MULTI PARMS        00558600
&XMSGSTGKEY        SETC  '&MSGSTGKEY'           SET XVARIABLE           00558700
.ZG123B            ANOP  ,                                              00558800
.*-------------------------------------------------------------------   00558900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00559000
                   AIF   (K'&ZXMSGSTGKEY LE 0).ZG123R  NOT I/O          00559100
         AIF   ('&XMSGSTGKEY' EQ 'ANY').ZG123R                          00559200
                   AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZG123R             00559300
&ZCGPR             SETC  '&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2)               00559400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG123P                  00559500
                   AIF   (K'&ZCGPR GT 2).ZG123Q                         00559600
                   AIF   ('&ZCGPR' EQ '0').ZG123Q                       00559700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00559800
                   AIF   (T'&ZCGPR NE 'N').ZG123Q  INVALID REG NAME     00559900
.ZG123P            ANOP  ,                                              00560000
                   AIF   (T'&ZCGPR NE 'N').ZG123R  NON NUMERIC          00560100
                   AIF   ('&ZCGPR' LT '2').ZG123Q                       00560200
                   AIF   ('&ZCGPR' LE '12').ZG123R                      00560300
.ZG123Q            ANOP  ,                                              00560400
&ZMS               SETC  '"MSGSTGKEY='          *KGPRA* MNOTE           00560500
&ZMS               SETC  '&ZMS.&MSGSTGKEY"'                             00560600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00560700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00560800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00560900
.ZG123R            ANOP  ,                                              00561000
.*----------------------------------------------------------------***   00561100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00561200
                   AIF   (N'&MSGACCESS LE 1).ZG126A  CK NUM             00561300
&ZMS               SETC  '"MSGACCESS='          *KPOSA* MNOTE           00561400
&ZMS               SETC  '&ZMS.&MSGACCESS"'                             00561500
&ZMS               SETC  '&ZMS "MSGACCESS"'                             00561600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00561700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00561800
.ZG126A            ANOP  ,                                              00561900
.*-------------------------------------------------------------------   00562000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00562100
&XMSGACCESS        SETC  ''          INITIALIZE XVARIABLE               00562200
.ZG127A   AIF   ('&MSGACCESS(1)' NE 'SYNC').ZG128A                      00562300
&XMSGACCESS        SETC  'SYNC'      SET KEYWORD                        00562400
.*-------------------------------------------------------------------   00562500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00562600
.ZG128A   AIF   ('&MSGACCESS(1)' NE 'ASYNC').ZG129A                     00562700
&XMSGACCESS        SETC  'ASYNC'     SET KEYWORD                        00562800
.*-------------------------------------------------------------------   00562900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00563000
.ZG129A            AIF   (K'&XMSGACCESS GT 0).ZG129C  KEYWORD           00563100
                   AIF   (K'&MSGACCESS(1) LE 0).ZG129B                  00563200
&ZMS               SETC  '"MSGACCESS='          *KUKWA* MNOTE           00563300
&ZMS               SETC  '&ZMS.&MSGACCESS"'                             00563400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00563500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00563600
&ZMS               SETC  '&ZMS "SYNC"'                                  00563700
&ZMS               SETC  '&ZMS OR "ASYNC".'                             00563800
                   MNOTE 8,' &ZMS '                                     00563900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00564000
.ZG129B            ANOP  ,                                              00564100
&XMSGACCESS        SETC  'SYNC'      SET DEFAULT KEYWORD                00564200
.ZG129C            ANOP  ,                                              00564300
&ZXMSGACCESS       SETC  'INPUT'     SET IN/OUTPUT                      00564400
.*------------------------------------------------------------------    00564500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00564600
&XNOTIFY           SETC  ''          INITIALIZE XVARIABLE               00564700
.*-------------------------------------------------------------------   00564800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00564900
.ZG132             ANOP  ,                                              00565000
                   AIF   (K'&NOTIFY(1) LE 0).ZG132A                     00565100
&ZTLC              SETC 'NO'                                            00565200
                   AIF   ('&NOTIFY(1)' NE '&ZTLC').ZG133                00565300
&XNOTIFY           SETC  'NO'        SET KEYWORD                        00565400
                   AIF   (N'&NOTIFY LE 1).ZG132A  CK NUM                00565500
&ZMS               SETC  '"NOTIFY='  *KPOSA* MNOTE                      00565600
&ZMS               SETC  '&ZMS.&NOTIFY"'                                00565700
&ZMS               SETC  '&ZMS "NOTIFY"'                                00565800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00565900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00566000
.ZG132A            ANOP  ,                                              00566100
.*------------------------------------------------------------------    00566200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00566400
.ZG132A0           AIF   (K'&USERDATA LE 0).ZG132A1  OK                 00566500
&ZCVAL             SETC '&ZCVAL USERDATA'       INCORRECT KEY USED      00566600
.ZG132A1           AIF   (K'&NOTIFYIF LE 0).ZG132A2  OK                 00566700
&ZCVAL             SETC '&ZCVAL NOTIFYIF'       INCORRECT KEY USED      00566800
.ZG132A2           AIF   (K'&NOTIFYBY LE 0).ZG132A3  OK                 00566900
&ZCVAL             SETC '&ZCVAL NOTIFYBY'       INCORRECT KEY USED      00567000
.ZG132A3           AIF   (K'&NOTIFYEXIT LE 0).ZG132A4  OK               00567100
&ZCVAL             SETC '&ZCVAL NOTIFYEXIT'     INCORRECT KEY USED      00567200
.ZG132A4           AIF   (K'&RETMSGOTOKEN LE 0).ZG132A5  OK             00567300
&ZCVAL             SETC '&ZCVAL RETMSGOTOKEN'   INCORRECT KEY USED      00567400
.ZG132A5           AIF   (K'&ZCVAL LE 0).ZG132A6  OK                    00567500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00567600
&ZMS               SETC  '"NOTIFY'   *KMEIA* MNOTE                      00567700
&ZMS               SETC  '&ZMS.=&NOTIFY"'                               00567800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00567900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00568000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00568100
.ZG132A6           ANOP  ,                                              00568200
.*-------------------------------------------------------------------   00568300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00568400
.ZG133             ANOP  ,                                              00568500
&ZTLC              SETC 'YES'                                           00568600
                   AIF   ('&NOTIFY(1)' NE '&ZTLC').ZG152                00568700
&XNOTIFY           SETC  'YES'       SET KEYWORD                        00568800
                   AIF   (N'&NOTIFY LE 1).ZG133A  CK NUM                00568900
&ZMS               SETC  '"NOTIFY='  *KPOSA* MNOTE                      00569000
&ZMS               SETC  '&ZMS.&NOTIFY"'                                00569100
&ZMS               SETC  '&ZMS "NOTIFY"'                                00569200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00569300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00569400
.ZG133A            ANOP  ,                                              00569500
.*----------------------------------------------------------------***   00569600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00569700
                   AIF   (N'&USERDATA LE 1).ZG135A  CK NUM              00569800
&ZMS               SETC  '"USERDATA='           *KPOSA* MNOTE           00569900
&ZMS               SETC  '&ZMS.&USERDATA"'                              00570000
&ZMS               SETC  '&ZMS "USERDATA"'                              00570100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00570200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00570300
.ZG135A            ANOP  ,                                              00570400
.*-------------------------------------------------------------------   00570500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00570600
&ZXUSERDATA        SETC  'INPUT'     SET IN/OUTPUT                      00570700
&XUSERDATA         SETC  'ALLZERO'                                      00570800
                   AIF   (K'&USERDATA(1) LE 0).ZG135B  PARM             00570900
&XUSERDATA         SETC  '&USERDATA(1)'         SET XVARIABLE           00571000
                   AIF   (N'&USERDATA GT 1).ZG135B  MULTI PARMS         00571100
&XUSERDATA         SETC  '&USERDATA'            SET XVARIABLE           00571200
.ZG135B            ANOP  ,                                              00571300
.*-------------------------------------------------------------------   00571400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00571500
                   AIF   (K'&ZXUSERDATA LE 0).ZG135R  NOT I/O           00571600
         AIF   ('&XUSERDATA' EQ 'ALLZERO').ZG135R                       00571700
                   AIF   ('&XUSERDATA'(1,1) NE '(').ZG135R              00571800
&ZCGPR             SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                 00571900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                  00572000
                   AIF   (K'&ZCGPR GT 2).ZG135Q                         00572100
                   AIF   ('&ZCGPR' EQ '0').ZG135Q                       00572200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00572300
                   AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME     00572400
.ZG135P            ANOP  ,                                              00572500
                   AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC          00572600
                   AIF   ('&ZCGPR' LT '2').ZG135Q                       00572700
                   AIF   ('&ZCGPR' LE '12').ZG135R                      00572800
.ZG135Q            ANOP  ,                                              00572900
&ZMS               SETC  '"USERDATA='           *KGPRA* MNOTE           00573000
&ZMS               SETC  '&ZMS.&USERDATA"'                              00573100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00573200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00573300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00573400
.ZG135R            ANOP  ,                                              00573500
.*------------------------------------------------------------------    00573600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00573700
&XNOTIFYIF         SETC  ''          INITIALIZE XVARIABLE               00573800
.*-------------------------------------------------------------------   00573900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00574000
.ZG139             ANOP  ,                                              00574100
                   AIF   (K'&NOTIFYIF(1) LE 0).ZG139A                   00574200
&ZTLC              SETC 'COMPLETED'                                     00574300
                   AIF   ('&NOTIFYIF(1)' NE '&ZTLC').ZG140              00574400
&XNOTIFYIF         SETC  'COMPLETED'            SET KEYWORD             00574500
                   AIF   (N'&NOTIFYIF LE 1).ZG139A  CK NUM              00574600
&ZMS               SETC  '"NOTIFYIF='           *KPOSA* MNOTE           00574700
&ZMS               SETC  '&ZMS.&NOTIFYIF"'                              00574800
&ZMS               SETC  '&ZMS "NOTIFYIF"'                              00574900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00575000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00575100
.ZG139A            ANOP  ,                                              00575200
.*-------------------------------------------------------------------   00575300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575400
.ZG140             ANOP  ,                                              00575500
&ZTLC              SETC 'FAILED'                                        00575600
                   AIF   ('&NOTIFYIF(1)' NE '&ZTLC').ZG141              00575700
&XNOTIFYIF         SETC  'FAILED'    SET KEYWORD                        00575800
                   AIF   (N'&NOTIFYIF LE 1).ZG140A  CK NUM              00575900
&ZMS               SETC  '"NOTIFYIF='           *KPOSA* MNOTE           00576000
&ZMS               SETC  '&ZMS.&NOTIFYIF"'                              00576100
&ZMS               SETC  '&ZMS "NOTIFYIF"'                              00576200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00576300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00576400
.ZG140A            ANOP  ,                                              00576500
.*------------------------------------------------------------------    00576600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00576700
.ZG141             ANOP  ,                                              00576800
&ZXNOTIFYIF        SETC  'INPUT'     SET IN/OUTPUT                      00576900
                   AIF   (K'&XNOTIFYIF GT 0).ZG141E  VALID ARG          00577000
                   AIF   (T'&NOTIFYIF EQ 'O').ZG141D  OMITTED           00577100
&ZASYSLNDX         SETA  0                                              00577200
.ZG141A            ANOP  ,           POSITIONAL MACRO KEY               00577300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00577400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG141C              00577500
&ZTLC              SETC 'NOTIFYIF'                                      00577600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG141A     00577700
.ZG141B            ANOP  ,                                              00577800
&ZXNOTIFYIF        SETC  ''          RESET IN/OUTPUT                    00577900
&ZMS               SETC  'THE "NOTIFYIF" KEY'   *KOPTA* MNOTE           00578000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00578100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00578200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00578300
                   AGO   .ZG141E                                        00578400
.ZG141C            ANOP  ,                                              00578500
&ZXNOTIFYIF        SETC  ''          RESET IN/OUTPUT                    00578600
&ZMS               SETC  '"NOTIFYIF='           *KUKWA* MNOTE           00578700
&ZMS               SETC  '&ZMS.&NOTIFYIF"'                              00578800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00578900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00579000
&ZMS               SETC  '&ZMS "COMPLETED"'                             00579100
&ZMS               SETC  '&ZMS OR "FAILED".'                            00579200
                   MNOTE 8,' &ZMS '                                     00579300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00579400
                   AGO   .ZG141E                                        00579500
.ZG141D            ANOP  ,                                              00579600
&XNOTIFYIF         SETC  'COMPLETED'            SET DEFAULT KEYWORD     00579700
.ZG141E            ANOP  ,                                              00579800
.*------------------------------------------------------------------    00579900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00580000
&XNOTIFYBY         SETC  ''          INITIALIZE XVARIABLE               00580100
.*-------------------------------------------------------------------   00580200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00580300
.ZG144             ANOP  ,                                              00580400
                   AIF   (K'&NOTIFYBY(1) LE 0).ZG144A                   00580500
&ZTLC              SETC 'EXIT'                                          00580600
                   AIF   ('&NOTIFYBY(1)' NE '&ZTLC').ZG148              00580700
&XNOTIFYBY         SETC  'EXIT'      SET KEYWORD                        00580800
                   AIF   (N'&NOTIFYBY LE 1).ZG144A  CK NUM              00580900
&ZMS               SETC  '"NOTIFYBY='           *KPOSA* MNOTE           00581000
&ZMS               SETC  '&ZMS.&NOTIFYBY"'                              00581100
&ZMS               SETC  '&ZMS "NOTIFYBY"'                              00581200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00581300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00581400
.ZG144A            ANOP  ,                                              00581500
.*----------------------------------------------------------------***   00581600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00581700
                   AIF   (N'&NOTIFYEXIT LE 1).ZG146A  CK NUM            00581800
&ZMS               SETC  '"NOTIFYEXIT='         *KPOSA* MNOTE           00581900
&ZMS               SETC  '&ZMS.&NOTIFYEXIT"'                            00582000
&ZMS               SETC  '&ZMS "NOTIFYEXIT"'                            00582100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00582200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00582300
.ZG146A            ANOP  ,                                              00582400
.*-------------------------------------------------------------------   00582500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00582600
&ZXNOTIFYEXIT      SETC  'INPUT'     SET IN/OUTPUT                      00582700
&XNOTIFYEXIT       SETC  'FROMJOIN'                                     00582800
                   AIF   (K'&NOTIFYEXIT(1) LE 0).ZG146B  PARM           00582900
&XNOTIFYEXIT       SETC  '&NOTIFYEXIT(1)'       SET XVARIABLE           00583000
                   AIF   (N'&NOTIFYEXIT GT 1).ZG146B  MULTI PARMS       00583100
&XNOTIFYEXIT       SETC  '&NOTIFYEXIT'          SET XVARIABLE           00583200
.ZG146B            ANOP  ,                                              00583300
.*-------------------------------------------------------------------   00583400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00583500
                   AIF   (K'&ZXNOTIFYEXIT LE 0).ZG146R  NOT I/O         00583600
         AIF   ('&XNOTIFYEXIT' EQ 'FROMJOIN').ZG146R                    00583700
                   AIF   ('&XNOTIFYEXIT'(1,1) NE '(').ZG146R            00583800
&ZCGPR             SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)             00583900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG146P                  00584000
                   AIF   (K'&ZCGPR GT 2).ZG146Q                         00584100
                   AIF   ('&ZCGPR' EQ '0').ZG146Q                       00584200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00584300
                   AIF   (T'&ZCGPR NE 'N').ZG146Q  INVALID REG NAME     00584400
.ZG146P            ANOP  ,                                              00584500
                   AIF   (T'&ZCGPR NE 'N').ZG146R  NON NUMERIC          00584600
                   AIF   ('&ZCGPR' LT '2').ZG146Q                       00584700
                   AIF   ('&ZCGPR' LE '12').ZG146R                      00584800
.ZG146Q            ANOP  ,                                              00584900
&ZMS               SETC  '"NOTIFYEXIT='         *KGPRA* MNOTE           00585000
&ZMS               SETC  '&ZMS.&NOTIFYEXIT"'                            00585100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00585200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00585300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00585400
.ZG146R            ANOP  ,                                              00585500
.*------------------------------------------------------------------    00585600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00585700
.ZG148             ANOP  ,                                              00585800
&ZXNOTIFYBY        SETC  'INPUT'     SET IN/OUTPUT                      00585900
                   AIF   (K'&XNOTIFYBY GT 0).ZG148E  VALID ARG          00586000
                   AIF   (T'&NOTIFYBY EQ 'O').ZG148D  OMITTED           00586100
&ZASYSLNDX         SETA  0                                              00586200
.ZG148A            ANOP  ,           POSITIONAL MACRO KEY               00586300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00586400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG148C              00586500
&ZTLC              SETC 'NOTIFYBY'                                      00586600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG148A     00586700
.ZG148B            ANOP  ,                                              00586800
&ZXNOTIFYBY        SETC  ''          RESET IN/OUTPUT                    00586900
&ZMS               SETC  'THE "NOTIFYBY" KEY'   *KOPTA* MNOTE           00587000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00587100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00587200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00587300
                   AGO   .ZG148E                                        00587400
.ZG148C            ANOP  ,                                              00587500
&ZXNOTIFYBY        SETC  ''          RESET IN/OUTPUT                    00587600
&ZMS               SETC  '"NOTIFYBY='           *KUKWA* MNOTE           00587700
&ZMS               SETC  '&ZMS.&NOTIFYBY"'                              00587800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00587900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00588000
&ZMS               SETC  '&ZMS "EXIT".'                                 00588100
                   MNOTE 8,' &ZMS '                                     00588200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00588300
                   AGO   .ZG148E                                        00588400
.ZG148D            ANOP  ,                                              00588500
&XNOTIFYBY         SETC  'EXIT'      SET DEFAULT KEYWORD                00588600
.ZG148E            ANOP  ,                                              00588700
.*----------------------------------------------------------------***   00588800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00588900
                   AIF   (N'&RETMSGOTOKEN LE 1).ZG150A  CK NUM          00589000
&ZMS               SETC  '"RETMSGOTOKEN='       *KPOSA* MNOTE           00589100
&ZMS               SETC  '&ZMS.&RETMSGOTOKEN"'                          00589200
&ZMS               SETC  '&ZMS "RETMSGOTOKEN"'                          00589300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00589400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00589500
.ZG150A            ANOP  ,                                              00589600
.*-------------------------------------------------------------------   00589700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00589800
                   AIF   (K'&RETMSGOTOKEN(1) LE 0).ZG150C  NO PARM      00589900
&ZXRETMSGOTOKEN    SETC  'OUTPUT'    SET OUTPUT                         00590000
&XRETMSGOTOKEN     SETC  '&RETMSGOTOKEN(1)'     SET XVARIABLE           00590100
                   AIF   (N'&RETMSGOTOKEN GT 1).ZG150C                  00590200
&XRETMSGOTOKEN     SETC  '&RETMSGOTOKEN'        SET XVARIABLE           00590300
.ZG150C            ANOP  ,                                              00590400
.*-------------------------------------------------------------------   00590500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00590600
                   AIF   (K'&ZXRETMSGOTOKEN LE 0).ZG150R  NOT I/O       00590700
                   AIF   ('&XRETMSGOTOKEN'(1,1) NE '(').ZG150R          00590800
&ZCGPR             SETC  '&XRETMSGOTOKEN'(2,K'&XRETMSGOTOKEN-2)         00590900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG150P                  00591000
                   AIF   (K'&ZCGPR GT 2).ZG150Q                         00591100
                   AIF   ('&ZCGPR' EQ '0').ZG150Q                       00591200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00591300
                   AIF   (T'&ZCGPR NE 'N').ZG150Q  INVALID REG NAME     00591400
.ZG150P            ANOP  ,                                              00591500
                   AIF   (T'&ZCGPR NE 'N').ZG150R  NON NUMERIC          00591600
                   AIF   ('&ZCGPR' LT '2').ZG150Q                       00591700
                   AIF   ('&ZCGPR' LE '12').ZG150R                      00591800
.ZG150Q            ANOP  ,                                              00591900
&ZMS               SETC  '"RETMSGOTOKEN='       *KGPRA* MNOTE           00592000
&ZMS               SETC  '&ZMS.&RETMSGOTOKEN"'                          00592100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00592200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00592300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00592400
.ZG150R            ANOP  ,                                              00592500
.*------------------------------------------------------------------    00592600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00592700
.ZG152             ANOP  ,                                              00592800
&ZXNOTIFY          SETC  'INPUT'     SET IN/OUTPUT                      00592900
                   AIF   (K'&XNOTIFY GT 0).ZG152E  VALID ARG            00593000
                   AIF   (T'&NOTIFY EQ 'O').ZG152D  OMITTED             00593100
&ZASYSLNDX         SETA  0                                              00593200
.ZG152A            ANOP  ,           POSITIONAL MACRO KEY               00593300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00593400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG152C              00593500
&ZTLC              SETC 'NOTIFY'                                        00593600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG152A     00593700
.ZG152B            ANOP  ,                                              00593800
&ZXNOTIFY          SETC  ''          RESET IN/OUTPUT                    00593900
&ZMS               SETC  'THE "NOTIFY" KEY'     *KOPTA* MNOTE           00594000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00594100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00594200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00594300
                   AGO   .ZG152E                                        00594400
.ZG152C            ANOP  ,                                              00594500
&ZXNOTIFY          SETC  ''          RESET IN/OUTPUT                    00594600
&ZMS               SETC  '"NOTIFY='  *KUKWA* MNOTE                      00594700
&ZMS               SETC  '&ZMS.&NOTIFY"'                                00594800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00594900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00595000
&ZMS               SETC  '&ZMS "NO"'                                    00595100
&ZMS               SETC  '&ZMS OR "YES".'                               00595200
                   MNOTE 8,' &ZMS '                                     00595300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00595400
                   AGO   .ZG152E                                        00595500
.ZG152D            ANOP  ,                                              00595600
&XNOTIFY           SETC  'NO'        SET DEFAULT KEYWORD                00595700
.ZG152E            ANOP  ,                                              00595800
.*------------------------------------------------------------------    00595900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00596000
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               00596100
.*-------------------------------------------------------------------   00596200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00596300
.ZG155             ANOP  ,                                              00596400
                   AIF   (K'&LINKAGE(1) LE 0).ZG155A                    00596500
&ZTLC              SETC 'SYSTEM'                                        00596600
                   AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG156               00596700
&XLINKAGE          SETC  'SYSTEM'    SET KEYWORD                        00596800
                   AIF   (N'&LINKAGE LE 1).ZG155A  CK NUM               00596900
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           00597000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00597100
&ZMS               SETC  '&ZMS "LINKAGE"'                               00597200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00597300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00597400
.ZG155A            ANOP  ,                                              00597500
.*------------------------------------------------------------------    00597600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00597700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00597800
.ZG155A0           AIF   (K'&XCFDATA LE 0).ZG155A1  OK                  00597900
&ZCVAL             SETC '&ZCVAL XCFDATA'        INCORRECT KEY USED      00598000
.ZG155A1           AIF   (K'&ZCVAL LE 0).ZG155A2  OK                    00598100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00598200
&ZMS               SETC  '"LINKAGE'  *KMEIA* MNOTE                      00598300
&ZMS               SETC  '&ZMS.=&LINKAGE"'                              00598400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00598500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00598600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00598700
.ZG155A2           ANOP  ,                                              00598800
.*-------------------------------------------------------------------   00598900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00599000
.ZG156             ANOP  ,                                              00599100
&ZTLC              SETC 'INTERNAL'                                      00599200
                   AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG160               00599300
&XLINKAGE          SETC  'INTERNAL'  SET KEYWORD                        00599400
                   AIF   (N'&LINKAGE LE 1).ZG156A  CK NUM               00599500
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           00599600
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00599700
&ZMS               SETC  '&ZMS "LINKAGE"'                               00599800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00599900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00600000
.ZG156A            ANOP  ,                                              00600100
.*----------------------------------------------------------------***   00600200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00600300
                   AIF   (N'&XCFDATA LE 1).ZG158A  CK NUM               00600400
&ZMS               SETC  '"XCFDATA='            *KPOSA* MNOTE           00600500
&ZMS               SETC  '&ZMS.&XCFDATA"'                               00600600
&ZMS               SETC  '&ZMS "XCFDATA"'                               00600700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00600800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00600900
.ZG158A            ANOP  ,                                              00601000
.*-------------------------------------------------------------------   00601100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00601200
&ZXXCFDATA         SETC  'INPUT'     SET IN/OUTPUT                      00601300
&XXCFDATA          SETC  '&XCFDATA(1)'          SET XVARIABLE           00601400
                   AIF   (N'&XCFDATA GT 1).ZG158B  MULTI PARMS          00601500
&XXCFDATA          SETC  '&XCFDATA'  SET XVARIABLE                      00601600
.ZG158B            AIF   (K'&XCFDATA(1) GT 0).ZG158C                    00601700
&ZXXCFDATA         SETC  ''          RESET IN/OUTPUT                    00601800
&ZMS               SETC  'WHEN "INTERNAL" IS SPECIFIED'  *KRQDA*        00601900
&ZMS               SETC  '&ZMS , "XCFDATA" KEY AND ITS'                 00602000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00602100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00602200
.ZG158C            ANOP  ,                                              00602300
.*-------------------------------------------------------------------   00602400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00602500
                   AIF   (K'&ZXXCFDATA LE 0).ZG158R  NOT I/O            00602600
                   AIF   ('&XXCFDATA'(1,1) NE '(').ZG158R               00602700
&ZCGPR             SETC  '&XXCFDATA'(2,K'&XXCFDATA-2)                   00602800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG158P                  00602900
                   AIF   (K'&ZCGPR GT 2).ZG158Q                         00603000
                   AIF   ('&ZCGPR' EQ '0').ZG158Q                       00603100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00603200
                   AIF   (T'&ZCGPR NE 'N').ZG158Q  INVALID REG NAME     00603300
.ZG158P            ANOP  ,                                              00603400
                   AIF   (T'&ZCGPR NE 'N').ZG158R  NON NUMERIC          00603500
                   AIF   ('&ZCGPR' LT '2').ZG158Q                       00603600
                   AIF   ('&ZCGPR' LE '12').ZG158R                      00603700
.ZG158Q            ANOP  ,                                              00603800
&ZMS               SETC  '"XCFDATA='            *KGPRA* MNOTE           00603900
&ZMS               SETC  '&ZMS.&XCFDATA"'                               00604000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00604100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00604200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00604300
.ZG158R            ANOP  ,                                              00604400
.*------------------------------------------------------------------    00604500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00604600
.ZG160             ANOP  ,                                              00604700
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      00604800
                   AIF   (K'&XLINKAGE GT 0).ZG160E  VALID ARG           00604900
                   AIF   (T'&LINKAGE EQ 'O').ZG160D  OMITTED            00605000
&ZASYSLNDX         SETA  0                                              00605100
.ZG160A            ANOP  ,           POSITIONAL MACRO KEY               00605200
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00605300
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG160C              00605400
&ZTLC              SETC 'LINKAGE'                                       00605500
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG160A     00605600
.ZG160B            ANOP  ,                                              00605700
&ZXLINKAGE         SETC  ''          RESET IN/OUTPUT                    00605800
&ZMS               SETC  'THE "LINKAGE" KEY'    *KOPTA* MNOTE           00605900
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00606000
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00606100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00606200
                   AGO   .ZG160E                                        00606300
.ZG160C            ANOP  ,                                              00606400
&ZXLINKAGE         SETC  ''          RESET IN/OUTPUT                    00606500
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           00606600
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00606700
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00606800
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00606900
&ZMS               SETC  '&ZMS "SYSTEM"'                                00607000
&ZMS               SETC  '&ZMS OR "INTERNAL".'                          00607100
                   MNOTE 8,' &ZMS '                                     00607200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00607300
                   AGO   .ZG160E                                        00607400
.ZG160D            ANOP  ,                                              00607500
&XLINKAGE          SETC  'SYSTEM'    SET DEFAULT KEYWORD                00607600
.ZG160E            ANOP  ,                                              00607700
.*----------------------------------------------------------------***   00607800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00607900
                   AIF   (N'&RETCODE LE 1).ZG162A  CK NUM               00608000
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           00608100
&ZMS               SETC  '&ZMS.&RETCODE"'                               00608200
&ZMS               SETC  '&ZMS "RETCODE"'                               00608300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00608400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00608500
.ZG162A            ANOP  ,                                              00608600
.*-------------------------------------------------------------------   00608700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00608800
                   AIF   (K'&RETCODE(1) LE 0).ZG162C  NO PARM           00608900
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00609000
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00609100
                   AIF   (N'&RETCODE GT 1).ZG162C                       00609200
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00609300
.ZG162C            ANOP  ,                                              00609400
.*-------------------------------------------------------------------   00609500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00609600
                   AIF   (K'&ZXRETCODE LE 0).ZG162R  NOT I/O            00609700
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG162R               00609800
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00609900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG162P                  00610000
                   AIF   (K'&ZCGPR GT 2).ZG162Q                         00610100
                   AIF   ('&ZCGPR' EQ '0').ZG162Q                       00610200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00610300
                   AIF   (T'&ZCGPR NE 'N').ZG162Q  INVALID REG NAME     00610400
.ZG162P            ANOP  ,                                              00610500
                   AIF   (T'&ZCGPR NE 'N').ZG162R  NON NUMERIC          00610600
                   AIF   ('&ZCGPR' LT '2').ZG162Q                       00610700
                   AIF   ('&ZCGPR' LE '12').ZG162R                      00610800
.ZG162Q            ANOP  ,                                              00610900
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           00611000
&ZMS               SETC  '&ZMS.&RETCODE"'                               00611100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00611200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00611300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00611400
.ZG162R            ANOP  ,                                              00611500
.*----------------------------------------------------------------***   00611600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00611700
                   AIF   (N'&RSNCODE LE 1).ZG165A  CK NUM               00611800
&ZMS               SETC  '"RSNCODE='            *KPOSA* MNOTE           00611900
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00612000
&ZMS               SETC  '&ZMS "RSNCODE"'                               00612100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00612200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00612300
.ZG165A            ANOP  ,                                              00612400
.*-------------------------------------------------------------------   00612500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00612600
                   AIF   (K'&RSNCODE(1) LE 0).ZG165C  NO PARM           00612700
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00612800
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00612900
                   AIF   (N'&RSNCODE GT 1).ZG165C                       00613000
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00613100
.ZG165C            ANOP  ,                                              00613200
.*-------------------------------------------------------------------   00613300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00613400
                   AIF   (K'&ZXRSNCODE LE 0).ZG165R  NOT I/O            00613500
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG165R               00613600
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00613700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG165P                  00613800
                   AIF   (K'&ZCGPR GT 2).ZG165Q                         00613900
                   AIF   ('&ZCGPR' EQ '0').ZG165Q                       00614000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00614100
                   AIF   (T'&ZCGPR NE 'N').ZG165Q  INVALID REG NAME     00614200
.ZG165P            ANOP  ,                                              00614300
                   AIF   (T'&ZCGPR NE 'N').ZG165R  NON NUMERIC          00614400
                   AIF   ('&ZCGPR' LT '2').ZG165Q                       00614500
                   AIF   ('&ZCGPR' LE '12').ZG165R                      00614600
.ZG165Q            ANOP  ,                                              00614700
&ZMS               SETC  '"RSNCODE='            *KGPRA* MNOTE           00614800
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00614900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00615000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00615100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00615200
.ZG165R            ANOP  ,                                              00615300
.******************************************************************     00615400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00615500
.******************************************************************     00615600
                   ACTR  10000                                          00615700
.*----------------------------------------------------------------***   00615800
.***AH.P02 EXTRA POSITIONALS                                            00615900
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00616000
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00616100
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00616200
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00616300
.ZGLISTX1          ANOP  ,                                              00616400
&ZCVAL             SETC  ''          ERROR FIELD                        00616500
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00616600
.ZGLIST2           ANOP  ,                                              00616700
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00616800
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00616900
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00617000
                   AGO   .ZGLIST2                                       00617100
.*                                                                      00617200
.ZGLIST3           ANOP  ,                                              00617300
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00617400
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       00617500
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00617600
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00617700
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00617800
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00617900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00618000
.ZGLISTX           ANOP  ,                                              00618100
&ZASYSLNDX         SETA  0                                              00618200
.*-------------------------------------------------------------------   00618300
.***AG.MF04 MF=(SLE)                                                    00618400
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00618500
.*******************************************************************    00618600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00618700
.*******************************************************************    00618800
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00618900
.*******************************************************************    00619000
.***AE.01  START OF IXCMSGO MACRO CODE                                  00619100
.*******************************************************************    00619200
                   LCLC  &M0M0001                 NAME                  00619300
&M0M0001           SETC  '&XLABEL'                SET NAME              00619400
                   AIF   (K'&XLABEL NE 0).XLAB2                         00619500
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00619600
.*                                                                      00619700
.XLAB2             ANOP  ,                                              00619800
                   AIF   ('&XMF' EQ 'L').XLAB3                          00619900
&M0M0001 DS    0H                             IXCMSGO-3                 00620000
.XLAB3             ANOP  ,                                              00620100
.*******************************************************************    00620200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00620300
.*******************************************************************    00620400
              PUSH  PRINT                                               00620500
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00620600
                   PRINT OFF         ++ PR01                            00620700
                   AGO   .ZPRNTXX                                       00620800
.ZPRINTX           PRINT ON                                             00620900
.ZPRNTXX           ANOP  ,                                              00621000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00621100
         AIF   ('&LINKAGE' EQ '').NOLINKAGE                        @L4A 00621200
                                                                        00621300
&ZMS     SETC  'LINKAGE MAY NOT BE SPECIFIED'                      @L4A 00621400
         MNOTE 8,'&ZMS'                                            @L4A 00621500
         MEXIT                                                     @L4A 00621600
.NOLINKAGE ANOP                                                    @L4A 00621700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00621800
.********************************************************************   00621900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00622000
.********************************************************************   00622100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00622200
                      LCLA  &ZOPN1         INVOCATION INDEX             00622300
                      LCLC  &ZOPL(4095)    LABEL                        00622400
                      LCLC  &ZOPO(4095)    OPERATION                    00622500
                      LCLC  &ZOPV(4095)    VALUE                        00622600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00622700
.*                                                                      00622800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00622900
.******************************************************************     00623000
.***AL.L10 IXCMSGO FMT=LIST MF=S|L PARAMETERS                           00623100
.******************************************************************     00623200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00623300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00623400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00623500
&XMFATTR              SETC  '0D'                                        00623600
.*                                                                      00623700
&ZOPN                 SETA  &ZOPN+1                                     00623800
&ZOPL(&ZOPN)          SETC  ' '                                         00623900
&ZOPO(&ZOPN)          SETC  'B'                                         00624000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00624100
&ZOPD(&ZOPN)          SETC  '++ IXCMSGO ARG PARMS'                      00624200
.*                                                                      00624300
&ZOPN                 SETA  &ZOPN+1                                     00624400
&ZOPL(&ZOPN)          SETC  ' '                                         00624500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00624600
&ZOPV(&ZOPN)          SETC  '1'                                         00624700
&ZOPD(&ZOPN)          SETC  ' '                                         00624800
.*                                                                      00624900
.ZLMFSL2              ANOP  ,                                           00625000
.*-------------------------------------------------------------------   00625100
.***AM.L00  IXCMSGO FMT=LIST name                                       00625200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00625300
&ZOPN                 SETA &ZOPN+1                                      00625400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00625500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00625600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00625700
&ZOPD(&ZOPN)          SETC '++ IXCMSGO NAME'                            00625800
.ZLMFSL2M             ANOP  ,                                           00625900
.*-------------------------------------------------------------------   00626000
.***AM.L01  IXCMSGO FMT=LIST PARAMETERS                                 00626100
&ZOPN                 SETA &ZOPN+1                                      00626200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00626300
&ZOPO(&ZOPN)          SETC 'DS'                                         00626400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00626500
&ZOPD(&ZOPN)          SETC '++ IXCMSGO PARM LIST'                       00626600
.*-------------------------------------------------------------------   00626700
.***AM.L02 XVERSION XL1                                                 00626800
&ZOPN                 SETA &ZOPN+1                                      00626900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00627000
&ZOPO(&ZOPN)          SETC 'DS'                                         00627100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00627200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00627300
.*-------------------------------------------------------------------   00627400
.***AM.L03 XKEYUSED1 BL.8                                               00627500
&ZOPN                 SETA &ZOPN+1                                      00627600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED1'                        00627700
&ZOPO(&ZOPN)          SETC 'DS'                                         00627800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00627900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00628000
.*                                                                      00628100
&ZOPN                 SETA  &ZOPN+1                                     00628200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MULTIPART_MSG'                   00628300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00628400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00628500
&ZOPD(&ZOPN)          SETC  '++ XMULTIPART.'                            00628600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00628700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00628800
.*                                                                      00628900
&ZOPN                 SETA  &ZOPN+1                                     00629000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ELEMENTS_QUEUED'                 00629100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00629200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00629300
&ZOPD(&ZOPN)          SETC  '++ XELEMFORM.'                             00629400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUEUE'                        00629500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00629600
.*                                                                      00629700
&ZOPN                 SETA  &ZOPN+1                                     00629800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGSTGKEY'               00629900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00630000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00630100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00630200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGSTGKEY'                    00630300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00630400
.*                                                                      00630500
&ZOPN                 SETA  &ZOPN+1                                     00630600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTPTROFF'              00630700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00630800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00630900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00631000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTPTROFF'                   00631100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00631200
.*                                                                      00631300
&ZOPN                 SETA  &ZOPN+1                                     00631400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETTBL'             00631500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00631600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00631700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00631800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETTBL'                  00631900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00632000
.*                                                                      00632100
&ZOPN                 SETA  &ZOPN+1                                     00632200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETOFF'             00632300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00632400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00632500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00632600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETOFF'                  00632700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00632800
.*                                                                      00632900
&ZOPN                 SETA  &ZOPN+1                                     00633000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENTBL'              00633100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00633200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00633300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00633400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENTBL'                   00633500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00633600
.*                                                                      00633700
&ZOPN                 SETA  &ZOPN+1                                     00633800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENOFF'              00633900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00634000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00634100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00634200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENOFF'                   00634300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00634400
.*-------------------------------------------------------------------   00634500
.***AM.L03 XKEYUSED2 BL.8                                               00634600
&ZOPN                 SETA &ZOPN+1                                      00634700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED2'                        00634800
&ZOPO(&ZOPN)          SETC 'DS'                                         00634900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00635000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00635100
.*                                                                      00635200
&ZOPN                 SETA  &ZOPN+1                                     00635300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_#MSGPARTS'               00635400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00635500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00635600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00635700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).#MSGPARTS'                    00635800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00635900
.*                                                                      00636000
&ZOPN                 SETA  &ZOPN+1                                     00636100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SUMPARTLENS'                     00636200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00636300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00636400
&ZOPD(&ZOPN)          SETC  '++ XMSGLEN.'                               00636500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMPARTLENS'                  00636600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00636700
.*-------------------------------------------------------------------   00636800
.***AM.L09  XMSGSTGKEY BL.8                                             00636900
&ZOPN                 SETA &ZOPN+1                                      00637000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGSTGKEY'                       00637100
&ZOPO(&ZOPN)          SETC 'DS'                                         00637200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00637300
&ZOPD(&ZOPN)          SETC '++ &ZXMSGSTGKEY  XMSGSTGKEY'                00637400
.*-------------------------------------------------------------------   00637500
.***AM.L09  XMEMTOKEN BL.64                                             00637600
&ZOPN                 SETA &ZOPN+1                                      00637700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMTOKEN'                        00637800
&ZOPO(&ZOPN)          SETC 'DS'                                         00637900
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00638000
&ZOPD(&ZOPN)          SETC '++ &ZXMEMTOKEN  XMEMTOKEN'                  00638100
.*-------------------------------------------------------------------   00638200
.***AM.L09 ADDR XMSGBUF A                                               00638300
&ZOPN                 SETA &ZOPN+1                                      00638400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ADDR'                     00638500
&ZOPO(&ZOPN)          SETC 'DS'                                         00638600
&ZOPV(&ZOPN)          SETC 'A'                                          00638700
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ADDR XMSGBUF'                  00638800
.*-------------------------------------------------------------------   00638900
.***AM.L09 ALET XMSGBUF F                                               00639000
&ZOPN                 SETA &ZOPN+1                                      00639100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ALET'                     00639200
&ZOPO(&ZOPN)          SETC 'DS'                                         00639300
&ZOPV(&ZOPN)          SETC 'F'                                          00639400
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ALET XMSGBUF'                  00639500
.*-------------------------------------------------------------------   00639600
.***AM.L09  XMSGLEN F                                                   00639700
&ZOPN                 SETA &ZOPN+1                                      00639800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGLEN'                          00639900
&ZOPO(&ZOPN)          SETC 'DS'                                         00640000
&ZOPV(&ZOPN)          SETC 'F'                                          00640100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGLEN  XMSGLEN'                      00640200
.*-------------------------------------------------------------------   00640300
.***AM.L09  XTARGET BL.64                                               00640400
&ZOPN                 SETA &ZOPN+1                                      00640500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGET'                          00640600
&ZOPO(&ZOPN)          SETC 'DS'                                         00640700
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00640800
&ZOPD(&ZOPN)          SETC '++ &ZXTARGET  XTARGET'                      00640900
.*-------------------------------------------------------------------   00641000
.***AM.L09 ADDR XMSGCNTL A                                              00641100
&ZOPN                 SETA &ZOPN+1                                      00641200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGCNTL_ADDR'                    00641300
&ZOPO(&ZOPN)          SETC 'DS'                                         00641400
&ZOPV(&ZOPN)          SETC 'A'                                          00641500
&ZOPD(&ZOPN)          SETC '++ &ZXMSGCNTL ADDR XMSGCNTL'                00641600
.*-------------------------------------------------------------------   00641700
.***AM.L09 ALET XMSGCNTL F                                              00641800
&ZOPN                 SETA &ZOPN+1                                      00641900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGCNTL_ALET'                    00642000
&ZOPO(&ZOPN)          SETC 'DS'                                         00642100
&ZOPV(&ZOPN)          SETC 'F'                                          00642200
&ZOPD(&ZOPN)          SETC '++ &ZXMSGCNTL ALET XMSGCNTL'                00642300
.*-------------------------------------------------------------------   00642400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00642500
                      AIF  (&XPLISTVER GE 1).ZL22LA                     00642600
                      AIF  ('&ZENDBASEPL' NE '').ZL22LA                 00642700
&ZENDBASEPL           SETC 'YES'                                        00642800
&ZOPN                 SETA &ZOPN+1                                      00642900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00643000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00643100
&ZOPV(&ZOPN)          SETC '*'                                          00643200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00643300
.ZL22LA               ANOP  ,                                           00643400
.*-------------------------------------------------------------------   00643500
.***AM.LVER1                                                            00643600
                      AIF  (&XPLISTVER LT 1).ZL22L                      00643700
.*-------------------------------------------------------------------   00643800
.*-------------------------------------------------------------------   00643900
.***AM.L09  XRSV0003 CL2                                                00644000
&ZOPN                 SETA &ZOPN+1                                      00644100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0003'                         00644200
&ZOPO(&ZOPN)          SETC 'DS'                                         00644300
&ZOPV(&ZOPN)          SETC 'CL2'                                        00644400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0003'                      00644500
.*-------------------------------------------------------------------   00644600
.***AM.LVER2                                                            00644700
.ZL22L                ANOP  ,                                           00644800
.*-------------------------------------------------------------------   00644900
.*-------------------------------------------------------------------   00645000
.***AM.LVER1                                                            00645100
                      AIF  (&XPLISTVER LT 1).ZL23L                      00645200
.*-------------------------------------------------------------------   00645300
.*-------------------------------------------------------------------   00645400
.***AM.L03 XKEYUSED3 BL.8                                               00645500
&ZOPN                 SETA &ZOPN+1                                      00645600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED3'                        00645700
&ZOPO(&ZOPN)          SETC 'DS'                                         00645800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00645900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00646000
.*-------------------------------------------------------------------   00646100
.***AM.LVER2                                                            00646200
.ZL23L                ANOP  ,                                           00646300
.*-------------------------------------------------------------------   00646400
.*-------------------------------------------------------------------   00646500
.***AM.LVER1                                                            00646600
                      AIF  (&XPLISTVER LT 1).ZL24L                      00646700
.*-------------------------------------------------------------------   00646800
.*                                                                      00646900
&ZOPN                 SETA  &ZOPN+1                                     00647000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSENDTO_GROUP'                   00647100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00647200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00647300
&ZOPD(&ZOPN)          SETC  '++ XSENDTO.'                               00647400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GROUP'                        00647500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00647600
.*-------------------------------------------------------------------   00647700
.***AM.LVER2                                                            00647800
.ZL24L                ANOP  ,                                           00647900
.*-------------------------------------------------------------------   00648000
.*-------------------------------------------------------------------   00648100
.***AM.LVER1                                                            00648200
                      AIF  (&XPLISTVER LT 1).ZL25L                      00648300
.*-------------------------------------------------------------------   00648400
.*                                                                      00648500
&ZOPN                 SETA  &ZOPN+1                                     00648600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSENDTO_ORIGINATOR'              00648700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00648800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00648900
&ZOPD(&ZOPN)          SETC  '++ XSENDTO.'                               00649000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ORIGINATOR'                   00649100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00649200
.*-------------------------------------------------------------------   00649300
.***AM.LVER2                                                            00649400
.ZL25L                ANOP  ,                                           00649500
.*-------------------------------------------------------------------   00649600
.*-------------------------------------------------------------------   00649700
.***AM.LVER1                                                            00649800
                      AIF  (&XPLISTVER LT 1).ZL26L                      00649900
.*-------------------------------------------------------------------   00650000
.*                                                                      00650100
&ZOPN                 SETA  &ZOPN+1                                     00650200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMEMBERS_TABLE'                  00650300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00650400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00650500
&ZOPD(&ZOPN)          SETC  '++ XMEMBERS.'                              00650600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TABLE'                        00650700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00650800
.*-------------------------------------------------------------------   00650900
.***AM.LVER2                                                            00651000
.ZL26L                ANOP  ,                                           00651100
.*-------------------------------------------------------------------   00651200
.*-------------------------------------------------------------------   00651300
.***AM.LVER1                                                            00651400
                      AIF  (&XPLISTVER LT 1).ZL27L                      00651500
.*-------------------------------------------------------------------   00651600
.*                                                                      00651700
&ZOPN                 SETA  &ZOPN+1                                     00651800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._NOTIFY_ONLYFAIL'                 00651900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00652000
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00652100
&ZOPD(&ZOPN)          SETC  '++ XNOTIFYIF.'                             00652200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FAILED'                       00652300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00652400
.*-------------------------------------------------------------------   00652500
.***AM.LVER2                                                            00652600
.ZL27L                ANOP  ,                                           00652700
.*-------------------------------------------------------------------   00652800
.*-------------------------------------------------------------------   00652900
.***AM.LVER1                                                            00653000
                      AIF  (&XPLISTVER LT 1).ZL28L                      00653100
.*-------------------------------------------------------------------   00653200
.*                                                                      00653300
&ZOPN                 SETA  &ZOPN+1                                     00653400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XNOTIFYBY_EXIT'                  00653500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00653600
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00653700
&ZOPD(&ZOPN)          SETC  '++ XNOTIFYBY.'                             00653800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXIT'                         00653900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00654000
.*-------------------------------------------------------------------   00654100
.***AM.LVER2                                                            00654200
.ZL28L                ANOP  ,                                           00654300
.*-------------------------------------------------------------------   00654400
.*-------------------------------------------------------------------   00654500
.***AM.LVER1                                                            00654600
                      AIF  (&XPLISTVER LT 1).ZL29L                      00654700
.*-------------------------------------------------------------------   00654800
.*-------------------------------------------------------------------   00654900
.***AM.L03 XKEYUSED4 BL.8                                               00655000
&ZOPN                 SETA &ZOPN+1                                      00655100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED4'                        00655200
&ZOPO(&ZOPN)          SETC 'DS'                                         00655300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00655400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00655500
.*-------------------------------------------------------------------   00655600
.***AM.LVER2                                                            00655700
.ZL29L                ANOP  ,                                           00655800
.*-------------------------------------------------------------------   00655900
.*-------------------------------------------------------------------   00656000
.***AM.LVER1                                                            00656100
                      AIF  (&XPLISTVER LT 1).ZL30L                      00656200
.*-------------------------------------------------------------------   00656300
.*                                                                      00656400
&ZOPN                 SETA  &ZOPN+1                                     00656500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TIMEOUT'                 00656600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00656700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00656800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00656900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TIMEOUT'                      00657000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00657100
.*-------------------------------------------------------------------   00657200
.***AM.LVER2                                                            00657300
.ZL30L                ANOP  ,                                           00657400
.*-------------------------------------------------------------------   00657500
.*-------------------------------------------------------------------   00657600
.***AM.LVER1                                                            00657700
                      AIF  (&XPLISTVER LT 1).ZL31L                      00657800
.*-------------------------------------------------------------------   00657900
.*                                                                      00658000
&ZOPN                 SETA  &ZOPN+1                                     00658100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RETMSGOTOKEN'            00658200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00658300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00658400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00658500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RETMSGOTOKEN'                 00658600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00658700
.*-------------------------------------------------------------------   00658800
.***AM.LVER2                                                            00658900
.ZL31L                ANOP  ,                                           00659000
.*-------------------------------------------------------------------   00659100
.*-------------------------------------------------------------------   00659200
.***AM.LVER1                                                            00659300
                      AIF  (&XPLISTVER LT 1).ZL32L                      00659400
.*-------------------------------------------------------------------   00659500
.*                                                                      00659600
&ZOPN                 SETA  &ZOPN+1                                     00659700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XGETRESPONSE_YES'                00659800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00659900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00660000
&ZOPD(&ZOPN)          SETC  '++ XGETRESPONSE.'                          00660100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00660200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00660300
.*-------------------------------------------------------------------   00660400
.***AM.LVER2                                                            00660500
.ZL32L                ANOP  ,                                           00660600
.*-------------------------------------------------------------------   00660700
.*-------------------------------------------------------------------   00660800
.***AM.LVER1                                                            00660900
                      AIF  (&XPLISTVER LT 1).ZL33L                      00661000
.*-------------------------------------------------------------------   00661100
.*                                                                      00661200
&ZOPN                 SETA  &ZOPN+1                                     00661300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDELIVERMSG_ORDERED'             00661400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00661500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00661600
&ZOPD(&ZOPN)          SETC  '++ XDELIVERMSG.'                           00661700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ORDERED'                      00661800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00661900
.*-------------------------------------------------------------------   00662000
.***AM.LVER2                                                            00662100
.ZL33L                ANOP  ,                                           00662200
.*-------------------------------------------------------------------   00662300
.*-------------------------------------------------------------------   00662400
.***AM.LVER1                                                            00662500
                      AIF  (&XPLISTVER LT 1).ZL34L                      00662600
.*-------------------------------------------------------------------   00662700
.*                                                                      00662800
&ZOPN                 SETA  &ZOPN+1                                     00662900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ASYNCMSGACCESS'                  00663000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00663100
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00663200
&ZOPD(&ZOPN)          SETC  '++ XMSGACCESS.'                            00663300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNC'                        00663400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00663500
.*-------------------------------------------------------------------   00663600
.***AM.LVER2                                                            00663700
.ZL34L                ANOP  ,                                           00663800
.*-------------------------------------------------------------------   00663900
.*-------------------------------------------------------------------   00664000
.***AM.LVER1                                                            00664100
                      AIF  (&XPLISTVER LT 1).ZL35L                      00664200
.*-------------------------------------------------------------------   00664300
.*-------------------------------------------------------------------   00664400
.***AM.L09  XPART# F                                                    00664500
&ZOPN                 SETA &ZOPN+1                                      00664600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPART#'                           00664700
&ZOPO(&ZOPN)          SETC 'DS'                                         00664800
&ZOPV(&ZOPN)          SETC 'F'                                          00664900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XPART#'                     00665000
.*-------------------------------------------------------------------   00665100
.***AM.LVER2                                                            00665200
.ZL35L                ANOP  ,                                           00665300
.*-------------------------------------------------------------------   00665400
.*-------------------------------------------------------------------   00665500
.***AM.LVER1                                                            00665600
                      AIF  (&XPLISTVER LT 1).ZL36L                      00665700
.*-------------------------------------------------------------------   00665800
.*-------------------------------------------------------------------   00665900
.***AM.L09  XELEMENTPTR A                                               00666000
&ZOPN                 SETA &ZOPN+1                                      00666100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENTPTR'                      00666200
&ZOPO(&ZOPN)          SETC 'DS'                                         00666300
&ZOPV(&ZOPN)          SETC 'A'                                          00666400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XELEMENTPTR'                00666500
.*-------------------------------------------------------------------   00666600
.***AM.LVER2                                                            00666700
.ZL36L                ANOP  ,                                           00666800
.*-------------------------------------------------------------------   00666900
.*-------------------------------------------------------------------   00667000
.***AM.LVER1                                                            00667100
                      AIF  (&XPLISTVER LT 1).ZL37L                      00667200
.*-------------------------------------------------------------------   00667300
.*-------------------------------------------------------------------   00667400
.***AM.L09 ADDR XPARTLENTBL A                                           00667500
&ZOPN                 SETA &ZOPN+1                                      00667600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ADDR'                 00667700
&ZOPO(&ZOPN)          SETC 'DS'                                         00667800
&ZOPV(&ZOPN)          SETC 'A'                                          00667900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ADDR XPARTLENTBL'          00668000
.*-------------------------------------------------------------------   00668100
.***AM.LVER2                                                            00668200
.ZL37L                ANOP  ,                                           00668300
.*-------------------------------------------------------------------   00668400
.*-------------------------------------------------------------------   00668500
.***AM.LVER1                                                            00668600
                      AIF  (&XPLISTVER LT 1).ZL38L                      00668700
.*-------------------------------------------------------------------   00668800
.*-------------------------------------------------------------------   00668900
.***AM.L09 ADDR XPARTALETTBL A                                          00669000
&ZOPN                 SETA &ZOPN+1                                      00669100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ADDR'                00669200
&ZOPO(&ZOPN)          SETC 'DS'                                         00669300
&ZOPV(&ZOPN)          SETC 'A'                                          00669400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ADDR XPARTALETTBL'        00669500
.*-------------------------------------------------------------------   00669600
.***AM.LVER2                                                            00669700
.ZL38L                ANOP  ,                                           00669800
.*-------------------------------------------------------------------   00669900
.*-------------------------------------------------------------------   00670000
.***AM.LVER1                                                            00670100
                      AIF  (&XPLISTVER LT 1).ZL39L                      00670200
.*-------------------------------------------------------------------   00670300
.*-------------------------------------------------------------------   00670400
.***AM.L09 ADDR XELEMENT A                                              00670500
&ZOPN                 SETA &ZOPN+1                                      00670600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ADDR'                    00670700
&ZOPO(&ZOPN)          SETC 'DS'                                         00670800
&ZOPV(&ZOPN)          SETC 'A'                                          00670900
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ADDR XELEMENT'                00671000
.*-------------------------------------------------------------------   00671100
.***AM.LVER2                                                            00671200
.ZL39L                ANOP  ,                                           00671300
.*-------------------------------------------------------------------   00671400
.*-------------------------------------------------------------------   00671500
.***AM.LVER1                                                            00671600
                      AIF  (&XPLISTVER LT 1).ZL40L                      00671700
.*-------------------------------------------------------------------   00671800
.*-------------------------------------------------------------------   00671900
.***AM.L09 ALET XELEMENT F                                              00672000
&ZOPN                 SETA &ZOPN+1                                      00672100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ALET'                    00672200
&ZOPO(&ZOPN)          SETC 'DS'                                         00672300
&ZOPV(&ZOPN)          SETC 'F'                                          00672400
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ALET XELEMENT'                00672500
.*-------------------------------------------------------------------   00672600
.***AM.LVER2                                                            00672700
.ZL40L                ANOP  ,                                           00672800
.*-------------------------------------------------------------------   00672900
.*-------------------------------------------------------------------   00673000
.***AM.LVER1                                                            00673100
                      AIF  (&XPLISTVER LT 1).ZL41L                      00673200
.*-------------------------------------------------------------------   00673300
.*-------------------------------------------------------------------   00673400
.***AM.L09 ALET XPARTLENTBL F                                           00673500
&ZOPN                 SETA &ZOPN+1                                      00673600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ALET'                 00673700
&ZOPO(&ZOPN)          SETC 'DS'                                         00673800
&ZOPV(&ZOPN)          SETC 'F'                                          00673900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ALET XPARTLENTBL'          00674000
.*-------------------------------------------------------------------   00674100
.***AM.LVER2                                                            00674200
.ZL41L                ANOP  ,                                           00674300
.*-------------------------------------------------------------------   00674400
.*-------------------------------------------------------------------   00674500
.***AM.LVER1                                                            00674600
                      AIF  (&XPLISTVER LT 1).ZL42L                      00674700
.*-------------------------------------------------------------------   00674800
.*-------------------------------------------------------------------   00674900
.***AM.L09 ALET XPARTALETTBL F                                          00675000
&ZOPN                 SETA &ZOPN+1                                      00675100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ALET'                00675200
&ZOPO(&ZOPN)          SETC 'DS'                                         00675300
&ZOPV(&ZOPN)          SETC 'F'                                          00675400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ALET XPARTALETTBL'        00675500
.*-------------------------------------------------------------------   00675600
.***AM.LVER2                                                            00675700
.ZL42L                ANOP  ,                                           00675800
.*-------------------------------------------------------------------   00675900
.*-------------------------------------------------------------------   00676000
.***AM.LVER1                                                            00676100
                      AIF  (&XPLISTVER LT 1).ZL43L                      00676200
.*-------------------------------------------------------------------   00676300
.*-------------------------------------------------------------------   00676400
.***AM.L09  XPARTALET F                                                 00676500
&ZOPN                 SETA &ZOPN+1                                      00676600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALET'                        00676700
&ZOPO(&ZOPN)          SETC 'DS'                                         00676800
&ZOPV(&ZOPN)          SETC 'F'                                          00676900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALET  XPARTALET'                  00677000
.*-------------------------------------------------------------------   00677100
.***AM.LVER2                                                            00677200
.ZL43L                ANOP  ,                                           00677300
.*-------------------------------------------------------------------   00677400
.*-------------------------------------------------------------------   00677500
.***AM.LVER1                                                            00677600
                      AIF  (&XPLISTVER LT 1).ZL44L                      00677700
.*-------------------------------------------------------------------   00677800
.*-------------------------------------------------------------------   00677900
.***AM.L09  XPARTALETOFF F                                              00678000
&ZOPN                 SETA &ZOPN+1                                      00678100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETOFF'                     00678200
&ZOPO(&ZOPN)          SETC 'DS'                                         00678300
&ZOPV(&ZOPN)          SETC 'F'                                          00678400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETOFF  XPARTALETOFF'            00678500
.*-------------------------------------------------------------------   00678600
.***AM.LVER2                                                            00678700
.ZL44L                ANOP  ,                                           00678800
.*-------------------------------------------------------------------   00678900
.*-------------------------------------------------------------------   00679000
.***AM.LVER1                                                            00679100
                      AIF  (&XPLISTVER LT 1).ZL45L                      00679200
.*-------------------------------------------------------------------   00679300
.*-------------------------------------------------------------------   00679400
.***AM.L09  XPARTOFF F                                                  00679500
&ZOPN                 SETA &ZOPN+1                                      00679600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTOFF'                         00679700
&ZOPO(&ZOPN)          SETC 'DS'                                         00679800
&ZOPV(&ZOPN)          SETC 'F'                                          00679900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTOFF  XPARTOFF'                    00680000
.*-------------------------------------------------------------------   00680100
.***AM.LVER2                                                            00680200
.ZL45L                ANOP  ,                                           00680300
.*-------------------------------------------------------------------   00680400
.*-------------------------------------------------------------------   00680500
.***AM.LVER1                                                            00680600
                      AIF  (&XPLISTVER LT 1).ZL46L                      00680700
.*-------------------------------------------------------------------   00680800
.*-------------------------------------------------------------------   00680900
.***AM.L09  XPARTPTROFF F                                               00681000
&ZOPN                 SETA &ZOPN+1                                      00681100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTPTROFF'                      00681200
&ZOPO(&ZOPN)          SETC 'DS'                                         00681300
&ZOPV(&ZOPN)          SETC 'F'                                          00681400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTPTROFF  XPARTPTROFF'              00681500
.*-------------------------------------------------------------------   00681600
.***AM.LVER2                                                            00681700
.ZL46L                ANOP  ,                                           00681800
.*-------------------------------------------------------------------   00681900
.*-------------------------------------------------------------------   00682000
.***AM.LVER1                                                            00682100
                      AIF  (&XPLISTVER LT 1).ZL47L                      00682200
.*-------------------------------------------------------------------   00682300
.*-------------------------------------------------------------------   00682400
.***AM.L09  XPARTLEN F                                                  00682500
&ZOPN                 SETA &ZOPN+1                                      00682600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLEN'                         00682700
&ZOPO(&ZOPN)          SETC 'DS'                                         00682800
&ZOPV(&ZOPN)          SETC 'F'                                          00682900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLEN  XPARTLEN'                    00683000
.*-------------------------------------------------------------------   00683100
.***AM.LVER2                                                            00683200
.ZL47L                ANOP  ,                                           00683300
.*-------------------------------------------------------------------   00683400
.*-------------------------------------------------------------------   00683500
.***AM.LVER1                                                            00683600
                      AIF  (&XPLISTVER LT 1).ZL48L                      00683700
.*-------------------------------------------------------------------   00683800
.*-------------------------------------------------------------------   00683900
.***AM.L09  XPARTLENOFF F                                               00684000
&ZOPN                 SETA &ZOPN+1                                      00684100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENOFF'                      00684200
&ZOPO(&ZOPN)          SETC 'DS'                                         00684300
&ZOPV(&ZOPN)          SETC 'F'                                          00684400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENOFF  XPARTLENOFF'              00684500
.*-------------------------------------------------------------------   00684600
.***AM.LVER2                                                            00684700
.ZL48L                ANOP  ,                                           00684800
.*-------------------------------------------------------------------   00684900
.*-------------------------------------------------------------------   00685000
.***AM.LVER1                                                            00685100
                      AIF  (&XPLISTVER LT 1).ZL49L                      00685200
.*-------------------------------------------------------------------   00685300
.*-------------------------------------------------------------------   00685400
.***AM.L09  X#MSGPARTS F                                                00685500
&ZOPN                 SETA &ZOPN+1                                      00685600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#MSGPARTS'                       00685700
&ZOPO(&ZOPN)          SETC 'DS'                                         00685800
&ZOPV(&ZOPN)          SETC 'F'                                          00685900
&ZOPD(&ZOPN)          SETC '++ &ZX#MSGPARTS  X#MSGPARTS'                00686000
.*-------------------------------------------------------------------   00686100
.***AM.LVER2                                                            00686200
.ZL49L                ANOP  ,                                           00686300
.*-------------------------------------------------------------------   00686400
.*-------------------------------------------------------------------   00686500
.***AM.LVER1                                                            00686600
                      AIF  (&XPLISTVER LT 1).ZL50L                      00686700
.*-------------------------------------------------------------------   00686800
.*-------------------------------------------------------------------   00686900
.***AM.L09  XNEXTOFF F                                                  00687000
&ZOPN                 SETA &ZOPN+1                                      00687100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTOFF'                         00687200
&ZOPO(&ZOPN)          SETC 'DS'                                         00687300
&ZOPV(&ZOPN)          SETC 'F'                                          00687400
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTOFF  XNEXTOFF'                    00687500
.*-------------------------------------------------------------------   00687600
.***AM.LVER2                                                            00687700
.ZL50L                ANOP  ,                                           00687800
.*-------------------------------------------------------------------   00687900
.*-------------------------------------------------------------------   00688000
.***AM.LVER1                                                            00688100
                      AIF  (&XPLISTVER LT 1).ZL51L                      00688200
.*-------------------------------------------------------------------   00688300
.*-------------------------------------------------------------------   00688400
.***AM.L09  XNEXTPTROFF F                                               00688500
&ZOPN                 SETA &ZOPN+1                                      00688600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTPTROFF'                      00688700
&ZOPO(&ZOPN)          SETC 'DS'                                         00688800
&ZOPV(&ZOPN)          SETC 'F'                                          00688900
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTPTROFF  XNEXTPTROFF'              00689000
.*-------------------------------------------------------------------   00689100
.***AM.LVER2                                                            00689200
.ZL51L                ANOP  ,                                           00689300
.*-------------------------------------------------------------------   00689400
.*-------------------------------------------------------------------   00689500
.***AM.LVER1                                                            00689600
                      AIF  (&XPLISTVER LT 1).ZL52L                      00689700
.*-------------------------------------------------------------------   00689800
.*-------------------------------------------------------------------   00689900
.***AM.L09  XENDOFQUEUE A                                               00690000
&ZOPN                 SETA &ZOPN+1                                      00690100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDOFQUEUE'                      00690200
&ZOPO(&ZOPN)          SETC 'DS'                                         00690300
&ZOPV(&ZOPN)          SETC 'A'                                          00690400
&ZOPD(&ZOPN)          SETC '++ &ZXENDOFQUEUE  XENDOFQUEUE'              00690500
.*-------------------------------------------------------------------   00690600
.***AM.LVER2                                                            00690700
.ZL52L                ANOP  ,                                           00690800
.*-------------------------------------------------------------------   00690900
.*-------------------------------------------------------------------   00691000
.***AM.MLM2 SAVED LOCATION COUNTER                                      00691100
                      AIF  (&XPLISTVER GE 2).ZL53LA                     00691200
                      AIF  ('&ZENDBASEPL' NE '').ZL53LA                 00691300
&ZENDBASEPL           SETC 'YES'                                        00691400
&ZOPN                 SETA &ZOPN+1                                      00691500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00691600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00691700
&ZOPV(&ZOPN)          SETC '*'                                          00691800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00691900
.ZL53LA               ANOP  ,                                           00692000
.*-------------------------------------------------------------------   00692100
.***AM.LVER1                                                            00692200
                      AIF  (&XPLISTVER LT 2).ZL53L                      00692300
.*-------------------------------------------------------------------   00692400
.*-------------------------------------------------------------------   00692500
.***AM.L09 ADDR XTARGETS A                                              00692600
&ZOPN                 SETA &ZOPN+1                                      00692700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGETS_ADDR'                    00692800
&ZOPO(&ZOPN)          SETC 'DS'                                         00692900
&ZOPV(&ZOPN)          SETC 'A'                                          00693000
&ZOPD(&ZOPN)          SETC '++ &ZXTARGETS ADDR XTARGETS'                00693100
.*-------------------------------------------------------------------   00693200
.***AM.LVER2                                                            00693300
.ZL53L                ANOP  ,                                           00693400
.*-------------------------------------------------------------------   00693500
.*-------------------------------------------------------------------   00693600
.***AM.LVER1                                                            00693700
                      AIF  (&XPLISTVER LT 2).ZL54L                      00693800
.*-------------------------------------------------------------------   00693900
.*-------------------------------------------------------------------   00694000
.***AM.L09 ADDR XRETMSGOTOKEN A                                         00694100
&ZOPN                 SETA &ZOPN+1                                      00694200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGOTOKEN_ADDR'               00694300
&ZOPO(&ZOPN)          SETC 'DS'                                         00694400
&ZOPV(&ZOPN)          SETC 'A'                                          00694500
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGOTOKEN ADDR XRETMSGOTOKEN'      00694600
.*-------------------------------------------------------------------   00694700
.***AM.LVER2                                                            00694800
.ZL54L                ANOP  ,                                           00694900
.*-------------------------------------------------------------------   00695000
.*-------------------------------------------------------------------   00695100
.***AM.LVER1                                                            00695200
                      AIF  (&XPLISTVER LT 2).ZL55L                      00695300
.*-------------------------------------------------------------------   00695400
.*-------------------------------------------------------------------   00695500
.***AM.L09 ALET XTARGETS F                                              00695600
&ZOPN                 SETA &ZOPN+1                                      00695700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGETS_ALET'                    00695800
&ZOPO(&ZOPN)          SETC 'DS'                                         00695900
&ZOPV(&ZOPN)          SETC 'F'                                          00696000
&ZOPD(&ZOPN)          SETC '++ &ZXTARGETS ALET XTARGETS'                00696100
.*-------------------------------------------------------------------   00696200
.***AM.LVER2                                                            00696300
.ZL55L                ANOP  ,                                           00696400
.*-------------------------------------------------------------------   00696500
.*-------------------------------------------------------------------   00696600
.***AM.LVER1                                                            00696700
                      AIF  (&XPLISTVER LT 2).ZL56L                      00696800
.*-------------------------------------------------------------------   00696900
.*-------------------------------------------------------------------   00697000
.***AM.L09 ALET XRETMSGOTOKEN F                                         00697100
&ZOPN                 SETA &ZOPN+1                                      00697200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGOTOKEN_ALET'               00697300
&ZOPO(&ZOPN)          SETC 'DS'                                         00697400
&ZOPV(&ZOPN)          SETC 'F'                                          00697500
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGOTOKEN ALET XRETMSGOTOKEN'      00697600
.*-------------------------------------------------------------------   00697700
.***AM.LVER2                                                            00697800
.ZL56L                ANOP  ,                                           00697900
.*-------------------------------------------------------------------   00698000
.*-------------------------------------------------------------------   00698100
.***AM.LVER1                                                            00698200
                      AIF  (&XPLISTVER LT 2).ZL57L                      00698300
.*-------------------------------------------------------------------   00698400
.*-------------------------------------------------------------------   00698500
.***AM.L09  XNOTIFYEXIT A                                               00698600
&ZOPN                 SETA &ZOPN+1                                      00698700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNOTIFYEXIT'                      00698800
&ZOPO(&ZOPN)          SETC 'DS'                                         00698900
&ZOPV(&ZOPN)          SETC 'A'                                          00699000
&ZOPD(&ZOPN)          SETC '++ &ZXNOTIFYEXIT  XNOTIFYEXIT'              00699100
.*-------------------------------------------------------------------   00699200
.***AM.LVER2                                                            00699300
.ZL57L                ANOP  ,                                           00699400
.*-------------------------------------------------------------------   00699500
.*-------------------------------------------------------------------   00699600
.***AM.LVER1                                                            00699700
                      AIF  (&XPLISTVER LT 2).ZL58L                      00699800
.*-------------------------------------------------------------------   00699900
.*-------------------------------------------------------------------   00700000
.***AM.L09  XSTREAMID F                                                 00700100
&ZOPN                 SETA &ZOPN+1                                      00700200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTREAMID'                        00700300
&ZOPO(&ZOPN)          SETC 'DS'                                         00700400
&ZOPV(&ZOPN)          SETC 'F'                                          00700500
&ZOPD(&ZOPN)          SETC '++ &ZXSTREAMID  XSTREAMID'                  00700600
.*-------------------------------------------------------------------   00700700
.***AM.LVER2                                                            00700800
.ZL58L                ANOP  ,                                           00700900
.*-------------------------------------------------------------------   00701000
.*-------------------------------------------------------------------   00701100
.***AM.LVER1                                                            00701200
                      AIF  (&XPLISTVER LT 2).ZL59L                      00701300
.*-------------------------------------------------------------------   00701400
.*-------------------------------------------------------------------   00701500
.***AM.L09  X#TARGETS F                                                 00701600
&ZOPN                 SETA &ZOPN+1                                      00701700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#TARGETS'                        00701800
&ZOPO(&ZOPN)          SETC 'DS'                                         00701900
&ZOPV(&ZOPN)          SETC 'F'                                          00702000
&ZOPD(&ZOPN)          SETC '++ &ZX#TARGETS  X#TARGETS'                  00702100
.*-------------------------------------------------------------------   00702200
.***AM.LVER2                                                            00702300
.ZL59L                ANOP  ,                                           00702400
.*-------------------------------------------------------------------   00702500
.*-------------------------------------------------------------------   00702600
.***AM.LVER1                                                            00702700
                      AIF  (&XPLISTVER LT 2).ZL60L                      00702800
.*-------------------------------------------------------------------   00702900
.*-------------------------------------------------------------------   00703000
.***AM.L09  XNEXTTARGETOFF F                                            00703100
&ZOPN                 SETA &ZOPN+1                                      00703200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTTARGETOFF'                   00703300
&ZOPO(&ZOPN)          SETC 'DS'                                         00703400
&ZOPV(&ZOPN)          SETC 'F'                                          00703500
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTTARGETOFF  XNEXTTARGETOFF'        00703600
.*-------------------------------------------------------------------   00703700
.***AM.LVER2                                                            00703800
.ZL60L                ANOP  ,                                           00703900
.*-------------------------------------------------------------------   00704000
.*-------------------------------------------------------------------   00704100
.***AM.LVER1                                                            00704200
                      AIF  (&XPLISTVER LT 2).ZL61L                      00704300
.*-------------------------------------------------------------------   00704400
.*-------------------------------------------------------------------   00704500
.***AM.L09  XRESPONSEID CL24                                            00704600
&ZOPN                 SETA &ZOPN+1                                      00704700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESPONSEID'                      00704800
&ZOPO(&ZOPN)          SETC 'DS'                                         00704900
&ZOPV(&ZOPN)          SETC 'CL24'                                       00705000
&ZOPD(&ZOPN)          SETC '++ &ZXRESPONSEID  XRESPONSEID'              00705100
.*-------------------------------------------------------------------   00705200
.***AM.LVER2                                                            00705300
.ZL61L                ANOP  ,                                           00705400
.*-------------------------------------------------------------------   00705500
.*-------------------------------------------------------------------   00705600
.***AM.LVER1                                                            00705700
                      AIF  (&XPLISTVER LT 2).ZL62L                      00705800
.*-------------------------------------------------------------------   00705900
.*-------------------------------------------------------------------   00706000
.***AM.L09  XUSERDATA CL8                                               00706100
&ZOPN                 SETA &ZOPN+1                                      00706200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00706300
&ZOPO(&ZOPN)          SETC 'DS'                                         00706400
&ZOPV(&ZOPN)          SETC 'CL8'                                        00706500
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA  XUSERDATA'                  00706600
.*-------------------------------------------------------------------   00706700
.***AM.LVER2                                                            00706800
.ZL62L                ANOP  ,                                           00706900
.*-------------------------------------------------------------------   00707000
.*-------------------------------------------------------------------   00707100
.***AM.LVER1                                                            00707200
                      AIF  (&XPLISTVER LT 2).ZL63L                      00707300
.*-------------------------------------------------------------------   00707400
.*-------------------------------------------------------------------   00707500
.***AM.L09  XTIMEOUT XL2                                                00707600
&ZOPN                 SETA &ZOPN+1                                      00707700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTIMEOUT'                         00707800
&ZOPO(&ZOPN)          SETC 'DS'                                         00707900
&ZOPV(&ZOPN)          SETC 'XL2'                                        00708000
&ZOPD(&ZOPN)          SETC '++ &ZXTIMEOUT  XTIMEOUT'                    00708100
.*-------------------------------------------------------------------   00708200
.***AM.LVER2                                                            00708300
.ZL63L                ANOP  ,                                           00708400
.*-------------------------------------------------------------------   00708500
.*-------------------------------------------------------------------   00708600
.***AM.LVER1                                                            00708700
                      AIF  (&XPLISTVER LT 2).ZL64L                      00708800
.*-------------------------------------------------------------------   00708900
.*-------------------------------------------------------------------   00709000
.***AM.L09  XRSV0004 CL2                                                00709100
&ZOPN                 SETA &ZOPN+1                                      00709200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0004'                         00709300
&ZOPO(&ZOPN)          SETC 'DS'                                         00709400
&ZOPV(&ZOPN)          SETC 'CL2'                                        00709500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0004'                      00709600
.*-------------------------------------------------------------------   00709700
.***AM.LVER2                                                            00709800
.ZL64L                ANOP  ,                                           00709900
.*-------------------------------------------------------------------   00710000
.*-------------------------------------------------------------------   00710100
.***AM.MLM2 SAVED LOCATION COUNTER                                      00710200
                      AIF  (&XPLISTVER GE 3).ZL65LA                     00710300
                      AIF  ('&ZENDBASEPL' NE '').ZL65LA                 00710400
&ZENDBASEPL           SETC 'YES'                                        00710500
&ZOPN                 SETA &ZOPN+1                                      00710600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00710700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00710800
&ZOPV(&ZOPN)          SETC '*'                                          00710900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00711000
.ZL65LA               ANOP  ,                                           00711100
.*-------------------------------------------------------------------   00711200
.***AM.LVER1                                                            00711300
                      AIF  (&XPLISTVER LT 3).ZL65L                      00711400
.*-------------------------------------------------------------------   00711500
.*-------------------------------------------------------------------   00711600
.***AM.L09  XCFDATA F                                                   00711700
&ZOPN                 SETA &ZOPN+1                                      00711800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCFDATA'                          00711900
&ZOPO(&ZOPN)          SETC 'DS'                                         00712000
&ZOPV(&ZOPN)          SETC 'F'                                          00712100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XCFDATA'                    00712200
.*-------------------------------------------------------------------   00712300
.***AM.LVER2                                                            00712400
.ZL65L                ANOP  ,                                           00712500
.*-------------------------------------------------------------------   00712600
.*-------------------------------------------------------------------   00712700
.***AM.L10 END OF IXCMSGO LIST PARAMETERS                               00712800
&ZOPN                 SETA &ZOPN+1                                      00712900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00713000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00713100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00713200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00713300
.*                                                                      00713400
&ZOPN                 SETA &ZOPN+1                                      00713500
&ZOPL(&ZOPN)          SETC ' '                                          00713600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00713700
&ZOPV(&ZOPN)          SETC '1'                                          00713800
&ZOPD(&ZOPN)          SETC ' '                                          00713900
.*-------------------------------------------------------------------   00714000
.***AL.L12 IXCMSGO FMT=LIST MF=S|L PARAMETERS                           00714100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00714200
.*                                                                      00714300
&ZOPN                 SETA  &ZOPN+1                                     00714400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00714500
&ZOPO(&ZOPN)          SETC  'DC'                                        00714600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00714700
&ZOPD(&ZOPN)          SETC  '++ IXCMSGO ARG PARMS'                      00714800
.*                                                                      00714900
.ZLMFSLX              ANOP  ,                                           00715000
.*-------------------------------------------------------------------   00715100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00715200
&ZPLLEN               SETA 40                                           00715300
.*                                                                      00715400
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00715500
&ZPLLEN               SETA 116                                          00715600
.ZLLEN2Z              ANOP  ,                                           00715700
.*                                                                      00715800
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00715900
&ZPLLEN               SETA 184                                          00716000
.ZLLEN3Z              ANOP  ,                                           00716100
.*                                                                      00716200
                      AIF  (&XPLISTVER LT 3).ZLLEN4Z                    00716300
&ZPLLEN               SETA 188                                          00716400
.ZLLEN4Z              ANOP  ,                                           00716500
.*                                                                      00716600
.******************************************************************     00716700
.***AI.L01 IXCMSGO FMT=LIST FILL IN PARAMETER AREA                      00716800
.******************************************************************     00716900
                      ACTR  10000                                       00717000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00717100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00717200
&ZCVAL                SETC  'LAE'          XAX MODE                     00717300
.ZIMFXA               ANOP ,                                            00717400
.*                                                                      00717500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00717600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00717700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00717800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00717900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00718000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00718100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00718200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00718300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00718400
&ZOPN                 SETA  &ZOPN+1                                     00718500
&ZOPL(&ZOPN)          SETC  ' '                                         00718600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00718700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00718800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00718900
                      AGO   .ZIMFNX                                     00719000
.*                                                                      00719100
.ZIMFN2               ANOP ,                                            00719200
&ZOPN                 SETA  &ZOPN+1                                     00719300
&ZOPL(&ZOPN)          SETC  ' '                                         00719400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00719500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00719600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00719700
.ZIMFNX               ANOP ,                                            00719800
.********************************************************************   00719900
.***AI.L02 IXCMSGO FMT=LIST INITIALIZE PARAMETER AREA                   00720000
.********************************************************************   00720100
.***AI.L03 MF=(SLE)                                                     00720200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00720300
.*                                                                      00720400
&ZOPN                 SETA  &ZOPN+1                                     00720500
&ZOPL(&ZOPN)          SETC  ' '                                         00720600
&ZOPO(&ZOPN)          SETC  'XC'                                        00720700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00720800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00720900
.ZIMFLX               ANOP  ,                                           00721000
.*-------------------------------------------------------------------   00721100
.***AI.L04B XVERSION XL1                                                00721200
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00721300
&ZOPN                 SETA  &ZOPN+1                                     00721400
&ZOPL(&ZOPN)          SETC  ' '                                         00721500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00721600
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00721700
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00721800
.ZIMFVZ               ANOP  ,                                           00721900
.*-------------------------------------------------------------------   00722000
.***AI.L05 XKEYUSED1 BL1                                                00722100
&ZW                   SETC  ''                                          00722200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00722300
.*-------------------------------------------------------------------   00722400
.***AI.L08 XKEYUSED1 "YES"                                              00722500
.***      BL1'1XXXXXXX'                                                 00722600
         AIF   ('&XMULTIPART' NE 'YES').ZI3A                            00722700
&ZW                   SETC  '&ZW.1'                                     00722800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00722900
                      AGO   .ZI3C                                       00723000
.*                                                                      00723100
.ZI3A                 ANOP  ,                                           00723200
&ZW                   SETC  '&ZW.0'                                     00723300
.ZI3C                 ANOP  ,                                           00723400
.*-------------------------------------------------------------------   00723500
.***AI.L08 XKEYUSED1 "QUEUE"                                            00723600
.***      BL1'X1XXXXXX'                                                 00723700
         AIF   ('&XELEMFORM' NE 'QUEUE').ZI4A                           00723800
&ZW                   SETC  '&ZW.1'                                     00723900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00724000
                      AGO   .ZI4C                                       00724100
.*                                                                      00724200
.ZI4A                 ANOP  ,                                           00724300
&ZW                   SETC  '&ZW.0'                                     00724400
.ZI4C                 ANOP  ,                                           00724500
.*-------------------------------------------------------------------   00724600
.***AI.L08 XKEYUSED1 "MSGSTGKEY"                                        00724700
.***      BL1'XX1XXXXX'                                                 00724800
         AIF   ('&MSGSTGKEY' EQ '').ZI5A                                00724900
         AIF   ('&MSGSTGKEY' EQ 'ANY').ZI5A                             00725000
&ZW                   SETC  '&ZW.1'                                     00725100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00725200
                      AGO   .ZI5C                                       00725300
.*                                                                      00725400
.ZI5A                 ANOP  ,                                           00725500
&ZW                   SETC  '&ZW.0'                                     00725600
.ZI5C                 ANOP  ,                                           00725700
.*-------------------------------------------------------------------   00725800
.***AI.L08 XKEYUSED1 "PARTPTROFF"                                       00725900
.***      BL1'XXX1XXXX'                                                 00726000
         AIF   ('&PARTPTROFF' EQ '').ZI6A                               00726100
         AIF   ('&PARTPTROFF' EQ '').ZI6A                               00726200
&ZW                   SETC  '&ZW.1'                                     00726300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00726400
                      AGO   .ZI6C                                       00726500
.*                                                                      00726600
.ZI6A                 ANOP  ,                                           00726700
&ZW                   SETC  '&ZW.0'                                     00726800
.ZI6C                 ANOP  ,                                           00726900
.*-------------------------------------------------------------------   00727000
.***AI.L08 XKEYUSED1 "PARTALETTBL"                                      00727100
.***      BL1'XXXX1XXX'                                                 00727200
         AIF   ('&PARTALETTBL' EQ '').ZI7A                              00727300
         AIF   ('&PARTALETTBL' EQ '').ZI7A                              00727400
&ZW                   SETC  '&ZW.1'                                     00727500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00727600
                      AGO   .ZI7C                                       00727700
.*                                                                      00727800
.ZI7A                 ANOP  ,                                           00727900
&ZW                   SETC  '&ZW.0'                                     00728000
.ZI7C                 ANOP  ,                                           00728100
.*-------------------------------------------------------------------   00728200
.***AI.L08 XKEYUSED1 "PARTALETOFF"                                      00728300
.***      BL1'XXXXX1XX'                                                 00728400
         AIF   ('&PARTALETOFF' EQ '').ZI8A                              00728500
         AIF   ('&PARTALETOFF' EQ '').ZI8A                              00728600
&ZW                   SETC  '&ZW.1'                                     00728700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00728800
                      AGO   .ZI8C                                       00728900
.*                                                                      00729000
.ZI8A                 ANOP  ,                                           00729100
&ZW                   SETC  '&ZW.0'                                     00729200
.ZI8C                 ANOP  ,                                           00729300
.*-------------------------------------------------------------------   00729400
.***AI.L08 XKEYUSED1 "PARTLENTBL"                                       00729500
.***      BL1'XXXXXX1X'                                                 00729600
         AIF   ('&PARTLENTBL' EQ '').ZI9A                               00729700
         AIF   ('&PARTLENTBL' EQ '').ZI9A                               00729800
&ZW                   SETC  '&ZW.1'                                     00729900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00730000
                      AGO   .ZI9C                                       00730100
.*                                                                      00730200
.ZI9A                 ANOP  ,                                           00730300
&ZW                   SETC  '&ZW.0'                                     00730400
.ZI9C                 ANOP  ,                                           00730500
.*-------------------------------------------------------------------   00730600
.***AI.L08 XKEYUSED1 "PARTLENOFF"                                       00730700
.***      BL1'XXXXXXX1'                                                 00730800
         AIF   ('&PARTLENOFF' EQ '').ZI10A                              00730900
         AIF   ('&PARTLENOFF' EQ '').ZI10A                              00731000
&ZW                   SETC  '&ZW.1'                                     00731100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00731200
                      AGO   .ZI10C                                      00731300
.*                                                                      00731400
.ZI10A                ANOP  ,                                           00731500
&ZW                   SETC  '&ZW.0'                                     00731600
.ZI10C                ANOP  ,                                           00731700
.*-------------------------------------------------------------------   00731800
.***AI.L11 XKEYUSED1 BL1                                                00731900
                      AIF   ('&ZCLNG' NE 'YES').ZI10E  ALL ZERO BITS    00732000
&ZOPN                 SETA  &ZOPN+1                                     00732100
&ZOPL(&ZOPN)          SETC  ' '                                         00732200
&ZOPO(&ZOPN)          SETC  'OI'                                        00732300
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00732400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00732500
.ZI10E                ANOP  ,                                           00732600
.*-------------------------------------------------------------------   00732700
.***AI.L05 XKEYUSED2 BL1                                                00732800
&ZW                   SETC  ''                                          00732900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00733000
.*-------------------------------------------------------------------   00733100
.***AI.L08 XKEYUSED2 "#MSGPARTS"                                        00733200
.***      BL1'1XXXXXXX'                                                 00733300
         AIF   ('&#MSGPARTS' EQ '').ZI12A                               00733400
         AIF   ('&#MSGPARTS' EQ 'ATLEASTONE').ZI12A                     00733500
&ZW                   SETC  '&ZW.1'                                     00733600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00733700
                      AGO   .ZI12C                                      00733800
.*                                                                      00733900
.ZI12A                ANOP  ,                                           00734000
&ZW                   SETC  '&ZW.0'                                     00734100
.ZI12C                ANOP  ,                                           00734200
.*-------------------------------------------------------------------   00734300
.***AI.L08 XKEYUSED2 "SUMPARTLENS"                                      00734400
.***      BL1'X1XXXXXX'                                                 00734500
         AIF   ('&XMSGLEN' NE 'SUMPARTLENS').ZI13A                      00734600
&ZW                   SETC  '&ZW.1000000'                               00734700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00734800
                      AGO   .ZI13C                                      00734900
.*                                                                      00735000
.ZI13A                ANOP  ,                                           00735100
&ZW                   SETC  '&ZW.0000000'                               00735200
.ZI13C                ANOP  ,                                           00735300
.*-------------------------------------------------------------------   00735400
.***AI.L11 XKEYUSED2 BL1                                                00735500
                      AIF   ('&ZCLNG' NE 'YES').ZI13E  ALL ZERO BITS    00735600
&ZOPN                 SETA  &ZOPN+1                                     00735700
&ZOPL(&ZOPN)          SETC  ' '                                         00735800
&ZOPO(&ZOPN)          SETC  'OI'                                        00735900
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00736000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00736100
.ZI13E                ANOP  ,                                           00736200
.*-------------------------------------------------------------------   00736300
.***AI.L18  XMSGSTGKEY XL1                                              00736400
         AIF   ('&XMSGSTGKEY' NE 'ANY').ZI14                            00736500
&ZXMSGSTGKEY          SETC  ''             RESET INPUT/OUTPUT           00736600
.ZI14                 ANOP  ,                                           00736700
.*-------------------------------------------------------------------   00736800
.***AI.L25  XMSGSTGKEY XL1                                              00736900
                      AIF   ('&ZXMSGSTGKEY' EQ '').ZI14E                00737000
                      AIF   ('&ZXMSGSTGKEY' EQ 'OUTPUT').ZI14E          00737100
&ZCGPR                SETC  '&XMSGSTGKEY'                               00737200
.*                                                                      00737300
                      AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZI14B           00737400
&ZCGPR   SETC  '0('.'&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2).')'                00737500
                      AGO   .ZI14D                                      00737600
.ZI14B                ANOP  ,                                           00737700
.*                                                                      00737800
&ZC                   SETC  '&XMSGSTGKEY'(1,1)                          00737900
                      AIF   (T'&ZC NE 'N').ZI14D                        00738000
&ZC                   SETC  '&XMSGSTGKEY'                               00738100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00738200
&ZCGPR                SETC  '=BL1''&XMSGSTGKEY'''                       00738300
.*                                                                      00738400
.ZI14D                ANOP  ,                                           00738500
.*                                                                      00738600
&ZOPN                 SETA  &ZOPN+1                                     00738700
&ZOPL(&ZOPN)          SETC  ' '                                         00738800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00738900
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00739000
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGSTGKEY XMSGSTGKEY'                00739100
.*                                                                      00739200
.ZI14E                ANOP  ,                                           00739300
.*-------------------------------------------------------------------   00739400
.***AI.L25  XMEMTOKEN XL8                                               00739500
                      AIF   ('&ZXMEMTOKEN' EQ '').ZI15E                 00739600
                      AIF   ('&ZXMEMTOKEN' EQ 'OUTPUT').ZI15E           00739700
&ZCGPR                SETC  '&XMEMTOKEN'                                00739800
.*                                                                      00739900
                      AIF   ('&XMEMTOKEN'(1,1) NE '(').ZI15B            00740000
&ZCGPR   SETC  '0('.'&XMEMTOKEN'(2,K'&XMEMTOKEN-2).')'                  00740100
                      AGO   .ZI15D                                      00740200
.ZI15B                ANOP  ,                                           00740300
.*                                                                      00740400
&ZC                   SETC  '&XMEMTOKEN'(1,1)                           00740500
                      AIF   (T'&ZC NE 'N').ZI15D                        00740600
&ZC                   SETC  '&XMEMTOKEN'                                00740700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00740800
&ZCGPR                SETC  '=BL8''&XMEMTOKEN'''                        00740900
.*                                                                      00741000
.ZI15D                ANOP  ,                                           00741100
.*                                                                      00741200
&ZOPN                 SETA  &ZOPN+1                                     00741300
&ZOPL(&ZOPN)          SETC  ' '                                         00741400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00741500
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00741600
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMTOKEN XMEMTOKEN'                  00741700
.*                                                                      00741800
.ZI15E                ANOP  ,                                           00741900
.*-------------------------------------------------------------------   00742000
.***AI.L19 ADDR XMSGBUF A                                               00742100
                      AIF   ('&ZXMSGBUF' EQ '').ZI16H                   00742200
&ZCLNG                SETC  '&XMSGBUF'                                  00742300
&ZCGPR                SETC  '14'                                        00742400
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI16F  IN GPR                   00742500
.*                                                                      00742600
&ZOPN                 SETA  &ZOPN+1                                     00742700
&ZOPL(&ZOPN)          SETC  ' '                                         00742800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00742900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00743000
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00743100
.*                                                                      00743200
                      AGO   .ZI16G                                      00743300
.*                                                                      00743400
.ZI16F                ANOP  ,                                           00743500
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00743600
.*                                                                      00743700
.ZI16G                ANOP  ,                                           00743800
.*                                                                      00743900
&ZOPN                 SETA  &ZOPN+1                                     00744000
&ZOPL(&ZOPN)          SETC  ' '                                         00744100
&ZOPO(&ZOPN)          SETC  'ST'                                        00744200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00744300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00744400
.*                                                                      00744500
.ZI16H                ANOP  ,                                           00744600
.*-------------------------------------------------------------------   00744700
.***AI.L23 ALET XMSGBUF F                                               00744800
         AIF   ('&ZXMSGBUF' EQ '').ZI17G                                00744900
         AIF   ('&SYSASCE' EQ 'P').ZI17G   SYSSTATE PRIMARY             00745000
&ZCLNG                SETC  '&XMSGBUF'                                  00745100
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI17E  IN AR                    00745200
.*                                                                      00745300
&ZCGPR                SETC  '14'                                        00745400
                      AGO   .ZI17F                                      00745500
.*                                                                      00745600
.ZI17E                ANOP  ,                                           00745700
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00745800
.*                                                                      00745900
.ZI17F                ANOP  ,                                           00746000
.*                                                                      00746100
&ZOPN                 SETA  &ZOPN+1                                     00746200
&ZOPL(&ZOPN)          SETC  ' '                                         00746300
&ZOPO(&ZOPN)          SETC  'STAM'                                      00746400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,16(1)'                       00746500
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00746600
.*                                                                      00746700
.ZI17G                ANOP  ,                                           00746800
.*-------------------------------------------------------------------   00746900
.***AI.L18  XMSGLEN F                                                   00747000
         AIF   ('&XMSGLEN' NE 'SUMPARTLENS').ZI18                       00747100
&ZXMSGLEN             SETC  ''             RESET INPUT/OUTPUT           00747200
.ZI18                 ANOP  ,                                           00747300
.*-------------------------------------------------------------------   00747400
.***AI.L25  XMSGLEN F                                                   00747500
                      AIF   ('&ZXMSGLEN' EQ '').ZI18E                   00747600
                      AIF   ('&ZXMSGLEN' EQ 'OUTPUT').ZI18E             00747700
&ZCGPR                SETC  '&XMSGLEN'                                  00747800
.*                                                                      00747900
                      AIF   ('&XMSGLEN'(1,1) NE '(').ZI18B              00748000
&ZCGPR   SETC  '0('.'&XMSGLEN'(2,K'&XMSGLEN-2).')'                      00748100
                      AGO   .ZI18D                                      00748200
.ZI18B                ANOP  ,                                           00748300
.*                                                                      00748400
&ZC                   SETC  '&XMSGLEN'(1,1)                             00748500
                      AIF   (T'&ZC NE 'N').ZI18D                        00748600
&ZC                   SETC  '&XMSGLEN'                                  00748700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI18D               00748800
&ZCGPR                SETC  '=FL4''&XMSGLEN'''                          00748900
.*                                                                      00749000
.ZI18D                ANOP  ,                                           00749100
.*                                                                      00749200
&ZOPN                 SETA  &ZOPN+1                                     00749300
&ZOPL(&ZOPN)          SETC  ' '                                         00749400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00749500
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00749600
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGLEN XMSGLEN'                      00749700
.*                                                                      00749800
.ZI18E                ANOP  ,                                           00749900
.*-------------------------------------------------------------------   00750000
.***AI.L25  XTARGET XL8                                                 00750100
                      AIF   ('&ZXTARGET' EQ '').ZI19E                   00750200
                      AIF   ('&ZXTARGET' EQ 'OUTPUT').ZI19E             00750300
&ZCGPR                SETC  '&XTARGET'                                  00750400
.*                                                                      00750500
                      AIF   ('&XTARGET'(1,1) NE '(').ZI19B              00750600
&ZCGPR   SETC  '0('.'&XTARGET'(2,K'&XTARGET-2).')'                      00750700
                      AGO   .ZI19D                                      00750800
.ZI19B                ANOP  ,                                           00750900
.*                                                                      00751000
&ZC                   SETC  '&XTARGET'(1,1)                             00751100
                      AIF   (T'&ZC NE 'N').ZI19D                        00751200
&ZC                   SETC  '&XTARGET'                                  00751300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI19D               00751400
&ZCGPR                SETC  '=BL8''&XTARGET'''                          00751500
.*                                                                      00751600
.ZI19D                ANOP  ,                                           00751700
.*                                                                      00751800
&ZOPN                 SETA  &ZOPN+1                                     00751900
&ZOPL(&ZOPN)          SETC  ' '                                         00752000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00752100
&ZOPV(&ZOPN)          SETC  '24(8,1),&ZCGPR'                            00752200
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGET XTARGET'                      00752300
.*                                                                      00752400
.ZI19E                ANOP  ,                                           00752500
.*-------------------------------------------------------------------   00752600
.***AI.L18 ADDR XMSGCNTL A                                              00752700
         AIF   ('&XMSGCNTL' NE 'ALLZERO').ZI20                          00752800
&ZXMSGCNTL            SETC  ''             RESET INPUT/OUTPUT           00752900
.ZI20                 ANOP  ,                                           00753000
.*-------------------------------------------------------------------   00753100
.***AI.L19 ADDR XMSGCNTL A                                              00753200
                      AIF   ('&ZXMSGCNTL' EQ '').ZI20H                  00753300
&ZCLNG                SETC  '&XMSGCNTL'                                 00753400
&ZCGPR                SETC  '14'                                        00753500
         AIF   ('&XMSGCNTL'(1,1) EQ '(').ZI20F  IN GPR                  00753600
.*                                                                      00753700
&ZOPN                 SETA  &ZOPN+1                                     00753800
&ZOPL(&ZOPN)          SETC  ' '                                         00753900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00754000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00754100
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00754200
.*                                                                      00754300
                      AGO   .ZI20G                                      00754400
.*                                                                      00754500
.ZI20F                ANOP  ,                                           00754600
&ZCGPR   SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                             00754700
.*                                                                      00754800
.ZI20G                ANOP  ,                                           00754900
.*                                                                      00755000
&ZOPN                 SETA  &ZOPN+1                                     00755100
&ZOPL(&ZOPN)          SETC  ' '                                         00755200
&ZOPO(&ZOPN)          SETC  'ST'                                        00755300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00755400
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00755500
.*                                                                      00755600
.ZI20H                ANOP  ,                                           00755700
.*-------------------------------------------------------------------   00755800
.***AI.L18 ALET XMSGCNTL F                                              00755900
         AIF   ('&XMSGCNTL' NE 'ALLZERO').ZI21                          00756000
&ZXMSGCNTL            SETC  ''             RESET INPUT/OUTPUT           00756100
.ZI21                 ANOP  ,                                           00756200
.*-------------------------------------------------------------------   00756300
.***AI.L23 ALET XMSGCNTL F                                              00756400
         AIF   ('&ZXMSGCNTL' EQ '').ZI21G                               00756500
         AIF   ('&SYSASCE' EQ 'P').ZI21G   SYSSTATE PRIMARY             00756600
&ZCLNG                SETC  '&XMSGCNTL'                                 00756700
         AIF   ('&XMSGCNTL'(1,1) EQ '(').ZI21E  IN AR                   00756800
.*                                                                      00756900
&ZCGPR                SETC  '14'                                        00757000
                      AGO   .ZI21F                                      00757100
.*                                                                      00757200
.ZI21E                ANOP  ,                                           00757300
&ZCGPR   SETC  '&XMSGCNTL'(2,K'&XMSGCNTL-2)                             00757400
.*                                                                      00757500
.ZI21F                ANOP  ,                                           00757600
.*                                                                      00757700
&ZOPN                 SETA  &ZOPN+1                                     00757800
&ZOPL(&ZOPN)          SETC  ' '                                         00757900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00758000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,36(1)'                       00758100
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGCNTL XMSGCNTL'                    00758200
.*                                                                      00758300
.ZI21G                ANOP  ,                                           00758400
.*-------------------------------------------------------------------   00758500
.***AI.LVER01                                                           00758600
                      AIF  (&XPLISTVER LT 1).ZI22Z                      00758700
.*-------------------------------------------------------------------   00758800
.***AI.LVER02                                                           00758900
.ZI22Z                ANOP  ,                                           00759000
.*-------------------------------------------------------------------   00759100
.***AI.LVER01                                                           00759200
                      AIF  (&XPLISTVER LT 1).ZI23Z                      00759300
.*-------------------------------------------------------------------   00759400
.***AI.L05 XKEYUSED3 BL1                                                00759500
&ZW                   SETC  ''                                          00759600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00759700
.*-------------------------------------------------------------------   00759800
.***AI.LVER02                                                           00759900
.ZI23Z                ANOP  ,                                           00760000
.*-------------------------------------------------------------------   00760100
.***AI.LVER01                                                           00760200
                      AIF  (&XPLISTVER LT 1).ZI24Z                      00760300
.*-------------------------------------------------------------------   00760400
.***AI.L08 XKEYUSED3 "GROUP"                                            00760500
.***      BL1'1XXXXXXX'                                                 00760600
         AIF   ('&XSENDTO' NE 'GROUP').ZI24A                            00760700
&ZW                   SETC  '&ZW.1'                                     00760800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00760900
                      AGO   .ZI24C                                      00761000
.*                                                                      00761100
.ZI24A                ANOP  ,                                           00761200
&ZW                   SETC  '&ZW.0'                                     00761300
.ZI24C                ANOP  ,                                           00761400
.*-------------------------------------------------------------------   00761500
.***AI.LVER02                                                           00761600
.ZI24Z                ANOP  ,                                           00761700
.*-------------------------------------------------------------------   00761800
.***AI.LVER01                                                           00761900
                      AIF  (&XPLISTVER LT 1).ZI25Z                      00762000
.*-------------------------------------------------------------------   00762100
.***AI.L08 XKEYUSED3 "ORIGINATOR"                                       00762200
.***      BL1'X1XXXXXX'                                                 00762300
         AIF   ('&XSENDTO' NE 'ORIGINATOR').ZI25A                       00762400
&ZW                   SETC  '&ZW.1'                                     00762500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00762600
                      AGO   .ZI25C                                      00762700
.*                                                                      00762800
.ZI25A                ANOP  ,                                           00762900
&ZW                   SETC  '&ZW.0'                                     00763000
.ZI25C                ANOP  ,                                           00763100
.*-------------------------------------------------------------------   00763200
.***AI.LVER02                                                           00763300
.ZI25Z                ANOP  ,                                           00763400
.*-------------------------------------------------------------------   00763500
.***AI.LVER01                                                           00763600
                      AIF  (&XPLISTVER LT 1).ZI26Z                      00763700
.*-------------------------------------------------------------------   00763800
.***AI.L08 XKEYUSED3 "TABLE"                                            00763900
.***      BL1'XX1XXXXX'                                                 00764000
         AIF   ('&XMEMBERS' NE 'TABLE').ZI26A                           00764100
&ZW                   SETC  '&ZW.1'                                     00764200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00764300
                      AGO   .ZI26C                                      00764400
.*                                                                      00764500
.ZI26A                ANOP  ,                                           00764600
&ZW                   SETC  '&ZW.0'                                     00764700
.ZI26C                ANOP  ,                                           00764800
.*-------------------------------------------------------------------   00764900
.***AI.LVER02                                                           00765000
.ZI26Z                ANOP  ,                                           00765100
.*-------------------------------------------------------------------   00765200
.***AI.LVER01                                                           00765300
                      AIF  (&XPLISTVER LT 1).ZI27Z                      00765400
.*-------------------------------------------------------------------   00765500
.***AI.L08 XKEYUSED3 "FAILED"                                           00765600
.***      BL1'XXXXX1XX'                                                 00765700
         AIF   ('&XNOTIFYIF' NE 'FAILED').ZI27A                         00765800
&ZW                   SETC  '&ZW.001'                                   00765900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00766000
                      AGO   .ZI27C                                      00766100
.*                                                                      00766200
.ZI27A                ANOP  ,                                           00766300
&ZW                   SETC  '&ZW.000'                                   00766400
.ZI27C                ANOP  ,                                           00766500
.*-------------------------------------------------------------------   00766600
.***AI.LVER02                                                           00766700
.ZI27Z                ANOP  ,                                           00766800
.*-------------------------------------------------------------------   00766900
.***AI.LVER01                                                           00767000
                      AIF  (&XPLISTVER LT 1).ZI28Z                      00767100
.*-------------------------------------------------------------------   00767200
.***AI.L08 XKEYUSED3 "EXIT"                                             00767300
.***      BL1'XXXXXXX1'                                                 00767400
         AIF   ('&XNOTIFYBY' NE 'EXIT').ZI28A                           00767500
&ZW                   SETC  '&ZW.01'                                    00767600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00767700
                      AGO   .ZI28C                                      00767800
.*                                                                      00767900
.ZI28A                ANOP  ,                                           00768000
&ZW                   SETC  '&ZW.00'                                    00768100
.ZI28C                ANOP  ,                                           00768200
.*-------------------------------------------------------------------   00768300
.***AI.L11 XKEYUSED3 BL1                                                00768400
                      AIF   ('&ZCLNG' NE 'YES').ZI28E  ALL ZERO BITS    00768500
&ZOPN                 SETA  &ZOPN+1                                     00768600
&ZOPL(&ZOPN)          SETC  ' '                                         00768700
&ZOPO(&ZOPN)          SETC  'OI'                                        00768800
&ZOPV(&ZOPN)          SETC  '42(1),B''&ZW'''                            00768900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00769000
.ZI28E                ANOP  ,                                           00769100
.*-------------------------------------------------------------------   00769200
.***AI.LVER02                                                           00769300
.ZI28Z                ANOP  ,                                           00769400
.*-------------------------------------------------------------------   00769500
.***AI.LVER01                                                           00769600
                      AIF  (&XPLISTVER LT 1).ZI29Z                      00769700
.*-------------------------------------------------------------------   00769800
.***AI.L05 XKEYUSED4 BL1                                                00769900
&ZW                   SETC  ''                                          00770000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00770100
.*-------------------------------------------------------------------   00770200
.***AI.LVER02                                                           00770300
.ZI29Z                ANOP  ,                                           00770400
.*-------------------------------------------------------------------   00770500
.***AI.LVER01                                                           00770600
                      AIF  (&XPLISTVER LT 1).ZI30Z                      00770700
.*-------------------------------------------------------------------   00770800
.***AI.L08 XKEYUSED4 "TIMEOUT"                                          00770900
.***      BL1'1XXXXXXX'                                                 00771000
         AIF   ('&TIMEOUT' EQ '').ZI30A                                 00771100
         AIF   ('&TIMEOUT' EQ 'ZERO').ZI30A                             00771200
&ZW                   SETC  '&ZW.1'                                     00771300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00771400
                      AGO   .ZI30C                                      00771500
.*                                                                      00771600
.ZI30A                ANOP  ,                                           00771700
&ZW                   SETC  '&ZW.0'                                     00771800
.ZI30C                ANOP  ,                                           00771900
.*-------------------------------------------------------------------   00772000
.***AI.LVER02                                                           00772100
.ZI30Z                ANOP  ,                                           00772200
.*-------------------------------------------------------------------   00772300
.***AI.LVER01                                                           00772400
                      AIF  (&XPLISTVER LT 1).ZI31Z                      00772500
.*-------------------------------------------------------------------   00772600
.***AI.L08 XKEYUSED4 "RETMSGOTOKEN"                                     00772700
.***      BL1'X1XXXXXX'                                                 00772800
         AIF   ('&RETMSGOTOKEN' EQ '').ZI31A                            00772900
         AIF   ('&RETMSGOTOKEN' EQ '').ZI31A                            00773000
&ZW                   SETC  '&ZW.1'                                     00773100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00773200
                      AGO   .ZI31C                                      00773300
.*                                                                      00773400
.ZI31A                ANOP  ,                                           00773500
&ZW                   SETC  '&ZW.0'                                     00773600
.ZI31C                ANOP  ,                                           00773700
.*-------------------------------------------------------------------   00773800
.***AI.LVER02                                                           00773900
.ZI31Z                ANOP  ,                                           00774000
.*-------------------------------------------------------------------   00774100
.***AI.LVER01                                                           00774200
                      AIF  (&XPLISTVER LT 1).ZI32Z                      00774300
.*-------------------------------------------------------------------   00774400
.***AI.L08 XKEYUSED4 "YES"                                              00774500
.***      BL1'XX1XXXXX'                                                 00774600
         AIF   ('&XGETRESPONSE' NE 'YES').ZI32A                         00774700
&ZW                   SETC  '&ZW.1'                                     00774800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00774900
                      AGO   .ZI32C                                      00775000
.*                                                                      00775100
.ZI32A                ANOP  ,                                           00775200
&ZW                   SETC  '&ZW.0'                                     00775300
.ZI32C                ANOP  ,                                           00775400
.*-------------------------------------------------------------------   00775500
.***AI.LVER02                                                           00775600
.ZI32Z                ANOP  ,                                           00775700
.*-------------------------------------------------------------------   00775800
.***AI.LVER01                                                           00775900
                      AIF  (&XPLISTVER LT 1).ZI33Z                      00776000
.*-------------------------------------------------------------------   00776100
.***AI.L08 XKEYUSED4 "ORDERED"                                          00776200
.***      BL1'XXX1XXXX'                                                 00776300
         AIF   ('&XDELIVERMSG' NE 'ORDERED').ZI33A                      00776400
&ZW                   SETC  '&ZW.1'                                     00776500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00776600
                      AGO   .ZI33C                                      00776700
.*                                                                      00776800
.ZI33A                ANOP  ,                                           00776900
&ZW                   SETC  '&ZW.0'                                     00777000
.ZI33C                ANOP  ,                                           00777100
.*-------------------------------------------------------------------   00777200
.***AI.LVER02                                                           00777300
.ZI33Z                ANOP  ,                                           00777400
.*-------------------------------------------------------------------   00777500
.***AI.LVER01                                                           00777600
                      AIF  (&XPLISTVER LT 1).ZI34Z                      00777700
.*-------------------------------------------------------------------   00777800
.***AI.L08 XKEYUSED4 "ASYNC"                                            00777900
.***      BL1'XXXX1XXX'                                                 00778000
         AIF   ('&XMSGACCESS' NE 'ASYNC').ZI34A                         00778100
&ZW                   SETC  '&ZW.1000'                                  00778200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00778300
                      AGO   .ZI34C                                      00778400
.*                                                                      00778500
.ZI34A                ANOP  ,                                           00778600
&ZW                   SETC  '&ZW.0000'                                  00778700
.ZI34C                ANOP  ,                                           00778800
.*-------------------------------------------------------------------   00778900
.***AI.L11 XKEYUSED4 BL1                                                00779000
                      AIF   ('&ZCLNG' NE 'YES').ZI34E  ALL ZERO BITS    00779100
&ZOPN                 SETA  &ZOPN+1                                     00779200
&ZOPL(&ZOPN)          SETC  ' '                                         00779300
&ZOPO(&ZOPN)          SETC  'OI'                                        00779400
&ZOPV(&ZOPN)          SETC  '43(1),B''&ZW'''                            00779500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00779600
.ZI34E                ANOP  ,                                           00779700
.*-------------------------------------------------------------------   00779800
.***AI.LVER02                                                           00779900
.ZI34Z                ANOP  ,                                           00780000
.*-------------------------------------------------------------------   00780100
.***AI.LVER01                                                           00780200
                      AIF  (&XPLISTVER LT 1).ZI35Z                      00780300
.*-------------------------------------------------------------------   00780400
.***AI.LVER02                                                           00780500
.ZI35Z                ANOP  ,                                           00780600
.*-------------------------------------------------------------------   00780700
.***AI.LVER01                                                           00780800
                      AIF  (&XPLISTVER LT 1).ZI36Z                      00780900
.*-------------------------------------------------------------------   00781000
.***AI.LVER02                                                           00781100
.ZI36Z                ANOP  ,                                           00781200
.*-------------------------------------------------------------------   00781300
.***AI.LVER01                                                           00781400
                      AIF  (&XPLISTVER LT 1).ZI37Z                      00781500
.*-------------------------------------------------------------------   00781600
.***AI.L19 ADDR XPARTLENTBL A                                           00781700
                      AIF   ('&ZXPARTLENTBL' EQ '').ZI37H               00781800
&ZCLNG                SETC  '&XPARTLENTBL'                              00781900
&ZCGPR                SETC  '14'                                        00782000
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI37F  IN GPR               00782100
.*                                                                      00782200
&ZOPN                 SETA  &ZOPN+1                                     00782300
&ZOPL(&ZOPN)          SETC  ' '                                         00782400
&ZOPO(&ZOPN)          SETC  'LA'                                        00782500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00782600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00782700
.*                                                                      00782800
                      AGO   .ZI37G                                      00782900
.*                                                                      00783000
.ZI37F                ANOP  ,                                           00783100
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00783200
.*                                                                      00783300
.ZI37G                ANOP  ,                                           00783400
.*                                                                      00783500
&ZOPN                 SETA  &ZOPN+1                                     00783600
&ZOPL(&ZOPN)          SETC  ' '                                         00783700
&ZOPO(&ZOPN)          SETC  'ST'                                        00783800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             00783900
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00784000
.*                                                                      00784100
.ZI37H                ANOP  ,                                           00784200
.*-------------------------------------------------------------------   00784300
.***AI.LVER02                                                           00784400
.ZI37Z                ANOP  ,                                           00784500
.*-------------------------------------------------------------------   00784600
.***AI.LVER01                                                           00784700
                      AIF  (&XPLISTVER LT 1).ZI38Z                      00784800
.*-------------------------------------------------------------------   00784900
.***AI.L19 ADDR XPARTALETTBL A                                          00785000
                      AIF   ('&ZXPARTALETTBL' EQ '').ZI38H              00785100
&ZCLNG                SETC  '&XPARTALETTBL'                             00785200
&ZCGPR                SETC  '14'                                        00785300
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI38F  IN GPR              00785400
.*                                                                      00785500
&ZOPN                 SETA  &ZOPN+1                                     00785600
&ZOPL(&ZOPN)          SETC  ' '                                         00785700
&ZOPO(&ZOPN)          SETC  'LA'                                        00785800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00785900
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00786000
.*                                                                      00786100
                      AGO   .ZI38G                                      00786200
.*                                                                      00786300
.ZI38F                ANOP  ,                                           00786400
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00786500
.*                                                                      00786600
.ZI38G                ANOP  ,                                           00786700
.*                                                                      00786800
&ZOPN                 SETA  &ZOPN+1                                     00786900
&ZOPL(&ZOPN)          SETC  ' '                                         00787000
&ZOPO(&ZOPN)          SETC  'ST'                                        00787100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00787200
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00787300
.*                                                                      00787400
.ZI38H                ANOP  ,                                           00787500
.*-------------------------------------------------------------------   00787600
.***AI.LVER02                                                           00787700
.ZI38Z                ANOP  ,                                           00787800
.*-------------------------------------------------------------------   00787900
.***AI.LVER01                                                           00788000
                      AIF  (&XPLISTVER LT 1).ZI39Z                      00788100
.*-------------------------------------------------------------------   00788200
.***AI.L19 ADDR XELEMENT A                                              00788300
                      AIF   ('&ZXELEMENT' EQ '').ZI39H                  00788400
&ZCLNG                SETC  '&XELEMENT'                                 00788500
&ZCGPR                SETC  '14'                                        00788600
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI39F  IN GPR                  00788700
.*                                                                      00788800
&ZOPN                 SETA  &ZOPN+1                                     00788900
&ZOPL(&ZOPN)          SETC  ' '                                         00789000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00789100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00789200
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00789300
.*                                                                      00789400
                      AGO   .ZI39G                                      00789500
.*                                                                      00789600
.ZI39F                ANOP  ,                                           00789700
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00789800
.*                                                                      00789900
.ZI39G                ANOP  ,                                           00790000
.*                                                                      00790100
&ZOPN                 SETA  &ZOPN+1                                     00790200
&ZOPL(&ZOPN)          SETC  ' '                                         00790300
&ZOPO(&ZOPN)          SETC  'ST'                                        00790400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             00790500
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00790600
.*                                                                      00790700
.ZI39H                ANOP  ,                                           00790800
.*-------------------------------------------------------------------   00790900
.***AI.LVER02                                                           00791000
.ZI39Z                ANOP  ,                                           00791100
.*-------------------------------------------------------------------   00791200
.***AI.LVER01                                                           00791300
                      AIF  (&XPLISTVER LT 1).ZI40Z                      00791400
.*-------------------------------------------------------------------   00791500
.***AI.L23 ALET XELEMENT F                                              00791600
         AIF   ('&ZXELEMENT' EQ '').ZI40G                               00791700
         AIF   ('&SYSASCE' EQ 'P').ZI40G   SYSSTATE PRIMARY             00791800
&ZCLNG                SETC  '&XELEMENT'                                 00791900
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI40E  IN AR                   00792000
.*                                                                      00792100
&ZCGPR                SETC  '14'                                        00792200
                      AGO   .ZI40F                                      00792300
.*                                                                      00792400
.ZI40E                ANOP  ,                                           00792500
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00792600
.*                                                                      00792700
.ZI40F                ANOP  ,                                           00792800
.*                                                                      00792900
&ZOPN                 SETA  &ZOPN+1                                     00793000
&ZOPL(&ZOPN)          SETC  ' '                                         00793100
&ZOPO(&ZOPN)          SETC  'STAM'                                      00793200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,64(1)'                       00793300
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00793400
.*                                                                      00793500
.ZI40G                ANOP  ,                                           00793600
.*-------------------------------------------------------------------   00793700
.***AI.LVER02                                                           00793800
.ZI40Z                ANOP  ,                                           00793900
.*-------------------------------------------------------------------   00794000
.***AI.LVER01                                                           00794100
                      AIF  (&XPLISTVER LT 1).ZI41Z                      00794200
.*-------------------------------------------------------------------   00794300
.***AI.L23 ALET XPARTLENTBL F                                           00794400
         AIF   ('&ZXPARTLENTBL' EQ '').ZI41G                            00794500
         AIF   ('&SYSASCE' EQ 'P').ZI41G   SYSSTATE PRIMARY             00794600
&ZCLNG                SETC  '&XPARTLENTBL'                              00794700
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI41E  IN AR                00794800
.*                                                                      00794900
&ZCGPR                SETC  '14'                                        00795000
&ZOPN                 SETA  &ZOPN+1                                     00795100
&ZOPL(&ZOPN)          SETC  ' '                                         00795200
&ZOPO(&ZOPN)          SETC  'LAE'                                       00795300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00795400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00795500
                      AGO   .ZI41F                                      00795600
.*                                                                      00795700
.ZI41E                ANOP  ,                                           00795800
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00795900
.*                                                                      00796000
.ZI41F                ANOP  ,                                           00796100
.*                                                                      00796200
&ZOPN                 SETA  &ZOPN+1                                     00796300
&ZOPL(&ZOPN)          SETC  ' '                                         00796400
&ZOPO(&ZOPN)          SETC  'STAM'                                      00796500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,68(1)'                       00796600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00796700
.*                                                                      00796800
.ZI41G                ANOP  ,                                           00796900
.*-------------------------------------------------------------------   00797000
.***AI.LVER02                                                           00797100
.ZI41Z                ANOP  ,                                           00797200
.*-------------------------------------------------------------------   00797300
.***AI.LVER01                                                           00797400
                      AIF  (&XPLISTVER LT 1).ZI42Z                      00797500
.*-------------------------------------------------------------------   00797600
.***AI.L23 ALET XPARTALETTBL F                                          00797700
         AIF   ('&ZXPARTALETTBL' EQ '').ZI42G                           00797800
         AIF   ('&SYSASCE' EQ 'P').ZI42G   SYSSTATE PRIMARY             00797900
&ZCLNG                SETC  '&XPARTALETTBL'                             00798000
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI42E  IN AR               00798100
.*                                                                      00798200
&ZCGPR                SETC  '14'                                        00798300
&ZOPN                 SETA  &ZOPN+1                                     00798400
&ZOPL(&ZOPN)          SETC  ' '                                         00798500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00798600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00798700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00798800
                      AGO   .ZI42F                                      00798900
.*                                                                      00799000
.ZI42E                ANOP  ,                                           00799100
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00799200
.*                                                                      00799300
.ZI42F                ANOP  ,                                           00799400
.*                                                                      00799500
&ZOPN                 SETA  &ZOPN+1                                     00799600
&ZOPL(&ZOPN)          SETC  ' '                                         00799700
&ZOPO(&ZOPN)          SETC  'STAM'                                      00799800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,72(1)'                       00799900
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00800000
.*                                                                      00800100
.ZI42G                ANOP  ,                                           00800200
.*-------------------------------------------------------------------   00800300
.***AI.LVER02                                                           00800400
.ZI42Z                ANOP  ,                                           00800500
.*-------------------------------------------------------------------   00800600
.***AI.LVER01                                                           00800700
                      AIF  (&XPLISTVER LT 1).ZI43Z                      00800800
.*-------------------------------------------------------------------   00800900
.***AI.L18  XPARTALET F                                                 00801000
         AIF   ('&XPARTALET' NE 'ZERO').ZI43                            00801100
&ZXPARTALET           SETC  ''             RESET INPUT/OUTPUT           00801200
.ZI43                 ANOP  ,                                           00801300
.*-------------------------------------------------------------------   00801400
.***AI.L25  XPARTALET F                                                 00801500
                      AIF   ('&ZXPARTALET' EQ '').ZI43E                 00801600
                      AIF   ('&ZXPARTALET' EQ 'OUTPUT').ZI43E           00801700
&ZCGPR                SETC  '&XPARTALET'                                00801800
.*                                                                      00801900
                      AIF   ('&XPARTALET'(1,1) NE '(').ZI43B            00802000
&ZCGPR   SETC  '0('.'&XPARTALET'(2,K'&XPARTALET-2).')'                  00802100
.ZI43B                ANOP  ,                                           00802200
.*                                                                      00802300
&ZC                   SETC  '&XPARTALET'(1,1)                           00802400
                      AIF   (T'&ZC NE 'N').ZI43D                        00802500
&ZC                   SETC  '&XPARTALET'                                00802600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI43D               00802700
&ZCGPR                SETC  '=FL4''&XPARTALET'''                        00802800
.*                                                                      00802900
.ZI43D                ANOP  ,                                           00803000
.*                                                                      00803100
&ZOPN                 SETA  &ZOPN+1                                     00803200
&ZOPL(&ZOPN)          SETC  ' '                                         00803300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00803400
&ZOPV(&ZOPN)          SETC  '76(4,1),&ZCGPR'                            00803500
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALET XPARTALET'                  00803600
.*                                                                      00803700
.ZI43E                ANOP  ,                                           00803800
.*-------------------------------------------------------------------   00803900
.***AI.LVER02                                                           00804000
.ZI43Z                ANOP  ,                                           00804100
.*-------------------------------------------------------------------   00804200
.***AI.LVER01                                                           00804300
                      AIF  (&XPLISTVER LT 1).ZI44Z                      00804400
.*-------------------------------------------------------------------   00804500
.***AI.L25  XPARTALETOFF F                                              00804600
                      AIF   ('&ZXPARTALETOFF' EQ '').ZI44E              00804700
                      AIF   ('&ZXPARTALETOFF' EQ 'OUTPUT').ZI44E        00804800
&ZCGPR                SETC  '&XPARTALETOFF'                             00804900
.*                                                                      00805000
                      AIF   ('&XPARTALETOFF'(1,1) NE '(').ZI44B         00805100
&ZCGPR   SETC  '0('.'&XPARTALETOFF'(2,K'&XPARTALETOFF-2).')'            00805200
                      AGO   .ZI44D                                      00805300
.ZI44B                ANOP  ,                                           00805400
.*                                                                      00805500
&ZC                   SETC  '&XPARTALETOFF'(1,1)                        00805600
                      AIF   (T'&ZC NE 'N').ZI44D                        00805700
&ZC                   SETC  '&XPARTALETOFF'                             00805800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI44D               00805900
&ZCGPR                SETC  '=FL4''&XPARTALETOFF'''                     00806000
.*                                                                      00806100
.ZI44D                ANOP  ,                                           00806200
.*                                                                      00806300
&ZOPN                 SETA  &ZOPN+1                                     00806400
&ZOPL(&ZOPN)          SETC  ' '                                         00806500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00806600
&ZOPV(&ZOPN)          SETC  '80(4,1),&ZCGPR'                            00806700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETOFF XPARTALETOFF'            00806800
.*                                                                      00806900
.ZI44E                ANOP  ,                                           00807000
.*-------------------------------------------------------------------   00807100
.***AI.LVER02                                                           00807200
.ZI44Z                ANOP  ,                                           00807300
.*-------------------------------------------------------------------   00807400
.***AI.LVER01                                                           00807500
                      AIF  (&XPLISTVER LT 1).ZI45Z                      00807600
.*-------------------------------------------------------------------   00807700
.***AI.L25  XPARTOFF F                                                  00807800
                      AIF   ('&ZXPARTOFF' EQ '').ZI45E                  00807900
                      AIF   ('&ZXPARTOFF' EQ 'OUTPUT').ZI45E            00808000
&ZCGPR                SETC  '&XPARTOFF'                                 00808100
.*                                                                      00808200
                      AIF   ('&XPARTOFF'(1,1) NE '(').ZI45B             00808300
&ZCGPR   SETC  '0('.'&XPARTOFF'(2,K'&XPARTOFF-2).')'                    00808400
                      AGO   .ZI45D                                      00808500
.ZI45B                ANOP  ,                                           00808600
.*                                                                      00808700
&ZC                   SETC  '&XPARTOFF'(1,1)                            00808800
                      AIF   (T'&ZC NE 'N').ZI45D                        00808900
&ZC                   SETC  '&XPARTOFF'                                 00809000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI45D               00809100
&ZCGPR                SETC  '=FL4''&XPARTOFF'''                         00809200
.*                                                                      00809300
.ZI45D                ANOP  ,                                           00809400
.*                                                                      00809500
&ZOPN                 SETA  &ZOPN+1                                     00809600
&ZOPL(&ZOPN)          SETC  ' '                                         00809700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00809800
&ZOPV(&ZOPN)          SETC  '84(4,1),&ZCGPR'                            00809900
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTOFF XPARTOFF'                    00810000
.*                                                                      00810100
.ZI45E                ANOP  ,                                           00810200
.*-------------------------------------------------------------------   00810300
.***AI.LVER02                                                           00810400
.ZI45Z                ANOP  ,                                           00810500
.*-------------------------------------------------------------------   00810600
.***AI.LVER01                                                           00810700
                      AIF  (&XPLISTVER LT 1).ZI46Z                      00810800
.*-------------------------------------------------------------------   00810900
.***AI.L25  XPARTPTROFF F                                               00811000
                      AIF   ('&ZXPARTPTROFF' EQ '').ZI46E               00811100
                      AIF   ('&ZXPARTPTROFF' EQ 'OUTPUT').ZI46E         00811200
&ZCGPR                SETC  '&XPARTPTROFF'                              00811300
.*                                                                      00811400
                      AIF   ('&XPARTPTROFF'(1,1) NE '(').ZI46B          00811500
&ZCGPR   SETC  '0('.'&XPARTPTROFF'(2,K'&XPARTPTROFF-2).')'              00811600
                      AGO   .ZI46D                                      00811700
.ZI46B                ANOP  ,                                           00811800
.*                                                                      00811900
&ZC                   SETC  '&XPARTPTROFF'(1,1)                         00812000
                      AIF   (T'&ZC NE 'N').ZI46D                        00812100
&ZC                   SETC  '&XPARTPTROFF'                              00812200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI46D               00812300
&ZCGPR                SETC  '=FL4''&XPARTPTROFF'''                      00812400
.*                                                                      00812500
.ZI46D                ANOP  ,                                           00812600
.*                                                                      00812700
&ZOPN                 SETA  &ZOPN+1                                     00812800
&ZOPL(&ZOPN)          SETC  ' '                                         00812900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00813000
&ZOPV(&ZOPN)          SETC  '88(4,1),&ZCGPR'                            00813100
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTPTROFF XPARTPTROFF'              00813200
.*                                                                      00813300
.ZI46E                ANOP  ,                                           00813400
.*-------------------------------------------------------------------   00813500
.***AI.LVER02                                                           00813600
.ZI46Z                ANOP  ,                                           00813700
.*-------------------------------------------------------------------   00813800
.***AI.LVER01                                                           00813900
                      AIF  (&XPLISTVER LT 1).ZI47Z                      00814000
.*-------------------------------------------------------------------   00814100
.***AI.L25  XPARTLEN F                                                  00814200
                      AIF   ('&ZXPARTLEN' EQ '').ZI47E                  00814300
                      AIF   ('&ZXPARTLEN' EQ 'OUTPUT').ZI47E            00814400
&ZCGPR                SETC  '&XPARTLEN'                                 00814500
.*                                                                      00814600
                      AIF   ('&XPARTLEN'(1,1) NE '(').ZI47B             00814700
&ZCGPR   SETC  '0('.'&XPARTLEN'(2,K'&XPARTLEN-2).')'                    00814800
.ZI47B                ANOP  ,                                           00814900
.*                                                                      00815000
&ZC                   SETC  '&XPARTLEN'(1,1)                            00815100
                      AIF   (T'&ZC NE 'N').ZI47D                        00815200
&ZC                   SETC  '&XPARTLEN'                                 00815300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI47D               00815400
&ZCGPR                SETC  '=FL4''&XPARTLEN'''                         00815500
.*                                                                      00815600
.ZI47D                ANOP  ,                                           00815700
.*                                                                      00815800
&ZOPN                 SETA  &ZOPN+1                                     00815900
&ZOPL(&ZOPN)          SETC  ' '                                         00816000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00816100
&ZOPV(&ZOPN)          SETC  '92(4,1),&ZCGPR'                            00816200
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLEN XPARTLEN'                    00816300
.*                                                                      00816400
.ZI47E                ANOP  ,                                           00816500
.*-------------------------------------------------------------------   00816600
.***AI.LVER02                                                           00816700
.ZI47Z                ANOP  ,                                           00816800
.*-------------------------------------------------------------------   00816900
.***AI.LVER01                                                           00817000
                      AIF  (&XPLISTVER LT 1).ZI48Z                      00817100
.*-------------------------------------------------------------------   00817200
.***AI.L25  XPARTLENOFF F                                               00817300
                      AIF   ('&ZXPARTLENOFF' EQ '').ZI48E               00817400
                      AIF   ('&ZXPARTLENOFF' EQ 'OUTPUT').ZI48E         00817500
&ZCGPR                SETC  '&XPARTLENOFF'                              00817600
.*                                                                      00817700
                      AIF   ('&XPARTLENOFF'(1,1) NE '(').ZI48B          00817800
&ZCGPR   SETC  '0('.'&XPARTLENOFF'(2,K'&XPARTLENOFF-2).')'              00817900
                      AGO   .ZI48D                                      00818000
.ZI48B                ANOP  ,                                           00818100
.*                                                                      00818200
&ZC                   SETC  '&XPARTLENOFF'(1,1)                         00818300
                      AIF   (T'&ZC NE 'N').ZI48D                        00818400
&ZC                   SETC  '&XPARTLENOFF'                              00818500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI48D               00818600
&ZCGPR                SETC  '=FL4''&XPARTLENOFF'''                      00818700
.*                                                                      00818800
.ZI48D                ANOP  ,                                           00818900
.*                                                                      00819000
&ZOPN                 SETA  &ZOPN+1                                     00819100
&ZOPL(&ZOPN)          SETC  ' '                                         00819200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00819300
&ZOPV(&ZOPN)          SETC  '96(4,1),&ZCGPR'                            00819400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENOFF XPARTLENOFF'              00819500
.*                                                                      00819600
.ZI48E                ANOP  ,                                           00819700
.*-------------------------------------------------------------------   00819800
.***AI.LVER02                                                           00819900
.ZI48Z                ANOP  ,                                           00820000
.*-------------------------------------------------------------------   00820100
.***AI.LVER01                                                           00820200
                      AIF  (&XPLISTVER LT 1).ZI49Z                      00820300
.*-------------------------------------------------------------------   00820400
.***AI.L18  X#MSGPARTS F                                                00820500
         AIF   ('&X#MSGPARTS' NE 'ATLEASTONE').ZI49                     00820600
&ZX#MSGPARTS          SETC  ''             RESET INPUT/OUTPUT           00820700
.ZI49                 ANOP  ,                                           00820800
.*-------------------------------------------------------------------   00820900
.***AI.L25  X#MSGPARTS F                                                00821000
                      AIF   ('&ZX#MSGPARTS' EQ '').ZI49E                00821100
                      AIF   ('&ZX#MSGPARTS' EQ 'OUTPUT').ZI49E          00821200
&ZCGPR                SETC  '&X#MSGPARTS'                               00821300
.*                                                                      00821400
                      AIF   ('&X#MSGPARTS'(1,1) NE '(').ZI49B           00821500
&ZCGPR   SETC  '0('.'&X#MSGPARTS'(2,K'&X#MSGPARTS-2).')'                00821600
                      AGO   .ZI49D                                      00821700
.ZI49B                ANOP  ,                                           00821800
.*                                                                      00821900
&ZC                   SETC  '&X#MSGPARTS'(1,1)                          00822000
                      AIF   (T'&ZC NE 'N').ZI49D                        00822100
&ZC                   SETC  '&X#MSGPARTS'                               00822200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI49D               00822300
&ZCGPR                SETC  '=FL4''&X#MSGPARTS'''                       00822400
.*                                                                      00822500
.ZI49D                ANOP  ,                                           00822600
.*                                                                      00822700
&ZOPN                 SETA  &ZOPN+1                                     00822800
&ZOPL(&ZOPN)          SETC  ' '                                         00822900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00823000
&ZOPV(&ZOPN)          SETC  '100(4,1),&ZCGPR'                           00823100
&ZOPD(&ZOPN)          SETC  '++ &ZX#MSGPARTS X#MSGPARTS'                00823200
.*                                                                      00823300
.ZI49E                ANOP  ,                                           00823400
.*-------------------------------------------------------------------   00823500
.***AI.LVER02                                                           00823600
.ZI49Z                ANOP  ,                                           00823700
.*-------------------------------------------------------------------   00823800
.***AI.LVER01                                                           00823900
                      AIF  (&XPLISTVER LT 1).ZI50Z                      00824000
.*-------------------------------------------------------------------   00824100
.***AI.L25  XNEXTOFF F                                                  00824200
                      AIF   ('&ZXNEXTOFF' EQ '').ZI50E                  00824300
                      AIF   ('&ZXNEXTOFF' EQ 'OUTPUT').ZI50E            00824400
&ZCGPR                SETC  '&XNEXTOFF'                                 00824500
.*                                                                      00824600
                      AIF   ('&XNEXTOFF'(1,1) NE '(').ZI50B             00824700
&ZCGPR   SETC  '0('.'&XNEXTOFF'(2,K'&XNEXTOFF-2).')'                    00824800
                      AGO   .ZI50D                                      00824900
.ZI50B                ANOP  ,                                           00825000
.*                                                                      00825100
&ZC                   SETC  '&XNEXTOFF'(1,1)                            00825200
                      AIF   (T'&ZC NE 'N').ZI50D                        00825300
&ZC                   SETC  '&XNEXTOFF'                                 00825400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI50D               00825500
&ZCGPR                SETC  '=FL4''&XNEXTOFF'''                         00825600
.*                                                                      00825700
.ZI50D                ANOP  ,                                           00825800
.*                                                                      00825900
&ZOPN                 SETA  &ZOPN+1                                     00826000
&ZOPL(&ZOPN)          SETC  ' '                                         00826100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00826200
&ZOPV(&ZOPN)          SETC  '104(4,1),&ZCGPR'                           00826300
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTOFF XNEXTOFF'                    00826400
.*                                                                      00826500
.ZI50E                ANOP  ,                                           00826600
.*-------------------------------------------------------------------   00826700
.***AI.LVER02                                                           00826800
.ZI50Z                ANOP  ,                                           00826900
.*-------------------------------------------------------------------   00827000
.***AI.LVER01                                                           00827100
                      AIF  (&XPLISTVER LT 1).ZI51Z                      00827200
.*-------------------------------------------------------------------   00827300
.***AI.L25  XNEXTPTROFF F                                               00827400
                      AIF   ('&ZXNEXTPTROFF' EQ '').ZI51E               00827500
                      AIF   ('&ZXNEXTPTROFF' EQ 'OUTPUT').ZI51E         00827600
&ZCGPR                SETC  '&XNEXTPTROFF'                              00827700
.*                                                                      00827800
                      AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZI51B          00827900
&ZCGPR   SETC  '0('.'&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2).')'              00828000
                      AGO   .ZI51D                                      00828100
.ZI51B                ANOP  ,                                           00828200
.*                                                                      00828300
&ZC                   SETC  '&XNEXTPTROFF'(1,1)                         00828400
                      AIF   (T'&ZC NE 'N').ZI51D                        00828500
&ZC                   SETC  '&XNEXTPTROFF'                              00828600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI51D               00828700
&ZCGPR                SETC  '=FL4''&XNEXTPTROFF'''                      00828800
.*                                                                      00828900
.ZI51D                ANOP  ,                                           00829000
.*                                                                      00829100
&ZOPN                 SETA  &ZOPN+1                                     00829200
&ZOPL(&ZOPN)          SETC  ' '                                         00829300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00829400
&ZOPV(&ZOPN)          SETC  '108(4,1),&ZCGPR'                           00829500
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTPTROFF XNEXTPTROFF'              00829600
.*                                                                      00829700
.ZI51E                ANOP  ,                                           00829800
.*-------------------------------------------------------------------   00829900
.***AI.LVER02                                                           00830000
.ZI51Z                ANOP  ,                                           00830100
.*-------------------------------------------------------------------   00830200
.***AI.LVER01                                                           00830300
                      AIF  (&XPLISTVER LT 1).ZI52Z                      00830400
.*-------------------------------------------------------------------   00830500
.***AI.L18  XENDOFQUEUE AL4                                             00830600
         AIF   ('&XENDOFQUEUE' NE 'ZERO').ZI52                          00830700
&ZXENDOFQUEUE         SETC  ''             RESET INPUT/OUTPUT           00830800
.ZI52                 ANOP  ,                                           00830900
.*-------------------------------------------------------------------   00831000
.***AI.L25  XENDOFQUEUE AL4                                             00831100
                      AIF   ('&ZXENDOFQUEUE' EQ '').ZI52E               00831200
                      AIF   ('&ZXENDOFQUEUE' EQ 'OUTPUT').ZI52E         00831300
&ZCGPR                SETC  '&XENDOFQUEUE'                              00831400
.*                                                                      00831500
                      AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZI52B          00831600
&ZCGPR   SETC  '0('.'&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2).')'              00831700
                      AGO   .ZI52D                                      00831800
.ZI52B                ANOP  ,                                           00831900
.*                                                                      00832000
&ZC                   SETC  '&XENDOFQUEUE'(1,1)                         00832100
                      AIF   (T'&ZC NE 'N').ZI52D                        00832200
&ZC                   SETC  '&XENDOFQUEUE'                              00832300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI52D               00832400
&ZCGPR                SETC  '=AL4(&XENDOFQUEUE)'                        00832500
.*                                                                      00832600
.ZI52D                ANOP  ,                                           00832700
.*                                                                      00832800
&ZOPN                 SETA  &ZOPN+1                                     00832900
&ZOPL(&ZOPN)          SETC  ' '                                         00833000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00833100
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           00833200
&ZOPD(&ZOPN)          SETC  '++ &ZXENDOFQUEUE XENDOFQUEUE'              00833300
.*                                                                      00833400
.ZI52E                ANOP  ,                                           00833500
.*-------------------------------------------------------------------   00833600
.***AI.LVER02                                                           00833700
.ZI52Z                ANOP  ,                                           00833800
.*-------------------------------------------------------------------   00833900
.***AI.LVER01                                                           00834000
                      AIF  (&XPLISTVER LT 2).ZI53Z                      00834100
.*-------------------------------------------------------------------   00834200
.***AI.L19 ADDR XTARGETS A                                              00834300
                      AIF   ('&ZXTARGETS' EQ '').ZI53H                  00834400
&ZCLNG                SETC  '&XTARGETS'                                 00834500
&ZCGPR                SETC  '14'                                        00834600
         AIF   ('&XTARGETS'(1,1) EQ '(').ZI53F  IN GPR                  00834700
.*                                                                      00834800
&ZOPN                 SETA  &ZOPN+1                                     00834900
&ZOPL(&ZOPN)          SETC  ' '                                         00835000
&ZOPO(&ZOPN)          SETC  'LA'                                        00835100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00835200
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00835300
.*                                                                      00835400
                      AGO   .ZI53G                                      00835500
.*                                                                      00835600
.ZI53F                ANOP  ,                                           00835700
&ZCGPR   SETC  '&XTARGETS'(2,K'&XTARGETS-2)                             00835800
.*                                                                      00835900
.ZI53G                ANOP  ,                                           00836000
.*                                                                      00836100
&ZOPN                 SETA  &ZOPN+1                                     00836200
&ZOPL(&ZOPN)          SETC  ' '                                         00836300
&ZOPO(&ZOPN)          SETC  'ST'                                        00836400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,116(,1)'                            00836500
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00836600
.*                                                                      00836700
.ZI53H                ANOP  ,                                           00836800
.*-------------------------------------------------------------------   00836900
.***AI.LVER02                                                           00837000
.ZI53Z                ANOP  ,                                           00837100
.*-------------------------------------------------------------------   00837200
.***AI.LVER01                                                           00837300
                      AIF  (&XPLISTVER LT 2).ZI54Z                      00837400
.*-------------------------------------------------------------------   00837500
.***AI.L19 ADDR XRETMSGOTOKEN A                                         00837600
                      AIF   ('&ZXRETMSGOTOKEN' EQ '').ZI54H             00837700
&ZCLNG                SETC  '&XRETMSGOTOKEN'                            00837800
&ZCGPR                SETC  '14'                                        00837900
         AIF   ('&XRETMSGOTOKEN'(1,1) EQ '(').ZI54F  IN GPR             00838000
.*                                                                      00838100
&ZOPN                 SETA  &ZOPN+1                                     00838200
&ZOPL(&ZOPN)          SETC  ' '                                         00838300
&ZOPO(&ZOPN)          SETC  'LA'                                        00838400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00838500
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00838600
.*                                                                      00838700
                      AGO   .ZI54G                                      00838800
.*                                                                      00838900
.ZI54F                ANOP  ,                                           00839000
&ZCGPR   SETC  '&XRETMSGOTOKEN'(2,K'&XRETMSGOTOKEN-2)                   00839100
.*                                                                      00839200
.ZI54G                ANOP  ,                                           00839300
.*                                                                      00839400
&ZOPN                 SETA  &ZOPN+1                                     00839500
&ZOPL(&ZOPN)          SETC  ' '                                         00839600
&ZOPO(&ZOPN)          SETC  'ST'                                        00839700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,120(,1)'                            00839800
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00839900
.*                                                                      00840000
.ZI54H                ANOP  ,                                           00840100
.*-------------------------------------------------------------------   00840200
.***AI.LVER02                                                           00840300
.ZI54Z                ANOP  ,                                           00840400
.*-------------------------------------------------------------------   00840500
.***AI.LVER01                                                           00840600
                      AIF  (&XPLISTVER LT 2).ZI55Z                      00840700
.*-------------------------------------------------------------------   00840800
.***AI.L23 ALET XTARGETS F                                              00840900
         AIF   ('&ZXTARGETS' EQ '').ZI55G                               00841000
         AIF   ('&SYSASCE' EQ 'P').ZI55G   SYSSTATE PRIMARY             00841100
&ZCLNG                SETC  '&XTARGETS'                                 00841200
         AIF   ('&XTARGETS'(1,1) EQ '(').ZI55E  IN AR                   00841300
.*                                                                      00841400
&ZCGPR                SETC  '14'                                        00841500
&ZOPN                 SETA  &ZOPN+1                                     00841600
&ZOPL(&ZOPN)          SETC  ' '                                         00841700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00841800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00841900
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00842000
                      AGO   .ZI55F                                      00842100
.*                                                                      00842200
.ZI55E                ANOP  ,                                           00842300
&ZCGPR   SETC  '&XTARGETS'(2,K'&XTARGETS-2)                             00842400
.*                                                                      00842500
.ZI55F                ANOP  ,                                           00842600
.*                                                                      00842700
&ZOPN                 SETA  &ZOPN+1                                     00842800
&ZOPL(&ZOPN)          SETC  ' '                                         00842900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00843000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,124(1)'                      00843100
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETS XTARGETS'                    00843200
.*                                                                      00843300
.ZI55G                ANOP  ,                                           00843400
.*-------------------------------------------------------------------   00843500
.***AI.LVER02                                                           00843600
.ZI55Z                ANOP  ,                                           00843700
.*-------------------------------------------------------------------   00843800
.***AI.LVER01                                                           00843900
                      AIF  (&XPLISTVER LT 2).ZI56Z                      00844000
.*-------------------------------------------------------------------   00844100
.***AI.L23 ALET XRETMSGOTOKEN F                                         00844200
         AIF   ('&ZXRETMSGOTOKEN' EQ '').ZI56G                          00844300
         AIF   ('&SYSASCE' EQ 'P').ZI56G   SYSSTATE PRIMARY             00844400
&ZCLNG                SETC  '&XRETMSGOTOKEN'                            00844500
         AIF   ('&XRETMSGOTOKEN'(1,1) EQ '(').ZI56E  IN AR              00844600
.*                                                                      00844700
&ZCGPR                SETC  '14'                                        00844800
&ZOPN                 SETA  &ZOPN+1                                     00844900
&ZOPL(&ZOPN)          SETC  ' '                                         00845000
&ZOPO(&ZOPN)          SETC  'LAE'                                       00845100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00845200
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00845300
                      AGO   .ZI56F                                      00845400
.*                                                                      00845500
.ZI56E                ANOP  ,                                           00845600
&ZCGPR   SETC  '&XRETMSGOTOKEN'(2,K'&XRETMSGOTOKEN-2)                   00845700
.*                                                                      00845800
.ZI56F                ANOP  ,                                           00845900
.*                                                                      00846000
&ZOPN                 SETA  &ZOPN+1                                     00846100
&ZOPL(&ZOPN)          SETC  ' '                                         00846200
&ZOPO(&ZOPN)          SETC  'STAM'                                      00846300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,128(1)'                      00846400
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGOTOKEN XRETMSGOTOKEN'          00846500
.*                                                                      00846600
.ZI56G                ANOP  ,                                           00846700
.*-------------------------------------------------------------------   00846800
.***AI.LVER02                                                           00846900
.ZI56Z                ANOP  ,                                           00847000
.*-------------------------------------------------------------------   00847100
.***AI.LVER01                                                           00847200
                      AIF  (&XPLISTVER LT 2).ZI57Z                      00847300
.*-------------------------------------------------------------------   00847400
.***AI.L18  XNOTIFYEXIT A                                               00847500
         AIF   ('&XNOTIFYEXIT' NE 'FROMJOIN').ZI57                      00847600
&ZXNOTIFYEXIT         SETC  ''             RESET INPUT/OUTPUT           00847700
.ZI57                 ANOP  ,                                           00847800
.*-------------------------------------------------------------------   00847900
.***AI.L19  XNOTIFYEXIT A                                               00848000
                      AIF   ('&ZXNOTIFYEXIT' EQ '').ZI57H               00848100
&ZCLNG                SETC  '&XNOTIFYEXIT'                              00848200
&ZCGPR                SETC  '14'                                        00848300
         AIF   ('&XNOTIFYEXIT'(1,1) EQ '(').ZI57F  IN GPR               00848400
.*                                                                      00848500
&ZOPN                 SETA  &ZOPN+1                                     00848600
&ZOPL(&ZOPN)          SETC  ' '                                         00848700
&ZOPO(&ZOPN)          SETC  'LA'                                        00848800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00848900
&ZOPD(&ZOPN)          SETC  '++ &ZXNOTIFYEXIT XNOTIFYEXIT'              00849000
.*                                                                      00849100
                      AGO   .ZI57G                                      00849200
.*                                                                      00849300
.ZI57F                ANOP  ,                                           00849400
&ZCGPR   SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)                       00849500
.*                                                                      00849600
.ZI57G                ANOP  ,                                           00849700
.*                                                                      00849800
&ZOPN                 SETA  &ZOPN+1                                     00849900
&ZOPL(&ZOPN)          SETC  ' '                                         00850000
&ZOPO(&ZOPN)          SETC  'ST'                                        00850100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,132(,1)'                            00850200
&ZOPD(&ZOPN)          SETC  '++ &ZXNOTIFYEXIT XNOTIFYEXIT'              00850300
.*                                                                      00850400
.ZI57H                ANOP  ,                                           00850500
.*-------------------------------------------------------------------   00850600
.***AI.LVER02                                                           00850700
.ZI57Z                ANOP  ,                                           00850800
.*-------------------------------------------------------------------   00850900
.***AI.LVER01                                                           00851000
                      AIF  (&XPLISTVER LT 2).ZI58Z                      00851100
.*-------------------------------------------------------------------   00851200
.***AI.L25  XSTREAMID F                                                 00851300
                      AIF   ('&ZXSTREAMID' EQ '').ZI58E                 00851400
                      AIF   ('&ZXSTREAMID' EQ 'OUTPUT').ZI58E           00851500
&ZCGPR                SETC  '&XSTREAMID'                                00851600
.*                                                                      00851700
                      AIF   ('&XSTREAMID'(1,1) NE '(').ZI58B            00851800
&ZCGPR   SETC  '0('.'&XSTREAMID'(2,K'&XSTREAMID-2).')'                  00851900
                      AGO   .ZI58D                                      00852000
.ZI58B                ANOP  ,                                           00852100
.*                                                                      00852200
&ZC                   SETC  '&XSTREAMID'(1,1)                           00852300
                      AIF   (T'&ZC NE 'N').ZI58D                        00852400
&ZC                   SETC  '&XSTREAMID'                                00852500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI58D               00852600
&ZCGPR                SETC  '=FL4''&XSTREAMID'''                        00852700
.*                                                                      00852800
.ZI58D                ANOP  ,                                           00852900
.*                                                                      00853000
&ZOPN                 SETA  &ZOPN+1                                     00853100
&ZOPL(&ZOPN)          SETC  ' '                                         00853200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00853300
&ZOPV(&ZOPN)          SETC  '136(4,1),&ZCGPR'                           00853400
&ZOPD(&ZOPN)          SETC  '++ &ZXSTREAMID XSTREAMID'                  00853500
.*                                                                      00853600
.ZI58E                ANOP  ,                                           00853700
.*-------------------------------------------------------------------   00853800
.***AI.LVER02                                                           00853900
.ZI58Z                ANOP  ,                                           00854000
.*-------------------------------------------------------------------   00854100
.***AI.LVER01                                                           00854200
                      AIF  (&XPLISTVER LT 2).ZI59Z                      00854300
.*-------------------------------------------------------------------   00854400
.***AI.L25  X#TARGETS F                                                 00854500
                      AIF   ('&ZX#TARGETS' EQ '').ZI59E                 00854600
                      AIF   ('&ZX#TARGETS' EQ 'OUTPUT').ZI59E           00854700
&ZCGPR                SETC  '&X#TARGETS'                                00854800
.*                                                                      00854900
                      AIF   ('&X#TARGETS'(1,1) NE '(').ZI59B            00855000
&ZCGPR   SETC  '0('.'&X#TARGETS'(2,K'&X#TARGETS-2).')'                  00855100
                      AGO   .ZI59D                                      00855200
.ZI59B                ANOP  ,                                           00855300
.*                                                                      00855400
&ZC                   SETC  '&X#TARGETS'(1,1)                           00855500
                      AIF   (T'&ZC NE 'N').ZI59D                        00855600
&ZC                   SETC  '&X#TARGETS'                                00855700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI59D               00855800
&ZCGPR                SETC  '=FL4''&X#TARGETS'''                        00855900
.*                                                                      00856000
.ZI59D                ANOP  ,                                           00856100
.*                                                                      00856200
&ZOPN                 SETA  &ZOPN+1                                     00856300
&ZOPL(&ZOPN)          SETC  ' '                                         00856400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00856500
&ZOPV(&ZOPN)          SETC  '140(4,1),&ZCGPR'                           00856600
&ZOPD(&ZOPN)          SETC  '++ &ZX#TARGETS X#TARGETS'                  00856700
.*                                                                      00856800
.ZI59E                ANOP  ,                                           00856900
.*-------------------------------------------------------------------   00857000
.***AI.LVER02                                                           00857100
.ZI59Z                ANOP  ,                                           00857200
.*-------------------------------------------------------------------   00857300
.***AI.LVER01                                                           00857400
                      AIF  (&XPLISTVER LT 2).ZI60Z                      00857500
.*-------------------------------------------------------------------   00857600
.***AI.L25  XNEXTTARGETOFF F                                            00857700
                      AIF   ('&ZXNEXTTARGETOFF' EQ '').ZI60E            00857800
                      AIF   ('&ZXNEXTTARGETOFF' EQ 'OUTPUT').ZI60E      00857900
&ZCGPR                SETC  '&XNEXTTARGETOFF'                           00858000
.*                                                                      00858100
                      AIF   ('&XNEXTTARGETOFF'(1,1) NE '(').ZI60B       00858200
&ZCGPR   SETC  '0('.'&XNEXTTARGETOFF'(2,K'&XNEXTTARGETOFF-2).')'        00858300
                      AGO   .ZI60D                                      00858400
.ZI60B                ANOP  ,                                           00858500
.*                                                                      00858600
&ZC                   SETC  '&XNEXTTARGETOFF'(1,1)                      00858700
                      AIF   (T'&ZC NE 'N').ZI60D                        00858800
&ZC                   SETC  '&XNEXTTARGETOFF'                           00858900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI60D               00859000
&ZCGPR                SETC  '=FL4''&XNEXTTARGETOFF'''                   00859100
.*                                                                      00859200
.ZI60D                ANOP  ,                                           00859300
.*                                                                      00859400
&ZOPN                 SETA  &ZOPN+1                                     00859500
&ZOPL(&ZOPN)          SETC  ' '                                         00859600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00859700
&ZOPV(&ZOPN)          SETC  '144(4,1),&ZCGPR'                           00859800
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTTARGETOFF XNEXTTARGETOFF'        00859900
.*                                                                      00860000
.ZI60E                ANOP  ,                                           00860100
.*-------------------------------------------------------------------   00860200
.***AI.LVER02                                                           00860300
.ZI60Z                ANOP  ,                                           00860400
.*-------------------------------------------------------------------   00860500
.***AI.LVER01                                                           00860600
                      AIF  (&XPLISTVER LT 2).ZI61Z                      00860700
.*-------------------------------------------------------------------   00860800
.***AI.L25  XRESPONSEID CL24                                            00860900
                      AIF   ('&ZXRESPONSEID' EQ '').ZI61E               00861000
                      AIF   ('&ZXRESPONSEID' EQ 'OUTPUT').ZI61E         00861100
&ZCGPR                SETC  '&XRESPONSEID'                              00861200
.*                                                                      00861300
                      AIF   ('&XRESPONSEID'(1,1) NE '(').ZI61B          00861400
&ZCGPR   SETC  '0('.'&XRESPONSEID'(2,K'&XRESPONSEID-2).')'              00861500
.ZI61B                ANOP  ,                                           00861600
.*                                                                      00861700
&ZOPN                 SETA  &ZOPN+1                                     00861800
&ZOPL(&ZOPN)          SETC  ' '                                         00861900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00862000
&ZOPV(&ZOPN)          SETC  '148(24,1),&ZCGPR'                          00862100
&ZOPD(&ZOPN)          SETC  '++ &ZXRESPONSEID XRESPONSEID'              00862200
.*                                                                      00862300
.ZI61E                ANOP  ,                                           00862400
.*-------------------------------------------------------------------   00862500
.***AI.LVER02                                                           00862600
.ZI61Z                ANOP  ,                                           00862700
.*-------------------------------------------------------------------   00862800
.***AI.LVER01                                                           00862900
                      AIF  (&XPLISTVER LT 2).ZI62Z                      00863000
.*-------------------------------------------------------------------   00863100
.***AI.L18  XUSERDATA CL8                                               00863200
         AIF   ('&XUSERDATA' NE 'ALLZERO').ZI62                         00863300
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00863400
.ZI62                 ANOP  ,                                           00863500
.*-------------------------------------------------------------------   00863600
.***AI.L25  XUSERDATA CL8                                               00863700
                      AIF   ('&ZXUSERDATA' EQ '').ZI62E                 00863800
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI62E           00863900
&ZCGPR                SETC  '&XUSERDATA'                                00864000
.*                                                                      00864100
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI62B            00864200
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00864300
.ZI62B                ANOP  ,                                           00864400
.*                                                                      00864500
&ZOPN                 SETA  &ZOPN+1                                     00864600
&ZOPL(&ZOPN)          SETC  ' '                                         00864700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00864800
&ZOPV(&ZOPN)          SETC  '172(8,1),&ZCGPR'                           00864900
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00865000
.*                                                                      00865100
.ZI62E                ANOP  ,                                           00865200
.*-------------------------------------------------------------------   00865300
.***AI.LVER02                                                           00865400
.ZI62Z                ANOP  ,                                           00865500
.*-------------------------------------------------------------------   00865600
.***AI.LVER01                                                           00865700
                      AIF  (&XPLISTVER LT 2).ZI63Z                      00865800
.*-------------------------------------------------------------------   00865900
.***AI.L18  XTIMEOUT XL2                                                00866000
         AIF   ('&XTIMEOUT' NE 'ZERO').ZI63                             00866100
&ZXTIMEOUT            SETC  ''             RESET INPUT/OUTPUT           00866200
.ZI63                 ANOP  ,                                           00866300
.*-------------------------------------------------------------------   00866400
.***AI.L25  XTIMEOUT XL2                                                00866500
                      AIF   ('&ZXTIMEOUT' EQ '').ZI63E                  00866600
                      AIF   ('&ZXTIMEOUT' EQ 'OUTPUT').ZI63E            00866700
&ZCGPR                SETC  '&XTIMEOUT'                                 00866800
.*                                                                      00866900
                      AIF   ('&XTIMEOUT'(1,1) NE '(').ZI63B             00867000
&ZCGPR   SETC  '0('.'&XTIMEOUT'(2,K'&XTIMEOUT-2).')'                    00867100
                      AGO   .ZI63D                                      00867200
.ZI63B                ANOP  ,                                           00867300
.*                                                                      00867400
&ZC                   SETC  '&XTIMEOUT'(1,1)                            00867500
                      AIF   (T'&ZC NE 'N').ZI63D                        00867600
&ZC                   SETC  '&XTIMEOUT'                                 00867700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI63D               00867800
&ZCGPR                SETC  '=FL2''&XTIMEOUT'''                         00867900
.*                                                                      00868000
.ZI63D                ANOP  ,                                           00868100
.*                                                                      00868200
&ZOPN                 SETA  &ZOPN+1                                     00868300
&ZOPL(&ZOPN)          SETC  ' '                                         00868400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00868500
&ZOPV(&ZOPN)          SETC  '180(2,1),&ZCGPR'                           00868600
&ZOPD(&ZOPN)          SETC  '++ &ZXTIMEOUT XTIMEOUT'                    00868700
.*                                                                      00868800
.ZI63E                ANOP  ,                                           00868900
.*-------------------------------------------------------------------   00869000
.***AI.LVER02                                                           00869100
.ZI63Z                ANOP  ,                                           00869200
.*-------------------------------------------------------------------   00869300
.***AI.LVER01                                                           00869400
                      AIF  (&XPLISTVER LT 2).ZI64Z                      00869500
.*-------------------------------------------------------------------   00869600
.***AI.LVER02                                                           00869700
.ZI64Z                ANOP  ,                                           00869800
.*-------------------------------------------------------------------   00869900
.***AI.LVER01                                                           00870000
                      AIF  (&XPLISTVER LT 3).ZI65Z                      00870100
.*-------------------------------------------------------------------   00870200
.***AI.LVER02                                                           00870300
.ZI65Z                ANOP  ,                                           00870400
.*-------------------------------------------------------------------   00870500
&ZOPN1                SETA &ZOPN                                        00870600
.*******************************************************************    00870700
.***  PROCESS IXCMSGO OUTPUT PARAMETERS                                 00870800
.*******************************************************************    00870900
                      ACTR  10000                                       00871000
.*******************************************************************    00871100
.***AO.X02  RETURN CODE PROCESSING                                      00871200
.*******************************************************************    00871300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00871400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00871500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00871600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00871700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00871800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00871900
&ZOPN                 SETA  &ZOPN+1                                     00872000
&ZOPL(&ZOPN)          SETC  ' '                                         00872100
&ZOPO(&ZOPN)          SETC  'ST'                                        00872200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00872300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00872400
                      AGO   .ZMRETX                                     00872500
.*                                                                      00872600
.ZMRET2               ANOP  ,                                           00872700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00872800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00872900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00873000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00873100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00873200
&ZOPN                 SETA  &ZOPN+1                                     00873300
&ZOPL(&ZOPN)          SETC  ' '                                         00873400
&ZOPO(&ZOPN)          SETC  'LR'                                        00873500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00873600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00873700
.ZMRETX               ANOP  ,                                           00873800
.*******************************************************************    00873900
.***AO.X03  REASON CODE PROCESSING                                      00874000
.*******************************************************************    00874100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00874200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00874300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00874400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00874500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00874600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00874700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00874800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00874900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00875000
&ZOPN                 SETA  &ZOPN+1                                     00875100
&ZOPL(&ZOPN)          SETC  ' '                                         00875200
&ZOPO(&ZOPN)          SETC  'ST'                                        00875300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00875400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00875500
                      AGO   .ZMRSNX                                     00875600
.*                                                                      00875700
.ZMRSN2               ANOP  ,                                           00875800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00875900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00876000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00876100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00876200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00876300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00876400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00876500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00876600
&ZOPN                 SETA  &ZOPN+1                                     00876700
&ZOPL(&ZOPN)          SETC  ' '                                         00876800
&ZOPO(&ZOPN)          SETC  'LR'                                        00876900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00877000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00877100
.ZMRSNX               ANOP  ,                                           00877200
.*******************************************************************    00877300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00877400
.*******************************************************************    00877500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00877600
.*******************************************************************    00877700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00877800
.*******************************************************************    00877900
                      ACTR  10000                                       00878000
.*                                                                      00878100
                      LCLA  &ZLC           COLUMN POSITION              00878200
                      LCLA  &ZOPX          LIST TABLE INDEX             00878300
                      LCLC  &ZLL           LABEL                        00878400
                      LCLC  &ZLOP          OPERATION                    00878500
                      LCLC  &ZLV           VALUE                        00878600
                      LCLC  &ZLD           DESCRIPTION                  00878700
.*                                                                      00878800
&ZOPX                 SETA  1                                           00878900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00879000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00879100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00879200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00879300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00879400
                      AIF   (K'&ZLD LE 0).ZL5                           00879500
&ZLC                  SETA  35             COMMENT COLUMN               00879600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00879700
&ZLC                  SETA  33             COMMMENT COLUMN              00879800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00879900
&ZLV                  SETC  '&ZLV'.' '                                  00880000
                      AGO   .ZL3                                        00880100
.*                                                                      00880200
.ZL4                  ANOP  ,                                           00880300
&ZLV                  SETC  '&ZLV'.' '                                  00880400
.ZL5                  ANOP  ,                                           00880500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00880600
.*                                                                      00880700
&ZLL     &ZLOP &ZLV                                                     00880800
.*                                                                      00880900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00881000
                      AGO   .ZL2           CONTINUE LOOPING             00881100
.*                                                                      00881200
.ZLX                  ANOP  ,                                           00881300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00881400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00881500
         L     14,16(0,0)              GET CVT ADDRESS                  00881600
         L     14,772(14,0)            GET SFT ADDRESS                  00881700
         L     14,220(14,0)            GET LX/EX FOR SERVICE ROUTINE    00881800
         PC    0(14)                                                    00881900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00882000
.ZLINKX               ANOP  ,                                           00882100
.*******************************************************************    00882200
.***AP.X01  FORMAT GENERATED CODE                                       00882300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00882400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00882500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00882600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00882700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00882800
                      AIF   (K'&ZLD LE 0).ZL51                          00882900
&ZLC                  SETA  35             COMMENT COLUMN               00883000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00883100
&ZLC                  SETA  33             COMMENT COLUMN               00883200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00883300
&ZLV                  SETC  '&ZLV'.' '                                  00883400
                      AGO   .ZL31                                       00883500
.*                                                                      00883600
.ZL41                 ANOP  ,                                           00883700
&ZLV                  SETC  '&ZLV'.' '                                  00883800
.ZL51                 ANOP  ,                                           00883900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00884000
.*                                                                      00884100
&ZLL     &ZLOP &ZLV                                                     00884200
.*                                                                      00884300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00884400
                      AGO   .ZL21          CONTINUE LOOPING             00884500
.*                                                                      00884600
.ZLX1                 ANOP  ,                                           00884700
.*******************************************************************    00884800
.***AP.X02  END OF IXCMSGO MACRO                                        00884900
&ZIXCMSGO             SETC  'YES'          SET IXCMSGO USED             00885000
         POP   PRINT                                                    00885100
*                                            IXCMSGO-3                  00885200
         SPACE 1                                                        00885300
.ZLX2                 ANOP  ,                                           00885400
         MEND                                                           00885500
**********************************************************************/ 00885600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00885700
*%IXCMSGO: MACRO KEYS(MEMTOKEN,SENDTO,TARGET,DELIVERMSG,STREAMID,       00885800
*                 GETRESPONSE,TIMEOUT,MEMBERS,TARGETS,#TARGETS,         00885900
*                 NEXTTARGETOFF,RESPONSEID,MULTIPART,MSGCNTL,MSGBUF,    00886000
*                 MSGLEN,#MSGPARTS,ELEMENT,ELEMFORM,NEXTOFF,            00886100
*                 NEXTPTROFF,ENDOFQUEUE,PARTOFF,PARTPTROFF,PARTALET,    00886200
*                 PARTALETOFF,PARTALETTBL,PARTLEN,PARTLENOFF,           00886300
*                 PARTLENTBL,MSGSTGKEY,MSGACCESS,NOTIFY,USERDATA,       00886400
*                 NOTIFYIF,NOTIFYBY,NOTIFYEXIT,RETMSGOTOKEN,LINKAGE,    00886500
*                 XCFDATA,RETCODE,RSNCODE,PLISTVER,MF);                 00886600
*  ANS('?'||MACLABEL||' '||'IXCMSGOP '||MACLIST||                       00886700
*         ' '||MACKEYS||';') COL(MACLMAR);                              00886800
*%END IXCMSGO;                                                          00886900
