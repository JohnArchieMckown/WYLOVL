*        %GOTO POLLPRO ;        /* Bilingual header                     00050000
         MACRO                                                          00100000
         BPXYPOLL  &DSECT=YES,&LIST=YES                                 00150000
         GBLB  &POLL411                                                 00200000
         AIF   (&POLL411 EQ 1).E411                                     00250000
&POLL411 SETB  1                                                        00300000
         AIF   ('&LIST' EQ 'YES').A411                                  00350000
         PUSH  PRINT  BPXYPOLL: POLLFD structure for poll syscall       00400000
         PRINT OFF                                                      00450000
         AGO   .A411                                                    00500000
*                               */                                      00550000
*%POLLPRO : ;                                                           00600000
*/****START OF SPECIFICATIONS****************************************** 00650000
*    $MAC (BPXYPOLL) COMP(SCPX1) PROD(BPX):                             00700000
*01* MACRO NAME: BPXYPOLL                                               00750000
*01* DSECT NAME: N/A                                                    00800000
*01* DESCRIPTIVE NAME: PollFD structure for the poll syscall            00850000
*02*   ACRONYM: POLL                                                    00900000
**/                                                                     00950000
*/*01* PROPRIETARY STATEMENT=                                        */ 01000000
*/***PROPRIETARY_STATEMENT********************************************/ 01050000
*/*                                                                  */ 01100000
*/*                                                                  */ 01125000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01150000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01200000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1995,2000                       */ 01250000
*/*                                                                  */ 01300000
*/* STATUS= HBB7703                                                  */ 01350000
*/*                                                                  */ 01400000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01450000
*/*                                                                     01500000
*                                                                       01525000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     01550000
*01* END OF EXTERNAL CLASSIFICATION:                                    01600000
*                                                                       01650000
*01* FUNCTION:                                                          01700000
*                                                                       01750000
*    The PollFD is an array that maps the status request and response   01800000
*    for each file descriptor specified on a poll syscall.              01850000
*01* METHOD OF ACCESS:                                                  01900000
*02*   PL/X:                                                            01950000
*         %INCLUDE SYSLIB(BPXYPOLL)                                     02000000
*         By default, the POLL is based on POLLPTR.                     02050000
*         If other basing is desired, use %POLLBASE='BASED(XXXXXX)'.    02100000
*         If %POLLBASE is defaulted, a declare for POLLPTR is           02150000
*         generated.                                                    02200000
*                                                                       02250000
*         If VIA basing is required, specify %POLLVIA='VIA(YYYYYY)'.    02300000
*         If %POLLVIA='VIA(POLLALET)' is specified, a declare for       02350000
*         POLLALET is generated.                                        02400000
*02*   ASM:                                                             02450000
*         With DSECT=NO, storage is allocated in line                   02500000
*         and addressability is provided thru that DSECT or CSECT.      02550000
*                                                                       02600000
*         With DSECT=YES, a DSECT is produced and "USING POLLFD,reg"    02650000
*         is required for addressability.  Here "reg" contains the      02700000
*         address of POLLFD#LENGTH bytes of storage.                    02750000
*         The default is DSECT=YES.                                     02800000
*                                                                       02850000
*01* SIZE: Release dependent.  Refer to the mapping.                    02900000
*01*             POLLFD -- X'0007' bytes                                02950000
*01* POINTED TO BY: N/A                                                 03000000
*01* CREATED BY: invoker of poll()                                      03050000
*01* DELETED BY: invoker of poll()                                      03100000
*01* STORAGE ATTRIBUTES:                                                03150000
*02*   SUBPOOL: n/a                                                     03200000
*02*   KEY: 0                                                           03250000
*02*   RESIDENCY: Primary address space                                 03300000
*01* FREQUENCY: multiple per poll() syscall                             03350000
*01* SERIALIZATION: None                                                03400000
*01* DEPENDENCIES: None                                                 03450000
*01* NOTES: When the length of PollEvents/PollRevents is changed,       03500000
*           these mapping macros: BPXYSEL, BPXZBSIC, BPXZTBSI, and      03550000
*           BPXYTCPP need to be examined and updated if necessary.      03600000
*                                                                       03650000
*01* COMPONENT: OpenMVS (SCPX1)                                         03700000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     03750000
*01* EYE-CATCHER: none                                                  03800000
*02*   OFFSET:                                                          03850000
*02*   LENGTH:                                                          03900000
*01* CHANGE-ACTIVITY:                                                   03950000
* $D0=DPFA065   HOM1130, 950201, PDNU: A065.37 Poll() Syscall           04000000
* $P1=PPF0236   HOM1130, 950213, PDJM: Correct assembler, (C) date      04050000
* $01=OW15016   HOM1130, 950829, PDDZ: A128.00 Select MsgQ support      04100000
* $D1=DRGA134   HOM1140, 950822, PDDZ: A134.02 Universal Unix           04150000
* $D2=DRGA134   HOM1140, 951114, PDDZ: A134.03 Universal Unix           04200000
* $P2=PRG0094   HOM1140, 951212, PDNU: Update  Universal Unix           04250000
* $P3=PRG0109   HOM1140, 951212, PDNU: Update  Universal Unix           04300000
* $P4=PVT0652 HBB6606 980316 PDJM: Shift ASM label to upper case        04350000
****END OF SPECIFICATIONS*********************************************/ 04400000
*        %GOTO POLLPLS ;        /* Bilingual header                     04450000
.A411    ANOP  ,                                                        04500000
** BPXYPOLL: POLLFD structure for poll syscall                          04550000
**  Used By: POL                                                        04600000
                     AIF   ('&DSECT' EQ 'NO').B411                      04650000
POLLFD               DSECT ,                                            04700000
                     AGO   .C411                                        04750000
.B411                ANOP  ,                                            04800000
POLLFD               DS    0F                                           04850000
.C411                ANOP  ,                                            04900000
POLLHFD              DS    FL4       File descriptor                    04950000
                     ORG   POLLHFD                               @01A   05000000
POLLHMQID            DS    FL4       Message queue identifier    @01A   05050000
POLLEVENTS           DS    0XL2      Events                        @D1C 05100000
                     DC    XL1'0'    Reserved                           05150000
                     DS    XL1       POLLEVENTS+1                       05200000
POLLEPRI             EQU   X'10'     High-pri data may be recv'd   @D1C 05250000
POLLEWRBAND          EQU   X'08'     Priority data may be written  @D1C 05300000
POLLEWRNORM          EQU   X'04'     Data on band 0 may be written.     05350000
POLLEOUT             EQU   X'04'     Same as WrNorm                     05400000
POLLEIN              EQU   X'03'     Same as RdNorm                     05450000
POLLERDBAND          EQU   X'02'     Non-0 band data may be read   @D1C 05500000
POLLERDNORM          EQU   X'01'     Data on band 0 may be read.        05550000
                     SPACE ,                                            05600000
POLLREVENTS          DS    0XL2      Returned events               @D1C 05650000
                     DS    XL1       Reserved                           05700000
                     DS    XL1       POLLREVENTS+1                      05750000
POLLRNVAL            EQU   X'80'     Invalid FD member.(Revent Only)    05800000
POLLRHUP             EQU   X'40'     Hangup occurred (Revent Only) @D1C 05850000
POLLRERR             EQU   X'20'     Error occurred. (Revent Only)      05900000
POLLRPRI             EQU   X'10'     High-pri data may be recv'd   @D1C 05950000
POLLRWRBAND          EQU   X'08'     Priority data may be written  @D1C 06000000
POLLRWRNORM          EQU   X'04'     Data on band 0 may be written.     06050000
POLLROUT             EQU   X'04'     Same as WrNorm                     06100000
POLLRIN              EQU   X'03'     Same as RdNorm                     06150000
POLLRRDBAND          EQU   X'02'     Non-0 band data may be read   @D1C 06200000
POLLRRDNORM          EQU   X'01'     Data on band 0 may be read.        06250000
POLLFD#LENGTH        EQU   *-POLLFD                                     06300000
*                                                                       06350000
#POLLEMASK           EQU   X'001F'                                 @D1A 06400000
#POLLRDMASK          EQU   X'00130000'  All Read bits              @D2A 06450000
#POLLWRMASK          EQU   X'000C0000'  All Write bits             @D2A 06500000
#POLLPRIMASK         EQU   X'00100000'  The PollPri bit            @D2A 06550000
#POLLINMASK          EQU   X'00030000'  Pollin rdnorm rdband bits  @D2A 06600000
#POLLRNMASK          EQU   X'00010000'  Read Normal                @P2A 06650000
#POLLWNMASK          EQU   X'00040000'  Write Normal               @P2A 06700000
#POLLEVMASK          EQU   X'001F0000'  Events                     @P3A 06750000
*                                                                       06800000
*                                                                       06850000
** BPXYPOLL End                                                         06900000
                     SPACE 3                                            06950000
                     AIF   ('&LIST' EQ 'YES').E411                      07000000
                     POP   PRINT                                        07050000
.E411                ANOP  ,                                            07100000
                     MEND                                               07150000
     Terminating PL/X comment                                      */   07200000
* %POLLPLS : ;                                                          07250000
* %BPXYPOLL_INCLUDED = 'YES';                                           07300000
* %DCL ZCBPRINT CHAR EXT;                                               07350000
* %DEACTIVATE ZCBPRINT;                                                 07400000
* %DCL BPXYPOLL_LIST CHAR EXT;                                          07450000
* %DEACTIVATE BPXYPOLL_LIST;                                            07500000
* %IF BPXYPOLL_LIST ^= 'NO' &                                           07550000
*    ZCBPRINT ^= 'NO' %THEN                                             07600000
*   %GOTO BPXYPOLL_3;                                                   07650000
*   @LIST PUSH NOECHO;                                                  07700000
*   @LIST NOASSEMBLE NOECHO;                                            07750000
*   @LIST OFF C NOECHO;                                                 07800000
* %BPXYPOLL_3:;                                                         07850000
*/* Start of PL/X Source                                             */ 07900000
* %IF POLLBASE= '' %THEN                                                07950000
*   %DO;                                                                08000000
*     %POLLBASE = 'BASED(POLLPtr)';   /* Default basing to POLLPtr   */ 08050000
*   %END;                                                               08100000
* %IF TRANSLATE(POLLBASE)='BASED(POLLPTR)' %THEN                        08150000
*   %DO;                                                                08200000
*     DCL POLLPtr PTR(31);                                              08250000
*   %END;                                                               08300000
*                                                                       08350000
* %IF TRANSLATE(POLLVIA)='VIA(POLLALET)' %THEN                          08400000
*   %DO;                                                                08450000
*     DCL POLLAlet FIXED(32);                                           08500000
*   %END;                                                               08550000
*/********************************************************************/ 08600000
*/* Start of POLL control block                                      */ 08650000
*/********************************************************************/ 08700000
*Declare                                                                08750000
* 1 PollFd(*) POLLBASE POLLVIA,                                         08800000
*  3 PollHFd    Fixed(31),    /* File descriptor                   */   08850000
     5 PollHMqid  Fixed(31),  /* Message queue identifier      @01A*/   08900000
*                                                                       08950000
   /******************************************************************/ 09000000
   /* To use PollEvents/PollRevents to map over a piece of storage,  */ 09050000
   /* one can follow one of these two illustrations:                 */ 09100000
   /*                                                                */ 09150000
   /*  Dcl 1 EventBits Like(PollEvents)                              */ 09200000
   /*                  Defined(StorToBeMappedOver)                   */ 09250000
   /*      - or -                                                    */ 09300000
   /*  Dcl 1 EventBits Like(PollEvents)                              */ 09350000
   /*                  Based(Addr(StorToBeMappedOver))               */ 09400000
   /******************************************************************/ 09450000
*  3 PollEvents Char(2)    ,  /* Events                            */   09500000
*   5 *             Bit( 1),  /*  Reserved - DO NOT USE        @D1A*/   09550000
*   5 *             Bit(10),  /*  Reserved.                    @D1C*/   09600000
*   5 PollEPri      Bit( 1),  /* High-pri data may be recv'd   @D1C*/   09650000
*   5 PollEWrBand   Bit( 1),  /* Priority data may be written  @D1C*/   09700000
*   5 PollEWrNorm   Bit( 1),  /*  Data on band 0 may be written.   */   09750000
*    7 PollEOut     Bit( 1),  /*   Same as WrNorm                  */   09800000
*   5 PollEIn       Bit( 2),  /*  Same as RdNorm                   */   09850000
*    7 PollERdBand  Bit( 1),  /* Data from a non-zero band may be       09900000
*                                read                          @D1C*/   09950000
*    7 PollERdNorm  Bit( 1),  /*   Data on band 0 may be read.     */   10000000
*                                                                       10050000
*  3 PollRevents Char(2)   ,  /* Revents (returned events)         */   10100000
*   5 *             Bit( 1),  /*  Reserved - DO NOT USE        @D1A*/   10150000
*   5 *             Bit( 7),  /*  Reserved.                    @D1C*/   10200000
*   5 PollRNVal     Bit( 1),  /*  Invalid FD member.(Revent Only)  */   10250000
*   5 PollRHup      Bit( 1),  /* Hangup occurred (Revent Only) @D1C*/   10300000
*   5 PollRErr      Bit( 1),  /*  Error occurred.   (Revent Only)  */   10350000
*   5 PollRPri      Bit( 1),  /* High-pri data may be recv'd   @D1C*/   10400000
*   5 PollRWrBand   Bit( 1),  /* Priority data may be written  @D1C*/   10450000
*   5 PollRWrNorm   Bit( 1),  /*  Data on band 0 may be written.   */   10500000
*    7 PollROut     Bit( 1),  /*   Same as WrNorm                  */   10550000
*   5 PollRIn       Bit( 2),  /*  Same as RdNorm                   */   10600000
*    7 PollRRdBand  Bit( 1),  /* Data from a non-zero band may be       10650000
*                                read                          @D1A*/   10700000
*    7 PollRRdNorm  Bit( 1);  /*   Data on band 0 may be read.     */   10750000
*                                                                       10800000
*/********************************************************************/ 10850000
*/* Constants                                                        */ 10900000
*/********************************************************************/ 10950000
*Declare                                                                11000000
* #PollFdLen Fixed(31) Constant(Length(PollFd)),                        11050000
* #PollEMask Char(2)   Constant('001F'X),                     /* @D1A*/ 11100000
* #PollRdMask    Fixed(32) Constant('00130000'X), /* All Rd bits @D2A*/ 11150000
* #PollWrMask    Fixed(32) Constant('000C0000'X), /* All Wr bits @D2A*/ 11200000
* #PollPriMask   Fixed(32) Constant('00100000'X), /* PollPri     @D2A*/ 11250000
* #PollinMask    Fixed(32) Constant('00030000'X), /* Other Rds   @D2A*/ 11300000
* #PollRNMask    Fixed(32) Constant('00010000'X), /* Read Normal @P2A*/ 11350000
* #PollWNMask    Fixed(32) Constant('00040000'X), /* Write Norm  @P2A*/ 11400000
* #PollEvMask    Fixed(32) Constant('001F0000'X); /* Events      @P3A*/ 11450000
*                                                                       11500000
*                                                                       11550000
*/* End of PL/X Source                                               */ 11600000
* %IF BPXYPOLL_LIST ^= 'NO' &                                           11650000
*    ZCBPRINT ^= 'NO' %THEN                                             11700000
*   %GOTO BPXYPOLL_4;                                                   11750000
*   @LIST POP NOECHO;                                                   11800000
* %BPXYPOLL_4:;                                                         11850000
