*        %GOTO PTRCPRO  ;         /* Bilingual header                   00050000
         MACRO                                                          00100000
         BPXYPTRC  &DSECT=YES,&LIST=YES,&VARLEN=1024         10@D1A     00150000
         GBLB  &PTRC411                                                 00200000
         AIF   (&PTRC411 EQ 1).E411                                     00250000
&PTRC411 SETB  1                                                        00300000
         AIF   ('&LIST' EQ 'YES').A411                                  00350000
         PUSH  PRINT  BPXYPTRC: Ptrace System call parameters           00400000
         PRINT OFF                                                      00450000
         AGO   .A411                                                    00500000
*                                  */                                   00550000
*%PTRCPRO : ;                                                           00600000
*/****START OF SPECIFICATIONS****************************************** 00650000
*                                                                       00700000
*    $MAC (BPXYPTRC) COMP(SCPX1) PROD(BPX):                             00750000
*                                                                       00800000
*01* MACRO NAME: BPXYPTRC                                               00850000
*                                                                       00900000
*01* DSECT NAME: PTRC                                                   00950000
*                                                                       01000000
*01* DESCRIPTIVE NAME: Ptrace System Call Parameters                    01050000
*                                                                       01100000
*02*   ACRONYM: PTRC                                                    01150000
**/                                                                     01200000
*/*01* PROPRIETARY STATEMENT=                                        */ 01250000
*/***PROPRIETARY_STATEMENT********************************************/ 01300000
*/*                                                                  */ 01350000
*/*                                                                  */ 01400000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01450000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01500000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1993,2000                       */ 01550000
*/*                                                                  */ 01600000
*/* STATUS= HBB7703                                                  */ 01650000
*/*                                                                  */ 01700000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01750000
*/*                                                                     01800000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     01850000
*01* END OF EXTERNAL CLASSIFICATION:                                    01900000
*                                                                       01950000
*01* FUNCTION:                                                          02000000
*                                                                       02050000
*      This macro contains definitions and structures for use by the    02100000
*      callers of the ptrace system call, BPX1PTR.                      02150000
*                                                                       02200000
*01* METHOD OF ACCESS:                                                  02250000
*                                                                       02300000
*02*   PL/X:                                                            02350000
*                                                                       02400000
*        %INCLUDE SYSLIB(BPXYPTRC)                                      02450000
*                                                                       02500000
*        Several structures are defined, as well as assorted constants. 02550000
*        The structures are PtLDInfo (loader info), PtptInfo (thread    02600000
*        info), PtExInfo (explain info), and PtPICParms (program        02650000
*        recovery parameters).                                          02700000
*                                                                       02750000
*        By default, PtLDInfo is defined as BASED.  Normal use will     02800000
*        place this upon another variable -                             02850000
*            (for example,  "RFY PtLDInfo BASED(ADDR(LoaderInfo))").    02900000
*        If a local variable is desired, use %PTLDBASE='LOCAL'.         02950000
*                                                                       03000000
*        By default, PtptInfo is defined as BASED.  Normal use will     03050000
*        place this upon another variable -                             03100000
*            (for example,  "RFY PtptInfo BASED(ADDR(ThreadInfo))").    03150000
*        If a local variable is desired, use %PTPTBASE='LOCAL'.         03200000
*                                                                       03250000
*        By default, PtExInfo is defined as BASED.  Normal use will     03300000
*        place this upon another variable -                             03350000
*            (for example,  "RFY PtExInfo BASED(ADDR(ExplainInfo))").   03400000
*        If a local variable is desired, use %PTEXBASE='LOCAL'.         03450000
*                                                                       03500000
*        By default, PtPICParms is defined as BASED.  Normal use will   03550000
*        place this upon another variable -                             03600000
*            (for example,  "RFY PtPICParms BASED(ADDR(PgmIntParms))"). 03650000
*        If a local variable is desired, use %PTPIBASE='LOCAL'.         03700000
*                                                                       03750000
*02*   ASM:                                                             03800000
*        With DSECT=NO, storage is allocated in line                    03850000
*        and addressability is provided thru that DSECT or CSECT.       03900000
*        With DSECT=YES, a DSECT is produced and                        03950000
*        "USING PTLDINFO,reg1", "USING PTPTINFO,reg2",                  04000000
*        "USING PTEXINFO,,reg3" and "USING PTPICPARMS,reg4" are         04050000
*        required for addessability.                                    04100000
*        Here "reg1" contains the address of PTLD#LENGTH bytes          04150000
*        (PTLD#FIXLEN + VARLEN= operand), "reg2" contains the           04200000
*        address of PTPT#LENGTH bytes, "reg3" contains the              04250000
*        address of PTEX#LENGTH bytes, and "reg4" contains              04300000
*        the address of PTPIC#LENGTH bytes of storage.                  04350000
*        Maximum pathname is 1023 (+null), so default VARLEN=1024.      04400000
*        The default is DSECT=YES.                                      04450000
*                                                                       04500000
*01* SIZE: PTLD#LENGTH = PTLD#FIXED + VARLEN                            04550000
*            PTLDINFO    -- X'0020' bytes                               04553000
*            PTLDINFOEXT -- X'007C' bytes                               04556000
*            PTPTINFO    -- X'0030' bytes                               04559000
*            PTPHINFO    -- X'0030' bytes                               04562000
*            PTPXINFO    -- X'0040' bytes                               04565000
*            PTEXINFO    -- X'000C' bytes                               04568000
*            PTPICPARMS  -- X'0040' bytes                               04571000
*            PTBRINFO    -- X'0020' bytes                               04574000
*            PTBR_GPR    -- X'0098' bytes                               04577000
*            PTBR_FPR    -- X'0094' bytes                               04580000
*            PTBR_GPRH   -- X'0058' bytes                               04583000
*            PTBR_BLOCK  -- X'0010' bytes                               04586000
*            PTBR_D      -- X'0008' bytes                               04589000
*            PTBR_I      -- X'0008' bytes                               04592000
*            PTBR_U      -- X'0010' bytes                               04595000
*          PTPT#LENGTH                                                  04600000
*          PTEX#LENGTH                                                  04650000
*          PTPIC#LENGTH                                                 04700000
*                                                                       04750000
*01* POINTED TO BY: Local variable, RFY or USING.                       04800000
*                                                                       04850000
*01* CREATED BY: Caller of syscall                                      04900000
*                                                                       04950000
*01* DELETED BY: Caller of syscall                                      05000000
*                                                                       05050000
*01* STORAGE ATTRIBUTES:                                                05100000
*                                                                       05150000
*02*   SUBPOOL/DATASPACE:  N/A                                          05200000
*                                                                       05250000
*02*   KEY:                N/A                                          05300000
*                                                                       05350000
*02*   RESIDENCY:          N/A                                          05400000
*                                                                       05450000
*01* FREQUENCY: 1 per call to PTRACE                                    05500000
*                                                                       05550000
*01* SERIALIZATION: N/A                                                 05600000
*                                                                       05650000
*01* DEPENDENCIES: None                                                 05700000
*                                                                       05750000
*01* NOTES:                                                             05800000
*                                                                       05850000
*01* COMPONENT: OpenMVS (SCPX1)                                         05900000
*                                                                       05950000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     06000000
*                                                                       06050000
*01* EYE-CATCHER: None                                                  06100000
*                                                                       06150000
*01* CHANGE-ACTIVITY:                                                   06200000
*                                                                       06250000
* $L0=POSIXXNP HOM1110 931201 PDPE: OpenMVS Initial Release             06300000
* $D1=DL70019  HOM1110 921201 PDJM: Assembler macro fixup               06350000
* $P1=PL70597  HOM1110 930104 PDJM: Use "OpenMVS"                       06400000
* $D2=DOAA003  HOM1120 930406 PDJG: Ptrace Thread Support               06450000
* $D3=DOAA003  HOM1120 930909 PDPE: DCR A003.02 Generic Debugger        06500000
*                                   Interface                           06550000
* $D4=DPFA065  HOM1130 940218 PDPE: DCR A065.08 BSD Signals             06600000
* $P2=POA0419  HOM1120 940408 PDPE: Identify MVS load modules           06650000
* $D5=DPFA094  HOM1130 940922 PDPE: DCR A094.02 Add ILC to PIC parms    06700000
* $D6=DPFA100  HOM1130 941109 PDPE: DCR A100.01 Captured storage        06750000
* $P3=PSY0557  JBB6604 970331 PDPY: Load module greater than 16 extents 06800000
* $D7=DVT0238  JBB6606 971006 PDPY: A238.00 IEEE support                06850000
* $01=OW31970  HBB6603 980216 PDI6: Ptrace Support for Sticky Pgms      06900000
*                                   (Merge up PTM PWA0085)              06950000
* $D8=DXDA367  HBB7703 990610 PDJI: 64-bit register support A367.02     06975000
* $P4=PXD1144  HBB7703 000112 PDJI: Fix assembler comment in col 72     06987500
* $02=OW44571  HBB7703 000601 PDZJ: A408.03 POST MORTEM DEBUG           06993500
****END OF SPECIFICATIONS*********************************************/ 07000000
*        %GOTO PTRCPLS  ;         /* Bilingual header                   07050000
.A411    ANOP  ,                                                        07100000
.P0      ANOP                                                           07249990
         AIF   ('&LIST' EQ 'YES').P2                                    07349980
.P1      ANOP                                                           07449970
         PUSH  PRINT                                                    07549960
         PRINT OFF                                                      07649950
.P2      ANOP                                                           07749940
*                                                                       07850000
* ********************************************************************  07909990
* *                                                                  *  07919980
* * Ptrace PT_LDINFO return structure.  Note that this maps one      *  07929970
* * element, corresponding to one load module.  Each element         *  07939960
* * consists of a fixed portion, and a variable portion (the path    *  07949950
* * name and member name character strings).  The character strings  *  07959940
* * are terminated with a null value (X'00').  Each loader info      *  07969930
* * element immediately follows the last null terminator for the     *  07979920
* * previous element.  The first full word of each element is an     *  07989910
* * offset to the next element.  Thus, the start of the next element *  07999900
* * can be specified as follows:                                     *  08009890
* *                                                                  *  08019880
* *     NextLDInfo = Addr(PtLDInfo)+PtLDInfoNext                     *  08029870
* *                                                                  *  08039860
* ********************************************************************  08049850
*                                                                       08059840
*                                                                       08069830
         AIF   ('&DSECT' EQ 'YES').L0003                                08079820
PTLDINFO DS    0F                                                       08089810
         AGO   .L0004                                                   08099800
.L0003   ANOP                                                           08109790
PTLDINFO DSECT                                                          08119780
.L0004   ANOP                                                           08129770
PTLDFIXEDAREA DS 0CL0032                                                08139760
PTLDINFONEXT DS 1FL4     Offset to next element                         08149750
PTLDINFOFD DS  1FL4      File descriptor for this load module (not     *08159740
                         used)                                          08169730
PTLDTEXTORG DS 1AL4      Program text origin address (i.e. load point  *08179720
                         address)                                       08189710
PTLDTEXTSIZE DS 1FL4     Length of text                                 08199700
PTLDTEXTSUBPOOL DS 1CL0001 Subpool where text is loaded                 08209690
PTLDTEXTFLAGS DS 0BL1    Text related flags                             08219680
PTLDTEXTWRITE EQU X'80'  0 = text can be read but not written into 1 = *08229670
                         text can be read and written into              08239660
PTLDTEXTMVS EQU X'40'    0 = File system load module 1 = MVS load      *08249650
                         module                                         08259640
PTLDTEXTEXT EQU X'20'    0 = Only 1 text extent 1 = More than one text *08269630
                         extent. First extent is in this element,      *08279620
                         extent 2 - n are in the PtLDInfoExt area       08289610
         ORG   PTLDTEXTFLAGS+X'00000001'                                08299600
PTLDOFFEXT DS  1FL2      Offset from this element to element           *08309590
                         extension. 0 if there is no extension for     *08319580
                         this element                                   08329570
PTLDDATAORG DS 1AL4      Program data origin address (not used)         08339560
PTLDDATASIZE DS 1FL4     Length of data (not used)                      08349550
PTLDDATASUBPOOL DS 1FL1  Subpool where data is loaded (not used)        08359540
PTLDDATAFLAGS DS 1BL1    Data related flags (not used)                  08369530
         DS    1FL2      Reserved                                       08379520
PTLDVARAREA DS 0C                                                       08389510
PTLDPATHNAME DS 0C       Fully qualified path name of load module       08399500
PTLDMEMBERNAME DS 0C     Member name of load module (not used)          08409490
PTLDINFO_LEN EQU *-PTLDINFO                                             08419480
.L0002   ANOP                                                           08429470
         AIF   ('&DSECT' EQ 'YES').L0006                                08439460
PTLDINFOEXT DS 0F                                                       08449450
         AGO   .L0007                                                   08459440
.L0006   ANOP                                                           08469430
PTLDINFOEXT DSECT                                                       08479420
.L0007   ANOP                                                           08489410
PTLDINFONUMTEXTEXT DS 1FL2 Number of additional text extents in the    *08499400
                         following arrays that are meaningful, up to   *08509390
                         15 in this area, for a total of 16             08519380
         DS    1FL2      reserved                                       08529370
PTLDTEXTORGEXT DS 1AL4   Program text origin address (i.e. load point  *08539360
                         address)                                       08549350
         ORG   PTLDTEXTORGEXT+X'0000003C'                               08559340
PTLDTEXTSIZEEXT DS 1FL4  Length of text                                 08569330
PTLDNULLTERM EQU 0       Null terminator for character strings          08579320
         ORG   PTLDINFOEXT+X'0000007C'                                  08589310
PTLDINFOEXT_LEN EQU *-PTLDINFOEXT                                       08599300
.L0005   ANOP                                                           08609290
*                                                                       08619280
* ********************************************************************  08629270
* *                                                                  *  08639260
* * Ptrace thread information return structure.  Note that this      *  08649250
* * maps one element, corresponding to one thread.                   *  08659240
* *                                                                  *  08669230
* * Note: the only valid information for a dead thread is:           *  08679220
* *                                                                  *  08689210
* *   PTPTNEXT, PTPTTHID, PTPTSTATEACTIVE=0, PTPTKERNELPTHREAD,      *  08699200
* *   PTPTEXITSTATUS                                                 *  08709190
* ********************************************************************  08719180
*                                                                       08729170
*                                                                       08739160
         AIF   ('&DSECT' EQ 'YES').L0009                                08749150
PTPTINFO DS    0F                                                       08759140
         AGO   .L000A                                                   08769130
.L0009   ANOP                                                           08779120
PTPTINFO DSECT                                                          08789110
.L000A   ANOP                                                           08799100
PTPTNEXT DS    1AL4      Offset to next element                         08809090
PTPTTHID DS    1CL0008   Thread ID                                      08819080
PTPTRESERVED DS 1CL0016  Reserved                                       08829070
PTPTSTATE DS   0BL4      Thread state flags                             08839060
PTPTSTATE1 DS  0BL1      Thread state flag byte                         08849050
PTPTSTATEACTIVE EQU X'80'                                               08859040
*                                                                       08869030
*      ***************************************************************  08879020
*      *                                                             *  08889010
*      * 0 = thread is dead                                             08899000
*      * 1 = thread is active                                           08908990
*      *                                                             *  08918980
*      ***************************************************************  08928970
*                                                                       08938960
*                                                                       08948950
PTPTSTATEASYNC EQU X'40'                                                08958940
*                                                                       08968930
*      ***************************************************************  08978920
*      *                                                             *  08988910
*      * 1 = thread is asynchronous                                     08998900
*      * (is also active but not                                        09008890
*      * yet running)                                                   09018880
*      *                                                             *  09028870
*      ***************************************************************  09038860
*                                                                       09048850
*                                                                       09058840
PTPTSTATECANCELPEND EQU X'20'                                           09068830
*                                                                       09078820
*      ***************************************************************  09088810
*      *                                                             *  09098800
*      * 1 = cancel is pending                                          09108790
*      *                                                             *  09118780
*      ***************************************************************  09128770
*                                                                       09138760
*                                                                       09148750
         ORG   PTPTSTATE1+X'00000001'                                   09158740
PTPTSTATE2 DS  1BL1      Thread state flag byte                         09168730
PTPTSTATE3 DS  1BL1      Thread state flag byte                         09178720
PTPTSTATE4 DS  1BL1      Thread state flag byte                         09188710
PTPTKERNELATTR DS 0BL4   Thread kernel attributes                       09198700
PTPTKERNEL1 DS 0BL1      Thread kernel attribute byte                   09208690
PTPTKERNELDETACH EQU X'80'                                              09218680
*                                                                       09228670
*      ***************************************************************  09238660
*      *                                                             *  09248650
*      * 0 = thread is not detached                                     09258640
*      * 1 = thread is detached                                         09268630
*      *                                                             *  09278620
*      ***************************************************************  09288610
*                                                                       09298600
*                                                                       09308590
PTPTKERNELMEDIUM EQU X'40'                                              09318580
*                                                                       09328570
*      ***************************************************************  09338560
*      *                                                             *  09348550
*      * 0 = thread is heavyweight                                      09358540
*      * 1 = thread is mediumweight                                     09368530
*      *                                                             *  09378520
*      ***************************************************************  09388510
*                                                                       09398500
*                                                                       09408490
PTPTKERNELASYNC EQU X'20'                                               09418480
*                                                                       09428470
*      ***************************************************************  09438460
*      *                                                             *  09448450
*      * 0 = thread is synchronous                                      09458440
*      * 1 = thread is asynchronous                                     09468430
*      *                                                             *  09478420
*      ***************************************************************  09488410
*                                                                       09498400
*                                                                       09508390
PTPTKERNELPTHREAD EQU X'10'                                             09518380
*                                                                       09528370
*      ***************************************************************  09538360
*      *                                                             *  09548350
*      * 1 = thread is created via                                      09558340
*      * pthread create                                                 09568330
*      *                                                             *  09578320
*      ***************************************************************  09588310
*                                                                       09598300
*                                                                       09608290
         ORG   PTPTKERNEL1+X'00000001'                                  09618280
PTPTKERNEL2 DS 0BL1      Thread kernel attribute byte                   09628270
PTPTKERNELHOLD EQU X'80'                                                09638260
*                                                                       09648250
*      ***************************************************************  09658240
*      *                                                             *  09668230
*      * 1 = thread is held                                             09678220
*      *                                                             *  09688210
*      ***************************************************************  09698200
*                                                                       09708190
*                                                                       09718180
         ORG   PTPTKERNEL2+X'00000001'                                  09728170
PTPTKERNEL3 DS 1BL1      Reserved                                       09738160
PTPTKERNEL4 DS 1BL1      Reserved                                       09748150
PTPTEXITSTATUS DS 1CL0004                                               09758140
*                                                                       09768130
*      ***************************************************************  09778120
*      *                                                             *  09788110
*      * Thread exit status if dead                                     09798100
*      * (PtptStateActive = 0)                                          09808090
*      *                                                             *  09818080
*      ***************************************************************  09828070
*                                                                       09838060
*                                                                       09848050
PTPTPENDINGSIGMASK DS 1BL8                                              09858040
PTPTINFO_LEN EQU *-PTPTINFO                                             09868030
.L0008   ANOP                                                           09878020
*                                                                       09888010
*    *****************************************************************  09898000
*    *                                                               *  09907990
*    * Mask of pending signals                                          09917980
*    * (bit 0 represents signal 1)                                      09927970
*    * (bit 63 represents signal 64)                                    09937960
*    *                                                               *  09947950
*    *****************************************************************  09957940
*                                                                       09967930
* ********************************************************************  09977920
* *                                                                  *  09987910
* * Ptrace thread information extended structure. Note that this     *  09997900
* * maps one element, corresponding to one thread. PtpxInfo maps     *  10007890
* * exactly to PtPtInfo                                              *  10017880
* *                                                                  *  10027870
* *                                                                  *  10037860
* *                                                                  *  10047850
* * Note: the only valid information for a dead thread is:           *  10057840
* *                                                                  *  10067830
* *   PTPXNEXT, PTPXTHID, PTPXSTATEACTIVE=0, PTPXKERNELPTHREAD,      *  10077820
* *   PTPXEXITSTATUS                                                 *  10087810
* ********************************************************************  10097800
*                                                                       10107790
*                                                                       10117780
         AIF   ('&DSECT' EQ 'YES').L000C                                10127770
PTPHINFO DS    0D        PT_THREAD_INFO_EXTENDED header information     10137760
         AGO   .L000D                                                   10147750
.L000C   ANOP                                                           10157740
PTPHINFO DSECT           PT_THREAD_INFO_EXTENDED header information     10167730
.L000D   ANOP                                                           10177720
PTPHINFOBASE DS 0CL0048                                                 10187710
*                                                                       10197700
*      ***************************************************************  10207690
*      *                                                             *  10217680
*      * PtphInfoBase contains information about the process and     *  10227670
*      * pointers to the next array of thread info                      10237660
*      *                                                             *  10247650
*      ***************************************************************  10257640
*                                                                       10267630
*                                                                       10277620
PTPHID   DS    1CL0004   Acronym                                        10287610
PTPHNEXT DS    1AL4      Address of the next PtPhInfo                   10297600
PTPHPTPXOFF DS 1AL4      Offset of first Ptpx in this chunk of storage  10307590
PTPHPID  DS    1FL4      Process id of the threads                      10317580
PTPHPENDINGSIGMASK DS 1BL8 Signals pending at the process               10327570
PTPHBLOCKEDSIGMASK DS 1BL8 blocked signals at process                   10337560
PTPHTHREADNUM DS 1FL4    Total number of threads reported in chain      10347550
PTPHTNUM DS    1CL0004   Threads in the Current buffer                  10357540
PTPHPTPXLEN DS 1FL4      Length of the PtPx in this buffer              10367530
         DS    1FL4      Reserved                                       10377520
PTPHEND  DS    0C                                                       10387510
PTPHINFO_LEN EQU *-PTPHINFO                                             10397500
.L000B   ANOP                                                           10407490
         AIF   ('&DSECT' EQ 'YES').L000F                                10417480
PTPXINFO DS    0D        PT_THREAD_INFO_EXTENDED maps a single entry    10427470
         AGO   .L0010                                                   10437460
.L000F   ANOP                                                           10447450
PTPXINFO DSECT           PT_THREAD_INFO_EXTENDED maps a single entry    10457440
.L0010   ANOP                                                           10467430
PTPXINFOBASE DS 0CL0064                                                 10477420
PTPXNEXT DS    1AL4      Offset to next element                         10487410
PTPXTHID DS    1CL0008   Thread ID                                      10497400
PTPXTCB  DS    1AL4      Tcb address for this process                   10507390
PTPXOTCB DS    1AL4      Otcb address for this process                  10517380
PTPXBLOCKEDSIGMASK DS 1BL8 blocked signals                              10527370
PTPXSTATE DS   0BL4      Thread state flags                             10537360
PTPXSTATE1 DS  0BL1      Thread state flag byte                         10547350
PTPXSTATEACTIVE EQU X'80' 0 = thread is dead                            10557340
*                                                                       10567330
*      ***************************************************************  10577320
*      *                                                             *  10587310
*      * 1 = thread is active                                           10597300
*      *                                                             *  10607290
*      ***************************************************************  10617280
*                                                                       10627270
*                                                                       10637260
PTPXSTATEASYNC EQU X'40' 1 = N/A                                        10647250
*                                                                       10657240
*      ***************************************************************  10667230
*      *                                                             *  10677220
*      * (is also active but not                                        10687210
*      * yet running)                                                   10697200
*      *                                                             *  10707190
*      ***************************************************************  10717180
*                                                                       10727170
*                                                                       10737160
PTPXSTATECANCELPEND EQU X'20'                                           10747150
*                                                                       10757140
*      ***************************************************************  10767130
*      *                                                             *  10777120
*      * 1 = cancel is pending                                          10787110
*      *                                                             *  10797100
*      ***************************************************************  10807090
*                                                                       10817080
*                                                                       10827070
         ORG   PTPXSTATE1+X'00000001'                                   10837060
PTPXSTATE2 DS  1BL1      Thread state flag byte                         10847050
PTPXSTATE3 DS  1BL1      Thread state flag byte                         10857040
PTPXSTATE4 DS  1BL1      Thread state flag byte                         10867030
PTPXKERNELATTR DS 0BL4   Thread kernel attrtes                          10877020
PTPXKERNEL1 DS 0BL1      Thread kernel attribute byte                   10887010
PTPXKERNELDETACH EQU X'80'                                              10897000
*                                                                       10906990
*      ***************************************************************  10916980
*      *                                                             *  10926970
*      * 0 = thread is not detached                                     10936960
*      * 1 = thread is detached                                         10946950
*      *                                                             *  10956940
*      ***************************************************************  10966930
*                                                                       10976920
*                                                                       10986910
PTPXKERNELMEDIUM EQU X'40'                                              10996900
*                                                                       11006890
*      ***************************************************************  11016880
*      *                                                             *  11026870
*      * 0 = thread is heavyweight                                      11036860
*      * 1 = thread is mediumweight                                     11046850
*      *                                                             *  11056840
*      ***************************************************************  11066830
*                                                                       11076820
*                                                                       11086810
PTPXKERNELASYNC EQU X'20'                                               11096800
*                                                                       11106790
*      ***************************************************************  11116780
*      *                                                             *  11126770
*      * 0 = thread is synchronous                                      11136760
*      * 1 = thread is asynchronous                                     11146750
*      *                                                             *  11156740
*      ***************************************************************  11166730
*                                                                       11176720
*                                                                       11186710
PTPXKERNELPTHREAD EQU X'10'                                             11196700
*                                                                       11206690
*      ***************************************************************  11216680
*      *                                                             *  11226670
*      * 1 = thread is created via                                      11236660
*      * pthread create                                                 11246650
*      *                                                             *  11256640
*      ***************************************************************  11266630
*                                                                       11276620
*                                                                       11286610
         ORG   PTPXKERNEL1+X'00000001'                                  11296600
PTPXKERNEL2 DS 0BL1      Thread kernel attribute byte                   11306590
PTPXKERNELHOLD EQU X'80'                                                11316580
*                                                                       11326570
*      ***************************************************************  11336560
*      *                                                             *  11346550
*      * 1 = thread is held                                             11356540
*      *                                                             *  11366530
*      ***************************************************************  11376520
*                                                                       11386510
*                                                                       11396500
         ORG   PTPXKERNEL2+X'00000001'                                  11406490
PTPXKERNEL3 DS 1BL1      Reserved                                       11416480
PTPXKERNEL4 DS 1BL1      Reserved                                       11426470
PTPXEXITSTATUS DS 1CL0004                                               11436460
*                                                                       11446450
*      ***************************************************************  11456440
*      *                                                             *  11466430
*      * Thread exit status if dead                                     11476420
*      * (PTPXStateActive = 0)                                          11486410
*      *                                                             *  11496400
*      ***************************************************************  11506390
*                                                                       11516380
*                                                                       11526370
PTPXPENDINGSIGMASK DS 1BL8 Mask of pending signals is set) (bit 0      *11536360
                         represents signal 1)                           11546350
PTPXPID  DS    1FL4      Process id for this Thid                       11556340
PTPXASID DS    1FL2                                                     11566330
PTPXFLAGS DS   0BL2      Thread related flags                           11576320
PTPXIPT  EQU   X'80'     Ipt Thread                                     11586310
PTPXINCOMPLETE EQU X'40' The reported thread information is incomplete  11596300
         ORG   PTPXFLAGS+X'00000002'                                    11606290
PTPXOAPB DS    1AL4      Pointer to the Oapb                            11616280
         DS    1CL0004   Reserved                                       11626270
PTPXEND  DS    0C                                                       11636260
PTPXINFO_LEN EQU *-PTPXINFO                                             11646250
.L000E   ANOP                                                           11656240
*                                                                       11666230
* ********************************************************************  11676220
* *                                                                  *  11686210
* * Ptrace explain information return structure.                     *  11696200
* *                                                                  *  11706190
* ********************************************************************  11716180
*                                                                       11726170
*                                                                       11736160
         AIF   ('&DSECT' EQ 'YES').L0012                                11746150
PTEXINFO DS    0F                                                       11756140
         AGO   .L0013                                                   11766130
.L0012   ANOP                                                           11776120
PTEXINFO DSECT                                                          11786110
.L0013   ANOP                                                           11796100
PTEXREG1 DS    1FL4      Register 1 at CEEEVDBG entry                   11806090
PTEXREG12 DS   1FL4      Register 12 at CEEEVDBG entry                  11816080
PTEXREG13 DS   1FL4      Register 13 at CEEEVDBG entry                  11826070
PTEXINFO_LEN EQU *-PTEXINFO                                             11836060
.L0011   ANOP                                                           11846050
*                                                                       11856040
* ********************************************************************  11866030
* *                                                                  *  11876020
* * Ptrace program recovery parameters structure.                    *  11886010
* * (This area is provided by the caller)                            *  11896000
* *                                                                  *  11905990
* ********************************************************************  11915980
*                                                                       11925970
*                                                                       11935960
         AIF   ('&DSECT' EQ 'YES').L0015                                11945950
PTPICPARMS DS  0F                                                       11955940
         AGO   .L0016                                                   11965930
.L0015   ANOP                                                           11975920
PTPICPARMS DSECT                                                        11985910
.L0016   ANOP                                                           11995900
PTPICREGISTERS DS 1AL4   Address of GPRs at time of interrupt           12005890
PTPICPSW DS    1AL4      Address of PSW at time of interrupt            12015880
PTPICINTCODE DS 1FL2     Program interrupt code                         12025870
PTPICSIGNUMBER DS 1FL2   Return value indicating signal number that    *12035860
                         should be raised by the caller if the         *12045850
                         PtPICUseSigNum flag is set                     12055840
PTPICFLAGS DS  0BL4      Flags                                          12065830
PTPICICMODIFIED EQU X'80' 0 = The instruction counter portion of the   *12075820
                         PSW pointed to by the PtPICPSW field has not  *12085810
                         been modified 1 = The instruction counter     *12095800
                         portion of the PSW pointed to by the PtPICPSW *12105790
                         field has been modified - continue execution  *12115780
                         at this modified address                       12125770
PTPICREGSMODIFIED EQU X'40' 0 = The registers pointed to by the        *12135760
                         PtPICRegisters field have not been modified 1 *12145750
                         = The registers pointed to by the             *12155740
                         PtPICRegisters field have been modified        12165730
PTPICUSESIGNUM EQU X'20' 1 = Raise the signal number returned in the   *12175720
                         PtPICSigNumber field upon return               12185710
PTPICBYPASSSIG EQU X'10' 1 = Do not raise any signal upon return        12195700
PTPICILCEXISTS EQU X'08' 1 = PtPICILC field is present                  12205690
PTPICHIREGSEXISTS EQU X'04' 1 = The PtPICHiRegisters field is present   12215680
PTPICHIREGSMODIFIED EQU X'02' 0 = The registers pointed to by the      *12225670
                         PtPICHiRegisters field have not been modified *12235660
                         1 = The registers pointed to by the           *12245650
                         PtPICHiRegisters field have been modified      12255640
         DS    1BL.025   Reserved                                       12265630
         ORG   PTPICFLAGS+X'00000004'                                   12275620
PTPICABENDCODE DS 0BL4   Abend code or zero                             12285610
PTPICABENDFLAGS DS 1BL1  Abend code flags                               12295600
PTPICABENDCC DS 1BL3     System completion code (first 12 bits) and    *12305590
                         user completion code (second 12 bits)          12315580
PTPICABENDREASON DS 1FL4 Abend reason code or zero                      12325570
PTPICILC DS    1FL1      Instruction length code (only present if      *12335560
                         PtPICILCExists flag is set)                    12345550
PTPICRESERVED DS 1CL0003 Reserved                                       12355540
PTPICHIREGISTERS DS 1AL4 Address of high GPRs at time of interrupt      12365530
PTPICRSVD DS   1CL0032   Reserved. This area is provided by the caller *12375520
                         and may not be present in old releases of     *12385510
                         code                                           12395500
*                                                                       12405490
* ********************************************************************  12415480
* *                                                                  *  12425470
* * Ptrace request parameter definitions.                            *  12435460
* *                                                                  *  12445450
* ********************************************************************  12455440
*                                                                       12465430
*                                                                       12475420
PT_TRACE_ME EQU 0        Debug this process                             12485410
PT_READ_I EQU  1         Read a full word                               12495400
PT_READ_D EQU  2         Read a full word                               12505390
PT_READ_U EQU  3         Read control info                              12515380
PT_WRITE_I EQU 4         Write a full word                              12525370
PT_WRITE_D EQU 5         Write a full word                              12535360
PT_CONTINUE EQU 7        Continue the process                           12545350
PT_KILL  EQU   8         Terminate the process                          12555340
PT_READ_GPR EQU 11       Read GPR, CR, PSW                              12565330
PT_READ_FPR EQU 12       Read FPR                                       12575320
PT_WRITE_GPR EQU 14      Write GPR, CR, PSW                             12585310
PT_WRITE_FPR EQU 15      Write FPR                                      12595300
PT_READ_BLOCK EQU 17     Read storage                                   12605290
PT_WRITE_BLOCK EQU 19    Write storage                                  12615280
PT_READ_GPRH EQU 20      Read GPRH                                      12625270
PT_WRITE_GPRH EQU 21     Write GPRH                                     12635260
PT_REGHSET EQU 22        Read all GPRHs                                 12645250
PT_ATTACH EQU  30        Attach to a process                            12655240
PT_DETACH EQU  31        Detach from a process                          12665230
PT_REGSET EQU  32        Read all GPRs                                  12675220
PT_REATTACH EQU 33       Reattach to a process                          12685210
PT_LDINFO EQU  34        Read loader info                               12695200
PT_MULTI EQU   35        Multi process mode                             12705190
PT_BLOCKREQ EQU 40       Block request                                  12715180
PT_THREAD_INFO EQU 60    Read thread info                               12725170
PT_THREAD_MODIFY EQU 61  ***********************************************12735160
                         *************** Modify thread kernel          *12745150
                         information ***********************************12755140
                         ***************************                    12765130
PT_THREAD_READ_FOCUS EQU 62 ********************************************12775120
                         ****************** Read current focus thread  *12785110
                         ID ********************************************12795100
                         ******************                             12805090
PT_THREAD_WRITE_FOCUS EQU 63 *******************************************12815080
                         ******************* Modify current focus      *12825070
                         thread ID *************************************12835060
                         *************************                      12845050
PT_THREAD_HOLD EQU 64    ***********************************************12855040
                         *************** Modify thread hold state ******12865030
                         ***********************************************12875020
                         **********                                     12885010
PT_THREAD_SIGNAL EQU 65  ***********************************************12895000
                         *************** Queue a signal for a thread ***12904990
                         ***********************************************12914980
                         *************                                  12924970
PT_EXPLAIN EQU 66        ***********************************************12934960
                         *************** Return extended event info ****12944950
                         ***********************************************12954940
                         ************                                   12964930
PT_EVENTS EQU  67        ***********************************************12974920
                         *************** Modify extended events list ***12984910
                         ***********************************************12994900
                         *************                                  13004890
PT_THREAD_INFO_EXTENDED EQU 68 *****************************************13014880
                         ********************* Read extended thread    *13024870
                         info ******************************************13034860
                         ********************                           13044850
PT_REATTACH2 EQU 71      ***********************************************13054840
                         *************** Reattach to a process         *13064830
                         (extended) ************************************13074820
                         **************************                     13084810
PT_CAPTURE EQU 72        ***********************************************13094800
                         *************** Capture debugged storage ******13104790
                         ***********************************************13114780
                         **********                                     13124770
PT_UNCAPTURE EQU 73      ***********************************************13134760
                         *************** Uncapture debugged storage ****13144750
                         ***********************************************13154740
                         ************                                   13164730
PT_EXTENDED_EVENT EQU 98 ***********************************************13174720
                         *************** Debug an extended event *******13184710
                         ***********************************************13194700
                         *********                                      13204690
PT_RECOVER EQU 99        Debug a program check                          13214680
*                                                                       13224670
* ********************************************************************  13234660
* *                                                                  *  13244650
* * Ptrace register definitions.  The following are defined:         *  13254640
* *                                                                  *  13264630
* * - General purpose registers                                      *  13274620
* * - Floating point registers                                       *  13284610
* * - PSW registers                                                  *  13294600
* * - Control registers                                              *  13304590
* * - General Purpose High Registers                                    13314580
* *                                                                  *  13324570
* ********************************************************************  13334560
*                                                                       13344550
*                                                                       13354540
PT_GPR0  EQU   0         General purpose register 0                     13364530
PT_GPR1  EQU   1         General purpose register 1                     13374520
PT_GPR2  EQU   2         General purpose register 2                     13384510
PT_GPR3  EQU   3         General purpose register 3                     13394500
PT_GPR4  EQU   4         General purpose register 4                     13404490
PT_GPR5  EQU   5         General purpose register 5                     13414480
PT_GPR6  EQU   6         General purpose register 6                     13424470
PT_GPR7  EQU   7         General purpose register 7                     13434460
PT_GPR8  EQU   8         General purpose register 8                     13444450
PT_GPR9  EQU   9         General purpose register 9                     13454440
PT_GPR10 EQU   10        General purpose register 10                    13464430
PT_GPR11 EQU   11        General purpose register 11                    13474420
PT_GPR12 EQU   12        General purpose register 12                    13484410
PT_GPR13 EQU   13        General purpose register 13                    13494400
PT_GPR14 EQU   14        General purpose register 14                    13504390
PT_GPR15 EQU   15        General purpose register 15                    13514380
PT_FPR0  EQU   16        Floating point register 0                      13524370
PT_FPR1  EQU   17        Floating point register 1                      13534360
PT_FPR2  EQU   18        Floating point register 2                      13544350
PT_FPR3  EQU   19        Floating point register 3                      13554340
PT_FPR4  EQU   20        Floating point register 4                      13564330
PT_FPR5  EQU   21        Floating point register 5                      13574320
PT_FPR6  EQU   22        Floating point register 6                      13584310
PT_FPR7  EQU   23        Floating point register 7                      13594300
PT_FPR8  EQU   24        Floating point register 8                      13604290
PT_FPR9  EQU   25        Floating point register 9                      13614280
PT_FPR10 EQU   26        Floating point register 10                     13624270
PT_FPR11 EQU   27        Floating point register 11                     13634260
PT_FPR12 EQU   28        Floating point register 12                     13644250
PT_FPR13 EQU   29        Floating point register 13                     13654240
PT_FPR14 EQU   30        Floating point register 14                     13664230
PT_FPR15 EQU   31        Floating point register 15                     13674220
PT_FPC   EQU   32        Floating point control register                13684210
PT_PSW   EQU   40        PSW                                            13694200
PT_PSW0  EQU   40        Left half of the PSW                           13704190
PT_PSW1  EQU   41        Right half of the PSW                          13714180
PT_CR0   EQU   42        Control register 0                             13724170
PT_CR1   EQU   43        Control register 1                             13734160
PT_CR2   EQU   44        Control register 2                             13744150
PT_CR3   EQU   45        Control register 3                             13754140
PT_CR4   EQU   46        Control register 4                             13764130
PT_CR5   EQU   47        Control register 5                             13774120
PT_CR6   EQU   48        Control register 6                             13784110
PT_CR7   EQU   49        Control register 7                             13794100
PT_CR8   EQU   50        Control register 8                             13804090
PT_CR9   EQU   51        Control register 9                             13814080
PT_CR10  EQU   52        Control register 10                            13824070
PT_CR11  EQU   53        Control register 11                            13834060
PT_CR12  EQU   54        Control register 12                            13844050
PT_CR13  EQU   55        Control register 13                            13854040
PT_CR14  EQU   56        Control register 14                            13864030
PT_CR15  EQU   57        Control register 15                            13874020
PT_GPRH0 EQU   58        GP High register 0                             13884010
PT_GPRH1 EQU   59        GP High register 1                             13894000
PT_GPRH2 EQU   60        GP High register 2                             13903990
PT_GPRH3 EQU   61        GP High register 3                             13913980
PT_GPRH4 EQU   62        GP High register 4                             13923970
PT_GPRH5 EQU   63        GP High register 5                             13933960
PT_GPRH6 EQU   64        GP High register 6                             13943950
PT_GPRH7 EQU   65        GP High register 7                             13953940
PT_GPRH8 EQU   66        GP High register 8                             13963930
PT_GPRH9 EQU   67        GP High register 9                             13973920
PT_GPRH10 EQU  68        GP High register 10                            13983910
PT_GPRH11 EQU  69        GP High register 11                            13993900
PT_GPRH12 EQU  70        GP High register 12                            14003890
PT_GPRH13 EQU  71        GP High register 13                            14013880
PT_GPRH14 EQU  72        GP High register 14                            14023870
PT_GPRH15 EQU  73        GP High register 15                            14033860
*                                                                       14043850
* ********************************************************************  14053840
* *                                                                  *  14063830
* * Ptrace User Area offset definitions.  Offsets for signal catcher *  14073820
* * information are defined by the limits below.  Any offset between *  14083810
* * the minimum and maximum signal numbers is a request for signal   *  14093800
* * catcher information for that signal number (i.e. offset 3 means  *  14103790
* * signal catcher information for signal number 3).                 *  14113780
* *                                                                  *  14123770
* ********************************************************************  14133760
*                                                                       14143750
*                                                                       14153740
PTUAREA#MINSIG EQU 1     Lowest signal number                           14163730
PTUAREA#MAXSIG EQU 1024  Highest signal number                          14173720
PTUAREA#INTCODE EQU 1025 Request for program interrupt code             14183710
PTUAREA#ABENDCC EQU 1026 Request for abend completion code              14193700
PTUAREA#ABENDRC EQU 1027 Request for abend reason code                  14203690
PTUAREA#SIGCODE EQU 1028 Request for signal code                        14213680
PTUAREA#ILC EQU 1029     Request for instruction length code            14223670
PTUAREA#PRFLAGS EQU 1030 Request for process flags                      14233660
*                                                                       14243650
* ********************************************************************  14253640
* *                                                                  *  14263630
* * Ptrace miscellaneous definitions.                                *  14273620
* *                                                                  *  14283610
* ********************************************************************  14293600
*                                                                       14303590
*                                                                       14313580
PTCONTNORM EQU 1         Continue normally (continue address not       *14323570
                         changed) for a PT_CONTINUE request             14333560
PTNOSTICKYPGM EQU 1      Main program of process is not sticky bit     *14343550
                         program. Returned on PTUAREA#PRFLAGS request   14353540
PTMAXIMUMLENGTH EQU 64000 Maximum storage length                        14363530
PTLD#FIXEDLEN EQU 32     Length of PtLDInfo fixed area                  14373520
PTPT#LENGTH EQU 48       Length of PtptInfo fixed area                  14383510
PTPH#LENGTH EQU 48       Length of PtPhInfo fixed area on double word  *14393500
                         boundary                                       14403490
PTPX#LENGTH EQU 64       Length of PtpxInfo fixed area on double word  *14413480
                         boundary                                       14423470
PTEX#LENGTH EQU 12       Length of PtExInfo                             14433460
PTPIC#LENGTH1 EQU 32     Length of PtPicParms if PtPicHiRegsExists =   *14443450
                         OFF                                            14453440
PTPIC#LENGTH EQU 64      Length of PtPICParms                           14463430
PTPICPARMS_LEN EQU *-PTPICPARMS                                         14473420
.L0014   ANOP                                                           14483410
*                                                                       14493400
* ********************************************************************  17700000
* *                                                                  *  17750000
* * Ptrace PT_BlockReq structure.  This request allows the user to   *  17800000
* * block several different Ptrace requests into a single call to    *  17850000
* * Ptrace.  The block request structures mapped below must be       *  17900000
* * contained in a single large area.  This area is pointed to by    *  17950000
* * the Ptrace Address parameter and its length is contained in the  *  18000000
* * Ptrace Data parameter.  The PtBRInfo structure must be at offset *  18050000
* * zero into the provided area.                                     *  18100000
* *                                                                  *  18150000
* * Offsets are used to locate all relevant areas so that the Ptrace *  18200000
* * block request input may be relocated.  All offsets are relative  *  18250000
* * to the main input, the PtBRInfo area.  A given request block,    *  18300000
* * such as the PtBR_GPR structure, may be found using the           *  18350000
* * PtBRInfo address + PtBRReqBlkOff(x).                             *  18400000
* *                                                                  *  18450000
* * Only certain requests may be blocked into a single call to       *  18500000
* * Ptrace.  The requests that may be blocked are --                 *  18550000
* *   PT_READ_GPR                                                    *  18600000
* *   PT_WRITE_GPR                                                   *  18650000
* *   PT_READ_FPR                                                    *  18700000
* *   PT_WRITE_FPR                                                   *  18750000
* *   PT_READ_GPRH                                                   *  18766600
* *   PT_WRITE_GPRH                                                  *  18783200
* *   PT_READ_U                                                      *  18800000
* *   PT_READ_D                                                      *  18850000
* *   PT_READ_I                                                      *  18900000
* *   PT_WRITE_D                                                     *  18950000
* *   PT_WRITE_I                                                     *  19000000
* *   PT_READ_BLOCK                                                  *  19050000
* *   PT_WRITE_BLOCK.                                                *  19100000
* *                                                                     19150000
* ********************************************************************  19200000
*                                                                       19250000
*                                                                       19300000
         AIF   ('&DSECT' EQ 'YES').L0018                                19399990
PTBRINFO DS    0F                                                       19449980
         AGO   .L0019                                                   19499970
.L0018   ANOP                                                           19549960
PTBRINFO DSECT                                                          19599950
.L0019   ANOP                                                           19649940
PTBRFIXEDAREA DS 0CL0016                                                19699930
PTBRNUMREQS DS 1FL4      Number of requests in PtBRReqs                 19749920
         DS    1CL0012   Reserved                                       19799910
PTBRREQS DS    0CL0016   requests                                       19849900
PTBRTYPE DS    1FL4      Type of request. For example, PT_READ_BLOCK.  *19899890
                         This entry is ignored if this field is zero    19949880
PTBRSTATUS DS  1FL4      Status from request. Same as reasoncode on    *19999870
                         individual call of same type                   20049860
PTBRREQBLKOFF DS 1FL4    Offset to request block further defining      *20099850
                         request and whose format is dependant on the  *20149840
                         request type                                   20199830
         DS    1CL0004   reserved                                       20249820
PTBRINFO_LEN EQU *-PTBRINFO                                             20299810
.L0017   ANOP                                                           20349800
*                                                                       20400000
* ********************************************************************  20450000
* * Structure for PT_Read_GPR and PT_Write_GPR.                      *  20500000
* ********************************************************************  20550000
*                                                                       20600000
*                                                                       20650000
         AIF   ('&DSECT' EQ 'YES').L001B                                20739990
PTBR_GPR DS    0F                                                       20779980
         AGO   .L001C                                                   20819970
.L001B   ANOP                                                           20859960
PTBR_GPR DSECT                                                          20899950
.L001C   ANOP                                                           20939940
PTBR_GPR_CNTLGPR DS 0BL2 Only used on write request                     20979930
PTBR_GPR_CNTLGPR1 DS 0BL1                                               21019920
PTBR_GPR_WGPR0 EQU X'80' Write content of GPR 0                         21059910
PTBR_GPR_WGPR1 EQU X'40' Write content of GPR 1                         21099900
PTBR_GPR_WGPR2 EQU X'20' Write content of GPR 2                         21139890
PTBR_GPR_WGPR3 EQU X'10' Write content of GPR 3                         21179880
PTBR_GPR_WGPR4 EQU X'08' Write content of GPR 4                         21219870
PTBR_GPR_WGPR5 EQU X'04' Write content of GPR 5                         21259860
PTBR_GPR_WGPR6 EQU X'02' Write content of GPR 6                         21299850
PTBR_GPR_WGPR7 EQU X'01' Write content of GPR 7                         21339840
         ORG   PTBR_GPR_CNTLGPR1+X'00000001'                            21379830
PTBR_GPR_CNTLGPR2 DS 0BL1                                               21419820
PTBR_GPR_WGPR8 EQU X'80' Write content of GPR 8                         21459810
PTBR_GPR_WGPR9 EQU X'40' Write content of GPR 9                         21499800
PTBR_GPR_WGPR10 EQU X'20' Write content of GPR 10                       21539790
PTBR_GPR_WGPR11 EQU X'10' Write content of GPR 11                       21579780
PTBR_GPR_WGPR12 EQU X'08' Write content of GPR 12                       21619770
PTBR_GPR_WGPR13 EQU X'04' Write content of GPR 13                       21659760
PTBR_GPR_WGPR14 EQU X'02' Write content of GPR 14                       21699750
PTBR_GPR_WGPR15 EQU X'01' Write content of GPR 15                       21739740
         ORG   PTBR_GPR_CNTLGPR+X'00000002'                             21779730
PTBR_GPR_CNTLMISC DS 0BL2 Only used on write request                    21819720
PTBR_GPR_WPSW EQU X'80'  Write content of PSW, word 2                   21859710
         ORG   PTBR_GPR_CNTLMISC+X'00000002'                            21899700
         DS    1CL0012   Reserved                                       21939690
PTBR_GPR_GPRS DS 0CL0064 General purpose registers                      21979680
PTBR_GPR_GPR00 DS 1FL4   GPR 00                                         22019670
PTBR_GPR_GPR01 DS 1FL4   GPR 01                                         22059660
PTBR_GPR_GPR02 DS 1FL4   GPR 02                                         22099650
PTBR_GPR_GPR03 DS 1FL4   GPR 03                                         22139640
PTBR_GPR_GPR04 DS 1FL4   GPR 04                                         22179630
PTBR_GPR_GPR05 DS 1FL4   GPR 05                                         22219620
PTBR_GPR_GPR06 DS 1FL4   GPR 06                                         22259610
PTBR_GPR_GPR07 DS 1FL4   GPR 07                                         22299600
PTBR_GPR_GPR08 DS 1FL4   GPR 08                                         22339590
PTBR_GPR_GPR09 DS 1FL4   GPR 09                                         22379580
PTBR_GPR_GPR10 DS 1FL4   GPR 10                                         22419570
PTBR_GPR_GPR11 DS 1FL4   GPR 11                                         22459560
PTBR_GPR_GPR12 DS 1FL4   GPR 12                                         22499550
PTBR_GPR_GPR13 DS 1FL4   GPR 13                                         22539540
PTBR_GPR_GPR14 DS 1FL4   GPR 14                                         22579530
PTBR_GPR_GPR15 DS 1FL4   GPR 15                                         22619520
PTBR_GPR_CRS DS 0CL0064  Control registers. May be read but will not   *22659510
                         be written                                     22699500
PTBR_GPR_CR00 DS 1FL4    CR 00                                          22739490
PTBR_GPR_CR01 DS 1FL4    CR 01                                          22779480
PTBR_GPR_CR02 DS 1FL4    CR 02                                          22819470
PTBR_GPR_CR03 DS 1FL4    CR 03                                          22859460
PTBR_GPR_CR04 DS 1FL4    CR 04                                          22899450
PTBR_GPR_CR05 DS 1FL4    CR 05                                          22939440
PTBR_GPR_CR06 DS 1FL4    CR 06                                          22979430
PTBR_GPR_CR07 DS 1FL4    CR 07                                          23019420
PTBR_GPR_CR08 DS 1FL4    CR 08                                          23059410
PTBR_GPR_CR09 DS 1FL4    CR 09                                          23099400
PTBR_GPR_CR10 DS 1FL4    CR 10                                          23139390
PTBR_GPR_CR11 DS 1FL4    CR 11                                          23179380
PTBR_GPR_CR12 DS 1FL4    CR 12                                          23219370
PTBR_GPR_CR13 DS 1FL4    CR 13                                          23259360
PTBR_GPR_CR14 DS 1FL4    CR 14                                          23299350
PTBR_GPR_CR15 DS 1FL4    CR 15                                          23339340
PTBR_GPR_PSW DS 0CL0008  PSW. May be read but only the rightmost 4     *23379330
                         bytes (word 2) will be written                 23419320
PTBR_GPR_PSW_W1 DS 1CL0004 PSW word 1.                                  23459310
PTBR_GPR_PSW_W2 DS 1CL0004 PSW word 2                                   23499300
PTBR_GPR_LEN EQU *-PTBR_GPR                                             23539290
.L001A   ANOP                                                           23579280
*                                                                       24300000
* ********************************************************************  24350000
* * Structure for PT_Read_FPR and PT_Write_FPR.                      *  24400000
* ********************************************************************  24450000
*                                                                       24500000
*                                                                       24550000
         AIF   ('&DSECT' EQ 'YES').L001E                                24639990
PTBR_FPR DS    0F                                                       24679980
         AGO   .L001F                                                   24719970
.L001E   ANOP                                                           24759960
PTBR_FPR DSECT                                                          24799950
.L001F   ANOP                                                           24839940
PTBR_FPR_CNTLFPR DS 0BL2 Only used on write request                     24879930
PTBR_FPR_CNTLFPR1 DS 0BL1                                               24919920
PTBR_FPR_WFPR0 EQU X'80' Write content of FPR 0                         24959910
PTBR_FPR_WFPR1 EQU X'40' Write content of FPR 1                         24999900
PTBR_FPR_WFPR2 EQU X'20' Write content of FPR 2                         25039890
PTBR_FPR_WFPR3 EQU X'10' Write content of FPR 3                         25079880
PTBR_FPR_WFPR4 EQU X'08' Write content of FPR 4                         25119870
PTBR_FPR_WFPR5 EQU X'04' Write content of FPR 5                         25159860
PTBR_FPR_WFPR6 EQU X'02' Write content of FPR 6                         25199850
PTBR_FPR_WFPR7 EQU X'01' Write content of FPR 7                         25239840
         ORG   PTBR_FPR_CNTLFPR1+X'00000001'                            25279830
PTBR_FPR_CNTLFPR2 DS 0BL1                                               25319820
PTBR_FPR_WFPR8 EQU X'80' Write content of FPR 8                         25359810
PTBR_FPR_WFPR9 EQU X'40' Write content of FPR 9                         25399800
PTBR_FPR_WFPR10 EQU X'20' Write content of FPR 10                       25439790
PTBR_FPR_WFPR11 EQU X'10' Write content of FPR 11                       25479780
PTBR_FPR_WFPR12 EQU X'08' Write content of FPR 12                       25519770
PTBR_FPR_WFPR13 EQU X'04' Write content of FPR 13                       25559760
PTBR_FPR_WFPR14 EQU X'02' Write content of FPR 14                       25599750
PTBR_FPR_WFPR15 EQU X'01' Write content of FPR 15                       25639740
         ORG   PTBR_FPR_CNTLFPR+X'00000002'                             25679730
PTBR_FPR_CNTLMISC DS 0BL2 Only used on write request                    25719720
PTBR_FPR_WFPC EQU X'80'  Write content of FPC                           25759710
         ORG   PTBR_FPR_CNTLMISC+X'00000002'                            25799700
         DS    1CL0012   Reserved                                       25839690
PTBR_FPR_FPRS DS 0CL0128 Floating point registers                       25879680
PTBR_FPR_FPR00 DS 1CL0008 FPR 00                                        25919670
PTBR_FPR_FPR01 DS 1CL0008 FPR 01                                        25959660
PTBR_FPR_FPR02 DS 1CL0008 FPR 02                                        25999650
PTBR_FPR_FPR03 DS 1CL0008 FPR 03                                        26039640
PTBR_FPR_FPR04 DS 1CL0008 FPR 04                                        26079630
PTBR_FPR_FPR05 DS 1CL0008 FPR 05                                        26119620
PTBR_FPR_FPR06 DS 1CL0008 FPR 06                                        26159610
PTBR_FPR_FPR07 DS 1CL0008 FPR 07                                        26199600
PTBR_FPR_FPR08 DS 1CL0008 FPR 08                                        26239590
PTBR_FPR_FPR09 DS 1CL0008 FPR 09                                        26279580
PTBR_FPR_FPR10 DS 1CL0008 FPR 10                                        26319570
PTBR_FPR_FPR11 DS 1CL0008 FPR 11                                        26359560
PTBR_FPR_FPR12 DS 1CL0008 FPR 12                                        26399550
PTBR_FPR_FPR13 DS 1CL0008 FPR 13                                        26439540
PTBR_FPR_FPR14 DS 1CL0008 FPR 14                                        26479530
PTBR_FPR_FPR15 DS 1CL0008 FPR 15                                        26519520
PTBR_FPR_FPC DS 1CL0004  Floating Point Control Register                26559510
PTBR_FPR_LEN EQU *-PTBR_FPR                                             26599500
.L001D   ANOP                                                           26639490
*                                                                       27100000
* ********************************************************************  27150000
* * Structure for PT_Read_GPRH PT_Write_GPRH.                           27151190
* ********************************************************************  27151600
*                                                                       27152400
*                                                                       27153200
         AIF   ('&DSECT' EQ 'YES').L0021                                27154790
PTBR_GPRH DS   0F                                                       27155580
         AGO   .L0022                                                   27156370
.L0021   ANOP                                                           27157160
PTBR_GPRH DSECT                                                         27157950
.L0022   ANOP                                                           27158740
PTBR_GPRH_CNTLGPRH DS 0BL2 Only used on write request                   27159530
PTBR_GPRH_CNTLGPRH1 DS 0BL1                                             27160320
PTBR_GPRH_WGPRH0 EQU X'80' Write content of GPRH 0                      27161110
PTBR_GPRH_WGPRH1 EQU X'40' Write content of GPRH 1                      27161900
PTBR_GPRH_WGPRH2 EQU X'20' Write content of GPRH 2                      27162690
PTBR_GPRH_WGPRH3 EQU X'10' Write content of GPRH 3                      27163480
PTBR_GPRH_WGPRH4 EQU X'08' Write content of GPRH 4                      27164270
PTBR_GPRH_WGPRH5 EQU X'04' Write content of GPRH 5                      27165060
PTBR_GPRH_WGPRH6 EQU X'02' Write content of GPRH 6                      27165850
PTBR_GPRH_WGPRH7 EQU X'01' Write content of GPRH 7                      27166640
         ORG   PTBR_GPRH_CNTLGPRH1+X'00000001'                          27167430
PTBR_GPRH_CNTLGPRH2 DS 0BL1                                             27168220
PTBR_GPRH_WGPRH8 EQU X'80' Write content of GPRH 8                      27169010
PTBR_GPRH_WGPRH9 EQU X'40' Write content of GPRH 9                      27169800
PTBR_GPRH_WGPRH10 EQU X'20' Write content of GPRH10                     27170590
PTBR_GPRH_WGPRH11 EQU X'10' Write content of GPRH11                     27171380
PTBR_GPRH_WGPRH12 EQU X'08' Write content of GPRH12                     27172170
PTBR_GPRH_WGPRH13 EQU X'04' Write content of GPRH13                     27172960
PTBR_GPRH_WGPRH14 EQU X'02' Write content of GPRH14                     27173750
PTBR_GPRH_WGPRH15 EQU X'01' Write content of GPRH15                     27174540
         ORG   PTBR_GPRH_CNTLGPRH+X'00000002'                           27175330
PTBR_GPRH_CNTLMISC DS 1BL2 Only used on write request                   27176120
         DS    1CL0012   Reserved                                       27176910
PTBR_GPRH_GPRHS DS 0CL0064 GP High registers.                           27177700
PTBR_GPRH_GPRH00 DS 1FL4 GPRH 00                                        27178490
PTBR_GPRH_GPRH01 DS 1FL4 GPRH 01                                        27179280
PTBR_GPRH_GPRH02 DS 1FL4 GPRH 02                                        27180070
PTBR_GPRH_GPRH03 DS 1FL4 GPRH 03                                        27180860
PTBR_GPRH_GPRH04 DS 1FL4 GPRH 04                                        27181650
PTBR_GPRH_GPRH05 DS 1FL4 GPRH 05                                        27182440
PTBR_GPRH_GPRH06 DS 1FL4 GPRH 06                                        27183230
PTBR_GPRH_GPRH07 DS 1FL4 GPRH 07                                        27184020
PTBR_GPRH_GPRH08 DS 1FL4 GPRH 08                                        27184810
PTBR_GPRH_GPRH09 DS 1FL4 GPRH 09                                        27185600
PTBR_GPRH_GPRH10 DS 1FL4 GPRH 10                                        27186390
PTBR_GPRH_GPRH11 DS 1FL4 GPRH 11                                        27187180
PTBR_GPRH_GPRH12 DS 1FL4 GPRH 12                                        27187970
PTBR_GPRH_GPRH13 DS 1FL4 GPRH 13                                        27188760
PTBR_GPRH_GPRH14 DS 1FL4 GPRH 14                                        27189550
PTBR_GPRH_GPRH15 DS 1FL4 GPRH 15                                        27190340
         DS    1CL0008   Reserved                                       27191130
PTBR_GPRH_LEN EQU *-PTBR_GPRH                                           27191920
.L0020   ANOP                                                           27192710
*                                                                       27194000
* ********************************************************************  27194800
* * Structure for PT_Read_Block and PT_Write_Block.                  *  27200000
* ********************************************************************  27250000
*                                                                       27300000
*                                                                       27350000
         AIF   ('&DSECT' EQ 'YES').L0024                                27439990
PTBR_BLOCK DS  0F                                                       27479980
         AGO   .L0025                                                   27519970
.L0024   ANOP                                                           27559960
PTBR_BLOCK DSECT                                                        27599950
.L0025   ANOP                                                           27639940
PTBR_BLOCK_AADDR DS 1AL4 address of area to read                        27679930
PTBR_BLOCK_ALEN DS 1FL4  length of area to read                         27719920
         DS    1CL0008   Reserved                                       27759910
PTBR_BLOCK_BUF DS 0C     area to read into or write from. Must be at   *27799900
                         least PtBR_Block_ALen bytes large              27839890
PTBR_BLOCK_LEN EQU *-PTBR_BLOCK                                         27879880
.L0023   ANOP                                                           27919870
*                                                                       28050000
* ********************************************************************  28100000
* * Structure for PT_Read_D and PT_Write_D.                          *  28150000
* ********************************************************************  28200000
*                                                                       28250000
*                                                                       28300000
         AIF   ('&DSECT' EQ 'YES').L0027                                28389990
PTBR_D   DS    0F                                                       28429980
         AGO   .L0028                                                   28469970
.L0027   ANOP                                                           28509960
PTBR_D   DSECT                                                          28549950
.L0028   ANOP                                                           28589940
PTBR_D_WORDPTR DS 1AL4   Address of fullword of data                    28629930
PTBR_D_WORD DS 1FL4      fullword of data at specified address for a   *28669920
                         read request or the data to be written to the *28709910
                         specified address for a write request          28749900
PTBR_D_LEN EQU *-PTBR_D                                                 28789890
.L0026   ANOP                                                           28829880
*                                                                       28950000
* ********************************************************************  29000000
* * Structure for PT_Read_I and PT_Write_I.                          *  29050000
* ********************************************************************  29100000
*                                                                       29150000
*                                                                       29200000
         AIF   ('&DSECT' EQ 'YES').L002A                                29289990
PTBR_I   DS    0F                                                       29329980
         AGO   .L002B                                                   29369970
.L002A   ANOP                                                           29409960
PTBR_I   DSECT                                                          29449950
.L002B   ANOP                                                           29489940
PTBR_I_WORDPTR DS 1AL4   Address of fullword of program data            29529930
PTBR_I_WORD DS 1FL4      fullword of program data at specified address *29569920
                         for a read request or the program data to be  *29609910
                         written to the specified address for a write  *29649900
                         request                                        29689890
PTBR_I_LEN EQU *-PTBR_I                                                 29729880
.L0029   ANOP                                                           29769870
*                                                                       29900000
* ********************************************************************  29950000
* * Structure for PT_Read_U.                                         *  30000000
* ********************************************************************  30050000
*                                                                       30100000
*                                                                       30150000
         AIF   ('&DSECT' EQ 'YES').L002D                                30599990
PTBR_U   DS    0F                                                       30999980
         AGO   .L002E                                                   31399970
.L002D   ANOP                                                           31799960
PTBR_U   DSECT                                                          32199950
.L002E   ANOP                                                           32599940
PTBR_U_NUMOFFSETS DS 1FL4 Number of entries in offset/control word     *32999930
                         array                                          33399920
         DS    1CL0004   Reserved                                       33799910
PTBR_U_OWARRAY DS 0CL0008 Array of offsets and control words            34199900
PTBR_U_OFFSET DS 1FL4    Offset of fullword of control information      34599890
PTBR_U_WORD DS 1FL4      fullword of control information from user     *34999880
                         area in the debugged process                   35399870
PTBR_U_LEN EQU *-PTBR_U                                                 35799860
.L002C   ANOP                                                           36199850
         AIF   ('&LIST' EQ 'YES').P4                                    36599840
.P3      ANOP                                                           36999830
         POP   PRINT                                                    38150000
.P4      ANOP                                                           38259990
.P_EXIT  ANOP                                                           38319980
         MEND                                                           38400000
  Terminating PL/X comment                                          */  38450000
**/ BPXYPTRC_2:;                                                        38500990
*%PTRCPLS : ;                                                           38501980
*%IF PTLDBASE='' %THEN                                                  38502970
*  %DO;                                                                 38503960
*    %PTLDBASE='Based' ;                                                38504950
*  %END;                                                                38505940
* %IF PTLDBASE='LOCAL' %THEN                                            38506930
*   %DO;                                                                38507920
*    %PTLDBASE='FIXED(32) Bdy(Word)' ;                                  38508910
*   %END;                                                               38509900
*                                                                       38510890
*%IF PTPTBASE='' %THEN                                                  38511880
*  %DO;                                                                 38512870
*    %PTPTBASE='Based' ;                                                38513860
*  %END;                                                                38514850
* %IF PTPTBASE='LOCAL' %THEN                                            38515840
*   %DO;                                                                38516830
*    %PTPTBASE='FIXED(32) Bdy(Word)' ;                                  38517820
*   %END;                                                               38518810
*                                                                       38519800
*%IF PTPXBASE='' %THEN                                                  38520790
*  %DO;                                                      /* @02A*/  38521780
*    %PTPXBASE='Based' ;                                     /* @02A*/  38522770
*  %END;                                                     /* @02A*/  38523760
* %IF PTPXBASE='LOCAL' %THEN                                            38524750
*   %DO;                                                     /* @02A*/  38525740
*    %PTPXBASE='FIXED(32) Bdy(DWord)' ;                      /* @02A*/  38526730
*   %END;                                                    /* @02A*/  38527720
*                                                                       38528710
*%IF PTPhHEAD='' %THEN                                                  38529700
*  %DO;                                                      /* @02A*/  38530690
*    %PTPHHEAD='Based' ;                                     /* @02A*/  38531680
*  %END;                                                     /* @02A*/  38532670
* %IF PTPHHEAD='LOCAL' %THEN                                            38533660
*   %DO;                                                     /* @02A*/  38534650
*    %PTPHHEAD='FIXED(32) Bdy(DWord)' ;                      /* @02A*/  38535640
*   %END;                                                    /* @02A*/  38536630
*                                                                       38537620
*%IF PTEXBASE='' %THEN                                                  38538610
*  %DO;                                                                 38539600
*    %PTEXBASE='Based' ;                                                38540590
*  %END;                                                                38541580
* %IF PTEXBASE='LOCAL' %THEN                                            38542570
*   %DO;                                                                38543560
*    %PTEXBASE='FIXED(32) Bdy(Word)' ;                                  38544550
*   %END;                                                               38545540
*                                                                       38546530
*%IF PTPIBASE='' %THEN                                                  38547520
*  %DO;                                                                 38548510
*    %PTPIBASE='Based' ;                                                38549500
*  %END;                                                                38550490
* %IF PTPIBASE='LOCAL' %THEN                                            38551480
*   %DO;                                                                38552470
*    %PTPIBASE='FIXED(32) Bdy(Word)' ;                                  38553460
*   %END;                                                               38554450
*                                                                       38555440
*%IF PTBRBASE='' %THEN                                        /* @D7A*/ 38556430
*  %DO;                                                       /* @D7A*/ 38557420
*    %PTBRBASE='Based' ;                                      /* @D7A*/ 38558410
*  %END;                                                      /* @D7A*/ 38559400
*                                                                       38560390
*/********************************************************************/ 38561380
*/*                                                                  */ 38562370
*/* Ptrace PT_LDINFO return structure.  Note that this maps one      */ 38563360
*/* element, corresponding to one load module.  Each element         */ 38564350
*/* consists of a fixed portion, and a variable portion (the path    */ 38565340
*/* name and member name character strings).  The character strings  */ 38566330
*/* are terminated with a null value (X'00').  Each loader info      */ 38567320
*/* element immediately follows the last null terminator for the     */ 38568310
*/* previous element.  The first full word of each element is an     */ 38569300
*/* offset to the next element.  Thus, the start of the next element */ 38570290
*/* can be specified as follows:                                     */ 38571280
*/*                                                                  */ 38572270
*/*     NextLDInfo = Addr(PtLDInfo)+PtLDInfoNext                     */ 38573260
*/*                                                                  */ 38574250
*/********************************************************************/ 38575240
*DCL                             /* PT_LDINFO return structure       */ 38576230
* 1 PtLDInfo          PTLDBASE,                                         38577220
*  3 PtLDFixedArea,                                                     38578210
*   5 PtLDInfoNext    Fixed(32), /* Offset to next element           */ 38579200
*   5 PtLDInfoFD      Fixed(32), /* File descriptor for this load       38580190
*                                   module (not used)                */ 38581180
*   5 PtLDTextOrg       Ptr(31), /* Program text origin address         38582170
*                                   (i.e. load point address)        */ 38583160
*   5 PtLDTextSize    Fixed(32), /* Length of text                   */ 38584150
*   5 PtLDTextSubpool   Char(1), /* Subpool where text is loaded     */ 38585140
*   5 PtLDTextFlags      Bit(8), /* Text related flags               */ 38586130
*    7 PtLDTextWrite     Bit(1), /* 0 = text can be read but not        38587120
*                                   written into                        38588110
*                                   1 = text can be read and written    38589100
*                                   into                             */ 38590090
*    7 PtLDTextMVS       Bit(1), /* 0 = File system load module         38591080
*                                   1 = MVS load module          @P2A*/ 38592070
*    7 PtLDTextExt       Bit(1), /* 0 = Only 1 text extent              38593060
*                                   1 = More than one text extent.      38594050
*                                   First extent is in this element,    38595040
*                                   extent 2 - n are in the PtLDInfoExt 38596030
*                                   area                         @P3A*/ 38597020
*    7 *                 Bit(5), /* Reserved                     @P3C*/ 38598010
*   5 PtLDOffExt      Fixed(16), /* Offset from this element to element 38599000
*                                   extension. 0 if there is no         38599990
*                                   extension for this element   @P3C*/ 38600980
*   5 PtLDDataOrg       Ptr(31), /* Program data origin address         38601970
*                                   (not used)                       */ 38602960
*   5 PtLDDataSize    Fixed(32), /* Length of data (not used)        */ 38603950
*   5 PtLDDataSubpool  Fixed(8), /* Subpool where data is loaded        38604940
*                                   (not used)                       */ 38605930
*   5 PtLDDataFlags      Bit(8), /* Data related flags (not used)    */ 38606920
*   5 *               Fixed(16), /* Reserved                         */ 38607910
*  3 PtLDVarArea,                                                       38608900
*   5 PtLDPathName      Char(*), /* Fully qualified path name of        38609890
*                                   load module                      */ 38610880
*    7 PtLDMemberName   Char(*); /* Member name of load module          38611870
*                                   (not used)                       */ 38612860
*                                                                       38613850
*DCL                             /* PT_LDINFO extension          @P3A*/ 38614840
* 1 PtLDInfoExt       Based(Addr(PtLDInfo)+PtLDOffExt), /*       @P3A*/ 38615830
*  3 PtLDInfoNumTextExt Fixed(15), /* Number of additional text extents 38616820
*                                   in the following arrays that are    38617810
*                                   meaningful, up to 15 in this area,  38618800
*                                   for a total of 16            @P3A*/ 38619790
*  3 *                  Fixed(15), /* reserved                   @P3A*/ 38620780
*  3 PtLDTextOrgExt(15) Ptr(31), /* Program text origin address         38621770
*                                   (i.e. load point address)    @P3A*/ 38622760
*  3 PtLDTextSizeExt(15) Fixed(32); /* Length of text            @P3A*/ 38623750
*                                                                       38624740
*DCL                                                                    38625730
*  PtLDNullTerm     Fixed(8)  Constant(0);  /* Null terminator for      38626720
*                                              character strings     */ 38627710
*/********************************************************************/ 38628700
*/*                                                                  */ 38629690
*/* Ptrace thread information return structure.  Note that this      */ 38630680
*/* maps one element, corresponding to one thread.                   */ 38631670
*/*                                                                  */ 38632660
*/* Note: the only valid information for a dead thread is:           */ 38633650
*/*                                                                  */ 38634640
*/*   PTPTNEXT, PTPTTHID, PTPTSTATEACTIVE=0, PTPTKERNELPTHREAD,      */ 38635630
*/*   PTPTEXITSTATUS                                                 */ 38636620
*/********************************************************************/ 38637610
*DCL                         /* PT_THREAD_INFO return structure  @D2A*/ 38638600
* 1 PtptInfo    PTPTBASE,                                     /* @D2A*/ 38639590
*   3 PtptNext   Ptr(31),    /* Offset to next element           @D2A*/ 38640580
*   3 PtptTHID   Char(8),    /* Thread ID                        @D2A*/ 38641570
*   3 PtptReserved Char(16), /* Reserved                         @D2A*/ 38642560
*   3 PtptState  Bit(32),    /* Thread state flags               @D2A*/ 38643550
*     5 PtptState1 Bit(8),   /* Thread state flag byte           @D2A*/ 38644540
*       7 PtptStateActive Bit(1),                             /* @D2A*/ 38645530
*                                 /* 0 = thread is dead          @D2A*/ 38646520
*                                 /* 1 = thread is active        @D2A*/ 38647510
*       7 PtptStateAsync  Bit(1),                             /* @D2A*/ 38648500
*                                 /* 1 = thread is asynchronous  @D2A*/ 38649490
*                                 /*  (is also active but not    @D2A*/ 38650480
*                                 /*  yet running)               @D2A*/ 38651470
*       7 PtptStateCancelPend Bit(1),                         /* @D2A*/ 38652460
*                                  /* 1 = cancel is pending      @D2A*/ 38653450
*     5 PtptState2 Bit(8),   /* Thread state flag byte           @D2A*/ 38654440
*     5 PtptState3 Bit(8),   /* Thread state flag byte           @D2A*/ 38655430
*     5 PtptState4 Bit(8),   /* Thread state flag byte           @D2A*/ 38656420
*   3 PtptKernelAttr Bit(32),   /* Thread kernel attributes      @D2A*/ 38657410
*     5 PtptKernel1 Bit(8),   /* Thread kernel attribute byte    @D2A*/ 38658400
*       7 PtptKernelDetach Bit(1),                                      38659390
*                               /* 0 = thread is not detached    @D2A*/ 38660380
*                               /* 1 = thread is detached        @D2A*/ 38661370
*       7 PtptKernelMedium Bit(1),                                      38662360
*                               /* 0 = thread is heavyweight     @D2A*/ 38663350
*                               /* 1 = thread is mediumweight    @D2A*/ 38664340
*       7 PtptKernelAsync  Bit(1),                                      38665330
*                               /* 0 = thread is synchronous     @D2A*/ 38666320
*                               /* 1 = thread is asynchronous    @D2A*/ 38667310
*       7 PtptKernelPthread Bit(1),                                     38668300
*                               /* 1 = thread is created via     @D2A*/ 38669290
*                               /*     pthread create            @D2A*/ 38670280
*     5 PtptKernel2 Bit(8),   /* Thread kernel attribute byte    @D2A*/ 38671270
*       7 PtptKernelHold   Bit(1),                                      38672260
*                               /* 1 = thread is held            @D2A*/ 38673250
*     5 PtptKernel3 Bit(8),   /* Reserved                        @D2A*/ 38674240
*     5 PtptKernel4 Bit(8),   /* Reserved                        @D2A*/ 38675230
*   3 PtptExitStatus Char(4),                                 /* @D2A*/ 38676220
*                               /* Thread exit status if dead    @D2A*/ 38677210
*                               /* (PtptStateActive = 0)         @D2A*/ 38678200
*   3 PtptPendingSigmask Bit(64);                             /* @D2A*/ 38679190
*                             /* Mask of pending signals         @D2A*/ 38680180
*                             /* (bit 0 represents signal 1)     @D2A*/ 38681170
*                             /* (bit 63 represents signal 64)   @D2A*/ 38682160
*/********************************************************************/ 38683150
*/*                                                                  */ 38684140
*/* Ptrace thread information extended structure. Note that this     */ 38685130
*/* maps one element, corresponding to one thread. PtpxInfo maps     */ 38686120
*/* exactly to PtPtInfo                                              */ 38687110
*/*                                                                  */ 38688100
*/*                                                                  */ 38689090
*/*                                                                  */ 38690080
*/* Note: the only valid information for a dead thread is:           */ 38691070
*/*                                                                  */ 38692060
*/*   PTPXNEXT, PTPXTHID, PTPXSTATEACTIVE=0, PTPXKERNELPTHREAD,      */ 38693050
*/*   PTPXEXITSTATUS                                                 */ 38694040
*/********************************************************************/ 38695030
*DCL 1 PTphInfo    PTPhHEAD, /* PT_THREAD_INFO_EXTENDED header          38696020
*                               information                      @02C*/ 38697010
* 3 PtPhInfoBase Char(PtPT#Length) BDY(DWord),                          38698000
*                                  /* PtphInfoBase contains information 38698990
*                                      about the process and pointers   38699980
*                                      to the next array of thread      38700970
*                                      info                      @02A*/ 38701960
*   5 PtPhId     Char(4),    /* Acronym                          @02A*/ 38702950
*   5 PTPhNext   Ptr(31),    /* Address of the next PtPhInfo     @02A*/ 38703940
*   5 PtPhPtpxOff Ptr(31),   /* Offset of first Ptpx in this chunk      38704930
*                               of storage                       @02A*/ 38705920
*   5 PTPhPid    Fixed(32),  /* Process id of the threads        @02A*/ 38706910
*   5 PTPhPendingSigmask Bit(64), /* Signals pending at the process     38707900
*                                                                @02A*/ 38708890
*   5 PTPhBlockedSigmask Bit(64), /* blocked signals at process  @02A*/ 38709880
*   5 PtPhThreadNum Fixed(32), /* Total number of threads reported      38710870
*                                in chain                        @02A*/ 38711860
*   5 PtPhTnum      char(4),   /* Threads in the Current buffer  @02A*/ 38712850
*   5 PtPhPtPxLen   Fixed(32), /* Length of the PtPx in this buffer     38713840
*                                                                @02A*/ 38714830
*   5 *             Fixed(32), /* Reserved                       @02A*/ 38715820
* 3 PtPhEnd Char(0) BDY(DWORD);                               /* @02A*/ 38716810
*DCL 1 PTPXInfo    PTPXBASE, /* PT_THREAD_INFO_EXTENDED maps a          38717800
*                               single entry                     @02A*/ 38718790
* 3 PtPxInfoBase BDY(DWord),                                            38719780
*   5 PTPXNext   Ptr(31),    /* Offset to next element           @02A*/ 38720770
*   5 PTPXTHID   Char(8),    /* Thread ID                        @02A*/ 38721760
*   5 PTPXTcb    Ptr(31),    /* Tcb address for this process     @02A*/ 38722750
*   5 PTPXOtcb   Ptr(31),    /* Otcb address for this process    @02A*/ 38723740
*   5 PTPXBlockedSigmask Bit(64), /* blocked signals             @02A*/ 38724730
*   5 PTPXState  Bit(32),    /* Thread state flags               @02A*/ 38725720
*     7 PTPXState1 Bit(8),   /* Thread state flag byte           @02A*/ 38726710
*       9 PTPXStateActive Bit(1), /* 0 = thread is dead          @02A*/ 38727700
*                                 /* 1 = thread is active        @02A*/ 38728690
*       9 PTPXStateAsync  Bit(1), /* 1 = N/A                     @02A*/ 38729680
*                                 /*  (is also active but not    @02A*/ 38730670
*                                 /*  yet running)               @02A*/ 38731660
*       9 PTPXStateCancelPend Bit(1),                         /* @02A*/ 38732650
*                                  /* 1 = cancel is pending      @02A*/ 38733640
*     7 PTPXState2 Bit(8),      /* Thread state flag byte        @02A*/ 38734630
*     7 PTPXState3 Bit(8),      /* Thread state flag byte        @02A*/ 38735620
*     7 PTPXState4 Bit(8),      /* Thread state flag byte        @02A*/ 38736610
*   5 PTPXKernelAttr Bit(32),   /* Thread kernel attrtes         @02A*/ 38737600
*     7 PTPXKernel1 Bit(8),     /* Thread kernel attribute byte  @02A*/ 38738590
*       9 PTPXKernelDetach Bit(1),                                      38739580
*                               /* 0 = thread is not detached    @02A*/ 38740570
*                               /* 1 = thread is detached        @02A*/ 38741560
*       9 PTPXKernelMedium Bit(1),                                      38742550
*                               /* 0 = thread is heavyweight     @02A*/ 38743540
*                               /* 1 = thread is mediumweight    @02A*/ 38744530
*       9 PTPXKernelAsync  Bit(1),                                      38745520
*                               /* 0 = thread is synchronous     @02A*/ 38746510
*                               /* 1 = thread is asynchronous    @02A*/ 38747500
*       9 PTPXKernelPthread Bit(1),                                     38748490
*                               /* 1 = thread is created via     @02A*/ 38749480
*                               /*     pthread create            @02A*/ 38750470
*     7 PTPXKernel2 Bit(8),      /* Thread kernel attribute byte @02A*/ 38751460
*       9 PTPXKernelHold   Bit(1),                                      38752450
*                               /* 1 = thread is held            @02A*/ 38753440
*     7 PTPXKernel3 Bit(8),     /* Reserved                      @02A*/ 38754430
*     7 PTPXKernel4 Bit(8),     /* Reserved                      @02A*/ 38755420
*   5 PTPXExitStatus Char(4),                                 /* @02A*/ 38756410
*                               /* Thread exit status if dead    @02A*/ 38757400
*                               /* (PTPXStateActive = 0)         @02A*/ 38758390
*   5 PTPXPendingSigmask Bit(64), /* Mask of pending signals is set)    38759380
*                                    (bit 0 represents signal 1) @02A*/ 38760370
*   5 PTPXPid      Fixed(32),   /* Process id for this Thid      @02A*/ 38761360
*   5 PTPXAsid     Fixed(16),                                 /* @02A*/ 38762350
*   5 PTPXFlags      Bit(16),   /* Thread related flags          @02A*/ 38763340
*     7 PtPxIpt      Bit(1),    /* Ipt Thread                    @02A*/ 38764330
*     7 PtPxInComplete Bit(1),  /* The reported thread information is   38765320
*                                  incomplete                    @02A*/ 38766310
*   5 PTPXOapb     Ptr(31),     /* Pointer to the Oapb           @02A*/ 38767300
*   5 *            Char(4),     /* Reserved                      @02A*/ 38768290
*                                                                       38769280
* 3 PtPxEnd Char(0) BDY(DWORD);                               /* @02A*/ 38770270
*/********************************************************************/ 38771260
*/*                                                                  */ 38772250
*/* Ptrace explain information return structure.                     */ 38773240
*/*                                                                  */ 38774230
*/********************************************************************/ 38775220
*DCL                         /* PT_EXPLAIN return structure      @D3A*/ 38776210
* 1 PtExInfo    PTEXBASE,                                     /* @D3A*/ 38777200
*   3 PtExReg1   Fixed(32),  /* Register  1 at CEEEVDBG entry    @D3A*/ 38778190
*   3 PtExReg12  Fixed(32),  /* Register 12 at CEEEVDBG entry    @D3A*/ 38779180
*   3 PtExReg13  Fixed(32);  /* Register 13 at CEEEVDBG entry    @D3A*/ 38780170
*/********************************************************************/ 38781160
*/*                                                                  */ 38782150
*/* Ptrace program recovery parameters structure.                    */ 38783140
*/* (This area is provided by the caller)                            */ 38784130
*/*                                                                  */ 38785120
*/********************************************************************/ 38786110
*DCL                             /* Program recovery parameters      */ 38787100
* 1 PtPICParms        PTPIBASE,                                         38788090
*  3 PtPICRegisters     Ptr(31), /* Address of GPRs at time of          38789080
*                                   interrupt                        */ 38790070
*  3 PtPICPSW           Ptr(31), /* Address of PSW at time of           38791060
*                                   interrupt                        */ 38792050
*  3 PtPICIntCode     Fixed(16), /* Program interrupt code           */ 38793040
*  3 PtPICSigNumber   Fixed(16), /* Return value indicating signal      38794030
*                                   number that should be raised        38795020
*                                   by the caller if the                38796010
*                                   PtPICUseSigNum flag is set       */ 38797000
*  3 PtPICFlags         Bit(32), /* Flags                        @D5C*/ 38797990
*   5 PtPICICModified   Bit(1),  /* 0 = The instruction counter         38798980
*                                   portion of the PSW pointed to by    38799970
*                                   the PtPICPSW field has not been     38800960
*                                   modified                            38801950
*                                   1 = The instruction counter         38802940
*                                   portion of the PSW pointed to by    38803930
*                                   the PtPICPSW field has been         38804920
*                                   modified - continue execution       38805910
*                                   at this modified address         */ 38806900
*   5 PtPICRegsModified Bit(1),  /* 0 = The registers pointed to        38807890
*                                   by the PtPICRegisters field have    38808880
*                                   not been modified                   38809870
*                                   1 = The registers pointed to        38810860
*                                   by the PtPICRegisters field have    38811850
*                                   been modified                    */ 38812840
*   5 PtPICUseSigNum    Bit(1),  /* 1 = Raise the signal number         38813830
*                                   returned in the PtPICSigNumber      38814820
*                                   field upon return                */ 38815810
*   5 PtPICBypassSig    Bit(1),  /* 1 = Do not raise any signal upon    38816800
*                                   return                           */ 38817790
*   5 PtPICILCExists    Bit(1),  /* 1 = PtPICILC field is present       38818780
*                                                                @D5A*/ 38819770
*   5 PtPICHiRegsExists Bit(1),  /* 1 = The PtPICHiRegisters field      38820760
*                                   is present                   @D8A*/ 38821750
*   5 PtPICHiRegsModified Bit(1),/* 0 = The registers pointed to        38822740
*                                   by the PtPICHiRegisters field have  38823730
*                                   not been modified                   38824720
*                                   1 = The registers pointed to        38825710
*                                   by the PtPICHiRegisters field have  38826700
*                                   been modified                @D8A*/ 38827690
*   5 *                 Bit(25), /* Reserved                     @D8C*/ 38828680
*  3 PtPICAbendCode     Bit(32), /* Abend code or zero               */ 38829670
*   5 PtPICAbendFlags   Bit(8),  /* Abend code flags                 */ 38830660
*   5 PtPICAbendCC      Bit(24), /* System completion code (first 12    38831650
*                                   bits) and user completion code      38832640
*                                   (second 12 bits)                 */ 38833630
*  3 PtPICAbendReason Fixed(32), /* Abend reason code or zero        */ 38834620
*  3 PtPICILC         Fixed(8),  /* Instruction length code (only       38835610
*                                   present if PtPICILCExists flag      38836600
*                                   is set)                      @D5A*/ 38837590
*  3 PtPICReserved      Char(3), /* Reserved                     @D8C*/ 38838580
*  3 PtPICHiRegisters   Ptr(31), /* Address of high GPRs at time of     38839570
*                                   interrupt                    @D8A*/ 38840560
*  3 PtPICRsvd          Char(32);/* Reserved. This area is provided     38841550
*                                   by the caller and may not be        38842540
*                                   present in old releases of code     38843530
*                                                                @D8A*/ 38844520
*/********************************************************************/ 38845510
*/*                                                                  */ 38846500
*/* Ptrace request parameter definitions.                            */ 38847490
*/*                                                                  */ 38848480
*/********************************************************************/ 38849470
*DCL                                                                    38850460
*    PT_TRACE_ME    Fixed(32) Constant(00)  /* Debug this process    */ 38851450
*   ,PT_READ_I      Fixed(32) Constant(01)  /* Read a full word      */ 38852440
*   ,PT_READ_D      Fixed(32) Constant(02)  /* Read a full word      */ 38853430
*   ,PT_READ_U      Fixed(32) Constant(03)  /* Read control info     */ 38854420
*   ,PT_WRITE_I     Fixed(32) Constant(04)  /* Write a full word     */ 38855410
*   ,PT_WRITE_D     Fixed(32) Constant(05)  /* Write a full word     */ 38856400
*   ,PT_CONTINUE    Fixed(32) Constant(07)  /* Continue the process  */ 38857390
*   ,PT_KILL        Fixed(32) Constant(08)  /* Terminate the process */ 38858380
*   ,PT_READ_GPR    Fixed(32) Constant(11)  /* Read GPR, CR, PSW     */ 38859370
*   ,PT_READ_FPR    Fixed(32) Constant(12)  /* Read FPR              */ 38860360
*   ,PT_WRITE_GPR   Fixed(32) Constant(14)  /* Write GPR, CR, PSW    */ 38861350
*   ,PT_WRITE_FPR   Fixed(32) Constant(15)  /* Write FPR             */ 38862340
*   ,PT_READ_BLOCK  Fixed(32) Constant(17)  /* Read storage          */ 38863330
*   ,PT_WRITE_BLOCK Fixed(32) Constant(19)  /* Write storage         */ 38864320
*   ,PT_READ_GPRH   Fixed(32) Constant(20)  /* Read GPRH         @D8A*/ 38865310
*   ,PT_WRITE_GPRH  Fixed(32) Constant(21)  /* Write GPRH        @D8A*/ 38866300
*   ,PT_REGHSET     Fixed(32) Constant(22)  /* Read all GPRHs    @D8A*/ 38867290
*   ,PT_ATTACH      Fixed(32) Constant(30)  /* Attach to a process   */ 38868280
*   ,PT_DETACH      Fixed(32) Constant(31)  /* Detach from a process */ 38869270
*   ,PT_REGSET      Fixed(32) Constant(32)  /* Read all GPRs         */ 38870260
*   ,PT_REATTACH    Fixed(32) Constant(33)  /* Reattach to a process */ 38871250
*   ,PT_LDINFO      Fixed(32) Constant(34)  /* Read loader info      */ 38872240
*   ,PT_MULTI       Fixed(32) Constant(35)  /* Multi process mode    */ 38873230
*   ,PT_BLOCKREQ    Fixed(32) Constant(40)  /* Block request     @D7A*/ 38874220
*   ,PT_THREAD_INFO Fixed(32) Constant(60)  /* Read thread info  @D2A*/ 38875210
*   ,PT_THREAD_MODIFY Fixed(32) Constant(61)                            38876200
*                            /* Modify thread kernel information @D2A*/ 38877190
*   ,PT_THREAD_READ_FOCUS Fixed(32) Constant(62)                        38878180
*                            /* Read current focus thread ID     @D2A*/ 38879170
*   ,PT_THREAD_WRITE_FOCUS Fixed(32) Constant(63)                       38880160
*                            /* Modify current focus thread ID   @D2A*/ 38881150
*   ,PT_THREAD_HOLD Fixed(32) Constant(64)                              38882140
*                            /* Modify thread hold state         @D2A*/ 38883130
*   ,PT_THREAD_SIGNAL Fixed(32) Constant(65)                            38884120
*                            /* Queue a signal for a thread      @D2A*/ 38885110
*   ,PT_EXPLAIN     Fixed(32) Constant(66)                              38886100
*                            /* Return extended event info       @D3A*/ 38887090
*   ,PT_EVENTS      Fixed(32) Constant(67)                              38888080
*                            /* Modify extended events list      @D3A*/ 38889070
*   ,PT_THREAD_INFO_EXTENDED Fixed(32) Constant(68)                     38890060
*                            /* Read extended thread info        @02A*/ 38891050
*   ,PT_REATTACH2   Fixed(32) Constant(71)                              38892040
*                        /* Reattach to a process (extended)     @D2A*/ 38893030
*   ,PT_CAPTURE     Fixed(32) Constant(72)                              38894020
*                        /* Capture debugged storage             @D6A*/ 38895010
*   ,PT_UNCAPTURE   Fixed(32) Constant(73)                              38896000
*                        /* Uncapture debugged storage           @D6A*/ 38896990
*   ,PT_EXTENDED_EVENT Fixed(32) Constant(98)                           38897980
*                        /* Debug an extended event              @D3A*/ 38898970
*   ,PT_RECOVER     Fixed(32) Constant(99)  /* Debug a program check */ 38899960
*   ;                                                                   38900950
*                                                                       38901940
*/********************************************************************/ 38902930
*/*                                                                  */ 38903920
*/* Ptrace register definitions.  The following are defined:         */ 38904910
*/*                                                                  */ 38905900
*/* - General purpose registers                                      */ 38906890
*/* - Floating point registers                                       */ 38907880
*/* - PSW registers                                                  */ 38908870
*/* - Control registers                                              */ 38909860
*/* - General Purpose High Registers                             @D8A*/ 38910850
*/*                                                                  */ 38911840
*/********************************************************************/ 38912830
*DCL                                                                    38913820
*    PT_GPR0  Fixed(32) Constant(00) /* General purpose register 0   */ 38914810
*   ,PT_GPR1  Fixed(32) Constant(01) /* General purpose register 1   */ 38915800
*   ,PT_GPR2  Fixed(32) Constant(02) /* General purpose register 2   */ 38916790
*   ,PT_GPR3  Fixed(32) Constant(03) /* General purpose register 3   */ 38917780
*   ,PT_GPR4  Fixed(32) Constant(04) /* General purpose register 4   */ 38918770
*   ,PT_GPR5  Fixed(32) Constant(05) /* General purpose register 5   */ 38919760
*   ,PT_GPR6  Fixed(32) Constant(06) /* General purpose register 6   */ 38920750
*   ,PT_GPR7  Fixed(32) Constant(07) /* General purpose register 7   */ 38921740
*   ,PT_GPR8  Fixed(32) Constant(08) /* General purpose register 8   */ 38922730
*   ,PT_GPR9  Fixed(32) Constant(09) /* General purpose register 9   */ 38923720
*   ,PT_GPR10 Fixed(32) Constant(10) /* General purpose register 10  */ 38924710
*   ,PT_GPR11 Fixed(32) Constant(11) /* General purpose register 11  */ 38925700
*   ,PT_GPR12 Fixed(32) Constant(12) /* General purpose register 12  */ 38926690
*   ,PT_GPR13 Fixed(32) Constant(13) /* General purpose register 13  */ 38927680
*   ,PT_GPR14 Fixed(32) Constant(14) /* General purpose register 14  */ 38928670
*   ,PT_GPR15 Fixed(32) Constant(15) /* General purpose register 15  */ 38929660
*   ;                                                                   38930650
*                                                                       38931640
*DCL                                                                    38932630
*  PT_FPR0  Fixed(32) Constant(16) /* Floating point register 0      */ 38933620
* ,PT_FPR1  Fixed(32) Constant(17) /* Floating point register 1  @D7A*/ 38934610
* ,PT_FPR2  Fixed(32) Constant(18) /* Floating point register 2      */ 38935600
* ,PT_FPR3  Fixed(32) Constant(19) /* Floating point register 3  @D7A*/ 38936590
* ,PT_FPR4  Fixed(32) Constant(20) /* Floating point register 4      */ 38937580
* ,PT_FPR5  Fixed(32) Constant(21) /* Floating point register 5  @D7A*/ 38938570
* ,PT_FPR6  Fixed(32) Constant(22) /* Floating point register 6      */ 38939560
* ,PT_FPR7  Fixed(32) Constant(23) /* Floating point register 7  @D7A*/ 38940550
* ,PT_FPR8  Fixed(32) Constant(24) /* Floating point register 8  @D7A*/ 38941540
* ,PT_FPR9  Fixed(32) Constant(25) /* Floating point register 9  @D7A*/ 38942530
* ,PT_FPR10 Fixed(32) Constant(26) /* Floating point register 10 @D7A*/ 38943520
* ,PT_FPR11 Fixed(32) Constant(27) /* Floating point register 11 @D7A*/ 38944510
* ,PT_FPR12 Fixed(32) Constant(28) /* Floating point register 12 @D7A*/ 38945500
* ,PT_FPR13 Fixed(32) Constant(29) /* Floating point register 13 @D7A*/ 38946490
* ,PT_FPR14 Fixed(32) Constant(30) /* Floating point register 14 @D7A*/ 38947480
* ,PT_FPR15 Fixed(32) Constant(31) /* Floating point register 15 @D7A*/ 38948470
* ;                                                                     38949460
*                                                                       38950450
*DCL                                                                    38951440
*    PT_FPC   Fixed(32) Constant(32) /* Floating point control register 38952430
*                                                                @D7A*/ 38953420
*   ;                                                                   38954410
*                                                                       38955400
*DCL                                                                    38956390
*    PT_PSW   Fixed(32) Constant(40) /* PSW                          */ 38957380
*   ,PT_PSW0  Fixed(32) Constant(40) /* Left half of the PSW         */ 38958370
*   ,PT_PSW1  Fixed(32) Constant(41) /* Right half of the PSW        */ 38959360
*   ;                                                                   38960350
*                                                                       38961340
*DCL                                                                    38962330
*    PT_CR0   Fixed(32) Constant(42) /* Control register 0           */ 38963320
*   ,PT_CR1   Fixed(32) Constant(43) /* Control register 1           */ 38964310
*   ,PT_CR2   Fixed(32) Constant(44) /* Control register 2           */ 38965300
*   ,PT_CR3   Fixed(32) Constant(45) /* Control register 3           */ 38966290
*   ,PT_CR4   Fixed(32) Constant(46) /* Control register 4           */ 38967280
*   ,PT_CR5   Fixed(32) Constant(47) /* Control register 5           */ 38968270
*   ,PT_CR6   Fixed(32) Constant(48) /* Control register 6           */ 38969260
*   ,PT_CR7   Fixed(32) Constant(49) /* Control register 7           */ 38970250
*   ,PT_CR8   Fixed(32) Constant(50) /* Control register 8           */ 38971240
*   ,PT_CR9   Fixed(32) Constant(51) /* Control register 9           */ 38972230
*   ,PT_CR10  Fixed(32) Constant(52) /* Control register 10          */ 38973220
*   ,PT_CR11  Fixed(32) Constant(53) /* Control register 11          */ 38974210
*   ,PT_CR12  Fixed(32) Constant(54) /* Control register 12          */ 38975200
*   ,PT_CR13  Fixed(32) Constant(55) /* Control register 13          */ 38976190
*   ,PT_CR14  Fixed(32) Constant(56) /* Control register 14          */ 38977180
*   ,PT_CR15  Fixed(32) Constant(57) /* Control register 15          */ 38978170
*   ;                                                                   38979160
*                                                                       38980150
*DCL                                                                    38981140
*    PT_GPRH0 Fixed(32) Constant(58) /* GP High register 0       @D8A*/ 38982130
*   ,PT_GPRH1 Fixed(32) Constant(59) /* GP High register 1       @D8A*/ 38983120
*   ,PT_GPRH2 Fixed(32) Constant(60) /* GP High register 2       @D8A*/ 38984110
*   ,PT_GPRH3 Fixed(32) Constant(61) /* GP High register 3       @D8A*/ 38985100
*   ,PT_GPRH4 Fixed(32) Constant(62) /* GP High register 4       @D8A*/ 38986090
*   ,PT_GPRH5 Fixed(32) Constant(63) /* GP High register 5       @D8A*/ 38987080
*   ,PT_GPRH6 Fixed(32) Constant(64) /* GP High register 6       @D8A*/ 38988070
*   ,PT_GPRH7 Fixed(32) Constant(65) /* GP High register 7       @D8A*/ 38989060
*   ,PT_GPRH8 Fixed(32) Constant(66) /* GP High register 8       @D8A*/ 38990050
*   ,PT_GPRH9 Fixed(32) Constant(67) /* GP High register 9       @D8A*/ 38991040
*   ,PT_GPRH10 Fixed(32) Constant(68) /* GP High register 10     @D8A*/ 38992030
*   ,PT_GPRH11 Fixed(32) Constant(69) /* GP High register 11     @D8A*/ 38993020
*   ,PT_GPRH12 Fixed(32) Constant(70) /* GP High register 12     @D8A*/ 38994010
*   ,PT_GPRH13 Fixed(32) Constant(71) /* GP High register 13     @D8A*/ 38995000
*   ,PT_GPRH14 Fixed(32) Constant(72) /* GP High register 14     @D8A*/ 38995990
*   ,PT_GPRH15 Fixed(32) Constant(73) /* GP High register 15     @D8A*/ 38996980
*   ;                                                                   38997970
*                                                                       38998960
*/********************************************************************/ 38999950
*/*                                                                  */ 39000940
*/* Ptrace User Area offset definitions.  Offsets for signal catcher */ 39001930
*/* information are defined by the limits below.  Any offset between */ 39002920
*/* the minimum and maximum signal numbers is a request for signal   */ 39003910
*/* catcher information for that signal number (i.e. offset 3 means  */ 39004900
*/* signal catcher information for signal number 3).                 */ 39005890
*/*                                                                  */ 39006880
*/********************************************************************/ 39007870
*DCL                                                                    39008860
*    PtUArea#MinSig   Fixed(32) Constant(1), /* Lowest signal number */ 39009850
*    PtUArea#MaxSig   Fixed(32) Constant(1024), /* Highest signal       39010840
*                                   number                           */ 39011830
*    PtUArea#IntCode  Fixed(32) Constant(1025), /* Request for program  39012820
*                                   interrupt code                   */ 39013810
*    PtUArea#AbendCC  Fixed(32) Constant(1026), /* Request for abend    39014800
*                                   completion code                  */ 39015790
*    PtUArea#AbendRC  Fixed(32) Constant(1027), /* Request for abend    39016780
*                                   reason code                      */ 39017770
*    PtUArea#SigCode  Fixed(32) Constant(1028), /* Request for signal   39018760
*                                   code                         @D4A*/ 39019750
*    PtUArea#ILC      Fixed(32) Constant(1029), /* Request for          39020740
*                                   instruction length code      @D5A*/ 39021730
*    PtUArea#PrFlags  Fixed(32) Constant(1030); /* Request for          39022720
*                                   process flags                @01A*/ 39023710
*                                                                       39024700
*/********************************************************************/ 39025690
*/*                                                                  */ 39026680
*/* Ptrace miscellaneous definitions.                                */ 39027670
*/*                                                                  */ 39028660
*/********************************************************************/ 39029650
*DCL                                                                    39030640
*    PtContNorm       Fixed(32) Constant(1),  /* Continue normally      39031630
*                                   (continue address not changed)      39032620
*                                   for a PT_CONTINUE request        */ 39033610
*    PtNoStickyPgm    Fixed(32) Constant(1),  /* Main program of        39034600
*                                   process is not sticky bit program.  39035590
*                                   Returned on PTUAREA#PRFLAGS request 39036580
*                                                                @01A*/ 39037570
*    PtMaximumLength  Fixed(32) Constant(64000), /* Maximum storage     39038560
*                                   length                           */ 39039550
*    PtLD#FixedLen    Fixed(32) Constant(Length(PtLDFixedArea)), /*     39040540
*                                   Length of PtLDInfo fixed area    */ 39041530
*    PtPT#Length      Fixed(32) Constant(Length(PtPTINFO)),      /*     39042520
*                                   Length of PtptInfo fixed area    */ 39043510
*    PtPh#Length      Fixed(32) Constant(((Length(PtPhINFO)+7)/8)*8),   39044500
*                                   /* Length of PtPhInfo fixed area    39045490
*                                     on double word boundary    @02A*/ 39046480
*    PtPx#Length      Fixed(32) Constant(((Length(PtPxINFO)+7)/8)*8),   39047470
*                                   /* Length of PtpxInfo fixed area    39048460
*                                     on double word boundary    @02A*/ 39049450
*    PtEx#Length      Fixed(32) Constant(Length(PtExInfo)),      /*     39050440
*                                   Length of PtExInfo           @D3A*/ 39051430
*    PtPIC#Length1    Fixed(32) Constant(32),  /* Length of PtPicParms  39052420
*                                   if PtPicHiRegsExists = OFF   @D8A*/ 39053410
*    PtPIC#Length     Fixed(32) Constant(Length(PtPICParms)); /* Length 39054400
*                                   of PtPICParms                    */ 39055390
*/********************************************************************/ 39056380
*/*                                                                  */ 39057370
*/* Ptrace PT_BlockReq structure.  This request allows the user to   */ 39058360
*/* block several different Ptrace requests into a single call to    */ 39059350
*/* Ptrace.  The block request structures mapped below must be       */ 39060340
*/* contained in a single large area.  This area is pointed to by    */ 39061330
*/* the Ptrace Address parameter and its length is contained in the  */ 39062320
*/* Ptrace Data parameter.  The PtBRInfo structure must be at offset */ 39063310
*/* zero into the provided area.                                     */ 39064300
*/*                                                                  */ 39065290
*/* Offsets are used to locate all relevant areas so that the Ptrace */ 39066280
*/* block request input may be relocated.  All offsets are relative  */ 39067270
*/* to the main input, the PtBRInfo area.  A given request block,    */ 39068260
*/* such as the PtBR_GPR structure, may be found using the           */ 39069250
*/* PtBRInfo address + PtBRReqBlkOff(x).                             */ 39070240
*/*                                                                  */ 39071230
*/* Only certain requests may be blocked into a single call to       */ 39072220
*/* Ptrace.  The requests that may be blocked are --                 */ 39073210
*/*   PT_READ_GPR                                                    */ 39074200
*/*   PT_WRITE_GPR                                                   */ 39075190
*/*   PT_READ_FPR                                                    */ 39076180
*/*   PT_WRITE_FPR                                                   */ 39077170
*/*   PT_READ_GPRH                                                   */ 39078160
*/*   PT_WRITE_GPRH                                                  */ 39079150
*/*   PT_READ_U                                                      */ 39080140
*/*   PT_READ_D                                                      */ 39081130
*/*   PT_READ_I                                                      */ 39082120
*/*   PT_WRITE_D                                                     */ 39083110
*/*   PT_WRITE_I                                                     */ 39084100
*/*   PT_READ_BLOCK                                                  */ 39085090
*/*   PT_WRITE_BLOCK.                                                */ 39086080
*/*                                                              @D7A*/ 39087070
*/********************************************************************/ 39088060
*   DECLARE                                                   /* @D7A*/ 39089050
*     1    PtBRInfo PTBRBase,                                 /* @D7A*/ 39090040
*       3    PtBRFixedArea,                                   /* @D7A*/ 39091030
*         5    PtBRNumReqs Fixed(31), /* Number of requests in PtBRReqs 39092020
*                                                                @D7A*/ 39093010
*         5    *        Char(12),   /* Reserved                  @D7A*/ 39094000
*       3    PtBRReqs(*),           /* requests                  @D7A*/ 39094990
*         5    PtBRType Fixed(31),  /* Type of request. For example,    39095980
*                                      PT_READ_BLOCK. This entry is     39096970
*                                      ignored if this field is zero    39097960
*                                                                @D7A*/ 39098950
*         5    PtBRStatus Fixed(31), /* Status from request. Same as    39099940
*                                      reasoncode on individual call    39100930
*                                      of same type              @D7A*/ 39101920
*         5    PtBRReqBlkOff Fixed(32), /* Offset to request block      39102910
*                                      further defining request and     39103900
*                                      whose format is dependant on     39104890
*                                      the request type          @D7A*/ 39105880
*         5    *        char(4);    /* reserved                  @D7A*/ 39106870
*                                                                       39107860
*/********************************************************************/ 39108850
*/* Structure for PT_Read_GPR and PT_Write_GPR.                      */ 39109840
*/********************************************************************/ 39110830
*                                                                       39111820
*   DECLARE                                                   /* @D7A*/ 39112810
*     1    PtBR_GPR Based,          /*                           @D7A*/ 39113800
*       3    PtBR_GPR_CntlGPR Bit(16), /* Only used on write request    39114790
*                                                                @D7A*/ 39115780
*         5  PtBR_GPR_CntlGPR1 Bit(8), /*                        @D7A*/ 39116770
*           7  PtBR_GPR_WGPR0 Bit(1), /* Write content of GPR 0  @D7A*/ 39117760
*           7  PtBR_GPR_WGPR1 Bit(1), /* Write content of GPR 1  @D7A*/ 39118750
*           7  PtBR_GPR_WGPR2 Bit(1), /* Write content of GPR 2  @D7A*/ 39119740
*           7  PtBR_GPR_WGPR3 Bit(1), /* Write content of GPR 3  @D7A*/ 39120730
*           7  PtBR_GPR_WGPR4 Bit(1), /* Write content of GPR 4  @D7A*/ 39121720
*           7  PtBR_GPR_WGPR5 Bit(1), /* Write content of GPR 5  @D7A*/ 39122710
*           7  PtBR_GPR_WGPR6 Bit(1), /* Write content of GPR 6  @D7A*/ 39123700
*           7  PtBR_GPR_WGPR7 Bit(1), /* Write content of GPR 7  @D7A*/ 39124690
*         5  PtBR_GPR_CntlGPR2 Bit(8), /*                        @D7A*/ 39125680
*           7  PtBR_GPR_WGPR8 Bit(1), /* Write content of GPR 8  @D7A*/ 39126670
*           7  PtBR_GPR_WGPR9 Bit(1), /* Write content of GPR 9  @D7A*/ 39127660
*           7  PtBR_GPR_WGPR10 Bit(1),/* Write content of GPR 10 @D7A*/ 39128650
*           7  PtBR_GPR_WGPR11 Bit(1),/* Write content of GPR 11 @D7A*/ 39129640
*           7  PtBR_GPR_WGPR12 Bit(1),/* Write content of GPR 12 @D7A*/ 39130630
*           7  PtBR_GPR_WGPR13 Bit(1),/* Write content of GPR 13 @D7A*/ 39131620
*           7  PtBR_GPR_WGPR14 Bit(1),/* Write content of GPR 14 @D7A*/ 39132610
*           7  PtBR_GPR_WGPR15 Bit(1),/* Write content of GPR 15 @D7A*/ 39133600
*       3    PtBR_GPR_CntlMisc Bit(16), /* Only used on write request   39134590
*                                                                @D7A*/ 39135580
*         5    PtBR_GPR_WPSW Bit(1), /* Write content of PSW, word 2    39136570
*                                                                @D7A*/ 39137560
*       3    *        Char(12),     /* Reserved                  @D7A*/ 39138550
*       3    PtBR_GPR_GPRs Char(64) Bdy(word), /* General purpose       39139540
*                                      registers                 @D7A*/ 39140530
*         5    PtBR_GPR_GPR00 Fixed(31), /* GPR 00               @D7A*/ 39141520
*         5    PtBR_GPR_GPR01 Fixed(31), /* GPR 01               @D7A*/ 39142510
*         5    PtBR_GPR_GPR02 Fixed(31), /* GPR 02               @D7A*/ 39143500
*         5    PtBR_GPR_GPR03 Fixed(31), /* GPR 03               @D7A*/ 39144490
*         5    PtBR_GPR_GPR04 Fixed(31), /* GPR 04               @D7A*/ 39145480
*         5    PtBR_GPR_GPR05 Fixed(31), /* GPR 05               @D7A*/ 39146470
*         5    PtBR_GPR_GPR06 Fixed(31), /* GPR 06               @D7A*/ 39147460
*         5    PtBR_GPR_GPR07 Fixed(31), /* GPR 07               @D7A*/ 39148450
*         5    PtBR_GPR_GPR08 Fixed(31), /* GPR 08               @D7A*/ 39149440
*         5    PtBR_GPR_GPR09 Fixed(31), /* GPR 09               @D7A*/ 39150430
*         5    PtBR_GPR_GPR10 Fixed(31), /* GPR 10               @D7A*/ 39151420
*         5    PtBR_GPR_GPR11 Fixed(31), /* GPR 11               @D7A*/ 39152410
*         5    PtBR_GPR_GPR12 Fixed(31), /* GPR 12               @D7A*/ 39153400
*         5    PtBR_GPR_GPR13 Fixed(31), /* GPR 13               @D7A*/ 39154390
*         5    PtBR_GPR_GPR14 Fixed(31), /* GPR 14               @D7A*/ 39155380
*         5    PtBR_GPR_GPR15 Fixed(31), /* GPR 15               @D7A*/ 39156370
*       3    PtBR_GPR_CRs Char(64) Bdy(Word), /* Control registers.     39157360
*                                      May be read but will not be      39158350
*                                      written                   @D7A*/ 39159340
*         5    PtBR_GPR_CR00 Fixed(31), /* CR 00                 @D7A*/ 39160330
*         5    PtBR_GPR_CR01 Fixed(31), /* CR 01                 @D7A*/ 39161320
*         5    PtBR_GPR_CR02 Fixed(31), /* CR 02                 @D7A*/ 39162310
*         5    PtBR_GPR_CR03 Fixed(31), /* CR 03                 @D7A*/ 39163300
*         5    PtBR_GPR_CR04 Fixed(31), /* CR 04                 @D7A*/ 39164290
*         5    PtBR_GPR_CR05 Fixed(31), /* CR 05                 @D7A*/ 39165280
*         5    PtBR_GPR_CR06 Fixed(31), /* CR 06                 @D7A*/ 39166270
*         5    PtBR_GPR_CR07 Fixed(31), /* CR 07                 @D7A*/ 39167260
*         5    PtBR_GPR_CR08 Fixed(31), /* CR 08                 @D7A*/ 39168250
*         5    PtBR_GPR_CR09 Fixed(31), /* CR 09                 @D7A*/ 39169240
*         5    PtBR_GPR_CR10 Fixed(31), /* CR 10                 @D7A*/ 39170230
*         5    PtBR_GPR_CR11 Fixed(31), /* CR 11                 @D7A*/ 39171220
*         5    PtBR_GPR_CR12 Fixed(31), /* CR 12                 @D7A*/ 39172210
*         5    PtBR_GPR_CR13 Fixed(31), /* CR 13                 @D7A*/ 39173200
*         5    PtBR_GPR_CR14 Fixed(31), /* CR 14                 @D7A*/ 39174190
*         5    PtBR_GPR_CR15 Fixed(31), /* CR 15                 @D7A*/ 39175180
*       3    PtBR_GPR_PSW Char(8), /* PSW.   May be read but only the   39176170
*                                      rightmost 4 bytes (word 2) will  39177160
*                                      be written                @D7A*/ 39178150
*         5    PtBR_GPR_PSW_W1 Char(4), /* PSW word 1.           @D7A*/ 39179140
*         5    PtBR_GPR_PSW_W2 Char(4); /* PSW word 2            @D7A*/ 39180130
*                                                                       39181120
*/********************************************************************/ 39182110
*/* Structure for PT_Read_FPR and PT_Write_FPR.                      */ 39183100
*/********************************************************************/ 39184090
*                                                                       39185080
*   DECLARE                                                             39186070
*     1    PtBR_FPR Based,          /*                           @D7A*/ 39187060
*       3    PtBR_FPR_CntlFPR Bit(16), /* Only used on write request    39188050
*                                                                @D7A*/ 39189040
*         5  PtBR_FPR_CntlFPR1 Bit(8), /*                        @D7A*/ 39190030
*           7  PtBR_FPR_WFPR0 Bit(1), /* Write content of FPR 0  @D7A*/ 39191020
*           7  PtBR_FPR_WFPR1 Bit(1), /* Write content of FPR 1  @D7A*/ 39192010
*           7  PtBR_FPR_WFPR2 Bit(1), /* Write content of FPR 2  @D7A*/ 39193000
*           7  PtBR_FPR_WFPR3 Bit(1), /* Write content of FPR 3  @D7A*/ 39193990
*           7  PtBR_FPR_WFPR4 Bit(1), /* Write content of FPR 4  @D7A*/ 39194980
*           7  PtBR_FPR_WFPR5 Bit(1), /* Write content of FPR 5  @D7A*/ 39195970
*           7  PtBR_FPR_WFPR6 Bit(1), /* Write content of FPR 6  @D7A*/ 39196960
*           7  PtBR_FPR_WFPR7 Bit(1), /* Write content of FPR 7  @D7A*/ 39197950
*         5  PtBR_FPR_CntlFPR2 Bit(8), /*                        @D7A*/ 39198940
*           7  PtBR_FPR_WFPR8 Bit(1), /* Write content of FPR 8  @D7A*/ 39199930
*           7  PtBR_FPR_WFPR9 Bit(1), /* Write content of FPR 9  @D7A*/ 39200920
*           7  PtBR_FPR_WFPR10 Bit(1),/* Write content of FPR 10 @D7A*/ 39201910
*           7  PtBR_FPR_WFPR11 Bit(1),/* Write content of FPR 11 @D7A*/ 39202900
*           7  PtBR_FPR_WFPR12 Bit(1),/* Write content of FPR 12 @D7A*/ 39203890
*           7  PtBR_FPR_WFPR13 Bit(1),/* Write content of FPR 13 @D7A*/ 39204880
*           7  PtBR_FPR_WFPR14 Bit(1),/* Write content of FPR 14 @D7A*/ 39205870
*           7  PtBR_FPR_WFPR15 Bit(1),/* Write content of FPR 15 @D7A*/ 39206860
*       3    PtBR_FPR_CntlMisc Bit(16), /* Only used on write           39207850
*                                      request                   @D7A*/ 39208840
*         5    PtBR_FPR_WFPC Bit(1), /* Write content of FPC     @D7A*/ 39209830
*       3    *        Char(12),     /* Reserved                  @D7A*/ 39210820
*       3    PtBR_FPR_FPRs Char(128) Bdy(word), /* Floating point       39211810
*                                      registers                 @D7A*/ 39212800
*         5    PtBR_FPR_FPR00 Char(8), /* FPR 00                 @D7A*/ 39213790
*         5    PtBR_FPR_FPR01 Char(8), /* FPR 01                 @D7A*/ 39214780
*         5    PtBR_FPR_FPR02 Char(8), /* FPR 02                 @D7A*/ 39215770
*         5    PtBR_FPR_FPR03 Char(8), /* FPR 03                 @D7A*/ 39216760
*         5    PtBR_FPR_FPR04 Char(8), /* FPR 04                 @D7A*/ 39217750
*         5    PtBR_FPR_FPR05 Char(8), /* FPR 05                 @D7A*/ 39218740
*         5    PtBR_FPR_FPR06 Char(8), /* FPR 06                 @D7A*/ 39219730
*         5    PtBR_FPR_FPR07 Char(8), /* FPR 07                 @D7A*/ 39220720
*         5    PtBR_FPR_FPR08 Char(8), /* FPR 08                 @D7A*/ 39221710
*         5    PtBR_FPR_FPR09 Char(8), /* FPR 09                 @D7A*/ 39222700
*         5    PtBR_FPR_FPR10 Char(8), /* FPR 10                 @D7A*/ 39223690
*         5    PtBR_FPR_FPR11 Char(8), /* FPR 11                 @D7A*/ 39224680
*         5    PtBR_FPR_FPR12 Char(8), /* FPR 12                 @D7A*/ 39225670
*         5    PtBR_FPR_FPR13 Char(8), /* FPR 13                 @D7A*/ 39226660
*         5    PtBR_FPR_FPR14 Char(8), /* FPR 14                 @D7A*/ 39227650
*         5    PtBR_FPR_FPR15 Char(8), /* FPR 15                 @D7A*/ 39228640
*       3    PtBR_FPR_FPC Char(4); /* Floating Point Control Register   39229630
*                                                                @D7A*/ 39230620
*                                                                       39231610
*/********************************************************************/ 39232600
*/* Structure for PT_Read_GPRH PT_Write_GPRH.                    @D8A*/ 39233590
*/********************************************************************/ 39234580
*                                                                       39235570
* DECLARE                                                               39236560
*   1    PtBR_GPRH Based,         /*                             @D8A*/ 39237550
*     3    PtBR_GPRH_CntlGPRH Bit(16), /* Only used on write request    39238540
*                                                                @D8A*/ 39239530
*       5  PtBR_GPRH_CntlGPRH1 Bit(8),/*                         @D8A*/ 39240520
*         7  PtBR_GPRH_WGPRH0 Bit(1), /* Write content of GPRH 0 @D8A*/ 39241510
*         7  PtBR_GPRH_WGPRH1 Bit(1), /* Write content of GPRH 1 @D8A*/ 39242500
*         7  PtBR_GPRH_WGPRH2 Bit(1), /* Write content of GPRH 2 @D8A*/ 39243490
*         7  PtBR_GPRH_WGPRH3 Bit(1), /* Write content of GPRH 3 @D8A*/ 39244480
*         7  PtBR_GPRH_WGPRH4 Bit(1), /* Write content of GPRH 4 @D8A*/ 39245470
*         7  PtBR_GPRH_WGPRH5 Bit(1), /* Write content of GPRH 5 @D8A*/ 39246460
*         7  PtBR_GPRH_WGPRH6 Bit(1), /* Write content of GPRH 6 @D8A*/ 39247450
*         7  PtBR_GPRH_WGPRH7 Bit(1), /* Write content of GPRH 7 @D8A*/ 39248440
*       5  PtBR_GPRH_CntlGPRH2 Bit(8),/*                         @D8A*/ 39249430
*         7  PtBR_GPRH_WGPRH8 Bit(1), /* Write content of GPRH 8 @D8A*/ 39250420
*         7  PtBR_GPRH_WGPRH9 Bit(1), /* Write content of GPRH 9 @D8A*/ 39251410
*         7  PtBR_GPRH_WGPRH10 Bit(1),/* Write content of GPRH10 @D8A*/ 39252400
*         7  PtBR_GPRH_WGPRH11 Bit(1),/* Write content of GPRH11 @D8A*/ 39253390
*         7  PtBR_GPRH_WGPRH12 Bit(1),/* Write content of GPRH12 @D8A*/ 39254380
*         7  PtBR_GPRH_WGPRH13 Bit(1),/* Write content of GPRH13 @D8A*/ 39255370
*         7  PtBR_GPRH_WGPRH14 Bit(1),/* Write content of GPRH14 @D8A*/ 39256360
*         7  PtBR_GPRH_WGPRH15 Bit(1),/* Write content of GPRH15 @D8A*/ 39257350
*     3    PtBR_GPRH_CntlMisc Bit(16), /* Only used on write request    39258340
*                                                                @D8A*/ 39259330
*     3    *        Char(12),     /* Reserved                    @D8A*/ 39260320
*     3    PtBR_GPRH_GPRHs Char(64) Bdy(Word), /* GP High registers.    39261310
*                                                                @D8A*/ 39262300
*       5    PtBR_GPRH_GPRH00 Fixed(31), /* GPRH 00              @D8A*/ 39263290
*       5    PtBR_GPRH_GPRH01 Fixed(31), /* GPRH 01              @D8A*/ 39264280
*       5    PtBR_GPRH_GPRH02 Fixed(31), /* GPRH 02              @D8A*/ 39265270
*       5    PtBR_GPRH_GPRH03 Fixed(31), /* GPRH 03              @D8A*/ 39266260
*       5    PtBR_GPRH_GPRH04 Fixed(31), /* GPRH 04              @D8A*/ 39267250
*       5    PtBR_GPRH_GPRH05 Fixed(31), /* GPRH 05              @D8A*/ 39268240
*       5    PtBR_GPRH_GPRH06 Fixed(31), /* GPRH 06              @D8A*/ 39269230
*       5    PtBR_GPRH_GPRH07 Fixed(31), /* GPRH 07              @D8A*/ 39270220
*       5    PtBR_GPRH_GPRH08 Fixed(31), /* GPRH 08              @D8A*/ 39271210
*       5    PtBR_GPRH_GPRH09 Fixed(31), /* GPRH 09              @D8A*/ 39272200
*       5    PtBR_GPRH_GPRH10 Fixed(31), /* GPRH 10              @D8A*/ 39273190
*       5    PtBR_GPRH_GPRH11 Fixed(31), /* GPRH 11              @D8A*/ 39274180
*       5    PtBR_GPRH_GPRH12 Fixed(31), /* GPRH 12              @D8A*/ 39275170
*       5    PtBR_GPRH_GPRH13 Fixed(31), /* GPRH 13              @D8A*/ 39276160
*       5    PtBR_GPRH_GPRH14 Fixed(31), /* GPRH 14              @D8A*/ 39277150
*       5    PtBR_GPRH_GPRH15 Fixed(31), /* GPRH 15              @D8A*/ 39278140
*     3    *             Char(8); /* Reserved                    @D8A*/ 39279130
*                                                                       39280120
*/********************************************************************/ 39281110
*/* Structure for PT_Read_Block and PT_Write_Block.                  */ 39282100
*/********************************************************************/ 39283090
*                                                                       39284080
*   DECLARE                                                             39285070
*     1    PtBR_Block Based,        /*                           @D8A*/ 39286060
*       3    PtBR_Block_AAddr Ptr(31),/* address of area to read @D7A*/ 39287050
*       3    PtBR_Block_ALen Fixed(31),/* length of area to read @D7A*/ 39288040
*       3    *        Char(8),      /* Reserved                  @D7A*/ 39289030
*       3    PtBR_Block_Buf Char(*); /* area to read into or write      39290020
*                                      from. Must be at least           39291010
*                                      PtBR_Block_ALen bytes large      39292000
*                                                                @D7A*/ 39292990
*                                                                       39293980
*/********************************************************************/ 39294970
*/* Structure for PT_Read_D and PT_Write_D.                          */ 39295960
*/********************************************************************/ 39296950
*                                                                       39297940
*   DECLARE                         /*                           @D7A*/ 39298930
*     1    PtBR_D Based,            /*                           @D7A*/ 39299920
*       3    PtBR_D_Wordptr ptr(31), /* Address of fullword of data     39300910
*                                                                @D7A*/ 39301900
*       3    PtBR_D_Word Fixed(32); /* fullword of data at specified    39302890
*                                      address for a read request or    39303880
*                                      the data to be written to the    39304870
*                                      specified address for a write    39305860
*                                      request                   @D7A*/ 39306850
*                                                                       39307840
*/********************************************************************/ 39308830
*/* Structure for PT_Read_I and PT_Write_I.                          */ 39309820
*/********************************************************************/ 39310810
*                                                                       39311800
*   DECLARE                         /*                           @D7A*/ 39312790
*     1    PtBR_I   Based,          /*                           @D7A*/ 39313780
*       3    PtBR_I_Wordptr ptr(31), /* Address of fullword of          39314770
*                                      program data              @D7A*/ 39315760
*       3    PtBR_I_Word Fixed(32); /* fullword of program data at      39316750
*                                      specified address for a read     39317740
*                                      request or the program data to   39318730
*                                      be written to the specified      39319720
*                                      address for a write request      39320710
*                                                                @D7A*/ 39321700
*                                                                       39322690
*/********************************************************************/ 39323680
*/* Structure for PT_Read_U.                                         */ 39324670
*/********************************************************************/ 39325660
*                                                                       39326650
*   DECLARE                         /*                           @D7A*/ 39327640
*     1    PtBR_U   Based,          /*                           @D7A*/ 39328630
*       3    PtBR_U_NumOffsets Fixed(31), /* Number of entries in       39329620
*                                      offset/control word array @D7A*/ 39330610
*       3    *        char(4),      /* Reserved                  @D7A*/ 39331600
*       3    PtBR_U_OWArray(*),     /* Array of offsets and control     39332590
*                                      words                     @D7A*/ 39333580
*         5    PtBR_U_Offset Fixed(31), /* Offset of fullword of        39334570
*                                      control information       @D7A*/ 39335560
*         5    PtBR_U_Word Fixed(32); /* fullword of control            39336550
*                                      information from user area in    39337540
*                                      the debugged process      @D7A*/ 39338530
*/* End of PL/X Source                                               */ 39339520
