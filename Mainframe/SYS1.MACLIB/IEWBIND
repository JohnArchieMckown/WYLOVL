*/**** START OF SPECIFICATIONS **************************************** 00011700
*                                                                     * 00019500
* $MAC(IEWBIND) COMP(DF108): Invoke the Binder call interface.        * 00027300
*                                                                     * 00035100
*    PROPRIETARY STATEMENT=                                           * 00042400
*    LICENSED MATERIALS - PROPERTY OF IBM                             * 00049700
*    THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                     * 00057000
*    5695-DF1                                                         * 00064300
*    (C) COPYRIGHT IBM CORPORATION 1993, 2000                         * 00071600
*    SEE IBM COPYRIGHT INSTRUCTIONS                                   * 00078900
*    END PROPRIETARY STATEMENT                                        * 00086200
*                                                                     * 00093600
* STATUS= OS/390 DFSMS Version 2 Release 10                      @P2C * 00095200
*                                                                     * 00096800
* MACRO NAME: IEWBIND                                                 * 00098400
*                                                                     * 00100000
* DESCRIPTIVE NAME: Invoke the Binder call interface.                 * 00101600
*                                                                     * 00103200
* FUNCTION:                                                           * 00104800
*                                                                     * 00106400
*    IEWBIND is the bilingual macro which abbreviates and             * 00108000
*    translates keyword values and invokes macro IEWBIND2.            * 00109600
*    IEWBIND2 validates the syntax and calls the Binder.  When        * 00111200
*    IEWBIND detects an invalid keyword value, IEWBIND passes it      * 00112800
*    unchanged to IEWBIND2 for analysis.                              * 00114400
*                                                                     * 00117000
*    IEWBIND translates keyword XTLST to EXTLST for IEWBIND2.         * 00122800
*                                                                     * 00128700
*  INVOCATION FORMAT:                                                 * 00178700
*                                                                     * 17280900
*  <xlabel>  IEWBIND2  +- FUNC=ADDALIAS|ADDA                          * 17281000
*                      |     ,WORKMOD=xworkmod                        * 17281100
*                      |     ,ANAME=xaname                            * 17281200
*                      |    <,ENAME=xename|0>                         * 17281300
*                      |    <,AMODE=xamode|0>                         * 17281400
*                      +-,FUNC=ALIGNTEXT|ALIGNT                       * 17281500
*                      |     ,WORKMOD=xworkmod                        * 17281600
*                      |     ,SECTION=xsection                        * 17281700
*                      +-,FUNC=ALTERWMOD|ALTERW                       * 17281800
*                      |     ,WORKMOD=xworkmod                        * 17281900
*                      |     ,OLDNAME=xoldname                        * 17282000
*                      |   +-,ATYPE=CHANGE|C                          * 17282100
*                      |   |     ,NEWNAME=xnewname                    * 17282200
*                      |   +-,ATYPE=RENAME|N                          * 17282300
*                      |   |     ,NEWNAME=xnewname                    * 17282400
*                      |   +-,ATYPE=REPLACE|R                         * 17282500
*                      |   |     ,NEWNAME=xnewname                    * 17282600
*                      |   +-,ATYPE=DELETE|D                          * 17282700
*                      |   +-,ATYPE=EXPAND|E                          * 17282800
*                      |         ,COUNT=xcount                        * 17282900
*                      |        <,CLASS=xclass|0>                 @L2A* 17283000
*                      |    <,MODE=NEXT|N|IMMED|I>                    * 17283100
*                      +-,FUNC=AUTOCALL|AUTOC                     @L5A* 17283200
*                      |     ,WORKMOD=xworkmod                    @L5A* 17283300
*                      |     ,CALLIB=xcallib                      @L5A* 17283400
*                      |     ,PATHNAME=xpathname                  @L6A* 17283500
*                      +-,FUNC=BINDWMOD|BINDW                         * 17283600
*                      |     ,WORKMOD=xworkmod                        * 17283700
*                      |    <,CALLIB=xcallib|0>                       * 17283800
*                      +-,FUNC=CREATEWMOD|CREATEW                     * 17283900
*                      |     ,DIALOG=xdialog                          * 17284000
*                      |     ,WORKMOD=xworkmod                        * 17284100
*                      |     ,INTENT=BIND|B|ACCESS|A                  * 17284200
*                      +-,FUNC=DELETEWMOD|DELETEW                     * 17284300
*                      |     ,WORKMOD=xworkmod                        * 17284400
*                      |    <,PROTECT=YES|Y|NO|N>                     * 17284500
*                      +-,FUNC=DLLRENAME|DLLR                     @L5A* 17284600
*                      |     ,WORKMOD=xworkmod                    @L5A* 17284700
*                      |     ,RENAMEL=xrenamel                    @L5A* 17284800
*                      +-,FUNC=ENDDIALOG|ENDD                         * 17284900
*                      |     ,DIALOG=xdialog                          * 17285000
*                      |    <,PROTECT=YES|Y|NO|N>                     * 17285100
*                      +-,FUNC=GETDATA|GETD                           * 17285200
*                      |     ,WORKMOD=xworkmod                        * 17285300
*                      |     ,CLASS=xclass                            * 17285400
*                      |    <,SECTION=xsection|0>                     * 17285500
*                      |     ,AREA=xarea                              * 17285600
*                      |     ,CURSOR=xcursor                          * 17285700
*                      |     ,COUNT=xcount                            * 17285800
*                      +-,FUNC=GETESD|GETE                            * 17285900
*                      |     ,WORKMOD=xworkmod                        * 17286000
*                      |    <,SECTION=xsection|0>                     * 17286100
*                      |    <,RECTYPE=xrectype|0>                     * 17286200
*                      |   +<,OFFSET=xoffset|-1                       * 17286300
*                      |   +-,SYMBOL=xsymbol|0>                       * 17286400
*                      |     ,AREA=xarea                              * 17286500
*                      |     ,CURSOR=xcursor                          * 17286600
*                      |     ,COUNT=xcount                            * 17286700
*                      +-,FUNC=GETNAMES|GETN                          * 17286800
*                      |     ,WORKMOD=xworkmod                        * 17286900
*                      |    <,AREA=xarea>                             * 17287000
*                      |     ,CURSOR=xcursor                          * 17287100
*                      |     ,COUNT=xcount                            * 17287200
*                      |     ,TCOUNT=xtcount                          * 17287300
*                      +-,FUNC=IMPORT                                 * 17287400
*                      |     ,WORKMOD=xworkmod                        * 17287500
*                      |   +-,ITYPE=CODE|C                            * 17287600
*                      |   +-,ITYPE=DATA|D                            * 17287700
*                      |     ,DLLNAME=xdllname                        * 17287800
*                      |     ,INAME=xiname                            * 17287900
*                      +-,FUNC=INCLUDE                                * 17288000
*                      |     ,WORKMOD=xworkmod                        * 17288100
*                      |   +-,INTYPE=DEPTR|D                          * 17288200
*                      |   |     ,DDNAME=xddname                      * 17288300
*                      |   |     ,DEPTR=xdeptr                        * 17288400
*                      |   +-,INTYPE=NAME|N                           * 17288500
*                      |   |     ,DDNAME=xddname                      * 17288600
*                      |   |        <,MEMBER=xmember|0>               * 17288700
*                      |   |     ,PATHNAME=xpathname             @P2A * 17288800
*                      |   +-,INTYPE=POINTER|P                        * 17288900
*                      |   |     ,DCBPTR=xdcbptr                      * 17289000
*                      |   |     ,DEPTR=xdeptr                        * 17289100
*                      |   +-,INTYPE=SMDE|S                           * 17289200
*                      |   |     ,DDNAME=xddname                      * 17289300
*                      |   |     ,DEPTR=xdeptr                        * 17289400
*                      |   +-,INTYPE=TOKEN|T                          * 17289500
*                      |         ,EPTOKEN=xeptoken                    * 17289600
*                      |         ,DDNAME=xddname                      * 17289700
*                      |    <,ATTRIB=NO|N|YES|Y>                      * 17289800
*                      |    <,ALIASES=NO|N|YES|Y>                     * 17289900
*                      +-,FUNC=INSERTSECT|INSERTS                     * 17290000
*                      |     ,WORKMOD=xworkmod                        * 17290100
*                      |     ,SECTION=xsection                        * 17290200
*                      +-,FUNC=LOADWMOD|LOADW                         * 17290300
*                      |     ,WORKMOD=xworkmod                        * 17290400
*                      |     ,EPLOC=xeploc                            * 17290500
*                      |   +-,IDENTIFY=NO|N                           * 17290600
*                      |   |     ,XTLST=xxtlst                        * 17290700
*                      |   +-,IDENTIFY=YES|Y                          * 17290800
*                      |        <,XTLST=xxtlst>                       * 17290900
*                      |        <,LNAME=xlname|0>                     * 17291000
*                      +-,FUNC=ORDERSECT|ORDERS                       * 17291100
*                      |     ,WORKMOD=xworkmod                        * 17291200
*                      |     ,SECTION=xsection                        * 17291300
*                      +-,FUNC=PUTDATA|PUTD                           * 17291400
*                      |     ,WORKMOD=xworkmod                        * 17291500
*                      |     ,CLASS=xclass                            * 17291600
*                      |     ,SECTION=xsection                        * 17291700
*                      |    <,AREA=xarea|0                            * 17291800
*                      |         ,COUNT=xcount>                       * 17291900
*                      |    <,CURSOR=xcursor|-1>                      * 17292000
*                      |    <,NEWSECT=NO|N|YES|Y>                     * 17292100
*                      |    <,ENDDATA=NO|N|YES|Y>                     * 17292200
*                      +-,FUNC=RENAME                          4@L5A  * 17292300
*                      |     ,WORKMOD=xworkmod                        * 17292400
*                      |     ,NEWNAME=xnewname                        * 17292500
*                      |     ,OLDNAME=xoldname                        * 17292600
*                      +-,FUNC=RESETWMOD|RESETW                       * 17292700
*                      |     ,WORKMOD=xworkmod                        * 17292800
*                      |     ,INTENT=BIND|B|ACCESS|A                  * 17292900
*                      |    <,PROTECT=YES|Y|NO|N>                     * 17293000
*                      +-,FUNC=SAVEWMOD|SAVEW                         * 17293100
*                      |     ,WORKMOD=xworkmod                        * 17293200
*                      |    <,MODLIB=xmodlib|0>                       * 17293300
*                      |    <,SNAME=xsname|0>                         * 17293400
*                      |    <,REPLACE=NO|N|YES|Y>                     * 17293500
*                      +-,FUNC=SETLIB|SETL                            * 17293600
*                      |     ,WORKMOD=xworkmod                        * 17293700
*                      |     ,SYMBOL=xsymbol                          * 17293800
*                      |    <,LIBOPT=CALL|C|NOCALL|N|EXCLUDE|E>       * 17293900
*                      |    <,CALLIB=xcallib|0>                       * 17294000
*                      |    <,PATHNAME=xpathname|0>             @P2A * 17294100
*                      +-,FUNC=SETOPTIONS|SETO                        * 17294200
*                      |   +-,DIALOG=xdialog                          * 17294300
*                      |   +-,WORKMOD=xworkmod                        * 17294400
*                      |    <,OPTION=xoption|0>                       * 17294500
*                      |    <,OPTVAL=xoptval|0>                       * 17294600
*                      |    <,PARMSTR=xparmstr|0>                @L2A * 17294700
*                      +-,FUNC=STARTDIALOG|STARTD                     * 17294800
*                      |     ,DIALOG=xdialog                          * 17294900
*                      |    <,FILES=xfiles|0>                         * 17295000
*                      |    <,EXITS=xexits|0>                         * 17295100
*                      |    <,OPTIONS=xoptions|0>                     * 17295200
*                      |    <,PARMSTR=xparmstr|0>                @L2A * 17295300
*                      +-,FUNC=STARTSEG|STARTS                        * 17295400
*                            ,WORKMOD=xworkmod                        * 17295500
*                            ,ORIGIN=xorigin                          * 17295600
*                           <,REGION=NO|N|YES|Y>                      * 17295700
*                       <,RETCODE=xretcode>                           * 17295800
*                       <,RSNCODE=xrsncode>                           * 17295900
*                       <,VERSION=1|2|3|4>                        @L7C* 17296000
*                      +<,MF=S>                                       * 17296100
*                      +<,MF=(L,xmfctrl,xmfattr|0D)>                  * 17296200
*                      +<,MF=(E,xmfctrl,COMPLETE)>                    * 17296300
*                                                                     * 17296400
*                                                                     * 17296500
*        Where: The keywords are described in macro IEWBIND2.         * 17296600
*                                                                     * 17296700
* RETURN CODES: Refer to macro IEWBIND2.                              * 17296800
*                                                                     * 17296900
* REASON CODES: Refer to macro IEWBIND2.                              * 17297000
*                                                                     * 17297100
* MODULE TYPE:  PL/X-370 MACRO                                        * 17297200
*                                                                     * 17297300
*   PROCESSOR:  PL/X-370                                              * 17297400
*                                                                     * 17297500
* COMPONENT:  DF108                                                   * 17297600
*                                                                     * 17297700
* DISTRIBUTION LIBRARY: AMACLIB                                       * 17297800
*                                                                     * 17297900
* MACRO USAGE NOTES: Refer to macro IEWBIND2                          * 17298000
*                                                                     * 17298100
* CHANGE ACTIVITY:                                                    * 17298200
*                                                                     * 17298300
* $L0=PMBINDER,JDZ1110,911213,SJPLPCC: Base macro                     * 17298400
* $L1=PM2ITER1,HDZ11C0,930603,SJPCNSN: DFSMS 1.3 CHANGES              * 17298500
* $01=OY61831 ,JDZ1110,930115,SJPLLDB: ABBREV FOR NTYPE               * 17298600
* $L2=PM2ITER2,HDZ11C0,940401,SJPLLDB: new parm lists  add &PARM      * 17300000
* $L3=PM2ITER3,HDZ11C0,940812,SJPLLDB: add &VERSION                   * 17300700
* $02=OW16586 ,JDZ1110,951218,SJPLSML: MISSING &XLABEL          @02A  * 17302500
* $L4=PM3DRVR1,HDZ1110,960115,SJPLSML: PM3 DRIVER 1             @L4A  * 17302900
* $L5=PM3DRVR2,HDZ1110,960402,SJPLSML: PM3 DRIVER 2             @L5A  * 17303300
* $P1=KM30304,HDZ11D0,961016,SJPLSML:  BAD ABREV OF CODE/DATA   @P1A  * 17303700
* $L6=PM3DRVR3,HDZ11D0,961018,SJPLSML: ADD PATHNAME PARM        @L6A  * 17304000
* $P2=NOPTM  ,HDZ11D0,970418,SJPLSML:  PROLOG UPDATE            @P2A  * 17304100
* $L7=XPLINK  ,HDZ11F0,990810,STLRWT: Multiclass segment offset @L7A  * 17304200
* $P2=K160768,HDZ11F0,991115,STLMD:  UPDATE PROLOG              @P2A  * 17308100
****** END OF SPECIFICATIONS *****************************************/ 17312000
*/********************************************************************* 17316000
         MACRO                                                          17350000
&XLABEL  IEWBIND &FUNC=,&WORKMOD=,&ANAME=,                             *17357300
               &ENAME=,&AMODE=,&SECTION=,&ATYPE=,&NEWNAME=,            *17364600
               &COUNT=,&MODE=,&OLDNAME=,&CALLIB=,&DIALOG=,&INTENT=,    *17372000
               &PROTECT=,&CLASS=,&AREA=,&CURSOR=,&RECTYPE=,&OFFSET=,   *17383000
               &SYMBOL=,&TCOUNT=,&INTYPE=,&DDNAME=,&MEMBER=,&DCBPTR=,  *17394000
               &DEPTR=,&EPTOKEN=,&ATTRIB=,&ALIASES=,&EPLOC=,&IDENTIFY=,*17405000
               &XTLST=,&LNAME=,&NEWSECT=,&ENDDATA=,&MODLIB=,&SNAME=,   *17416000
               &REPLACE=,&LIBOPT=,&OPTION=,&OPTVAL=,&FILES=,&EXITS=,   *17427000
               &OPTIONS=,&ORIGIN=,&REGION=,&RETCODE=,&RSNCODE=,&MF=,   *17445300
               &NTYPE=,&PARMS=,&VERSION=,&RENAMEL=,&ITYPE=,&DLLNAME=,  *17450500
               &INAME=,&PATHNAME=                                       17455700
.*******************************************************************    17460900
.* Parms &RENAMEL, &ITYPE, &DLLNAME, and &INAME                         17466100
.* were added to the above list per flag   @L5A                         17471300
.*                                                                      17473000
.* Parm &PATHNAME was added to the above list per flag @L6A             17474700
.*******************************************************************    17476500
.*******************************************************************    17482000
.*         Define all macro variables                                   17532000
.*******************************************************************    17977000
                 LCLC  &XFUNC      ++-VALUE                             17988000
                 LCLC  &XWORKMOD   ++-NAME                              17999000
                 LCLC  &XANAME     ++-NAME                              18010000
                 LCLC  &XENAME     ++-NAME                              18013600
                 LCLC  &XAMODE     ++-NAME                              18017200
                 LCLC  &XSECTION   ++-NAME                              18021000
                 LCLC  &XATYPE     ++-VALUE                             18032000
                 LCLC  &XNEWNAME   ++-NAME                              18043000
                 LCLC  &XCOUNT     ++-NAME                              18054000
                 LCLC  &XMODE      ++-VALUE                             18065000
                 LCLC  &XOLDNAME   ++-NAME                              18076000
                 LCLC  &XCALLIB    ++-NAME                              18087000
                 LCLC  &XDIALOG    ++-NAME                              18098000
                 LCLC  &XINTENT    ++-VALUE                             18109000
                 LCLC  &XPROTECT   ++-VALUE                             18120000
                 LCLC  &XCLASS     ++-NAME                              18131000
                 LCLC  &XAREA      ++-NAME                              18142000
                 LCLC  &XCURSOR    ++-NAME                              18153000
                 LCLC  &XRECTYPE   ++-NAME                              18164000
                 LCLC  &XOFFSET    ++-NAME                              18186000
                 LCLC  &XSYMBOL    ++-NAME                              18197000
                 LCLC  &XTCOUNT    ++-NAME                              18208000
                 LCLC  &XINTYPE    ++-VALUE                             18219000
                 LCLC  &XDDNAME    ++-NAME                              18230000
                 LCLC  &XMEMBER    ++-NAME                              18241000
                 LCLC  &XDCBPTR    ++-NAME                              18252000
                 LCLC  &XDEPTR     ++-NAME                              18263000
                 LCLC  &XEPTOKEN   ++-NAME                              18274000
                 LCLC  &XATTRIB    ++-VALUE                             18285000
                 LCLC  &XALIASES   ++-VALUE                             18296000
                 LCLC  &XEPLOC     ++-NAME                              18307000
                 LCLC  &XIDENTIFY  ++-VALUE                             18318000
                 LCLC  &XXTLST     ++-NAME                              18329000
                 LCLC  &XLNAME     ++-NAME                              18340000
                 LCLC  &XNEWSECT   ++-VALUE                             18351000
                 LCLC  &XENDDATA   ++-VALUE                             18362000
                 LCLC  &XMODLIB    ++-NAME                              18373000
                 LCLC  &XSNAME     ++-NAME                              18384000
                 LCLC  &XREPLACE   ++-VALUE                             18395000
                 LCLC  &XLIBOPT    ++-VALUE                             18406000
                 LCLC  &XOPTION    ++-NAME                              18428000
                 LCLC  &XOPTVAL    ++-NAME                              18439000
                 LCLC  &XFILES     ++-NAME                              18450000
                 LCLC  &XEXITS     ++-NAME                              18461000
                 LCLC  &XOPTIONS   ++-NAME                              18472000
                 LCLC  &XORIGIN    ++-NAME                              18483000
                 LCLC  &XREGION    ++-VALUE                             18494000
                 LCLC  &XRETCODE   ++-NAME                              18505000
                 LCLC  &XRSNCODE   ++-NAME                              18516000
                 LCLC  &XMF        ++-VALUE                             18527000
                 LCLC  &XNTYPE     ++-VALUE                             18549000
                 LCLC  &XPARMS     ++-NAME                         @L2A 18560000
                 LCLC  &XVERSION   ++-VALUE                        @L3A 18565500
                 LCLC  &XRENAMEL   ++-NAME                         @L5A 18566600
                 LCLC  &XITYPE     ++-VALUE                        @L5A 18567700
                 LCLC  &XDLLNAME   ++-NAME                         @L5A 18568800
                 LCLC  &XINAME     ++-NAME                         @L5A 18569900
.*******************************************************************    18571000
.*         Abbreviate keyword values                                    18582000
.*******************************************************************    18593000
&XFUNC           SETC  '&FUNC'     Keep original keyword value          18643000
                 AIF   ('&FUNC' EQ '').Z99FUNC                          18693000
                 AIF   (K'&FUNC(1) LE 0).Z99FUNC                        18743000
                 AIF   ('&FUNC(1)' NE 'ADDALIAS').Z01FUNC               18793000
&XFUNC           SETC  'ADDA'      Abbreviate keyword value             18843000
.Z01FUNC         ANOP  ,                                                18893000
                 AIF   ('&FUNC(1)' NE 'ALIGNTEXT').Z02FUNC              18943000
&XFUNC           SETC  'ALIGNT'    Abbreviate keyword value             18993000
.Z02FUNC         ANOP  ,                                                19043000
                 AIF   ('&FUNC(1)' NE 'ALTERWMOD').Z03FUNC              19093000
&XFUNC           SETC  'ALTERW'    Abbreviate keyword value             19143000
.Z03FUNC         ANOP  ,                                                19193000
.*  @L5A BEGIN  (3 lines added)                                         19201300
                 AIF   ('&FUNC(1)' NE 'AUTOCALL').Z03AFUNC              19209600
&XFUNC           SETC  'AUTOC'     Abbreviate keyword value             19217900
.Z03AFUNC        ANOP  ,                                                19226200
.*  @L5A END    (3 lines added)                                         19234500
                 AIF   ('&FUNC(1)' NE 'BINDWMOD').Z04FUNC               19243000
&XFUNC           SETC  'BINDW'     Abbreviate keyword value             19293000
.Z04FUNC         ANOP  ,                                                19343000
                 AIF   ('&FUNC(1)' NE 'CREATEWMOD').Z05FUNC             19393000
&XFUNC           SETC  'CREATEW'   Abbreviate keyword value             19443000
.Z05FUNC         ANOP  ,                                                19493000
.*  @L5A BEGIN  (3 lines added)                                         19501300
                 AIF   ('&FUNC(1)' NE 'DLLRENAME').Z05AFUNC             19509600
&XFUNC           SETC  'DLLR'      Abbreviate keyword value             19517900
.Z05AFUNC        ANOP  ,                                                19526200
.*  @L5A END    (3 lines added)                                         19534500
                 AIF   ('&FUNC(1)' NE 'DELETEWMOD').Z06FUNC             19543000
&XFUNC           SETC  'DELETEW'   Abbreviate keyword value             19593000
.Z06FUNC         ANOP  ,                                                19643000
                 AIF   ('&FUNC(1)' NE 'ENDDIALOG').Z07FUNC              19693000
&XFUNC           SETC  'ENDD'      Abbreviate keyword value             19743000
.Z07FUNC         ANOP  ,                                                19793000
                 AIF   ('&FUNC(1)' NE 'GETDATA').Z08FUNC                19843000
&XFUNC           SETC  'GETD'      Abbreviate keyword value             19893000
.Z08FUNC         ANOP  ,                                                19943000
                 AIF   ('&FUNC(1)' NE 'GETESD').Z09FUNC                 19993000
&XFUNC           SETC  'GETE'      Abbreviate keyword value             20043000
.Z09FUNC         ANOP  ,                                                20093000
                 AIF   ('&FUNC(1)' NE 'GETNAMES').Z12AFUNC              20143000
&XFUNC           SETC  'GETN'      Abbreviate keyword value             20193000
.Z12AFUNC        ANOP  ,                                                20226300
.* (Keyword value IMPORT is not abbreviated)                            20259600
.* (Keyword value INCLUDE is not abbreviated)                           20293000
                 AIF   ('&FUNC(1)' NE 'INSERTSECT').Z12FUNC             20343000
&XFUNC           SETC  'INSERTS'   Abbreviate keyword value             20393000
.Z12FUNC         ANOP  ,                                                20443000
                 AIF   ('&FUNC(1)' NE 'LOADWMOD').Z13FUNC               20493000
&XFUNC           SETC  'LOADW'     Abbreviate keyword value             20543000
.Z13FUNC         ANOP  ,                                                20593000
                 AIF   ('&FUNC(1)' NE 'ORDERSECT').Z14FUNC              20643000
&XFUNC           SETC  'ORDERS'    Abbreviate keyword value             20693000
.Z14FUNC         ANOP  ,                                                20743000
                 AIF   ('&FUNC(1)' NE 'PUTDATA').Z15FUNC                20793000
&XFUNC           SETC  'PUTD'      Abbreviate keyword value             20843000
.Z15FUNC         ANOP  ,                                                20893000
.* (Keyword value RENAME is not abbreviated)                            20918000
                 AIF   ('&FUNC(1)' NE 'RESETWMOD').Z16FUNC              20943000
&XFUNC           SETC  'RESETW'    Abbreviate keyword value             20993000
.Z16FUNC         ANOP  ,                                                21043000
                 AIF   ('&FUNC(1)' NE 'SAVEWMOD').Z17FUNC               21093000
&XFUNC           SETC  'SAVEW'     Abbreviate keyword value             21143000
.Z17FUNC         ANOP  ,                                                21193000
                 AIF   ('&FUNC(1)' NE 'SETLIB').Z18FUNC                 21243000
&XFUNC           SETC  'SETL'      Abbreviate keyword value             21293000
.Z18FUNC         ANOP  ,                                                21343000
                 AIF   ('&FUNC(1)' NE 'SETOPTIONS').Z19FUNC             21393000
&XFUNC           SETC  'SETO'      Abbreviate keyword value             21443000
.Z19FUNC         ANOP  ,                                                21493000
                 AIF   ('&FUNC(1)' NE 'STARTDIALOG').Z20FUNC            21543000
&XFUNC           SETC  'STARTD'    Abbreviate keyword value             21593000
.Z20FUNC         ANOP  ,                                                21643000
                 AIF   ('&FUNC(1)' NE 'STARTSEG').Z21FUNC               21693000
&XFUNC           SETC  'STARTS'    Abbreviate keyword value             21743000
.Z21FUNC         ANOP  ,                                                21793000
.Z99FUNC         ANOP  ,                                                21843000
&XATYPE          SETC  '&ATYPE'       Keep original keyword value       21893000
                 AIF   ('&ATYPE' EQ '').Z99ATYPE                        21943000
                 AIF   (K'&ATYPE(1) LE 0).Z99ATYPE                      21993000
                 AIF   ('&ATYPE(1)' NE 'CHANGE').Z01ATYPE               22043000
&XATYPE          SETC  'C'         Abbreviate keyword value             22093000
.Z01ATYPE        ANOP  ,                                                22143000
                 AIF   ('&ATYPE(1)' NE 'REPLACE').Z02ATYPE              22193000
&XATYPE          SETC  'R'         Abbreviate keyword value             22243000
.Z02ATYPE        ANOP  ,                                                22293000
                 AIF   ('&ATYPE(1)' NE 'DELETE').Z03ATYPE               22343000
&XATYPE          SETC  'D'         Abbreviate keyword value             22393000
.Z03ATYPE        ANOP  ,                                                22443000
                 AIF   ('&ATYPE(1)' NE 'EXPAND').Z04ATYPE               22493000
&XATYPE          SETC  'E'         Abbreviate keyword value             22543000
.Z04ATYPE        ANOP  ,                                                22593000
.Z99ATYPE        ANOP  ,                                                22643000
&XMODE           SETC  '&MODE'        Keep original keyword value       22693000
                 AIF   ('&MODE' EQ '').Z99MODE                          22743000
                 AIF   (K'&MODE(1) LE 0).Z99MODE                        22793000
                 AIF   ('&MODE(1)' NE 'NEXT').Z01MODE                   22843000
&XMODE           SETC  'N'         Abbreviate keyword value             22893000
.Z01MODE         ANOP  ,                                                22943000
                 AIF   ('&MODE(1)' NE 'IMMED').Z02MODE                  22993000
&XMODE           SETC  'I'         Abbreviate keyword value             23043000
.Z02MODE         ANOP  ,                                                23093000
.Z99MODE         ANOP  ,                                                23143000
&XINTENT         SETC  '&INTENT'      Keep original keyword value       23193000
                 AIF   ('&INTENT' EQ '').Z99INTENT                      23243000
                 AIF   (K'&INTENT(1) LE 0).Z99INTENT                    23293000
                 AIF   ('&INTENT(1)' NE 'BIND').Z01INTENT               23343000
&XINTENT         SETC  'B'         Abbreviate keyword value             23393000
.Z01INTENT       ANOP  ,                                                23443000
                 AIF   ('&INTENT(1)' NE 'ACCESS').Z02INTENT             23493000
&XINTENT         SETC  'A'         Abbreviate keyword value             23543000
.Z02INTENT       ANOP  ,                                                23593000
.Z99INTENT       ANOP  ,                                                23643000
&XPROTECT        SETC  '&PROTECT'    Keep original keyword value        23693000
                 AIF   ('&PROTECT' EQ '').Z99PROTECT                    23743000
                 AIF   (K'&PROTECT(1) LE 0).Z99PROTECT                  23793000
                 AIF   ('&PROTECT(1)' NE 'YES').Z01PROTECT              23843000
&XPROTECT        SETC  'Y'         Abbreviate keyword value             23893000
.Z01PROTECT      ANOP  ,                                                23943000
                 AIF   ('&PROTECT(1)' NE 'NO').Z02PROTECT               23993000
&XPROTECT        SETC  'N'         Abbreviate keyword value             24043000
.Z02PROTECT      ANOP  ,                                                24093000
.Z99PROTECT      ANOP  ,                                                24143000
&XINTYPE         SETC  '&INTYPE'      Keep original keyword value       24193000
                 AIF   ('&INTYPE' EQ '').Z99INTYPE                      24243000
                 AIF   (K'&INTYPE(1) LE 0).Z99INTYPE                    24293000
                 AIF   ('&INTYPE(1)' NE 'NAME').Z01INTYPE               24343000
&XINTYPE         SETC  'N'         Abbreviate keyword value             24393000
.Z01INTYPE       ANOP  ,                                                24443000
                 AIF   ('&INTYPE(1)' NE 'POINTER').Z02INTYPE            24493000
&XINTYPE         SETC  'P'         Abbreviate keyword value             24543000
.Z02INTYPE       ANOP  ,                                                24593000
                 AIF   ('&INTYPE(1)' NE 'TOKEN').Z03INTYPE              24643000
&XINTYPE         SETC  'T'         Abbreviate keyword value             24693000
.Z03INTYPE       ANOP  ,                                                24743000
                 AIF   ('&INTYPE(1)' NE 'SMDE').Z04INTYPE               24750100
&XINTYPE         SETC  'S'         Abbreviate keyword value             24757200
.Z04INTYPE       ANOP  ,                                                24764300
                 AIF   ('&INTYPE(1)' NE 'DEPTR').Z05INTYPE              24771400
&XINTYPE         SETC  'D'         Abbreviate keyword value             24778500
.Z05INTYPE       ANOP  ,                                                24785600
.Z99INTYPE       ANOP  ,                                                24793000
&XATTRIB         SETC  '&ATTRIB'      Keep original keyword value       24843000
                 AIF   ('&ATTRIB' EQ '').Z99ATTRIB                      24893000
                 AIF   (K'&ATTRIB(1) LE 0).Z99ATTRIB                    24943000
                 AIF   ('&ATTRIB(1)' NE 'NO').Z01ATTRIB                 24993000
&XATTRIB         SETC  'N'         Abbreviate keyword value             25043000
.Z01ATTRIB       ANOP  ,                                                25093000
                 AIF   ('&ATTRIB(1)' NE 'YES').Z02ATTRIB                25143000
&XATTRIB         SETC  'Y'         Abbreviate keyword value             25193000
.Z02ATTRIB       ANOP  ,                                                25243000
.Z99ATTRIB       ANOP  ,                                                25293000
&XALIASES        SETC  '&ALIASES'     Keep original keyword value       25343000
                 AIF   ('&ALIASES' EQ '').Z99ALIASES                    25393000
                 AIF   (K'&ALIASES(1) LE 0).Z99ALIASES                  25443000
                 AIF   ('&ALIASES(1)' NE 'NO').Z01ALIASES               25493000
&XALIASES        SETC  'N'         Abbreviate keyword value             25543000
.Z01ALIASES      ANOP  ,                                                25593000
                 AIF   ('&ALIASES(1)' NE 'YES').Z02ALIASES              25643000
&XALIASES        SETC  'Y'         Abbreviate keyword value             25693000
.Z02ALIASES      ANOP  ,                                                25743000
.Z99ALIASES      ANOP  ,                                                25793000
&XIDENTIFY       SETC  '&IDENTIFY'    Keep original keyword value       25843000
                 AIF   ('&IDENTIFY' EQ '').Z99IDENTIFY                  25893000
                 AIF   (K'&IDENTIFY(1) LE 0).Z99IDENTIFY                25943000
                 AIF   ('&IDENTIFY(1)' NE 'NO').Z01IDENTIFY             25993000
&XIDENTIFY       SETC  'N'         Abbreviate keyword value             26043000
.Z01IDENTIFY     ANOP  ,                                                26093000
                 AIF   ('&IDENTIFY(1)' NE 'YES').Z02IDENTIFY            26143000
&XIDENTIFY       SETC  'Y'         Abbreviate keyword value             26193000
.Z02IDENTIFY     ANOP  ,                                                26243000
.Z99IDENTIFY     ANOP  ,                                                26293000
&XNEWSECT        SETC  '&NEWSECT'    Keep original keyword value        26343000
                 AIF   ('&NEWSECT' EQ '').Z99NEWSECT                    26393000
                 AIF   (K'&NEWSECT(1) LE 0).Z99NEWSECT                  26443000
                 AIF   ('&NEWSECT(1)' NE 'NO').Z01NEWSECT               26493000
&XNEWSECT        SETC  'N'         Abbreviate keyword value             26543000
.Z01NEWSECT      ANOP  ,                                                26593000
                 AIF   ('&NEWSECT(1)' NE 'YES').Z02NEWSECT              26643000
&XNEWSECT        SETC  'Y'         Abbreviate keyword value             26693000
.Z02NEWSECT      ANOP  ,                                                26743000
.Z99NEWSECT      ANOP  ,                                                26793000
&XENDDATA        SETC  '&ENDDATA'    Keep original keyword value        26843000
                 AIF   ('&ENDDATA' EQ '').Z99ENDDATA                    26893000
                 AIF   (K'&ENDDATA(1) LE 0).Z99ENDDATA                  26943000
                 AIF   ('&ENDDATA(1)' NE 'NO').Z01ENDDATA               26993000
&XENDDATA        SETC  'N'         Abbreviate keyword value             27043000
.Z01ENDDATA      ANOP  ,                                                27093000
                 AIF   ('&ENDDATA(1)' NE 'YES').Z02ENDDATA              27143000
&XENDDATA        SETC  'Y'         Abbreviate keyword value             27193000
.Z02ENDDATA      ANOP  ,                                                27243000
.Z99ENDDATA      ANOP  ,                                                27293000
&XREPLACE        SETC  '&REPLACE'    Keep original keyword value        27343000
                 AIF   ('&REPLACE' EQ '').Z99REPLACE                    27393000
                 AIF   (K'&REPLACE(1) LE 0).Z99REPLACE                  27443000
                 AIF   ('&REPLACE(1)' NE 'NO').Z01REPLACE               27493000
&XREPLACE        SETC  'N'         Abbreviate keyword value             27543000
.Z01REPLACE      ANOP  ,                                                27593000
                 AIF   ('&REPLACE(1)' NE 'YES').Z02REPLACE              27643000
&XREPLACE        SETC  'Y'         Abbreviate keyword value             27693000
.Z02REPLACE      ANOP  ,                                                27743000
.Z99REPLACE      ANOP  ,                                                27793000
&XLIBOPT         SETC  '&LIBOPT'    Keep original keyword value         27843000
                 AIF   ('&LIBOPT' EQ '').Z99LIBOPT                      27893000
                 AIF   (K'&LIBOPT(1) LE 0).Z99LIBOPT                    27943000
                 AIF   ('&LIBOPT(1)' NE 'CALL').Z01LIBOPT               27993000
&XLIBOPT         SETC  'C'         Abbreviate keyword value             28043000
.Z01LIBOPT       ANOP  ,                                                28093000
                 AIF   ('&LIBOPT(1)' NE 'NOCALL').Z02LIBOPT             28143000
&XLIBOPT         SETC  'N'         Abbreviate keyword value             28193000
.Z02LIBOPT       ANOP  ,                                                28243000
                 AIF   ('&LIBOPT(1)' NE 'EXCLUDE').Z03LIBOPT            28293000
&XLIBOPT         SETC  'E'         Abbreviate keyword value             28343000
.Z03LIBOPT       ANOP  ,                                                28393000
.Z99LIBOPT       ANOP  ,                                                28443000
&XREGION         SETC  '&REGION'    Keep original keyword value         28493000
                 AIF   ('&REGION' EQ '').Z99REGION                      28543000
                 AIF   (K'&REGION(1) LE 0).Z99REGION                    28593000
                 AIF   ('&REGION(1)' NE 'NO').Z01REGION                 28643000
&XREGION         SETC  'N'         Abbreviate keyword value             28693000
.Z01REGION       ANOP  ,                                                28743000
                 AIF   ('&REGION(1)' NE 'YES').Z02REGION                28793000
&XREGION         SETC  'Y'         Abbreviate keyword value             28843000
.Z02REGION       ANOP  ,                                                28893000
.Z99REGION       ANOP  ,                                                28943000
&XNTYPE          SETC  '&NTYPE'    Keep original keyword value   @01A   28947500
                 AIF   ('&NTYPE' EQ '').Z99NTYPE                        28952000
                 AIF   (K'&NTYPE(1) LE 0).Z99NTYPE                      28956500
                 AIF   ('&NTYPE(1)' NE 'SECTION').Z01NTYPE              28961000
&XNTYPE          SETC  'S'         Abbreviate keyword value             28965500
.Z01NTYPE        ANOP  ,                                                28970000
                 AIF   ('&NTYPE(1)' NE 'CLASS').Z02NTYPE                28974500
&XNTYPE          SETC  'C'         Abbreviate keyword value             28979000
.Z02NTYPE        ANOP  ,                                                28983500
.Z99NTYPE        ANOP  ,                                                28988000
&XRENAMEL        SETC  '&RENAMEL'    Keep original keyword value        28988400
&XVERSION        SETC  '&VERSION'   Keep original keyword value         28988800
&XITYPE          SETC  '&ITYPE'     Keep original keyword value         28989200
                 AIF   ('&ITYPE' EQ '').Z99ITYPE                        28989600
                 AIF   (K'&ITYPE(1) LE 0).Z99ITYPE                      28990000
                 AIF   ('&ITYPE(1)' NE 'CODE').Z01ITYPE                 28990400
&XITYPE          SETC  'C'          Abbreviate keyword value            28990800
.Z01ITYPE        ANOP  ,                                                28991200
                 AIF   ('&ITYPE(1)' NE 'DATA').Z99ITYPE                 28991600
&XITYPE          SETC  'D'          Abbreviate keyword value            28992000
.Z99ITYPE        ANOP  ,                                                28992400
.*******************************************************************    28993000
.*         Invoke IEWBIND2 with fixed up parameters                     29043000
.*******************************************************************    29093000
.* @02A - THE LINE BELOW WAS MISSING &XLABEL,WHICH CAUSED AN INVOCATION 29113000
.* @02A - TO IEWBIND2 W/O A LABEL, AND SO IF THE CALLER SPECIFIED ONE   29133000
.* @02A - HE/SHE WOULD NEVER HAVE GOTTEN IT IN THE MACRO EXPANSION.     29153000
.*                                                                      29158000
.* @L5A - RENAMEL, ITYPE, DLLNAME, and INAME                            29163000
.* @L5A - WERE ADDED TO THE LIST OF PARMS BELOW PER @L5                 29168000
.*                                                                      29169600
.* @L6A - PATHNAME WAS ADDED TO THE LIST OF PARMS PER @L6A              29171200
&XLABEL  IEWBIND2                                                      X29173000
               FUNC=&XFUNC,                                            X29193000
               WORKMOD=&WORKMOD,                                       X29243000
               ANAME=&ANAME,                                           X29293000
               ENAME=&ENAME,                                           X29343000
               AMODE=&AMODE,                                           X29393000
               SECTION=&SECTION,                                       X29443000
               ATYPE=&XATYPE,                                          X29493000
               NEWNAME=&NEWNAME,                                       X29543000
               COUNT=&COUNT,                                           X29593000
               MODE=&XMODE,                                            X29643000
               OLDNAME=&OLDNAME,                                       X29693000
               CALLIB=&CALLIB,                                         X29743000
               DIALOG=&DIALOG,                                         X29793000
               INTENT=&XINTENT,                                        X29843000
               PROTECT=&XPROTECT,                                      X29893000
               CLASS=&CLASS,                                           X29943000
               AREA=&AREA,                                             X29993000
               CURSOR=&CURSOR,                                         X30043000
               RECTYPE=&RECTYPE,                                       X30093000
               OFFSET=&OFFSET,                                         X30143000
               SYMBOL=&SYMBOL,                                         X30193000
               TCOUNT=&TCOUNT,                                         X30243000
               INTYPE=&XINTYPE,                                        X30293000
               DDNAME=&DDNAME,                                         X30343000
               MEMBER=&MEMBER,                                         X30393000
               DCBPTR=&DCBPTR,                                         X30443000
               DEPTR=&DEPTR,                                           X30493000
               EPTOKEN=&EPTOKEN,                                       X30543000
               ATTRIB=&XATTRIB,                                        X30593000
               ALIASES=&XALIASES,                                      X30643000
               EPLOC=&EPLOC,                                           X30693000
               IDENTIFY=&XIDENTIFY,                                    X30743000
               EXTLST=&XTLST,                                          X30793000
               LNAME=&LNAME,                                           X30843000
               NEWSECT=&XNEWSECT,                                      X30893000
               ENDDATA=&XENDDATA,                                      X30943000
               MODLIB=&MODLIB,                                         X30993000
               SNAME=&SNAME,                                           X31043000
               REPLACE=&XREPLACE,                                      X31093000
               LIBOPT=&XLIBOPT,                                        X31143000
               OPTION=&OPTION,                                         X31193000
               OPTVAL=&OPTVAL,                                         X31243000
               FILES=&FILES,                                           X31293000
               EXITS=&EXITS,                                           X31343000
               OPTIONS=&OPTIONS,                                       X31393000
               ORIGIN=&ORIGIN,                                         X31443000
               REGION=&XREGION,                                        X31493000
               NTYPE=&XNTYPE,                                          X31518000
               PARMS=&PARMS,                                           X31530500
               RETCODE=&RETCODE,                                       X31543000
               RSNCODE=&RSNCODE,                                       X31593000
               VERSION=&VERSION,                                       X31618000
               RENAMEL=&RENAMEL,                                       X31623000
               ITYPE=&XITYPE,                                          X31628000
               DLLNAME=&DLLNAME,                                       X31633000
               INAME=&INAME,                                           X31638000
               PATHNAME=&PATHNAME,                                     X31640500
               MF=&MF                                                   31643000
         MEND                                                           99861000
**********************************************************************/ 99872000
*/* Start of PL/X macro----------------------------------------------*/ 99883000
*%IEWBIND: MACRO KEYS(FUNC,WORKMOD,ANAME,                               99890300
*                 ENAME,AMODE,SECTION,ATYPE,NEWNAME,COUNT,              99897600
*                 MODE,OLDNAME,CALLIB,DIALOG,INTENT,PROTECT,CLASS,      99905000
*                 AREA,CURSOR,RECTYPE,OFFSET,SYMBOL,TCOUNT,INTYPE,      99916000
*                 DDNAME,MEMBER,DCBPTR,DEPTR,EPTOKEN,ATTRIB,ALIASES,    99927000
*                 EPLOC,IDENTIFY,XTLST,LNAME,NEWSECT,ENDDATA,MODLIB,    99938000
*                 SNAME,REPLACE,LIBOPT,OPTION,OPTVAL,FILES,EXITS,       99949000
*                 OPTIONS,ORIGIN,REGION,NTYPE,                          99952700
*                 PARMS,RETCODE,RSNCODE,VERSION,RENAMEL,ITYPE,DLLNAME,  99954500
*                 INAME,PATHNAME,MF) TRACE;                             99956300
*                                                           /* @L5A  */ 99958100
*                                                                       99960100
*DCL XMACKEYS CHAR;                 /* Fixed up MACKEYS string       */ 99960200
*DCL XLEFT FIXED;                   /* Last byte of left text        */ 99960300
*DCL XRIGHT FIXED;                  /* First byte of right text      */ 99960400
*                                                                       99960500
*XMACKEYS=MACKEYS;                  /* Make local copy of keywords   */ 99960600
*IF FUNC(1)^='' THEN                /* FUNC(something) passed in     */ 99960700
*DO;                                /* Abbreviate FUNC keyword value */ 99960800
*  XFUNC=FUNC(1);                   /* Set passed keyword value      */ 99960900
*  XLEFT=4+INDEX(XMACKEYS,'FUNC('); /* Point to left parenthesis     */ 99961000
*  XRIGHT=XLEFT+1+LENGTH(XFUNC); /* Point to right parenthesis       */ 99961100
*  IF FUNC(1)='ADDALIAS' THEN XFUNC='ADDA';           /* Abbreviate  */ 99961200
*  IF FUNC(1)='ALIGNTEXT' THEN XFUNC='ALIGNT';        /* Abbreviate  */ 99961300
*  IF FUNC(1)='ALTERWMOD' THEN XFUNC='ALTERW';        /* Abbreviate  */ 99961400
*  IF FUNC(1)='AUTOCALL' THEN XFUNC='AUTOC';          /*       @L5A  */ 99961500
*  IF FUNC(1)='BINDWMOD' THEN XFUNC='BINDW';          /* Abbreviate  */ 99961600
*  IF FUNC(1)='CREATEWMOD' THEN XFUNC='CREATEW';      /* Abbreviate  */ 99961700
*  IF FUNC(1)='DELETEWMOD' THEN XFUNC='DELETEW';      /* Abbreviate  */ 99961800
*  IF FUNC(1)='DLLRENAME' THEN XFUNC='DLLR';          /*       @L5A  */ 99961900
*  IF FUNC(1)='ENDDIALOG' THEN XFUNC='ENDD';          /* Abbreviate  */ 99962000
*  IF FUNC(1)='GETDATA' THEN XFUNC='GETD';            /* Abbreviate  */ 99962100
*  IF FUNC(1)='GETESD' THEN XFUNC='GETE';             /* Abbreviate  */ 99962200
*  IF FUNC(1)='GETNAMES' THEN XFUNC='GETN';           /* Abbreviate  */ 99962300
*  /*    (FUNC(IMPORT) is not abbreviated)                     @L5A  */ 99962400
*  /*    (FUNC(INCLUDE) is not abbreviated)                          */ 99962500
*  IF FUNC(1)='INSERTSECT' THEN XFUNC='INSERTS';      /* Abbreviate  */ 99962600
*  IF FUNC(1)='LOADWMOD' THEN XFUNC='LOADW';          /* Abbreviate  */ 99962700
*  IF FUNC(1)='ORDERSECT' THEN XFUNC='ORDERS';        /* Abbreviate  */ 99962800
*  IF FUNC(1)='PUTDATA' THEN XFUNC='PUTD';            /* Abbreviate  */ 99962900
*  /*    (FUNC(RENAME) is not abbreviated)                     @L5A  */ 99963000
*  IF FUNC(1)='RESETWMOD' THEN XFUNC='RESETW';        /* Abbreviate  */ 99963100
*  IF FUNC(1)='SAVEWMOD' THEN XFUNC='SAVEW';          /* Abbreviate  */ 99963200
*  IF FUNC(1)='SETLIB' THEN XFUNC='SETL';             /* Abbreviate  */ 99963300
*  IF FUNC(1)='SETOPTIONS' THEN XFUNC='SETO';         /* Abbreviate  */ 99963400
*  IF FUNC(1)='STARTDIALOG' THEN XFUNC='STARTD';      /* Abbreviate  */ 99963500
*  IF FUNC(1)='STARTSEG' THEN XFUNC='STARTS';         /* Abbreviate  */ 99963600
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99963700
*           XFUNC ||                /* Abbreviated FUNC value        */ 99963800
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99963900
*END;                               /* Abbreviate FUNC keyword value */ 99964000
*                                                                       99964100
*IF ATYPE(1)^='' THEN               /* ATYPE(something) passed in    */ 99964200
*DO;                                /* Abbreviate ATYPE keyword      */ 99964300
*  XATYPE=ATYPE(1);                 /* Set passed keyword value      */ 99964400
*  XLEFT=5+INDEX(XMACKEYS,'ATYPE('); /* Point to left parenthesis    */ 99964500
*  XRIGHT=XLEFT+1+LENGTH(XATYPE); /* Point to right parenthesis      */ 99964600
*  IF ATYPE(1)='CHANGE' THEN XATYPE='C';    /* Abbreviate            */ 99964700
*  IF ATYPE(1)='REPLACE' THEN XATYPE='R';   /* Abbreviate            */ 99964800
*  IF ATYPE(1)='DELETE' THEN XATYPE='D';    /* Abbreviate            */ 99964900
*  IF ATYPE(1)='EXPAND' THEN XATYPE='E';    /* Abbreviate            */ 99965000
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99965100
*           XATYPE ||               /* Abbreviated ATYPE value       */ 99965200
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99965300
*END;                               /* Abbreviate ATYPE keyword      */ 99965400
*                                                                       99965500
*IF MODE(1)^='' THEN                /* MODE(something) passed in     */ 99965600
*DO;                                /* Abbreviate MODE keyword       */ 99965700
*  XMODE=MODE(1);                   /* Set passed keyword value      */ 99965800
*  XLEFT=4+INDEX(XMACKEYS,'MODE('); /* Point to left parenthesis     */ 99965900
*  XRIGHT=XLEFT+1+LENGTH(XMODE); /* Point to right parenthesis       */ 99966000
*  IF MODE(1)='NEXT' THEN XMODE='N';        /* Abbreviate            */ 99966100
*  IF MODE(1)='IMMED' THEN XMODE='I';       /* Abbreviate            */ 99966200
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99966300
*           XMODE ||                /* Abbreviated MODE value        */ 99966400
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99966500
*END;                               /* Abbreviate MODE keyword       */ 99966600
*                                                                       99966700
*IF INTENT(1)^='' THEN              /* INTENT(something) passed in   */ 99966800
*DO;                                /* Abbreviate INTENT keyword     */ 99966900
*  XINTENT=INTENT(1);               /* Set passed keyword value      */ 99967000
*  XLEFT=6+INDEX(XMACKEYS,'INTENT('); /* Point to left parenthesis */   99967100
*  XRIGHT=XLEFT+1+LENGTH(XINTENT); /* Point to right parenthesis     */ 99967200
*  IF INTENT(1)='BIND' THEN XINTENT='B';    /* Abbreviate            */ 99967300
*  IF INTENT(1)='ACCESS' THEN XINTENT='A';  /* Abbreviate            */ 99967400
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99967500
*           XINTENT ||              /* Abbreviated INTENT value      */ 99967600
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99967700
*END;                               /* Abbreviate INTENT keyword     */ 99967800
*                                                                       99967900
*IF PROTECT(1)^='' THEN             /* PROTECT(something) passed in  */ 99968000
*DO;                                /* Abbreviate PROTECT keyword    */ 99968100
*  XPROTECT=PROTECT(1);             /* Set passed keyword value      */ 99968200
*  XLEFT=7+INDEX(XMACKEYS,'PROTECT('); /* Point to left paren.       */ 99968300
*  XRIGHT=XLEFT+1+LENGTH(XPROTECT); /* Point to right parenthesis */    99968400
*  IF PROTECT(1)='YES' THEN XPROTECT='Y';   /* Abbreviate            */ 99968500
*  IF PROTECT(1)='NO' THEN XPROTECT='N';    /* Abbreviate            */ 99968600
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99968700
*           XPROTECT ||             /* Abbreviated PROTECT value     */ 99968800
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99968900
*END;                               /* Abbreviate PROTECT keyword    */ 99969000
*                                                                       99969100
*IF INTYPE(1)^='' THEN              /* INTYPE(something) passed in   */ 99969200
*DO;                                /* Abbreviate INTYPE keyword     */ 99969300
*  XINTYPE=INTYPE(1);               /* Set passed keyword value      */ 99969400
*  XLEFT=6+INDEX(XMACKEYS,'INTYPE('); /* Point to left paren.        */ 99969500
*  XRIGHT=XLEFT+1+LENGTH(XINTYPE); /* Point to right parenthesis */     99969600
*  IF INTYPE(1)='NAME' THEN XINTYPE='N';    /* Abbreviate            */ 99969700
*  IF INTYPE(1)='POINTER' THEN XINTYPE='P'; /* Abbreviate            */ 99969800
*  IF INTYPE(1)='TOKEN' THEN XINTYPE='T';   /* Abbreviate            */ 99969900
*  IF INTYPE(1)='SMDE' THEN XINTYPE='S';    /* Abbreviate            */ 99970000
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99970100
*           XINTYPE ||              /* Abbreviated INTYPE value      */ 99970200
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99970300
*END;                               /* Abbreviate INTYPE keyword     */ 99970500
*                                                                       99970700
*IF ATTRIB(1)^='' THEN              /* ATTRIB(something) passed in   */ 99970900
*DO;                                /* Abbreviate ATTRIB keyword     */ 99971100
*  XATTRIB=ATTRIB(1);               /* Set passed keyword value      */ 99971300
*  XLEFT=6+INDEX(XMACKEYS,'ATTRIB('); /* Point to left paren.        */ 99971500
*  XRIGHT=XLEFT+1+LENGTH(XATTRIB); /* Point to right parenthesis */     99971700
*  IF ATTRIB(1)='NO' THEN XATTRIB='N';      /* Abbreviate            */ 99971900
*  IF ATTRIB(1)='YES' THEN XATTRIB='Y';     /* Abbreviate            */ 99972100
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99972300
*           XATTRIB ||              /* Abbreviated ATTRIB value      */ 99972500
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99972700
*END;                               /* Abbreviate ATTRIB keyword     */ 99972900
*                                                                       99973100
*IF ALIASES(1)^='' THEN             /* ALIASES(something) passed in  */ 99973300
*DO;                                /* Abbreviate ALIASES keyword    */ 99973500
*  XALIASES=ALIASES(1);             /* Set passed keyword value      */ 99973700
*  XLEFT=7+INDEX(XMACKEYS,'ALIASES('); /* Point to left paren.       */ 99973900
*  XRIGHT=XLEFT+1+LENGTH(XALIASES); /* Point to right parenthesis */    99974100
*  IF ALIASES(1)='NO' THEN XALIASES='N';    /* Abbreviate            */ 99974300
*  IF ALIASES(1)='YES' THEN XALIASES='Y';   /* Abbreviate            */ 99974500
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99974700
*           XALIASES ||             /* Abbreviated ALIASES value     */ 99974900
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99975100
*END;                               /* Abbreviate ALIASES keyword    */ 99975300
*                                                                       99975500
*IF IDENTIFY(1)^='' THEN            /* IDENTIFY(something) passed in */ 99975700
*DO;                                /* Abbreviate IDENTIFY keyword   */ 99975900
*  XIDENTIFY=IDENTIFY(1);           /* Set passed keyword value      */ 99976100
*  XLEFT=8+INDEX(XMACKEYS,'IDENTIFY('); /* Point to left paren.      */ 99976300
*  XRIGHT=XLEFT+1+LENGTH(XIDENTIFY); /* Point to right paren.        */ 99976500
*  IF IDENTIFY(1)='NO' THEN XIDENTIFY='N';  /* Abbreviate            */ 99976700
*  IF IDENTIFY(1)='YES' THEN XIDENTIFY='Y'; /* Abbreviate            */ 99976900
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99977100
*           XIDENTIFY ||            /* Abbreviated IDENTIFY value    */ 99977300
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99977500
*END;                               /* Abbreviate IDENTIFY keyword   */ 99977700
*                                                                       99977900
*IF NEWSECT(1)^='' THEN             /* NEWSECT(something) passed in  */ 99978100
*DO;                                /* Abbreviate NEWSECT keyword    */ 99978300
*  XNEWSECT=NEWSECT(1);             /* Set passed keyword value      */ 99978500
*  XLEFT=7+INDEX(XMACKEYS,'NEWSECT('); /* Point to left paren.       */ 99978700
*  XRIGHT=XLEFT+1+LENGTH(XNEWSECT); /* Point to right parenthesis */    99978900
*  IF NEWSECT(1)='NO' THEN XNEWSECT='N';    /* Abbreviate            */ 99979100
*  IF NEWSECT(1)='YES' THEN XNEWSECT='Y';   /* Abbreviate            */ 99979300
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99979500
*           XNEWSECT ||             /* Abbreviated NEWSECT value     */ 99979700
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99979900
*END;                               /* Abbreviate NEWSECT keyword    */ 99980100
*                                                                       99980300
*IF ENDDATA(1)^='' THEN             /* ENDDATA(something) passed in  */ 99980500
*DO;                                /* Abbreviate ENDDATA keyword    */ 99980700
*  XENDDATA=ENDDATA(1);             /* Set passed keyword value      */ 99980900
*  XLEFT=7+INDEX(XMACKEYS,'ENDDATA('); /* Point to left paren.       */ 99981100
*  XRIGHT=XLEFT+1+LENGTH(XENDDATA); /* Point to right parenthesis */    99981300
*  IF ENDDATA(1)='NO' THEN XENDDATA='N';    /* Abbreviate            */ 99981500
*  IF ENDDATA(1)='YES' THEN XENDDATA='Y';   /* Abbreviate            */ 99981700
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99981900
*           XENDDATA ||             /* Abbreviated ENDDATA value     */ 99982100
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99982300
*END;                               /* Abbreviate ENDDATA keyword    */ 99982500
*                                                                       99982700
*IF REPLACE(1)^='' THEN             /* REPLACE(something) passed in  */ 99982900
*DO;                                /* Abbreviate REPLACE keyword    */ 99983100
*  XREPLACE=REPLACE(1);             /* Set passed keyword value      */ 99983300
*  XLEFT=7+INDEX(XMACKEYS,'REPLACE('); /* Point to left paren.       */ 99983500
*  XRIGHT=XLEFT+1+LENGTH(XREPLACE); /* Point to right parenthesis */    99983700
*  IF REPLACE(1)='NO' THEN XREPLACE='N';    /* Abbreviate            */ 99983900
*  IF REPLACE(1)='YES' THEN XREPLACE='Y';   /* Abbreviate            */ 99984100
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99984300
*           XREPLACE ||             /* Abbreviated REPLACE value     */ 99984500
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99984700
*END;                               /* Abbreviate REPLACE keyword    */ 99984900
*                                                                       99985100
*IF LIBOPT(1)^='' THEN              /* LIBOPT(something) passed in   */ 99985300
*DO;                                /* Abbreviate LIBOPT keyword     */ 99985500
*  XLIBOPT=LIBOPT(1);               /* Set passed keyword value      */ 99985700
*  XLEFT=6+INDEX(XMACKEYS,'LIBOPT('); /* Point to left paren.        */ 99985900
*  XRIGHT=XLEFT+1+LENGTH(XLIBOPT); /* Point to right parenthesis */     99986100
*  IF LIBOPT(1)='CALL' THEN XLIBOPT='C';    /* Abbreviate            */ 99986300
*  IF LIBOPT(1)='NOCALL' THEN XLIBOPT='N';  /* Abbreviate            */ 99986500
*  IF LIBOPT(1)='EXCLUDE' THEN XLIBOPT='E'; /* Abbreviate            */ 99986700
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99986900
*           XLIBOPT ||              /* Abbreviated LIBOPT value      */ 99987100
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99987300
*END;                               /* Abbreviate LIBOPT keyword     */ 99987500
*                                                                       99987700
*IF REGION(1)^='' THEN              /* REGION(something) passed in   */ 99987900
*DO;                                /* Abbreviate REGION keyword     */ 99988100
*  XREGION=REGION(1);               /* Set passed keyword value      */ 99988300
*  XLEFT=6+INDEX(XMACKEYS,'REGION('); /* Point to left paren.        */ 99988500
*  XRIGHT=XLEFT+1+LENGTH(XREGION); /* Point to right parenthesis */     99988700
*  IF REGION(1)='NO' THEN XREGION='N';      /* Abbreviate            */ 99988900
*  IF REGION(1)='YES' THEN XREGION='Y';     /* Abbreviate            */ 99989100
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99989300
*           XREGION ||              /* Abbreviated REGION value      */ 99989500
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99989700
*END;                               /* Abbreviate REGION keyword     */ 99989900
*                                                                       99990100
*IF NTYPE(1)^='' THEN               /* NTYPE(something) passed in    */ 99990200
*DO;                                /* Abbreviate NTYPE keyword      */ 99990300
*  XNTYPE=NTYPE(1);                 /* Set passed keyword value      */ 99990400
*  XLEFT=5+INDEX(XMACKEYS,'NTYPE('); /* Point to left paren.         */ 99990500
*  XRIGHT=XLEFT+1+LENGTH(XNTYPE);  /* Point to right parenthesis     */ 99990600
*  IF NTYPE(1)='SECTION' THEN XNTYPE='S';   /* Abbreviate            */ 99990700
*  IF NTYPE(1)='CLASS' THEN XNTYPE='C';     /* Abbreviate            */ 99990800
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99990900
*           XNTYPE ||                /* Abbreviated NTYPE value      */ 99991000
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys */  99991100
*END;                               /* Abbreviate NTYPE keyword      */ 99991200
*                                                                       99991300
*/**** LINES STARTING HERE WERE ADDED PER FLAG  @L5            @L5A  */ 99991500
*                                                                       99991700
*IF ITYPE(1)^='' THEN               /* ITYPE(something) passed in    */ 99991900
*DO;                                /* Abbreviate NTYPE keyword      */ 99992100
*  XITYPE=ITYPE(1);                 /* Set passed keyword value      */ 99992300
*  XLEFT=5+INDEX(XMACKEYS,'ITYPE(');/* Point to left paren.          */ 99992500
*  XRIGHT=XLEFT+1+LENGTH(XITYPE);   /* Point to right parenthesis    */ 99992700
*  IF ITYPE(1)='CODE' THEN XITYPE='C';      /* Abbreviate            */ 99992900
*  IF ITYPE(1)='DATA' THEN XITYPE='D';      /* Abbreviate            */ 99993100
*  XMACKEYS=XMACKEYS(1:XLEFT) ||    /* First part of keys            */ 99993300
*           XITYPE ||               /* Abbreviated ITYPE value       */ 99993500
*           XMACKEYS(XRIGHT:LENGTH(XMACKEYS));  /* Remainder of keys */ 99993700
*END;                               /* Abbreviate NTYPE keyword      */ 99993900
*                                                                       99994100
*/**** LINES ENDING HERE WERE ADDED PER FLAG  @L5              @L5A  */ 99994300
*                                                                       99994500
*XRIGHT=INDEX(XMACKEYS,'XTLST');    /* Point to XTLST keyword        */ 99994700
*XLEFT=XRIGHT-1;                    /* Point to preceding character  */ 99994900
*IF XRIGHT > 0 THEN                 /* XTLST exists                  */ 99995100
*DO;                                /* Change XTLST to EXTLST        */ 99995300
*  IF XRIGHT=1 THEN                 /* XTLST is first keyword        */ 99995500
*    XMACKEYS='E'||XMACKEYS;        /* Insert E in front of XTLST    */ 99995700
*  ELSE                             /* XTLST is imbedded keyword     */ 99995900
*    XMACKEYS=XMACKEYS(1:XLEFT) ||  /* First part of keys            */ 99996100
*             'E' ||                /* Extra E                       */ 99996300
*             XMACKEYS(XRIGHT:LENGTH(XMACKEYS)); /* Remainder of keys*/ 99996500
*END;                               /* Change XTLST to EXTLST        */ 99996700
*                                                                       99996900
*                                                                       99997100
*ANS('?'||MACLABEL||' '||'IEWBIND2 '||MACLIST||                         99997300
*         ' '||XMACKEYS||';') COL(MACLMAR);                             99997500
*%END IEWBIND;                                                          99997700
