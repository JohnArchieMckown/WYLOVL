*%IWMSRFSV: MACRO KEYS(CONNTKN,APPLENV,SERVER_DATA,RETCODE,RSNCODE,     00000100
*                 PLISTVER,MF);                                         00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMSRFSV                              -09/06/96-<0> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Sysplex Routing Find Server Routine           * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001400
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001500
*                                                                     * 00001600
* STATUS= HBB6603                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*01* FUNCTION:                                                        * 00002100
*                                                                     * 00002200
*      IWMSRFSV will find a server associated with the specified      * 00002300
*      application environment and return the associated server data  * 00002400
*      which was passed at the time the server connected to WLM (via  * 00002500
*      IWMCONN).  The only eligible servers are those that have       * 00002600
*      connected to WLM with a specification of IWMCONN               * 00002700
*      SERVER_MANAGER=YES,SERVER_TYPE=ROUTING, and whose application  * 00002800
*      environment matches the input value passed to IWMSRFSV, which  * 00002900
*      implies that the server belongs to the same subsystem type as  * 00003000
*      the caller.  The server chosen is considered a best choice to  * 00003100
*      run work in terms of a variety of system conditions which are  * 00003200
*      monitored.                                                     * 00003300
*                                                                     * 00003400
*      When no eligible servers are already started, and the service  * 00003500
*      policy allows MVS to start a server, and certain other         * 00003600
*      conditions apply, MVS will start a new server on behalf of the * 00003700
*      request. Circumstances such as this imply that the program     * 00003800
*      calling this service may be suspended until the request can be * 00003900
*      resolved. When no eligible servers exist and none can be       * 00004000
*      started the caller will receive a return code to reflect this. * 00004100
*                                                                     * 00004200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004300
*                                                                     * 00004400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004500
*                                                                     * 00004600
*01* ENVIRONMENT:                                                     * 00004700
*                                                                     * 00004800
*                                                                     * 00004900
*      Dispatchable unit mode: Task mode.                             * 00005000
*                                                                     * 00005100
*      Minimum authorization: Supervisor state or program key mask    * 00005200
*                        (PKM) allowing keys 0-7.                     * 00005300
*                                                                     * 00005400
*      AMODE:            31-bit.                                      * 00005500
*                                                                     * 00005600
*      ASC mode:         Primary.                                     * 00005700
*                                                                     * 00005800
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00005900
*                                                                     * 00006000
*      Interrupt status: Enabled for I/O and external interrupts.     * 00006100
*                                                                     * 00006200
*      Locks:            No locks held.                               * 00006300
*                                                                     * 00006400
*      Control parameters: Control parameters must be in the primary  * 00006500
*                        address space.                               * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*01* PROGRAMMING REQUIREMENTS:                                        * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*    1.  The macro IWMYCON must be included to use this macro.        * 00007300
*                                                                     * 00007400
*    2.  The macro IWMPB must be in the library concatenation, since  * 00007500
*        it is included by IWMYCON.                                   * 00007600
*                                                                     * 00007700
*    3.  Note that the high order halfword of register 0, and the     * 00007800
*        reason code variable when specified, may be non-zero and     * 00007900
*        represents diagnostic data which is NOT part of the external * 00008000
*        interface.  The high order halfword should thus be excluded  * 00008100
*        from comparison with the reason code values described above. * 00008200
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00008300
*        be used for this purpose.                                    * 00008400
*                                                                     * 00008500
*    4.  All character inputs are assumed to be padded on the right   * 00008600
*        with blanks, when needed to fill out the entire length.      * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*01* RESTRICTIONS:                                                    * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*    1.  This macro may not be used prior to the completion of WLM    * 00009400
*        address space initialization.                                * 00009500
*                                                                     * 00009600
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher     * 00009700
*        levels.                                                      * 00009800
*                                                                     * 00009900
*    3.  This macro may not be used during task/address space         * 00010000
*        termination.                                                 * 00010100
*                                                                     * 00010200
*    4.  NO FRRs may be established.                                  * 00010300
*                                                                     * 00010400
*    5.  The Connect token from the input parameter list must be      * 00010500
*        owned by the current home address space.                     * 00010600
*                                                                     * 00010700
*    6.  The address space from which this service is invoked must    * 00010800
*        have previously connected to WLM, using IWMCONN Router=Yes.  * 00010900
*        The input application environment must be associated in the  * 00011000
*        current service policy with the subsystem type specified     * 00011100
*        through IWMCONN.                                             * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*01* INPUT REGISTER INFORMATION:                                      * 00011600
*                                                                     * 00011700
*    Before issuing the IWMSRFSV macro, the caller does not have to   * 00011800
*    place any information into any register unless using it in       * 00011900
*    register notation for a particular parameter, or using it as a   * 00012000
*    base register.                                                   * 00012100
*                                                                     * 00012200
*01* OUTPUT REGISTER INFORMATION:                                     * 00012300
*                                                                     * 00012400
*    When control returns to the caller, the GPRs contain:            * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*    REGISTER  CONTENTS                                               * 00012800
*                                                                     * 00012900
*    0         Reason code if GR15 return code is non-zero            * 00013000
*                                                                     * 00013100
*    1         Used as work registers by the system                   * 00013200
*                                                                     * 00013300
*    2-13      Unchanged                                              * 00013400
*                                                                     * 00013500
*    14        Used as work registers by the system                   * 00013600
*                                                                     * 00013700
*    15        Return code                                            * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*    When control returns to the caller, the ARs contain:             * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*    REGISTER  CONTENTS                                               * 00014500
*                                                                     * 00014600
*    0-1       Used as work registers by the system                   * 00014700
*                                                                     * 00014800
*    2-13      Unchanged                                              * 00014900
*                                                                     * 00015000
*    14-15     Used as work registers by the system                   * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*    Some callers depend on register contents remaining the same      * 00015500
*    before and after issuing a service.  If the system changes the   * 00015600
*    contents of registers on which the caller depends, the caller    * 00015700
*    must save them before issuing the service, and restore them      * 00015800
*    after the system returns control.                                * 00015900
*                                                                     * 00016000
*01* PERFORMANCE IMPLICATIONS:                                        * 00016100
*                                                                     * 00016200
*    The task issuing this service may be suspended while a new       * 00016300
*    server address space is being started, possibly on another MVS   * 00016400
*    image.                                                           * 00016500
*                                                                     * 00016600
*01* SYNTAX:                                                          * 00016700
*                                                                     * 00016800
*[xlabel]  IWMSRFSV     CONNTKN=xconntkn                              * 00016900
*                      ,APPLENV=xapplenv                              * 00017000
*                      ,SERVER_DATA=xserver_data                      * 00017100
*                     [,RETCODE=xretcode]                             * 00017200
*                     [,RSNCODE=xrsncode]                             * 00017300
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00017400
*                    [,MF=S]                                         * 00017500
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00017600
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*      Where:                                                         * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*      [xlabel]                                                       * 00018300
*          is an optional symbol, starting in column 1, that is the   * 00018400
*          name on the IWMSRFSV macro invocation.  The name must      * 00018500
*          conform to the rules for an ordinary assembler language    * 00018600
*          symbol.                                                    * 00018700
*          DEFAULT: No name.                                          * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*      CONNTKN(xconntkn)                                              * 00019300
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00019400
*          only) of a required 32 bit input which contains the        * 00019500
*          connect token for the current home space.                  * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*      APPLENV(xapplenv)                                              * 00020100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00020200
*          only) of a required 32 character input which contains the  * 00020300
*          application environment under which work requests are to   * 00020400
*          be served.                                                 * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*      SERVER_DATA(xserver_data)                                      * 00021000
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00021100
*          only) of a required 32 character output which contains the * 00021200
*          data needed to uniquely identify the chosen server.  The   * 00021300
*          structure of this data is undefined to MVS, and is the     * 00021400
*          same data passed when the server connected using IWMCONN   * 00021500
*          SERVER_MANAGER=YES, SERVER_TYPE=ROUTING, SERVER_DATA=...   * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*      [RETCODE(xretcode)]                                            * 00022100
*          is the name (RS-type) of an optional fullword output       * 00022200
*          variable (or register (2)-(12) ASM only) into which the    * 00022300
*          return code is to be copied from GPR 15.                   * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*      [RSNCODE(xrsncode)]                                            * 00022900
*          is the name (RS-type) of an optional fullword output       * 00023000
*          variable (or register (2)-(12) ASM only) into which the    * 00023100
*          reason code is to be copied from GPR 0.                    * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 00023700
*          is an optional byte input decimal value in the "0-0" range * 00023800
*          that specifies the macro version.  PLISTVER is the only    * 00023900
*          key allowed on the list form of MF and determines which    * 00024000
*          parameter list is generated.  Note that MAX may be         * 00024100
*          specified instead of a number, and the parameter list will * 00024200
*          be of the largest size currently supported. This size may  * 00024300
*          grow from release to release (thus possibly affecting the  * 00024400
*          amount of storage needed by your program).  If your        * 00024500
*          program can tolerate this, IBM recommends that you always  * 00024600
*          specify MAX when creating the list form parameter list as  * 00024700
*          that will ensure that the list form parameter list is      * 00024800
*          always long enough to hold whatever parameters might be    * 00024900
*          specified on the execute form.                             * 00025000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00025100
*          default is the lowest version which allows all of the      * 00025200
*          parameters specified on the invocation to be processed.    * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*      [MF(S|L|E)]                                                  * 00025800
*          is an optional keyword input which specifies the macro     * 00025900
*          form.                                                      * 00026000
*          DEFAULT: S                                                 * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*          [MF(S)]                                                    * 00026400
*              specifies the standard form of the macro.  The "S"     * 00026500
*              form generates code to put the parameters into the     * 00026600
*              parameter list and invoke the desired service.  Full   * 00026700
*              checking for required macro keys is done along with    * 00026800
*              supplying defaults for omitted optional parameters.    * 00026900
*              The ?EPILOG macro must be invoked at the end of the    * 00027000
*              module.                                                * 00027100
*                                                                     * 00027200
*              For assembly language code modules, the "S" form       * 00027300
*              generates code to put the parameters into an in-line   * 00027400
*              parameter list and invoke the desired service.  Full   * 00027500
*              checking for required macro keys is done along with    * 00027600
*              supplying defaults for omitted optional parameters.    * 00027700
*                                                                     * 00027800
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00027900
*              specifies the list form of the macro.  The "L" form    * 00028000
*              defines an area to be used for the parameter list.     * 00028100
*              Only the PLISTVER key may be specified on the          * 00028200
*              invocation.  All other macro parameters are flagged as * 00028300
*              errors.  If PLISTVER is not specified, the original    * 00028400
*              parameter list definition is used.                     * 00028500
*                                                                     * 00028600
*            ,xmfctrl                                                 * 00028700
*              is a required input.  It is the name of a storage area * 00028800
*              for the parameter list.                                * 00028900
*                                                                     * 00029000
*            ,xmfattr|BDY(DWORD)                                    * 00029100
*              is an optional 60 character input string that varies   * 00029200
*              from 1 to 60 characters. Use it to force boundary      * 00029300
*              alignment of the parameter list. Use any value that    * 00029400
*              represents a boundary and is valid on an assembler DS  * 00029500
*              pseudo op (assembler-only).                            * 00029600
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00029700
*              forces the parameter list to a doubleword boundary.    * 00029800
*                                                                     * 00029900
*          [MF(E,xmfctrl,COMPLETE)]                                 * 00030000
*              specifies the execute form of the macro.  The "E" form * 00030100
*              generates code to put the parameters into the          * 00030200
*              parameter list specified by xmfctrl and provides full  * 00030300
*              syntax checking with default setting.                  * 00030400
*                                                                     * 00030500
*            ,xmfctrl                                                 * 00030600
*              is a required input.  It is the name (RS-type) (or     * 00030700
*              address in register (1)-(12) ASM only) of a storage    * 00030800
*              area for the parameter list.                           * 00030900
*                                                                     * 00031000
*            ,COMPLETE                                              * 00031100
*              is an optional keyword input which specifies the       * 00031200
*              degree of macro parameter syntax checking.             * 00031300
*              DEFAULT: COMPLETE                                      * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*              COMPLETE                                               * 00031700
*                  Checking for required macro keys is done and       * 00031800
*                  defaults are supplied for omitted optional         * 00031900
*                  parameters.                                        * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*01* ABEND CODES:  None.                                              * 00032800
*                                                                     * 00032900
*01* RETURN CODES:                                                    * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*            0    Name: IwmRetCodeOk                                  * 00033300
*                                                                     * 00033400
*                 Meaning: Successful completion.                     * 00033500
*                                                                     * 00033600
*                 Action: None required.                              * 00033700
*                                                                     * 00033800
*            8    Name: IwmRetCodeInvocError                          * 00033900
*                                                                     * 00034000
*                 Meaning: Invalid invocation environment or          * 00034100
*                 parameters.                                         * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                 HEX REASON  MEANING/ACTION                          * 00034500
*                 CODE                                                * 00034600
*                                                                     * 00034700
*                 xxxx0801    Name: IwmRsnCodeSRBMode                 * 00034800
*                                                                     * 00034900
*                             Meaning: Caller is in SRB mode.         * 00035000
*                                                                     * 00035100
*                             Action: Avoid requesting this function  * 00035200
*                             in SRB mode.                            * 00035300
*                                                                     * 00035400
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00035500
*                                                                     * 00035600
*                             Meaning: Caller is disabled.            * 00035700
*                                                                     * 00035800
*                             Action: Avoid requesting this function  * 00035900
*                             while disabled.                         * 00036000
*                                                                     * 00036100
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00036200
*                                                                     * 00036300
*                             Meaning: Caller is locked.              * 00036400
*                                                                     * 00036500
*                             Action: Avoid requesting this function  * 00036600
*                             while locked.                           * 00036700
*                                                                     * 00036800
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00036900
*                                                                     * 00037000
*                             Meaning: Error accessing parameter      * 00037100
*                             list.                                   * 00037200
*                                                                     * 00037300
*                             Action: Check for possible storage      * 00037400
*                             overlay.                                * 00037500
*                                                                     * 00037600
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00037700
*                                                                     * 00037800
*                             Meaning: Caller has EUT FRR             * 00037900
*                             established.                            * 00038000
*                                                                     * 00038100
*                             Action: Avoid requesting this function  * 00038200
*                             with an EUT FRR.                        * 00038300
*                                                                     * 00038400
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00038500
*                                                                     * 00038600
*                             Meaning: Caller invoked service while   * 00038700
*                             DATOFF                                  * 00038800
*                                                                     * 00038900
*                             Action: Avoid requesting this function  * 00039000
*                             in this environment.                    * 00039100
*                                                                     * 00039200
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00039300
*                                                                     * 00039400
*                             Meaning: Caller invoked service but was * 00039500
*                             in 24 bit addressing mode.              * 00039600
*                                                                     * 00039700
*                             Action: Request this function only when * 00039800
*                             you are in 31 bit addressing mode.      * 00039900
*                                                                     * 00040000
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00040100
*                                                                     * 00040200
*                             Meaning: Caller invoked service but was * 00040300
*                             not DAT on Primary ASC mode.            * 00040400
*                                                                     * 00040500
*                             Action: Avoid requesting this function  * 00040600
*                             in this environment.                    * 00040700
*                                                                     * 00040800
*                 xxxx0826    Name: IwmRsnCodeTaskTerm                * 00040900
*                                                                     * 00041000
*                             Meaning:  Caller invoked service while  * 00041100
*                             task termination is in progress for the * 00041200
*                             current TCB.                            * 00041300
*                                                                     * 00041400
*                             Action: Avoid requesting this function  * 00041500
*                             in this environment.                    * 00041600
*                                                                     * 00041700
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00041800
*                                                                     * 00041900
*                             Meaning: Version number or version      * 00042000
*                             length field in parameter list is not   * 00042100
*                             valid.                                  * 00042200
*                                                                     * 00042300
*                             Action: Check for possible overlay of   * 00042400
*                             the parameter list.                     * 00042500
*                                                                     * 00042600
*                 xxxx083B    Name: IwmRsnCodeHomeNotOwnConn          * 00042700
*                                                                     * 00042800
*                             Meaning:  Home address space does not   * 00042900
*                             own the connect token from the input    * 00043000
*                             parameter list.                         * 00043100
*                                                                     * 00043200
*                             Action: Invoke the function with the    * 00043300
*                             correct home address space.             * 00043400
*                                                                     * 00043500
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00043600
*                                                                     * 00043700
*                             Meaning:  Caller's space connection is  * 00043800
*                             not enabled for this service.           * 00043900
*                                                                     * 00044000
*                             Action: Avoid requesting this function  * 00044100
*                             under the input connection.  IWMCONN    * 00044200
*                             options must be specified previously to * 00044300
*                             enable this service.                    * 00044400
*                                                                     * 00044500
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00044600
*                                                                     * 00044700
*                             Meaning: Caller invoked service but was * 00044800
*                             in cross-memory mode.                   * 00044900
*                                                                     * 00045000
*                             Action: Avoid requesting this function  * 00045100
*                             in cross-memory mode.                   * 00045200
*                                                                     * 00045300
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00045400
*                                                                     * 00045500
*                             Meaning: Caller's space is not          * 00045600
*                             connected to WLM.                       * 00045700
*                                                                     * 00045800
*                             Action: Issue IWMCONN with the          * 00045900
*                             necessary options prior to invoking     * 00046000
*                             this service.                           * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*            C    IwmRetCodeEnvError:  Environmental error.           * 00046500
*                                                                     * 00046600
*                 HEX REASON   MEANING                                * 00046700
*                 CODE                                                * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00047100
*                                                                     * 00047200
*                             Meaning:  Storage is not available for  * 00047300
*                             the request.                            * 00047400
*                                                                     * 00047500
*                             Action: There is a storage shortage.    * 00047600
*                             The function may work successfully at a * 00047700
*                             later time.                             * 00047800
*                                                                     * 00047900
*                 xxxx0C1A    Name: IwmRsnCodeApplNotDefined          * 00048000
*                                                                     * 00048100
*                             Meaning:  The application environment   * 00048200
*                             name is not defined in the active WLM   * 00048300
*                             policy.                                 * 00048400
*                                                                     * 00048500
*                             Action: Check whether the correct       * 00048600
*                             application environment name is being   * 00048700
*                             used.  If so, a service administrator   * 00048800
*                             must define the application environment * 00048900
*                             in the WLM service definition.          * 00049000
*                                                                     * 00049100
*                 xxxx0C1B    Name: IwmRsnCodeApplNotSST              * 00049200
*                                                                     * 00049300
*                             Meaning:  The application environment   * 00049400
*                             name is defined for use by a different  * 00049500
*                             subsystem type in the active WLM        * 00049600
*                             policy.                                 * 00049700
*                                                                     * 00049800
*                             Action: Check whether the correct       * 00049900
*                             application environment name is being   * 00050000
*                             used.  If so, a service administrator   * 00050100
*                             must change the application environment * 00050200
*                             in the WLM service definition to        * 00050300
*                             specify the correct subsystem type.     * 00050400
*                                                                     * 00050500
*                 xxxx0C1C    Name: IwmRsnCodeServerNotStarted        * 00050600
*                                                                     * 00050700
*                             Meaning: No server exists for the       * 00050800
*                             specified application environment and   * 00050900
*                             no server could be started.             * 00051000
*                                                                     * 00051100
*                             Action: No action required.  The        * 00051200
*                             function may be successful if invoked   * 00051300
*                             again.                                  * 00051400
*                                                                     * 00051500
*                 xxxx0C22    Name: IwmRsnCodeApplEnvQuiesced         * 00051600
*                                                                     * 00051700
*                             Meaning:  The specified application     * 00051800
*                             environment has been quiesced, server   * 00051900
*                             cannot be started for the request.      * 00052000
*                                                                     * 00052100
*                             Action: Restart the application         * 00052200
*                             environment and then retry the request. * 00052300
*                                                                     * 00052400
*                 xxxx0C23    Name: IwmRsnCodeIndLocalSystem          * 00052500
*                                                                     * 00052600
*                             Meaning:  Local system is not running   * 00052700
*                             with the current WLM policy, new server * 00052800
*                             cannot be started for the request.      * 00052900
*                                                                     * 00053000
*                             Action:  Avoid requesting this function * 00053100
*                             while the local system is not running   * 00053200
*                             with the current WLM policy.            * 00053300
*                                                                     * 00053400
*                 xxxx0C24    Name: IwmRsncodeProcNameBlank           * 00053500
*                                                                     * 00053600
*                             Meaning:  Server procname is blank,     * 00053700
*                             server cannot be started for the        * 00053800
*                             request.                                * 00053900
*                                                                     * 00054000
*                             Action:  Check the server procname, fix * 00054100
*                             it, and then retry the request.         * 00054200
*                                                                     * 00054300
*                 xxxx0C25    Name: IwmRsnCodeApplEnvStopped          * 00054400
*                                                                     * 00054500
*                             Meaning:  WLM has given up trying to    * 00054600
*                             start a server because of failures.     * 00054700
*                             The associated application environment  * 00054800
*                             has been internally stopped.            * 00054900
*                                                                     * 00055000
*                             Action: Restart the application         * 00055100
*                             environment and then retry the request. * 00055200
*                                                                     * 00055300
*                 xxxx0C26    Name: IwmRsnCodeRouterNotActive         * 00055400
*                                                                     * 00055500
*                             Meaning:  Either there is no router     * 00055600
*                             exists for the requested server or the  * 00055700
*                             router exists but not active. No server * 00055800
*                             can be selected/started on this system. * 00055900
*                                                                     * 00056000
*                             Action:  Re-connect the router for the  * 00056100
*                             requested application environment to    * 00056200
*                             WLM and then retry the request.         * 00056300
*                                                                     * 00056400
*                 xxxx0C27    Name: IwmRsnCodeFsvReqInCompat          * 00056500
*                                                                     * 00056600
*                             Meaning:  No server exists for the      * 00056700
*                             IWMSRFSV request and WLM cannot find a  * 00056800
*                             goal mode system in the sysplex to      * 00056900
*                             start a server.                         * 00057000
*                                                                     * 00057100
*                             Action:  Avoid requesting this function * 00057200
*                             while there is no goal mode system in   * 00057300
*                             the sysplex for WLM to start a server.  * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*            10   Name: IwmRetCodeCompError                           * 00057900
*                                                                     * 00058000
*                 Meaning: Component error.                           * 00058100
*                                                                     * 00058200
*                 Action: No action required.  The function may be    * 00058300
*                 successful if invoked again.                        * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*01* REASON CODES:                                                    * 00058800
*                                                                     * 00058900
*       A unique reason code will be returned whenever the return     * 00059000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00059100
*       under their corresponding return code.  Reason code and       * 00059200
*       return code constants are defined within IWMYCON.  Note that  * 00059300
*       the high order halfword of register 0, and the reason code    * 00059400
*       variable when specified, may be non-zero and represents       * 00059500
*       diagnostic data which is NOT part of the external interface.  * 00059600
*       The high order halfword should thus be excluded from          * 00059700
*       comparison with the reason code values described above.  The  * 00059800
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00059900
*       used for this purpose.                                        * 00060000
*                                                                     * 00060100
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 00060200
*                                                                     * 00060300
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 00060400
*                                                                     * 00060500
*01* COMPONENT:  SCWLM                                                * 00060600
*                                                                     * 00060700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00060800
*                                                                     * 00060900
*01* EXAMPLES:                                                        * 00061000
*                                                                     * 00061100
*    To determine a best server to which to route work:               * 00061200
*                                                                     * 00061300
*               IWMSRFSV CONNTKN=CTKN,                              X * 00061400
*                     APPLENV=AENAME,                               X * 00061500
*                     SERVER_DATA=SVRDATA,                          X * 00061600
*                     RETCODE=RC,RSNCODE=RSN                          * 00061700
*      *                                                              * 00061800
*      * Storage areas                                                * 00061900
*      *                                                              * 00062000
*      CTKN     DS    F               Contains the connect token for  * 00062100
*      *                              the current home space          * 00062200
*      AENAME   DS    CL32            Contains the application        * 00062300
*      *                              environment name                * 00062400
*      SVRDATA  DS    CL32            Contains the output server data * 00062500
*      RC       DS    F               Return code                     * 00062600
*      RSN      DS    F               Reason code                     * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*01* MACRO USAGE NOTES:                                               * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00063300
*        global macro variable.  Any value other than 'NO' will       * 00063400
*        result in the macro expansion being printed.  The default is * 00063500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00063600
*        variable should be set.                                      * 00063700
*                                                                     * 00063800
*                    GBLC &ZPRINT                                     * 00063900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*    2.  All   keys   currently   contained  in  the  IWMSRFSV  macro * 00064300
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00064400
*        value of 0 or MAX.                                           * 00064500
*                                                                     * 00064600
*                                                                     * 00064700
*                                                                     * 00064800
*                                                                     * 00064900
*01* CHANGE ACTIVITY:                                                 * 00065000
*                                                                     * 00065100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00065200
*                                                                     * 00065300
*    $L0=WLM53P   HBB6603 950927 PD16:  DCE/DSOM Support              * 00065400
*    $L1=WLMP     HBB6603 960905 PDRK:  Reason codes                  * 00065500
****** END OF SPECIFICATIONS *****************************************/ 00065600
*/********************************************************************* 00065700
         MACRO                                                          00065800
&XLABEL  IWMSRFSV &CONNTKN=,&APPLENV=,&SERVER_DATA=,&RETCODE=,         *00065900
               &RSNCODE=,&PLISTVER=,&MF=                                00066000
.*                                                                      00066100
*                 MACDATE -09/06/96-<0>                                 00066200
.*                                                                      00066300
.*******************************************************************    00066400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00066500
.*******************************************************************    00066600
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00066700
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00066800
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00066900
.*                                                                      00067000
                 GBLC  &ZIWMSRFSV  YES=MACRO USED AT LEAST ONCE         00067100
.*******************************************************************    00067200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00067300
.*******************************************************************    00067400
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00067500
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         00067600
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00067700
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00067800
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00067900
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00068000
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00068100
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00068200
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00068300
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00068400
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00068500
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00068600
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00068700
.*                                                                      00068800
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00068900
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00069000
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00069100
                 LCLC  &ZENDBASEPL              End of base PL          00069200
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00069300
.*******************************************************************    00069400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00069500
.*******************************************************************    00069600
                 LCLA  &ZI         INDEX FOR ARRAY                      00069700
                 LCLA  &ZJ         INDEX FOR PARMS                      00069800
                 LCLA  &ZK         INDEX FOR PARSE                      00069900
                 LCLA  &ZLO        LOW RANGE VALUE                      00070000
                 LCLA  &ZHI        HIGH RANGE VALUE                     00070100
                 LCLC  &ZW         WORK AREA FOR PARM                   00070200
.********************************************************************   00070300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00070400
.********************************************************************   00070500
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00070600
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00070700
.*                                                                      00070800
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00070900
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00071000
                 SPLEVEL  TEST                                          00071100
.ZSYS2           ANOP  ,                                                00071200
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00071300
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00071400
                 SYSSTATE TEST                                          00071500
                 AGO   .ZSYS4                                           00071600
.ZSYS3           ANOP  ,                                                00071700
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00071800
.ZSYS4           ANOP  ,                                                00071900
.*******************************************************************    00072000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00072100
.*******************************************************************    00072200
                 LCLC  &XCONNTKN   ++ NAME                              00072300
                 LCLC  &XAPPLENV   ++ NAME                              00072400
                 LCLC  &XSERVER_DATA            ++ NAME                 00072500
                 LCLC  &XRETCODE   ++ NAME                              00072600
                 LCLC  &XRSNCODE   ++ NAME                              00072700
                 LCLA  &XPLISTVER  ++ VALUE                             00072800
                 LCLC  &XMF        ++ VALUE                             00072900
                 LCLC  &XMFCTRL    ++ NAME                              00073000
                 LCLC  &XMFATTR    ++ VALUE                             00073100
                 LCLC  &XMFSCK     ++ VALUE                             00073200
.*******************************************************************    00073300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00073400
.*******************************************************************    00073500
                 LCLC  &ZXCONNTKN  ++ INPUT NAME                        00073600
                 LCLC  &ZXAPPLENV  ++ INPUT NAME                        00073700
                 LCLC  &ZXSERVER_DATA           ++ OUTPUT NAME          00073800
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00073900
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00074000
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00074100
                 LCLC  &ZXMF       ++ INPUT VALUE                       00074200
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00074300
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00074400
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00074500
.********************************************************************   00074600
.***AC.PLV01  PROCESS PLISTVER                                      *   00074700
.********************************************************************   00074800
&XPLISTVER      SETA  0                                                 00074900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00075000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00075100
&XPLISTVER      SETA  0                                                 00075200
.ZPLV0          ANOP  ,                                                 00075300
.*                                                                      00075400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00075500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00075600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00075700
.*-------------------------------------------------------------------   00075800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00075900
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00076000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00076100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00076200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00076300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00076400
                AGO   .ZPVCK2                                           00076500
.ZPVCK3         ANOP  ,                                                 00076600
.*-------------------------------------------------------------------   00076700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00076800
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00076900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00077000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00077100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00077200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00077300
                AGO   .ZPVCKE                                           00077400
.ZPVCK2         ANOP  ,                                                 00077500
.*-------------------------------------------------------------------   00077600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00077700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00077800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00077900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00078000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00078100
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00078200
.ZPVCK6         ANOP  ,                                                 00078300
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00078400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00078500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00078600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00078700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00078800
&XPLISTVER      SETA  0                                                 00078900
                AGO   .ZPVCKE                                           00079000
.*-------------------------------------------------------------------   00079100
.ZPVCK4A        ANOP  ,                                                 00079200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00079300
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00079400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00079500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00079600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00079700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00079800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00079900
                AGO   .ZPVCK5                                           00080000
.ZPVCK4         ANOP  ,                                                 00080100
&XPLISTVER      SETA  &PLISTVER(1)                                      00080200
.ZPVCK5         ANOP  ,                                                 00080300
.ZPVCKE         ANOP  ,                                                 00080400
.********************************************************************   00080500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00080600
.********************************************************************   00080700
                 ACTR  10000                                            00080800
.*------------------------------------------------------------------    00080900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081000
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00081100
.*-------------------------------------------------------------------   00081200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081300
.ZG21            ANOP  ,                                                00081400
&ZTLC            SETC 'S'                                               00081500
                 AIF   ('&MF(1)' NE '&ZTLC').ZG22                       00081600
&XMF             SETC  'S'         SET KEYWORD                          00081700
                 AIF   (N'&MF LE 1).ZG21A       CK NUM                  00081800
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00081900
&ZMS             SETC  '&ZMS.&MF"'                                      00082000
&ZMS             SETC  '&ZMS "MF"'                                      00082100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00082200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00082300
.ZG21A           ANOP  ,                                                00082400
.*-------------------------------------------------------------------   00082500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00082600
.ZG22            ANOP  ,                                                00082700
&ZTLC            SETC 'L'                                               00082800
                 AIF   ('&MF(1)' NE '&ZTLC').ZG29                       00082900
&XMF             SETC  'L'         SET KEYWORD                          00083000
                 AIF   (N'&MF LE 3).ZG22A       CK NUM                  00083100
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00083200
&ZMS             SETC  '&ZMS.&MF"'                                      00083300
&ZMS             SETC  '&ZMS "MF"'                                      00083400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00083500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00083600
.ZG22A           ANOP  ,                                                00083700
.*-------------------------------------------------------------------   00083800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00083900
                 AIF   (N'&SYSLIST NE 0).ZG22B  POSITIONALS?            00084000
                 AIF   ('&CONNTKN' NE '').ZG22B  KEYS?                  00084100
                 AIF   ('&APPLENV' NE '').ZG22B  KEYS?                  00084200
                 AIF   ('&SERVER_DATA' NE '').ZG22B  KEYS?              00084300
                 AIF   ('&RETCODE' NE '').ZG22B  KEYS?                  00084400
                 AIF   ('&RSNCODE' NE '').ZG22B  KEYS?                  00084500
                 AGO    .ZG22C     INVOCATION OKAY                      00084600
.ZG22B           ANOP  ,                                                00084700
&ZMS             SETC  'THE "L" FORM OF "MF"'   *MFLA* MNOTE            00084800
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00084900
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00085000
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00085100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00085200
.ZG22C           ANOP  ,                                                00085300
.*-------------------------------------------------------------------   00085400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00085500
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00085600
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00085700
                 AIF   (N'&MF(2) GT 1).ZG24B    MULTI PARMS             00085800
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00085900
.ZG24B           AIF   (K'&MF(2) GT 0).ZG24C                            00086000
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00086100
&ZMS             SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                 00086200
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00086300
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00086400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00086500
.ZG24C           ANOP  ,                                                00086600
.*-------------------------------------------------------------------   00086700
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00086800
                 AIF   (K'&ZXMFCTRL LE 0).ZG24P  NOT I/O                00086900
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG24P                   00087000
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00087100
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00087200
&ZMS             SETC  '&ZMS.&MF"'                                      00087300
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00087400
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00087500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00087600
.ZG24P           ANOP  ,                                                00087700
.*-------------------------------------------------------------------   00087800
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00087900
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00088000
&XMFATTR         SETC  '0D'                                             00088100
                 AIF   (K'&MF(3) LE 0).ZG27B    PARM                    00088200
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00088300
                 AIF   (N'&MF(3) GT 1).ZG27B    MULTI PARMS             00088400
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00088500
.ZG27B           ANOP  ,                                                00088600
.*-------------------------------------------------------------------   00088700
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00088800
                 AIF   (K'&ZXMFATTR LE 0).ZG27P  NOT I/O                00088900
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG27P                   00089000
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00089100
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00089200
&ZMS             SETC  '&ZMS.&MF"'                                      00089300
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00089400
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00089500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00089600
.ZG27P           ANOP  ,                                                00089700
.*-------------------------------------------------------------------   00089800
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00089900
                 AIF   (K'&ZXMFATTR LE 0).ZG27S  NOT I/O                00090000
                 AIF   (K'&XMFATTR LE 60).ZG27S  LNG OK                 00090100
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00090200
&ZMS             SETC  '"MF='      *KLNGA* MNOTE                        00090300
&ZMS             SETC  '&ZMS.&MF"'                                      00090400
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00090500
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00090600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00090700
.ZG27S           ANOP  ,                                                00090800
.*-------------------------------------------------------------------   00090900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00091000
.ZG29            ANOP  ,                                                00091100
&ZTLC            SETC 'E'                                               00091200
                 AIF   ('&MF(1)' NE '&ZTLC').ZG37                       00091300
&XMF             SETC  'E'         SET KEYWORD                          00091400
                 AIF   (N'&MF LE 3).ZG29A       CK NUM                  00091500
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00091600
&ZMS             SETC  '&ZMS.&MF"'                                      00091700
&ZMS             SETC  '&ZMS "MF"'                                      00091800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00091900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00092000
.ZG29A           ANOP  ,                                                00092100
.*-------------------------------------------------------------------   00092200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00092300
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00092400
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00092500
                 AIF   (N'&MF(2) GT 1).ZG31B    MULTI PARMS             00092600
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00092700
.ZG31B           AIF   (K'&MF(2) GT 0).ZG31C                            00092800
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00092900
&ZMS             SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                 00093000
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00093100
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00093200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00093300
.ZG31C           ANOP  ,                                                00093400
.*-------------------------------------------------------------------   00093500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00093600
                 AIF   (K'&ZXMFCTRL LE 0).ZG31R  NOT I/O                00093700
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG31R                   00093800
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00093900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                     00094000
                 AIF   (K'&ZCGPR GT 2).ZG31Q                            00094100
                 AIF   ('&ZCGPR' EQ '0').ZG31Q                          00094200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00094300
                 AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME        00094400
.ZG31P           ANOP  ,                                                00094500
                 AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC             00094600
                 AIF   ('&ZCGPR' LT '1').ZG31Q                          00094700
                 AIF   ('&ZCGPR' LE '12').ZG31R                         00094800
.ZG31Q           ANOP  ,                                                00094900
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00095000
&ZMS             SETC  '&ZMS.&MF"'                                      00095100
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00095200
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00095300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00095400
.ZG31R           ANOP  ,                                                00095500
.*-------------------------------------------------------------------   00095600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00095700
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00095800
.ZG35A   AIF   ('&MF(3)' NE 'COMPLETE').ZG36A                           00095900
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00096000
.*-------------------------------------------------------------------   00096100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00096200
.ZG36A           AIF   (K'&XMFSCK GT 0).ZG36C   KEYWORD                 00096300
                 AIF   (K'&MF(3) LE 0).ZG36B                            00096400
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00096500
&ZMS             SETC  '&ZMS.&MF"'                                      00096600
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00096700
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00096800
&ZMS             SETC  '&ZMS "COMPLETE".'       VALID KEYWORD           00096900
                 MNOTE 8,' &ZMS '                                       00097000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00097100
.ZG36B           ANOP  ,                                                00097200
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00097300
.ZG36C           ANOP  ,                                                00097400
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00097500
.*------------------------------------------------------------------    00097600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00097700
.ZG37            ANOP  ,                                                00097800
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00097900
                 AIF   (K'&XMF GT 0).ZG37E      VALID ARG               00098000
                 AIF   (T'&MF EQ 'O').ZG37D     OMITTED                 00098100
&ZASYSLNDX       SETA  0                                                00098200
.ZG37A           ANOP  ,           POSITIONAL MACRO KEY                 00098300
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00098400
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C                 00098500
&ZTLC            SETC 'MF'                                              00098600
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A        00098700
.ZG37B           ANOP  ,                                                00098800
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00098900
&ZMS             SETC  'THE "MF" KEY'           *KOPTA* MNOTE           00099000
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00099100
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00099200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00099300
                 AGO   .ZG37E                                           00099400
.ZG37C           ANOP  ,                                                00099500
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00099600
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00099700
&ZMS             SETC  '&ZMS.&MF"'                                      00099800
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00099900
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00100000
&ZMS             SETC  '&ZMS "S",'              VALID KEYWORD           00100100
&ZMS             SETC  '&ZMS "L",'              VALID KEYWORD           00100200
&ZMS             SETC  '&ZMS OR "E".'           VALID KEYWORD           00100300
                 MNOTE 8,' &ZMS '                                       00100400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00100500
                 AGO   .ZG37E                                           00100600
.ZG37D           ANOP  ,                                                00100700
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00100800
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00100900
.ZG37E           ANOP  ,                                                00101000
.********************************************************************   00101100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00101200
.********************************************************************   00101300
                 ACTR  10000                                            00101400
.*-------------------------------------------------------------------   00101500
.***AG.MF03 MF=(SLE)                                                    00101600
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00101700
.*----------------------------------------------------------------***   00101800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00101900
                 AIF   (N'&CONNTKN LE 1).ZG2A   CK NUM                  00102000
&ZMS             SETC  '"CONNTKN='              *KPOSA* MNOTE           00102100
&ZMS             SETC  '&ZMS.&CONNTKN"'                                 00102200
&ZMS             SETC  '&ZMS "CONNTKN"'                                 00102300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00102400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00102500
.ZG2A            ANOP  ,                                                00102600
.*-------------------------------------------------------------------   00102700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00102800
&ZXCONNTKN       SETC  'INPUT'     SET IN/OUTPUT                        00102900
&XCONNTKN        SETC  '&CONNTKN(1)'            SET XVARIABLE           00103000
                 AIF   (N'&CONNTKN GT 1).ZG2B   MULTI PARMS             00103100
&XCONNTKN        SETC  '&CONNTKN'  SET XVARIABLE                        00103200
.ZG2B            AIF   (K'&CONNTKN(1) GT 0).ZG2C                        00103300
&ZXCONNTKN       SETC  ''          RESET IN/OUTPUT                      00103400
&ZMS             SETC  ' '         *KRQDA*                              00103500
&ZMS             SETC  '&ZMS "CONNTKN" KEY AND ITS ARGUMENT'            00103600
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00103700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00103800
.ZG2C            ANOP  ,                                                00103900
.*-------------------------------------------------------------------   00104000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00104100
                 AIF   (K'&ZXCONNTKN LE 0).ZG2R  NOT I/O                00104200
                 AIF   ('&XCONNTKN'(1,1) NE '(').ZG2R                   00104300
&ZCGPR           SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                     00104400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                      00104500
                 AIF   (K'&ZCGPR GT 2).ZG2Q                             00104600
                 AIF   ('&ZCGPR' EQ '0').ZG2Q                           00104700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00104800
                 AIF   (T'&ZCGPR NE 'N').ZG2Q   INVALID REG NAME        00104900
.ZG2P            ANOP  ,                                                00105000
                 AIF   (T'&ZCGPR NE 'N').ZG2R   NON NUMERIC             00105100
                 AIF   ('&ZCGPR' LT '2').ZG2Q                           00105200
                 AIF   ('&ZCGPR' LE '12').ZG2R                          00105300
.ZG2Q            ANOP  ,                                                00105400
&ZMS             SETC  '"CONNTKN='              *KGPRA* MNOTE           00105500
&ZMS             SETC  '&ZMS.&CONNTKN"'                                 00105600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00105700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00105800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00105900
.ZG2R            ANOP  ,                                                00106000
.*----------------------------------------------------------------***   00106100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00106200
                 AIF   (N'&APPLENV LE 1).ZG5A   CK NUM                  00106300
&ZMS             SETC  '"APPLENV='              *KPOSA* MNOTE           00106400
&ZMS             SETC  '&ZMS.&APPLENV"'                                 00106500
&ZMS             SETC  '&ZMS "APPLENV"'                                 00106600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00106700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00106800
.ZG5A            ANOP  ,                                                00106900
.*-------------------------------------------------------------------   00107000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00107100
&ZXAPPLENV       SETC  'INPUT'     SET IN/OUTPUT                        00107200
&XAPPLENV        SETC  '&APPLENV(1)'            SET XVARIABLE           00107300
                 AIF   (N'&APPLENV GT 1).ZG5B   MULTI PARMS             00107400
&XAPPLENV        SETC  '&APPLENV'  SET XVARIABLE                        00107500
.ZG5B            AIF   (K'&APPLENV(1) GT 0).ZG5C                        00107600
&ZXAPPLENV       SETC  ''          RESET IN/OUTPUT                      00107700
&ZMS             SETC  ' '         *KRQDA*                              00107800
&ZMS             SETC  '&ZMS "APPLENV" KEY AND ITS ARGUMENT'            00107900
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00108000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00108100
.ZG5C            ANOP  ,                                                00108200
.*-------------------------------------------------------------------   00108300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00108400
                 AIF   (K'&ZXAPPLENV LE 0).ZG5R  NOT I/O                00108500
                 AIF   ('&XAPPLENV'(1,1) NE '(').ZG5R                   00108600
&ZCGPR           SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                     00108700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                      00108800
                 AIF   (K'&ZCGPR GT 2).ZG5Q                             00108900
                 AIF   ('&ZCGPR' EQ '0').ZG5Q                           00109000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00109100
                 AIF   (T'&ZCGPR NE 'N').ZG5Q   INVALID REG NAME        00109200
.ZG5P            ANOP  ,                                                00109300
                 AIF   (T'&ZCGPR NE 'N').ZG5R   NON NUMERIC             00109400
                 AIF   ('&ZCGPR' LT '2').ZG5Q                           00109500
                 AIF   ('&ZCGPR' LE '12').ZG5R                          00109600
.ZG5Q            ANOP  ,                                                00109700
&ZMS             SETC  '"APPLENV='              *KGPRA* MNOTE           00109800
&ZMS             SETC  '&ZMS.&APPLENV"'                                 00109900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00110000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00110100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00110200
.ZG5R            ANOP  ,                                                00110300
.*----------------------------------------------------------------***   00110400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00110500
                 AIF   (N'&SERVER_DATA LE 1).ZG8A  CK NUM               00110600
&ZMS             SETC  '"SERVER_DATA='          *KPOSA* MNOTE           00110700
&ZMS             SETC  '&ZMS.&SERVER_DATA"'                             00110800
&ZMS             SETC  '&ZMS "SERVER_DATA"'                             00110900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00111000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00111100
.ZG8A            ANOP  ,                                                00111200
.*-------------------------------------------------------------------   00111300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00111400
&ZXSERVER_DATA   SETC  'OUTPUT'    SET IN/OUTPUT                        00111500
&XSERVER_DATA    SETC  '&SERVER_DATA(1)'        SET XVARIABLE           00111600
                 AIF   (N'&SERVER_DATA GT 1).ZG8B  MULTI PARMS          00111700
&XSERVER_DATA    SETC  '&SERVER_DATA'           SET XVARIABLE           00111800
.ZG8B            AIF   (K'&SERVER_DATA(1) GT 0).ZG8C                    00111900
&ZXSERVER_DATA   SETC  ''          RESET IN/OUTPUT                      00112000
&ZMS             SETC  ' '         *KRQDA*                              00112100
&ZMS             SETC  '&ZMS "SERVER_DATA" KEY AND ITS ARGUMENT'        00112200
                 MNOTE 8,' &ZMS ARE REQUIRED.'                          00112300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00112400
.ZG8C            ANOP  ,                                                00112500
.*-------------------------------------------------------------------   00112600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00112700
                 AIF   (K'&ZXSERVER_DATA LE 0).ZG8R  NOT I/O            00112800
                 AIF   ('&XSERVER_DATA'(1,1) NE '(').ZG8R               00112900
&ZCGPR           SETC  '&XSERVER_DATA'(2,K'&XSERVER_DATA-2)             00113000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      00113100
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             00113200
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           00113300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00113400
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        00113500
.ZG8P            ANOP  ,                                                00113600
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             00113700
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           00113800
                 AIF   ('&ZCGPR' LE '12').ZG8R                          00113900
.ZG8Q            ANOP  ,                                                00114000
&ZMS             SETC  '"SERVER_DATA='          *KGPRA* MNOTE           00114100
&ZMS             SETC  '&ZMS.&SERVER_DATA"'                             00114200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00114300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00114400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00114500
.ZG8R            ANOP  ,                                                00114600
.*----------------------------------------------------------------***   00114700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00114800
                 AIF   (N'&RETCODE LE 1).ZG11A  CK NUM                  00114900
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00115000
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00115100
&ZMS             SETC  '&ZMS "RETCODE"'                                 00115200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00115300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00115400
.ZG11A           ANOP  ,                                                00115500
.*-------------------------------------------------------------------   00115600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00115700
                 AIF   (K'&RETCODE(1) LE 0).ZG11C  NO PARM              00115800
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00115900
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00116000
                 AIF   (N'&RETCODE GT 1).ZG11C                          00116100
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00116200
.ZG11C           ANOP  ,                                                00116300
.*-------------------------------------------------------------------   00116400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00116500
                 AIF   (K'&ZXRETCODE LE 0).ZG11R  NOT I/O               00116600
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG11R                  00116700
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00116800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     00116900
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            00117000
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          00117100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00117200
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        00117300
.ZG11P           ANOP  ,                                                00117400
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             00117500
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          00117600
                 AIF   ('&ZCGPR' LE '12').ZG11R                         00117700
.ZG11Q           ANOP  ,                                                00117800
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00117900
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00118000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00118100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00118200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00118300
.ZG11R           ANOP  ,                                                00118400
.*----------------------------------------------------------------***   00118500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00118600
                 AIF   (N'&RSNCODE LE 1).ZG14A  CK NUM                  00118700
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00118800
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00118900
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00119000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00119100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00119200
.ZG14A           ANOP  ,                                                00119300
.*-------------------------------------------------------------------   00119400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00119500
                 AIF   (K'&RSNCODE(1) LE 0).ZG14C  NO PARM              00119600
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00119700
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00119800
                 AIF   (N'&RSNCODE GT 1).ZG14C                          00119900
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00120000
.ZG14C           ANOP  ,                                                00120100
.*-------------------------------------------------------------------   00120200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00120300
                 AIF   (K'&ZXRSNCODE LE 0).ZG14R  NOT I/O               00120400
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG14R                  00120500
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00120600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                     00120700
                 AIF   (K'&ZCGPR GT 2).ZG14Q                            00120800
                 AIF   ('&ZCGPR' EQ '0').ZG14Q                          00120900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00121000
                 AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME        00121100
.ZG14P           ANOP  ,                                                00121200
                 AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC             00121300
                 AIF   ('&ZCGPR' LT '2').ZG14Q                          00121400
                 AIF   ('&ZCGPR' LE '12').ZG14R                         00121500
.ZG14Q           ANOP  ,                                                00121600
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00121700
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00121800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00121900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00122000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00122100
.ZG14R           ANOP  ,                                                00122200
.******************************************************************     00122300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00122400
.******************************************************************     00122500
                 ACTR  10000                                            00122600
.*----------------------------------------------------------------***   00122700
.***AH.P02 EXTRA POSITIONALS                                            00122800
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00122900
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00123000
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00123100
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00123200
.ZGLISTX1        ANOP  ,                                                00123300
&ZCVAL           SETC  ''          ERROR FIELD                          00123400
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00123500
.ZGLIST2         ANOP  ,                                                00123600
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00123700
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00123800
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00123900
                 AGO   .ZGLIST2                                         00124000
.*                                                                      00124100
.ZGLIST3         ANOP  ,                                                00124200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00124300
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00124400
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00124500
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00124600
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00124700
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00124800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00124900
.ZGLISTX         ANOP  ,                                                00125000
&ZASYSLNDX       SETA  0                                                00125100
.*-------------------------------------------------------------------   00125200
.***AG.MF04 MF=(SLE)                                                    00125300
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00125400
.*******************************************************************    00125500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00125600
.*******************************************************************    00125700
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00125800
.*******************************************************************    00125900
.***AE.01  START OF IWMSRFSV MACRO CODE                                 00126000
.*******************************************************************    00126100
                 LCLC  &M0M0001                 NAME                    00126200
&M0M0001         SETC  '&XLABEL'                SET NAME                00126300
                 AIF   (K'&XLABEL NE 0).XLAB2                           00126400
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00126500
.*                                                                      00126600
.XLAB2           ANOP  ,                                                00126700
                 AIF   ('&XMF' EQ 'L').XLAB3                            00126800
&M0M0001 DS    0H                             IWMSRFSV-0                00126900
.XLAB3           ANOP  ,                                                00127000
.*******************************************************************    00127100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00127200
.*******************************************************************    00127300
              PUSH  PRINT                                               00127400
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00127500
                 PRINT OFF         ++ PR01                              00127600
                 AGO   .ZPRNTXX                                         00127700
.ZPRINTX         PRINT ON                                               00127800
.ZPRNTXX         ANOP  ,                                                00127900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00128000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00128100
.********************************************************************   00128200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00128300
.********************************************************************   00128400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00128500
                      LCLA  &ZOPN1         INVOCATION INDEX             00128600
                      LCLC  &ZOPL(4095)    LABEL                        00128700
                      LCLC  &ZOPO(4095)    OPERATION                    00128800
                      LCLC  &ZOPV(4095)    VALUE                        00128900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00129000
.*                                                                      00129100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00129200
.******************************************************************     00129300
.***AL.L10 IWMSRFSV FMT=LIST MF=S|L PARAMETERS                          00129400
.******************************************************************     00129500
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00129600
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00129700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00129800
&XMFATTR              SETC  '0D'                                        00129900
.*                                                                      00130000
&ZOPN                 SETA  &ZOPN+1                                     00130100
&ZOPL(&ZOPN)          SETC  ' '                                         00130200
&ZOPO(&ZOPN)          SETC  'B'                                         00130300
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00130400
&ZOPD(&ZOPN)          SETC  '++ IWMSRFSV ARG PARMS'                     00130500
.*                                                                      00130600
&ZOPN                 SETA  &ZOPN+1                                     00130700
&ZOPL(&ZOPN)          SETC  ' '                                         00130800
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00130900
&ZOPV(&ZOPN)          SETC  '1'                                         00131000
&ZOPD(&ZOPN)          SETC  ' '                                         00131100
.*                                                                      00131200
.ZLMFSL2              ANOP  ,                                           00131300
.*-------------------------------------------------------------------   00131400
.***AM.L00  IWMSRFSV FMT=LIST name                                      00131500
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00131600
&ZOPN                 SETA &ZOPN+1                                      00131700
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00131800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00131900
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00132000
&ZOPD(&ZOPN)          SETC '++ IWMSRFSV NAME'                           00132100
.ZLMFSL2M             ANOP  ,                                           00132200
.*-------------------------------------------------------------------   00132300
.***AM.L01  IWMSRFSV FMT=LIST PARAMETERS                                00132400
&ZOPN                 SETA &ZOPN+1                                      00132500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00132600
&ZOPO(&ZOPN)          SETC 'DS'                                         00132700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00132800
&ZOPD(&ZOPN)          SETC '++ IWMSRFSV PARM LIST'                      00132900
.*-------------------------------------------------------------------   00133000
.***AM.L02 XVERSION XL1                                                 00133100
&ZOPN                 SETA &ZOPN+1                                      00133200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00133300
&ZOPO(&ZOPN)          SETC 'DS'                                         00133400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00133500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00133600
.*-------------------------------------------------------------------   00133700
.***AM.L09  XRSV0001 CL1                                                00133800
&ZOPN                 SETA &ZOPN+1                                      00133900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00134000
&ZOPO(&ZOPN)          SETC 'DS'                                         00134100
&ZOPV(&ZOPN)          SETC 'CL1'                                        00134200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00134300
.*-------------------------------------------------------------------   00134400
.***AM.L09  XPLISTLEN XL2                                               00134500
&ZOPN                 SETA &ZOPN+1                                      00134600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00134700
&ZOPO(&ZOPN)          SETC 'DS'                                         00134800
&ZOPV(&ZOPN)          SETC 'XL2'                                        00134900
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00135000
.*-------------------------------------------------------------------   00135100
.***AM.L09  XCONNTKN BL.32                                              00135200
&ZOPN                 SETA &ZOPN+1                                      00135300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNTKN'                         00135400
&ZOPO(&ZOPN)          SETC 'DS'                                         00135500
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00135600
&ZOPD(&ZOPN)          SETC '++ &ZXCONNTKN  XCONNTKN'                    00135700
.*-------------------------------------------------------------------   00135800
.***AM.L09 ADDR XAPPLENV A                                              00135900
&ZOPN                 SETA &ZOPN+1                                      00136000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAPPLENV_ADDR'                    00136100
&ZOPO(&ZOPN)          SETC 'DS'                                         00136200
&ZOPV(&ZOPN)          SETC 'A'                                          00136300
&ZOPD(&ZOPN)          SETC '++ &ZXAPPLENV ADDR XAPPLENV'                00136400
.*-------------------------------------------------------------------   00136500
.***AM.L09 ADDR XSERVER_DATA A                                          00136600
&ZOPN                 SETA &ZOPN+1                                      00136700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_DATA_ADDR'                00136800
&ZOPO(&ZOPN)          SETC 'DS'                                         00136900
&ZOPV(&ZOPN)          SETC 'A'                                          00137000
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_DATA ADDR XSERVER_DATA'        00137100
.*-------------------------------------------------------------------   00137200
.***AM.L10 END OF IWMSRFSV LIST PARAMETERS                              00137300
&ZOPN                 SETA &ZOPN+1                                      00137400
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00137500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00137600
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00137700
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00137800
.*                                                                      00137900
&ZOPN                 SETA &ZOPN+1                                      00138000
&ZOPL(&ZOPN)          SETC ' '                                          00138100
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00138200
&ZOPV(&ZOPN)          SETC '1'                                          00138300
&ZOPD(&ZOPN)          SETC ' '                                          00138400
.*-------------------------------------------------------------------   00138500
.***AL.L12 IWMSRFSV FMT=LIST MF=S|L PARAMETERS                          00138600
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00138700
.*                                                                      00138800
&ZOPN                 SETA  &ZOPN+1                                     00138900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00139000
&ZOPO(&ZOPN)          SETC  'DC'                                        00139100
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00139200
&ZOPD(&ZOPN)          SETC  '++ IWMSRFSV ARG PARMS'                     00139300
.*                                                                      00139400
.ZLMFSLX              ANOP  ,                                           00139500
.*-------------------------------------------------------------------   00139600
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00139700
&ZPLLEN               SETA 16                                           00139800
.*                                                                      00139900
.******************************************************************     00140000
.***AI.L01 IWMSRFSV FMT=LIST FILL IN PARAMETER AREA                     00140100
.******************************************************************     00140200
                      ACTR  10000                                       00140300
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00140400
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00140500
&ZCVAL                SETC  'LAE'          XAX MODE                     00140600
.ZIMFXA               ANOP ,                                            00140700
.*                                                                      00140800
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00140900
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00141000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00141100
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00141200
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00141300
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00141400
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00141500
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00141600
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00141700
&ZOPN                 SETA  &ZOPN+1                                     00141800
&ZOPL(&ZOPN)          SETC  ' '                                         00141900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00142000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00142100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00142200
                      AGO   .ZIMFNX                                     00142300
.*                                                                      00142400
.ZIMFN2               ANOP ,                                            00142500
&ZOPN                 SETA  &ZOPN+1                                     00142600
&ZOPL(&ZOPN)          SETC  ' '                                         00142700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00142800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00142900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00143000
.ZIMFNX               ANOP ,                                            00143100
.********************************************************************   00143200
.***AI.L02 IWMSRFSV FMT=LIST INITIALIZE PARAMETER AREA                  00143300
.********************************************************************   00143400
.***AI.L03 MF=(SLE)                                                     00143500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00143600
.*                                                                      00143700
&ZOPN                 SETA  &ZOPN+1                                     00143800
&ZOPL(&ZOPN)          SETC  ' '                                         00143900
&ZOPO(&ZOPN)          SETC  'XC'                                        00144000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00144100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00144200
.ZIMFLX               ANOP  ,                                           00144300
.*-------------------------------------------------------------------   00144400
.***AI.L04 XPLISTLEN XL2                                                00144500
&ZOPN                 SETA  &ZOPN+1                                     00144600
&ZOPL(&ZOPN)          SETC  ' '                                         00144700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00144800
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00144900
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00145000
.*-------------------------------------------------------------------   00145100
.***AI.L25  XCONNTKN XL4                                                00145200
                      AIF   ('&ZXCONNTKN' EQ '').ZI4E                   00145300
                      AIF   ('&ZXCONNTKN' EQ 'OUTPUT').ZI4E             00145400
&ZCGPR                SETC  '&XCONNTKN'                                 00145500
.*                                                                      00145600
                      AIF   ('&XCONNTKN'(1,1) NE '(').ZI4B              00145700
&ZCGPR   SETC  '0('.'&XCONNTKN'(2,K'&XCONNTKN-2).')'                    00145800
                      AGO   .ZI4D                                       00145900
.ZI4B                 ANOP  ,                                           00146000
.*                                                                      00146100
&ZC                   SETC  '&XCONNTKN'(1,1)                            00146200
                      AIF   (T'&ZC NE 'N').ZI4D                         00146300
&ZC                   SETC  '&XCONNTKN'                                 00146400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00146500
&ZCGPR                SETC  '=BL4''&XCONNTKN'''                         00146600
.*                                                                      00146700
.ZI4D                 ANOP  ,                                           00146800
.*                                                                      00146900
&ZOPN                 SETA  &ZOPN+1                                     00147000
&ZOPL(&ZOPN)          SETC  ' '                                         00147100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00147200
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00147300
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNTKN XCONNTKN'                    00147400
.*                                                                      00147500
.ZI4E                 ANOP  ,                                           00147600
.*-------------------------------------------------------------------   00147700
.***AI.L19 ADDR XAPPLENV A                                              00147800
                      AIF   ('&ZXAPPLENV' EQ '').ZI5H                   00147900
&ZCLNG                SETC  '&XAPPLENV'                                 00148000
&ZCGPR                SETC  '14'                                        00148100
         AIF   ('&XAPPLENV'(1,1) EQ '(').ZI5F  IN GPR                   00148200
.*                                                                      00148300
&ZOPN                 SETA  &ZOPN+1                                     00148400
&ZOPL(&ZOPN)          SETC  ' '                                         00148500
&ZOPO(&ZOPN)          SETC  'LA'                                        00148600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00148700
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00148800
.*                                                                      00148900
                      AGO   .ZI5G                                       00149000
.*                                                                      00149100
.ZI5F                 ANOP  ,                                           00149200
&ZCGPR   SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                             00149300
.*                                                                      00149400
.ZI5G                 ANOP  ,                                           00149500
.*                                                                      00149600
&ZOPN                 SETA  &ZOPN+1                                     00149700
&ZOPL(&ZOPN)          SETC  ' '                                         00149800
&ZOPO(&ZOPN)          SETC  'ST'                                        00149900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00150000
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00150100
.*                                                                      00150200
.ZI5H                 ANOP  ,                                           00150300
.*-------------------------------------------------------------------   00150400
.***AI.L19 ADDR XSERVER_DATA A                                          00150500
                      AIF   ('&ZXSERVER_DATA' EQ '').ZI6H               00150600
&ZCLNG                SETC  '&XSERVER_DATA'                             00150700
&ZCGPR                SETC  '14'                                        00150800
         AIF   ('&XSERVER_DATA'(1,1) EQ '(').ZI6F  IN GPR               00150900
.*                                                                      00151000
&ZOPN                 SETA  &ZOPN+1                                     00151100
&ZOPL(&ZOPN)          SETC  ' '                                         00151200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00151300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00151400
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_DATA XSERVER_DATA'            00151500
.*                                                                      00151600
                      AGO   .ZI6G                                       00151700
.*                                                                      00151800
.ZI6F                 ANOP  ,                                           00151900
&ZCGPR   SETC  '&XSERVER_DATA'(2,K'&XSERVER_DATA-2)                     00152000
.*                                                                      00152100
.ZI6G                 ANOP  ,                                           00152200
.*                                                                      00152300
&ZOPN                 SETA  &ZOPN+1                                     00152400
&ZOPL(&ZOPN)          SETC  ' '                                         00152500
&ZOPO(&ZOPN)          SETC  'ST'                                        00152600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00152700
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_DATA XSERVER_DATA'            00152800
.*                                                                      00152900
.ZI6H                 ANOP  ,                                           00153000
.*-------------------------------------------------------------------   00153100
&ZOPN1                SETA &ZOPN                                        00153200
.*******************************************************************    00153300
.***  PROCESS IWMSRFSV OUTPUT PARAMETERS                                00153400
.*******************************************************************    00153500
                      ACTR  10000                                       00153600
.*******************************************************************    00153700
.***AO.X02  RETURN CODE PROCESSING                                      00153800
.*******************************************************************    00153900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00154000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00154100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00154200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00154300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00154400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00154500
&ZOPN                 SETA  &ZOPN+1                                     00154600
&ZOPL(&ZOPN)          SETC  ' '                                         00154700
&ZOPO(&ZOPN)          SETC  'ST'                                        00154800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00154900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00155000
                      AGO   .ZMRETX                                     00155100
.*                                                                      00155200
.ZMRET2               ANOP  ,                                           00155300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00155400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00155500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00155600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00155700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00155800
&ZOPN                 SETA  &ZOPN+1                                     00155900
&ZOPL(&ZOPN)          SETC  ' '                                         00156000
&ZOPO(&ZOPN)          SETC  'LR'                                        00156100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00156200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00156300
.ZMRETX               ANOP  ,                                           00156400
.*******************************************************************    00156500
.***AO.X03  REASON CODE PROCESSING                                      00156600
.*******************************************************************    00156700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00156800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00156900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00157000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00157100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00157200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00157300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00157400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00157500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00157600
&ZOPN                 SETA  &ZOPN+1                                     00157700
&ZOPL(&ZOPN)          SETC  ' '                                         00157800
&ZOPO(&ZOPN)          SETC  'ST'                                        00157900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00158000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00158100
                      AGO   .ZMRSNX                                     00158200
.*                                                                      00158300
.ZMRSN2               ANOP  ,                                           00158400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00158500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00158600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00158700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00158800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00158900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00159000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00159100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00159200
&ZOPN                 SETA  &ZOPN+1                                     00159300
&ZOPL(&ZOPN)          SETC  ' '                                         00159400
&ZOPO(&ZOPN)          SETC  'LR'                                        00159500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00159600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00159700
.ZMRSNX               ANOP  ,                                           00159800
.*******************************************************************    00159900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00160000
.*******************************************************************    00160100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00160200
.*******************************************************************    00160300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00160400
.*******************************************************************    00160500
                      ACTR  10000                                       00160600
.*                                                                      00160700
                      LCLA  &ZLC           COLUMN POSITION              00160800
                      LCLA  &ZOPX          LIST TABLE INDEX             00160900
                      LCLC  &ZLL           LABEL                        00161000
                      LCLC  &ZLOP          OPERATION                    00161100
                      LCLC  &ZLV           VALUE                        00161200
                      LCLC  &ZLD           DESCRIPTION                  00161300
.*                                                                      00161400
&ZOPX                 SETA  1                                           00161500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00161600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00161700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00161800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00161900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00162000
                      AIF   (K'&ZLD LE 0).ZL5                           00162100
&ZLC                  SETA  35             COMMENT COLUMN               00162200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00162300
&ZLC                  SETA  33             COMMMENT COLUMN              00162400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00162500
&ZLV                  SETC  '&ZLV'.' '                                  00162600
                      AGO   .ZL3                                        00162700
.*                                                                      00162800
.ZL4                  ANOP  ,                                           00162900
&ZLV                  SETC  '&ZLV'.' '                                  00163000
.ZL5                  ANOP  ,                                           00163100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00163200
.*                                                                      00163300
&ZLL     &ZLOP &ZLV                                                     00163400
.*                                                                      00163500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00163600
                      AGO   .ZL2           CONTINUE LOOPING             00163700
.*                                                                      00163800
.ZLX                  ANOP  ,                                           00163900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00164000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00164100
         L     14,16(0,0)              GET CVT ADDRESS                  00164200
         L     14,772(14,0)            GET SFT ADDRESS                  00164300
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00164400
         LA    15,51                   GET EX FOR SERVICE ROUTINE       00164500
         OR    14,15                   GET PC NUMBER                    00164600
         PC    0(14)                                                    00164700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00164800
.ZLINKX               ANOP  ,                                           00164900
.*******************************************************************    00165000
.***AP.X01  FORMAT GENERATED CODE                                       00165100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00165200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00165300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00165400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00165500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00165600
                      AIF   (K'&ZLD LE 0).ZL51                          00165700
&ZLC                  SETA  35             COMMENT COLUMN               00165800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00165900
&ZLC                  SETA  33             COMMENT COLUMN               00166000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00166100
&ZLV                  SETC  '&ZLV'.' '                                  00166200
                      AGO   .ZL31                                       00166300
.*                                                                      00166400
.ZL41                 ANOP  ,                                           00166500
&ZLV                  SETC  '&ZLV'.' '                                  00166600
.ZL51                 ANOP  ,                                           00166700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00166800
.*                                                                      00166900
&ZLL     &ZLOP &ZLV                                                     00167000
.*                                                                      00167100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00167200
                      AGO   .ZL21          CONTINUE LOOPING             00167300
.*                                                                      00167400
.ZLX1                 ANOP  ,                                           00167500
.*******************************************************************    00167600
.***AP.X02  END OF IWMSRFSV MACRO                                       00167700
&ZIWMSRFSV            SETC  'YES'          SET IWMSRFSV USED            00167800
         POP   PRINT                                                    00167900
*                                            IWMSRFSV-0                 00168000
         SPACE 1                                                        00168100
.ZLX2                 ANOP  ,                                           00168200
         MEND                                                           00168300
**********************************************************************/ 00168400
*/**** START OF SPECIFICATIONS **************************************** 00168500
*                                                                     * 00168600
*                                                                     * 00168700
*01* MACRO NAME:  IWMSRFSV                              -09/06/96-<0> * 00168800
*                                                                     * 00168900
*                                                                     * 00169000
*01* DESCRIPTIVE NAME:  Sysplex Routing Find Server Routine           * 00169100
*                                                                     * 00169200
*01* PROPRIETARY STATEMENT:                                           * 00169300
*                                                                     * 00169400
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00169500
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00169600
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00169700
*                                                                     * 00169800
* STATUS= HBB6603                                                     * 00169900
*                                                                     * 00170000
*                                                                     * 00170100
*                                                                     * 00170200
*01* FUNCTION:                                                        * 00170300
*       See the IWMSRFSV macro prologue for details.                  * 00170400
*                                                                     * 00170500
*01* INPUT:                                                           * 00170600
*                                                                     * 00170700
*            ?IWMSRFSV     CONNTKN(xconntkn)                          * 00170800
*                          APPLENV(xapplenv)                          * 00170900
*                          SERVER_DATA(xserver_data)                  * 00171000
*                         [RETCODE(xretcode)]                         * 00171100
*                         [RSNCODE(xrsncode)]                         * 00171200
*                         [PLISTVER(xplistver|IMPLIED_VERSION)]     * 00171300
*                        [MF(S)]                                     * 00171400
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 00171500
*                        [MF(E,xmfctrl,COMPLETE)]                  * 00171600
*                                                                     * 00171700
****** END OF SPECIFICATIONS *****************************************/ 00171800
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00171900
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00172000
*  ANS('/* ? IWMSRFSV '||MACLIST||' ')                                  00172100
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00172200
*                                                                       00172300
*  DCL ZELO  FIXED;                                                     00172400
*  DCL ZECOL FIXED;                                                     00172500
*                                                                       00172600
*  ZELO=1;     /* STARTING COLUMN */                                    00172700
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00172800
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00172900
*    IF ZECOL>0                                                         00173000
*      THEN                                                             00173100
*        DO;   /* PARENTHESIS FOUND */                                  00173200
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         00173300
*             NORESCAN COL(MACLMAR+5);                                  00173400
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00173500
*        END;                                                           00173600
*      ELSE                                                             00173700
*        DO;   /* REMAINING KEYS */                                     00173800
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00173900
*             NORESCAN COL(MACLMAR+5);                                  00174000
*          ZELO=LENGTH(MACKEYS)+1;                                      00174100
*        END;                                                           00174200
*  END;                                                                 00174300
*  ANS(' -09/06/96-0- */')                                              00174400
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00174500
*/********************************************************************/ 00174600
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00174700
*/********************************************************************/ 00174800
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00174900
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00175000
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00175100
*                                                                       00175200
*  DCL   ZIWMSRFSV CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00175300
*  DEACT ZIWMSRFSV;                                                     00175400
*                                                                       00175500
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00175600
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00175700
*                                                                       00175800
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00175900
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00176000
*                                                                       00176100
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00176200
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00176300
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00176400
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00176500
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00176600
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00176700
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00176800
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00176900
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00177000
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00177100
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00177200
*                                                                       00177300
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00177400
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00177500
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00177600
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00177700
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00177800
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00177900
*/*******************************************************************/  00178000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00178100
*/*******************************************************************/  00178200
*  DCL XCONNTKN;  DEACT XCONNTKN;  /***PV.XVAR02 INPUT NAME */          00178300
*  DCL ZXCONNTKN; DEACT ZXCONNTKN;  /***INPUT/OUTPUT CONTROL */         00178400
*  DCL XAPPLENV;  DEACT XAPPLENV;  /***PV.XVAR02 INPUT NAME */          00178500
*  DCL ZXAPPLENV; DEACT ZXAPPLENV;  /***INPUT/OUTPUT CONTROL */         00178600
*  DCL   XSERVER_DATA;             /***PV.XVAR03 OUTPUT NAME */         00178700
*  DEACT XSERVER_DATA;             /***PV.XVAR03 OUTPUT NAME */         00178800
*  DCL   ZXSERVER_DATA;            /***INPUT/OUTPUT CONTROL */          00178900
*  DEACT ZXSERVER_DATA;            /***INPUT/OUTPUT CONTROL */          00179000
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00179100
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00179200
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00179300
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00179400
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00179500
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00179600
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00179700
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00179800
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00179900
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00180000
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00180100
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00180200
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00180300
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00180400
*/********************************************************************/ 00180500
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00180600
*/********************************************************************/ 00180700
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00180800
*    XPLISTVER=0;                                                       00180900
*  ELSE                                                                 00181000
*    XPLISTVER=0;                                                       00181100
*  IF PLISTVER^=''                                                      00181200
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00181300
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00181400
*    THEN                                                               00181500
*      DO;                                                              00181600
*                                                                       00181700
*        ZCVAL='';                           /* ERROR FLAG */           00181800
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        00181900
*          THEN                                                         00182000
*            DO;                                                        00182100
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           00182200
*                  ' MUST CONTAIN ONE'||                                00182300
*                  ' (OR MORE) ARGUMENT(S).';                           00182400
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00182500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00182600
*              ZMACRET=8;                    /* MACRO ERROR */          00182700
*              ZCVAL='NO_ARGUMENT';                                     00182800
*            END;                                                       00182900
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00183000
*          THEN                                                         00183100
*            DO;                                                        00183200
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            00183300
*                  PLISTVER||                                           00183400
*                  '" "PLISTVER"'||                                     00183500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00183600
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00183700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00183800
*              ZMACRET=8;                    /* MACRO ERROR */          00183900
*            END;                                                       00184000
*                                                                       00184100
*        ZC=PLISTVER(1);                                                00184200
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00184300
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      00184400
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00184500
*            THEN                                                       00184600
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00184700
*        END;                                                           00184800
*        IF ZCVAL=''                                                    00184900
*          THEN                                                         00185000
*            DO;                             /* CHECK RANGE LIMITS */   00185100
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00185200
*              THEN                                                     00185300
*                XPLISTVER=FIXED(PLISTVER(1));                          00185400
*              ELSE                                                     00185500
*                DO;                                                    00185600
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            00185700
*                    PLISTVER(1)||                                      00185800
*                  ', BUT PLISTVER OF '||                               00185900
*                    CHAR(XPLISTVER)||                                  00186000
*                  ' IS REQUIRED.';                                     00186100
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00186200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00186300
*              ZMACRET=8;                    /* MACRO ERROR */          00186400
*                END;                                                   00186500
*              IF XPLISTVER<0 |              /* LOW LIMIT */            00186600
*                 XPLISTVER>0                /* HIGH LIMIT */           00186700
*                THEN                                                   00186800
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00186900
*            END;                                                       00187000
*        IF ZCVAL^=''                                                   00187100
*          THEN                                                         00187200
*            DO;                             /* RANGE ERROR */          00187300
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00187400
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            00187500
*                  PLISTVER||                                           00187600
*                  '" THE RANGE IS "0-0"'||                             00187700
*                  ' FOR ARGUMENT 1.';                                  00187800
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00187900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00188000
*              ZMACRET=8;                    /* MACRO ERROR */          00188100
*            END;                                                       00188200
*      END;                                                             00188300
*                                                                       00188400
*/********************************************************************/ 00188500
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00188600
*/********************************************************************/ 00188700
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00188800
*  XMF='';                                                              00188900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00189000
*  IF TRANSLATE(MF(1))                                                  00189100
*              = 'S'                         /* CHECK FOR KEYWORD */    00189200
*    THEN                                                               00189300
*      DO;                                                              00189400
*        XMF='S';                            /* SET XVARIABLE */        00189500
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00189600
*          THEN                                                         00189700
*            DO;                                                        00189800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00189900
*                  MF||                                                 00190000
*                  '" "MF"'||                                           00190100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00190200
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00190300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00190400
*              ZMACRET=8;                    /* MACRO ERROR */          00190500
*            END;                                                       00190600
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00190700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00190800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00190900
*  IF TRANSLATE(MF(1))                                                  00191000
*              = 'L'                         /* CHECK FOR KEYWORD */    00191100
*    THEN                                                               00191200
*      DO;                                                              00191300
*        XMF='L';                            /* SET XVARIABLE */        00191400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00191500
*          THEN                                                         00191600
*            DO;                                                        00191700
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00191800
*                  MF||                                                 00191900
*                  '" "MF"'||                                           00192000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00192100
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00192200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00192300
*              ZMACRET=8;                    /* MACRO ERROR */          00192400
*            END;                                                       00192500
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00192600
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00192700
*        IF PLISTVER ^= ''                                              00192800
*          THEN                                                         00192900
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00193000
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            00193100
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00193200
*          THEN                                                         00193300
*            DO;                                                        00193400
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          00193500
*                  ' CAN ONLY HAVE'||                                   00193600
*                  ' THE "PLISTVER" KEY'||                              00193700
*                  ' SPECIFIED ON THE INVOCATION.';                     00193800
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00193900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00194000
*              ZMACRET=8;                    /* MACRO ERROR */          00194100
*            END;                                                       00194200
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00194300
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00194400
*  IF MF(2)=''                               /* CHECK FOR NULL */       00194500
*   THEN                                                                00194600
*    DO;                                     /* KEY IS REQUIRED */      00194700
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00194800
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              00194900
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00195000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00195100
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00195200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00195300
*        ZMACRET=8;                          /* MACRO ERROR */          00195400
*    END;                                                               00195500
*  ELSE                                                                 00195600
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00195700
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00195800
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00195900
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00196000
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00196100
*    THEN                                                               00196200
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00196300
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00196400
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00196500
*     LENGTH(XMFATTR)>60                                                00196600
*    THEN                                                               00196700
*      DO;                                                              00196800
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00196900
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            00197000
*            MF||                                                       00197100
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       00197200
*            ' LENGTH OF 60 CHARACTERS. ';                              00197300
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00197400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00197500
*        ZMACRET=8;                          /* MACRO ERROR */          00197600
*      END;                                                             00197700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00197800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00197900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00198000
*  IF TRANSLATE(MF(1))                                                  00198100
*              = 'E'                         /* CHECK FOR KEYWORD */    00198200
*    THEN                                                               00198300
*      DO;                                                              00198400
*        XMF='E';                            /* SET XVARIABLE */        00198500
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00198600
*          THEN                                                         00198700
*            DO;                                                        00198800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00198900
*                  MF||                                                 00199000
*                  '" "MF"'||                                           00199100
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00199200
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00199300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00199400
*              ZMACRET=8;                    /* MACRO ERROR */          00199500
*            END;                                                       00199600
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00199700
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00199800
*  IF MF(2)=''                               /* CHECK FOR NULL */       00199900
*   THEN                                                                00200000
*    DO;                                     /* KEY IS REQUIRED */      00200100
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00200200
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              00200300
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00200400
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00200500
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00200600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00200700
*        ZMACRET=8;                          /* MACRO ERROR */          00200800
*    END;                                                               00200900
*  ELSE                                                                 00201000
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00201100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00201200
*  XMFSCK='';                                /* RESET XVARIABLE */      00201300
*  IF TRANSLATE(MF(3))                                                  00201400
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00201500
*    THEN                                                               00201600
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00201700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00201800
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00201900
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00202000
*    THEN                                                               00202100
*      DO;                                   /* KEYWORD NOT ENTERED */  00202200
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00202300
*        IF MF(3)^=''                                                   00202400
*          THEN                                                         00202500
*            DO;                                                        00202600
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00202700
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00202800
*                  MF||'"'||                                            00202900
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              00203000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00203100
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00203200
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00203300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00203400
*              ZMACRET=8;                    /* MACRO ERROR */          00203500
*            END;                                                       00203600
*      END;                                                             00203700
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00203800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00203900
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00204000
*  IF MF='MF'                                                           00204100
*    | MF='()'                               /*CHECK ENTRY*/            00204200
*     THEN                                                              00204300
*       DO;                                                             00204400
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            00204500
*                  ' MUST CONTAIN ONE'||                                00204600
*                  ' (OR MORE) ARGUMENT(S).';                           00204700
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00204800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00204900
*              ZMACRET=8;                    /* MACRO ERROR */          00205000
*       END;                                                            00205100
*  ELSE                                                                 00205200
*    DO;                                                                00205300
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00205400
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00205500
*        THEN                                                           00205600
*          DO;                               /* KEYWORD NOT ENTERED */  00205700
*            XMF='S';                        /* SET DEFAULT */          00205800
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00205900
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00206000
*              THEN                                                     00206100
*                DO;                                                    00206200
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00206300
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00206400
*                  MF||'"'||                                            00206500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              00206600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00206700
*                  ' "S",'||                 /* VALID KEYWORD */        00206800
*                  ' "L",'||                 /* VALID KEYWORD */        00206900
*                  ' OR "E".';               /* VALID KEYWORD */        00207000
*              ANS MSG('?IWMSRFSV ---> '||ZMS);                         00207100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00207200
*              ZMACRET=8;                    /* MACRO ERROR */          00207300
*                END;                                                   00207400
*          END;                                                         00207500
*    END;                                                               00207600
*/********************************************************************/ 00207700
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00207800
*/********************************************************************/ 00207900
*  IF PLISTVER=''                                                       00208000
*     | PLISTVER(1)='IMPLIED_VERSION'                                   00208100
*    THEN                                                               00208200
*      ZC='ON';                              /* DEFAULT FLAG ON */      00208300
*    ELSE                                                               00208400
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00208500
*/********************************************************************/ 00208600
*/***PD.P02 DEFAULT ECHO                                             */ 00208700
*/********************************************************************/ 00208800
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00208900
*  IF XMF^='L'                                                          00209000
*    THEN                                                               00209100
*      DO;                                   /* FULL SYNTAX CHECK */    00209200
*        ANS('/*DEFAULT(S): */')                                        00209300
*           NORESCAN COL(MACLMAR+5);                                    00209400
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00209500
*  IF PLISTVER=''                                                       00209600
*    THEN                                                               00209700
*      ANS('/* PLISTVER('||                                             00209800
*          CHAR(XPLISTVER)||                                            00209900
*          ')*/')                                                       00210000
*          NORESCAN COL(MACLMAR+5);                                     00210100
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00210200
*    THEN                                                               00210300
*      ANS('/* NONE. */')                                               00210400
*         NORESCAN COL(MACLMAR+5);                                      00210500
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00210600
*      END;                                                             00210700
*/********************************************************************/ 00210800
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00210900
*/********************************************************************/ 00211000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00211100
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00211200
*                                                                       00211300
*  IF SYSASCE=''                                                        00211400
*    THEN                                                               00211500
*      DO;                                                              00211600
*        IF SYSSPLV=''                                                  00211700
*          THEN                                                         00211800
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00211900
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00212000
*          THEN                                                         00212100
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00212200
*          ELSE                                                         00212300
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00212400
*      END;                                                             00212500
*/********************************************************************/ 00212600
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00212700
*/********************************************************************/ 00212800
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00212900
*  IF XMF^='L'                                                          00213000
*    THEN                                                               00213100
*      DO;                                   /* FULL SYNTAX CHECK */    00213200
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00213300
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00213400
*    THEN                                                               00213500
*      DO;                                                              00213600
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            00213700
*            ' "'||MACLIST||'"'||                                       00213800
*            ' CANNOT BE USED.'||                                       00213900
*            ' NO POSITIONAL ARGUMENTS'||                               00214000
*            ' ARE ALLOWED.';                                           00214100
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00214200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00214300
*        ZMACRET=8;                          /* MACRO ERROR */          00214400
*      END;                                                             00214500
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00214600
*  IF NUMBER(CONNTKN)>1                      /* CHECK POSITIONALS */    00214700
*    THEN                                                               00214800
*      DO;                                                              00214900
*        ZMS=' 8, "CONNTKN'||                /**KPOSP* MSG*/            00215000
*            CONNTKN||                                                  00215100
*            '" "CONNTKN"'||                                            00215200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00215300
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00215400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00215500
*        ZMACRET=8;                          /* MACRO ERROR */          00215600
*      END;                                                             00215700
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00215800
*  XCONNTKN=CONNTKN(1);                      /* SET XVARIABLE */        00215900
*  IF CONNTKN(1)=''                          /* CHECK FOR NULL */       00216000
*   THEN                                                                00216100
*    DO;                                     /* KEY IS REQUIRED */      00216200
*        ZXCONNTKN='';                       /* RESET IN/OUTPUT */      00216300
*        ZMS=' 8,  '||                                                  00216400
*            ' "CONNTKN" KEY AND ITS ARGUMENT'||                        00216500
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00216600
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00216700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00216800
*        ZMACRET=8;                          /* MACRO ERROR */          00216900
*    END;                                                               00217000
*  ELSE                                                                 00217100
*    ZXCONNTKN='INPUT';                      /* SET IN/OUTPUT */        00217200
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00217300
*  IF NUMBER(APPLENV)>1                      /* CHECK POSITIONALS */    00217400
*    THEN                                                               00217500
*      DO;                                                              00217600
*        ZMS=' 8, "APPLENV'||                /**KPOSP* MSG*/            00217700
*            APPLENV||                                                  00217800
*            '" "APPLENV"'||                                            00217900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00218000
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00218100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00218200
*        ZMACRET=8;                          /* MACRO ERROR */          00218300
*      END;                                                             00218400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00218500
*  XAPPLENV=APPLENV(1);                      /* SET XVARIABLE */        00218600
*  IF APPLENV(1)=''                          /* CHECK FOR NULL */       00218700
*   THEN                                                                00218800
*    DO;                                     /* KEY IS REQUIRED */      00218900
*        ZXAPPLENV='';                       /* RESET IN/OUTPUT */      00219000
*        ZMS=' 8,  '||                                                  00219100
*            ' "APPLENV" KEY AND ITS ARGUMENT'||                        00219200
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00219300
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00219400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00219500
*        ZMACRET=8;                          /* MACRO ERROR */          00219600
*    END;                                                               00219700
*  ELSE                                                                 00219800
*    ZXAPPLENV='INPUT';                      /* SET IN/OUTPUT */        00219900
*/*PG.KXVAR01 NAME, RQD OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00220000
*  IF NUMBER(SERVER_DATA)>1                  /* CHECK POSITIONALS */    00220100
*    THEN                                                               00220200
*      DO;                                                              00220300
*        ZMS=' 8, "SERVER_DATA'||            /**KPOSP* MSG*/            00220400
*            SERVER_DATA||                                              00220500
*            '" "SERVER_DATA"'||                                        00220600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00220700
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00220800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00220900
*        ZMACRET=8;                          /* MACRO ERROR */          00221000
*      END;                                                             00221100
*/*PG.KXVAR03 NAME, RQD OUTPUT, KEYS -XVARIABLE----------------------*/ 00221200
*  XSERVER_DATA=SERVER_DATA(1);              /* SET XVARIABLE */        00221300
*  IF SERVER_DATA(1)=''                      /* CHECK FOR NULL */       00221400
*   THEN                                                                00221500
*    DO;                                     /* KEY IS REQUIRED */      00221600
*        ZXSERVER_DATA='';                   /* RESET IN/OUTPUT */      00221700
*        ZMS=' 8,  '||                                                  00221800
*            ' "SERVER_DATA" KEY AND ITS ARGUMENT'||                    00221900
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00222000
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00222100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00222200
*        ZMACRET=8;                          /* MACRO ERROR */          00222300
*    END;                                                               00222400
*  ELSE                                                                 00222500
*    ZXSERVER_DATA='OUTPUT';                 /* SET IN/OUTPUT */        00222600
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00222700
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            00222800
*    THEN                                                               00222900
*      DO;                                                              00223000
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            00223100
*            ' MUST CONTAIN ONE'||                                      00223200
*            ' (OR MORE) ARGUMENT(S).';                                 00223300
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00223400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00223500
*        ZMACRET=8;                          /* MACRO ERROR */          00223600
*      END;                                                             00223700
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00223800
*    THEN                                                               00223900
*      DO;                                                              00224000
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            00224100
*            RETCODE||                                                  00224200
*            '" "RETCODE"'||                                            00224300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00224400
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00224500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00224600
*        ZMACRET=8;                          /* MACRO ERROR */          00224700
*      END;                                                             00224800
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00224900
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00225000
*    THEN                                                               00225100
*      DO;                                                              00225200
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00225300
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00225400
*      END;                                                             00225500
*  ELSE                                                                 00225600
*    IF ZXRETCODE^=''                                                   00225700
*      THEN                                                             00225800
*        ZXRETCODE='';                       /* RESET OUTPUT */         00225900
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00226000
*  IF RSNCODE='RSNCODE' | RSNCODE='()'       /*CHECK ENTRY*/            00226100
*    THEN                                                               00226200
*      DO;                                                              00226300
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            00226400
*            ' MUST CONTAIN ONE'||                                      00226500
*            ' (OR MORE) ARGUMENT(S).';                                 00226600
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00226700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00226800
*        ZMACRET=8;                          /* MACRO ERROR */          00226900
*      END;                                                             00227000
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00227100
*    THEN                                                               00227200
*      DO;                                                              00227300
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            00227400
*            RSNCODE||                                                  00227500
*            '" "RSNCODE"'||                                            00227600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00227700
*        ANS MSG('?IWMSRFSV ---> '||ZMS);                               00227800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00227900
*        ZMACRET=8;                          /* MACRO ERROR */          00228000
*      END;                                                             00228100
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00228200
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00228300
*    THEN                                                               00228400
*      DO;                                                              00228500
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00228600
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00228700
*      END;                                                             00228800
*  ELSE                                                                 00228900
*    IF ZXRSNCODE^=''                                                   00229000
*      THEN                                                             00229100
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00229200
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00229300
*      END;                                  /* END COMPLETE CHECKING*/ 00229400
*/********************************************************************/ 00229500
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00229600
*/********************************************************************/ 00229700
*  IF ZMACRET = 0                                                       00229800
*    THEN                                                               00229900
*      DO;                                                              00230000
*/********************************************************************/ 00230100
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00230200
*/********************************************************************/ 00230300
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00230400
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00230500
*    THEN                                                               00230600
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00230700
*    ELSE                                                               00230800
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00230900
*/********************************************************************/ 00231000
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00231100
*  IF XMF^='L'                                                          00231200
*    THEN                                                               00231300
*      ANS('DO; /* IWMSRFSV-PLISTVER */')                               00231400
*          NORESCAN COL(MACLMAR);                                       00231500
*/*MCMPLS01 RFY 15*/                                                    00231600
*  IF XMF^='L' & ZMACRET = 0                                            00231700
*    THEN                                                               00231800
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   00231900
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00232000
       DCL EHAMAPS CHAR EXTERNAL;                                       00232100
       IF INDEX(EHAMAPS,'XM@')=0 THEN                                   00232200
         EHAMAPS=EHAMAPS||'XM@,';                                       00232300
       IF INDEX(EHAREGS,'00F')=0                                        00232400
         THEN                                                           00232500
           EHAREGS=EHAREGS||'00F'; /* GPR00F                      */    00232600
       IF INDEX(EHAREGS,'15F')=0                                        00232700
         THEN                                                           00232800
           EHAREGS=EHAREGS||'15F'; /* GPR15F                      */    00232900
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00233000
*/*PL.LL01 ?IWMSRFSV MF=L PARAMETER LIST-----------------------------*/ 00233100
*  IF XMF='L'                                                           00233200
*    THEN                                                               00233300
*      DO;                                                              00233400
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    00233500
*            '/* ?IWMSRFSV PARM LIST*/')                                00233600
*            NORESCAN COL(MACLMAR);                                     00233700
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00233800
*        ANS('2 '||XMFCTRL||                                            00233900
*            '_XVERSION FIXED(8), '||                                   00234000
*            '/* INPUT XVERSION*/')                                     00234100
*            NORESCAN COL(MACLMAR+2);                                   00234200
*/*PL.LL13  XRSV0001 CHAR(1) RESERVED--------------------------------*/ 00234300
*        ANS('2 '||XMFCTRL||                                            00234400
*            '_XRSV0001 CHAR(1), '||                                    00234500
*            '/* RESERVED */')                                          00234600
*            NORESCAN COL(MACLMAR+2);                                   00234700
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00234800
*        ANS('2 '||XMFCTRL||                                            00234900
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       00235000
*            '/* INPUT XPLISTLEN*/')                                    00235100
*            NORESCAN COL(MACLMAR+2);                                   00235200
*/*PL.LL13  XCONNTKN BIT(32) INPUT-----------------------------------*/ 00235300
*        ANS('2 '||XMFCTRL||                                            00235400
*            '_XCONNTKN BIT(32), '||                                    00235500
*            '/* '||ZXCONNTKN||' XCONNTKN */')                          00235600
*            NORESCAN COL(MACLMAR+2);                                   00235700
*/*PL.LL13 ADDR XAPPLENV PTR(31) INPUT ADDR--------------------------*/ 00235800
*        ANS('2 '||XMFCTRL||                                            00235900
*            '_XAPPLENV_ADDR PTR(31), '||                               00236000
*            '/* '||ZXAPPLENV_ADDR||' XAPPLENV_ADDR */')                00236100
*            NORESCAN COL(MACLMAR+2);                                   00236200
*/*PL.LL13 ADDR XSERVER_DATA PTR(31) OUTPUT ADDR---------------------*/ 00236300
*        ANS('2 '||XMFCTRL||                                            00236400
*            '_XSERVER_DATA_ADDR PTR(31), '||                           00236500
*            '/* '||ZXSERVER_DATA_ADDR||' XSERVER_DATA_ADDR */')        00236600
*            NORESCAN COL(MACLMAR+2);                                   00236700
*/*PL.LL18 ----------------------------------------------------------*/ 00236800
*        ANS('2 * CHAR(0);')                                            00236900
*            NORESCAN COL(MACLMAR+2);                                   00237000
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00237100
*      END;                                                             00237200
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00237300
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00237400
*  DEACT ZPRMLINE;                                                      00237500
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00237600
*  DEACT ZNDX;                                                          00237700
*  ZNDX=MACINDEX(1:4);         /* MACINDEX LAST THREE DIGITS        */  00237800
*  DCL XVERSION CHAR;                                                   00237900
*  DEACT XVERSION;                                                      00238000
*/*PL.L02 ?IWMSRFSV PARAMETER LIST-----------------------------------*/ 00238100
*  IF XMF^='L'                                                          00238200
*    THEN                                                               00238300
*      DO;                                                              00238400
*/*PL.L03 ?IWMSRFSV PARAMETER LIST-----------------------------------*/ 00238500
*        IF XMF='S'                                                     00238600
*          THEN                                                         00238700
*            XMFCTRL='#ZPLIST';                                         00238800
*/*PL.L04 ?IWMSRFSV PARAMETER LIST-----------------------------------*/ 00238900
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            00239000
*                 ' /* ?IWMSRFSV PARM LIST*/';                          00239100
*/*PL.L05 ADDR XVERSION FIXED(8) INPUT-------------------------------*/ 00239200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239300
*                 '_XVERSION FIXED(8), '||                              00239400
*                 '/* INPUT XVERSION*/';                                00239500
*/*PL.L08  XRSV0001 CHAR(1) RESERVED---------------------------------*/ 00239600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239700
*                 '_XRSV0001 CHAR(1), '||                               00239800
*                 '/* RESERVED */';                                     00239900
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00240000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240100
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  00240200
*                 '/* INPUT XPLISTLEN*/';                               00240300
*/*PL.L08  XCONNTKN BIT(32) INPUT------------------------------------*/ 00240400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240500
*                 '_XCONNTKN BIT(32), '||                               00240600
*                 '/* '||ZXCONNTKN||' XCONNTKN */';                     00240700
*/*PL.L08 ADDR XAPPLENV PTR(31) INPUT ADDR---------------------------*/ 00240800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240900
*                 '_XAPPLENV_ADDR PTR(31), '||                          00241000
*                 '/* '||ZXAPPLENV_ADDR||' XAPPLENV_ADDR */';           00241100
*/*PL.L08 ADDR XSERVER_DATA PTR(31) OUTPUT ADDR----------------------*/ 00241200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00241300
*                 '_XSERVER_DATA_ADDR PTR(31), '||                      00241400
*                 '/* '||ZXSERVER_DATA_ADDR||' XSERVER_DATA_ADDR */';   00241500
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00241600
*        ZPRMNUM=ZPRMNUM+1;                                             00241700
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       00241800
*        IF XPLISTVER^=0                                                00241900
*           & XMF^='S'                                                  00242000
*          THEN                                                         00242100
*            DO;                                                        00242200
*              ZPRMNUM=ZPRMNUM+1;                                       00242300
*              ZPRM(ZPRMNUM)=                                           00242400
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       00242500
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        00242600
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            00242700
*               ' IS LONG ENOUGH */';                                   00242800
*            END;                                                       00242900
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00243000
*        ZPLLEN=16;                                                     00243100
*        IF ZPRMMAX<ZPLLEN                                              00243200
*           & XMF^='E'                                                  00243300
*          THEN                                                         00243400
*            ZPRMMAX=ZPLLEN;                                            00243500
*/*PL.L13 -----------------------------------------------------------*/ 00243600
*      END;                                                             00243700
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00243800
*  IF XMF^='L'                                                          00243900
*    THEN                                                               00244000
*      DO;                                                              00244100
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               00244200
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00244300
*            ANS('#Z'||ZNDX||'=''''B;'||                                00244400
*                '/* CLEAR PARAMETER AREA */')                          00244500
*                NORESCAN COL(MACLMAR);                                 00244600
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00244700
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           00244800
*            '/* XPLISTLEN FIXED(16) */')                               00244900
*            NORESCAN COL(MACLMAR);                                     00245000
*/*PI.L19 XCONNTKN NAME BIT(32)--------------------------------------*/ 00245100
*        IF ZXCONNTKN='INPUT' |                                         00245200
*           ZXCONNTKN='INOUT'                                           00245300
*          THEN                                                         00245400
*            IF (XCONNTKN(1:1)^='0' &                                   00245500
*               XCONNTKN(1:1)^='1')                                     00245600
*              THEN                                                     00245700
*                ANS('#Z'||ZNDX||'_XCONNTKN='||                         00245800
*                    XCONNTKN||';'||                                    00245900
*                    '/* XCONNTKN BIT(32) */')                          00246000
*                    NORESCAN COL(MACLMAR);                             00246100
*              ELSE                                                     00246200
*                ANS('#Z'||ZNDX||'_XCONNTKN='||                         00246300
*                    ''''||XCONNTKN||'''B;'||                           00246400
*                    '/* XCONNTKN BIT(32) */')                          00246500
*                    NORESCAN COL(MACLMAR);                             00246600
*/*PI.L15 ADDR(XAPPLENV) CHAR(32)------------------------------------*/ 00246700
*        IF ZXAPPLENV^=''                                               00246800
*          THEN                                                         00246900
*            ANS('#Z'||ZNDX||'_XAPPLENV_ADDR='||                        00247000
*                'ADDR('||XAPPLENV||');'||                              00247100
*                '/* ADDR XAPPLENV CHAR(32) */')                        00247200
*                NORESCAN COL(MACLMAR);                                 00247300
*/*PI.L15 ADDR(XSERVER_DATA) CHAR(32)--------------------------------*/ 00247400
*        IF ZXSERVER_DATA^=''                                           00247500
*          THEN                                                         00247600
*            ANS('#Z'||ZNDX||'_XSERVER_DATA_ADDR='||                    00247700
*                'ADDR('||XSERVER_DATA||');'||                          00247800
*                '/* ADDR XSERVER_DATA CHAR(32) */')                    00247900
*                NORESCAN COL(MACLMAR);                                 00248000
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00248100
*              IF NUMBER(RSNCODE)>0                                     00248200
*                THEN                                                   00248300
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00248400
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00248500
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       00248600
*                  '/* PARAMETER LIST */')                              00248700
*                  NORESCAN COL(MACLMAR);                               00248800
*              IF SYSASCE^='P'                                          00248900
*                THEN                                                   00249000
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              00249100
*                      '/* PARAMETER LIST AR */')                       00249200
*                      NORESCAN COL(MACLMAR);                           00249300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00249400
         ANS('PC(XM@(96)|51);') SKIP COL(5);                            00249500
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00249600
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00249700
*              IF NUMBER(RETCODE)>0                                     00249800
*                THEN                                                   00249900
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00250000
*/*PO.L08 XRETCODE BIT(32) RETURN CODE-------------------------------*/ 00250100
*              IF NUMBER(RETCODE)>0                                     00250200
*                THEN                                                   00250300
*                    ANS(XRETCODE||                                     00250400
*                     '=GPR15F; /* SET RETURN CODE */')                 00250500
*                      NORESCAN COL(MACLMAR);                           00250600
*/*PO.L09 XRSNCODE BIT(32) REASON CODE-------------------------------*/ 00250700
*              IF NUMBER(RSNCODE)>0                                     00250800
*                THEN                                                   00250900
*                    ANS(XRSNCODE||                                     00251000
*                     '=GPR00F; /* SET REASON CODE */')                 00251100
*                      NORESCAN COL(MACLMAR);                           00251200
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00251300
*              IF NUMBER(RSNCODE)>0                                     00251400
*                THEN                                                   00251500
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00251600
*              IF NUMBER(RETCODE)>0                                     00251700
*                THEN                                                   00251800
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00251900
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00252000
*      END;                                                             00252100
*/*PO.L13 IWMSRFSV USAGE INDICATOR-----------------------------------*/ 00252200
*  ZIWMSRFSV='YES';                          /* SET IWMSRFSV USED */    00252300
*/*PO.L15 END OF EXECUTABLE IWMSRFSV-PLISTVER MACRO------------------*/ 00252400
*  IF XMF^='L'                                                          00252500
*    THEN                                                               00252600
*      ANS('END; /* IWMSRFSV-PLISTVER */')                              00252700
*          NORESCAN COL(MACLMAR);                                       00252800
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00252900
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00253000
*/*PO.L17 END OF IWMSRFSV MACRO--------------------------------------*/ 00253100
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        00253200
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00253300
*/*******************************************************************/  00253400
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00253500
*/*******************************************************************/  00253600
*      END;                                                             00253700
*/*******************************************************************/  00253800
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00253900
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00254000
*/*******************************************************************/  00254100
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00254200
*    THEN                                                               00254300
*      DO;                                                              00254400
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00254500
*                                      DOUBLEWORD MULTIPLES        */   00254600
*/*******************************************************************/  00254700
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00254800
*/*******************************************************************/  00254900
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00255000
*          THEN                                                         00255100
*            DO;                                                        00255200
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00255300
*                THEN                                                   00255400
*                  DO;                                                  00255500
*                    ANS('?EPILOG                                       00255600
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00255700
*                    EHALIST=EHALIST||',AMG,';                          00255800
*                  END;                                                 00255900
*            END;                                                       00256000
*/*******************************************************************/  00256100
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00256200
*/*******************************************************************/  00256300
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00256400
*          THEN                                                         00256500
*            DO;                                                        00256600
*              IF ZPRMMAX>EHAMAXLEN                                     00256700
*                THEN                                                   00256800
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00256900
*            END;                                                       00257000
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00257100
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   00257200
*              COL(MACLMAR);                                            00257300
*        END;                                                           00257400
*      END;                                                             00257500
*/*-----------------------------------------------------------------*/  00257600
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00257700
*/*        BY ?EPILOG                                               */  00257800
*/*-----------------------------------------------------------------*/  00257900
*        IF INDEX(EHAREGS,'01P')=0                                      00258000
*          THEN                                                         00258100
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  00258200
*        IF INDEX(EHAREGS,'00F')=0                                      00258300
*          & NUMBER(RSNCODE)>0                                          00258400
*          THEN                                                         00258500
*            EHAREGS=EHAREGS||'00F'; /* GPR00F                      */  00258600
*        IF INDEX(EHAREGS,'15F')=0                                      00258700
*          THEN                                                         00258800
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  00258900
*  RETURN CODE(ZMACRET);                                                00259000
*%END IWMSRFSV;                                                         00259100
