*%IEFPPSCN: MACRO KEYS(REQUEST,PPTINFO,PROGRAM,TOKEN,RETCODE,MF);       00002000
*/**** START OF SPECIFICATIONS **************************************** 00004000
*                                                                     * 00006000
*01* MACRO NAME:  IEFPPSCN                              -89/10/10-<0> * 00008000
*                                                                     * 00010000
*01* DESCRIPTIVE NAME:  Program Properties Table scan                 * 00012000
*                                                                     * 00014000
*01* COPYRIGHT:                                                       * 00016000
*                                                                     * 00018000
*    5695-047                                                         * 00020000
*    THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      * 00022000
*    (C) COPYRIGHT IBM CORP. 1991                                     * 00024000
*    LICENSED MATERIALS - PROPERTY OF IBM                             * 00026000
*                                                                     * 00028000
*01* STATUS: HBB4420                                                  * 00030000
*                                                                     * 00032000
*01* FUNCTION:                                                        * 00034000
*                                                                     * 00036000
*      The IEFPPSCN macro will provide an interface to retrieve       * 00038000
*      information from the program properties table.  This interface * 00040000
*      is intended to provide a mechanism for the initiator           * 00042000
*      internally to retrieve information about a program and for     * 00044000
*      other products to report on the information in the table.      * 00046000
*                                                                     * 00048000
*01* INVOCATION FORMAT:                                               * 00050000
*                                                                     * 00052000
*[xlabel]  IEFPPSCN     REQUEST=RETRIEVE|NEXT|                       * 00053300
*                                END                                 * 00054600
*                     [,PPTINFO=xpptinfo|*]                         * 00056000
*                     [,PROGRAM=xprogram|*]                         * 00058000
*                     [,TOKEN=xtoken|0]                             * 00060000
*                     [,RETCODE=xretcode]                             * 00062000
*                    [,MF=S]                                         * 00064000
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00066000
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00068000
*                                                                     * 00070000
*                                                                     * 00072000
*      Where:                                                         * 00074000
*                                                                     * 00076000
*                                                                     * 00078000
*      [xlabel]                                                       * 00080000
*          is an optional 1 to 8 alphanumeric character input string, * 00082000
*          starting in column 1, that is the assembler label on the   * 00084000
*          IEFPPSCN macro.                                            * 00086000
*          DEFAULT: Null label.                                       * 00088000
*                                                                     * 00090000
*                                                                     * 00092000
*                                                                     * 00094000
*       REQUEST(RETRIEVE|NEXT|END)                                  * 00096000
*          is a required keyword input.  It indicates the type of     * 00098000
*          processing required:                                       * 00100000
*                                                                     * 00102000
*                                                                     * 00104000
*          RETRIEVE   Retrieve the PPT table entry for the program    * 00106000
*                    specified in the PROGRAM field.  The PROGRAM and * 00108000
*                    PPTINFO keywords are required.  The TOKEN        * 00110000
*                    keyword should not be specified.                 * 00112000
*                                                                     * 00114000
*          NEXT      Retrieve the next PPT table entry.  If this      * 00116000
*                    invocation is the first in a sequence, the TOKEN * 00118000
*                    value must be set to zero.  If it is not the     * 00120000
*                    first invocation in a sequence, the TOKEN value  * 00122000
*                    must be the one returned from the last           * 00124000
*                    invocation.  The PPTINFO and TOKEN keywords are  * 00126000
*                    required.  The PROGRAM keyword should not be     * 00128000
*                    specified.                                       * 00130000
*                                                                     * 00132000
*          END       Terminate the retrieval of PPT information.      * 00134000
*                    This type of request should always be used to    * 00136000
*                    indicate to the system that the caller's         * 00138000
*                    application has completed all of it's PPT        * 00140000
*                    processing.  The TOKEN keyword is required.  The * 00142000
*                    PROGRAM and PPTINFO keywords should not be       * 00144000
*                    specified.                                       * 00146000
*                                                                     * 00148000
*                                                                     * 00150000
*                                                                     * 00152000
*                                                                     * 00154000
*      [PPTINFO(xpptinfo|*)]                                        * 00156000
*          is the name (RX-type) (or address in register (2)-(12) ASM * 00158000
*          only) of an optional 16 character input/output area.  This * 00160000
*          is an area provided by the caller where the PPT entry is   * 00162000
*          placed.  This returned portion is mapped by IEFZB610       * 00164000
*          (PPTENTRY).  The caller must provide an area long enough   * 00166000
*          to contain the whole PPT entry.  This area is composed of  * 00168000
*          two contiguous parts, the first (2 bytes) is a length      * 00170000
*          field, and the second part is the PPT entry area.  Before  * 00172000
*          the service in invoked, the caller should set the length   * 00174000
*          part to the length of the PPT entry area (second part)     * 00176000
*          that has been provided.  Upon return, the length field     * 00178000
*          will be set to the length of the PPT entry stored.         * 00180000
*          DEFAULT: *  (The default value will set zero address in    * 00182000
*          the parameter list.)                                       * 00184000
*                                                                     * 00186000
*                                                                     * 00188000
*                                                                     * 00190000
*      [PROGRAM(xprogram|*)]                                        * 00192000
*          is the name (RX-type) (or address in register (2)-(12) ASM * 00194000
*          only) of an optional 8 character input field.  It contains * 00196000
*          the name of the program to be found by REQUEST=RETRIEVE.   * 00198000
*          DEFAULT: *  (The default value will set zero address in    * 00200000
*          the parameter list.)                                       * 00202000
*                                                                     * 00204000
*                                                                     * 00206000
*                                                                     * 00208000
*      [TOKEN(xtoken|0)]                                            * 00210000
*          is the name (RX-type) (or address in register (2)-(12) ASM * 00212000
*          only) of an optional fullword input/output.  This field is * 00214000
*          a token that is returned to the caller for REQUEST=NEXT    * 00216000
*          type calls and is expected to be provided as input to the  * 00218000
*          next call.  If this invocation is the first in a sequence, * 00220000
*          it must be set to zero.                                    * 00222000
*          DEFAULT: 0                                                 * 00224000
*                                                                     * 00226000
*                                                                     * 00228000
*                                                                     * 00230000
*      [RETCODE(xretcode)]                                            * 00232000
*          is the name (RX-type) of an optional fullword output       * 00234000
*          variable (or register (2)-(12) ASM only) into which the    * 00236000
*          return code is to be copied from GPR 15.                   * 00238000
*                                                                     * 00240000
*                                                                     * 00242000
*                                                                     * 00244000
*      [MF(S|L|E)]                                                  * 00246000
*          is an optional keyword input which specifies the macro     * 00248000
*          form.                                                      * 00250000
*          DEFAULT: S                                                 * 00252000
*                                                                     * 00254000
*                                                                     * 00256000
*          [MF(S)]                                                    * 00258000
*              specifies the standard form of the macro.  The "S"     * 00260000
*              form generates code to put the parameters into the     * 00262000
*              parameter list and invoke the desired service.  Full   * 00264000
*              checking for required macro keys is done along with    * 00266000
*              supplying defaults for optional parameters that are    * 00268000
*              not specified.  The ?EPILOG macro must be invoked at   * 00270000
*              the end of the module.                                 * 00272000
*                                                                     * 00274000
*              For assembly language code modules, the "S" form       * 00276000
*              generates code to put the parameters into an in-line   * 00278000
*              parameter list and invoke the desired service.  Full   * 00280000
*              checking for required macro keys is done along with    * 00282000
*              supplying defaults for optional parameters that are    * 00284000
*              not specified.                                         * 00286000
*                                                                     * 00288000
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00290000
*              specifies the list form of the macro.  The "L" form    * 00292000
*              defines an area to be used for the parameter list.     * 00294000
*              Any other macro parameters are flagged as errors.      * 00296000
*                                                                     * 00298000
*            ,xmfctrl                                                 * 00300000
*              is a required input.  It is the name (RX-type) of a    * 00302000
*              storage area for the parameter list.                   * 00304000
*                                                                     * 00306000
*            ,xmfattr|BDY(DWORD)                                    * 00308000
*              is an optional 60 character input  string that varies  * 00310000
*              from 1 to 60 characters, that contains any special     * 00312000
*              attributes for the parameter list.                     * 00314000
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/AS, which * 00316000
*              indicates the parameter list is to be aligned on a     * 00318000
*              double word boundary.                                  * 00320000
*                                                                     * 00322000
*          [MF(E,xmfctrl,COMPLETE)]                                 * 00324000
*              specifies the execute form of the macro.  The "E" form * 00326000
*              generates code to put the parameters into the          * 00328000
*              parameter list specified by xmfctrl and provides full  * 00330000
*              syntax checking with default setting.                  * 00332000
*                                                                     * 00334000
*            ,xmfctrl                                                 * 00336000
*              is a required input.  It is the name (RX-type) (or     * 00338000
*              address in register (2)-(12) ASM only) of a storage    * 00340000
*              area for the parameter list.                           * 00342000
*                                                                     * 00344000
*            ,COMPLETE                                              * 00346000
*              is an optional keyword input which specifies the       * 00348000
*              degree of macro parameter syntax checking.             * 00350000
*              DEFAULT: COMPLETE                                      * 00352000
*                                                                     * 00354000
*                                                                     * 00356000
*              COMPLETE   Checking for required macro keys is done    * 00358000
*                        and defaults are supplied for optional       * 00360000
*                        parameters that were not specified.          * 00362000
*                                                                     * 00364000
*                                                                     * 00366000
*                                                                     * 00368000
*                                                                     * 00370000
*01* RETURN CODES:                                                    * 00372000
*                                                                     * 00374000
*                                                                     * 00376000
*       00        Program found.                                      * 00378000
*                                                                     * 00380000
*       04        End of PPT.                                         * 00382000
*                                                                     * 00384000
*       08        Program not found.                                  * 00386000
*                                                                     * 00388000
*       0C        TOKEN invalid.                                      * 00390000
*                                                                     * 00392000
*       10        Invalid request.                                    * 00394000
*                                                                     * 00396000
*       14        Unable to GETMAIN TOKEN                             * 00398000
*                                                                     * 00400000
*                                                                     * 00402000
*01* REASON CODES:  None.                                             * 00404000
*                                                                     * 00406000
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 00408000
*                                                                     * 00410000
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 00412000
*                                                                     * 00414000
*01* COMPONENT:  SC1B6                                                * 00416000
*                                                                     * 00418000
*01* DISTRIBUTION LIBRARY: MACLIB                                     * 00420000
*                                                                     * 00422000
*01* MACRO USAGE NOTES:                                               * 00424000
*                                                                     * 00426000
*                                                                     * 00428000
*       1.  Printing of the macro expansion is controlled by the      * 00430000
*           ZPRINT global macro variable.  Any value other than 'NO'  * 00432000
*           will result in the macro expansion being printed.  The    * 00434000
*           default is 'YES'.  The following examples illustrate how  * 00436000
*           the ZPRINT variable should be set.                        * 00438000
*                                                                     * 00440000
*               &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'         * 00442000
*                                                                     * 00444000
*                                                                     * 00446000
****** END OF SPECIFICATIONS *****************************************/ 00448000
*/********************************************************************* 00450000
         MACRO                                                          00452000
&XLABEL  IEFPPSCN &REQUEST=,&PPTINFO=,&PROGRAM=,&TOKEN=,&RETCODE=,&MF=  00454000
.*                                                                      00456000
*              MACDATE -89/10/10-<0>                                    00458000
.*                                                                      00460000
.*******************************************************************    00462000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00464000
.*******************************************************************    00466000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00468000
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00470000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00472000
.*                                                                      00474000
              GBLC  &ZIEFPPSCN  YES=MACRO USED AT LEAST ONCE            00476000
.*******************************************************************    00478000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00480000
.*******************************************************************    00482000
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00484000
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00486000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00488000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00490000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00492000
              LCLA  &ZAWRK      USED AS A WORK AREA                     00494000
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00496000
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00498000
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00500000
              LCLA  &ZMACRET    MACRO RETURN CODE                       00502000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00504000
.*                                                                      00506000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00508000
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00510000
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00512000
.********************************************************************   00514000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00516000
.********************************************************************   00518000
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00520000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00522000
.*                                                                      00524000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00526000
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00528000
              SPLEVEL  TEST                                             00530000
.ZSYS2        ANOP  ,                                                   00532000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00534000
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00536000
              SYSSTATE TEST                                             00538000
              AGO   .ZSYS4                                              00540000
.ZSYS3        ANOP  ,                                                   00542000
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00544000
.ZSYS4        ANOP  ,                                                   00546000
.*******************************************************************    00548000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00550000
.*******************************************************************    00552000
              LCLC  &XREQUEST   ++ VALUE                                00554000
              LCLC  &XPPTINFO   ++ NAME                                 00556000
              LCLC  &XPROGRAM   ++ NAME                                 00558000
              LCLC  &XTOKEN     ++ NAME                                 00560000
              LCLC  &XRETCODE   ++ NAME                                 00562000
              LCLC  &XMF        ++ VALUE                                00564000
              LCLC  &XMFCTRL    ++ NAME                                 00566000
              LCLC  &XMFATTR    ++ VALUE                                00568000
              LCLC  &XMFSCK     ++ VALUE                                00570000
.*******************************************************************    00572000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00574000
.*******************************************************************    00576000
              LCLC  &ZXREQUEST  ++ INPUT VALUE                          00578000
              LCLC  &ZXPPTINFO  ++ INOUT NAME                           00580000
              LCLC  &ZXPROGRAM  ++ INPUT NAME                           00582000
              LCLC  &ZXTOKEN    ++ INOUT NAME                           00584000
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00586000
              LCLC  &ZXMF       ++ INPUT VALUE                          00588000
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00590000
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00592000
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00594000
.********************************************************************   00596000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00598000
.********************************************************************   00600000
              ACTR  10000                                               00602000
.*------------------------------------------------------------------    00604000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00606000
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00608000
.*-------------------------------------------------------------------   00610000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00612000
.ZG21         ANOP  ,                                                   00614000
              AIF   ('&MF(1)' NE 'S').ZG22                              00616000
&XMF          SETC  'S'         SET KEYWORD                             00618000
              AIF   (N'&MF LE 1).ZG21A          CK NUM                  00620000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00622000
&ZMS          SETC  '&ZMS.&MF"'                                         00624000
&ZMS          SETC  '&ZMS "MF"'                                         00626000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00628000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00630000
.ZG21A        ANOP  ,                                                   00632000
.*-------------------------------------------------------------------   00634000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00636000
.ZG22         ANOP  ,                                                   00638000
              AIF   ('&MF(1)' NE 'L').ZG29                              00640000
&XMF          SETC  'L'         SET KEYWORD                             00642000
              AIF   (N'&MF LE 3).ZG22A          CK NUM                  00644000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00646000
&ZMS          SETC  '&ZMS.&MF"'                                         00648000
&ZMS          SETC  '&ZMS "MF"'                                         00650000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00652000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00654000
.ZG22A        ANOP  ,                                                   00656000
.*-------------------------------------------------------------------   00658000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00660000
              AIF   (N'&SYSLIST NE 0).ZG22B     POSITIONALS?            00662000
              AIF   ('&REQUEST' NE '').ZG22B    KEYS?                   00664000
              AIF   ('&PPTINFO' NE '').ZG22B    KEYS?                   00666000
              AIF   ('&PROGRAM' NE '').ZG22B    KEYS?                   00668000
              AIF   ('&TOKEN' NE '').ZG22B      KEYS?                   00670000
              AIF   ('&RETCODE' NE '').ZG22B    KEYS?                   00672000
              AGO    .ZG22C     INVOCATION OKAY                         00674000
.ZG22B        ANOP  ,                                                   00676000
&ZMS          SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE         00678000
&ZMS          SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                   00680000
&ZMS          SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'              00682000
              MNOTE 8,' &ZMS ON THE INVOCATION.'                        00684000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00686000
.ZG22C        ANOP  ,                                                   00688000
.*-------------------------------------------------------------------   00690000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00692000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00694000
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00694600
              AIF   (N'&MF(2) GT 1).ZG24B       MULTI PARMS             00695200
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00696000
.ZG24B        AIF   (K'&MF(2) GT 0).ZG24C                               00702000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00704000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00706000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00708000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00710000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00712000
.ZG24C        ANOP  ,                                                   00714000
.*-------------------------------------------------------------------   00716000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00718000
              AIF   (K'&ZXMFCTRL LE 0).ZG24P    NOT I/O                 00720000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG24P                      00722000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00724000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00726000
&ZMS          SETC  '&ZMS.&MF"'                                         00728000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00730000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00732000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00734000
.ZG24P        ANOP  ,                                                   00736000
.*-------------------------------------------------------------------   00738000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00740000
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00742000
&XMFATTR      SETC  '0D'        SET DEFAULT                             00744000
              AIF   (K'&MF(3) LE 0).ZG27B       PARM                    00746000
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00746600
              AIF   (N'&MF(3) GT 1).ZG27B       MULTI PARMS             00747200
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00748000
.ZG27B        ANOP  ,                                                   00754000
.*-------------------------------------------------------------------   00756000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00758000
              AIF   (K'&ZXMFATTR LE 0).ZG27P    NOT I/O                 00760000
              AIF   ('&XMFATTR'(1,1) NE '(').ZG27P                      00762000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00764000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00766000
&ZMS          SETC  '&ZMS.&MF"'                                         00768000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00770000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00772000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00774000
.ZG27P        ANOP  ,                                                   00776000
.*-------------------------------------------------------------------   00778000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00780000
              AIF   (K'&ZXMFATTR LE 0).ZG27S    NOT I/O                 00782000
              AIF   (K'&XMFATTR LE 60).ZG27S    LNG OK                  00784000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00786000
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00788000
&ZMS          SETC  '&ZMS.&MF"'                                         00790000
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00792000
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00794000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00796000
.ZG27S        ANOP  ,                                                   00798000
.*-------------------------------------------------------------------   00800000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00802000
.ZG29         ANOP  ,                                                   00804000
              AIF   ('&MF(1)' NE 'E').ZG37                              00806000
&XMF          SETC  'E'         SET KEYWORD                             00808000
              AIF   (N'&MF LE 3).ZG29A          CK NUM                  00810000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00812000
&ZMS          SETC  '&ZMS.&MF"'                                         00814000
&ZMS          SETC  '&ZMS "MF"'                                         00816000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00818000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00820000
.ZG29A        ANOP  ,                                                   00822000
.*-------------------------------------------------------------------   00824000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00826000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00828000
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00828600
              AIF   (N'&MF(2) GT 1).ZG31B       MULTI PARMS             00829200
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00830000
.ZG31B        AIF   (K'&MF(2) GT 0).ZG31C                               00836000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00838000
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00840000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00842000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00844000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00846000
.ZG31C        ANOP  ,                                                   00848000
.*-------------------------------------------------------------------   00850000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00852000
              AIF   (K'&ZXMFCTRL LE 0).ZG31R    NOT I/O                 00854000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG31R                      00856000
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00858000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                        00860000
              AIF   (K'&ZCGPR GT 2).ZG31Q                               00862000
              AIF   ('&ZCGPR' EQ '0').ZG31Q                             00864000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00866000
              AIF   (T'&ZCGPR NE 'N').ZG31Q     INVALID REG NAME        00868000
.ZG31P        ANOP  ,                                                   00870000
              AIF   (T'&ZCGPR NE 'N').ZG31R     NON NUMERIC             00872000
              AIF   ('&ZCGPR' LT '2').ZG31Q                             00874000
              AIF   ('&ZCGPR' LE '12').ZG31R                            00876000
.ZG31Q        ANOP  ,                                                   00878000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00880000
&ZMS          SETC  '&ZMS.&MF"'                                         00882000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00884000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00886000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00888000
.ZG31R        ANOP  ,                                                   00890000
.*-------------------------------------------------------------------   00892000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00894000
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00896000
.ZG35A   AIF   ('&MF(3)' NE 'COMPLETE').ZG36A                           00898000
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00900000
.*-------------------------------------------------------------------   00902000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00904000
.ZG36A        AIF   (K'&XMFSCK GT 0).ZG36C      KEYWORD                 00906000
              AIF   (K'&MF(3) LE 0).ZG36B                               00908000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00910000
&ZMS          SETC  '&ZMS.&MF"'                                         00912000
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00914000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00916000
              MNOTE 8,' &ZMS "COMPLETE".'                               00918000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00920000
.ZG36B        ANOP  ,                                                   00922000
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00924000
.ZG36C        ANOP  ,                                                   00926000
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00928000
.*------------------------------------------------------------------    00930000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00932000
.ZG37         ANOP  ,                                                   00934000
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00936000
              AIF   (K'&XMF GT 0).ZG37E         VALID ARG               00938000
              AIF   (T'&MF EQ 'O').ZG37D        OMITTED                 00940000
&ZASYSLNDX    SETA  0                                                   00942000
.ZG37A        ANOP  ,           POSITIONAL MACRO KEY                    00944000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00946000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C                    00948000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'MF').ZG37A              00950000
.ZG37B        ANOP  ,                                                   00952000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00954000
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00956000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00958000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00960000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00962000
              AGO   .ZG37E                                              00964000
.ZG37C        ANOP  ,                                                   00966000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00968000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00970000
&ZMS          SETC  '&ZMS.&MF"'                                         00972000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00974000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00976000
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00978000
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00980000
              MNOTE 8,' &ZMS OR "E".'                                   00982000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00984000
              AGO   .ZG37E                                              00986000
.ZG37D        ANOP  ,                                                   00988000
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00990000
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00992000
.ZG37E        ANOP  ,                                                   00994000
.********************************************************************   00996000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00998000
.********************************************************************   01000000
              ACTR  10000                                               01002000
.*-------------------------------------------------------------------   01004000
.***AG.MF03 MF=(SLE)                                                    01006000
              AIF   ('&XMF' EQ 'L').ZGMFX                               01008000
.*----------------------------------------------------------------***   01010000
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01012000
              AIF   (N'&REQUEST LE 1).ZG2A      CK NUM                  01014000
&ZMS          SETC  '"REQUEST='                 *KPOSA* MNOTE           01016000
&ZMS          SETC  '&ZMS.&REQUEST"'                                    01018000
&ZMS          SETC  '&ZMS "REQUEST"'                                    01020000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01022000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01024000
.ZG2A         ANOP  ,                                                   01026000
.*-------------------------------------------------------------------   01028000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01030000
&XREQUEST     SETC  ''          INITIALIZE XVARIABLE                    01032000
.ZG3A   AIF   ('&REQUEST(1)' NE 'RETRIEVE').ZG4A                        01034000
&XREQUEST     SETC  'RETRIEVE'  SET KEYWORD                             01036000
.*-------------------------------------------------------------------   01038000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01040000
.ZG4A   AIF   ('&REQUEST(1)' NE 'NEXT').ZG5A                            01042000
&XREQUEST     SETC  'NEXT'      SET KEYWORD                             01044000
.*-------------------------------------------------------------------   01046000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01048000
.ZG5A   AIF   ('&REQUEST(1)' NE 'END').ZG6A                             01050000
&XREQUEST     SETC  'END'       SET KEYWORD                             01052000
.*-------------------------------------------------------------------   01054000
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01056000
.ZG6A         AIF   (K'&XREQUEST GT 0).ZG6C     KEYWORD                 01058000
              AIF   (K'&REQUEST(1) LE 0).ZG6B                           01060000
&ZMS          SETC  '"REQUEST='                 *KUKWA* MNOTE           01062000
&ZMS          SETC  '&ZMS.&REQUEST"'                                    01064000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01066000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01068000
&ZMS          SETC  '&ZMS "RETRIEVE",'          VALID KEYWORD           01070000
&ZMS          SETC  '&ZMS "NEXT",'              VALID KEYWORD           01072000
              MNOTE 8,' &ZMS OR "END".'                                 01074000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01076000
.ZG6B         ANOP  ,                                                   01078000
&XREQUEST     SETC  'RETRIEVE'  SET DEFAULT KEYWORD                     01080000
.ZG6C         ANOP  ,                                                   01082000
&ZXREQUEST    SETC  'INPUT'     SET IN/OUTPUT                           01084000
.*-------------------------------------------------------------------   01086000
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01088000
              AIF   (K'&REQUEST(1) GT 0).ZG6D   VALID                   01090000
&ZXREQUEST    SETC  ''          RESET IN/OUTPUT                         01092000
&ZMS          SETC  'THE'       *KRKWA* MNOTE                           01094000
&ZMS          SETC  '&ZMS "REQUEST" KEY AND ITS ARGUMENT ARE'           01096000
&ZMS          SETC  '&ZMS REQUIRED.'                                    01098000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01100000
&ZMS          SETC  '&ZMS "RETRIEVE",'          VALID KEYWORD           01102000
&ZMS          SETC  '&ZMS "NEXT",'              VALID KEYWORD           01104000
              MNOTE 8,' &ZMS OR "END".'                                 01106000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01108000
.ZG6D         ANOP  ,                                                   01110000
.*----------------------------------------------------------------***   01112000
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     01114000
              AIF   (N'&PPTINFO LE 1).ZG8A      CK NUM                  01116000
&ZMS          SETC  '"PPTINFO='                 *KPOSA* MNOTE           01118000
&ZMS          SETC  '&ZMS.&PPTINFO"'                                    01120000
&ZMS          SETC  '&ZMS "PPTINFO"'                                    01122000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01124000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01126000
.ZG8A         ANOP  ,                                                   01128000
.*-------------------------------------------------------------------   01130000
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         01132000
&ZXPPTINFO    SETC  'INOUT'     SET IN/OUTPUT                           01134000
&XPPTINFO     SETC  '*'         SET DEFAULT                             01136000
              AIF   (K'&PPTINFO(1) LE 0).ZG8B   PARM                    01138000
&XPPTINFO     SETC  '&PPTINFO(1)'               SET XVARIABLE           01140000
              AIF   (N'&PPTINFO GT 1).ZG8B      MULTI PARMS             01142000
&XPPTINFO     SETC  '&PPTINFO'  SET XVARIABLE                           01144000
.ZG8B         ANOP  ,                                                   01146000
.*-------------------------------------------------------------------   01148000
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    01150000
              AIF   (K'&ZXPPTINFO LE 0).ZG8R    NOT I/O                 01152000
              AIF   ('&XPPTINFO' EQ '*').ZG8R                           01154000
              AIF   ('&XPPTINFO'(1,1) NE '(').ZG8R                      01156000
&ZCGPR        SETC  '&XPPTINFO'(2,K'&XPPTINFO-2)                        01158000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         01160000
              AIF   (K'&ZCGPR GT 2).ZG8Q                                01162000
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              01164000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01166000
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        01168000
.ZG8P         ANOP  ,                                                   01170000
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             01172000
              AIF   ('&ZCGPR' LT '2').ZG8Q                              01174000
              AIF   ('&ZCGPR' LE '12').ZG8R                             01176000
.ZG8Q         ANOP  ,                                                   01178000
&ZMS          SETC  '"PPTINFO='                 *KGPRA* MNOTE           01180000
&ZMS          SETC  '&ZMS.&PPTINFO"'                                    01182000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01184000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01186000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01188000
.ZG8R         ANOP  ,                                                   01190000
.*----------------------------------------------------------------***   01192000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01194000
              AIF   (N'&PROGRAM LE 1).ZG11A     CK NUM                  01196000
&ZMS          SETC  '"PROGRAM='                 *KPOSA* MNOTE           01198000
&ZMS          SETC  '&ZMS.&PROGRAM"'                                    01200000
&ZMS          SETC  '&ZMS "PROGRAM"'                                    01202000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01204000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01206000
.ZG11A        ANOP  ,                                                   01208000
.*-------------------------------------------------------------------   01210000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01212000
&ZXPROGRAM    SETC  'INPUT'     SET IN/OUTPUT                           01214000
&XPROGRAM     SETC  '*'         SET DEFAULT                             01216000
              AIF   (K'&PROGRAM(1) LE 0).ZG11B  PARM                    01218000
&XPROGRAM     SETC  '&PROGRAM(1)'               SET XVARIABLE           01220000
              AIF   (N'&PROGRAM GT 1).ZG11B     MULTI PARMS             01222000
&XPROGRAM     SETC  '&PROGRAM'  SET XVARIABLE                           01224000
.ZG11B        ANOP  ,                                                   01226000
.*-------------------------------------------------------------------   01228000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01230000
              AIF   (K'&ZXPROGRAM LE 0).ZG11R   NOT I/O                 01232000
              AIF   ('&XPROGRAM' EQ '*').ZG11R                          01234000
              AIF   ('&XPROGRAM'(1,1) NE '(').ZG11R                     01236000
&ZCGPR        SETC  '&XPROGRAM'(2,K'&XPROGRAM-2)                        01238000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        01240000
              AIF   (K'&ZCGPR GT 2).ZG11Q                               01242000
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             01244000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01246000
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        01248000
.ZG11P        ANOP  ,                                                   01250000
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             01252000
              AIF   ('&ZCGPR' LT '2').ZG11Q                             01254000
              AIF   ('&ZCGPR' LE '12').ZG11R                            01256000
.ZG11Q        ANOP  ,                                                   01258000
&ZMS          SETC  '"PROGRAM='                 *KGPRA* MNOTE           01260000
&ZMS          SETC  '&ZMS.&PROGRAM"'                                    01262000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01264000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01266000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01268000
.ZG11R        ANOP  ,                                                   01270000
.*----------------------------------------------------------------***   01272000
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     01274000
              AIF   (N'&TOKEN LE 1).ZG14A       CK NUM                  01276000
&ZMS          SETC  '"TOKEN='   *KPOSA* MNOTE                           01278000
&ZMS          SETC  '&ZMS.&TOKEN"'                                      01280000
&ZMS          SETC  '&ZMS "TOKEN"'                                      01282000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01284000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01286000
.ZG14A        ANOP  ,                                                   01288000
.*-------------------------------------------------------------------   01290000
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         01292000
&ZXTOKEN      SETC  'INOUT'     SET IN/OUTPUT                           01294000
&XTOKEN       SETC  '0'         SET DEFAULT                             01296000
              AIF   (K'&TOKEN(1) LE 0).ZG14B    PARM                    01298000
&XTOKEN       SETC  '&TOKEN(1)'                 SET XVARIABLE           01300000
              AIF   (N'&TOKEN GT 1).ZG14B       MULTI PARMS             01302000
&XTOKEN       SETC  '&TOKEN'    SET XVARIABLE                           01304000
.ZG14B        ANOP  ,                                                   01306000
.*-------------------------------------------------------------------   01308000
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    01310000
              AIF   (K'&ZXTOKEN LE 0).ZG14R     NOT I/O                 01312000
              AIF   ('&XTOKEN'(1,1) NE '(').ZG14R                       01314000
&ZCGPR        SETC  '&XTOKEN'(2,K'&XTOKEN-2)                            01316000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                        01318000
              AIF   (K'&ZCGPR GT 2).ZG14Q                               01320000
              AIF   ('&ZCGPR' EQ '0').ZG14Q                             01322000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01324000
              AIF   (T'&ZCGPR NE 'N').ZG14Q     INVALID REG NAME        01326000
.ZG14P        ANOP  ,                                                   01328000
              AIF   (T'&ZCGPR NE 'N').ZG14R     NON NUMERIC             01330000
              AIF   ('&ZCGPR' LT '2').ZG14Q                             01332000
              AIF   ('&ZCGPR' LE '12').ZG14R                            01334000
.ZG14Q        ANOP  ,                                                   01336000
&ZMS          SETC  '"TOKEN='   *KGPRA* MNOTE                           01338000
&ZMS          SETC  '&ZMS.&TOKEN"'                                      01340000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01342000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01344000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01346000
.ZG14R        ANOP  ,                                                   01348000
.*----------------------------------------------------------------***   01350000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01352000
              AIF   (N'&RETCODE LE 1).ZG17A     CK NUM                  01354000
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           01356000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    01358000
&ZMS          SETC  '&ZMS "RETCODE"'                                    01360000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01362000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01364000
.ZG17A        ANOP  ,                                                   01366000
.*-------------------------------------------------------------------   01368000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01370000
              AIF   (K'&RETCODE(1) LE 0).ZG17C  NO PARM                 01372000
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              01374000
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           01376000
              AIF   (N'&RETCODE GT 1).ZG17C     MULTIPLE PARMS          01378000
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           01380000
.ZG17C        ANOP  ,                                                   01382000
.*-------------------------------------------------------------------   01384000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01386000
              AIF   (K'&ZXRETCODE LE 0).ZG17R   NOT I/O                 01388000
              AIF   ('&XRETCODE'(1,1) NE '(').ZG17R                     01390000
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        01392000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                        01394000
              AIF   (K'&ZCGPR GT 2).ZG17Q                               01396000
              AIF   ('&ZCGPR' EQ '0').ZG17Q                             01398000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01400000
              AIF   (T'&ZCGPR NE 'N').ZG17Q     INVALID REG NAME        01402000
.ZG17P        ANOP  ,                                                   01404000
              AIF   (T'&ZCGPR NE 'N').ZG17R     NON NUMERIC             01406000
              AIF   ('&ZCGPR' LT '2').ZG17Q                             01408000
              AIF   ('&ZCGPR' LE '12').ZG17R                            01410000
.ZG17Q        ANOP  ,                                                   01412000
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           01414000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    01416000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01418000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01420000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01422000
.ZG17R        ANOP  ,                                                   01424000
.******************************************************************     01426000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01428000
.******************************************************************     01430000
              ACTR  10000                                               01432000
.*----------------------------------------------------------------***   01434000
.***AH.P02 EXTRA POSITIONALS                                            01436000
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               01438000
&ZCVAL        SETC  ''          ERROR FIELD                             01440000
&ZAWRK        SETA  0           POSITIONAL NUMBER                       01442000
.ZGLIST2      ANOP  ,                                                   01444000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         01446000
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                01448000
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   01450000
              AGO   .ZGLIST2                                            01452000
.*                                                                      01454000
.ZGLIST3      ANOP  ,                                                   01456000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             01458000
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           01460000
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     01462000
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              01464000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      01466000
              MNOTE 8,' &ZMS ARE ALLOWED.'                              01468000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01470000
.ZGLISTX      ANOP  ,                                                   01472000
&ZASYSLNDX    SETA  0                                                   01474000
.*-------------------------------------------------------------------   01476000
.***AG.MF04 MF=(SLE)                                                    01478000
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                01480000
.*******************************************************************    01482000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01484000
.*******************************************************************    01486000
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          01488000
.*******************************************************************    01490000
.***AE.01  START OF IEFPPSCN MACRO CODE                                 01492000
.*******************************************************************    01494000
              LCLC  &M0M0001                 LABEL NAME                 01496000
&M0M0001      SETC  '&XLABEL'                SET LABEL                  01498000
              AIF   (K'&XLABEL NE 0).XLAB2                              01500000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              01502000
.*                                                                      01504000
.XLAB2        ANOP  ,                                                   01506000
&M0M0001 DS    0H                             IEFPPSCN-0                01508000
.*******************************************************************    01510000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01522000
.*******************************************************************    01524000
              PUSH  PRINT                                               01525300
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          01526600
              PRINT OFF         ++ PR01                                 01528000
              AGO   .ZPRNTXX                                            01529000
.ZPRINTX      PRINT ON                                                  01530000
.ZPRNTXX      ANOP  ,                                                   01531000
.********************************************************************   01532000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     01534000
.********************************************************************   01536000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01538000
                      LCLA  &ZOPN1         INVOCATION INDEX             01540000
                      LCLC  &ZOPL(4095)    LABEL                        01542000
                      LCLC  &ZOPO(4095)    OPERATION                    01544000
                      LCLC  &ZOPV(4095)    VALUE                        01546000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01548000
.*                                                                      01550000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01552000
.******************************************************************     01554000
.***AL.L10 IEFPPSCN FMT=LIST MF=S|L PARAMETERS                          01556000
.******************************************************************     01558000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     01560000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     01562000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(2,3).'A'                     01564000
&XMFATTR              SETC  '0D'                                        01566000
.*                                                                      01568000
&ZOPN                 SETA  &ZOPN+1                                     01570000
&ZOPL(&ZOPN)          SETC  ' '                                         01572000
&ZOPO(&ZOPN)          SETC  'B'                                         01574000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01576000
&ZOPD(&ZOPN)          SETC  '++ IEFPPSCN ARG PARMS'                     01578000
.*                                                                      01580000
&ZOPN                 SETA  &ZOPN+1                                     01582000
&ZOPL(&ZOPN)          SETC  ' '                                         01584000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     01586000
&ZOPV(&ZOPN)          SETC  '1'                                         01588000
&ZOPD(&ZOPN)          SETC  ' '                                         01590000
.*                                                                      01592000
.ZLMFSL2              ANOP  ,                                           01594000
.*-------------------------------------------------------------------   01596000
.***AM.L01  IEFPPSCN FMT=LIST PARAMETERS                                01598000
&ZOPN                 SETA &ZOPN+1                                      01600000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   01602000
&ZOPO(&ZOPN)          SETC 'DS'                                         01604000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   01606000
&ZOPD(&ZOPN)          SETC '++ IEFPPSCN PARM LIST'                      01608000
.*-------------------------------------------------------------------   01610000
.***AM.L09  XPPSCID CL4                                                 01612000
&ZOPN                 SETA &ZOPN+1                                      01614000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPPSCID'                          01616000
&ZOPO(&ZOPN)          SETC 'DS'                                         01618000
&ZOPV(&ZOPN)          SETC 'CL4'                                        01620000
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XPPSCID'                       01622000
.*-------------------------------------------------------------------   01624000
.***AM.L09  XPLISTLEN XL2                                               01626000
&ZOPN                 SETA &ZOPN+1                                      01628000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        01630000
&ZOPO(&ZOPN)          SETC 'DS'                                         01632000
&ZOPV(&ZOPN)          SETC 'XL2'                                        01634000
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        01636000
.*-------------------------------------------------------------------   01638000
.***AM.L02 XVERSION XL1                                                 01640000
&ZOPN                 SETA &ZOPN+1                                      01642000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         01644000
&ZOPO(&ZOPN)          SETC 'DS'                                         01646000
&ZOPV(&ZOPN)          SETC 'XL1'                                        01648000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          01650000
.*-------------------------------------------------------------------   01652000
.***AM.L03 XPPTFLAG BL.8                                                01654000
&ZOPN                 SETA &ZOPN+1                                      01656000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPPTFLAG'                         01658000
&ZOPO(&ZOPN)          SETC 'DS'                                         01660000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01662000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01664000
.*                                                                      01666000
&ZOPN                 SETA  &ZOPN+1                                     01668000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_RETRIEVE'               01670000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01672000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01674000
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              01676000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RETRIEVE'                     01678000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01680000
.*                                                                      01682000
&ZOPN                 SETA  &ZOPN+1                                     01684000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_NEXT'                   01686000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01688000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01690000
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              01692000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NEXT'                         01694000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01696000
.*                                                                      01698000
&ZOPN                 SETA  &ZOPN+1                                     01700000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_END'                    01702000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01704000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01706000
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              01708000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).END'                          01710000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01712000
.*-------------------------------------------------------------------   01714000
.***AM.L09 ADDR XPROGRAM A                                              01716000
&ZOPN                 SETA &ZOPN+1                                      01718000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPROGRAM_ADDR'                    01720000
&ZOPO(&ZOPN)          SETC 'DS'                                         01722000
&ZOPV(&ZOPN)          SETC 'A'                                          01724000
&ZOPD(&ZOPN)          SETC '++ &ZXPROGRAM ADDR XPROGRAM'                01726000
.*-------------------------------------------------------------------   01728000
.***AM.L09 ADDR XTOKEN A                                                01730000
&ZOPN                 SETA &ZOPN+1                                      01732000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN_ADDR'                      01734000
&ZOPO(&ZOPN)          SETC 'DS'                                         01736000
&ZOPV(&ZOPN)          SETC 'A'                                          01738000
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN ADDR XTOKEN'                    01740000
.*-------------------------------------------------------------------   01742000
.***AM.L09 ADDR XPPTINFO A                                              01744000
&ZOPN                 SETA &ZOPN+1                                      01746000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPPTINFO_ADDR'                    01748000
&ZOPO(&ZOPN)          SETC 'DS'                                         01750000
&ZOPV(&ZOPN)          SETC 'A'                                          01752000
&ZOPD(&ZOPN)          SETC '++ &ZXPPTINFO ADDR XPPTINFO'                01754000
.*-------------------------------------------------------------------   01756000
.***AM.L10 END OF IEFPPSCN LIST PARAMETERS                              01758000
&ZOPN                 SETA &ZOPN+1                                      01760000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 01762000
&ZOPO(&ZOPN)          SETC 'EQU'                                        01764000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 01766000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         01768000
.*                                                                      01770000
&ZOPN                 SETA &ZOPN+1                                      01772000
&ZOPL(&ZOPN)          SETC ' '                                          01774000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      01776000
&ZOPV(&ZOPN)          SETC '1'                                          01778000
&ZOPD(&ZOPN)          SETC ' '                                          01780000
.*-------------------------------------------------------------------   01782000
.***AL.L12 IEFPPSCN FMT=LIST MF=S|L PARAMETERS                          01784000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         01786000
.*                                                                      01788000
&ZOPN                 SETA  &ZOPN+1                                     01790000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01792000
&ZOPO(&ZOPN)          SETC  'DC'                                        01794000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01796000
&ZOPD(&ZOPN)          SETC  '++ IEFPPSCN ARG PARMS'                     01798000
.*                                                                      01800000
.ZLMFSLX              ANOP  ,                                           01802000
.*-------------------------------------------------------------------   01804000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          01806000
&ZPLLEN               SETA 20                                           01808000
.*                                                                      01810000
.******************************************************************     01812000
.***AI.L01 IEFPPSCN FMT=LIST FILL IN PARAMETER AREA                     01814000
.******************************************************************     01816000
                      ACTR  10000                                       01818000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01820000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSTATE PRI     01822000
&ZCVAL                SETC  'LAE'          XAX MODE                     01824000
.ZIMFXA               ANOP ,                                            01826000
.*                                                                      01828000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01830000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01832000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01834000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01836000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01838000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01840000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01842000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01844000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01846000
&ZOPN                 SETA  &ZOPN+1                                     01848000
&ZOPL(&ZOPN)          SETC  ' '                                         01850000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01852000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01854000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01856000
                      AGO   .ZIMFNX                                     01858000
.*                                                                      01860000
.ZIMFN2               ANOP ,                                            01862000
&ZOPN                 SETA  &ZOPN+1                                     01864000
&ZOPL(&ZOPN)          SETC  ' '                                         01866000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01868000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01870000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01872000
.ZIMFNX               ANOP ,                                            01874000
.********************************************************************   01876000
.***AI.L02 IEFPPSCN FMT=LIST INITIALIZE PARAMETER AREA                  01878000
.********************************************************************   01880000
.***AI.L03 MF=(SLE)                                                     01882000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01884000
.*                                                                      01886000
&ZOPN                 SETA  &ZOPN+1                                     01888000
&ZOPL(&ZOPN)          SETC  ' '                                         01890000
&ZOPO(&ZOPN)          SETC  'XC'                                        01892000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         01894000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01896000
.ZIMFLX               ANOP  ,                                           01898000
.*-------------------------------------------------------------------   01900000
.***AI.L60 XPPSCID CL4                                                  01902000
&ZOPN                 SETA  &ZOPN+1                                     01904000
&ZOPL(&ZOPN)          SETC  ' '                                         01906000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01908000
&ZOPV(&ZOPN)          SETC  '0(4,1),=CL4''PPSC'''                       01910000
&ZOPD(&ZOPN)          SETC  '++ CL4 CONSTANT'                           01912000
.*-------------------------------------------------------------------   01914000
.***AI.L04 XPLISTLEN XL2                                                01916000
&ZOPN                 SETA  &ZOPN+1                                     01918000
&ZOPL(&ZOPN)          SETC  ' '                                         01920000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01922000
&ZOPV(&ZOPN)          SETC  '4(2,1),=AL2(20)'                           01924000
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    01926000
.*-------------------------------------------------------------------   01928000
.***AI.L05 XPPTFLAG BL1                                                 01930000
&ZW                   SETC  ''                                          01932000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01934000
.*-------------------------------------------------------------------   01936000
.***AI.L08 XPPTFLAG "RETRIEVE"                                          01938000
.***      BL1'1XXXXXXX'                                                 01940000
         AIF   ('&XREQUEST' NE 'RETRIEVE').ZI5A                         01942000
&ZW                   SETC  '&ZW.1'                                     01944000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01946000
                      AGO   .ZI5C                                       01948000
.*                                                                      01950000
.ZI5A                 ANOP  ,                                           01952000
&ZW                   SETC  '&ZW.0'                                     01954000
.ZI5C                 ANOP  ,                                           01956000
.*-------------------------------------------------------------------   01958000
.***AI.L08 XPPTFLAG "NEXT"                                              01960000
.***      BL1'X1XXXXXX'                                                 01962000
         AIF   ('&XREQUEST' NE 'NEXT').ZI6A                             01964000
&ZW                   SETC  '&ZW.1'                                     01966000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01968000
                      AGO   .ZI6C                                       01970000
.*                                                                      01972000
.ZI6A                 ANOP  ,                                           01974000
&ZW                   SETC  '&ZW.0'                                     01976000
.ZI6C                 ANOP  ,                                           01978000
.*-------------------------------------------------------------------   01980000
.***AI.L08 XPPTFLAG "END"                                               01982000
.***      BL1'XX1XXXXX'                                                 01984000
         AIF   ('&XREQUEST' NE 'END').ZI7A                              01986000
&ZW                   SETC  '&ZW.100000'                                01988000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01990000
                      AGO   .ZI7C                                       01992000
.*                                                                      01994000
.ZI7A                 ANOP  ,                                           01996000
&ZW                   SETC  '&ZW.000000'                                01998000
.ZI7C                 ANOP  ,                                           02000000
.*-------------------------------------------------------------------   02002000
.***AI.L11 XPPTFLAG BL1                                                 02004000
                      AIF   ('&ZCLNG' NE 'YES').ZI7E  ALL ZERO BITS     02006000
&ZOPN                 SETA  &ZOPN+1                                     02008000
&ZOPL(&ZOPN)          SETC  ' '                                         02010000
&ZOPO(&ZOPN)          SETC  'OI'                                        02012000
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             02014000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              02016000
.ZI7E                 ANOP  ,                                           02018000
.*-------------------------------------------------------------------   02020000
.***AI.L18 ADDR XPROGRAM A                                              02022000
                      AIF   ('&XPROGRAM' NE '*').ZI8  CK *              02024000
&ZXPROGRAM            SETC  ''             RESET INPUT/OUTPUT           02026000
.ZI8                  ANOP  ,                                           02028000
.*-------------------------------------------------------------------   02030000
.***AI.L19 ADDR XPROGRAM A                                              02032000
                      AIF   ('&ZXPROGRAM' EQ '').ZI8H  NOT USED         02034000
&ZCLNG                SETC  '&XPROGRAM'                                 02036000
&ZCGPR                SETC  '14'                                        02044000
         AIF   ('&XPROGRAM'(1,1) EQ '(').ZI8F  IN GPR                   02045000
.*                                                                      02046000
&ZOPN                 SETA  &ZOPN+1                                     02048000
&ZOPL(&ZOPN)          SETC  ' '                                         02050000
&ZOPO(&ZOPN)          SETC  'LA'                                        02052000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             02054000
&ZOPD(&ZOPN)          SETC  '++ &ZXPROGRAM XPROGRAM A'                  02056000
.*                                                                      02058000
                      AGO   .ZI8G                                       02060000
.*                                                                      02062000
.ZI8F                 ANOP  ,                                           02063000
&ZCGPR   SETC  '&XPROGRAM'(2,K'&XPROGRAM-2)                             02064000
.*                                                                      02065000
.ZI8G                 ANOP  ,                                           02066000
.*                                                                      02067000
&ZOPN                 SETA  &ZOPN+1                                     02068000
&ZOPL(&ZOPN)          SETC  ' '                                         02070000
&ZOPO(&ZOPN)          SETC  'ST'                                        02096000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              02098000
&ZOPD(&ZOPN)          SETC  '++ &ZXPROGRAM XPROGRAM A'                  02100000
.*                                                                      02102000
.ZI8H                 ANOP  ,                                           02104000
.*-------------------------------------------------------------------   02106000
.***AI.L19 ADDR XTOKEN A                                                02108000
                      AIF   ('&ZXTOKEN' EQ '').ZI9H  NOT USED           02110000
&ZCLNG                SETC  '&XTOKEN'                                   02112000
&ZCGPR                SETC  '14'                                        02118000
         AIF   ('&XTOKEN'(1,1) EQ '(').ZI9F  IN GPR                     02118600
                      AIF   ('&XTOKEN' EQ '0').ZI9H                     02119200
.*                                                                      02120000
.*                                                                      02121000
&ZOPN                 SETA  &ZOPN+1                                     02122000
&ZOPL(&ZOPN)          SETC  ' '                                         02124000
&ZOPO(&ZOPN)          SETC  'LA'                                        02126000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             02128000
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN A'                      02130000
.*                                                                      02132000
                      AGO   .ZI9G                                       02134000
.*                                                                      02136000
.ZI9F                 ANOP  ,                                           02138000
&ZCGPR   SETC  '&XTOKEN'(2,K'&XTOKEN-2)                                 02140000
.*                                                                      02142000
.ZI9G                 ANOP  ,                                           02143300
.*                                                                      02144600
&ZOPN                 SETA  &ZOPN+1                                     02146000
&ZOPL(&ZOPN)          SETC  ' '                                         02148000
&ZOPO(&ZOPN)          SETC  'ST'                                        02150000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             02152000
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN A'                      02154000
.*                                                                      02156000
.ZI9H                 ANOP  ,                                           02158000
.*-------------------------------------------------------------------   02160000
.***AI.L18 ADDR XPPTINFO A                                              02162000
                      AIF   ('&XPPTINFO' NE '*').ZI10  CK *             02164000
&ZXPPTINFO            SETC  ''             RESET INPUT/OUTPUT           02166000
.ZI10                 ANOP  ,                                           02168000
.*-------------------------------------------------------------------   02170000
.***AI.L19 ADDR XPPTINFO A                                              02172000
                      AIF   ('&ZXPPTINFO' EQ '').ZI10H  NOT USED        02174000
&ZCLNG                SETC  '&XPPTINFO'                                 02176000
&ZCGPR                SETC  '14'                                        02184000
         AIF   ('&XPPTINFO'(1,1) EQ '(').ZI10F  IN GPR                  02185000
.*                                                                      02186000
&ZOPN                 SETA  &ZOPN+1                                     02188000
&ZOPL(&ZOPN)          SETC  ' '                                         02190000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    02192000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             02194000
&ZOPD(&ZOPN)          SETC  '++ &ZXPPTINFO XPPTINFO A'                  02196000
.*                                                                      02198000
                      AGO   .ZI10G                                      02200000
.*                                                                      02202000
.ZI10F                ANOP  ,                                           02203000
&ZCGPR   SETC  '&XPPTINFO'(2,K'&XPPTINFO-2)                             02204000
.*                                                                      02205000
.ZI10G                ANOP  ,                                           02206000
.*                                                                      02207000
&ZOPN                 SETA  &ZOPN+1                                     02208000
&ZOPL(&ZOPN)          SETC  ' '                                         02210000
&ZOPO(&ZOPN)          SETC  'ST'                                        02236000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                             02238000
&ZOPD(&ZOPN)          SETC  '++ &ZXPPTINFO XPPTINFO A'                  02240000
.*                                                                      02242000
.ZI10H                ANOP  ,                                           02244000
.*-------------------------------------------------------------------   02246000
&ZOPN1                SETA &ZOPN                                        02248000
.*******************************************************************    02326000
.***  PROCESS IEFPPSCN OUTPUT PARAMETERS                                02328000
.*******************************************************************    02330000
                      ACTR  10000                                       02332000
.*******************************************************************    02334000
.***AO.X02  RETURN CODE PROCESSING                                      02336000
.*******************************************************************    02338000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    02340000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            02342000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             02344000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             02346000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               02348000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                02350000
&ZOPN                 SETA  &ZOPN+1                                     02352000
&ZOPL(&ZOPN)          SETC  ' '                                         02354000
&ZOPO(&ZOPN)          SETC  'ST'                                        02356000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              02358000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        02360000
                      AGO   .ZMRETX                                     02362000
.*                                                                      02364000
.ZMRET2               ANOP  ,                                           02366000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                02368000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                02370000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                02372000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  02374000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   02376000
&ZOPN                 SETA  &ZOPN+1                                     02378000
&ZOPL(&ZOPN)          SETC  ' '                                         02380000
&ZOPO(&ZOPN)          SETC  'LR'                                        02382000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 02384000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        02386000
.ZMRETX               ANOP  ,                                           02388000
.*******************************************************************    02390000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   02392000
.*******************************************************************    02394000
.ZMFLX                ANOP  ,              MF=L PROCESSING              02396000
.*******************************************************************    02398000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               02400000
.*******************************************************************    02402000
                      ACTR  10000                                       02404000
.*                                                                      02406000
                      LCLA  &ZLC           COLUMN POSITION              02408000
                      LCLA  &ZOPX          LIST TABLE INDEX             02410000
                      LCLC  &ZLL           LABEL                        02412000
                      LCLC  &ZLOP          OPERATION                    02414000
                      LCLC  &ZLV           VALUE                        02416000
                      LCLC  &ZLD           DESCRIPTION                  02418000
.*                                                                      02420000
&ZOPX                 SETA  1                                           02422000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            02424000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              02426000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              02428000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              02430000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              02432000
                      AIF   (K'&ZLD LE 0).ZL5                           02434000
&ZLC                  SETA  35             COMMENT COLUMN               02436000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    02438000
&ZLC                  SETA  33             COMMMENT COLUMN              02440000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   02442000
&ZLV                  SETC  '&ZLV'.' '                                  02444000
                      AGO   .ZL3                                        02446000
.*                                                                      02448000
.ZL4                  ANOP  ,                                           02450000
&ZLV                  SETC  '&ZLV'.' '                                  02452000
.ZL5                  ANOP  ,                                           02454000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               02456000
.*                                                                      02458000
&ZLL     &ZLOP &ZLV                                                     02460000
.*                                                                      02462000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               02464000
                      AGO   .ZL2           CONTINUE LOOPING             02466000
.*                                                                      02468000
.ZLX                  ANOP  ,                                           02470000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                02470200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  02470400
         L     15,16(0)                 CVT address                     02470600
         L     15,CVTJESCT-CVT(,15)     JESCT address                   02470800
         L     15,JESCTEXT-JESCT(,15)   JESCT ext. address              02471000
         L     15,JESPPTSC-JESPEXT(,15) PPT scan rtn. address           02471200
         BASSM 14,15                    Call PPT scan routine           02471400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  02471600
.ZLINKX               ANOP  ,                                           02471800
.*******************************************************************    02472000
.***AP.X01  FORMAT GENERATED CODE                                       02474000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            02476000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              02478000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              02480000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              02482000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              02484000
                      AIF   (K'&ZLD LE 0).ZL51                          02486000
&ZLC                  SETA  35             COMMENT COLUMN               02488000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   02490000
&ZLC                  SETA  33             COMMENT COLUMN               02492000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  02494000
&ZLV                  SETC  '&ZLV'.' '                                  02496000
                      AGO   .ZL31                                       02498000
.*                                                                      02500000
.ZL41                 ANOP  ,                                           02502000
&ZLV                  SETC  '&ZLV'.' '                                  02504000
.ZL51                 ANOP  ,                                           02506000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               02508000
.*                                                                      02510000
&ZLL     &ZLOP &ZLV                                                     02512000
.*                                                                      02514000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               02516000
                      AGO   .ZL21          CONTINUE LOOPING             02518000
.*                                                                      02520000
.ZLX1                 ANOP  ,                                           02522000
.*******************************************************************    02524000
.***AP.X02  END OF IEFPPSCN MACRO                                       02526000
&ZIEFPPSCN            SETC  'YES'          SET IEFPPSCN USED            02528000
         POP   PRINT                                                    02530000
*                                            IEFPPSCN-0                 02532000
         SPACE 1                                                        02534000
.ZLX2                 ANOP  ,                                           02536000
         MEND                                                           02538000
**********************************************************************/ 02540000
*/**** START OF SPECIFICATIONS **************************************** 02542000
*                                                                     * 02544000
*01* MACRO NAME:  IEFPPSCN                              -89/10/10-<0> * 02546000
*                                                                     * 02548000
*01* DESCRIPTIVE NAME:  Program Properties Table scan                 * 02550000
*                                                                     * 02552000
*01* COPYRIGHT:                                                       * 02554000
*                                                                     * 02556000
*    5695-047                                                         * 02558000
*    THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      * 02560000
*    (C) COPYRIGHT IBM CORP. 1991                                     * 02562000
*    LICENSED MATERIALS - PROPERTY OF IBM                             * 02564000
*                                                                     * 02566000
*01* STATUS: HBB4420                                                  * 02568000
*                                                                     * 02570000
*01* FUNCTION:                                                        * 02572000
*       See the IEFPPSCN macro prologue for details.                  * 02574000
*                                                                     * 02576000
*01* INPUT:                                                           * 02578000
*                                                                     * 02580000
*            ?IEFPPSCN     REQUEST(RETRIEVE|NEXT|                    * 02581300
*                                   END)                             * 02582600
*                         [PPTINFO(xpptinfo|*)]                     * 02584000
*                         [PROGRAM(xprogram|*)]                     * 02586000
*                         [TOKEN(xtoken|0)]                         * 02588000
*                         [RETCODE(xretcode)]                         * 02590000
*                        [MF(S)]                                     * 02592000
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 02594000
*                        [MF(E,xmfctrl,COMPLETE)]                  * 02596000
*                                                                     * 02598000
*                                                                     * 02600000
****** END OF SPECIFICATIONS *****************************************/ 02602000
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 02604000
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                02606000
*  ANS('/*++ ? IEFPPSCN '||MACLIST||' ')                                02608000
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     02610000
*                                                                       02612000
*  DCL ZELO  FIXED;                                                     02614000
*  DCL ZECOL FIXED;                                                     02616000
*                                                                       02618000
*  ZELO=1;     /* STARTING COLUMN */                                    02620000
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               02622000
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    02624000
*    IF ZECOL>0                                                         02626000
*      THEN                                                             02628000
*        DO;   /* PARENTHESIS FOUND */                                  02630000
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         02632000
*             NORESCAN COL(MACLMAR+5);                                  02634000
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   02636000
*        END;                                                           02638000
*      ELSE                                                             02640000
*        DO;   /* REMAINING KEYS */                                     02642000
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           02644000
*             NORESCAN COL(MACLMAR+5);                                  02646000
*          ZELO=LENGTH(MACKEYS)+1;                                      02648000
*        END;                                                           02650000
*  END;                                                                 02652000
*  ANS(' -89/10/10-0- */')                                              02654000
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       02656000
*/********************************************************************/ 02658000
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 02660000
*/********************************************************************/ 02662000
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 02664000
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 02666000
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 02668000
*                                                                       02670000
*  DCL   ZIEFPPSCN CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 02672000
*  DEACT ZIEFPPSCN;                                                     02674000
*                                                                       02676000
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    02678000
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 02680000
*                                                                       02682000
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 02684000
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 02686000
*                                                                       02688000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 02690000
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 02692000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 02694000
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 02696000
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 02698000
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 02700000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 02702000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 02704000
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 02706000
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 02708000
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 02710000
*                                                                       02712000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 02714000
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 02716000
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 02718000
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 02720000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 02722000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 02724000
*/*******************************************************************/  02726000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  02728000
*/*******************************************************************/  02730000
*  DCL XREQUEST;  DEACT XREQUEST;  /***PV.XVAR02 INPUT VALUE */         02732000
*  DCL ZXREQUEST; DEACT ZXREQUEST;  /***INPUT/OUTPUT CONTROL */         02734000
*  DCL XPPTINFO;  DEACT XPPTINFO;  /***PV.XVAR02 INOUT NAME */          02736000
*  DCL ZXPPTINFO; DEACT ZXPPTINFO;  /***INPUT/OUTPUT CONTROL */         02738000
*  DCL XPROGRAM;  DEACT XPROGRAM;  /***PV.XVAR02 INPUT NAME */          02740000
*  DCL ZXPROGRAM; DEACT ZXPROGRAM;  /***INPUT/OUTPUT CONTROL */         02742000
*  DCL XTOKEN;  DEACT XTOKEN;      /***PV.XVAR02 INOUT NAME */          02744000
*  DCL ZXTOKEN; DEACT ZXTOKEN;     /***INPUT/OUTPUT CONTROL */          02746000
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         02748000
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         02750000
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         02752000
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          02754000
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          02756000
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          02758000
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         02760000
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          02762000
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         02764000
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          02766000
*/********************************************************************/ 02768000
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 02770000
*/********************************************************************/ 02772000
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02774000
*  XMF='';                                                              02776000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02778000
*  IF MF(1)='S'                              /* CHECK FOR KEYWORD */    02780000
*    THEN                                                               02782000
*      DO;                                                              02784000
*        XMF='S';                            /* SET XVARIABLE */        02786000
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    02788000
*          THEN                                                         02790000
*            DO;                                                        02792000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            02794000
*                  MF||                                                 02796000
*                  '" "MF"'||                                           02798000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02800000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         02802000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02804000
*              ZMACRET=8;                    /* MACRO ERROR */          02806000
*            END;                                                       02808000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02810000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02812000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02814000
*  IF MF(1)='L'                              /* CHECK FOR KEYWORD */    02816000
*    THEN                                                               02818000
*      DO;                                                              02820000
*        XMF='L';                            /* SET XVARIABLE */        02822000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    02824000
*          THEN                                                         02826000
*            DO;                                                        02828000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            02830000
*                  MF||                                                 02832000
*                  '" "MF"'||                                           02834000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       02836000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         02838000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02840000
*              ZMACRET=8;                    /* MACRO ERROR */          02842000
*            END;                                                       02844000
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 02846000
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 02848000
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            02850000
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 02852000
*          THEN                                                         02854000
*            DO;                                                        02856000
*              ZMS=' 8, THE "L" FORM OF "MF" CANNOT'|| /**MFLP* MSG*/   02858000
*                  ' HAVE ANY OTHER KEYWORDS OR'||                      02860000
*                  ' POSITIONAL PARAMETERS SPECIFIED'||                 02862000
*                  ' ON THE INVOCATION.';                               02864000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         02866000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02868000
*              ZMACRET=8;                    /* MACRO ERROR */          02870000
*            END;                                                       02872000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 02874000
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        02876000
*  IF MF(2)=''                               /* CHECK FOR NULL */       02878000
*   THEN                                                                02880000
*    DO;                                     /* KEY IS REQUIRED */      02882000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      02884000
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              02886000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          02888000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            02890000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               02892000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02894000
*        ZMACRET=8;                          /* MACRO ERROR */          02896000
*    END;                                                               02898000
*    ELSE                                                               02900000
*     ZXMFCTRL='INPUT';                      /* SET IN/OUTPUT */        02902000
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 02904000
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        02906000
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          02908000
*  IF MF(3)^=''                              /* CHECK FOR NULL */       02910000
*    THEN                                                               02912000
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        02914000
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 02916000
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        02918000
*     LENGTH(XMFATTR)>60                                                02920000
*    THEN                                                               02922000
*      DO;                                                              02924000
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      02926000
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            02928000
*            MF||                                                       02930000
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       02932000
*            ' LENGTH OF 60 CHARACTERS. ';                              02934000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               02936000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02938000
*        ZMACRET=8;                          /* MACRO ERROR */          02940000
*      END;                                                             02942000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02944000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02946000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02948000
*  IF MF(1)='E'                              /* CHECK FOR KEYWORD */    02950000
*    THEN                                                               02952000
*      DO;                                                              02954000
*        XMF='E';                            /* SET XVARIABLE */        02956000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    02958000
*          THEN                                                         02960000
*            DO;                                                        02962000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            02964000
*                  MF||                                                 02966000
*                  '" "MF"'||                                           02968000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       02970000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         02972000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02974000
*              ZMACRET=8;                    /* MACRO ERROR */          02976000
*            END;                                                       02978000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 02980000
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        02982000
*  IF MF(2)=''                               /* CHECK FOR NULL */       02984000
*   THEN                                                                02986000
*    DO;                                     /* KEY IS REQUIRED */      02988000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      02990000
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              02992000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          02994000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            02996000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               02998000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03000000
*        ZMACRET=8;                          /* MACRO ERROR */          03002000
*    END;                                                               03004000
*    ELSE                                                               03006000
*     ZXMFCTRL='INPUT';                      /* SET IN/OUTPUT */        03008000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03010000
*  XMFSCK='';                                /* RESET XVARIABLE */      03012000
*  IF MF(3) = 'COMPLETE'                                                03014000
*    THEN                                                               03016000
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        03018000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03020000
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        03022000
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    03024000
*    THEN                                                               03026000
*      DO;                                   /* KEYWORD NOT ENTERED */  03028000
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          03030000
*        IF MF(3)^=''                                                   03032000
*          THEN                                                         03034000
*            DO;                                                        03036000
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      03038000
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            03040000
*                  MF||'"'||                                            03042000
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              03044000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    03046000
*                  ' "COMPLETE".';           /* VALID KEYWORD */        03048000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         03050000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          03052000
*              ZMACRET=8;                    /* MACRO ERROR */          03054000
*            END;                                                       03056000
*      END;                                                             03058000
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 03060000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     03062000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 03064000
*  IF MF='MF' | MF='()'                      /*CHECK ENTRY*/            03066000
*     THEN                                                              03068000
*       DO;                                                             03070000
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            03072000
*                  ' MUST CONTAIN ONE'||                                03074000
*                  ' (OR MORE) ARGUMENT(S).';                           03076000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         03078000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          03080000
*              ZMACRET=8;                    /* MACRO ERROR */          03082000
*       END;                                                            03084000
*  ELSE                                                                 03086000
*    DO;                                                                03088000
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        03090000
*      IF XMF=''                             /* CHECK FOR KEYWORD */    03092000
*        THEN                                                           03094000
*          DO;                               /* KEYWORD NOT ENTERED */  03096000
*            XMF='S';                        /* SET DEFAULT */          03098000
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    03100000
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    03102000
*              THEN                                                     03104000
*                DO;                                                    03106000
*                  ZXMF='';                  /* RESET IN/OUTPUT */      03108000
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            03110000
*                  MF||'"'||                                            03112000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              03114000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    03116000
*                  ' "S",'||                 /* VALID KEYWORD */        03118000
*                  ' "L",'||                 /* VALID KEYWORD */        03120000
*                  ' OR "E".';               /* VALID KEYWORD */        03122000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         03124000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          03126000
*              ZMACRET=8;                    /* MACRO ERROR */          03128000
*                END;                                                   03130000
*          END;                                                         03132000
*    END;                                                               03134000
*/********************************************************************/ 03136000
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 03138000
*/********************************************************************/ 03140000
*  ZC='OFF';                                 /* DEFAULT FLAG OFF */     03142000
*/********************************************************************/ 03144000
*/***PD.P02 DEFAULT ECHO                                             */ 03146000
*/********************************************************************/ 03148000
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 03150000
*  IF XMF^='L'                                                          03152000
*    THEN                                                               03154000
*      DO;                                   /* FULL SYNTAX CHECK */    03156000
*        ANS('/*DEFAULT(S): */')                                        03158000
*           NORESCAN COL(MACLMAR+5);                                    03160000
*/*PD.KXVAR01 NAME, OPT INOUT, KEYS -XVARIABLE-----------------------*/ 03162000
*  XPPTINFO='';                                                         03164000
*  IF PPTINFO(1)=''                                                     03166000
*    THEN                                                               03168000
*      DO;                                                              03170000
*        XPPTINFO='*';                       /* SET DEFAULT */          03172000
*        ZC='ON';                            /* DEFAULT FLAG ON */      03174000
*      END;                                                             03176000
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 03178000
*  IF XPPTINFO^=''                                                      03180000
*    THEN                                                               03182000
*      ANS('/* PPTINFO('||                                              03184000
*          XPPTINFO||                                                   03186000
*          ')*/')                                                       03188000
*          NORESCAN COL(MACLMAR+5);                                     03190000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 03192000
*  XPROGRAM='';                                                         03194000
*  IF PROGRAM(1)=''                                                     03196000
*    THEN                                                               03198000
*      DO;                                                              03200000
*        XPROGRAM='*';                       /* SET DEFAULT */          03202000
*        ZC='ON';                            /* DEFAULT FLAG ON */      03204000
*      END;                                                             03206000
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 03208000
*  IF XPROGRAM^=''                                                      03210000
*    THEN                                                               03212000
*      ANS('/* PROGRAM('||                                              03214000
*          XPROGRAM||                                                   03216000
*          ')*/')                                                       03218000
*          NORESCAN COL(MACLMAR+5);                                     03220000
*/*PD.KXVAR01 NAME, OPT INOUT, KEYS -XVARIABLE-----------------------*/ 03222000
*  XTOKEN='';                                                           03224000
*  IF TOKEN(1)=''                                                       03226000
*    THEN                                                               03228000
*      DO;                                                              03230000
*        XTOKEN='0';                         /* SET DEFAULT */          03232000
*        ZC='ON';                            /* DEFAULT FLAG ON */      03234000
*      END;                                                             03236000
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 03238000
*  IF XTOKEN^=''                                                        03240000
*    THEN                                                               03242000
*      ANS('/* TOKEN('||                                                03244000
*          XTOKEN||                                                     03246000
*          ')*/')                                                       03248000
*          NORESCAN COL(MACLMAR+5);                                     03250000
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     03252000
*    THEN                                                               03254000
*      ANS('/* NONE. */')                                               03256000
*         NORESCAN COL(MACLMAR+5);                                      03258000
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 03260000
*      END;                                                             03262000
*/********************************************************************/ 03264000
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 03266000
*/********************************************************************/ 03268000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 03270000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        03272000
*                                                                       03274000
*  IF SYSASCE=''                                                        03276000
*    THEN                                                               03278000
*      DO;                                                              03280000
*        IF SYSSPLV=''                                                  03282000
*          THEN                                                         03284000
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     03286000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 03288000
*          THEN                                                         03290000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     03292000
*          ELSE                                                         03294000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      03296000
*      END;                                                             03298000
*/********************************************************************/ 03300000
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 03302000
*/********************************************************************/ 03304000
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 03306000
*  IF XMF^='L'                                                          03308000
*    THEN                                                               03310000
*      DO;                                   /* FULL SYNTAX CHECK */    03312000
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 03314000
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    03316000
*    THEN                                                               03318000
*      DO;                                                              03320000
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            03322000
*            ' "'||MACLIST||'"'||                                       03324000
*            ' CANNOT BE USED.'||                                       03326000
*            ' NO POSITIONAL ARGUMENTS'||                               03328000
*            ' ARE ALLOWED.';                                           03330000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03332000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03334000
*        ZMACRET=8;                          /* MACRO ERROR */          03336000
*      END;                                                             03338000
*/*PG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03340000
*  IF NUMBER(REQUEST)>1                      /* CHECK POSITIONALS */    03342000
*    THEN                                                               03344000
*      DO;                                                              03346000
*        ZMS=' 8, "REQUEST'||                /**KPOSP* MSG*/            03348000
*            REQUEST||                                                  03350000
*            '" "REQUEST"'||                                            03352000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              03354000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03356000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03358000
*        ZMACRET=8;                          /* MACRO ERROR */          03360000
*      END;                                                             03362000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03364000
*  XREQUEST='';                              /* RESET XVARIABLE */      03366000
*  IF REQUEST(1) = 'RETRIEVE'                                           03368000
*    THEN                                                               03370000
*      XREQUEST = 'RETRIEVE';                /* SET XVARIABLE */        03372000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03374000
*  IF REQUEST(1) = 'NEXT'                                               03376000
*    THEN                                                               03378000
*      XREQUEST = 'NEXT';                    /* SET XVARIABLE */        03380000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03382000
*  IF REQUEST(1) = 'END'                                                03384000
*    THEN                                                               03386000
*      XREQUEST = 'END';                     /* SET XVARIABLE */        03388000
*/*PG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03390000
*  ZXREQUEST='INPUT';                        /* SET IN/OUTPUT */        03392000
*  IF XREQUEST=''                            /* CHECK FOR KEYWORD */    03394000
*    THEN                                                               03396000
*      DO;                                   /* KEYWORD NOT ENTERED */  03398000
*        XREQUEST='RETRIEVE';                /* SET DEFAULT */          03400000
*        IF REQUEST(1)^=''                                              03402000
*          THEN                                                         03404000
*            DO;                                                        03406000
*              ZXREQUEST='';                 /* RESET IN/OUTPUT */      03408000
*              ZMS=' 8, "REQUEST'||          /**KUKWP* MSG*/            03410000
*                  REQUEST||'"'||                                       03412000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              03414000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    03416000
*                  ' "RETRIEVE",'||          /* VALID KEYWORD */        03418000
*                  ' "NEXT",'||              /* VALID KEYWORD */        03420000
*                  ' OR "END".';             /* VALID KEYWORD */        03422000
*              ANS MSG('?IEFPPSCN ---> '||ZMS);                         03424000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          03426000
*              ZMACRET=8;                    /* MACRO ERROR */          03428000
*            END;                                                       03430000
*      END;                                                             03432000
*/*PG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 03434000
*  IF REQUEST(1)=''                          /* CHECK FOR KEYWORD */    03436000
*    THEN                                                               03438000
*      DO;                                   /* KEYWORD NOT ENTERED */  03440000
*        ZXREQUEST='';                       /* RESET IN/OUTPUT */      03442000
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            03444000
*            ' "REQUEST" KEY AND ITS ARGUMENT ARE'||                    03446000
*            ' REQUIRED.'||                                             03448000
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          03450000
*            ' "RETRIEVE",'||                /* VALID KEYWORD */        03452000
*            ' "NEXT",'||                    /* VALID KEYWORD */        03454000
*            ' OR "END".';                   /* VALID KEYWORD */        03456000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03458000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03460000
*        ZMACRET=8;                          /* MACRO ERROR */          03462000
*      END;                                                             03464000
*/*PG.KXVAR01 NAME, OPT INOUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 03466000
*  IF PPTINFO='PPTINFO' | PPTINFO='()'       /*CHECK ENTRY*/            03468000
*    THEN                                                               03470000
*      DO;                                                              03472000
*        ZMS=' 8, THE "PPTINFO" KEY'||       /**KOPTP* MSG*/            03474000
*            ' MUST CONTAIN ONE'||                                      03476000
*            ' (OR MORE) ARGUMENT(S).';                                 03478000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03480000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03482000
*        ZMACRET=8;                          /* MACRO ERROR */          03484000
*      END;                                                             03486000
*  IF NUMBER(PPTINFO)>1                      /* CHECK POSITIONALS */    03488000
*    THEN                                                               03490000
*      DO;                                                              03492000
*        ZMS=' 8, "PPTINFO'||                /**KPOSP* MSG*/            03494000
*            PPTINFO||                                                  03496000
*            '" "PPTINFO"'||                                            03498000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              03500000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03502000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03504000
*        ZMACRET=8;                          /* MACRO ERROR */          03506000
*      END;                                                             03508000
*/*PG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE-----------------------*/ 03510000
*  ZXPPTINFO='INOUT';                        /* SET IN/OUTPUT */        03512000
*  XPPTINFO='*';                             /* SET DEFAULT */          03514000
*  IF PPTINFO(1)^=''                         /* CHECK FOR NULL */       03516000
*    THEN                                                               03518000
*      XPPTINFO=PPTINFO(1);                  /* SET XVARIABLE */        03520000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 03522000
*  IF PROGRAM='PROGRAM' | PROGRAM='()'       /*CHECK ENTRY*/            03524000
*    THEN                                                               03526000
*      DO;                                                              03528000
*        ZMS=' 8, THE "PROGRAM" KEY'||       /**KOPTP* MSG*/            03530000
*            ' MUST CONTAIN ONE'||                                      03532000
*            ' (OR MORE) ARGUMENT(S).';                                 03534000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03536000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03538000
*        ZMACRET=8;                          /* MACRO ERROR */          03540000
*      END;                                                             03542000
*  IF NUMBER(PROGRAM)>1                      /* CHECK POSITIONALS */    03544000
*    THEN                                                               03546000
*      DO;                                                              03548000
*        ZMS=' 8, "PROGRAM'||                /**KPOSP* MSG*/            03550000
*            PROGRAM||                                                  03552000
*            '" "PROGRAM"'||                                            03554000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              03556000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03558000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03560000
*        ZMACRET=8;                          /* MACRO ERROR */          03562000
*      END;                                                             03564000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 03566000
*  ZXPROGRAM='INPUT';                        /* SET IN/OUTPUT */        03568000
*  XPROGRAM='*';                             /* SET DEFAULT */          03570000
*  IF PROGRAM(1)^=''                         /* CHECK FOR NULL */       03572000
*    THEN                                                               03574000
*      XPROGRAM=PROGRAM(1);                  /* SET XVARIABLE */        03576000
*/*PG.KXVAR01 NAME, OPT INOUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 03578000
*  IF TOKEN='TOKEN' | TOKEN='()'             /*CHECK ENTRY*/            03580000
*    THEN                                                               03582000
*      DO;                                                              03584000
*        ZMS=' 8, THE "TOKEN" KEY'||         /**KOPTP* MSG*/            03586000
*            ' MUST CONTAIN ONE'||                                      03588000
*            ' (OR MORE) ARGUMENT(S).';                                 03590000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03592000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03594000
*        ZMACRET=8;                          /* MACRO ERROR */          03596000
*      END;                                                             03598000
*  IF NUMBER(TOKEN)>1                        /* CHECK POSITIONALS */    03600000
*    THEN                                                               03602000
*      DO;                                                              03604000
*        ZMS=' 8, "TOKEN'||                  /**KPOSP* MSG*/            03606000
*            TOKEN||                                                    03608000
*            '" "TOKEN"'||                                              03610000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              03612000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03614000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03616000
*        ZMACRET=8;                          /* MACRO ERROR */          03618000
*      END;                                                             03620000
*/*PG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE-----------------------*/ 03622000
*  ZXTOKEN='INOUT';                          /* SET IN/OUTPUT */        03624000
*  XTOKEN='0';                               /* SET DEFAULT */          03626000
*  IF TOKEN(1)^=''                           /* CHECK FOR NULL */       03628000
*    THEN                                                               03630000
*      XTOKEN=TOKEN(1);                      /* SET XVARIABLE */        03632000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 03634000
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            03636000
*    THEN                                                               03638000
*      DO;                                                              03640000
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            03642000
*            ' MUST CONTAIN ONE'||                                      03644000
*            ' (OR MORE) ARGUMENT(S).';                                 03646000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03648000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03650000
*        ZMACRET=8;                          /* MACRO ERROR */          03652000
*      END;                                                             03654000
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    03656000
*    THEN                                                               03658000
*      DO;                                                              03660000
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            03662000
*            RETCODE||                                                  03664000
*            '" "RETCODE"'||                                            03666000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              03668000
*        ANS MSG('?IEFPPSCN ---> '||ZMS);                               03670000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                03672000
*        ZMACRET=8;                          /* MACRO ERROR */          03674000
*      END;                                                             03676000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 03678000
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       03680000
*    THEN                                                               03682000
*      DO;                                                              03684000
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        03686000
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           03688000
*      END;                                                             03690000
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 03692000
*      END;                                  /* END COMPLETE CHECKING*/ 03694000
*/********************************************************************/ 03696000
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 03698000
*/********************************************************************/ 03700000
*  IF ZMACRET = 0                                                       03702000
*    THEN                                                               03704000
*      DO;                                                              03706000
*/********************************************************************/ 03714000
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 03716000
*/********************************************************************/ 03718000
*  ANS(MACCONC||'LIST PUSH;') NORESCAN COL(MACLMAR);                    03719000
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         03720000
*    THEN                                                               03722000
*      ANS(MACCONC||'LIST OFF;') NORESCAN COL(MACLMAR);                 03724000
*    ELSE                                                               03724500
*      ANS(MACCONC||'LIST ON;')  NORESCAN COL(MACLMAR);                 03725000
*/********************************************************************/ 03725500
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 03726000
*  IF MF(1)^='L'                                                        03728000
*    THEN                                                               03730000
*      ANS('DO; /*++ IEFPPSCN-0 */')                                    03732000
*          NORESCAN COL(MACLMAR);                                       03734000
*/*PL.LL01 ?IEFPPSCN MF=L PARAMETER LIST-----------------------------*/ 03736000
*  IF XMF='L'                                                           03738000
*    THEN                                                               03740000
*      DO;                                                              03742000
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    03744000
*            '/*++ ?IEFPPSCN PARM LIST*/')                              03746000
*            NORESCAN COL(MACLMAR);                                     03748000
*/*PL.LL13  XPPSCID CHAR(4) CONSTANT---------------------------------*/ 03750000
*        ANS('2 '||XMFCTRL||                                            03752000
*            '_XPPSCID CHAR(4), '||                                     03754000
*            '/*++ '||ZXPPSCID||' XPPSCID */')                          03756000
*            NORESCAN COL(MACLMAR+2);                                   03758000
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 03760000
*        ANS('2 '||XMFCTRL||                                            03762000
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       03764000
*            '/*++ INPUT XPLISTLEN*/')                                  03766000
*            NORESCAN COL(MACLMAR+2);                                   03768000
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 03770000
*        ANS('2 '||XMFCTRL||                                            03772000
*            '_XVERSION FIXED(8), '||                                   03774000
*            '/*++ INPUT XVERSION*/')                                   03776000
*            NORESCAN COL(MACLMAR+2);                                   03778000
*/*PL.LL04  XPPTFLAG BIT(8) FIELD_LABEL------------------------------*/ 03780000
*        ANS('2 '||XMFCTRL||                                            03782000
*            '_XPPTFLAG BIT(8), '||                                     03784000
*            '/*++ FIELD_LABEL */')                                     03786000
*            NORESCAN COL(MACLMAR+2);                                   03788000
*/*PL.LL09 BIT 1XXXXXXX----------------------------------------------*/ 03790000
*          ANS('3 '||XMFCTRL||                                          03792000
*              '_XREQUEST_RETRIEVE BIT(1), '||                          03794000
*              '/*++ BIT */')                                           03796000
*              NORESCAN COL(MACLMAR+2);                                 03798000
*/*PL.LL09 BIT X1XXXXXX----------------------------------------------*/ 03800000
*          ANS('3 '||XMFCTRL||                                          03802000
*              '_XREQUEST_NEXT BIT(1), '||                              03804000
*              '/*++ BIT */')                                           03806000
*              NORESCAN COL(MACLMAR+2);                                 03808000
*/*PL.LL09 BIT XX1XXXXX----------------------------------------------*/ 03810000
*          ANS('3 '||XMFCTRL||                                          03812000
*              '_XREQUEST_END BIT(1), '||                               03814000
*              '/*++ BIT */')                                           03816000
*              NORESCAN COL(MACLMAR+2);                                 03818000
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 03820000
*          ANS('3 '||XMFCTRL||                                          03821500
*              '_XPPTFLAG_RSVD1 BIT(5), '||                             03823000
*              '/*++ BIT */')                                           03824500
*              NORESCAN COL(MACLMAR+2);                                 03826000
*/*PL.LL13 ADDR XPROGRAM PTR(31) INPUT ADDR--------------------------*/ 03860000
*        ANS('2 '||XMFCTRL||                                            03862000
*            '_XPROGRAM_ADDR PTR(31), '||                               03864000
*            '/*++ '||ZXPROGRAM_ADDR||' XPROGRAM_ADDR */')              03866000
*            NORESCAN COL(MACLMAR+2);                                   03868000
*/*PL.LL13 ADDR XTOKEN PTR(31) INOUT ADDR----------------------------*/ 03870000
*        ANS('2 '||XMFCTRL||                                            03872000
*            '_XTOKEN_ADDR PTR(31), '||                                 03874000
*            '/*++ '||ZXTOKEN_ADDR||' XTOKEN_ADDR */')                  03876000
*            NORESCAN COL(MACLMAR+2);                                   03878000
*/*PL.LL13 ADDR XPPTINFO PTR(31) INOUT ADDR--------------------------*/ 03880000
*        ANS('2 '||XMFCTRL||                                            03882000
*            '_XPPTINFO_ADDR PTR(31), '||                               03884000
*            '/*++ '||ZXPPTINFO_ADDR||' XPPTINFO_ADDR */')              03886000
*            NORESCAN COL(MACLMAR+2);                                   03888000
*/*PL.LL18 ----------------------------------------------------------*/ 03890000
*        ANS('2 * CHAR(0);')                                            03892000
*            NORESCAN COL(MACLMAR+2);                                   03894000
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 03896000
*      END;                                                             03898000
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 03900000
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  03902000
*  DEACT ZPRMLINE;                                                      03904000
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  03906000
*  DEACT ZNDX;                                                          03908000
*  ZNDX=MACINDEX(2:4);         /* MACINDEX LAST THREE DIGITS        */  03910000
*  DCL XVERSION CHAR;                                                   03912000
*  DEACT XVERSION;                                                      03914000
*/*PL.L02 ?IEFPPSCN PARAMETER LIST-----------------------------------*/ 03916000
*  IF XMF^='L'                                                          03918000
*    THEN                                                               03920000
*      DO;                                                              03922000
*/*PL.L03 ?IEFPPSCN PARAMETER LIST-----------------------------------*/ 03924000
*        IF XMF='S'                                                     03926000
*          THEN                                                         03928000
*            XMFCTRL='#ZPLIST';                                         03930000
*/*PL.L04 ?IEFPPSCN PARAMETER LIST-----------------------------------*/ 03932000
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            03934000
*                 ' /*++ ?IEFPPSCN PARM LIST*/';                        03936000
*/*PL.L08  XPPSCID CHAR(4) CONSTANT----------------------------------*/ 03938000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03940000
*                 '_XPPSCID CHAR(4), '||                                03942000
*                 '/*++ '||ZXPPSCID||' XPPSCID */';                     03944000
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 03946000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03948000
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  03950000
*                 '/*++ INPUT XPLISTLEN*/';                             03952000
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 03954000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03956000
*                 '_XVERSION FIXED(8), '||                              03958000
*                 '/*++ INPUT XVERSION*/';                              03960000
*/*PL.L08  XPPTFLAG BIT(8) FIELD_LABEL-------------------------------*/ 03962000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03964000
*                 '_XPPTFLAG BIT(8), '||                                03966000
*                 '/*++ FIELD_LABEL */';                                03968000
*/*PL.L08 ADDR XPROGRAM PTR(31) INPUT ADDR---------------------------*/ 03970000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03972000
*                 '_XPROGRAM_ADDR PTR(31), '||                          03974000
*                 '/*++ '||ZXPROGRAM_ADDR||' XPROGRAM_ADDR */';         03976000
*/*PL.L08 ADDR XTOKEN PTR(31) INOUT ADDR-----------------------------*/ 03978000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03980000
*                 '_XTOKEN_ADDR PTR(31), '||                            03982000
*                 '/*++ '||ZXTOKEN_ADDR||' XTOKEN_ADDR */';             03984000
*/*PL.L08 ADDR XPPTINFO PTR(31) INOUT ADDR---------------------------*/ 03986000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03988000
*                 '_XPPTINFO_ADDR PTR(31), '||                          03990000
*                 '/*++ '||ZXPPTINFO_ADDR||' XPPTINFO_ADDR */';         03992000
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 03994000
*        ZPRMNUM=ZPRMNUM+1;                                             03996000
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       03998000
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 04000000
*        ZPLLEN=20;                                                     04002000
*        IF ZPRMMAX<ZPLLEN                                              04004000
*           & XMF^='E'                                                  04006000
*          THEN                                                         04008000
*            ZPRMMAX=ZPLLEN;                                            04010000
*/*PL.L13 -----------------------------------------------------------*/ 04012000
*      END;                                                             04014000
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 04016000
*  IF XMF^='L'                                                          04018000
*    THEN                                                               04020000
*      DO;                                                              04022000
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 04024000
*            ANS('#Z'||ZNDX||'=''''B;'||                                04026000
*                '/*++ CLEAR PARAMETER AREA */')                        04028000
*                NORESCAN COL(MACLMAR);                                 04030000
*/*PI.L28 XPPSCID  CHAR(4)-------------------------------------------*/ 04032000
*        ANS('#Z'||ZNDX||'_XPPSCID=''PPSC'';'||                         04034000
*            '/*++ XPPSCID CHAR(4) CONSTANT */')                        04036000
*            NORESCAN COL(MACLMAR);                                     04038000
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 04040000
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           04042000
*            '/*++ XPLISTLEN FIXED(16) */')                             04044000
*            NORESCAN COL(MACLMAR);                                     04046000
*/*PI.L06 XPPTFLAG BIT(8)--------------------------------------------*/ 04048000
*        ZW='';                                                         04050000
*        ZMS='';                                                        04052000
*/*PI.L07 XPPTFLAG BIT(8) 1XXXXXXX-----------------------------------*/ 04054000
*        IF XREQUEST='RETRIEVE'                                         04056000
*          THEN                                                         04058000
*            ZW=ZW||'1';                                                04060000
*          ELSE                                                         04062000
*            ZW=ZW||'0';                                                04064000
*/*PI.L07 XPPTFLAG BIT(8) X1XXXXXX-----------------------------------*/ 04066000
*        IF XREQUEST='NEXT'                                             04068000
*          THEN                                                         04070000
*            ZW=ZW||'1';                                                04072000
*          ELSE                                                         04074000
*            ZW=ZW||'0';                                                04076000
*/*PI.L07 XPPTFLAG BIT(8) XX1XXXXX-----------------------------------*/ 04078000
*        IF XREQUEST='END'                                              04080000
*          THEN                                                         04082000
*            ZW=ZW||'100000';                                           04084000
*          ELSE                                                         04086000
*            ZW=ZW||'000000';                                           04088000
*/*PI.L09 XPPTFLAG BIT(8)--------------------------------------------*/ 04090000
*        IF INDEX(ZW,'1')^=0                                            04092000
*          THEN                                                         04094000
*            ANS('#Z'||ZNDX||'_XPPTFLAG='||                             04096000
*                '#Z'||ZNDX||'_XPPTFLAG | '||                           04098000
*                ''''||ZW||'''B; '||                                    04100000
*                '/*++ BIT(8) */')                                      04102000
*                NORESCAN COL(MACLMAR);                                 04104000
*/*PI.L14 CHECK FOR * AS THE CHAR(8) ARGUMENT------------------------*/ 04106000
*        IF XPROGRAM='*'                                                04108000
*          THEN                                                         04110000
*            ZXPROGRAM='';                   /* RESET INPUT/INOUT */    04112000
*/*PI.L15 ADDR(XPROGRAM) CHAR(8)-------------------------------------*/ 04114000
*        IF ZXPROGRAM^=''                                               04116000
*          THEN                                                         04118000
*            ANS('#Z'||ZNDX||'_XPROGRAM_ADDR='||                        04122400
*                'ADDR('||XPROGRAM||');'||                              04126800
*                '/*++ ADDR XPROGRAM CHAR(8) */')                       04131200
*                NORESCAN COL(MACLMAR);                                 04135600
*/*PI.L15 ADDR(XTOKEN) FIXED(31)-------------------------------------*/ 04140000
*        IF ZXTOKEN^=''                                                 04142000
*          THEN                                                         04144000
*            IF XTOKEN^='0'                                             04146000
*              THEN                                                     04148000
*                ANS('#Z'||ZNDX||'_XTOKEN_ADDR='||                      04158000
*                    'ADDR('||XTOKEN||');'||                            04160000
*                    '/*++ ADDR XTOKEN FIXED(31) */')                   04162000
*                    NORESCAN COL(MACLMAR);                             04164000
*/*PI.L14 CHECK FOR * AS THE CHAR(16) ARGUMENT-----------------------*/ 04166000
*        IF XPPTINFO='*'                                                04168000
*          THEN                                                         04170000
*            ZXPPTINFO='';                   /* RESET INPUT/INOUT */    04172000
*/*PI.L15 ADDR(XPPTINFO) CHAR(16)------------------------------------*/ 04174000
*        IF ZXPPTINFO^=''                                               04176000
*          THEN                                                         04178000
*            ANS('#Z'||ZNDX||'_XPPTINFO_ADDR='||                        04188800
*                'ADDR('||XPPTINFO||');'||                              04199600
*                '/*++ ADDR XPPTINFO CHAR(16) */')                      04210400
*                NORESCAN COL(MACLMAR);                                 04221200
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 04232000
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           04234000
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       04236000
*                  '/*++ PARAMETER LIST */')                            04238000
*                  NORESCAN COL(MACLMAR);                               04240000
*              IF SYSASCE^='P'                                          04242000
*                THEN                                                   04244000
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              04246000
*                      '/*++ PARAMETER LIST AR */')                     04248000
*                      NORESCAN COL(MACLMAR);                           04250000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  04250300
*  DECLARE EHARC FIXED EXTERNAL;                                        04250600
*  DECLARE IEFJESCT CHARACTER EXTERNAL;                                 04250900
*  DEACTIVATE IEFJESCT;                                                 04251200
*  EHARC = 0;                                                           04251500
*/* If the mapping macro IEFJESCT hasn't been included, issue        */ 04251800
*/* a message and set the 'error' flag.                              */ 04252100
*  IF IEFJESCT ^= 'IEFJESCT' THEN DO;                                   04252400
*                                                                       04252700
*    ERRTEXT = 'AHA0053 IEFPPSCN: MACRO IEFJESCT REQUIRED BUT WAS ' ||  04253000
*              'NOT FOUND BEFORE THIS INVOCATION';   /* Prime message   04253300
*                                                       area         */ 04253600
*    ANSWER MSG(ERRTEXT) NORESCAN;  /* Put out message               */ 04253900
*    COMNT6 = COMMENT(ERRTEXT);   /* Put message in comment form     */ 04254200
*    ANS(COMNT6) SKIP ;           /* Message for compile stage       */ 04254500
*                                                                       04254800
*    ERRTEXT = 'AHA0053 IEFPPSCN: INSERT OR MOVE THE INCLUDE ' ||       04255100
*              'OF IEFJESCT BEFORE THIS INVOCATION'; /* Prime message   04255400
*                                                         area       */ 04255700
*    ANSWER MSG(ERRTEXT) NORESCAN;  /* Put out message               */ 04256000
*    COMNT6 = COMMENT(ERRTEXT);   /* Put message in comment form     */ 04256300
*    ANS(COMNT6) SKIP ;           /* Message for compile stage       */ 04256600
*                                                                       04256900
*    EHARC = 4;                   /* Warning from macro phase        */ 04257200
*  END;                                                                 04257500
*     ANS('CALL PPTSCAN;') COL(MACLMAR); /* Call routine             */ 04257800
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  04258100
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         04258400
*              IF NUMBER(RETCODE)>0                                     04258700
*                THEN                                                   04259000
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       04259300
*/*PO.L08 XRETCODE  RETURN CODE--------------------------------------*/ 04260000
*              IF NUMBER(RETCODE)>0                                     04262000
*                THEN                                                   04264000
*                    ANS(XRETCODE||                                     04266000
*                     '=GPR15F; /*++ SET RETURN CODE */')               04268000
*                      NORESCAN COL(MACLMAR);                           04270000
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 04272000
*              IF NUMBER(RETCODE)>0                                     04272600
*                THEN                                                   04273200
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         04274000
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 04276000
*      END;                                                             04278000
*/*PO.L13 IEFPPSCN USAGE INDICATOR-----------------------------------*/ 04280000
*  ZIEFPPSCN='YES';                          /* SET IEFPPSCN USED */    04282000
*/*PO.L15 END OF EXECUTABLE IEFPPSCN-0 MACRO-------------------------*/ 04284000
*  IF XMF^='L'                                                          04286000
*    THEN                                                               04288000
*      ANS('END; /*++ IEFPPSCN-0 */')                                   04290000
*          NORESCAN COL(MACLMAR);                                       04292000
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 04294000
*  ANS(MACCONC||'LIST POP;') NORESCAN COL(MACLMAR);                     04296000
*/*PO.L17 END OF IEFPPSCN MACRO--------------------------------------*/ 04298000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        04300000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      04302000
*/*******************************************************************/  04304000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  04306000
*/*******************************************************************/  04308000
*      END;                                                             04310000
*/*******************************************************************/  04312000
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  04314000
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  04316000
*/*******************************************************************/  04318000
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  04320000
*    THEN                                                               04322000
*      DO;                                                              04324000
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       04326000
*                                      DOUBLEWORD MULTIPLES        */   04328000
*/*******************************************************************/  04330000
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  04332000
*/*******************************************************************/  04334000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     04336000
*          THEN                                                         04338000
*            DO;                                                        04340000
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  04342000
*                THEN                                                   04344000
*                  DO;                                                  04346000
*                    ANS('?EPILOG                                       04348000
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        04350000
*                    EHALIST=EHALIST||',AMG,';                          04352000
*                  END;                                                 04354000
*            END;                                                       04356000
*/*******************************************************************/  04358000
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  04360000
*/*******************************************************************/  04362000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     04364000
*          THEN                                                         04366000
*            DO;                                                        04368000
*              IF ZPRMMAX>EHAMAXLEN                                     04370000
*                THEN                                                   04372000
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  04374000
*            END;                                                       04376000
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 04378000
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   04380000
*              COL(MACLMAR);                                            04382000
*        END;                                                           04384000
*      END;                                                             04386000
*/*-----------------------------------------------------------------*/  04388000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  04390000
*/*        BY ?EPILOG                                               */  04392000
*/*-----------------------------------------------------------------*/  04394000
*        IF INDEX(EHAREGS,'01P')=0                                      04396000
*          THEN                                                         04398000
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  04400000
*        IF INDEX(EHAREGS,'15F')=0                                      04402000
*          THEN                                                         04404000
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  04406000
*  RETURN CODE(ZMACRET);                                                04408000
*%END IEFPPSCN;                                                         04410000
