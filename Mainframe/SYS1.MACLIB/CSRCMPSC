*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  CSRCMPSC                              -08/25/93-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Compression/Expansion service                 * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5695-047 (C) COPYRIGHT IBM CORP. 1992                           * 00001300
*     SEE COPYRIGHT INSTRUCTIONS                                      * 00001400
*                                                                     * 00001500
* STATUS= HBB4430                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*                                                                     * 00002200
*      The following services are provided:                           * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      o   Compress/Expand using the Ziv-Lempel algorithm.            * 00002600
*                                                                     * 00002700
*                                                                     * 00002800
*                                                                     * 00002900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003000
*                                                                     * 00003100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003200
*                                                                     * 00003300
*01* ENVIRONMENT:                                                     * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*      Minimum authorization: Problem state. PSW key 8-15.            * 00003700
*                                                                     * 00003800
*      Dispatchable unit mode: Task or SRB mode.                      * 00003900
*                                                                     * 00004000
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004100
*                                                                     * 00004200
*      AMODE:            31-bit.                                      * 00004300
*                                                                     * 00004400
*      ASC mode:         Primary or Access Register.                  * 00004500
*                                                                     * 00004600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004700
*                                                                     * 00004800
*      Locks:                                                         * 00004900
*                                                                     * 00005000
*                        The caller may hold the local lock of the    * 00005100
*                        primary address space and may additionally   * 00005200
*                        hold the CMS lock.  No locks are required.   * 00005300
*                                                                     * 00005400
*      Control parameters:                                            * 00005500
*                                                                     * 00005600
*                        The CBLOCK area, and the dictionary, source, * 00005700
*                        and target areas pointed to by the CBLOCK    * 00005800
*                        area can all be in the primary address space * 00005900
*                        or, for AR-mode callers, in an address/data  * 00006000
*                        space addressable through a provided ALET.   * 00006100
*                        The dictionary and source areas are assumed  * 00006200
*                        to be in the same space.  The fields in the  * 00006300
*                        CBLOCK area that designate the ALETs of the  * 00006400
*                        dictionary/source and target areas should be * 00006500
*                        set to zero by primary mode callers.         * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*01* PROGRAMMING REQUIREMENTS:                                        * 00007000
*                                                                     * 00007100
*    Include mapping macro CSRYCMPS to get a mapping of the           * 00007200
*    compression block area to be passed via the CBLOCK parameter.    * 00007300
*    That macro also provides equates for the return codes from the   * 00007400
*    CSRCMPSC service.                                                * 00007500
*                                                                     * 00007600
*01* RESTRICTIONS:                                                    * 00007700
*                                                                     * 00007800
*    None.                                                            * 00007900
*                                                                     * 00008000
*01* INPUT REGISTER INFORMATION:                                      * 00008100
*                                                                     * 00008200
*    Before issuing the CSRCMPSC macro, the caller must ensure that   * 00008300
*    the following general purpose registers (GPRs) contain the       * 00008400
*    specified information.                                           * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*    REGISTER  CONTENTS                                               * 00008800
*                                                                     * 00008900
*    13        The address of a 72-byte standard save area in the     * 00009000
*              primary address space                                  * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*    Before issuing the CSRCMPSC macro, the caller does not have to   * 00009500
*    place any information into any access register (AR) unless       * 00009600
*    running in AR ASC mode in which case the caller must ensure that * 00009700
*    the following ARs contain the specified information:             * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*    REGISTER  CONTENTS                                               * 00010100
*                                                                     * 00010200
*    13        0 which designates the primary address space           * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*01* OUTPUT REGISTER INFORMATION:                                     * 00010700
*                                                                     * 00010800
*    When control returns to the caller, the GPRs contain:            * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*    REGISTER  CONTENTS                                               * 00011200
*                                                                     * 00011300
*    0-1       Used as work registers by the system                   * 00011400
*                                                                     * 00011500
*    2-13      Unchanged                                              * 00011600
*                                                                     * 00011700
*    14        Used as a work register by the system                  * 00011800
*                                                                     * 00011900
*    15        Return code                                            * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*    When control returns to the caller, the ARs contain:             * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*    REGISTER  CONTENTS                                               * 00012700
*                                                                     * 00012800
*    0-1       Used as work registers by the system                   * 00012900
*                                                                     * 00013000
*    2-13      Unchanged                                              * 00013100
*                                                                     * 00013200
*    14-15     Used as work registers by the system                   * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*01* PERFORMANCE IMPLICATIONS:                                        * 00013700
*                                                                     * 00013800
*    None.                                                            * 00013900
*                                                                     * 00014000
*01* SYNTAX:                                                          * 00014100
*                                                                     * 00014200
*[xlabel]  CSRCMPSC     CBLOCK=xcblock                                * 00014300
*                     [,RETCODE=xretcode]                             * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*      Where:                                                         * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*      [xlabel]                                                       * 00015000
*          is an optional symbol, starting in column 1, that is the   * 00015100
*          name on the CSRCMPSC macro invocation.  The name must      * 00015200
*          conform to the rules for an ordinary assembler language    * 00015300
*          symbol.                                                    * 00015400
*          DEFAULT: No name.                                          * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      CBLOCK=xcblock                                                 * 00016000
*          is the name (RS-type), or address in register (1)-(12), of * 00016100
*          a required 36 character input/output area that is mapped   * 00016200
*          by macro CSRYCMPS and provides the information needed by,  * 00016300
*          and provided on return by, the CSRCMPSC service.  It       * 00016400
*          should begin on a fullword boundary.                       * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*      [RETCODE=xretcode]                                             * 00017000
*          is the name (RS-type) of an optional fullword output       * 00017100
*          variable, or register (2)-(12), into which the return code * 00017200
*          is to be copied from GPR 15.                               * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*01* ABEND CODES:                                                     * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*       0C4                                                           * 00018000
*                                                                     * 00018100
*                 The user may get this completion code if a          * 00018200
*                 user-provided data area is not accessible.          * 00018300
*                                                                     * 00018400
*       0C6                                                           * 00018500
*                                                                     * 00018600
*                 The user may get this completion code if the symbol * 00018700
*                 size value within the CBLOCK area is not 1-5.       * 00018800
*                                                                     * 00018900
*       0C7                                                           * 00019000
*                                                                     * 00019100
*                 The user may get this completion code in the        * 00019200
*                 following circumstances when the dictionary is      * 00019300
*                 built incorrectly:                                  * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                 o   If the length of a string to be represented by  * 00019700
*                     a single compression symbol, encountered during * 00019800
*                     a compression operation, exceeds 260            * 00019900
*                     characters.                                     * 00020000
*                                                                     * 00020100
*                 o   If a dictionary entry has more than 260 total   * 00020200
*                     children.                                       * 00020300
*                                                                     * 00020400
*                 o   If the "child count" in a dictionary entry      * 00020500
*                     indicates more than 6 children.                 * 00020600
*                                                                     * 00020700
*                 o   If the number of extension characters for a     * 00020800
*                     dictionary entry with 0 or 1 children exceeds   * 00020900
*                     4.                                              * 00021000
*                                                                     * 00021100
*                 o   If a sibling descriptor dictionary entry has a  * 00021200
*                     sibling count of 0.                             * 00021300
*                                                                     * 00021400
*                 o   If expansion of a compression symbol uses more  * 00021500
*                     than 260 characters.                            * 00021600
*                                                                     * 00021700
*                 o   If expansion of a compression symbol uses more  * 00021800
*                     than 127 dictionary entries.                    * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                 In all these cases, the user must fix the           * 00022300
*                 dictionary.                                         * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*01* RETURN CODES:                                                    * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                 Return code constants are defined in macro          * 00023100
*                 CSRYCMPS.                                           * 00023200
*                                                                     * 00023300
*       0         Meaning: Successful completion. Source operand was  * 00023400
*                 completely processed.                               * 00023500
*                                                                     * 00023600
*                 Action: None required.                              * 00023700
*                                                                     * 00023800
*       4         Meaning: Warning. Source operand was not completely * 00023900
*                 processed.  No room left in target operand.         * 00024000
*                                                                     * 00024100
*                 Action: Specify a larger target operand. Or provide * 00024200
*                 another area for the target operand. Call the       * 00024300
*                 service again to resume processing of the           * 00024400
*                 operation.                                          * 00024500
*                                                                     * 00024600
*       16        Meaning: Program Error. Operand not provided.       * 00024700
*                                                                     * 00024800
*                 Action: Provide values in the CMPSC_DictAddr,       * 00024900
*                 CMPSC_TargetAddr, and CMPSC_SourceAddr fields.      * 00025000
*                                                                     * 00025100
*       20        Meaning: Program Error. Value in CMPSC_SYMSIZE is   * 00025200
*                 not supported.                                      * 00025300
*                                                                     * 00025400
*                 Action: Provide a value from 1 to 5 in this 3-bit   * 00025500
*                 field.                                              * 00025600
*                                                                     * 00025700
*       24        Meaning: Warning. No work to do.  The compression   * 00025800
*                 area length (the target for compress, the source    * 00025900
*                 for expand) is not large enough to hold even one    * 00026000
*                 compression symbol.                                 * 00026100
*                                                                     * 00026200
*                 Action: If this result is expected, no action is    * 00026300
*                 required.  Otherwise, provide a larger value in the * 00026400
*                 CMPSC_TargetLen (for compression) or the            * 00026500
*                 CMPSC_SourceLen (for expansion) field.              * 00026600
*                                                                     * 00026700
*       28        Meaning: Program error. Compression dictionary      * 00026800
*                 processing exceeded the limit of 260 for the length * 00026900
*                 of a compressed symbol                              * 00027000
*                                                                     * 00027100
*                 Action: Fix the dictionary.                         * 00027200
*                                                                     * 00027300
*       32        Meaning: Program error. Compression dictionary      * 00027400
*                 processing exceeded the limit of 260 children for   * 00027500
*                 an entry.                                           * 00027600
*                                                                     * 00027700
*                 Action: Fix the dictionary.                         * 00027800
*                                                                     * 00027900
*       36        Meaning: Program error. A compression dictionary    * 00028000
*                 entry indicates that it contains more than 6        * 00028100
*                 children (not including siblings).                  * 00028200
*                                                                     * 00028300
*                 Action: Fix the dictionary.                         * 00028400
*                                                                     * 00028500
*       40        Meaning: Program error. The number of extension     * 00028600
*                 characters for a compression dictionary entry with  * 00028700
*                 0 or 1 children exceeds 4.                          * 00028800
*                                                                     * 00028900
*                 Action: Fix the dictionary.                         * 00029000
*                                                                     * 00029100
*       44        Meaning: Program error. A sibling descriptor        * 00029200
*                 compression dictionary entry has a count of 0.      * 00029300
*                                                                     * 00029400
*                 Action: Fix the dictionary.                         * 00029500
*                                                                     * 00029600
*       48        Meaning: Program error. Expansion of a compression  * 00029700
*                 symbol used more than 127 dictionary entries.       * 00029800
*                                                                     * 00029900
*                 Action: Fix the dictionary.                         * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*01* REASON CODES:  None.                                             * 00030400
*                                                                     * 00030500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00030600
*                                                                     * 00030700
*02*   PROCESSOR:  ASSEM                                              * 00030800
*                                                                     * 00030900
*01* COMPONENT:  SCCSR                                                * 00031000
*                                                                     * 00031100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00031200
*                                                                     * 00031300
*01* EXAMPLES:                                                        * 00031400
*                                                                     * 00031500
*      An example of compression                                      * 00031600
*                                                                     * 00031700
*               LA    2,MYCBLOCK               Get address of parm    * 00031800
*               USING CMPSC,2                                         * 00031900
*               XC    CMPSC(CMPSC_LEN),CMPSC   Clear block            * 00032000
*               OI    CMPSC_FLAGS_BYTE2,CMPSC_SYMSIZE_5 Set size      * 00032100
*      *                        Symbol size is 5+8. Dictionary has    * 00032200
*      *                        2**(5+8) entries                      * 00032300
*               L     3,DICTADDR                                      * 00032400
*               ST    3,CMPSC_DICTADDR         Set dictionary address * 00032500
*               L     3,COMPADDR                                      * 00032600
*               ST    3,CMPSC_TARGETADDR       Set compression area   * 00032700
*               L     3,COMPLEN                                       * 00032800
*               ST    3,CMPSC_TARGETLEN        Set compression length * 00032900
*               L     3,EXPADDR                                       * 00033000
*               ST    3,CMPSC_SOURCEADDR       Set expansion area     * 00033100
*               L     3,EXPLEN                                        * 00033200
*               ST    3,CMPSC_SOURCELEN        Set expansion length   * 00033300
*               LA    3,WORKAREA                                      * 00033400
*               ST    3,CMPSC_WORKAREAADDR     Set workarea address   * 00033500
*               CSRCMPSC CBLOCK=CMPSC                                 * 00033600
*               DROP  2                                               * 00033700
*       .                                                             * 00033800
*       .                                                             * 00033900
*               DS    0F        Align parameter on word boundary      * 00034000
*      MYCBLOCK DS    (CMPSC_LEN)CL1    CBLOCK parameter              * 00034100
*      COMPADDR DS    A         Output "To" (compression) area        * 00034200
*      COMPLEN  DS    F         Length of "To" area                   * 00034300
*      EXPADDR  DS    A         Input "From" (expansion) area         * 00034400
*      EXPLEN   DS    F         Length of "From" area                 * 00034500
*      DICTADDR DS    A         Address of compression dictionary     * 00034600
*               DS    0D        Doubleword align workarea             * 00034700
*      WORKAREA DS    CL192     Work area                             * 00034800
*               CSRYCMPS ,                                            * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*    Note that the expansion dictionary must immediately follow       * 00035200
*    the compression dictionary and both must be aligned on           * 00035300
*    page boundaries.                                                 * 00035400
*                                                                     * 00035500
*      An example of expansion                                        * 00035600
*                                                                     * 00035700
*               LA    2,MYCBLOCK               Get address of parm    * 00035800
*               USING CMPSC,2                                         * 00035900
*               XC    CMPSC(CMPSC_LEN),CMPSC   Clear block            * 00036000
*               OI    CMPSC_FLAGS_BYTE2,CMPSC_SYMSIZE_5 Set size      * 00036100
*      *                        Symbol size is 5+8. Dictionary has    * 00036200
*      *                        2**(5+8) entries                      * 00036300
*               OI    CMPSC_FLAGS_BYTE2,CMPSC_EXPAND  Do expansion    * 00036400
*               L     3,EDICTADDR                                     * 00036500
*               ST    3,CMPSC_DICTADDR         Set dictionary address * 00036600
*               L     3,EXPADDR                                       * 00036700
*               ST    3,CMPSC_TARGETADDR       Set expansion area     * 00036800
*               L     3,EXPLEN                                        * 00036900
*               ST    3,CMPSC_TARGETLEN        Set expansion length   * 00037000
*               L     3,COMPADDR                                      * 00037100
*               ST    3,CMPSC_SOURCEADDR       Set compression area   * 00037200
*               L     3,COMPLEN                                       * 00037300
*               ST    3,CMPSC_SOURCELEN        Set compression length * 00037400
*               LA    3,WORKAREA                                      * 00037500
*               ST    3,CMPSC_WORKAREAADDR     Set workarea address   * 00037600
*               CSRCMPSC CBLOCK=CMPSC                                 * 00037700
*               DROP  2                                               * 00037800
*       .                                                             * 00037900
*       .                                                             * 00038000
*               DS    0F        Align parameter on word boundary      * 00038100
*      MYCBLOCK DS    (CMPSC_LEN)CL1    CBLOCK Parameter              * 00038200
*      EXPADDR  DS    A         Output "To" (expansion) area          * 00038300
*      EXPLEN   DS    F         Length of "To" area                   * 00038400
*      COMPADDR DS    A         Input "From" (compression) area       * 00038500
*      COMPLEN  DS    F         Length of "From" area                 * 00038600
*      EDICTADDR DS   A         Address of expansion dictionary       * 00038700
*               DS    0D        Doubleword align workarea             * 00038800
*      WORKAREA DS    CL192     Work area                             * 00038900
*               CSRYCMPS ,                                            * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*    Note that the expansion dictionary must be                       * 00039300
*    aligned on a page boundary.                                      * 00039400
*                                                                     * 00039500
*01* MACRO USAGE NOTES:                                               * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00039900
*        global macro variable.  Any value other than 'NO' will       * 00040000
*        result in the macro expansion being printed.  The default is * 00040100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00040200
*        variable should be set.                                      * 00040300
*                                                                     * 00040400
*                    GBLC &ZPRINT                                     * 00040500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*01* CHANGE ACTIVITY:                                                 * 00041000
*                                                                     * 00041100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00041200
*                                                                     * 00041300
*    $T0=OY59584A HBB4430 920901 PD00XB:  Compression interface macro * 00041400
*    $T1=OY59584  HBB4430 921101 PD00XB:  Compression interface macro * 00041500
****** END OF SPECIFICATIONS *****************************************/ 00041600
*/********************************************************************* 00041700
         MACRO                                                          00041800
&XLABEL  CSRCMPSC &CBLOCK=,&RETCODE=                                    00041900
.*                                                                      00042000
*              MACDATE -08/25/93-<0>                                    00042100
.*                                                                      00042200
.*******************************************************************    00042300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00042400
.*******************************************************************    00042500
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00042600
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00042700
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00042800
.*                                                                      00042900
              GBLC  &ZCSRCMPSC  YES=MACRO USED AT LEAST ONCE            00043000
.*******************************************************************    00043100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00043200
.*******************************************************************    00043300
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00043400
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00043500
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00043600
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00043700
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00043800
              LCLA  &ZAWRK      USED AS A WORK AREA                     00043900
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00044000
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00044100
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00044200
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00044300
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00044400
              LCLA  &ZMACRET    MACRO RETURN CODE                       00044500
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00044600
.*                                                                      00044700
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00044800
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00044900
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00045000
.********************************************************************   00045100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00045200
.********************************************************************   00045300
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00045400
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00045500
.*                                                                      00045600
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00045700
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00045800
              SPLEVEL  TEST                                             00045900
.ZSYS2        ANOP  ,                                                   00046000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00046100
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00046200
              SYSSTATE TEST                                             00046300
              AGO   .ZSYS4                                              00046400
.ZSYS3        ANOP  ,                                                   00046500
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00046600
.ZSYS4        ANOP  ,                                                   00046700
.*******************************************************************    00046800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00046900
.*******************************************************************    00047000
              LCLC  &XCBLOCK    ++ NAME                                 00047100
              LCLC  &XRETCODE   ++ NAME                                 00047200
.*******************************************************************    00047300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00047400
.*******************************************************************    00047500
              LCLC  &ZXCBLOCK   ++ INOUT NAME                           00047600
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00047700
.********************************************************************   00047800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00047900
.********************************************************************   00048000
              ACTR  10000                                               00048100
.*----------------------------------------------------------------***   00048200
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00048300
              AIF   (N'&CBLOCK LE 1).ZG2A       CK NUM                  00048400
&ZMS          SETC  '"CBLOCK='  *KPOSA* MNOTE                           00048500
&ZMS          SETC  '&ZMS.&CBLOCK"'                                     00048600
&ZMS          SETC  '&ZMS "CBLOCK"'                                     00048700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00048800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00048900
.ZG2A         ANOP  ,                                                   00049000
.*-------------------------------------------------------------------   00049100
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00049200
&ZXCBLOCK     SETC  'INOUT'     SET IN/OUTPUT                           00049300
&XCBLOCK      SETC  '&CBLOCK(1)'                SET XVARIABLE           00049400
              AIF   (N'&CBLOCK GT 1).ZG2B       MULTI PARMS             00049500
&XCBLOCK      SETC  '&CBLOCK'   SET XVARIABLE                           00049600
.ZG2B         AIF   (K'&CBLOCK(1) GT 0).ZG2C                            00049700
&ZXCBLOCK     SETC  ''          RESET IN/OUTPUT                         00049800
&ZMS          SETC  ' '         *KRQDA*                                 00049900
&ZMS          SETC  '&ZMS "CBLOCK" KEY AND ITS ARGUMENT'                00050000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00050100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00050200
.ZG2C         ANOP  ,                                                   00050300
.*-------------------------------------------------------------------   00050400
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00050500
              AIF   (K'&ZXCBLOCK LE 0).ZG2R     NOT I/O                 00050600
              AIF   ('&XCBLOCK'(1,1) NE '(').ZG2R                       00050700
&ZCGPR        SETC  '&XCBLOCK'(2,K'&XCBLOCK-2)                          00050800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00050900
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00051000
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00051100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00051200
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00051300
.ZG2P         ANOP  ,                                                   00051400
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00051500
              AIF   ('&ZCGPR' LT '1').ZG2Q                              00051600
              AIF   ('&ZCGPR' LE '12').ZG2R                             00051700
.ZG2Q         ANOP  ,                                                   00051800
&ZMS          SETC  '"CBLOCK='  *KGPRA* MNOTE                           00051900
&ZMS          SETC  '&ZMS.&CBLOCK"'                                     00052000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00052100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00052200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00052300
.ZG2R         ANOP  ,                                                   00052400
.*----------------------------------------------------------------***   00052500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00052600
              AIF   (N'&RETCODE LE 1).ZG5A      CK NUM                  00052700
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00052800
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00052900
&ZMS          SETC  '&ZMS "RETCODE"'                                    00053000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00053100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00053200
.ZG5A         ANOP  ,                                                   00053300
.*-------------------------------------------------------------------   00053400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00053500
              AIF   (K'&RETCODE(1) LE 0).ZG5C   NO PARM                 00053600
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00053700
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00053800
              AIF   (N'&RETCODE GT 1).ZG5C                              00053900
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00054000
.ZG5C         ANOP  ,                                                   00054100
.*-------------------------------------------------------------------   00054200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00054300
              AIF   (K'&ZXRETCODE LE 0).ZG5R    NOT I/O                 00054400
              AIF   ('&XRETCODE'(1,1) NE '(').ZG5R                      00054500
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00054600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00054700
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00054800
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00054900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00055000
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00055100
.ZG5P         ANOP  ,                                                   00055200
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00055300
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00055400
              AIF   ('&ZCGPR' LE '12').ZG5R                             00055500
.ZG5Q         ANOP  ,                                                   00055600
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00055700
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00055800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00055900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00056000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00056100
.ZG5R         ANOP  ,                                                   00056200
.******************************************************************     00056300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00056400
.******************************************************************     00056500
              ACTR  10000                                               00056600
.*----------------------------------------------------------------***   00056700
.***AH.P02 EXTRA POSITIONALS                                            00056800
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00056900
&ZCVAL        SETC  ''          ERROR FIELD                             00057000
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00057100
.ZGLIST2      ANOP  ,                                                   00057200
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00057300
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00057400
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00057500
              AGO   .ZGLIST2                                            00057600
.*                                                                      00057700
.ZGLIST3      ANOP  ,                                                   00057800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00057900
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00058000
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00058100
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00058200
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00058300
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00058400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058500
.ZGLISTX      ANOP  ,                                                   00058600
&ZASYSLNDX    SETA  0                                                   00058700
.*******************************************************************    00058800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00058900
.*******************************************************************    00059000
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00059100
.*******************************************************************    00059200
.***AE.01  START OF CSRCMPSC MACRO CODE                                 00059300
.*******************************************************************    00059400
              LCLC  &M0M0001                 NAME                       00059500
&M0M0001      SETC  '&XLABEL'                SET NAME                   00059600
              AIF   (K'&XLABEL NE 0).XLAB2                              00059700
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00059800
.*                                                                      00059900
.XLAB2        ANOP  ,                                                   00060000
&M0M0001 DS    0H                             CSRCMPSC-0                00060100
.*******************************************************************    00060200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00060300
.*******************************************************************    00060400
              PUSH  PRINT                                               00060500
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00060600
              PRINT OFF         ++ PR01                                 00060700
              AGO   .ZPRNTXX                                            00060800
.ZPRINTX      PRINT ON                                                  00060900
.ZPRNTXX      ANOP  ,                                                   00061000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00061100
.*                                                                      00061200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00061300
                      LCLA  &ZOPN1         INVOCATION INDEX             00061400
                      LCLC  &ZOPL(4095)    LABEL                        00061500
                      LCLC  &ZOPO(4095)    OPERATION                    00061600
                      LCLC  &ZOPV(4095)    VALUE                        00061700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00061800
.*                                                                      00061900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00062000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00062100
.*-------------------------------------------------------------------   00062200
&ZOPN1                SETA &ZOPN                                        00062300
.*******************************************************************    00062400
.***AO.X02  RETURN CODE PROCESSING                                      00062500
.*******************************************************************    00062600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00062700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00062800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00062900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00063000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00063100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00063200
&ZOPN                 SETA  &ZOPN+1                                     00063300
&ZOPL(&ZOPN)          SETC  ' '                                         00063400
&ZOPO(&ZOPN)          SETC  'ST'                                        00063500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00063600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00063700
                      AGO   .ZMRETX                                     00063800
.*                                                                      00063900
.ZMRET2               ANOP  ,                                           00064000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00064100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00064200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00064300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00064400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00064500
&ZOPN                 SETA  &ZOPN+1                                     00064600
&ZOPL(&ZOPN)          SETC  ' '                                         00064700
&ZOPO(&ZOPN)          SETC  'LR'                                        00064800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00064900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00065000
.ZMRETX               ANOP  ,                                           00065100
.*******************************************************************    00065200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00065300
.*******************************************************************    00065400
                      ACTR  10000                                       00065500
.*                                                                      00065600
                      LCLA  &ZLC           COLUMN POSITION              00065700
                      LCLA  &ZOPX          LIST TABLE INDEX             00065800
                      LCLC  &ZLL           LABEL                        00065900
                      LCLC  &ZLOP          OPERATION                    00066000
                      LCLC  &ZLV           VALUE                        00066100
                      LCLC  &ZLD           DESCRIPTION                  00066200
.*                                                                      00066300
&ZOPX                 SETA  1                                           00066400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00066500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00066600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00066700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00066800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00066900
                      AIF   (K'&ZLD LE 0).ZL5                           00067000
&ZLC                  SETA  35             COMMENT COLUMN               00067100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00067200
&ZLC                  SETA  33             COMMMENT COLUMN              00067300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00067400
&ZLV                  SETC  '&ZLV'.' '                                  00067500
                      AGO   .ZL3                                        00067600
.*                                                                      00067700
.ZL4                  ANOP  ,                                           00067800
&ZLV                  SETC  '&ZLV'.' '                                  00067900
.ZL5                  ANOP  ,                                           00068000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00068100
.*                                                                      00068200
&ZLL     &ZLOP &ZLV                                                     00068300
.*                                                                      00068400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00068500
                      AGO   .ZL2           CONTINUE LOOPING             00068600
.*                                                                      00068700
.ZLX                  ANOP  ,                                           00068800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00068900
           AIF   ('&CBLOCK'(1,1) EQ '(').INREG                     @T1A 00069000
           LAE   1,&CBLOCK(1)        Get parameter address/ALET    @T2A 00069100
           AGO   .DONE                                             @T1A 00069200
.INREG  ANOP                                                       @T1A 00069300
           AIF ('&CBLOCK(1)' EQ '1').DONE                          @T1A 00069400
           LAE   1,0(0,&CBLOCK(1))   Get parameter address/ALET    @T2A 00069500
.DONE   ANOP                                                       @T1A 00069600
           L     15,16              Get CVT address                @T1A 00069700
           L     15,140(15,0)       Get ECVT address               @T1A 00069800
           L     15,248(15,0)       Get address of service         @T1A 00069900
           BASSM 14,15              Call compression service       @T1A 00070000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00070100
.*******************************************************************    00070200
.***AP.X01  FORMAT GENERATED CODE                                       00070300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00070400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00070500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00070600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00070700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00070800
                      AIF   (K'&ZLD LE 0).ZL51                          00070900
&ZLC                  SETA  35             COMMENT COLUMN               00071000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00071100
&ZLC                  SETA  33             COMMENT COLUMN               00071200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00071300
&ZLV                  SETC  '&ZLV'.' '                                  00071400
                      AGO   .ZL31                                       00071500
.*                                                                      00071600
.ZL41                 ANOP  ,                                           00071700
&ZLV                  SETC  '&ZLV'.' '                                  00071800
.ZL51                 ANOP  ,                                           00071900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00072000
.*                                                                      00072100
&ZLL     &ZLOP &ZLV                                                     00072200
.*                                                                      00072300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00072400
                      AGO   .ZL21          CONTINUE LOOPING             00072500
.*                                                                      00072600
.ZLX1                 ANOP  ,                                           00072700
.*******************************************************************    00072800
.***AP.X02  END OF CSRCMPSC MACRO                                       00072900
&ZCSRCMPSC            SETC  'YES'          SET CSRCMPSC USED            00073000
         POP   PRINT                                                    00073100
*                                            CSRCMPSC-0                 00073200
         SPACE 1                                                        00073300
.ZLX2                 ANOP  ,                                           00073400
         MEND                                                           00073500
**********************************************************************/ 00073600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00073700
*%CSRCMPSC: MACRO KEYS(CBLOCK,RETCODE);                                 00073800
*  ANS('?'||MACLABEL||' '||'CSRCMPSP '||MACLIST||                       00073900
*         ' '||MACKEYS||';') COL(MACLMAR);                              00074000
*%END CSRCMPSC;                                                         00074100
