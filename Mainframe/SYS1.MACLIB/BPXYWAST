*        %GOTO WASTPRO  ;         /* Bilingual header                   00050000
         MACRO                                                          00100000
         BPXYWAST  &DSECT=YES,&LIST=YES                       8@D1A     00150000
         GBLB  &WAST411                                                 00200000
         AIF   (&WAST411 EQ 1).E411                                     00250000
&WAST411 SETB  1                                                        00300000
         AIF   ('&LIST' EQ 'YES').A411                                  00350000
         PUSH  PRINT  BPXYWAST: Wait status word                        00400000
         PRINT OFF                                                      00450000
         AGO   .A411                                                    00500000
*                                  */                                   00550000
*%WASTPRO : ;                                                           00600000
*/****START OF SPECIFICATIONS****************************************** 00650000
*                                                                       00700000
*    $MAC (BPXYWAST) COMP(SCPX1) PROD(BPX):                             00750000
*                                                                       00800000
*01* MACRO NAME: BPXYWAST                                               00850000
*                                                                       00900000
*01* DSECT NAME: WAST                                                   00950000
*                                                                       01000000
*01* DESCRIPTIVE NAME: wait status word                                 01050000
*                                                                       01100000
*02*   ACRONYM: WAST                                                    01150000
**/                                                                     01200000
*/*01* PROPRIETARY STATEMENT=                                        */ 01250000
*/***PROPRIETARY_STATEMENT********************************************/ 01300000
*/*                                                                  */ 01350000
*/*                                                                  */ 01400000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01450000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01500000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1993,2000                       */ 01550000
*/*                                                                  */ 01650000
*/* STATUS= HBB7703                                                  */ 01700000
*/*                                                                  */ 01750000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01800000
*/*                                                                     01850000
*                                                                       01875000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     01900000
*01* END OF EXTERNAL CLASSIFICATION:                                    01950000
*                                                                       02000000
*01* FUNCTION:                                                          02050000
*      The WAST maps the status word returned by the wait system call   02100000
*      BPX1WAT.                                                         02150000
*                                                                       02200000
*01* METHOD OF ACCESS:                                                  02250000
*                                                                       02300000
*02*   PL/X:                                                            02350000
*        %INCLUDE SYSLIB(BPXYWAST)                                      02400000
*        By default, the WAST is defined as BASED.  Normal use will     02450000
*        place this upon another variable -                             02500000
*            (for example,  "RFY WAST BASED(ADDR(OasbExitStatus))").    02550000
*        If a local variable is desired, use %WASTBASE='LOCAL'.         02600000
*                                                                       02650000
*02*   ASM:                                                             02700000
*        With DSECT=NO, storage is allocated in line                    02750000
*        and addressability is provided thru that DSECT or CSECT.       02800000
*        With DSECT=YES, a DSECT is produced and "USING WAST,reg"       02850000
*        is required for addressability.  Here "reg" contains the       02900000
*        address of WAST#LENGTH bytes of storage.                       02950000
*        The default is DSECT=YES.                                      03000000
*                                                                       03050000
*01* SIZE: WAST#LENGTH = 4 bytes                                        03100000
*                                                                       03150000
*01* POINTED TO BY: Local variable, RFY or USING.                       03200000
*                                                                       03250000
*01* CREATED BY: N/A                                                    03300000
*                                                                       03350000
*01* DELETED BY: N/A                                                    03400000
*                                                                       03450000
*01* STORAGE ATTRIBUTES:                                                03500000
*02*   SUBPOOL/DATASPACE:  N/A                                          03550000
*02*   KEY:                N/A                                          03600000
*02*   RESIDENCY:          N/A                                          03650000
*                                                                       03700000
*01* FREQUENCY: N/A                                                     03750000
*                                                                       03800000
*01* SERIALIZATION: N/A                                                 03850000
*                                                                       03900000
*01* DEPENDENCIES: None                                                 03950000
*                                                                       04000000
*01* NOTES:                                                             04050000
*   The conforming status values mapped by BPXYWAST that can be         04100000
*   specified on the BPX1EXI and BPX1MPC system calls and which         04150000
*   will then be received by the BPX1WAT system call are as             04200000
*   follows:                                                            04250000
*                                                                       04300000
*     x'0000xx00'  - Indicates the child process ended due to a normal  04350000
*                    or abnormal end of the process with a status code  04400000
*                    indicated as xx.  xx can be any value.             04450000
*     x'000000yy'  - Indicates the child process ended due to a         04500000
*                    terminating signal that was detected with          04550000
*                    a signal number of yy.  yy must be a valid signal  04600000
*                    number.                                            04650000
*                                                                       04700000
*01* COMPONENT: OpenMVS (SCPX1)                                         04750000
*                                                                       04800000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     04850000
*                                                                       04900000
*01* EYE-CATCHER: None                                                  04950000
*                                                                       05000000
*01* CHANGE-ACTIVITY:                                                   05050000
* $L0=POSIXXP  HOM1110 921201 PDJM: OpenMVS Initial Release             05100000
* $P1=PL70386  HOM1110 921201 PDI6: Remove extra CL4 from Asm           05150000
* $D1=DL70019  HOM1110 921201 PDJM: Assembler macro fixup               05200000
* $P2=PL70597  HOM1110 930104 PDJM: Use "OpenMVS"                       05250000
* $L1=DOAA006  HOM1120 930310 PDI6: OpenMVS Multi-Process Support       05300000
* $D2=DOAA003  HOM1120 930915 PDPE: DCR A003.02 Generic Debugger        05350000
*                                   Interface                           05400000
* $D3=DPFA065  HOM1130 940627 PDEA: DCR A065.06 Wait Extension          05450000
* $D4=DPFA051  HOM1130 941129 PDI6: DCR A051.19 LoadHFS Support         05500000
****END OF SPECIFICATIONS*********************************************/ 05550000
*        %GOTO WASTPLS  ;         /* Bilingual header                   05600000
.A411    ANOP  ,                                                        05650000
** BPXYWAST: Wait status word                                           05700000
**  Used By: EXI MPC WAT                                                05750000
         AIF   ('&DSECT' EQ 'NO').B411                        7@D1A     05800000
WAST                 DSECT ,                                            05850000
         AGO   .C411                                                    05900000
.B411    ANOP  ,                                                        05950000
WAST                 DS    0F                                           06000000
.C411    ANOP  ,                                                        06050000
                     DS    XL2    Reserved - set to zeros               06100000
WASTEXITSTATUS       DS    0XL2   Exit Status value passed on the       06150000
*                                 BPX1EXI or BPX1MPC system calls       06200000
WASTEXITCODE         DS    0XL1   Exit return code for ending process   06250000
WASTSIGSTOP          DS    XL1    Signal that stopped process           06300000
WASTSIGTERM          DS    0XL1   Signal that terminated process        06350000
WASTSTOPFLAG         DS    XL1    Special flag value that qualifies the 06400000
*                                 reason for the process being stopped  06450000
*                                 or if the process is continued        06500000
*                                 from stop, the value would be         06550000
*                                 set to WastStopFlagContinued    @D3C  06600000
* * WASTSTOPFLAG Values * * * * * * * * * * * * * * * * * * * * * * *   06650000
WASTDUMP             EQU   X'80'  Bit 0 of WASTSTOPFLAG on, a core dump 06700000
*                                 was taken when the process terminated 06750000
WASTSTOPFLAGSIG      EQU   X'7F'  Process stopped for a signal          06800000
WASTSTOPFLAGFORK     EQU   X'7E'  Process stopped for a fork            06850000
WASTSTOPFLAGEXEC     EQU   X'7D'  Process stopped for an exec           06900000
WASTSTOPFLAGLOCALFORK EQU  X'7B'  Process stopped for a local fork @L1C 06950000
WASTSTOPFLAGEXTENDED EQU   X'7A'  Process stopped for extended event    07000000
*                                                                  @D2A 07050000
WASTSTOPFLAGCONTINUED EQU  X'79'  Process continued from stop      @D3A 07100000
WASTSTOPFLAGLOAD     EQU   X'78'  Process stopped for a loadHFS    @D4A 07150000
WASTSTOPFLAGDELETE   EQU   X'77'  Process stopped for a deleteHFS  @D4A 07200000
                     SPACE ,                                            07250000
WAST#LENGTH          EQU   *-WAST Length of this structure              07300000
** BPXYWAST End                                                         07350000
         SPACE 3                                                        07400000
         AIF   ('&LIST' EQ 'YES').E411                        6@D1A     07450000
         POP   PRINT                                                    07500000
.E411    ANOP  ,                                                        07550000
         MEND                                                           07600000
* Terminating PL/X comment                                          */  07650000
*%WASTPLS : ;                                                           07700000
*%IF WASTBASE='' %THEN                                                  07750000
*  %DO;                                                                 07800000
*    %WASTBASE='Based' ;                                                07850000
*  %END;                                                                07900000
* %IF WASTBASE='LOCAL' %THEN                                            07950000
*   %DO;                                                                08000000
*    %WASTBASE='FIXED(32) Bdy(Word)' ;                                  08050000
*   %END;                                                               08100000
*Declare                         /* Mapping of wait() return status  */ 08150000
*1    WAST             WASTBASE,                                        08200000
* 3   *                BIT(16),  /* Reserved                         */ 08250000
* 3   WastExitStatus   BIT(16),  /* Exit status value passed on the     08300000
*                                   BPX1EXI or BPX1MPC system calls  */ 08350000
*  5  WastExitCode     BIT(8),   /* Exit return code for the ending     08400000
*                                   process                          */ 08450000
*   7 WastSigStop      BIT(8),   /* Signal number that stopped          08500000
*                                   the process.                     */ 08550000
*  5  WastSigTerm      BIT(8),   /* Signal number that terminated       08600000
*                                   the process.                     */ 08650000
*   7 WastStopFlag     BIT(8),   /* Special flag value that qualifies   08700000
*                                   the reason for the process being    08750000
*                                   stopped (see constants below)       08800000
*                                   or if the process is continued      08850000
*                                   from stop, the value would be       08900000
*                                   set to WastStopFlagContinued @D3C*/ 08950000
*    9 WastDump        BIT(1);   /* 1=a core dump was taken when the    09000000
*                                   process terminated.              */ 09050000
*Declare                         /* WastStopFLag values              */ 09100000
*     WastStopFlagSig  Bit(8)  CONSTANT('7F'X),  /*                     09150000
*                                   Process stopped for a signal     */ 09200000
*     WastStopFlagFork Bit(8)  CONSTANT('7E'X),  /*                     09250000
*                                   Process stopped for a fork       */ 09300000
*     WastStopFlagExec Bit(8)  CONSTANT('7D'X),  /*                     09350000
*                                   Process stopped for a exec       */ 09400000
*     WastNoStatus     Bit(8)  CONSTANT('7C'X),  /*                     09450000
*                                   No status has been stored        */ 09500000
*     WastStopFlagLocalFork Bit(8)  CONSTANT('7B'X),  /*                09550000
*                                   Process stopped for a Local fork    09600000
*                                                                @L1C*/ 09650000
*     WastStopFlagExtended  Bit(8)  CONSTANT('7A'X),  /*                09700000
*                                   Process stopped for extended event  09750000
*                                                                @D2A*/ 09800000
*     WastStopFlagContinued Bit(8)  CONSTANT('79'X),   /*               09850000
*                                   Process continued from stop  @D3A*/ 09900000
*     WastStopFlagLoad      Bit(8)  Constant('78'x),   /*               09950000
*                                   Process stopped for LoadHFS  @D4A*/ 10000000
*     WastStopFlagDelete    Bit(8)  Constant('77'x);   /*               10050000
*                                   Process stopped for DeleteHFS @D4A*/10100000
