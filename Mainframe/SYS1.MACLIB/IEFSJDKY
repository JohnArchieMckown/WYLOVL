* % IEFSJDKY: MACRO KEYS(PRFX,INFORET,UNALLOC);                         00050000
*/** START OF SPECIFICATIONS *****************************************/ 00100000
*/*                                                                  */ 00300000
*/*    MACRO NAME = IEFSJDKY                                     @P4C*/ 00350000
*/*                                                                  */ 00400000
*/*    DESCRIPTIVE NAME = Scheduler JCL Facility (SJF) /             */ 00450000
*/*                       Dynamic Allocation keys                    */ 00500000
*/*                                                                  */ 00550000
*/*01* PROPRIETARY STATEMENT=                                        */ 00600000
*/***PROPRIETARY_STATEMENT********************************************/ 00650000
*/*                                                                  */ 00900000
*/*                                                                  */ 00971000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00974200
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00977400
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1987, 1999                      */ 00982200
*/*                                                                  */ 00987000
*/* STATUS= JBB6607                                                  */ 00990200
*/*                                                                  */ 00993400
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00996700
*/*                                                                  */ 01000000
*/*    FUNCTION = This macro provides the constants for JDT defined  */ 01050000
*/*               keywords needed by the caller of Dynamic           */ 01100000
*/*               Allocation.                                        */ 01150000
*/*                                                                  */ 01158300
*/*01* EXTERNAL CLASSIFICATION:                                  @L6A*/ 01166600
*/*02* DMTI: BASE                                                @L6A*/ 01174900
*/*02* GUPI: INCLUDE                                             @L6A*/ 01183200
*/*01* END OF EXTERNAL CLASSIFICATION:                           @L6A*/ 01191500
*/*                                                                  */ 01200000
*/*    NOTES =                                                   @L3A*/ 01202700
*/*                                                              @L3A*/ 01205400
*/*        Bilingual Mapping Macro (PL/AS and BAL)               @L3A*/ 01208100
*/*                                                              @L3A*/ 01210800
*/*        Any new JDT defined DD keyword should be defined in this  */ 01213500
*/*        mapping in order to allow both IEFZB4D2 and IEFSJKEY to   */ 01216200
*/*        include this.                                         @L3M*/ 01218900
*/*                                                                  */ 01219900
*/*        Review any new key added to this macro to determine   @L6A*/ 01220900
*/*        if it should be listed in IEFSJKEY as a PSPI key.     @L6A*/ 01221900
*/*                                                                  */ 01222900
*/*        There are three separate definition sections for the  @L3A*/ 01224300
*/*        keys in this macro:                                   @L3A*/ 01227000
*/*          Allocation   -  x'8000' range; default list; 'SJVL' @L3A*/ 01229700
*/*                          mask indicators are displayed only  @L3A*/ 01232400
*/*                          with this set (see PRFX keyword).   @L3A*/ 01235100
*/*          Retrieval    -  x'C000' range                       @L3A*/ 01237800
*/*          Unallocation -  x'8000' range, but specially        @L3A*/ 01240500
*/*                          defined by Allocation component     @L3A*/ 01243200
*/*          Retrieval Input - x'8000' range, but specially      @L4A*/ 01244100
*/*                          defined by Allocation component     @L4A*/ 01245000
*/*                                                                  */ 01245900
*/*    MODULE TYPE = MACRO                                           */ 01250000
*/*                                                                  */ 01300000
*/*    INVOCATION =                                                  */ 01350000
*/*                                                                  */ 01400000
*/*        PL/S -                                                    */ 01450000
*/* ?IEFSJDKY PRFX(1 to 4 chars) INFORET(YES|NO) UNALLOC(YES|NO) @L3C*/ 01500000
*/*                                                                  */ 01700000
*/*           PL/S invokers must include the EPILOG macro.       @L3A*/ 01725000
*/*           The invoker of the IEFSJDKY macro may wish to      @L3A*/ 01750000
*/*           avoid using a line comment with the macro          @L3A*/ 01775000
*/*           invocation because the comment will appear after   @L3A*/ 01800000
*/*           the key definitions.                               @L3A*/ 01825000
*/*                                                                  */ 01850000
*/*        BAL  -                                                    */ 01883300
*/* IEFSJDKY PRFX= 1 to 4 chars, INFORET=YES|NO, UNALLOC=YES|NO  @L3C*/ 01916600
*/*                                                                  */ 01950000
*/*    PARAMETER DESCRIPTION =                                   @L3A*/ 02000000
*/*                                                                  */ 02150000
*/*      PARAMETER = PRFX                                        @L3A*/ 02200000
*/*                                                                  */ 02250000
*/*        DESCRIPTION = Specifies 1 to 4 characters that will   @L3A*/ 02250700
*/*                      be used as the first characters of the  @L3A*/ 02251400
*/*                      labels defined in this macro.  When     @L3A*/ 02252100
*/*                      PRFX is specified as something other    @L3A*/ 02252800
*/*                      than 'SJKY', the 'SJVL' mask indicators @L3A*/ 02253500
*/*                      are not expanded.                       @L3A*/ 02254200
*/*                      When PRFX is specified as 'DIN' and     @L4A*/ 02254300
*/*                      INFORET is specified as 'YES', the      @L4A*/ 02254400
*/*                      keys that can be used to supply input   @L4A*/ 02254500
*/*                      to Information Retrieval will be        @L4A*/ 02254600
*/*                      generated.                              @L4A*/ 02254700
*/*                                                                  */ 02254800
*/*                                                                  */ 02254900
*/*        TYPE = Keyword                                        @L3A*/ 02255600
*/*                                                                  */ 02256300
*/*        FORM = 1 to 4 character constant                      @L3A*/ 02257000
*/*                                                                  */ 02257700
*/*        DEFAULT = SJKY                                        @L3A*/ 02258400
*/*                                                                  */ 02259100
*/*      PARAMETER = INFORET                                     @L3A*/ 02259800
*/*                                                                  */ 02260500
*/*        DESCRIPTION = Specifies whether or not the retrieval  @L3A*/ 02261200
*/*                      form of the keys (x'C000' range) be     @L3A*/ 02261900
*/*                      used.  When INFORET is specified as     @L4C*/ 02262100
*/*                      'YES' and PRFX is specified as 'DIN'    @L4A*/ 02262300
*/*                      the Information Retrieval input keys    @L4A*/ 02262500
*/*                      will be generated (x'8000' range).      @L4A*/ 02262700
*/*                                                                  */ 02263300
*/*        TYPE = Keyword                                        @L3A*/ 02264000
*/*                                                                  */ 02264700
*/*        FORM = Character value 'YES' to get retrieval keys,   @L3A*/ 02265400
*/*               or 'NO' to get default allocation keys or      @L3A*/ 02266100
*/*               another specified set.                         @L3A*/ 02266800
*/*                                                                  */ 02267500
*/*        DEFAULT = NO                                          @L3A*/ 02268200
*/*                                                                  */ 02268900
*/*      PARAMETER = UNALLOC                                     @L3A*/ 02269600
*/*                                                                  */ 02270300
*/*        DESCRIPTION = Specifies whether or not the            @L3A*/ 02271000
*/*                      unallocation set of keys (x'8000'       @L3A*/ 02271700
*/*                      range) defined by Allocation component  @L3A*/ 02272400
*/*                      be used.                                @L3A*/ 02273100
*/*                                                                  */ 02273800
*/*        TYPE = Keyword                                        @L3A*/ 02274500
*/*                                                                  */ 02275200
*/*        FORM = Character value 'YES' to get unallocation keys,@L3A*/ 02275900
*/*               or 'NO' to get default allocation keys or      @L3A*/ 02276600
*/*               another specified set.                         @L3A*/ 02277300
*/*                                                                  */ 02278000
*/*        DEFAULT = NO                                          @L3A*/ 02278700
*/*                                                                  */ 02279400
*/*    PARAMETER INTERDEPENDENCIES =                             @L3A*/ 02280100
*/*           - PRFX may be specified with either of the other   @L3A*/ 02280800
*/*             two keywords.                                    @L3A*/ 02281500
*/*           - INFORET and UNALLOC may both be specified, but   @L3A*/ 02282200
*/*             only if both do not indicate YES.                @L3A*/ 02282900
*/*           - To generate the Information Retrieval input      @L4A*/ 02283000
*/*             keys, INFORET must be specified as 'YES' and     @L4A*/ 02283100
*/*             PRFX must be specified as 'DIN'.                 @L4A*/ 02283200
*/*                                                                  */ 02283300
*/*    RESTRICTIONS =                                            @L4A*/ 02283400
*/*           - The information retrieval input keys (generated  @L4A*/ 02283500
*/*             when INFORET=YES and PRFX=DIN) will generate     @L4A*/ 02283600
*/*             some 8 character constant names.  This means     @L4A*/ 02283700
*/*             that if the caller specifies a prefix longer     @L4A*/ 02283800
*/*             than 3 characters, constants longer than 8       @L4A*/ 02283900
*/*             characters will be generated.                    @L4A*/ 02284000
*/*                                                                  */ 02284100
*/*    DSECT NAME = None                                         @P4A*/ 02284200
*/*                                                                  */ 02284300
*/*    EYE CATCHER = None                                        @P4A*/ 02284400
*/*     OFFSET = N/A                                             @P4A*/ 02284500
*/*     LENGTH = N/A                                             @P4A*/ 02284600
*/*                                                                  */ 02284700
*/*    CREATED BY = N/A                                          @L3A*/ 02284800
*/*                                                                  */ 02285000
*/*    POINTED TO BY = N/A                                       @L3A*/ 02285700
*/*                                                                  */ 02286400
*/*    DELETED BY = N/A                                          @L3A*/ 02287100
*/*                                                                  */ 02287800
*/*    SERIALIZATION = None                                      @L3A*/ 02288500
*/*                                                                  */ 02289200
*/*    STORAGE ATTRIBUTES = None                                 @P4C*/ 02289300
*/*                                                                  */ 02289400
*/*      ALLOCATION METHOD = N/A                                 @P4A*/ 02289500
*/*      SUBPOOL           = N/A                                 @P4A*/ 02289600
*/*      KEY               = N/A                                 @P4A*/ 02289700
*/*      RESIDENCY         = N/A                                 @P4A*/ 02289800
*/*      SIZE              = N/A                                 @P4A*/ 02289900
*/*      FREQUENCY         = N/A                                 @P4A*/ 02290000
*/*                                                                  */ 02290600
*/*    COMPONENT =  Scheduler JCL Facility (BB131)               @L6C*/ 02291300
*/*                                                                  */ 02292000
*/*    DISTRIBUTION LIBRARY = AMACLIB                            @L3A*/ 02292700
*/*                                                                  */ 02293400
*/*    MESSAGES =                                                @L3A*/ 02294100
*/*   MNOTE 12,'AHA0010 IEFSJDKY ERROR:  INFORET=YES AND UNALLOC=YES */ 02294800
*/*             ARE MUTUALLY EXCLUSIVE.'                         @L3A*/ 02295500
*/*                                                                  */ 02296200
*/*    CHANGE ACTIVITY = L0,P1,P2,L1,D1,L2,L3,L4,D2,01,L5,L6     @L6C*/ 02296900
*/*                                                                  */ 02297600
*/* $L0= SMSSTG2 JBB2223 870520 PDN4: STOR MGMT SUBSYS STG2 SUPT @L0A*/ 02300000
*/* $P1= PC20266 JBB2223 870520 PDN4: STOR MGMT SUBSYS STG2 SUPT @P1A*/ 02325000
*/* $P2= PC20307 JBB2223 870629 PDN4: STOR MGMT SUBSYS STG2 SUPT @P2A*/ 02350000
*/* $L1= ILIBS   JBB3311 880302 PDJY: ILIB Support               @L1A*/ 02375000
*/* $D1= DCR0018 JBB3313 880809 PDY1: Add CNTL                   @D1A*/ 02383300
*/* $P3= PGP0139 JBB3313 881215 PDY1: PTM 139                    @P3A*/ 02391600
*/* $L2= EMVS2   HBB4410 880905 PDKK: Enterprise II - ESI        @L2A*/ 02394400
*/* $L3= EMVS2   HBB4410 881216 PDZ1: Enterprise II - ESI        @L3A*/ 02397200
*/* $L4= POSIX   HBB4430 911028 PDCL: OPEN/MVS Support           @L4A*/ 02398600
*/* $D2= DKB0084 HBB4430 920429 PDCL: OPEN/MVS Support           @D2A*/ 02399300
*/* $01= OW02403 HBB5510 940225 PDH1: OPEN/MVS Support           @01A*/ 02399400
*/* $L5= SDSHS   HBB5520 930920 PDCL: VSAM RLS Support           @L5A*/ 02399600
*/* $L6= UU      JBB5522 950622 PDBN: xSAM access to HFS         @L6A*/ 02399800
*/* $02= OW24652 HBB4430 970528 PDRR: LGSTREAM Support           @02A*/ 02399900
*/* $P4= PVT0160 HBB6606 970131 PDDH: SHOWHDR Compliance         @P4A*/ 02408200
*/* $03= OW32524 JBB6607 980501 PDDH: Planform 1728/1780 Support @03A*/ 02420700
*/* $04= OW44540 HBB7703 000501 PDOH: BLKSZLIM Support           @04A*/ 02426700
*/*                                                                  */ 02433300
*/** END OF SPECIFICATIONS *******************************************/ 02450000
*/* A 000000-999999                                              @L0A*/ 02500000
*/* C Eliminated branch to labels, to avoid duplicate labels     @P1A*/ 02500400
*/*   when invoked twice in the same module                      @P1A*/ 02500800
*/* C Changed to an executable macro, since DO/END statements    @P2A*/ 02501200
*/*   are not allowed in non-executable macros in a PLS3         @P2A*/ 02501600
*/*   environment                                                @P2A*/ 02502000
*/* A Support for new DSNTYPE keyword                            @L1A*/ 02502400
*/* A Add CNTL key                                               @D1A*/ 02502600
*/* D Deleted duplicated lines from rebase                       @P3A*/ 02502800
*/* A Support for new SPIN and SEGMENT Keywords                  @L2A*/ 02503600
*/* A Support for the UNALLOC request on the invocation.         @L3A*/ 02504400
*/* A Support for PATHOPTS, PATHMODE, PATH, PATHDISP keywords    @L4A*/ 02504600
*/* A Support for PIPE and HFS on DSNTYPE keyword                @L4A*/ 02504800
*/* C Changed constant definitions for SJVLRDON and SJVLWDON     @D2A*/ 02504900
*/*   on the PATHOPTS keyword                                    @D2A*/ 02505000
*/* A Support for OSYNC on PATHOPTS keyword                      @01A*/ 02505200
*/* A Added definition of the RLS keyword                        @L5A*/ 02505400
*/* A Defined FILEDATA keyword and external classification.      @L6A*/ 02505500
*/* A Added definition of the LGSTREAM Keyword                   @02A*/ 02505600
*/* A Added SHOWHDR details in prologue                          @P4A*/ 02505700
*/* A Added definition of the RLS=CRE option                     @03A*/ 02505800
*/* A Added definition of the CCSID Keyword                      @03A*/ 02505900
*/* A Added definition of the BLKSZLIM Keyword.                  @04A*/ 02505950
*/*******************************************************************/  02506000
*/*                                                                 */  02506100
*/*  Declaration of external macro variables                        */  02506300
*/*                                                                 */  02506600
*/**************************************************************@L3A*/  02506900
*                                                                       02507200
*DCL EHARC FIXED EXT;             /* Return code                @L3A*/  02507500
*                                                                       02507800
*EHARC=0;                         /* Initialize the return code @L3A*/  02508100
*/*******************************************************************/  02508400
*/*                                                                 */  02508700
*/*  Declaration of internal macro variables                        */  02509000
*/*                                                                 */  02512000
*/*******************************************************************/  02515000
*DCL ICOMCOL FIXED;                   /* Beginning column for           02518000
*                                        comments                   */  02521000
*DCL PREFIX CHAR;                     /* Prefix for variable name       02524000
*                                        of key declares            */  02527000
*DCL WHICHKEYS CHAR;                  /* Variable to indicate which     02527700
*                                        set of keys to process @L3A*/  02528400
*DCL IERRMSG CHAR;                    /* Error message          @L3A*/  02529100
*/********************************************************************/ 02530000
*/*                                                                  */ 02533000
*/* Initialize macro variables                                       */ 02536000
*/*                                                                  */ 02539000
*/********************************************************************/ 02542000
*ICOMCOL=MACRMAR-35;                  /* Set comment column         */  02545000
* IF NUMBER(PRFX) = 0 THEN PREFIX = 'SJKY';                             02548000
*  ELSE PREFIX = PRFX(1);                                               02551000
*/********************************************************************/ 02554000
*/*                                                                  */ 02557000
*/*          KEY CONSTANTS FOR 'DD'                                  */ 02560000
*/*                                                                  */ 02563000
*/********************************************************************/ 02566000
* IF ((NUMBER(UNALLOC)^=0) & (UNALLOC(1)='YES')) &                      02566100
*    ((NUMBER(INFORET)^=0) & (INFORET(1)='YES')) THEN                   02566200
*    WHICHKEYS = 'OVERONE';                               /*     @L3A*/ 02566300
*  ELSE                                                   /*     @L3A*/ 02566400
*    IF (NUMBER(INFORET)^=0) & (INFORET(1)='YES')  THEN                 02566500
*       WHICHKEYS = 'INFORET';                            /*     @L3A*/ 02566600
*     ELSE                                                /*     @L3A*/ 02566700
*       IF (NUMBER(UNALLOC)^=0) & (UNALLOC(1)='YES')  THEN              02566800
*          WHICHKEYS = 'UNALLOC';                         /*     @L3A*/ 02566900
*        ELSE                                             /*     @L3A*/ 02567000
*          WHICHKEYS = 'ALLOC';                           /*     @L3A*/ 02567100
* IF (WHICHKEYS = 'OVERONE') THEN DO; /* Mutual exclusive combo. @L3A*/ 02567200
*    EHARC = 12;                  /* Set error return code       @L3A*/ 02567300
*    IERRMSG = 'AHA0010 IEFSJDKY ERROR:  INFORET=YES AND ' ||           02567400
*              'UNALLOC=YES ARE MUTUALLY EXCLUSIVE.'; /* Prime          02567500
*                                                  message area  @L3A*/ 02567600
*    ANSWER MSG(IERRMSG) NORESCAN;  /* Put out message           @L3A*/ 02567700
*    ANSWER(COMMENT(IERRMSG)) COLUMN(10) NORESCAN;        /*     @L3A*/ 02567800
*    END;                         /* End mutual exclusive combo. @L3A*/ 02567900
*  ELSE                                                   /*     @L3A*/ 02568000
*   IF (WHICHKEYS = 'INFORET') THEN  DO;  /* Info retrieval keys @L3A*/ 02568100
*    IF (PREFIX = 'DIN') THEN        /* Prefix for info retrieval       02568200
*                                       input keys specified     @L4A*/ 02568300
*     DO;                  /* Generate info retrieval input keys @L4A*/ 02568400
*      ANSWER(COMMENT('SJF DD INFORMATION RETRIEVAL INPUT KEYS'))       02568500
*        COLUMN(MACCOL+2) NORESCAN; /* Generate comment line     @L4A*/ 02568600
*      ANSWER('DCL '||PREFIX||'PATH BIT(16) CONSTANT(''8017''X);')      02568700
*        COLUMN(MACCOL+2) NORESCAN; /* Generate PATH key         @L4A*/ 02568800
*      ANSWER(COMMENT('PATH')) COLUMN(ICOMCOL) NORESCAN; /* Generate    02568900
*                                             comment line       @L4A*/ 02569000
*                                                                       02569100
*     END;                 /* Generate info retrieval input keys @L4A*/ 02569200
*    ELSE                  /* Prefix not specified as 'DIN'      @L4A*/ 02569300
*     DO;                  /* Generate info retrieval keys       @L4A*/ 02569400
*ANSWER(COMMENT('SJF DD INFORMATION RETRIEVAL KEYS'))                   02569500
*   COLUMN(MACCOL+2) NORESCAN;                             /*    @L3A*/ 02569600
*ANSWER('DCL '||PREFIX||'CNTL BIT(16) CONSTANT(''C003''X);')            02569700
*   COLUMN(MACCOL+2) NORESCAN;         /*                        @D1A*/ 02570400
*ANSWER(COMMENT('CNTL')) COLUMN(ICOMCOL) NORESCAN; /*            @D1A*/ 02571100
*ANSWER('DCL '||PREFIX||'STCL BIT(16) CONSTANT(''C004''X);')            02572000
*   COLUMN(MACCOL+2) NORESCAN;                                          02575000
*ANSWER(COMMENT('STORCLAS')) COLUMN(ICOMCOL) NORESCAN;                  02578000
*ANSWER('DCL '||PREFIX||'MGCL BIT(16) CONSTANT(''C005''X);')            02581000
*   COLUMN(MACCOL+2) NORESCAN;                                          02584000
*ANSWER(COMMENT('MGMTCLAS')) COLUMN(ICOMCOL) NORESCAN;                  02587000
*ANSWER('DCL '||PREFIX||'DACL BIT(16) CONSTANT(''C006''X);')            02590000
*   COLUMN(MACCOL+2) NORESCAN;                                          02593000
*ANSWER(COMMENT('DATACLAS')) COLUMN(ICOMCOL) NORESCAN;                  02596000
*ANSWER('DCL '||PREFIX||'RECO BIT(16) CONSTANT(''C00B''X);')            02599000
*   COLUMN(MACCOL+2) NORESCAN;                                          02602000
*ANSWER(COMMENT('RECORG')) COLUMN(ICOMCOL) NORESCAN;                    02605000
*ANSWER('DCL '||PREFIX||'KEYO BIT(16) CONSTANT(''C00C''X);')            02608000
*   COLUMN(MACCOL+2) NORESCAN;                                          02611000
*ANSWER(COMMENT('KEYOFF')) COLUMN(ICOMCOL) NORESCAN;                    02614000
*ANSWER('DCL '||PREFIX||'REFD BIT(16) CONSTANT(''C00D''X);')            02617000
*   COLUMN(MACCOL+2) NORESCAN;                                          02620000
*ANSWER(COMMENT('REFDD')) COLUMN(ICOMCOL) NORESCAN;                     02623000
*ANSWER('DCL '||PREFIX||'SECM BIT(16) CONSTANT(''C00E''X);')            02626000
*   COLUMN(MACCOL+2) NORESCAN;                                          02629000
*ANSWER(COMMENT('SECMODEL')) COLUMN(ICOMCOL) NORESCAN;                  02632000
*ANSWER('DCL '||PREFIX||'LIKE BIT(16) CONSTANT(''C00F''X);')            02635000
*   COLUMN(MACCOL+2) NORESCAN;                                          02638000
*ANSWER(COMMENT('LIKE')) COLUMN(ICOMCOL) NORESCAN;                      02641000
*ANSWER('DCL '||PREFIX||'AVGR BIT(16) CONSTANT(''C010''X);')            02644000
*   COLUMN(MACCOL+2) NORESCAN;                                          02647000
*ANSWER(COMMENT('AVGREC')) COLUMN(ICOMCOL) NORESCAN;                    02650000
*ANSWER('DCL '||PREFIX||'DSNT BIT(16) CONSTANT(''C012''X);')            02650700
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L1A*/ 02651400
*ANSWER(COMMENT('DSNTYPE')) COLUMN(ICOMCOL) NORESCAN;     /*     @L1A*/ 02652100
*ANSWER('DCL '||PREFIX||'SPIN BIT(16) CONSTANT(''C013''X);')            02652200
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L2A*/ 02652300
*ANSWER(COMMENT('SPIN'))    COLUMN(ICOMCOL) NORESCAN;     /*     @L2A*/ 02652400
*ANSWER('DCL '||PREFIX||'SEGM BIT(16) CONSTANT(''C014''X);')            02652500
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L2A*/ 02652600
*ANSWER(COMMENT('SEGMENT')) COLUMN(ICOMCOL) NORESCAN;     /*     @L2A*/ 02652700
*                                                                       02652800
*ANSWER('DCL '||PREFIX||'PATH BIT(16) CONSTANT(''C017''X);')            02652900
*   COLUMN(MACCOL+2) NORESCAN;  /* Generate PATH key             @L4A*/ 02653000
*ANSWER(COMMENT('PATH')) COLUMN(ICOMCOL) NORESCAN; /* Generate          02653100
*                                                  PATH comment  @L4A*/ 02653200
*                                                                       02653300
*ANSWER('DCL '||PREFIX||'POPT BIT(16) CONSTANT(''C018''X);')            02653400
*   COLUMN(MACCOL+2) NORESCAN;  /* Generate PATHOPTS key         @L4A*/ 02653500
*ANSWER(COMMENT('PATHOPTS')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02653600
*                                              PATHOPTS comment  @L4A*/ 02653700
*                                                                       02653800
*ANSWER('DCL '||PREFIX||'PMDE BIT(16) CONSTANT(''C019''X);')            02653900
*   COLUMN(MACCOL+2) NORESCAN;  /* Generate PATHMODE key         @L4A*/ 02654000
*ANSWER(COMMENT('PATHMODE')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02654100
*                                              PATHMODE comment  @L4A*/ 02654200
*                                                                       02654300
*ANSWER('DCL '||PREFIX||'PNDS BIT(16) CONSTANT(''C01A''X);')            02654400
*   COLUMN(MACCOL+2) NORESCAN;       /* Generate PATHDISP key for       02654500
*                                       normal disposition       @L4A*/ 02654600
*ANSWER(COMMENT('PATHDISP - Normal disposition')) COLUMN(ICOMCOL)       02654700
*   NORESCAN;             /* Generate normal disposition comment @L4A*/ 02654800
*                                                                       02654900
*ANSWER('DCL '||PREFIX||'PCDS BIT(16) CONSTANT(''C01B''X);')            02655000
*   COLUMN(MACCOL+2) NORESCAN;       /* Generate PATHDISP key for       02655100
*                                       conditional disposition  @L4A*/ 02655200
*ANSWER(COMMENT('PATHDISP - Conditional disposition')) COLUMN(ICOMCOL)  02655300
*   NORESCAN;        /* Generate conditional disposition comment @L4A*/ 02655400
*                                                                       02655500
*ANSWER('DCL '||PREFIX||'FDAT BIT(16) CONSTANT(''C01D''X);')            02655600
*   COLUMN(MACCOL+2) NORESCAN;       /* Generate FILEDATA key    @L6A*/ 02655700
*ANSWER(COMMENT('FILEDATA - File organization')) COLUMN(ICOMCOL)        02655800
*   NORESCAN;        /* Generate FILEDATA comment                @L6A*/ 02655900
*                                                                       02656000
*ANSWER SKIP;                                             /*     @L3A*/ 02656100
*     END;                 /* Generate info retrieval keys       @L4A*/ 02656200
*    END;                             /* End info retrieval keys @L3A*/ 02656300
*                                                                       02656400
*  ELSE                                                   /*     @L3A*/ 02656500
*    IF (WHICHKEYS = 'UNALLOC') THEN  DO; /* Unalloc keys        @L3A*/ 02656600
*ANSWER(COMMENT('SJF DD UNALLOCATION KEYS'))                            02656700
*   COLUMN(MACCOL+2) NORESCAN;                             /*    @L3A*/ 02656800
*ANSWER('DCL '||PREFIX||'SPIN BIT(16) CONSTANT(''8013''X);')            02656900
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L3A*/ 02657000
*ANSWER(COMMENT('SPIN'))    COLUMN(ICOMCOL) NORESCAN;     /*     @L3A*/ 02657100
*IF PREFIX='SJKY' THEN DO;                                /*     @L3A*/ 02657200
*ANSWER(COMMENT('Values for SPIN keyword')) COLUMN(MACCOL+2)            02657300
*NORESCAN;                                                /*     @L3A*/ 02657400
*ANSWER('DCL SJVLSPUN BIT(8) CONSTANT(''80''X);')                       02657500
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L3A*/ 02657600
*ANSWER(COMMENT('UNALLOC')) COLUMN(ICOMCOL) NORESCAN;     /*     @L3A*/ 02657700
*ANSWER('DCL SJVLSPNO BIT(8) CONSTANT(''40''X);')                       02657800
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L3A*/ 02657900
*ANSWER(COMMENT('NO'))  COLUMN(ICOMCOL) NORESCAN;         /*     @L3A*/ 02658000
*ANSWER SKIP;                                             /*     @L3A*/ 02658100
*END;                                                                   02658200
*                                                                       02658300
*ANSWER('DCL '||PREFIX||'PATH BIT(16) CONSTANT(''8017''X);')            02658400
*   COLUMN(MACCOL+2) NORESCAN;         /* Generate PATH key      @L4A*/ 02658500
*ANSWER(COMMENT('PATH'))    COLUMN(ICOMCOL) NORESCAN; /* Generate       02658600
*                                         PATH comment           @L4A*/ 02658700
*                                                                       02658800
*ANSWER('DCL '||PREFIX||'OVPDS BIT(16) CONSTANT(''801A''X);')           02658900
*   COLUMN(MACCOL+2) NORESCAN;         /* Generate PATHDISP for         02659000
*                                         override disposition   @L4A*/ 02659100
*ANSWER(COMMENT('PATHDISP - Override Disposition'))                     02659200
*  COLUMN(ICOMCOL) NORESCAN;              /* Generate comment for       02659300
*                                             override PATHDISP  @L4A*/ 02659400
*ANSWER SKIP;                                             /*     @L4A*/ 02659500
*IF PREFIX='SJKY' THEN         /* Check prefix to determine if          02659600
*                                 parameter constants needed     @L4A*/ 02659700
* DO;                          /* Generate parameter constants   @L4A*/ 02659800
*  ANSWER(COMMENT('Values for PATHDISP - Override Disposition'))        02659900
*   COLUMN(MACCOL+2) NORESCAN; /* Generate comment for constants @L4A*/ 02660000
*  ANSWER('DCL SJVLKEEP BIT(8) CONSTANT(''08''X);')                     02660100
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for KEEP     @L4A*/ 02660200
*  ANSWER(COMMENT('KEEP')) COLUMN(ICOMCOL) NORESCAN; /* Generate        02660300
*                                       comment for KEEP         @L4A*/ 02660400
*  ANSWER('DCL SJVLDELE BIT(8) CONSTANT(''04''X);')                     02660500
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for DELETE   @L4A*/ 02660600
*  ANSWER(COMMENT('DELETE')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02660700
*                                        comment for DELETE      @L4A*/ 02660800
* END;                         /* Generate parameter constants   @L4A*/ 02660900
*      END;                            /* End unalloc keys       @L3A*/ 02661000
*                                                                       02661100
*ELSE DO;                              /* Allocation keys        @L3A*/ 02661200
*ANSWER(COMMENT('SJF DD ALLOCATION KEYS'))                              02661300
*   COLUMN(MACCOL+2) NORESCAN;                             /*    @L3A*/ 02661400
*ANSWER('DCL '||PREFIX||'CNTL BIT(16) CONSTANT(''8003''X);')            02661500
*   COLUMN(MACCOL+2) NORESCAN;         /*                        @D1A*/ 02661600
*ANSWER(COMMENT('CNTL')) COLUMN(ICOMCOL) NORESCAN; /*            @D1A*/ 02661700
*ANSWER('DCL '||PREFIX||'STCL BIT(16) CONSTANT(''8004''X);')            02661800
*   COLUMN(MACCOL+2) NORESCAN;                                          02662000
*ANSWER(COMMENT('STORCLAS')) COLUMN(ICOMCOL) NORESCAN;                  02665000
*ANSWER('DCL '||PREFIX||'MGCL BIT(16) CONSTANT(''8005''X);')            02668000
*   COLUMN(MACCOL+2) NORESCAN;                                          02671000
*ANSWER(COMMENT('MGMTCLAS')) COLUMN(ICOMCOL) NORESCAN;                  02674000
*ANSWER('DCL '||PREFIX||'DACL BIT(16) CONSTANT(''8006''X);')            02677000
*   COLUMN(MACCOL+2) NORESCAN;                                          02680000
*ANSWER(COMMENT('DATACLAS')) COLUMN(ICOMCOL) NORESCAN;                  02683000
*ANSWER('DCL '||PREFIX||'RECO BIT(16) CONSTANT(''800B''X);')            02686000
*   COLUMN(MACCOL+2) NORESCAN;                                          02689000
*ANSWER(COMMENT('RECORG')) COLUMN(ICOMCOL) NORESCAN;                    02692000
*IF PREFIX='SJKY' THEN DO;                                              02695000
*ANSWER(COMMENT('Values for RECORG keyword')) COLUMN(MACCOL+2)          02698000
*NORESCAN;                                                              02701000
*ANSWER('DCL SJVLROKS BIT(8) CONSTANT(''80''X);')                       02704000
*   COLUMN(MACCOL+2) NORESCAN;                                          02707000
*ANSWER(COMMENT('KS - Key Sequence')) COLUMN(ICOMCOL) NORESCAN;         02710000
*ANSWER('DCL SJVLROES BIT(8) CONSTANT(''40''X);')                       02713000
*   COLUMN(MACCOL+2) NORESCAN;                                          02716000
*ANSWER(COMMENT('ES - Entry Sequence')) COLUMN(ICOMCOL) NORESCAN;       02719000
*ANSWER('DCL SJVLRORR BIT(8) CONSTANT(''20''X);')                       02722000
*   COLUMN(MACCOL+2) NORESCAN;                                          02725000
*ANSWER(COMMENT('RR - Relative Record')) COLUMN(ICOMCOL) NORESCAN;      02728000
*ANSWER('DCL SJVLROLS BIT(8) CONSTANT(''10''X);')                       02731000
*   COLUMN(MACCOL+2) NORESCAN;                                          02734000
*ANSWER(COMMENT('LS - Linear Space')) COLUMN(ICOMCOL) NORESCAN;         02737000
*END;                                                                   02740000
*ANSWER('DCL '||PREFIX||'KEYO BIT(16) CONSTANT(''800C''X);')            02741000
*   COLUMN(MACCOL+2) NORESCAN;                                          02742000
*ANSWER(COMMENT('KEYOFF')) COLUMN(ICOMCOL) NORESCAN;                    02743000
*ANSWER('DCL '||PREFIX||'REFD BIT(16) CONSTANT(''800D''X);')            02746000
*   COLUMN(MACCOL+2) NORESCAN;                                          02749000
*ANSWER(COMMENT('REFDD')) COLUMN(ICOMCOL) NORESCAN;                     02752000
*ANSWER('DCL '||PREFIX||'SECM BIT(16) CONSTANT(''800E''X);')            02755000
*   COLUMN(MACCOL+2) NORESCAN;                                          02758000
*ANSWER(COMMENT('SECMODEL')) COLUMN(ICOMCOL) NORESCAN;                  02761000
*IF PREFIX='SJKY' THEN DO;                                              02764000
*ANSWER(COMMENT('Values for SECMODEL keyword')) COLUMN(MACCOL+2)        02765000
*NORESCAN;                                                              02766000
*ANSWER('DCL SJVLGENR BIT(8) CONSTANT(''80''X);')                       02767000
*   COLUMN(MACCOL+2) NORESCAN;                                          02770000
*ANSWER(COMMENT('GENERIC option')) COLUMN(ICOMCOL) NORESCAN;            02773000
*END;                                                                   02776000
*ANSWER('DCL '||PREFIX||'LIKE BIT(16) CONSTANT(''800F''X);')            02779000
*   COLUMN(MACCOL+2) NORESCAN;                                          02782000
*ANSWER(COMMENT('LIKE')) COLUMN(ICOMCOL) NORESCAN;                      02785000
*ANSWER('DCL '||PREFIX||'AVGR BIT(16) CONSTANT(''8010''X);')            02788000
*   COLUMN(MACCOL+2) NORESCAN;                                          02791000
*ANSWER(COMMENT('AVGREC')) COLUMN(ICOMCOL) NORESCAN;                    02794000
*IF PREFIX='SJKY' THEN DO;                                              02797000
*ANSWER(COMMENT('Values for AVGREC keyword')) COLUMN(MACCOL+2)          02798000
*NORESCAN;                                                              02799000
*ANSWER('DCL SJVLARUN BIT(8) CONSTANT(''80''X);')                       02800000
*   COLUMN(MACCOL+2) NORESCAN;                                          02803000
*ANSWER(COMMENT('U - Unit (ie times 1)')) COLUMN(ICOMCOL) NORESCAN;     02806000
*ANSWER('DCL SJVLARKI BIT(8) CONSTANT(''40''X);')                       02809000
*   COLUMN(MACCOL+2) NORESCAN;                                          02812000
*ANSWER(COMMENT('K - Kilo (ie times 1000)')) COLUMN(ICOMCOL) NORESCAN;  02815000
*ANSWER('DCL SJVLARME BIT(8) CONSTANT(''20''X);')                       02818000
*   COLUMN(MACCOL+2) NORESCAN;                                          02821000
*ANSWER(COMMENT('M - Mega (ie times 1 million)')) COLUMN(ICOMCOL)       02824000
*NORESCAN;                                                              02827000
*END;                                                                   02830000
*ANSWER('DCL '||PREFIX||'DSNT BIT(16) CONSTANT(''8012''X);')            02830200
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L1A*/ 02830400
*ANSWER(COMMENT('DSNTYPE')) COLUMN(ICOMCOL) NORESCAN;     /*     @L1A*/ 02830600
*IF PREFIX='SJKY' THEN DO;                                /*     @L1A*/ 02830800
*ANSWER(COMMENT('Values for DSNTYPE keyword')) COLUMN(MACCOL+2)         02831000
*NORESCAN;                                                /*     @L1A*/ 02831200
*ANSWER('DCL SJVLDTLI BIT(8) CONSTANT(''80''X);')                       02831400
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L1A*/ 02831600
*ANSWER(COMMENT('LIBRARY')) COLUMN(ICOMCOL) NORESCAN;     /*     @L1A*/ 02831800
*ANSWER('DCL SJVLDTPD BIT(8) CONSTANT(''40''X);')                       02832000
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L1A*/ 02832200
*ANSWER(COMMENT('PDS')) COLUMN(ICOMCOL) NORESCAN;         /*     @L1A*/ 02832400
*ANSWER('DCL SJVLPIPE BIT(8) CONSTANT(''20''X);')                       02832500
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for PIPE     @L4A*/ 02832600
*ANSWER(COMMENT('PIPE')) COLUMN(ICOMCOL) NORESCAN; /* Generate          02832700
*                                              comment for PIPE  @L4A*/ 02832800
*ANSWER('DCL SJVLHFSI BIT(8) CONSTANT(''10''X);')                       02832900
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for HFS      @L4A*/ 02833000
*ANSWER(COMMENT('HFS')) COLUMN(ICOMCOL) NORESCAN; /* Generate           02833100
*                                              comment for HFS   @L4A*/ 02833200
*END;                                                                   02833300
*ANSWER('DCL '||PREFIX||'SPIN BIT(16) CONSTANT(''8013''X);')            02833400
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L2A*/ 02833500
*ANSWER(COMMENT('SPIN'))    COLUMN(ICOMCOL) NORESCAN;     /*     @L2A*/ 02833600
*IF PREFIX='SJKY' THEN DO;                                /*     @L2A*/ 02833700
*ANSWER(COMMENT('Values for SPIN keyword')) COLUMN(MACCOL+2)            02833800
*NORESCAN;                                                /*     @L2A*/ 02833900
*ANSWER('DCL SJVLSPUN BIT(8) CONSTANT(''80''X);')                       02834000
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L2A*/ 02834100
*ANSWER(COMMENT('UNALLOC')) COLUMN(ICOMCOL) NORESCAN;     /*     @L2A*/ 02834200
*ANSWER('DCL SJVLSPNO BIT(8) CONSTANT(''40''X);')                       02834300
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L2A*/ 02834400
*ANSWER(COMMENT('NO'))  COLUMN(ICOMCOL) NORESCAN;         /*     @L2A*/ 02834500
*END;                                                                   02834600
*ANSWER('DCL '||PREFIX||'SEGM BIT(16) CONSTANT(''8014''X);')            02834800
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @L2A*/ 02835100
*ANSWER(COMMENT('SEGMENT')) COLUMN(ICOMCOL) NORESCAN;     /*     @L2A*/ 02835400
*                                                                       02835500
*ANSWER('DCL '||PREFIX||'PATH BIT(16) CONSTANT(''8017''X);')            02835600
*   COLUMN(MACCOL+2) NORESCAN;  /* Generate PATH key             @L4A*/ 02835700
*ANSWER(COMMENT('PATH')) COLUMN(ICOMCOL) NORESCAN; /* Generate          02835800
*                                                  PATH comment  @L4A*/ 02835900
*                                                                       02836000
*ANSWER('DCL '||PREFIX||'POPT BIT(16) CONSTANT(''8018''X);')            02836100
*   COLUMN(MACCOL+2) NORESCAN;  /* Generate PATHOPTS key         @L4A*/ 02836200
*ANSWER(COMMENT('PATHOPTS')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02836300
*                                              PATHOPTS comment  @L4A*/ 02836400
*IF PREFIX='SJKY' THEN         /* Check prefix to determine if          02836500
*                                 parameter constants needed     @L4A*/ 02836600
* DO;                          /* Generate parameter constants   @L4A*/ 02836700
*  ANSWER(COMMENT('Values for PATHOPTS'))                               02836800
*   COLUMN(MACCOL+2) NORESCAN; /* Generate comment for constants @L4A*/ 02836900
*  ANSWER('DCL SJVLSYNC BIT(32) CONSTANT(''00000100''X);')              02837000
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for OSYNC    @01A*/ 02837100
*  ANSWER(COMMENT('OSYNC')) COLUMN(ICOMCOL) NORESCAN; /* Generate       02837200
*                                       comment for OSYNC        @01A*/ 02837300
*  ANSWER('DCL SJVLCEXL BIT(32) CONSTANT(''000000C0''X);')              02837400
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for OCREXCL  @L4A*/ 02837500
*  ANSWER(COMMENT('OCREXCL')) COLUMN(ICOMCOL) NORESCAN; /* Generate     02837800
*                                       comment for OCREXCL      @L4A*/ 02838100
*  ANSWER('DCL SJVLCREA BIT(32) CONSTANT(''00000080''X);')              02838400
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for OCREAT   @L4A*/ 02838700
*  ANSWER(COMMENT('OCREAT')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02838800
*                                       comment for OCREAT       @L4A*/ 02838900
*  ANSWER('DCL SJVLEXCL BIT(32) CONSTANT(''00000040''X);')              02839000
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for OEXCL    @L4A*/ 02839100
*  ANSWER(COMMENT('OEXCL')) COLUMN(ICOMCOL) NORESCAN; /* Generate       02839200
*                                       comment for OEXCL        @L4A*/ 02839300
*  ANSWER('DCL SJVLNOCT BIT(32) CONSTANT(''00000020''X);')              02839400
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for ONOCT    @L4A*/ 02839500
*  ANSWER(COMMENT('ONOCT')) COLUMN(ICOMCOL) NORESCAN; /* Generate       02839600
*                                       comment for ONOCT        @L4A*/ 02839700
*  ANSWER('DCL SJVLTRUN BIT(32) CONSTANT(''00000010''X);')              02840100
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for OTRUNC   @L4A*/ 02840500
*  ANSWER(COMMENT('OTRUNC')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02840600
*                                       comment for OTRUNC       @L4A*/ 02840700
*  ANSWER('DCL SJVLAPPE BIT(32) CONSTANT(''00000008''X);')              02840800
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for OAPPEND  @L4A*/ 02840900
*  ANSWER(COMMENT('OAPPEND')) COLUMN(ICOMCOL) NORESCAN; /* Generate     02841000
*                                       comment for OAPPEND      @L4A*/ 02841100
*  ANSWER('DCL SJVLNBLK BIT(32) CONSTANT(''00000004''X);')              02841200
*   COLUMN(MACCOL+2) NORESCAN;           /* Generate constant for       02841300
*                                           ONONBLOCK            @L4A*/ 02841400
*  ANSWER(COMMENT('ONONBLOCK')) COLUMN(ICOMCOL) NORESCAN; /*            02841500
*                               Generate comment for ONONBLOCK   @L4A*/ 02841600
*  ANSWER('DCL SJVLRDWR BIT(32) CONSTANT(''00000003''X);')              02841700
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for ORDWR    @L4A*/ 02841800
*  ANSWER(COMMENT('ORDWR')) COLUMN(ICOMCOL) NORESCAN; /* Generate       02841900
*                                       comment for ORDWR        @L4A*/ 02842000
*  ANSWER('DCL SJVLRDON BIT(32) CONSTANT(''00000002''X);')              02842200
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for ORDONLY  @D2C*/ 02842400
*  ANSWER(COMMENT('ORDONLY')) COLUMN(ICOMCOL) NORESCAN; /* Generate     02842700
*                                       comment for ORDONLY      @L4A*/ 02842800
*  ANSWER('DCL SJVLWDON BIT(32) CONSTANT(''00000001''X);')              02843000
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for OWRONLY  @D2C*/ 02843200
*  ANSWER(COMMENT('OWRONLY')) COLUMN(ICOMCOL) NORESCAN; /* Generate     02843400
*                                       comment for OWRONLY      @L4A*/ 02843600
* END;                         /* Generate parameter constants   @L4A*/ 02843800
*                                                                       02844000
*ANSWER('DCL '||PREFIX||'PMDE BIT(16) CONSTANT(''8019''X);')            02844200
*   COLUMN(MACCOL+2) NORESCAN;  /* Generate PATHMODE key         @L4A*/ 02844400
*ANSWER(COMMENT('PATHMODE')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02844600
*                                              PATHMODE comment  @L4A*/ 02844800
*IF PREFIX='SJKY' THEN         /* Check prefix to determine if          02845000
*                                 parameter constants needed     @L4A*/ 02845200
* DO;                          /* Generate parameter constants   @L4A*/ 02845400
*  ANSWER(COMMENT('Values for PATHMODE'))                               02845600
*   COLUMN(MACCOL+2) NORESCAN; /* Generate comment for constants @L4A*/ 02845800
*  ANSWER('DCL SJVLSUID BIT(32) CONSTANT(''00000800''X);')              02846700
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SISUID   @L4A*/ 02846800
*  ANSWER(COMMENT('SISUID')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02846900
*                                       comment for SISUID       @L4A*/ 02847000
*  ANSWER('DCL SJVLSGID BIT(32) CONSTANT(''00000400''X);')              02847100
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SISGID   @L4A*/ 02847200
*  ANSWER(COMMENT('SISGID')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02847300
*                                       comment for SSIGID       @L4A*/ 02847400
*  ANSWER('DCL SJVLRUSR BIT(32) CONSTANT(''00000100''X);')              02847500
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIRUSR   @L4A*/ 02847600
*  ANSWER(COMMENT('SIRUSR')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02847700
*                                       comment for SIRUSR       @L4A*/ 02847800
*  ANSWER('DCL SJVLWUSR BIT(32) CONSTANT(''00000080''X);')              02847900
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIWUSR   @L4A*/ 02848000
*  ANSWER(COMMENT('SIWUSR')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02848100
*                                       comment for SIWUSR       @L4A*/ 02848200
*  ANSWER('DCL SJVLXUSR BIT(32) CONSTANT(''00000040''X);')              02848300
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIXUSR   @L4A*/ 02848400
*  ANSWER(COMMENT('SIXUSR')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02848500
*                                       comment for SIXUSR       @L4A*/ 02848600
*  ANSWER('DCL SJVLRWXU BIT(32) CONSTANT(''000001C0''X);')              02848700
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIRWXU   @L4A*/ 02848800
*  ANSWER(COMMENT('SIRWXU')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02848900
*                                       comment for SIRWXU       @L4A*/ 02849000
*  ANSWER('DCL SJVLRGRP BIT(32) CONSTANT(''00000020''X);')              02849100
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIRGRP   @L4A*/ 02849200
*  ANSWER(COMMENT('SIRGRP')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02849300
*                                       comment for SIRGRP       @L4A*/ 02849400
*  ANSWER('DCL SJVLWGRP BIT(32) CONSTANT(''00000010''X);')              02849500
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIWGRP   @L4A*/ 02849600
*  ANSWER(COMMENT('SIWGRP')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02849700
*                                       comment for SIWGRP       @L4A*/ 02849800
*  ANSWER('DCL SJVLXGRP BIT(32) CONSTANT(''00000008''X);')              02849900
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIXGRP   @L4A*/ 02850000
*  ANSWER(COMMENT('SIXGRP')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02850100
*                                       comment for SIXGRP       @L4A*/ 02850200
*  ANSWER('DCL SJVLRWXG BIT(32) CONSTANT(''00000038''X);')              02850300
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIRWXG   @L4A*/ 02850400
*  ANSWER(COMMENT('SIRWXG')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02850500
*                                       comment for SIRWXG       @L4A*/ 02850600
*  ANSWER('DCL SJVLROTH BIT(32) CONSTANT(''00000004''X);')              02850700
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIROTH   @L4A*/ 02850800
*  ANSWER(COMMENT('SIROTH')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02850900
*                                       comment for SIROTH       @L4A*/ 02851000
*  ANSWER('DCL SJVLWOTH BIT(32) CONSTANT(''00000002''X);')              02851100
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIWOTH   @L4A*/ 02851200
*  ANSWER(COMMENT('SIWOTH')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02851300
*                                       comment for SIWOTH       @L4A*/ 02851400
*  ANSWER('DCL SJVLXOTH BIT(32) CONSTANT(''00000001''X);')              02851500
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIXOTH   @L4A*/ 02851600
*  ANSWER(COMMENT('SIXOTH')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02851700
*                                       comment for SIXOTH       @L4A*/ 02851800
*  ANSWER('DCL SJVLRWXO BIT(32) CONSTANT(''00000007''X);')              02851900
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for SIRWXO   @L4A*/ 02852000
*  ANSWER(COMMENT('SIRWXO')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02852100
*                                       comment for SIRWXO       @L4A*/ 02852200
* END;                         /* Generate parameter constants   @L4A*/ 02852300
*                                                                       02852400
*ANSWER('DCL '||PREFIX||'PNDS BIT(16) CONSTANT(''801A''X);')            02852500
*   COLUMN(MACCOL+2) NORESCAN;       /* Generate PATHDISP key for       02852600
*                                       normal disposition       @L4A*/ 02852700
*ANSWER(COMMENT('PATHDISP - Normal disposition')) COLUMN(ICOMCOL)       02852800
*   NORESCAN;             /* Generate normal disposition comment @L4A*/ 02852900
*ANSWER('DCL '||PREFIX||'PCDS BIT(16) CONSTANT(''801B''X);')            02853000
*   COLUMN(MACCOL+2) NORESCAN;       /* Generate PATHDISP key for       02853100
*                                       conditional disposition  @L4A*/ 02853200
*ANSWER(COMMENT('PATHDISP - Conditional disposition')) COLUMN(ICOMCOL)  02853300
*   NORESCAN;        /* Generate conditional disposition comment @L4A*/ 02853400
*IF PREFIX='SJKY' THEN         /* Check prefix to determine if          02853500
*                                 parameter constants needed     @L4A*/ 02853600
* DO;                          /* Generate parameter constants   @L4A*/ 02853700
*  ANSWER(COMMENT('Values for PATHDISP'))                               02853800
*   COLUMN(MACCOL+2) NORESCAN; /* Generate comment for constants @L4A*/ 02853900
*  ANSWER('DCL SJVLKEEP BIT(8) CONSTANT(''08''X);')                     02854000
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for KEEP     @L4A*/ 02854100
*  ANSWER(COMMENT('KEEP')) COLUMN(ICOMCOL) NORESCAN; /* Generate        02854200
*                                       comment for KEEP         @L4A*/ 02854300
*  ANSWER('DCL SJVLDELE BIT(8) CONSTANT(''04''X);')                     02854400
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for DELETE   @L4A*/ 02854500
*  ANSWER(COMMENT('DELETE')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02854600
*                                        comment for DELETE      @L4A*/ 02854700
* END;                         /* Generate parameter constants   @L4A*/ 02854800
*ANSWER('DCL '||PREFIX||'RLS BIT(16) CONSTANT(''801C''X);')             02854900
*   COLUMN(MACCOL+2) NORESCAN; /* Generate RLS key               @L5A*/ 02855000
*ANSWER(COMMENT('RLS - Record Level Sharing')) COLUMN(ICOMCOL)          02855100
*   NORESCAN;                  /* Generate comment for RLS       @L5A*/ 02855200
*IF PREFIX='SJKY' THEN         /* Check prefix to determine if          02855300
*                                 parameter constants needed     @L5A*/ 02855400
* DO;                          /* Generate parameter constants   @L5A*/ 02855500
*  ANSWER(COMMENT('Values for RLS'))                                    02855600
*   COLUMN(MACCOL+2) NORESCAN; /* Generate comment for constants @L5A*/ 02855700
*  ANSWER('DCL SJVLNRI  BIT(8) CONSTANT(''80''X);')                     02855800
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for NRI      @L5A*/ 02855900
*  ANSWER(COMMENT('NRI')) COLUMN(ICOMCOL) NORESCAN; /* Generate         02856000
*                                       comment for NRI          @L5A*/ 02856100
*  ANSWER('DCL SJVLCR   BIT(8) CONSTANT(''40''X);')                     02856200
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for CR       @L5A*/ 02856300
*  ANSWER(COMMENT('CR')) COLUMN(ICOMCOL) NORESCAN; /* Generate          02856400
*                                        comment for CR          @L5A*/ 02856500
*  ANSWER('DCL SJVLCRE  BIT(8) CONSTANT(''20''X);')                     02856600
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for CRE      @03A*/ 02856700
*  ANSWER(COMMENT('CRE')) COLUMN(ICOMCOL) NORESCAN; /* Generate         02856800
*                                        comment for CRE         @03A*/ 02856900
* END;                         /* Generate parameter constants   @L5A*/ 02857000
*ANSWER('DCL '||PREFIX||'FDAT BIT(16) CONSTANT(''801D''X);')            02857100
*   COLUMN(MACCOL+2) NORESCAN; /* Generate FILEDATA key          @L6A*/ 02857200
*ANSWER(COMMENT('FILEDATA - File organization')) COLUMN(ICOMCOL)        02857300
*   NORESCAN;                  /* Generate comment for FILEDATA  @L6A*/ 02857400
*IF PREFIX='SJKY' THEN         /* Check prefix to determine if          02857600
*                                 parameter constants needed     @L6A*/ 02857800
* DO;                          /* Generate parameter constants   @L6A*/ 02858000
*  ANSWER(COMMENT('Values for FILEDATA'))                               02858200
*   COLUMN(MACCOL+2) NORESCAN; /* Generate comment for constants @L6A*/ 02858400
*  ANSWER('DCL SJVLBIN  BIT(8) CONSTANT(''80''X);')                     02858600
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for BINARY   @L6A*/ 02858800
*  ANSWER(COMMENT('BINARY')) COLUMN(ICOMCOL) NORESCAN; /* Generate      02859000
*                                       comment for BINARY       @L6A*/ 02859200
*  ANSWER('DCL SJVLTEXT BIT(8) CONSTANT(''40''X);')                     02859400
*   COLUMN(MACCOL+2) NORESCAN; /* Generate constant for TEXT     @L6A*/ 02859600
*  ANSWER(COMMENT('TEXT')) COLUMN(ICOMCOL) NORESCAN; /* Generate        02859800
*                                        comment for TEXT        @L6A*/ 02860000
* END;                         /* Generate parameter constants   @L6A*/ 02860200
*ANSWER('DCL '||PREFIX||'LGST BIT(16) CONSTANT(''801F''X);')            02860300
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @02A*/ 02860400
*ANSWER(COMMENT('LGSTREAM - VSAM RLS LOG STREAM ')) COLUMN(ICOMCOL)     02860500
*   NORESCAN;                  /* Generate comment for LGSTREAM  @02A*/ 02860600
*ANSWER('DCL '||PREFIX||'DCCS BIT(16) CONSTANT(''8020''X);')            02860700
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @03A*/ 02860800
*ANSWER(COMMENT('CCSID - Coded Character Set Identifier '))             02860900
*   COLUMN(ICOMCOL) NORESCAN;  /* Generate comment for CCSID     @03A*/ 02861000
*ANSWER('DCL '||PREFIX||'BSLM BIT(16) CONSTANT(''8022''X);')            02861020
*   COLUMN(MACCOL+2) NORESCAN;                            /*     @04A*/ 02861040
*ANSWER(COMMENT('BLKSZLIM - Block Size Limit '))                        02861060
*   COLUMN(ICOMCOL) NORESCAN;  /* Generate comment for BLKSZLIM  @04A*/ 02861080
*ANSWER SKIP;                                             /*     @L3A*/ 02861100
*END;                                  /* End allocation keys    @L3A*/ 02861200
* % END IEFSJDKY;                                                       02861300
* % GOTO ENDMAC;                       /*                               02861400
         MACRO                                                          02861500
         IEFSJDKY &PRFX=SJKY,                                          +02861600
               &INFORET=NO,                                            +02861700
               &UNALLOC=NO                                              02861800
         AIF   (('&INFORET' EQ 'YES') AND ('&UNALLOC' EQ 'YES')).ERR2   02862000
         AIF   ('&INFORET' EQ 'YES').INFODCL                       @L3A 02863000
         AIF   ('&UNALLOC' EQ 'YES').UNALLDC                       @L3A 02867000
*        SJF DD ALLOCATION KEYS                               *    @L3A 02871000
&PRFX.CNTL EQU   X'8003'        CNTL                               @D1A 02875000
&PRFX.STCL EQU   X'8004'        STORCLAS                                02900000
&PRFX.MGCL EQU   X'8005'        MGMTCLAS                                02950000
&PRFX.DACL EQU   X'8006'        DATACLAS                                03000000
&PRFX.RECO EQU   X'800B'        RECORG                                  03050000
          AIF   ('&PRFX' NE 'SJKY').SKIP1                               03100000
* Values for RECORG keyword                                             03150000
SJVLROKS  EQU   X'80'           KS - Key sequence                       03200000
SJVLROES  EQU   X'40'           ES - Entry sequence                     03250000
SJVLRORR  EQU   X'20'           RR - Relative record                    03300000
SJVLROLS  EQU   X'10'           LS - Linear space                       03350000
.SKIP1     ANOP                                                         03400000
&PRFX.KEYO EQU   X'800C'       KEYOFF                                   03450000
&PRFX.REFD EQU   X'800D'       REFDD                                    03500000
&PRFX.SECM EQU   X'800E'       SECMODEL                                 03550000
          AIF   ('&PRFX' NE 'SJKY').SKIP2                               03600000
* Value for GENERIC option of SECMODEL (parameter #2)                   03650000
SJVLGENR  EQU   X'80'           Generic option                          03700000
.SKIP2     ANOP                                                         03750000
&PRFX.LIKE EQU   X'800F'        LIKE                                    03800000
&PRFX.AVGR EQU   X'8010'        AVGREC                                  03850000
          AIF   ('&PRFX' NE 'SJKY').SKIP3                               03900000
* Values for AVGREC keyword                                             03950000
SJVLARUN  EQU   X'80'           U - units (ie times 1)                  04000000
SJVLARKI  EQU   X'40'           K - kilo  (ie times 1000)               04050000
SJVLARME  EQU   X'20'           M - Mega  (ie times 1 million)          04100000
.SKIP3     ANOP                                                  @L1M   04112500
&PRFX.DSNT EQU   X'8012'        DSNTYPE                          @L1A   04125000
          AIF   ('&PRFX' NE 'SJKY').SKIP4                        @L1A   04137500
* Values for DSNTYPE keyword                                     @L1A   04150000
SJVLDTLI  EQU   X'80'           LIBRARY                          @L1A   04162500
SJVLDTPD  EQU   X'40'           PDS                              @L1A   04175000
SJVLPIPE  EQU   X'20'           PIPE                             @L4C   04175800
SJVLHFSI  EQU   X'10'           HFS                              @L4C   04176600
.SKIP4    ANOP                                                   @L2M   04177500
&PRFX.SPIN EQU   X'8013'        SPIN                             @L2A   04180000
          AIF   ('&PRFX' NE 'SJKY').SKIP5                        @L2A   04182500
* Values for SPIN keyword                                        @L2A   04185000
SJVLSPUN  EQU   X'80'           UNALLOC                          @L2A   04187500
SJVLSPNO  EQU   X'40'           NO                               @L2A   04190000
.SKIP5    ANOP                                                          04192500
&PRFX.SEGM EQU   X'8014'        SEGMENT                          @L2A   04195000
*                                                                  @L4A 04195100
&PRFX.PATH EQU   X'8017'        PATH                               @L4A 04195200
*                                                                  @L4A 04195300
&PRFX.POPT EQU   X'8018'        PATHOPTS                           @L4A 04195400
          AIF   ('&PRFX' NE 'SJKY').SKIP6                          @L4A 04195500
* Values for PATHOPTS keyword                                      @L4A 04195600
SJVLSYNC  EQU   X'00000100'     OSYNC                              @01A 04195700
SJVLCEXL  EQU   X'000000C0'     OCREXCL                            @L4A 04195800
SJVLCREA  EQU   X'00000080'     OCREAT                             @L4A 04195900
SJVLEXCL  EQU   X'00000040'     OEXCL                              @L4A 04196000
SJVLNOCT  EQU   X'00000020'     ONOCTTY                            @L4A 04196100
SJVLTRUN  EQU   X'00000010'     OTRUNC                             @L4A 04196200
SJVLAPPE  EQU   X'00000008'     OAPPEND                            @L4A 04196300
SJVLNBLK  EQU   X'00000004'     ONONBLOCK                          @L4A 04196400
SJVLRDWR  EQU   X'00000003'     ORDWR                              @L4A 04196500
SJVLRDON  EQU   X'00000002'     ORDONLY                            @D2C 04196600
SJVLWDON  EQU   X'00000001'     OWRONLY                            @D2C 04196700
*                                                                  @L4A 04196800
.SKIP6    ANOP                                                     @L4A 04196900
&PRFX.PMDE EQU   X'8019'        PATHMODE                           @L4A 04197000
          AIF   ('&PRFX' NE 'SJKY').SKIP7                          @L4A 04197100
* Values for PATHMODE keyword                                      @L4A 04197200
SJVLSUID  EQU   X'00000800'     SISUID                             @L4A 04198300
SJVLSGID  EQU   X'00000400'     SISGID                             @L4A 04198400
SJVLRUSR  EQU   X'00000100'     SIRUSR                             @L4A 04198500
SJVLWUSR  EQU   X'00000080'     SIWUSR                             @L4A 04198600
SJVLXUSR  EQU   X'00000040'     SIXUSR                             @L4A 04198700
SJVLRWXU  EQU   X'000001C0'     SIRWXU                             @L4A 04198800
SJVLRGRP  EQU   X'00000020'     SIRGRP                             @L4A 04198900
SJVLWGRP  EQU   X'00000010'     SIWGRP                             @L4A 04199000
SJVLXGRP  EQU   X'00000008'     SIXGRP                             @L4A 04199100
SJVLRWXG  EQU   X'00000038'     SIRWXG                             @L4A 04199200
SJVLROTH  EQU   X'00000004'     SIROTH                             @L4A 04199300
SJVLWOTH  EQU   X'00000002'     SIWOTH                             @L4A 04199400
SJVLXOTH  EQU   X'00000001'     SIXOTH                             @L4A 04199500
SJVLRWXO  EQU   X'00000007'     SIRWXO                             @L4A 04199600
*                                                                  @L4A 04199700
.SKIP7    ANOP                                                     @L4A 04199800
&PRFX.PNDS EQU   X'801A'        PATHDISP - Normal Disposition      @L4A 04199900
&PRFX.PCDS EQU   X'801B'        PATHDISP - Conditional Disposition @L4A 04200000
          AIF   ('&PRFX' NE 'SJKY').SKIP8                          @L4A 04200100
* Values for PATHDISP keyword                                      @L4A 04200200
SJVLKEEP  EQU   X'08'           KEEP                               @L4A 04200300
SJVLDELE  EQU   X'04'           DELETE                             @L4A 04200400
.SKIP8   ANOP                                                      @L4A 04200700
&PRFX.RLS  EQU   X'801C'        RLS - Record Level Sharing         @L5A 04200800
          AIF   ('&PRFX' NE 'SJKY').SKIP9                          @L5A 04200900
* Values for RLS keyword                                           @L5A 04201000
SJVLNRI   EQU   X'80'           NRI                                @L5A 04201100
SJVLCR    EQU   X'40'           CR                                 @L5A 04201200
SJVLCRE   EQU   X'20'           CRE                                @03A 04201300
.SKIP9   ANOP                                                      @L5A 04201400
&PRFX.FDAT EQU   X'801D'        FILEDATA - file organization       @L6A 04201500
          AIF   ('&PRFX' NE 'SJKY').SKIP10                         @L6A 04201700
* Values for FILEDATA keyword                                      @L6A 04201900
SJVLBIN   EQU   X'80'           BINARY                             @L6A 04202100
SJVLTEXT  EQU   X'40'           TEXT                               @L6A 04202300
.SKIP10  ANOP                                                      @L6A 04202500
&PRFX.LGST EQU   X'801F'        LGSTREAM                           @02A 04202600
&PRFX.DCCS EQU   X'8020'        CCSID                              @03A 04202700
&PRFX.BSLM EQU   X'8022'        BLKSZLIM                           @04A 04202750
         AGO  .MEND                                                @L3C 04202800
.UNALLDC ANOP                                                      @L3A 04202900
*        SJF DD UNALLOCATION KEYS                             *    @L3A 04203100
&PRFX.SPIN EQU   X'8013'        SPIN                               @L3A 04204200
          AIF   ('&PRFX' NE 'SJKY').SKSPIN                       @L3A   04206500
* Values for SPIN keyword                                        @L3A   04208800
SJVLSPUN  EQU   X'80'           UNALLOC                          @L3A   04211100
SJVLSPNO  EQU   X'40'           NO                               @L3A   04213400
.SKSPIN  ANOP                                                      @L3A 04215700
*                                                                       04215900
&PRFX.PATH EQU   X'8017'        PATH                               @L4A 04216100
*                                                                       04216300
&PRFX.OVPDS EQU   X'801A'        PATHDISP - Override Disposition   @L4A 04216500
         AIF   ('&PRFX' NE 'SJKY').SKIPU1                          @L4A 04216700
* Values for PATHDISP - Override Disposition                       @L4A 04216900
SJVLKEEP  EQU   X'08'           KEEP                               @L4A 04217100
SJVLDELE  EQU   X'04'           DELETE                             @L4A 04217300
.SKIPU1  ANOP                                                      @L4A 04217600
         AGO   .MEND                                               @L3A 04218000
.INFODCL ANOP                                                           04220300
         AIF   ('&PRFX' EQ 'DIN').INFOINP                          @L4A 04221400
*        SJF DD INFORMATION RETRIEVAL KEYS                    *    @L3A 04222600
&PRFX.CNTL EQU   X'C003'        CNTL                               @D1A 04225000
&PRFX.STCL EQU   X'C004'        STORCLAS                                04250000
&PRFX.MGCL EQU   X'C005'        MGMTCLAS                                04300000
&PRFX.DACL EQU   X'C006'        DATACLAS                                04350000
&PRFX.RECO EQU   X'C00B'        RECORG                                  04400000
&PRFX.KEYO EQU   X'C00C'        KEYOFF                                  04450000
&PRFX.REFD EQU   X'C00D'        REFDD                                   04500000
&PRFX.SECM EQU   X'C00E'        SECMODEL                                04550000
&PRFX.LIKE EQU   X'C00F'        LIKE                                    04600000
&PRFX.AVGR EQU   X'C010'        AVGREC                                  04650000
&PRFX.DSNT EQU   X'C012'        DSNTYPE                           @L1A  04683300
&PRFX.SPIN EQU   X'C013'        SPIN                              @L2A  04699900
&PRFX.SEGM EQU   X'C014'        SEGMENT                           @L2A  04716500
&PRFX.PATH EQU   X'C017'        PATH                               @L4A 04718400
&PRFX.POPT EQU   X'C018'        PATHOPTS                           @L4A 04720300
&PRFX.PMDE EQU   X'C019'        PATHMODE                           @L4A 04722200
&PRFX.PNDS EQU   X'C01A'        NORMAL PATHDISP                    @L4A 04724100
&PRFX.CNDS EQU   X'C01B'        CONDITIONAL PATHDISP               @L4A 04726000
&PRFX.FDAT EQU   X'C01D'        FILEDATA                           @L6A 04727200
         AGO   .MEND                                               @L3A 04728400
.INFOINP ANOP                                                           04731300
*        SJF DD INFORMATION RETRIEVAL INPUT KEYS              *    @L4A 04732700
&PRFX.PATH EQU   X'8017'        PATH                               @L4A 04734200
         AGO   .MEND                                               @L4A 04737100
.ERR2    ANOP                                                      @L3A 04740300
         MNOTE 12,'AHA0010 IEFSJDKY ERROR:  INFORET=YES AND UNALLOC=YES+04752200
                ARE MUTUALLY EXCLUSIVE.'                           @L3A 04764100
.MEND    ANOP                                                      @L3C 04776000
         MEND                                                           04787900
**/                                                                     04800000
* %ENDMAC: ;                           /* Target of GOTO - Branch       04850000
*                                         around ASSEMBLER portion   */ 04900000
