*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMBSMP                               -02/26/97-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Batch Queue Registration Service          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001300
*                                                                     * 00001400
* STATUS= JBB6604                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IWMBSMP service passes batch job queue delay samples to    * 00002200
*      the WLM address spece via a PC request.                        * 00002300
*                                                                     * 00002400
*01* EXTERNAL CLASSIFICATION:  NONE                                   * 00002500
*                                                                     * 00002600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002700
*                                                                     * 00002800
*01* ENVIRONMENT:                                                     * 00002900
*                                                                     * 00003000
*                                                                     * 00003100
*      Minimum authorization: Supervisor state or program key mask    * 00003200
*                        (PKM) allowing keys 0-7.                     * 00003300
*                                                                     * 00003400
*      Dispatchable unit mode: Task mode.                             * 00003500
*                                                                     * 00003600
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00003700
*                                                                     * 00003800
*      AMODE:            31-bit.                                      * 00003900
*                                                                     * 00004000
*      ASC mode:         Primary.                                     * 00004100
*                                                                     * 00004200
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004300
*                                                                     * 00004400
*      Locks:            No locks held.                               * 00004500
*                                                                     * 00004600
*      Control parameters: Control parameters must be in the primary  * 00004700
*                        address space.                               * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*01* PROGRAMMING REQUIREMENTS:                                        * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*    1.  The macro CVT must be included to use this macro.            * 00005500
*                                                                     * 00005600
*    2.  The macro IWMYCON must be included to use this macro. ???    * 00005700
*                                                                     * 00005800
*    3.  The macro IWMPB must be in the library concatenation, since  * 00005900
*        it is included by IWMYCON.                                   * 00006000
*                                                                     * 00006100
*    4.  Note that the high order halfword of register 0, and the     * 00006200
*        reason code variable when specified, may be non-zero and     * 00006300
*        represents diagnostic data which is NOT part of the external * 00006400
*        interface.  The high order halfword should thus be excluded  * 00006500
*        from comparison with the reason code values described above. * 00006600
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00006700
*        be used for this purpose.                                    * 00006800
*                                                                     * 00006900
*    5.  The address space from which this service is invoked must    * 00007000
*        have previously connected to WLM, using IWMCONN              * 00007100
*        Work_Manager=YES.                                            * 00007200
*                                                                     * 00007300
*    6.  The caller must provide serialization so that the IWMDISC    * 00007400
*        service cannot be issued in parallel with this service.      * 00007500
*                                                                     * 00007600
*    7.  The IWMPQRY service must be issued previously in order to    * 00007700
*        obtain a valid service definition identifier from WLM, which * 00007800
*        is then passed on the SVDEF_ID= keyword.                     * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*01* RESTRICTIONS:                                                    * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*    1.  This macro may not be used prior to the completion of WLM    * 00008600
*        address space initialization.                                * 00008700
*                                                                     * 00008800
*    2.  This macro may only be used on MVS/ESA JBB6604 or higher.    * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*01* INPUT REGISTER INFORMATION:                                      * 00009300
*                                                                     * 00009400
*    Before issuing the IWMBSMP macro, the caller does not have to    * 00009500
*    place any information into any register unless using it in       * 00009600
*    register notation for a particular parameter, or using it as a   * 00009700
*    base register.                                                   * 00009800
*                                                                     * 00009900
*01* OUTPUT REGISTER INFORMATION:                                     * 00010000
*                                                                     * 00010100
*    When control returns to the caller, the GPRs contain:            * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*    REGISTER  CONTENTS                                               * 00010500
*                                                                     * 00010600
*    0         Reason code if GR15 return code is non-zero            * 00010700
*                                                                     * 00010800
*    1         Used as work registers by the system                   * 00010900
*                                                                     * 00011000
*    2-13      Unchanged                                              * 00011100
*                                                                     * 00011200
*    14        Used as work registers by the system                   * 00011300
*                                                                     * 00011400
*    15        Return code                                            * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*    When control returns to the caller, the ARs contain:             * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*    REGISTER  CONTENTS                                               * 00012200
*                                                                     * 00012300
*    0-1       Used as work registers by the system                   * 00012400
*                                                                     * 00012500
*    2-13      Unchanged                                              * 00012600
*                                                                     * 00012700
*    14-15     Used as work registers by the system                   * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*    Some callers depend on register contents remaining the same      * 00013200
*    before and after issuing a service.  If the system changes the   * 00013300
*    contents of registers on which the caller depends, the caller    * 00013400
*    must save them before issuing the service, and restore them      * 00013500
*    after the system returns control.                                * 00013600
*                                                                     * 00013700
*01* PERFORMANCE IMPLICATIONS:                                        * 00013800
*                                                                     * 00013900
*    None                                                             * 00014000
*                                                                     * 00014100
*01* SYNTAX:                                                          * 00014200
*                                                                     * 00014300
*[xlabel]  IWMBSMP     BQS=xbqs                                       * 00014400
*                         ,SVDEF_ID=xsvdef_id                         * 00014500
*                    [,RETCODE=xretcode]                              * 00014600
*                    [,RSNCODE=xrsncode]                              * 00014700
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00014800
*                   [,MF=S]                                          * 00014900
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00015000
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*      Where:                                                         * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*      [xlabel]                                                       * 00015700
*          is an optional symbol, starting in column 1, that is the   * 00015800
*          name on the IWMBSMP macro invocation.  The name must       * 00015900
*          conform to the rules for an ordinary assembler language    * 00016000
*          symbol.                                                    * 00016100
*          DEFAULT: No name.                                          * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*      BQS=xbqs                                                       * 00016700
*          is the name (RS-type), or address in register (2)-(12), of * 00016800
*          a required fullword input which is the pointer to the      * 00016900
*          Batch Queue Samples (BQSINT).                              * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*          SVDEF_ID=xsvdef_id                                         * 00017300
*              is the name (RS-type), or address in register          * 00017400
*              (2)-(12), of a required 32 character input which       * 00017500
*              identifies the WLM service definition used by JES to   * 00017600
*              build the current WLM managed batch job queue.         * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*      [RETCODE=xretcode]                                             * 00018400
*          is the name (RS-type) of an optional fullword output       * 00018500
*          variable, or register (2)-(12), into which the return code * 00018600
*          is to be copied from GPR 15.                               * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      [RSNCODE=xrsncode]                                             * 00019200
*          is the name (RS-type) of an optional fullword output       * 00019300
*          variable, or register (2)-(12), into which the reason code * 00019400
*          is to be copied from GPR 0.                                * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00020000
*          is an optional byte input decimal value in the "0-0" range * 00020100
*          that specifies the macro version.  PLISTVER is the only    * 00020200
*          key allowed on the list form of MF and determines which    * 00020300
*          parameter list is generated.  Note that MAX may be         * 00020400
*          specified instead of a number, and the parameter list will * 00020500
*          be of the largest size currently supported. This size may  * 00020600
*          grow from release to release (thus possibly affecting the  * 00020700
*          amount of storage needed by your program).  If your        * 00020800
*          program can tolerate this, IBM recommends that you always  * 00020900
*          specify MAX when creating the list form parameter list as  * 00021000
*          that will ensure that the list form parameter list is      * 00021100
*          always long enough to hold whatever parameters might be    * 00021200
*          specified on the execute form.                             * 00021300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00021400
*          default is the lowest version which allows all of the      * 00021500
*          parameters specified on the invocation to be processed.    * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*      [MF=S|L|E]                                                   * 00022100
*          is an optional keyword input which specifies the macro     * 00022200
*          form.                                                      * 00022300
*          DEFAULT: S                                                 * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*          [MF=S]                                                     * 00022700
*              specifies the standard form of the macro.  The "S"     * 00022800
*              form generates code to put the parameters into an      * 00022900
*              in-line parameter list and invoke the desired service. * 00023000
*              Full checking for required macro keys is done along    * 00023100
*              with supplying defaults for omitted optional           * 00023200
*              parameters.                                            * 00023300
*                                                                     * 00023400
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00023500
*              specifies the list form of the macro.  The "L" form    * 00023600
*              defines an area to be used for the parameter list.     * 00023700
*              Only the PLISTVER key may be specified on the          * 00023800
*              invocation.  All other macro parameters are flagged as * 00023900
*              errors.  If PLISTVER is not specified, the original    * 00024000
*              parameter list definition is used.                     * 00024100
*                                                                     * 00024200
*            ,xmfctrl                                                 * 00024300
*              is a required input.  It is the name of a storage area * 00024400
*              for the parameter list.                                * 00024500
*                                                                     * 00024600
*            ,xmfattr|0D                                            * 00024700
*              is an optional 60 character input string that varies   * 00024800
*              from 1 to 60 characters. Use it to force boundary      * 00024900
*              alignment of the parameter list. Use any value that    * 00025000
*              represents a boundary and is valid on an assembler DS  * 00025100
*              pseudo op.                                             * 00025200
*              DEFAULT: 0D which forces the parameter list to a       * 00025300
*              doubleword boundary.                                   * 00025400
*                                                                     * 00025500
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00025600
*              specifies the execute form of the macro.  The "E" form * 00025700
*              generates code to put the parameters into the          * 00025800
*              parameter list specified by xmfctrl and provides full  * 00025900
*              syntax checking with default setting.                  * 00026000
*                                                                     * 00026100
*            ,xmfctrl                                                 * 00026200
*              is a required input.  It is the name (RS-type), or     * 00026300
*              address in register (1)-(12), of a storage area for    * 00026400
*              the parameter list.                                    * 00026500
*                                                                     * 00026600
*            ,COMPLETE                                              * 00026700
*              is an optional keyword input which specifies the       * 00026800
*              degree of macro parameter syntax checking.             * 00026900
*              DEFAULT: COMPLETE                                      * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*              COMPLETE                                               * 00027300
*                  Checking for required macro keys is done and       * 00027400
*                  defaults are supplied for omitted optional         * 00027500
*                  parameters.                                        * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*01* ABEND CODES:  None.                                              * 00028400
*                                                                     * 00028500
*01* RETURN CODES:                                                    * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*            0    Name: IwmRetCodeOk                                  * 00028900
*                                                                     * 00029000
*                 Meaning: Successful completion.                     * 00029100
*                                                                     * 00029200
*                 Action: None required.                              * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*            8    Name: IwmRetCodeInvocError                          * 00029600
*                                                                     * 00029700
*                 Meaning: Invalid invocation environment or          * 00029800
*                 parameters.                                         * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                 HEX REASON  MEANING/ACTION                          * 00030300
*                 CODE                                                * 00030400
*                                                                     * 00030500
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00030600
*                                                                     * 00030700
*                             Meaning: Error accessing parameter      * 00030800
*                             list.                                   * 00030900
*                                                                     * 00031000
*                             Action: Check for possible storage      * 00031100
*                             overlay of parm area or BQSINT.         * 00031200
*                                                                     * 00031300
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00031400
*                                                                     * 00031500
*                             Meaning: Reserved field in parameter    * 00031600
*                             list was non-zero.                      * 00031700
*                                                                     * 00031800
*                             Action: Check for possible storage      * 00031900
*                             overlay of the parameter list.          * 00032000
*                                                                     * 00032100
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00032200
*                                                                     * 00032300
*                             Meaning: Version number in parameter    * 00032400
*                             list is not valid.                      * 00032500
*                                                                     * 00032600
*                             Action: Check for possible storage      * 00032700
*                             overlay of the parameter list.          * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*            C    Name: IwmRetCodeEnvError                            * 00033300
*                                                                     * 00033400
*                 Meaning: Environmental error.                       * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                 HEX REASON  MEANING/ACTION                          * 00033900
*                 CODE                                                * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*            10   Name: IwmRetCodeCompError                           * 00034500
*                                                                     * 00034600
*                 Meaning: Component error.                           * 00034700
*                                                                     * 00034800
*                 Action: Contact your system programmer.             * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*01* REASON CODES:                                                    * 00035400
*                                                                     * 00035500
*       A unique reason code will be returned whenever the return     * 00035600
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00035700
*       under their corresponding return code.  Reason code and       * 00035800
*       return code constants are defined within IWMYCON.  Note that  * 00035900
*       the high order halfword of register 0, and the reason code    * 00036000
*       variable when specified, may be non-zero and represents       * 00036100
*       diagnostic data which is NOT part of the external interface.  * 00036200
*       The high order halfword should thus be excluded from          * 00036300
*       comparison with the reason code values described above.  The  * 00036400
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00036500
*       used for this purpose.                                        * 00036600
*                                                                     * 00036700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00036800
*                                                                     * 00036900
*02*   PROCESSOR:  ASSEM                                              * 00037000
*                                                                     * 00037100
*01* COMPONENT:  SCWLM                                                * 00037200
*                                                                     * 00037300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00037400
*                                                                     * 00037500
*01* EXAMPLES:                                                        * 00037600
*                                                                     * 00037700
*    To pass a bqsint from JES2 to WLM :                              * 00037800
*                                                                     * 00037900
*               IWMBSMP  BQS=(Rx),SVDEF_ID=SVDEF_ID,                X * 00038000
*                     RETCODE=RC,RSNCODE=RSN                          * 00038100
*      *                                                              * 00038200
*      * Storage areas                                                * 00038300
*      *                                                              * 00038400
*      BQS       DS   A               Contains the pointer to the BQS * 00038500
*      *                              interface element.              * 00038600
*      SVDEF_ID  DS   CL32            Contains the WLM service        * 00038700
*      *                              definition identifier correspon * 00038800
*      ding                                                           * 00038900
*      *                              to the service definition used  * 00039000
*      *                              to create the queue             * 00039100
*      RC       DS    F               Return code                     * 00039200
*      RSN      DS    F               Reason code                     * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*01* MACRO USAGE NOTES:                                               * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00039900
*        global macro variable.  Any value other than 'NO' will       * 00040000
*        result in the macro expansion being printed.  The default is * 00040100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00040200
*        variable should be set.                                      * 00040300
*                                                                     * 00040400
*                    GBLC &ZPRINT                                     * 00040500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*    2.  All keys currently contained in the IWMBSMP macro correspond * 00040900
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00041000
*        MAX.                                                         * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*01* CHANGE ACTIVITY:                                                 * 00041600
*                                                                     * 00041700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00041800
*                                                                     * 00041900
*    $L0=WLMP     JBB6604 970115 PC:  Batch Queue Sampling            * 00042000
****** END OF SPECIFICATIONS *****************************************/ 00042100
*/* TLINE 1 *********************************************************** 00042200
         MACRO                                                          00042300
&XLABEL  IWMBSMP &BQS=,&SVDEF_ID=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=   00042400
.*                                                                      00042500
*              MACDATE -02/26/97-<0>                                    00042600
.*                                                                      00042700
.*******************************************************************    00042800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00042900
.*******************************************************************    00043000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00043100
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00043200
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00043300
.*                                                                      00043400
              GBLC  &ZIWMBSMP   YES=MACRO USED AT LEAST ONCE            00043500
.*******************************************************************    00043600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00043700
.*******************************************************************    00043800
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00043900
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00044000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00044100
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00044200
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00044300
              LCLA  &ZAWRK      USED AS A WORK AREA                     00044400
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00044500
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00044600
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00044700
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00044800
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00044900
              LCLA  &ZMACRET    MACRO RETURN CODE                       00045000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00045100
.*                                                                      00045200
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00045300
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00045400
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00045500
              LCLC  &ZENDBASEPL                 End of base PL          00045600
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00045700
.*******************************************************************    00045800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00045900
.*******************************************************************    00046000
              LCLA  &ZI         INDEX FOR ARRAY                         00046100
              LCLA  &ZJ         INDEX FOR PARMS                         00046200
              LCLA  &ZK         INDEX FOR PARSE                         00046300
              LCLA  &ZLO        LOW RANGE VALUE                         00046400
              LCLA  &ZHI        HIGH RANGE VALUE                        00046500
              LCLC  &ZW         WORK AREA FOR PARM                      00046600
.********************************************************************   00046700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00046800
.********************************************************************   00046900
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00047000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00047100
.*                                                                      00047200
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00047300
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00047400
              SPLEVEL  TEST                                             00047500
.ZSYS2        ANOP  ,                                                   00047600
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00047700
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00047800
              SYSSTATE TEST                                             00047900
              AGO   .ZSYS4                                              00048000
.ZSYS3        ANOP  ,                                                   00048100
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00048200
.ZSYS4        ANOP  ,                                                   00048300
.*******************************************************************    00048400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00048500
.*******************************************************************    00048600
              LCLC  &XBQS       ++ NAME                                 00048700
              LCLC  &XSVDEF_ID  ++ NAME                                 00048800
              LCLC  &XRETCODE   ++ NAME                                 00048900
              LCLC  &XRSNCODE   ++ NAME                                 00049000
              LCLA  &XPLISTVER  ++ VALUE                                00049100
              LCLC  &XMF        ++ VALUE                                00049200
              LCLC  &XMFCTRL    ++ NAME                                 00049300
              LCLC  &XMFATTR    ++ VALUE                                00049400
              LCLC  &XMFSCK     ++ VALUE                                00049500
.*******************************************************************    00049600
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00049700
.*******************************************************************    00049800
              LCLC  &ZXBQS      ++ INPUT NAME                           00049900
              LCLC  &ZXSVDEF_ID                 ++ INPUT NAME           00050000
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00050100
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00050200
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00050300
              LCLC  &ZXMF       ++ INPUT VALUE                          00050400
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00050500
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00050600
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00050700
.********************************************************************   00050800
.***AC.PLV01  PROCESS PLISTVER                                      *   00050900
.********************************************************************   00051000
&XPLISTVER      SETA  0                                                 00051100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00051200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00051300
&XPLISTVER      SETA  0                                                 00051400
.ZPLV0          ANOP  ,                                                 00051500
.*                                                                      00051600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00051700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00051800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00051900
.*-------------------------------------------------------------------   00052000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00052100
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00052200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00052300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00052400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00052500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00052600
                AGO   .ZPVCK2                                           00052700
.ZPVCK3         ANOP  ,                                                 00052800
.*-------------------------------------------------------------------   00052900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00053000
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00053100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00053200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00053300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00053400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00053500
                AGO   .ZPVCKE                                           00053600
.ZPVCK2         ANOP  ,                                                 00053700
.*-------------------------------------------------------------------   00053800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00053900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00054000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00054100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00054200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00054300
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00054400
.ZPVCK6         ANOP  ,                                                 00054500
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00054600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00054700
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00054800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00054900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00055000
&XPLISTVER      SETA  0                                                 00055100
                AGO   .ZPVCKE                                           00055200
.*-------------------------------------------------------------------   00055300
.ZPVCK4A        ANOP  ,                                                 00055400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00055500
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00055600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00055700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00055800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00055900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00056000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00056100
                AGO   .ZPVCK5                                           00056200
.ZPVCK4         ANOP  ,                                                 00056300
&XPLISTVER      SETA  &PLISTVER(1)                                      00056400
.ZPVCK5         ANOP  ,                                                 00056500
.ZPVCKE         ANOP  ,                                                 00056600
.********************************************************************   00056700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00056800
.********************************************************************   00056900
              ACTR  10000                                               00057000
.*------------------------------------------------------------------    00057100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00057200
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00057300
.*-------------------------------------------------------------------   00057400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00057500
.ZG18         ANOP  ,                                                   00057600
&ZTLC         SETC 'S'                                                  00057700
              AIF   ('&MF(1)' NE '&ZTLC').ZG19                          00057800
&XMF          SETC  'S'         SET KEYWORD                             00057900
              AIF   (N'&MF LE 1).ZG18A          CK NUM                  00058000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00058100
&ZMS          SETC  '&ZMS.&MF"'                                         00058200
&ZMS          SETC  '&ZMS "MF"'                                         00058300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00058400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058500
.ZG18A        ANOP  ,                                                   00058600
.*-------------------------------------------------------------------   00058700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00058800
.ZG19         ANOP  ,                                                   00058900
&ZTLC         SETC 'L'                                                  00059000
              AIF   ('&MF(1)' NE '&ZTLC').ZG26                          00059100
&XMF          SETC  'L'         SET KEYWORD                             00059200
              AIF   (N'&MF LE 3).ZG19A          CK NUM                  00059300
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00059400
&ZMS          SETC  '&ZMS.&MF"'                                         00059500
&ZMS          SETC  '&ZMS "MF"'                                         00059600
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00059700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00059800
.ZG19A        ANOP  ,                                                   00059900
.*-------------------------------------------------------------------   00060000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00060100
              AIF   (N'&SYSLIST NE 0).ZG19B     POSITIONALS?            00060200
              AIF   ('&BQS' NE '').ZG19B        KEYS?                   00060300
              AIF   ('&SVDEF_ID' NE '').ZG19B   KEYS?                   00060400
              AIF   ('&RETCODE' NE '').ZG19B    KEYS?                   00060500
              AIF   ('&RSNCODE' NE '').ZG19B    KEYS?                   00060600
              AGO    .ZG19C     INVOCATION OKAY                         00060700
.ZG19B        ANOP  ,                                                   00060800
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00060900
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00061000
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00061100
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00061200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061300
.ZG19C        ANOP  ,                                                   00061400
.*-------------------------------------------------------------------   00061500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00061600
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00061700
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00061800
              AIF   (N'&MF(2) GT 1).ZG21B       MULTI PARMS             00061900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00062000
.ZG21B        AIF   (K'&MF(2) GT 0).ZG21C                               00062100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00062200
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00062300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00062400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00062500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00062600
.ZG21C        ANOP  ,                                                   00062700
.*-------------------------------------------------------------------   00062800
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00062900
              AIF   (K'&ZXMFCTRL LE 0).ZG21P    NOT I/O                 00063000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG21P                      00063100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00063200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00063300
&ZMS          SETC  '&ZMS.&MF"'                                         00063400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00063500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00063600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063700
.ZG21P        ANOP  ,                                                   00063800
.*-------------------------------------------------------------------   00063900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00064000
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00064100
&XMFATTR      SETC  '0D'                                                00064200
              AIF   (K'&MF(3) LE 0).ZG24B       PARM                    00064300
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00064400
              AIF   (N'&MF(3) GT 1).ZG24B       MULTI PARMS             00064500
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00064600
.ZG24B        ANOP  ,                                                   00064700
.*-------------------------------------------------------------------   00064800
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00064900
              AIF   (K'&ZXMFATTR LE 0).ZG24P    NOT I/O                 00065000
              AIF   ('&XMFATTR'(1,1) NE '(').ZG24P                      00065100
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00065200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00065300
&ZMS          SETC  '&ZMS.&MF"'                                         00065400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00065500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00065600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065700
.ZG24P        ANOP  ,                                                   00065800
.*-------------------------------------------------------------------   00065900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00066000
              AIF   (K'&ZXMFATTR LE 0).ZG24S    NOT I/O                 00066100
              AIF   (K'&XMFATTR LE 60).ZG24S    LNG OK                  00066200
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00066300
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00066400
&ZMS          SETC  '&ZMS.&MF"'                                         00066500
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00066600
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00066700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066800
.ZG24S        ANOP  ,                                                   00066900
.*-------------------------------------------------------------------   00067000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067100
.ZG26         ANOP  ,                                                   00067200
&ZTLC         SETC 'E'                                                  00067300
              AIF   ('&MF(1)' NE '&ZTLC').ZG34                          00067400
&XMF          SETC  'E'         SET KEYWORD                             00067500
              AIF   (N'&MF LE 3).ZG26A          CK NUM                  00067600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00067700
&ZMS          SETC  '&ZMS.&MF"'                                         00067800
&ZMS          SETC  '&ZMS "MF"'                                         00067900
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00068000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068100
.ZG26A        ANOP  ,                                                   00068200
.*-------------------------------------------------------------------   00068300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00068400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00068500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00068600
              AIF   (N'&MF(2) GT 1).ZG28B       MULTI PARMS             00068700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00068800
.ZG28B        AIF   (K'&MF(2) GT 0).ZG28C                               00068900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00069000
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00069100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00069200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00069300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069400
.ZG28C        ANOP  ,                                                   00069500
.*-------------------------------------------------------------------   00069600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00069700
              AIF   (K'&ZXMFCTRL LE 0).ZG28R    NOT I/O                 00069800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG28R                      00069900
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00070000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                        00070100
              AIF   (K'&ZCGPR GT 2).ZG28Q                               00070200
              AIF   ('&ZCGPR' EQ '0').ZG28Q                             00070300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00070400
              AIF   (T'&ZCGPR NE 'N').ZG28Q     INVALID REG NAME        00070500
.ZG28P        ANOP  ,                                                   00070600
              AIF   (T'&ZCGPR NE 'N').ZG28R     NON NUMERIC             00070700
              AIF   ('&ZCGPR' LT '1').ZG28Q                             00070800
              AIF   ('&ZCGPR' LE '12').ZG28R                            00070900
.ZG28Q        ANOP  ,                                                   00071000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00071100
&ZMS          SETC  '&ZMS.&MF"'                                         00071200
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00071300
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00071400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071500
.ZG28R        ANOP  ,                                                   00071600
.*-------------------------------------------------------------------   00071700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00071800
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00071900
.ZG32A   AIF   ('&MF(3)' NE 'COMPLETE').ZG33A                           00072000
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00072100
.*-------------------------------------------------------------------   00072200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00072300
.ZG33A        AIF   (K'&XMFSCK GT 0).ZG33C      KEYWORD                 00072400
              AIF   (K'&MF(3) LE 0).ZG33B                               00072500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00072600
&ZMS          SETC  '&ZMS.&MF"'                                         00072700
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00072800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00072900
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00073000
              MNOTE 8,' &ZMS '                                          00073100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073200
.ZG33B        ANOP  ,                                                   00073300
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00073400
.ZG33C        ANOP  ,                                                   00073500
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00073600
.*------------------------------------------------------------------    00073700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073800
.ZG34         ANOP  ,                                                   00073900
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00074000
              AIF   (K'&XMF GT 0).ZG34E         VALID ARG               00074100
              AIF   (T'&MF EQ 'O').ZG34D        OMITTED                 00074200
&ZASYSLNDX    SETA  0                                                   00074300
.ZG34A        ANOP  ,           POSITIONAL MACRO KEY                    00074400
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00074500
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C                    00074600
&ZTLC         SETC 'MF'                                                 00074700
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A           00074800
.ZG34B        ANOP  ,                                                   00074900
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00075000
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00075100
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00075200
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00075300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075400
              AGO   .ZG34E                                              00075500
.ZG34C        ANOP  ,                                                   00075600
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00075700
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00075800
&ZMS          SETC  '&ZMS.&MF"'                                         00075900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00076000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00076100
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00076200
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00076300
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00076400
              MNOTE 8,' &ZMS '                                          00076500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00076600
              AGO   .ZG34E                                              00076700
.ZG34D        ANOP  ,                                                   00076800
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00076900
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00077000
.ZG34E        ANOP  ,                                                   00077100
.********************************************************************   00077200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00077300
.********************************************************************   00077400
              ACTR  10000                                               00077500
.*-------------------------------------------------------------------   00077600
.***AG.MF03 MF=(SLE)                                                    00077700
              AIF   ('&XMF' EQ 'L').ZGMFX                               00077800
.*----------------------------------------------------------------***   00077900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00078000
              AIF   (N'&BQS LE 1).ZG2A          CK NUM                  00078100
&ZMS          SETC  '"BQS='     *KPOSA* MNOTE                           00078200
&ZMS          SETC  '&ZMS.&BQS"'                                        00078300
&ZMS          SETC  '&ZMS "BQS"'                                        00078400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00078500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078600
.ZG2A         ANOP  ,                                                   00078700
.*-------------------------------------------------------------------   00078800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00078900
&ZXBQS        SETC  'INPUT'     SET IN/OUTPUT                           00079000
&XBQS         SETC  '&BQS(1)'   SET XVARIABLE                           00079100
              AIF   (N'&BQS GT 1).ZG2B          MULTI PARMS             00079200
&XBQS         SETC  '&BQS'      SET XVARIABLE                           00079300
.ZG2B         AIF   (K'&BQS(1) GT 0).ZG2C                               00079400
&ZXBQS        SETC  ''          RESET IN/OUTPUT                         00079500
&ZMS          SETC  ' '         *KRQDA*                                 00079600
&ZMS          SETC  '&ZMS "BQS" KEY AND ITS ARGUMENT'                   00079700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00079800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079900
.ZG2C         ANOP  ,                                                   00080000
.*-------------------------------------------------------------------   00080100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00080200
              AIF   (K'&ZXBQS LE 0).ZG2R        NOT I/O                 00080300
              AIF   ('&XBQS'(1,1) NE '(').ZG2R                          00080400
&ZCGPR        SETC  '&XBQS'(2,K'&XBQS-2)                                00080500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00080600
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00080700
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00080800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00080900
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00081000
.ZG2P         ANOP  ,                                                   00081100
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00081200
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00081300
              AIF   ('&ZCGPR' LE '12').ZG2R                             00081400
.ZG2Q         ANOP  ,                                                   00081500
&ZMS          SETC  '"BQS='     *KGPRA* MNOTE                           00081600
&ZMS          SETC  '&ZMS.&BQS"'                                        00081700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00081800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00081900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082000
.ZG2R         ANOP  ,                                                   00082100
.*----------------------------------------------------------------***   00082200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00082300
              AIF   (N'&SVDEF_ID LE 1).ZG4A     CK NUM                  00082400
&ZMS          SETC  '"SVDEF_ID='                *KPOSA* MNOTE           00082500
&ZMS          SETC  '&ZMS.&SVDEF_ID"'                                   00082600
&ZMS          SETC  '&ZMS "SVDEF_ID"'                                   00082700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00082800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082900
.ZG4A         ANOP  ,                                                   00083000
.*-------------------------------------------------------------------   00083100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00083200
&ZXSVDEF_ID   SETC  'INPUT'     SET IN/OUTPUT                           00083300
&XSVDEF_ID    SETC  '&SVDEF_ID(1)'              SET XVARIABLE           00083400
              AIF   (N'&SVDEF_ID GT 1).ZG4B     MULTI PARMS             00083500
&XSVDEF_ID    SETC  '&SVDEF_ID'                 SET XVARIABLE           00083600
.ZG4B         AIF   (K'&SVDEF_ID(1) GT 0).ZG4C                          00083700
&ZXSVDEF_ID   SETC  ''          RESET IN/OUTPUT                         00083800
&ZMS          SETC  ' '         *KRQDA*                                 00083900
&ZMS          SETC  '&ZMS "SVDEF_ID" KEY AND ITS ARGUMENT'              00084000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00084100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00084200
.ZG4C         ANOP  ,                                                   00084300
.*-------------------------------------------------------------------   00084400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00084500
              AIF   (K'&ZXSVDEF_ID LE 0).ZG4R   NOT I/O                 00084600
              AIF   ('&XSVDEF_ID'(1,1) NE '(').ZG4R                     00084700
&ZCGPR        SETC  '&XSVDEF_ID'(2,K'&XSVDEF_ID-2)                      00084800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                         00084900
              AIF   (K'&ZCGPR GT 2).ZG4Q                                00085000
              AIF   ('&ZCGPR' EQ '0').ZG4Q                              00085100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00085200
              AIF   (T'&ZCGPR NE 'N').ZG4Q      INVALID REG NAME        00085300
.ZG4P         ANOP  ,                                                   00085400
              AIF   (T'&ZCGPR NE 'N').ZG4R      NON NUMERIC             00085500
              AIF   ('&ZCGPR' LT '2').ZG4Q                              00085600
              AIF   ('&ZCGPR' LE '12').ZG4R                             00085700
.ZG4Q         ANOP  ,                                                   00085800
&ZMS          SETC  '"SVDEF_ID='                *KGPRA* MNOTE           00085900
&ZMS          SETC  '&ZMS.&SVDEF_ID"'                                   00086000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00086100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00086200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086300
.ZG4R         ANOP  ,                                                   00086400
.*----------------------------------------------------------------***   00086500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00086600
              AIF   (N'&RETCODE LE 1).ZG8A      CK NUM                  00086700
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00086800
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00086900
&ZMS          SETC  '&ZMS "RETCODE"'                                    00087000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00087100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087200
.ZG8A         ANOP  ,                                                   00087300
.*-------------------------------------------------------------------   00087400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00087500
              AIF   (K'&RETCODE(1) LE 0).ZG8C   NO PARM                 00087600
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00087700
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00087800
              AIF   (N'&RETCODE GT 1).ZG8C                              00087900
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00088000
.ZG8C         ANOP  ,                                                   00088100
.*-------------------------------------------------------------------   00088200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00088300
              AIF   (K'&ZXRETCODE LE 0).ZG8R    NOT I/O                 00088400
              AIF   ('&XRETCODE'(1,1) NE '(').ZG8R                      00088500
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00088600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00088700
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00088800
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00088900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00089000
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00089100
.ZG8P         ANOP  ,                                                   00089200
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00089300
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00089400
              AIF   ('&ZCGPR' LE '12').ZG8R                             00089500
.ZG8Q         ANOP  ,                                                   00089600
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00089700
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00089800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00089900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00090000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00090100
.ZG8R         ANOP  ,                                                   00090200
.*----------------------------------------------------------------***   00090300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00090400
              AIF   (N'&RSNCODE LE 1).ZG11A     CK NUM                  00090500
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00090600
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00090700
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00090800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00090900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00091000
.ZG11A        ANOP  ,                                                   00091100
.*-------------------------------------------------------------------   00091200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00091300
              AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM                 00091400
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00091500
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00091600
              AIF   (N'&RSNCODE GT 1).ZG11C                             00091700
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00091800
.ZG11C        ANOP  ,                                                   00091900
.*-------------------------------------------------------------------   00092000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00092100
              AIF   (K'&ZXRSNCODE LE 0).ZG11R   NOT I/O                 00092200
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                     00092300
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00092400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00092500
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00092600
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00092700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00092800
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00092900
.ZG11P        ANOP  ,                                                   00093000
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00093100
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00093200
              AIF   ('&ZCGPR' LE '12').ZG11R                            00093300
.ZG11Q        ANOP  ,                                                   00093400
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00093500
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00093600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00093700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00093800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093900
.ZG11R        ANOP  ,                                                   00094000
.******************************************************************     00094100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00094200
.******************************************************************     00094300
              ACTR  10000                                               00094400
.*----------------------------------------------------------------***   00094500
.***AH.P02 EXTRA POSITIONALS                                            00094600
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00094700
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00094800
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00094900
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00095000
.ZGLISTX1     ANOP  ,                                                   00095100
&ZCVAL        SETC  ''          ERROR FIELD                             00095200
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00095300
.ZGLIST2      ANOP  ,                                                   00095400
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00095500
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00095600
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00095700
              AGO   .ZGLIST2                                            00095800
.*                                                                      00095900
.ZGLIST3      ANOP  ,                                                   00096000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00096100
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00096200
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00096300
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00096400
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00096500
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00096600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096700
.ZGLISTX      ANOP  ,                                                   00096800
&ZASYSLNDX    SETA  0                                                   00096900
.*-------------------------------------------------------------------   00097000
.***AG.MF04 MF=(SLE)                                                    00097100
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00097200
.*******************************************************************    00097300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00097400
.*******************************************************************    00097500
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00097600
.*******************************************************************    00097700
.***AE.01  START OF IWMBSMP MACRO CODE                                  00097800
.*******************************************************************    00097900
              LCLC  &M0M0001                 NAME                       00098000
&M0M0001      SETC  '&XLABEL'                SET NAME                   00098100
              AIF   (K'&XLABEL NE 0).XLAB2                              00098200
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00098300
.*                                                                      00098400
.XLAB2        ANOP  ,                                                   00098500
              AIF   ('&XMF' EQ 'L').XLAB3                               00098600
&M0M0001 DS    0H                             IWMBSMP-0                 00098700
.XLAB3        ANOP  ,                                                   00098800
.*******************************************************************    00098900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00099000
.*******************************************************************    00099100
              PUSH  PRINT                                               00099200
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00099300
              PRINT OFF         ++ PR01                                 00099400
              AGO   .ZPRNTXX                                            00099500
.ZPRINTX      PRINT ON                                                  00099600
.ZPRNTXX      ANOP  ,                                                   00099700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00099800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00099900
.********************************************************************   00100000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00100100
.********************************************************************   00100200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00100300
                      LCLA  &ZOPN1         INVOCATION INDEX             00100400
                      LCLC  &ZOPL(4095)    LABEL                        00100500
                      LCLC  &ZOPO(4095)    OPERATION                    00100600
                      LCLC  &ZOPV(4095)    VALUE                        00100700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00100800
.*                                                                      00100900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00101000
.******************************************************************     00101100
.***AL.L10 IWMBSMP FMT=LIST MF=S|L PARAMETERS                           00101200
.******************************************************************     00101300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00101400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00101500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00101600
&XMFATTR              SETC  '0D'                                        00101700
.*                                                                      00101800
&ZOPN                 SETA  &ZOPN+1                                     00101900
&ZOPL(&ZOPN)          SETC  ' '                                         00102000
&ZOPO(&ZOPN)          SETC  'B'                                         00102100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00102200
&ZOPD(&ZOPN)          SETC  '++ IWMBSMP ARG PARMS'                      00102300
.*                                                                      00102400
&ZOPN                 SETA  &ZOPN+1                                     00102500
&ZOPL(&ZOPN)          SETC  ' '                                         00102600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00102700
&ZOPV(&ZOPN)          SETC  '1'                                         00102800
&ZOPD(&ZOPN)          SETC  ' '                                         00102900
.*                                                                      00103000
.ZLMFSL2              ANOP  ,                                           00103100
.*-------------------------------------------------------------------   00103200
.***AM.L00  IWMBSMP FMT=LIST name                                       00103300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00103400
&ZOPN                 SETA &ZOPN+1                                      00103500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00103600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00103700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00103800
&ZOPD(&ZOPN)          SETC '++ IWMBSMP NAME'                            00103900
.ZLMFSL2M             ANOP  ,                                           00104000
.*-------------------------------------------------------------------   00104100
.***AM.L01  IWMBSMP FMT=LIST PARAMETERS                                 00104200
&ZOPN                 SETA &ZOPN+1                                      00104300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00104400
&ZOPO(&ZOPN)          SETC 'DS'                                         00104500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00104600
&ZOPD(&ZOPN)          SETC '++ IWMBSMP PARM LIST'                       00104700
.*-------------------------------------------------------------------   00104800
.***AM.L02 XVERSION XL1                                                 00104900
&ZOPN                 SETA &ZOPN+1                                      00105000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00105100
&ZOPO(&ZOPN)          SETC 'DS'                                         00105200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00105300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00105400
.*-------------------------------------------------------------------   00105500
.***AM.L09  XRSV0001 CL1                                                00105600
&ZOPN                 SETA &ZOPN+1                                      00105700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00105800
&ZOPO(&ZOPN)          SETC 'DS'                                         00105900
&ZOPV(&ZOPN)          SETC 'CL1'                                        00106000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00106100
.*-------------------------------------------------------------------   00106200
.***AM.L09  XPLISTLEN XL2                                               00106300
&ZOPN                 SETA &ZOPN+1                                      00106400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00106500
&ZOPO(&ZOPN)          SETC 'DS'                                         00106600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00106700
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00106800
.*-------------------------------------------------------------------   00106900
.***AM.L09  XBQS F                                                      00107000
&ZOPN                 SETA &ZOPN+1                                      00107100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBQS'                             00107200
&ZOPO(&ZOPN)          SETC 'DS'                                         00107300
&ZOPV(&ZOPN)          SETC 'F'                                          00107400
&ZOPD(&ZOPN)          SETC '++ &ZXBQS  XBQS'                            00107500
.*-------------------------------------------------------------------   00107600
.***AM.L09  XSVDEF_ID CL32                                              00107700
&ZOPN                 SETA &ZOPN+1                                      00107800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSVDEF_ID'                        00107900
&ZOPO(&ZOPN)          SETC 'DS'                                         00108000
&ZOPV(&ZOPN)          SETC 'CL32'                                       00108100
&ZOPD(&ZOPN)          SETC '++ &ZXSVDEF_ID  XSVDEF_ID'                  00108200
.*-------------------------------------------------------------------   00108300
.***AM.L09  XRSV0040 CL4                                                00108400
&ZOPN                 SETA &ZOPN+1                                      00108500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0040'                         00108600
&ZOPO(&ZOPN)          SETC 'DS'                                         00108700
&ZOPV(&ZOPN)          SETC 'CL4'                                        00108800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0040'                      00108900
.*-------------------------------------------------------------------   00109000
.***AM.L09  XRSV0044 CL8                                                00109100
&ZOPN                 SETA &ZOPN+1                                      00109200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0044'                         00109300
&ZOPO(&ZOPN)          SETC 'DS'                                         00109400
&ZOPV(&ZOPN)          SETC 'CL8'                                        00109500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0044'                      00109600
.*-------------------------------------------------------------------   00109700
.***AM.L10 END OF IWMBSMP LIST PARAMETERS                               00109800
&ZOPN                 SETA &ZOPN+1                                      00109900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00110000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00110100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00110200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00110300
.*                                                                      00110400
&ZOPN                 SETA &ZOPN+1                                      00110500
&ZOPL(&ZOPN)          SETC ' '                                          00110600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00110700
&ZOPV(&ZOPN)          SETC '1'                                          00110800
&ZOPD(&ZOPN)          SETC ' '                                          00110900
.*-------------------------------------------------------------------   00111000
.***AL.L12 IWMBSMP FMT=LIST MF=S|L PARAMETERS                           00111100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00111200
.*                                                                      00111300
&ZOPN                 SETA  &ZOPN+1                                     00111400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00111500
&ZOPO(&ZOPN)          SETC  'DC'                                        00111600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00111700
&ZOPD(&ZOPN)          SETC  '++ IWMBSMP ARG PARMS'                      00111800
.*                                                                      00111900
.ZLMFSLX              ANOP  ,                                           00112000
.*-------------------------------------------------------------------   00112100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00112200
&ZPLLEN               SETA 52                                           00112300
.*                                                                      00112400
.******************************************************************     00112500
.***AI.L01 IWMBSMP FMT=LIST FILL IN PARAMETER AREA                      00112600
.******************************************************************     00112700
                      ACTR  10000                                       00112800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00112900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00113000
&ZCVAL                SETC  'LAE'          XAX MODE                     00113100
.ZIMFXA               ANOP ,                                            00113200
.*                                                                      00113300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00113400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00113500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00113600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00113700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00113800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00113900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00114000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00114100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00114200
&ZOPN                 SETA  &ZOPN+1                                     00114300
&ZOPL(&ZOPN)          SETC  ' '                                         00114400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00114500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00114600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00114700
                      AGO   .ZIMFNX                                     00114800
.*                                                                      00114900
.ZIMFN2               ANOP ,                                            00115000
&ZOPN                 SETA  &ZOPN+1                                     00115100
&ZOPL(&ZOPN)          SETC  ' '                                         00115200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00115300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00115400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00115500
.ZIMFNX               ANOP ,                                            00115600
.********************************************************************   00115700
.***AI.L02 IWMBSMP FMT=LIST INITIALIZE PARAMETER AREA                   00115800
.********************************************************************   00115900
.***AI.L03 MF=(SLE)                                                     00116000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00116100
.*                                                                      00116200
&ZOPN                 SETA  &ZOPN+1                                     00116300
&ZOPL(&ZOPN)          SETC  ' '                                         00116400
&ZOPO(&ZOPN)          SETC  'XC'                                        00116500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00116600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00116700
.ZIMFLX               ANOP  ,                                           00116800
.*-------------------------------------------------------------------   00116900
.***AI.L04 XPLISTLEN XL2                                                00117000
&ZOPN                 SETA  &ZOPN+1                                     00117100
&ZOPL(&ZOPN)          SETC  ' '                                         00117200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00117300
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00117400
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00117500
.*-------------------------------------------------------------------   00117600
.***AI.L25  XBQS F                                                      00117700
                      AIF   ('&ZXBQS' EQ '').ZI4E                       00117800
                      AIF   ('&ZXBQS' EQ 'OUTPUT').ZI4E                 00117900
&ZCGPR                SETC  '&XBQS'                                     00118000
.*                                                                      00118100
                      AIF   ('&XBQS'(1,1) NE '(').ZI4B                  00118200
&ZCGPR   SETC  '0('.'&XBQS'(2,K'&XBQS-2).')'                            00118300
                      AGO   .ZI4D                                       00118400
.ZI4B                 ANOP  ,                                           00118500
.*                                                                      00118600
&ZC                   SETC  '&XBQS'(1,1)                                00118700
                      AIF   (T'&ZC NE 'N').ZI4D                         00118800
&ZC                   SETC  '&XBQS'                                     00118900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00119000
&ZCGPR                SETC  '=FL4''&XBQS'''                             00119100
.*                                                                      00119200
.ZI4D                 ANOP  ,                                           00119300
.*                                                                      00119400
&ZOPN                 SETA  &ZOPN+1                                     00119500
&ZOPL(&ZOPN)          SETC  ' '                                         00119600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00119700
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00119800
&ZOPD(&ZOPN)          SETC  '++ &ZXBQS XBQS'                            00119900
.*                                                                      00120000
.ZI4E                 ANOP  ,                                           00120100
.*-------------------------------------------------------------------   00120200
.***AI.L25  XSVDEF_ID CL32                                              00120300
                      AIF   ('&ZXSVDEF_ID' EQ '').ZI5E                  00120400
                      AIF   ('&ZXSVDEF_ID' EQ 'OUTPUT').ZI5E            00120500
&ZCGPR                SETC  '&XSVDEF_ID'                                00120600
.*                                                                      00120700
                      AIF   ('&XSVDEF_ID'(1,1) NE '(').ZI5B             00120800
&ZCGPR   SETC  '0('.'&XSVDEF_ID'(2,K'&XSVDEF_ID-2).')'                  00120900
.ZI5B                 ANOP  ,                                           00121000
.*                                                                      00121100
&ZOPN                 SETA  &ZOPN+1                                     00121200
&ZOPL(&ZOPN)          SETC  ' '                                         00121300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00121400
&ZOPV(&ZOPN)          SETC  '8(32,1),&ZCGPR'                            00121500
&ZOPD(&ZOPN)          SETC  '++ &ZXSVDEF_ID XSVDEF_ID'                  00121600
.*                                                                      00121700
.ZI5E                 ANOP  ,                                           00121800
.*-------------------------------------------------------------------   00121900
&ZOPN1                SETA &ZOPN                                        00122000
.*******************************************************************    00122100
.***  PROCESS IWMBSMP OUTPUT PARAMETERS                                 00122200
.*******************************************************************    00122300
                      ACTR  10000                                       00122400
.*******************************************************************    00122500
.***AO.X02  RETURN CODE PROCESSING                                      00122600
.*******************************************************************    00122700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00122800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00122900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00123000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00123100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00123200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00123300
&ZOPN                 SETA  &ZOPN+1                                     00123400
&ZOPL(&ZOPN)          SETC  ' '                                         00123500
&ZOPO(&ZOPN)          SETC  'ST'                                        00123600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00123700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00123800
                      AGO   .ZMRETX                                     00123900
.*                                                                      00124000
.ZMRET2               ANOP  ,                                           00124100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00124200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00124300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00124400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00124500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00124600
&ZOPN                 SETA  &ZOPN+1                                     00124700
&ZOPL(&ZOPN)          SETC  ' '                                         00124800
&ZOPO(&ZOPN)          SETC  'LR'                                        00124900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00125000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00125100
.ZMRETX               ANOP  ,                                           00125200
.*******************************************************************    00125300
.***AO.X03  REASON CODE PROCESSING                                      00125400
.*******************************************************************    00125500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00125600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00125700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00125800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00125900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00126000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00126100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00126200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00126300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00126400
&ZOPN                 SETA  &ZOPN+1                                     00126500
&ZOPL(&ZOPN)          SETC  ' '                                         00126600
&ZOPO(&ZOPN)          SETC  'ST'                                        00126700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00126800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00126900
                      AGO   .ZMRSNX                                     00127000
.*                                                                      00127100
.ZMRSN2               ANOP  ,                                           00127200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00127300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00127400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00127500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00127600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00127700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00127800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00127900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00128000
&ZOPN                 SETA  &ZOPN+1                                     00128100
&ZOPL(&ZOPN)          SETC  ' '                                         00128200
&ZOPO(&ZOPN)          SETC  'LR'                                        00128300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00128400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00128500
.ZMRSNX               ANOP  ,                                           00128600
.*******************************************************************    00128700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00128800
.*******************************************************************    00128900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00129000
.*******************************************************************    00129100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00129200
.*******************************************************************    00129300
                      ACTR  10000                                       00129400
.*                                                                      00129500
                      LCLA  &ZLC           COLUMN POSITION              00129600
                      LCLA  &ZOPX          LIST TABLE INDEX             00129700
                      LCLC  &ZLL           LABEL                        00129800
                      LCLC  &ZLOP          OPERATION                    00129900
                      LCLC  &ZLV           VALUE                        00130000
                      LCLC  &ZLD           DESCRIPTION                  00130100
.*                                                                      00130200
&ZOPX                 SETA  1                                           00130300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00130400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00130500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00130600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00130700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00130800
                      AIF   (K'&ZLD LE 0).ZL5                           00130900
&ZLC                  SETA  35             COMMENT COLUMN               00131000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00131100
&ZLC                  SETA  33             COMMMENT COLUMN              00131200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00131300
&ZLV                  SETC  '&ZLV'.' '                                  00131400
                      AGO   .ZL3                                        00131500
.*                                                                      00131600
.ZL4                  ANOP  ,                                           00131700
&ZLV                  SETC  '&ZLV'.' '                                  00131800
.ZL5                  ANOP  ,                                           00131900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00132000
.*                                                                      00132100
&ZLL     &ZLOP &ZLV                                                     00132200
.*                                                                      00132300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00132400
                      AGO   .ZL2           CONTINUE LOOPING             00132500
.*                                                                      00132600
.ZLX                  ANOP  ,                                           00132700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00132800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00132900
         L     14,16(0,0)              GET CVT ADDRESS                  00133000
         L     14,772(14,0)            GET SFT ADDRESS                  00133100
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00133200
         LA    15,67                   GET EX FOR SERVICE ROUTINE       00133300
         OR    14,15                   GET PC NUMBER                    00133400
         PC    0(14)                                                    00133500
END&SYSNDX DS    0H                    END LABEL                        00133600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00133700
.ZLINKX               ANOP  ,                                           00133800
.*******************************************************************    00133900
.***AP.X01  FORMAT GENERATED CODE                                       00134000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00134100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00134200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00134300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00134400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00134500
                      AIF   (K'&ZLD LE 0).ZL51                          00134600
&ZLC                  SETA  35             COMMENT COLUMN               00134700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00134800
&ZLC                  SETA  33             COMMENT COLUMN               00134900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00135000
&ZLV                  SETC  '&ZLV'.' '                                  00135100
                      AGO   .ZL31                                       00135200
.*                                                                      00135300
.ZL41                 ANOP  ,                                           00135400
&ZLV                  SETC  '&ZLV'.' '                                  00135500
.ZL51                 ANOP  ,                                           00135600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00135700
.*                                                                      00135800
&ZLL     &ZLOP &ZLV                                                     00135900
.*                                                                      00136000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00136100
                      AGO   .ZL21          CONTINUE LOOPING             00136200
.*                                                                      00136300
.ZLX1                 ANOP  ,                                           00136400
.*******************************************************************    00136500
.***AP.X02  END OF IWMBSMP MACRO                                        00136600
&ZIWMBSMP             SETC  'YES'          SET IWMBSMP USED             00136700
         POP   PRINT                                                    00136800
*                                            IWMBSMP-0                  00136900
         SPACE 1                                                        00137000
.ZLX2                 ANOP  ,                                           00137100
         MEND                                                           00137200
**********************************************************************/ 00137300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00137400
*%IWMBSMP: MACRO KEYS(BQS,SVDEF_ID,RETCODE,RSNCODE,PLISTVER,MF);        00137500
*  ANS('?'||MACLABEL||' '||'IWMBSMPP '||MACLIST||                       00137600
*         ' '||MACKEYS||';') COL(MACLMAR);                              00137700
*%END IWMBSMP;                                                          00137800
