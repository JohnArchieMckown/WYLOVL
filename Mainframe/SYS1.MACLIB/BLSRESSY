*/* Start of Specifications for BLSRESSY *****************************/ 00050000
*/*                                                                  */ 00355400
*/* $MAC(BLSRESSY) COMP(SC132) PROD(HBB7703): Define ES record       */ 00358100
*/*                                                                  */ 00360800
*/* PROPRIETARY STATEMENT:                                           */ 00361000
*/*                                                                  */ 00361200
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00362000
*/*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    */ 00362200
*/*   5647-A01 (C) COPYRIGHT IBM CORP. 1977, 2000                    */ 00362400
*/*                                                                  */ 00362600
*/* STATUS= HBB7703                                                  */ 00362700
*/*                                                                  */ 00362800
*/* External classification: PI                                      */ 00362900
*/* End of external classification:                                  */ 00363000
*/*                                                                  */ 00363100
*/* DESCRIPTIVE NAME: IPCS Symbol Table Record                       */ 00363200
*/*   ACRONYM:  BLSRESSY                                             */ 00363300
*/*                                                                  */ 00363400
*/* MACRO NAME: BLSRESSY                                             */ 00363500
*/* DSECT NAME: ESSY                                                 */ 00363600
*/* COMPONENT:  IPCS (SC132)                                         */ 00363700
*/* EYE-CATCHER: ES                                                  */ 00363800
*/*     OFFSET:  0                                                   */ 00363900
*/*     LENGTH:  2                                                   */ 00364000
*/*                                                                  */ 00364100
*/* STORAGE ATTRIBUTES:                                              */ 00364200
*/*   SUBPOOL:  Any that may be altered by key 8 programs            */ 00364300
*/*   KEY:  8                                                        */ 00364400
*/*   RESIDENCY:  LOC(ANY,ANY)                                       */ 00364500
*/*   MAIN STORAGE:  No                                              */ 00364600
*/*   AUXILIARY STORAGE:  Yes                                        */ 00364700
*/*   VIRTUAL STORAGE:  No                                           */ 00364800
*/*   DATA SPACE: No                                                 */ 00364900
*/*                                                                  */ 00365000
*/* SIZE:                                                            */ 00365100
*/*   ABITS=31:  182 bytes + a remark containing 0-512 bytes of text */ 00365200
*/*   ABITS=64:  210 bytes + a remark containing 0-512 bytes of text */ 00365300
*/*                                                                  */ 00365400
*/* CREATED BY: IPCS subcommands concerned with debugging            */ 00365500
*/* POINTED TO BY: Parameter lists used by IPCS programs to describe */ 00365600
*/*   a block of storage in a dump or trace data set or a            */ 00365700
*/*   reconstruction of part of a dumped system.                     */ 00365800
*/*                                                                  */ 00365900
*/* SERIALIZATION: None                                              */ 00366000
*/*                                                                  */ 00366100
*/* Function= Each dump directory equate symbol record records the   */ 00366200
*/* association between a symbol, e.g., CVT, ASCB00001, ..., and the */ 00366300
*/* location and properties of a block of storage.  IPCS modules     */ 00366400
*/* also use this structure as a parameter to communicate the        */ 00366500
*/* location of a block of storage.                                  */ 00366600
*/*                                                                  */ 00366700
*/* METHOD OF ACCESS:                                                */ 00366800
*/*   Assembler:                                                     */ 00366900
*/*     name BLSRESSY ABITS=<31|64>,  Default is 31                  */ 00367000
*/*                   DSECT=<YES|NO>  Default is YES                 */ 00367100
*/*                                                                  */ 00367200
*/*   PL/X:                                                          */ 00367300
*/*     BLSRESSY <BUFFER>             Default is no room for remark  */ 00367400
*/*              MF(LIST,name,<COMPLETE> scope-and-storage-class);   */ 00367500
*/*                                                                  */ 00367600
*/* DELETED BY: IPCS                                                 */ 00367700
*/* DEPENDENCIES: None                                               */ 00367800
*/* DISTRIBUTION LIBRARY: AMACLIB                                    */ 00367900
*/*                                                                  */ 00368000
*/* ================================================================ */ 00368100
*/*                                                                  */ 00371600
*/* CHANGE ACTIVITY=                                                 */ 00379700
*/*                                                                  */ 00387800
*/*   Products=                                                      */ 00388000
*/* $L0= MVSIPCS,EIP1102,78001,PDE1: MVS IPCS initial release code   */ 00388200
*/*                                                                  */ 00388300
*/* ---------------------------------------------------------------- */ 00388400
*/*                                                                  */ 00388500
*/*   Hardware=                                                      */ 00388600
*/* $H1= 64BIT,HBB7703,98105,PDE1: Support 64-bit addressing         */ 00388700
*/*                                                                  */ 00388800
*/* ---------------------------------------------------------------- */ 00388900
*/*                                                                  */ 00389000
*/*   Design changes=                                                */ 00389100
*/* $D1= MACRO,HIP2102,79046,PDE1: Reduce size of listings           */ 00389200
*/* $D2= QUALITY,HIP2102,82025,PDE1: Improve comments, remarks       */ 00389300
*/*    = COMMON,HIP2102,81037,PDE1: Common storage flagging          */ 00389400
*/* $D4= DCR0049,JBB2125,83116,PDE1: Get/Store symbol services       */ 00389500
*/*                                                                  */ 00389600
*/* ---------------------------------------------------------------- */ 00389700
*/*                                                                  */ 00389800
*/*   PTMs=                                                          */ 00389900
*/* $P1= PA20393,JBB2220,85204,PDE1: Diagnose significant errors     */ 00390000
*/*      detected in a block each time that the associated symbol    */ 00390100
*/*      is retrieved from the symbol table.                         */ 00390200
*/* $P2= PXD0359,HBB7703,99236,PDE1: Correct generated remark text   */ 00390300
*/*                                                                  */ 00390400
*/* ---------------------------------------------------------------- */ 00390500
*/*                                                                  */ 00390600
*/*   Maintenance=                                                   */ 00390700
*/* $01= OY21501,HBB3310,89115,PDE4: Fast path trace access.         */ 00390800
*/*      Define flags in Assembler version                           */ 00390900
*/* $02= OY27252,HBB3310,900401,PSAX: Assembler declaration change.  */ 00391000
*/*                                                                  */ 00391100
*/*** End of Specifications for BLSRESSY ****************************** 00391200
         MACRO                                                          00391300
&P       BLSRESSY &DSECT=YES,&ABITS=31                             @H1C 00392000
         GBLA  &BLSABIT           ABITS                            @H1A 00392800
         GBLB  &EESSY             Blurb produced once in assembly  @D4A 00393600
         GBLC  &BLSADC            Data type                        @H1A 00394400
         BLSABITS ABITS=&ABITS.   Process ABITS option             @H1A 00395200
         IEZBITS ,                Define symbolic bits             @D4A 00396300
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @D4A 00398000
&P       DSECT ,                  IPCS Equate Symbol Record        @D4A 00399700
         AGO   .L020              Define structure of record       @D4A 00401400
.L010    ANOP  ,                  No DSECT statement               @D4A 00403100
&P       DS    0D                 IPCS Equate Symbol Record        @D4A 00404800
.L020    ANOP  ,                  Define structure of record       @D4A 00406500
&P.000   DS    0C                 Begin BLSRESSY               #MD99236 00408200
&P.RID   DC    C'ES'              Record type==>ES                 @D4A 00409900
         DC    XL6'00'                                             @D4A 00411600
         DC    CL8' '                                              @D4A 00413300
         DC    XL8'00'                                             @D4A 00415000
         AIF   (&EESSY).L030      Blurb produced once in assembly  @D4A 00416700
*-----------------------------------------------------------------      00418400
* An Equate Symbol record defines one symbol, associating it with       00420100
* a contiguous block of storage in an address space.                    00421800
*-----------------------------------------------------------------      00423500
.L030    ANOP  ,                  Blurb produced once in assembly  @D4A 00425200
&P.RDX   DC    F'0'               Data set index                   @D4A 00426900
&P.SYM   DC    CL31' '            Equated symbol                   @D4A 00428600
&P.ELK   DS    0C                 End of logical key               @D4A 00430300
&P.LKL   EQU   &P.ELK-&P.000      Logical key length               @D4A 00432000
         AIF   (&BLSABIT EQ 64).L034 ABITS=64                      @H1A 00432300
&P.RST   DC    CL1' '             BLSRESSY subtype - ABITS=31      @H1C 00432600
         AGO   .L036              Common code                      @H1A 00432900
.L034    ANOP  ,                  ABITS=31                         @H1A 00433200
&P.RST   DC    CL1'2'             BLSRESSY subtype - ABITS=64      @H1A 00433500
.L036    ANOP  ,                  Common code                      @H1A 00433800
&P.RST31 EQU   C' '               BLSRESSY subtype - ABITS=31      @H1A 00434100
&P.RST64 EQU   C'2'               BLSRESSY subtype - ABITS=64      @H1A 00434400
&P.AS    BLSRDATS DSECT=NO        Address space identifier         @D4A 00435400
&P.LAD   DC    &BLSADC.           Logical address                  @H1C 00436900
&P.D     BLSRDATC DSECT=NO,ABITS=&BLSABIT Storage characteristics  @H1C 00438400
&P.MAD   DC    &BLSADC.           Address of 1st missing byte      @H1C 00439900
         DC    XL15'00'                                            @P1C 00441600
&P.SRC   DC    XL1'00'            Scan result code                 @01C 00442700
&P.KEY   DC    XL1'00'            Storage key, X'FF'=indeterminate @D4A 00443900
         AIF   (&EESSY).L040      Blurb produced once in assembly  @D4A 00445600
*-----------------------------------------------------------------      00447300
* Flags                                                                 00449000
*-----------------------------------------------------------------      00450700
.L040    ANOP  ,                  Blurb produced once in assembly  @D4A 00452400
&P.F     DS    0XL3               Flags                            @D4C 00454100
&P.FS    DC    XL1'00'            Storage flags                    @D4A 00454400
&P.FSC   EQU   BIT0               Storage information complete     @02C 00454700
&P.FS2   EQU   BIT1               Multiple storage keys            @02C 00455000
&P.FSM   EQU   BIT2               Not all storage in dump          @02C 00455300
&P.FSA   EQU   BIT3               Absolute address, ESSYABS, valid @02C 00455600
&P.FSP   EQU   BIT4               Prefixed storage                 @02C 00455900
&P.FSR   EQU   BIT5               Reclaimed storage                @02C 00456200
&P.FSX   EQU   BIT6               Multiple records                 @02C 00456500
&P.FSS   EQU   BIT7               SUMDUMP data                     @02C 00456800
&P.FC    DC    XL1'00'            Control flags                    @D4A 00457500
&P.FCD   EQU   BIT0               Drop not permitted               @D4A 00459200
&P.FF9   EQU   BIT1               Scan complete                    @P1A 00460000
         DC    XL1'00'                                             @D4A 00460800
&P.FCO   EQU   BIT0               Common storage                   @02C 00461600
&P.FFP   EQU   BIT1               Fast path access mode            @02C 00462400
&P.ABS   DC    &BLSADC.           Absolute address for this address    *00463000
                                                                   @H1C 00463600
         DC    XL12'00'                                            @D4A 00464300
         AIF   (&EESSY).L050      Blurb produced once in assembly  @D4A 00466000
*-----------------------------------------------------------------      00467700
* Remark--LENGTH(0:512) characters                                      00469400
*-----------------------------------------------------------------      00471100
&EESSY   SETB  1                  Blurb produced once in assembly  @D4A 00472800
.L050    ANOP  ,                  Blurb produced once in assembly  @D4A 00474500
&P.R     DS    0C                 Remark data                      @D4A 00476200
&P.RL    DC    H'0'               Length of remark text            @D4A 00477900
&P.LTL   EQU   0                  Minimum remark text length       @D4A 00479600
&P.HTL   EQU   512                Maximum remark text length       @D4A 00481300
&P.RT    DC    (&P.HTL)CL1' '     Remark text                      @D4A 00483000
&P.999   DS    0C                 End BLSRESSY                 #MD99236 00484700
&P.LRL   EQU   &P.RT-&P.000       Minimum record length            @D4A 00486400
&P.HRL   EQU   &P.999-&P.000      Maximum record length            @D4A 00488100
         MEND  ,                  End assembler macro BLSRESSY       */ 00489800
*                                                                       00490600
*%BLSRESSY:                         /* Equate symbol record      @H1C*/ 00492000
*   MACRO KEYS(ABITS,BUFFER,MF);                                        00493400
*                                                                       00494900
*/*------------------------------------------------------------------*/ 00500000
*/* Define Macro-Variables                                           */ 00550000
*/*------------------------------------------------------------------*/ 00600000
*                                                                       00750000
*   DECLARE                         /* External macro variables      */ 00800000
*     BLSABIT  FIXED EXTERNAL,      /* ABITS                     @H1A*/ 00808300
*     BLSADC   CHARACTER EXTERNAL,  /* Pointer data type         @H1A*/ 00816600
*     ELSRESSY CHARACTER EXTERNAL,  /* BLSRESSY global data      @D1A*/ 00825000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation            */ 00850000
*     EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro requests   */ 00900000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number            */ 00950000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number           */ 01000000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number            */ 01050000
*     EHBLVL4  CHARACTER EXTERNAL,  /* Fourth level number           */ 01100000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                    */ 01150000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters             */ 01200000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class           */ 01250000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag  */ 01300000
*     BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations    */ 01350000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column      */ 01400000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column     */ 01450000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column      */ 01500000
*     EHBCOL4  FIXED EXTERNAL,      /* Fourth indentation column     */ 01550000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code             */ 01600000
*   DEACTIVATE ELSRESSY,BLSRENDDECLARE; /* Prevent accidents     @D2C*/ 01650000
*   DECLARE                         /* Internal macro variables      */ 02050000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation             */ 02100000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number           */ 02150000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number            */ 02200000
*     CLVL4    CHARACTER INTERNAL,  /* Fourth level number           */ 02250000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                    */ 02300000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters             */ 02350000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag  */ 02400000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                      */ 02450000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                       */ 02500000
*     CQINITPTR CHARACTER INTERNAL, /* Initial pointer           @H1A*/ 02525000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column     */ 02550000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column      */ 02600000
*     FCOL4    FIXED INTERNAL,      /* Fourth indentation column     */ 02650000
*     FRC      FIXED INTERNAL,      /* Macro return code             */ 02700000
*     F1       FIXED INTERNAL;      /* Utility variable              */ 02750000
*   DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,CQCOMPLETE,   02800000
*       CQINITIAL,CQINITPTR,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent        02850000
*                                      accidents                 @H1C*/ 02900000
*   CQINITIAL = ' INITIAL(';        /* Literal                       */ 03550000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                       */ 03600000
*   ANSWER('?'||MACLABEL||'BLRMF('||MF||') FORMS(L,S);');               04000000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation             */ 04044600
*   EHBENDCHAR = ',';               /* Final punctuation             */ 04089200
*   CLVL2 = EHBLVL2;                /* Second level number           */ 04133800
*   CLVL3 = EHBLVL3;                /* Third level number            */ 04178400
*   CLVL4 = EHBLVL4;                /* Fourth level number           */ 04223000
*   CMF1 = EHBMF1;                  /* Macro form                    */ 04267600
*   CMF2 = EHBMF2;                  /* Prefix characters             */ 04312200
*   CMF3A = EHBMF3A;                /* Complete initialization flag  */ 04356800
*   FCOL2 = EHBCOL2;                /* Second indentation column     */ 04401400
*   FCOL3 = EHBCOL3;                /* Third indentation column      */ 04446000
*   FCOL4 = EHBCOL4;                /* Fourth indentation column     */ 04490600
*   FRC = EHBRC;                    /* Macro return code             */ 04535200
*   ANSWER('?BLSABITS'||ABITS||';'); /* Process ABITS            @H1A*/ 04556100
*   IF BLSABIT = 64 THEN            /* ABITS=64                  @H1A*/ 04577000
*     DO;                           /* ABITS=64                  @H1A*/ 04589500
*       BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                      04602000
*'LRL UNSIGNED BINARY CONSTANT(210),/*Minimum record length*/' || CMF2  04614500
*           ||                                                          04627000
*'HRL UNSIGNED BINARY CONSTANT(722),/*Maximum record length*/'; /*      04639500
*                                                                @H1A*/ 04652000
*       CQINITPTR = CQINITIAL || '''00''X)'; /* Initial pointer value   04664500
*                                                                @H1A*/ 04677000
*     END;                          /* ABITS=64                  @H1A*/ 04689500
*   ELSE                            /* ABITS=31                      */ 04702400
*     DO;                           /* ABITS=31                  @H1A*/ 04714900
*       BLSRENDDECLARE = BLSRENDDECLARE || CMF2 ||                      04727400
*'LRL UNSIGNED BINARY CONSTANT(182),/*Minimum record length*/' || CMF2  04739900
*           ||                                                          04752400
*'HRL UNSIGNED BINARY CONSTANT(694),/*Maximum record length*/'; /*      04764900
*                                                                @H1C*/ 04777400
*       CQINITPTR = CQINITIAL || 'ZZZZNULL)'; /* Initial pointer        04789900
*                                      value                     @H1A*/ 04802400
*     END;                          /* ABITS=31                  @H1A*/ 04814900
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 || /*                @P2C*/ 04831800
*       'LKL UNSIGNED BINARY CONSTANT(59),/*Logical key length*/' ||    04848700
*       CMF2 ||                                                         04869600
*       'LTL UNSIGNED BINARY CONSTANT(0),/*Minimum text length*/' ||    04892000
*       CMF2 ||                                                         04936600
*       'HTL UNSIGNED BINARY CONSTANT(512),/*Maximum text length*/' ||  04955500
*       CMF2 ||                                                         04974400
*'RST31 CHARACTER(1) CONSTANT('' ''),/*BLSRESSY subtype - ABITS(31)*/'  04993300
*       || CMF2 ||                                                      05012200
*'RST64 CHARACTER(1) CONSTANT(''2''),/*BLSRESSY subtype - ABITS(64)*/'; 05031100
*   IF CMF1 = 'LIST' THEN           /* List form                     */ 05050000
*     DO;                           /* List form                     */ 05450000
*       ANSWER('?BLSR002;');        /* Process deferred declarations */ 05500000
*       ANSWER('DECLARE/*BLSRESSY #MD99236*/') COLUMN(5); /*     @P2C*/ 05550000
*     END;                          /* List form                     */ 05600000
*   ELSE                            /* Sublist form                  */ 05650000
*     DO;                           /* Sublist form                  */ 06050000
*       F1 = INDEX(EHBBLRPENDESS,'BLSR002;');                           06100000
*       IF F1 = 0 THEN                                                  06150000
*         EHBBLRPENDESS = EHBBLRPENDESS || 'BLSR002;';                  06200000
*     END;                          /* Sublist form                  */ 06250000
*   ANSWER(EHBLVL1||CMF2||' BOUNDARY(DWORD)'||EHBMF3||',/*BLSRESSY'||   06300000
*       MACLIST||' '||MACKEYS||'*/') COLUMN(EHBCOL1);                   06350000
*   ANSWER('?BLSURISY(ES) SCOPE;');                                     06400000
*   IF CMF1 = 'LIST' THEN           /* List form                     */ 06450000
*     IF INDEX(ELSRESSY,',BLURB') = 0 THEN /* Produce blurb      @D1A*/ 06492800
*       ANSWER('/*------------------------------------------------------06535600
*------------*/ /* An Equate Symbol record defines one symbol, associati06578400
*ng it with  */ /* a contiguous block of storage in an address space.   06621200
*            */ /*------------------------------------------------------06664000
*------------*/') COLUMN(2);        /*                           @D2C*/ 06706800
*   ANSWER(CLVL2||CMF2||'RDX UNSIGNED BINARY(32)') COLUMN(FCOL2);       06750000
*   IF CMF3A = CQCOMPLETE THEN                                          06800000
*     ANSWER(CQINITIAL||'0)');                                          06850000
*   ANSWER(',/*Data set index*/');  /*                           @D2C*/ 06900000
*   ANSWER(CLVL2||CMF2||'SYM CHARACTER(ZZZSYML)') COLUMN(FCOL2);        06950000
*   IF CMF3A = CQCOMPLETE THEN                                          07000000
*     ANSWER(CQINITIAL||''' '')');                                      07050000
*   ANSWER(',/*Equated symbol*/');  /*                           @D2C*/ 07100000
*   ANSWER(CLVL2||CMF2||'ELK CHARACTER(0),/*End of logical key*/')      07150000
*       COLUMN(FCOL2);              /*                           @D2C*/ 07200000
*   ANSWER(CLVL2||CMF2||'RST CHARACTER(1)') COLUMN(FCOL2); /*    @H1C*/ 07250000
*   IF CMF3A = CQCOMPLETE THEN                                          07300000
*     IF BLSABIT = 31 THEN          /* ABITS=31                  @H1C*/ 07325000
*       ANSWER(CQINITIAL||''' '')');                                    07350000
*     ELSE                          /* ABITS=64                  @H1A*/ 07375000
*       ANSWER(CQINITIAL||'''2'')');                                    07400000
*   ANSWER(',/*BLSRESSY subtype*/'); /*                          @H1C*/ 07425000
*   ANSWER('?BLSRDATS MF(SUBLIST,'||CMF2||'AS,'||CMF3A||','||CLVL2||');'07450000
*       );                          /* Address space identifier      */ 07500000
*   ANSWER(CLVL2||CMF2||'LAD '||BLSADC) COLUMN(FCOL2); /*        @H1C*/ 07550000
*   IF CMF3A = CQCOMPLETE THEN                                          07600000
*     ANSWER(CQINITPTR);            /*                           @H1A*/ 07650000
*   ANSWER(',/*Logical address*/'); /*                           @D2C*/ 07700000
*   ANSWER('?BLSRDATC MF(SUBLIST,'||CMF2||'D,'||CMF3A||','||CLVL2||     07740000
*       ') ABITS('||CHAR(BLSABIT)||');'); /* Storage characteristics    07780000
*                                                                @H1C*/ 07820000
*   ANSWER(CLVL2||CMF2||'MAD '||BLSADC) COLUMN(FCOL2); /*        @H1C*/ 07860000
*   IF CMF3A = CQCOMPLETE THEN                                          07900000
*     ANSWER(CQINITPTR);            /*                           @H1A*/ 07950000
*   ANSWER(',/*->1st byte missing*/'); /*                        @D2C*/ 08000000
*   ANSWER(CLVL2||'* BIT(120) BOUNDARY(WORD)') COLUMN(FCOL2); /* @P1C*/ 08050000
*   IF CMF3A = CQCOMPLETE THEN                                          08100000
*     ANSWER(CQINITIAL||'''00''X)');                                    08150000
*   ANSWER(',');                                                        08200000
*   ANSWER(CLVL2||CMF2||'SRC UNSIGNED BINARY(8)') COL(FCOL2); /* @P1P*/ 08208300
*   IF CMF3A = CQCOMPLETE THEN      /*                           @P1P*/ 08216600
*     ANSWER(CQINITIAL||'0)');      /*                           @P1P*/ 08224900
*   ANSWER(',/*Scan result code--0=>Informational, 4=>Warning, 8=>Error,08233200
* 12=>Serious*/');                  /*                           @P1P*/ 08241500
*   IF CMF1 = 'LIST' THEN           /* List form                     */ 08250000
*     IF INDEX(ELSRESSY,',BLURB') = 0 THEN /* Produce blurb      @D1A*/ 08300000
*       DO;                         /* Produce blurb             @D1C*/ 08350000
*         ANSWER('/*----------------------------------------------------08400000
*--------------*/ /* System/370 storage key summary--the storage key(s) 08450000
*for the main  */ /* storage described by this record are summarized by:08500000
*              */ /* (1) Taking the storage key for the first 2K block  08550000
*              */ /* (2) Setting the reference and change bits in the ke08600000
*y if they are */ /*     on in any 2K block between the origin of the st08650000
*orage         */ /*     described by the symbol and the first storage n08700000
*ot available  */ /*     in the dump.                                   08750000
*              */ /*----------------------------------------------------08800000
*--------------*/') COLUMN(2);      /*                           @D2C*/ 08850000
*       END;                        /* Produce blurb             @D1C*/ 08900000
*   ANSWER(CLVL2||CMF2||'KEY BIT(8)') COLUMN(FCOL2);                    09500000
*   IF CMF3A = CQCOMPLETE THEN                                          09550000
*     ANSWER(CQBIT8);                                                   09600000
*   ANSWER(                                                             09625000
*       ',/*System/370 storage key.  All bits on when indeterminate*/') 09650000
*       ;                           /*                           @D2C*/ 09675000
*   IF CMF1 = 'LIST' THEN           /* List form                     */ 09700000
*     IF INDEX(ELSRESSY,',BLURB') = 0 THEN /* PRODUCE BLURB      @D1A*/ 09741600
*       ANSWER('/*------------------------------------------------------09783200
*------------*/ /* Flags                                                09824800
*            */ /*------------------------------------------------------09866400
*------------*/') COLUMN(2);        /*                           @D2C*/ 09908000
*   ANSWER(CLVL2||CMF2||'F BIT(24) BOUNDARY(WORD,2)') COLUMN(FCOL2);    09950000
*   IF CMF3A = CQCOMPLETE THEN                                          10000000
*     ANSWER(CQINITIAL||'''00''X)');                                    10050000
*   ANSWER(',/*Flags*/');           /*                           @D2C*/ 10100000
*   ANSWER(CLVL3||CMF2||'FS BIT(8) BOUNDARY(WORD,2),/*Storage flags*/') 10150000
*       COLUMN(FCOL3);              /*                           @D2C*/ 10200000
*   ANSWER(CLVL4||CMF2||'FSC BIT(1),/*Storage information complete*/')  10250000
*       COLUMN(FCOL4);              /*                           @D2C*/ 10300000
*   ANSWER(CLVL4||CMF2||'FS2 BIT(1),/*Multiple storage keys*/') COLUMN( 10350000
*       FCOL4);                     /*                           @D2C*/ 10400000
*   ANSWER(CLVL4||CMF2||'FSM BIT(1),/*Not all storage in dump*/')       10450000
*       COLUMN(FCOL4);              /*                           @D2C*/ 10500000
*   ANSWER(CLVL4||CMF2||'FSA BIT(1),/*Absolute address, field '||CMF2|| 10550000
*       'ABS, is valid*/') COLUMN(FCOL4); /*                     @D2C*/ 10600000
*   ANSWER(CLVL4||CMF2||'FSP BIT(1),/*Prefixed storage*/') COLUMN(FCOL4 10650000
*       );                          /*                           @D2C*/ 10700000
*   ANSWER(CLVL4||CMF2||'FSR BIT(1),/*Reclaimed storage*/') COLUMN(     10750000
*       FCOL4);                     /*                           @D2C*/ 10800000
*   ANSWER(CLVL4||CMF2||'FSX BIT(1),/*Multiple records*/') COLUMN(FCOL4 10850000
*       );                          /*                           @D2C*/ 10900000
*   ANSWER(CLVL4||CMF2||'FSS BIT(1),/*SUMDUMP data*/') COLUMN(FCOL4);   10950000
*                                   /*                           @D2C*/ 11000000
*   ANSWER(CLVL3||CMF2||'FC BIT(8) BOUNDARY(WORD,3),/*Control flags*/') 11050000
*       COLUMN(FCOL3);              /*                           @D2C*/ 11100000
*   ANSWER(CLVL4||CMF2||'FCD BIT(1),/*Drop not permitted*/') COLUMN(    11150000
*       FCOL4);                     /*                           @D2C*/ 11200000
*   ANSWER(CLVL4||CMF2||'FF9 BIT(1),/*Scan complete*/') /*           */ 11250000
*       COLUMN(FCOL4);              /*                           @P1A*/ 11300000
*   ANSWER(CLVL4||'* BIT(6),') COLUMN(FCOL4); /*                 @P1C*/ 11350000
*   ANSWER(CLVL3||'* BIT(8) BOUNDARY(WORD,4),') COLUMN(FCOL3);          11600000
*   ANSWER(CLVL4||CMF2||'FCO BIT(1),/*Common storage*/') COLUMN(FCOL4); 11612500
*                                   /*                           @D2C*/ 11625000
*   ANSWER(CLVL4||CMF2||'FFP BIT(1),/*Fast path mode*/') COLUMN(FCOL4); 11631200
*                                   /*                           @01A*/ 11637400
*   ANSWER(CLVL4||'* BIT(6),') COLUMN(FCOL4); /*                 @01C*/ 11643600
*   ANSWER(CLVL2||CMF2||'ABS '||BLSADC) COLUMN(FCOL2); /*        @H1C*/ 11671800
*   IF CMF3A = CQCOMPLETE THEN                                          11700000
*     ANSWER(CQINITPTR);            /*                           @H1A*/ 11750000
*   ANSWER(',/*Absolute address for this address*/'); /*         @D2C*/ 11800000
*   ANSWER(CLVL2||'* BIT(96) BOUNDARY(WORD)') COLUMN(FCOL2);            11850000
*   IF CMF3A = CQCOMPLETE THEN                                          11900000
*     ANSWER(CQINITIAL||'''00''X)');                                    11950000
*   ANSWER(',');                                                        12000000
*   IF CMF1 = 'LIST' THEN           /* List form                     */ 12050000
*     IF INDEX(ELSRESSY,',BLURB') = 0 THEN /* Produce blurb      @D1A*/ 12077700
*       DO;                         /* Produce blurb             @D1A*/ 12105400
*         ANSWER('/*----------------------------------------------------12133100
*--------------*/ /* Remark--LENGTH(0:512) characters                   12160800
*              */ /*----------------------------------------------------12188500
*--------------*/') COLUMN(2);      /*                           @D2C*/ 12216200
*         ELSRESSY = ELSRESSY || ',BLURB'; /* Blurb produced     @D1A*/ 12243900
*       END;                        /* Produce blurb             @D1A*/ 12271900
*   IF LENGTH(BUFFER) > 0 THEN                                          12300000
*     ANSWER('?BLRPRM(512) MF(SUBLIST,'||CMF2||'R,'||CMF3A||','||CLVL2  12350000
*         ||') NULL;');             /* REMARK                    @D1C*/ 12400000
*   ELSE                                                                12450000
*     ANSWER('?BLRPRM(0) MF(SUBLIST,'||CMF2||'R,'||CMF3A||','||CLVL2||  12490000
*         ');');                    /* REMARK                    @D1C*/ 12530000
*   ANSWER(CLVL2||CMF2||'999 CHARACTER(0)'||CENDCHAR||                  12570000
*       '/*BLSRESSY #MD99236*/') COLUMN(FCOL2); /*               @P2C*/ 12610000
*   IF CENDCHAR = ';' THEN                                              12650000
*     IF INDEX(EHBBLRPENDESS,'BLSR002;') > 0 THEN                       12700000
*       ANSWER('?BLSR002;');        /* Process deferred declaratioNS */ 12750000
*   ANSWER('?BLR003(BLSRESSY,'||CHAR(EHBRC)||');');                     12800000
*   RETURN CODE(FRC);               /*                           @D1C*/ 12850000
*   %END BLSRESSY;                                                      12900000
