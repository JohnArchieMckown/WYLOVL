;
;  Wings - SCRATCH command
;
xproc () begin

   declare number  x.pathno
   declare string  open_str
   declare string  open_opt
   declare string  wing_path
   declare string  msg
   declare string  rc

   on error cmd 'pcall err_routine'
   on attn  cmd 'pcall err_routine'

   wing_path = fpath

   if (vartype('ses.wings_library') eq 'UNDEFINED') \
      ses.wings_library = ''

   if (ses.wings_library eq '') \
      ses.wings_library = 'wyl.gg.wyl.wings.commands'

   msg = 'yourtag=&(wing_path) noheader'
   syscall path_open(x.pathno, msg, rc)
   if (rc ne 'OK') begin
      syscall path_close(x.pathno)
      comm Path error on open = &(rc)
      xreturn
   end

   open_str = sub('FILE_SCRATCH:',1,16)

   if (user ne sub(acct,1,3)) begin
      open_str = open_str || ' setuser=' || '&(user) '
   end

   if (group ne sub(acct,5,2)) begin
      open_str = Open_str || ' setgroup=' || '&(group) '
   end

   open_opt = parm_string
   msg = open_str || open_opt

   syscall path_write(x.pathno, ' ', msg, rc)
   if (rc ne 'OK') begin
      syscall path_close(x.pathno)
      comm Path write error - &(rc)
      xreturn
   end

   done = false
   while (not done) begin
      syscall path_read(x.pathno, ' ', msg, rc)
;        wri '==> '||msg
      if (rc ne 'OK') begin
         syscall path_close(x.pathno)
         comm path read error = &(rc)
         xreturn
      end
      done = (left(msg,16) ne 'DEBUG:')
      if (not done) begin
         if (size(msg) gt 220) msg=sub(msg,1,220)
         write msg
      end
   end

   if (sub(msg,1,16) ne sub('FILE_SCRATCH:',1,16)) begin
      syscall path_close(x.pathno)
      comm &(msg)
      xreturn
   end

   msg = substr(msg,17)
         if (size(msg) gt 220) msg=sub(msg,1,220)
   comm &(msg)

   syscall path_close(x.pathno)

end

proc err_routine() begin

   syscall path_close(x.pathno)
   xreturn

end
