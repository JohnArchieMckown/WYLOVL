wings protocol                                  rev. 1998/02/09 mcl

All communication is via SUZAN path; pathname is set by the init file
used to start WINGS.  Currently, path name is WINGSV00 for production
WINGS on SYSA and SYSB, TESTWING for test WINGS on any system.

READ FILE:
----------
WYLBUR (client)                    WINGS (server)

FILE_OPEN:      NAME=xx REQTYPE=READ ...     >

         <  FILE_OPEN:      NAME=WYL.GG.UUU.MMM(XXX)
         <  FILE_READ:      <data>
             ..
             ..
         <  FILE_READ:      <data>
         <  FILE_EOF:

FILE_EOF:          >
FILE_CLOSE:        >

         <  FILE_CLOSE:


WRITE/REPLACE/APPEND FILE:
--------------------------
WYLBUR (client)                          WINGS (server)

FILE_OPEN:      NAME=xx REQTYPE=WRITE/REPLACE ..  >

         <  FILE_OPEN:      NAME=WYL.GG.UUU.MMM(XXX) [CATALOG] [VOLUME=vvv]

FILE_WRITE:     <data>    >
             ..
             ..
FILE_WRITE:     <data>    >
FILE_EOF:                 >

         <  FILE_EOF:    MSG= ...

FILE_CLOSE:               >

         <  FILE_CLOSE:


ALLOCATE FILE:
--------------
WYLBUR (client)                          WINGS (server)

FILE_ALLOCATE:  NAME=xx PRIQTY=...           >

         <  FILE_ALLOCATED: NAME=WYL.GG.UUU.MMM [CATALOG] [VOLUME=vvv]


UPDATE FILE:   [not yet implemented]
----------
WYLBUR (client)                    WINGS (server)

FILE_OPEN:      NAME=xx REQTYPE=UPDATE ...   >

         <  FILE_OPEN:      NAME=WYL.GG.UUU.MMM
         <  FILE_READ:      <data>
             ..
             ..
         <  FILE_READ:      <data>
         <  FILE_EOF:

FILE_REWIND:       >               NOTE:  If client sends
                                   FILE_CLOSE here, close is
                                   done just as for normal READ
         <  FILE_OPEN:

FILE_WRITE:     <data>    >
             ..
             ..
FILE_WRITE:     <data>    >
FILE_EOF:                 >

         <  FILE_EOF:    MSG= ...

FILE_CLOSE:               >

         <  FILE_CLOSE:


OPEN OPTIONS, OTHER PACKET OPTIONS
----------------------------------

All options are sent in the form of KEYWORD=VALUE.  The keywords are fixed
(not abbreviated) in upper case.  The values are blank delimited and may be
quoted with single or double quotes.  Unrecognized keyword/value pairs in
general are ignored.

The WYLBUR client may send any of numerous options on the FILE_OPEN command;
see PARMDOC for the complete list of these options.

The client expects a NAME= return on FILE_OPEN: from wings that includes a
fully qualified name of a file.  (this is later sent as the CNAME= parm on
subsequent accesses as is appropriate)  The client will also accept MSG= on
FILE_EOF:  The client will (generally) print any returned message.  WYLBUR
expects a "xxxx saved" type message on a successful FILE_EOF on a
WRITE/REPLACE ..  type operation.  Similarly see the note on ERRORS below.

ERRORS
------

Errors detected from WINGS are sent to WYLBUR client as shown in this example.

       <  FILE_ERROR:    ERRID=EXISTS  ERRMSG='file XXXX already exists. '

If there is additional information available, then the ERRMSG text ends with a
+ and there follows an ERRDATA item, as in the following:

       <  FILE_ERROR:    ERRID=EXISTS  ERRMSG='XXXX: file exists.+'
                         ERRDATA='Dataset XXXX already exists on PUB201'

The path is closed immediately after the FILE_ERROR: packet is sent or
received.  If the client detects an error, the client  will close the path
without notification (in the middle of whatever).


FILE DATA
---------
Data is many lines concatenated:

   <4 bytes len=M+12>< 8 char bytes line no>< M bytes text>
   <4 bytes len=N+12>< 8 char bytes line no>< N bytes text>
    ...
   <4 bytes len=Z+12>< 8 char bytes line no>< Z bytes text>

