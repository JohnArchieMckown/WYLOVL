**revised 1998/03/18 mcl

You can test wings via orvyl with RLG's PLAYMATE program.  You get
into PLAYMATE as follows:

COMMAND> CALL PLAYMATE LIB ORV.GQ.RLG.PLAYMATE

You may want to setup a DEFINE command to make that earier:

COMMAND> DEFINE PLAY AS "CALL PLAYMATE LIB ORV.GQ.RLG.PLAYMATE "

Once you get into PLAYMATE, you can establish a Susan path to wings
as follows:

-? att path "PLAYMATEMCLWINGSPROD",4096

The quoted string should all be upper case, and is 20 bytes long.  If
the attach succeeds, you should see return info like this:

WAIT REGS
R14 =           0  00000000
R15 =           0  00000000
R0  =           2  00000002
R1  =    12597776  00C03A10

Note that R0 contains the device ID, which is usually 2.  To do a
write, you must first prime the data stream.

-? prime buff "FILE_OPEN:      NAME=#LOGON REQTYPE=READ "
-? write 2,buff,Lbuff

Lbuff is the length of buff, which is the length of the primed
string.

To do a read, I recommend using buff because it is a 2K region
aligned on a page boundary.  So I would do the following:

-? read 2,buff,2048

If that succeeeds, you'll see WAIT REGS info showing the length read
in R14.  You can see what was read by doing the following:

-? disp buff

Yo can see the registers used by PLAYMATE with:

-? disp regs
