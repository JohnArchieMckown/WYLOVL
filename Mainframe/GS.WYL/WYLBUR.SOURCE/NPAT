NPAT     TITLE 'WYLBUR''s Network Path Interface'                               
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
         SYSDEFN                                                                
*                                                                               
*  Modification history:                                                        
*                                                                               
*    7-July-1997 - M. Durket                                                    
*                                                                               
*        Removed all calls to TOEVENP. WYLBUR should NOT be                     
*        generating parity on data destined for terminals.                      
*        That's the job of the front ends.                                      
*                                                                               
*        Added checking in the NET_TALK routines for                            
*        to detect when we're talking to a RSH daemon,                          
*        so that we can suppress the leading X'00' or                           
*        X'01' reply. This is to correct a problem noted                        
*        by LTM in an email (namely, that the WYLBUR ON <host>                  
*        command couldn't be used in a Forsythe RPC because the                 
*        leading null terminated the RPC read in the server and                 
*        killed the session.                                                    
*                                                                               
WYLNPAT  CSECT                                                                  
*                                                                               
NPAT     IDENT 2193                15:11:46 07/12/02  (SLP)                     
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
         PUSH  DSECTS                                                           
         COPY  CONTROL                                                          
*                                                                               
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
*                                                                               
KWR      RECORD 'KWR'                                                           
*                                                                               
SEGCB    RECORD 'SEGCB'                                                         
*                                                                               
         POP   DSECTS                                                           
         EJECT                                                                  
UPATH    RECORD BEGIN                                                           
UPAT     UPATH                                                                  
         END                                                                    
         EJECT                                                                  
UNET     RECORD BEGIN                                                           
UNET     UNET                                                                   
         END                                                                    
         EJECT                                                                  
CTRC     RECORD BEGIN                                                           
CTRCCLCK DS    D                   Timestamp                                    
CTRCSR   DS    C                   0 = output, 1 = input                        
CTRCCOD  DS    X                   Packet type code (unused for now)            
*                                                                               
*                                                                               
CTRCLEN  DS    H                                                                
CTRCPKT  DS    CL20                Data sent/recvd (includes hdr)               
         END                                                                    
CTRC#    EQU   256                 Number of trace entries/UNET                 
CTRCSHFT EQU   5                   Trace entry size must be power of 2          
*                                                                               
         COPY  SCRYPTWA            Encrypt/decrypt work area                    
         DS    0S(L'UNETINCRYPT-L'SCRYPTWA)  Err if CRYPTWA too big             
         DS    0S(L'UNETOUTCRYPT-L'SCRYPTWA)  Err if CRYPTWA too big            
UNETCELL CELLBLOK SIZE=L'UNET                                                   
UNETSGBF CELLBLOK SIZE=UNETBUF#                                                 
CTRCCELL CELLBLOK SIZE=(CTRC#*L'CTRC)                                           
         EJECT                                                                  
*-                                                                              
*-       Special telnet control byte values.                                    
*-                                                                              
$CTRLC   EQU   X'03',,C'N'         ASCII ctrl-C (treated as break)              
$TAB     EQU   X'09',,C'N'         ASCII tab                                    
$LF      EQU   X'0A',,C'N'         ASCII line-feed                              
$CR      EQU   X'0D',,C'N'         ASCII carriage return                        
$BLANK   EQU   X'20',,C'N'         ASCII blank                                  
*                                                                               
$SE      EQU   X'F0',,C'N'         240: End of subparms                         
$NOP     EQU   X'F1',,C'N'         241: No operation                            
$DM      EQU   X'F2',,C'N'         242: Data mark                               
$BRK     EQU   X'F3',,C'N'         243: Break                                   
$IP      EQU   X'F4',,C'N'         244: Interrupt process                       
$ABORT   EQU   X'F5',,C'N'         245: Abort output                            
$AYT     EQU   X'F6',,C'N'         246: Are you there                           
$EC      EQU   X'F7',,C'N'         247: Erase character                         
$EL      EQU   X'F8',,C'N'         248: Erase line                              
$GA      EQU   X'F9',,C'N'         249: Go ahead                                
$SB      EQU   X'FA',,C'N'         250: Start of subparms                       
$WILL    EQU   X'FB',,C'N'         251: Will                                    
$WONT    EQU   X'FC',,C'N'         252: Won't                                   
$DO      EQU   X'FD',,C'N'         253: Do                                      
$DONT    EQU   X'FE',,C'N'         254: Don't                                   
$IAC     EQU   X'FF',,C'N'         255: I am a control byte                     
*                                                                               
$BINARY  EQU   X'00',,C'N'         0:   Transmit-binary                         
$ECHO    EQU   X'01',,C'N'         1:   Echo                                    
$SGA     EQU   X'03',,C'N'         3:   Suppress go ahead                       
$TTYPE   EQU   X'18',,C'N'         24:  Terminal type                           
*                                                                               
$CRLF    EQU   1000,,C'N'          Our internal code for CR/LF                  
$STOP    EQU   1001,,C'N'          Our internal code for "stop!"                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  UNET Input buffer queue entry                                                
*                                                                               
INBUF    RECORD BEGIN                                                           
INBUFLNK DS    A                   Next INBUF ptr                               
INBUFLEN DS    F                   Length of data which follows                 
INBUFDAT EQU   *                   Start of data                                
         END                                                                    
*box                                                                            
*                                                                               
*  ETRC -- Network file-transfer trace entry                                    
*                                                                               
ETRC     RECORD BEGIN                                                           
ETRCSTRT DS    CL4'ETRC'           Self identification                          
ETRCLINK DS    A                   Next ETRC ptr (or zero)                      
ETRCCLCK DS    D                   Time stamp                                   
*                                                                               
ETRCSNO  DS    H                   Session number                               
ETRCACCT DS    CL5                 Session account (uuugg)                      
*                                                                               
ETRCFLAG FLAG                                                                   
         FLAG  ETRCFOUT            - Output buffer                              
         FLAG  ETRCFIN             - Input buffer                               
*                                                                               
ETRCDLEN DS    H                   Data length                                  
ETRCHDR  EQU   ETRCSTRT,*-ETRCSTRT,C'X'                                         
*                                                                               
ETRCDATA DS    0X                  Data starts here (variable len)              
         END                                                                    
         TITLE 'Network Interface Routines'                                     
*box                                                                            
*                                                                               
*  NPATFREE -- Routine to free up all open user network connections.            
*    This routine is called at the end of a user session.                       
*                                                                               
NPATFREE XPROC                                                                  
         LA    R2,1                Path number                                  
         L     R3,CVNETP           Start of net path table                      
         WHILE (R2,LE,CVNET#),BEGIN  Go through entries...                      
         IF    ('LT R4,@R3',NZ),BEGIN  Close it...                              
         WITH  (UNET,R4)                                                        
         IF    (UNETJCBP,EQ,CVCURJCB),BEGIN  Our UNET path...                   
*-                                                                              
*-       Try to abort the open connection.                                      
*-                                                                              
         IF    ^UNETFOUTABORT,BEGIN  We haven't sent an abort...                
         IF    UNETFINABORT,EXIT   We don't need to if Amy aborts               
         LA    R1,=C'ABORT'                                                     
         LA    R15,UNET                                                         
         VCALL NPATCTRL            Send abort                                   
         END                                                                    
*-                                                                              
*-       Now close the connection.                                              
*-                                                                              
         LA    R15,UNET                                                         
         ACALL NPATCLS             Close and free it                            
         END                                                                    
         END                                                                    
*                                                                               
         LA    R3,@R3+4            Next entry                                   
         LA    R2,@R2+1                                                         
         END                                                                    
*                                                                               
         CLEAR CPNNETS             No UNETs for this user any more              
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATALLO -- Routine to allocate a network path.                              
*                                                                               
*    On entry:                                                                  
*      R0 -  0 = user path                                                      
*            1 = global path (won't "belong" to this user)                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - allocated                                                            
*            R0 = net path number                                               
*            R1 = UNET ptr                                                      
*      4 - not allocated                                                        
*            R1,R0 = error msg loc, len                                         
*                                                                               
NPATALLO XPROC (R2,LSR)                                                         
         LR    R5,R0               Save option flag                             
*-                                                                              
*-       Check to see if the user can open another net connection.              
*-                                                                              
         IF    (R5,Z),BEGIN        User path...                                 
         IF    (CPNNETS,LT,CVUNMAX#),EXIT  OK, not too many                     
         SETMSG 'TOO MANY CONNECTIONS OPEN'                                     
         LA    R15,4               Bad news                                     
         EXIT  NPATALLO                                                         
         END                                                                    
*-                                                                              
*-       Find available path index entry.                                       
*-                                                                              
         LA    R2,1                                                             
         L     R3,CVNETP           Start of path table                          
         WHILE (R2,LE,CVNET#),BEGIN  Find available path entry...               
         IF    ('OC @R3(4),@R3',Z),BEGIN  It's available...                     
*-                                                                              
*-       Get memory for UNET control block.                                     
*-                                                                              
*                                                                               
         L     R15,=A(UNETCELL)                                                 
         VCALL GETPOOL                                                          
*                                                                               
         LR    R4,R1                                                            
         WITH  (UNET,R4)                                                        
*                                                                               
         CLEAR UNET                                                             
         MVC   UNET(4),=C'UNET'    Set UNET id                                  
*-                                                                              
*-       Set network path defaults.                                             
*-                                                                              
         ST    R4,@R3              Save UNET ptr in index table                 
         ST    R2,UNETPNO          Save our net path id                         
*                                                                               
         SET   UNETFWRAP           Default is to wrap lines                     
         MVC   UNETMAXL,=AL2(&LINESZ)  Maximum length line allowed              
         MVC   UNETFLOWL,=F'4000'  Flow control low water mark                  
         MVC   UNETFLOWH,=F'8000'  Flow control high water mark                 
*-                                                                              
*-       Fill in information for a global network connection.                   
*-                                                                              
         IF    (R5,NZ),BEGIN       Global UNET...                               
         SET   UNETFGLOBAL         It's a global UNET                           
         CLEAR UNETJCBP            No owner yet (see NPATSETU)                  
         END                                                                    
*-                                                                              
*-       Fill in information for a user connection.                             
*-                                                                              
         ELSE  BEGIN               User UNET...                                 
         INCR  R15,CPNNETS         Count our net connection                     
*                                                                               
         L     R15,CVCURJCB                                                     
         ST    R15,UNETJCBP        Save our JCB ptr                             
         WITH  (JCB,R15),BEGIN                                                  
         MVC   UNETACCT,JCBACCT    Save account                                 
         MVC   UNETSNO,JCBSEQ      Save Milten session number                   
         END                                                                    
         END                                                                    
*                                                                               
         L     R15,=A(CTRCCELL)    Get trace table                              
         VCALL GETPOOL                                                          
         ST    R1,UNETTTBL                                                      
*                                                                               
         L     R15,=A(UNETSGBF)    Get a working buffer                         
         VCALL GETPOOL                                                          
         ST    R1,UNETBUFP         Save working buffer ptr                      
*                                                                               
         L     R15,=A(UNETSGBF)    Get an output seg buffer                     
         VCALL GETPOOL                                                          
         ST    R1,UNETOBUFP        Save seg buffer ptr                          
         LA    R1,@R1+UNETPFXL#    Skip past prefix                             
         SH    R0,=AL2(UNETPFXL#)  Adjust length appropriately                  
         SEGINIT (R1),(R0),UNETOUTSG,RTN=NPATSEG  Init output buf               
*                                                                               
         LA    R15,UNET                                                         
         ST    R15,UNETOUTSGUSR    Set UNET ptr in SEGCB                        
*-                                                                              
*-       Allow the user to override the path name for the AMELIA                
*-         connection.  Normally:                                               
*-                                                                              
*-         ses.amelia = 'AMELIA'                                                
*-                                                                              
         MVC   UNETAMY,=CL8'AMELIA'  Assume AMELIA                              
*                                                                               
         TPUSH                                                                  
         XPUSH ,,32,PTR=R2         Get variable result wa                       
*                                                                               
         LA    R3,32                                                            
         MVC   @R2(32),CVBLANKS                                                 
         SETMSG 'SES.AMELIA'                                                    
         VCALL EVALSTR             Get expression value                         
         IF    NP,BEGIN            It's defined...                              
         IF    (R3,NP),EXIT        Variable is null, forget it                  
         OC    @R2(32),CVBLANKS    Convert to upper case                        
         CLC   @R2(8),CVBLANKS     All blank?                                   
         IF    EQ,EXIT             Yes, scram                                   
         MVC   UNETAMY,@R2         Save AMELIA name                             
         END                                                                    
*                                                                               
         XPOP  ,,32                                                             
         TPOP  JUNK                                                             
*                                                                               
         LA    R1,UNET             UNET ptr                                     
         L     R0,UNETPNO          UNET number                                  
         CLEAR R15                 A-ok                                         
         EXIT  NPATALLO                                                         
         END                                                                    
*                                                                               
         LA    R3,@R3+4            Next entry                                   
         LA    R2,@R2+1                                                         
         END                                                                    
*-                                                                              
*-       Fall through if we can't allocate the net path.                        
*-                                                                              
         SETMSG 'NO MORE NET PATHS'                                             
         LA    R15,4               Bad news                                     
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATSETU -- Routine to make us the UNET owner.  This routine                 
*    must be called to make a global UNET belong to the current                 
*    user (before the global UNET can be used).                                 
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
NPATSETU XPROC                                                                  
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATSETU,'UNET logic problem.'                  
         FAIL  ^UNETFGLOBAL,NPATSETU,'Global UNET problem.'                     
*                                                                               
         L     R5,CVCURJCB                                                      
         ST    R5,UNETJCBP         Save our JCB ptr                             
         WITH  (JCB,R5),BEGIN                                                   
         MVC   UNETACCT,JCBACCT    Save account                                 
         MVC   UNETSNO,JCBSEQ      Save Milten session number                   
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  NPATCLRU -- Routine to reset owner information for this global               
*    UNET (we are done with it).                                                
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
NPATCLRU XPROC                                                                  
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATCLRU,'UNET logic problem.'                  
         FAIL  ^UNETFGLOBAL,NPATCLRU,'Global UNET problem.'                     
*                                                                               
         CLEAR UNETJCBP            Reset                                        
         CLEAR UNETACCT            Ditto                                        
         CLEAR UNETSNO             Ditto                                        
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATGET -- Routine to get a network path ptr given it's                      
*     path number.                                                              
*                                                                               
*  On entry:                                                                    
*    R0 - path number                                                           
*                                                                               
*  On exit, R15 (and cc):                                                       
*    0 - found                                                                  
*          R0 = path number                                                     
*          R1 = UNET ptr                                                        
*    4 - not found;          R1,R0 = error msg loc, len                         
*                                                                               
NPATGET  XPROC (R2,LSR)                                                         
*-                                                                              
*-       Make sure path number is within acceptable range.                      
*-                                                                              
         IF    ((R0,NP),OR,(R0,GT,CVNET#)),BEGIN                                
         SETMSG 'BAD PATH NUMBER'                                               
         LA    R15,4               Boo                                          
         EXIT  NPATGET                                                          
         END                                                                    
*-                                                                              
*-       Get UNET ptr.                                                          
*-                                                                              
         LR    R2,R0               Path number                                  
         DECR  R2                  Relative to zero, not one                    
         SLL   R2,2                Times 4 for word offset                      
         A     R2,CVNETP           Ptr to appropriate table entry               
         LT    R1,@R2              Get UNET ptr                                 
         BZ    NGETNONE            No path here                                 
*                                                                               
         WITH  (UNET,R1),BEGIN                                                  
         FAIL  (UNET,NE,'UNET'),NPATGET,'UNET logic error.'                     
         IF    (UNETJCBP,NE,CVCURJCB),BEGIN  Not your path...                   
NGETNONE SETMSG 'NOT OPEN'                                                      
         LA    R15,4                                                            
         EXIT  NPATGET                                                          
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATOPEN -- Routine to open a network connection.                            
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0  - ok;             R1,R0 = "OK"                                        
*      nz - can't open;     R1,R0 = error msg loc, len                          
*                                                                               
NPOWA    RECORD BEGIN                                                           
NPOID    DS    CL16                Amelia ID (e.g., TCP_OPEN:)                  
NPOW1    DS    F                   Parm 1                                       
NPOW2    DS    F                   Parm 2                                       
NPOW3    DS    F                   Parm 3                                       
NPOW4    DS    F                   Parm 4                                       
NPOW5    DS    F                   Parm 5                                       
NPOW6    DS    F                   Parm 6                                       
         END                                                                    
*-                                                                              
NPATOPEN XPROC (R2,LSR),NPOWA                                                   
         CLEAR NPOWA                                                            
*                                                                               
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATOPEN,'UNET logic problem.'                  
*-                                                                              
*-       Check to see if network access is allowed.                             
*-                                                                              
         IF    CVFNONET,BEGIN      It's turned off...                           
         SETMSG 'WYLBUR NETWORK ACCESS DISABLED'                                
         LA    R15,4                                                            
         B     NPOEXIT                                                          
         END                                                                    
*-                                                                              
*-       Do a little parameter checking.                                        
*-                                                                              
         IF    ((UNETRNAME,Z),OR,(UNETRNAME,EQ,CVBLANKS)),BEGIN                 
         SETMSG 'HOST NAME NOT SPECIFIED'                                       
         LA    R15,4                                                            
         B     NPOEXIT                                                          
         END                                                                    
*                                                                               
         CLEAR R4                                                               
         IF    (UNETAMY,EQ,'AMELIA  '),'LA R4,CVAMYP'                           
         IF    (UNETAMY,EQ,'TESTAMY '),'LA R4,CVTAMYP'                          
         IF    (R4,Z),BEGIN        SES.AMELIA has a funny value...              
         SETMSG 'AMELIA VALUE NOT SUPPORTED'                                    
         LA    R15,4                                                            
         B     NPOEXIT                                                          
         END                                                                    
*-                                                                              
*-       If we are the first user to open a network connection                  
*-         then we must also allocate and open a path to Amelia.                
*-                                                                              
         LT    R5,@R4              Get UPATH ptr (if any)                       
         IF    Z,BEGIN             Not yet allocated...                         
         LA    R0,1                Allocate global UPATH                        
         VCALL PATHALLO            Get a new UPATH                              
         BNZ   NPOEXIT             Can't get a new path                         
         LR    R5,R1                                                            
         WITH  (UPATH,R5)                                                       
         SET   UPATMFL.UPATMNAM    Specific callee needed                       
         MVC   UPATYOU,UNETAMY     Set AMELIA YOURTAG name                      
*                                                                               
         CLEAR UPATFHDR            Don't use multiple line format               
         SET   UPATFNOWAIT         No wait for path I/O completion              
*                                                                               
         MVC   UPATBUF,=A(128*1024)  Use 128K Suzan buffer                      
*                                                                               
         CLEAR R1                  No caller ID                                 
         LA    R15,UPATH                                                        
         VCALL PATHOPEN            Open path                                    
         FAIL  NZ,NETPOPEN,'Network PATHOPEN failed'                            
*                                                                               
         ST    R5,@R4              Save UPATH ptr                               
         END                                                                    
*                                                                               
         ST    R5,UNETPATP         Save our UPATH ptr                           
*-                                                                              
*-       Establish TCP connection by sending TCP_OPEN.                          
*-                                                                              
         MVI   UNETSTATE,UNETSFINITIAL  Initial state                           
*                                                                               
         SET   UNETFCTRL           Sending control info                         
         SEG   LA:=CL16'TCP_OPEN:',16                                           
         SEG   UNETPNO             Our id                                       
*                                                                               
         SEG   'HOST='                                                          
         IF    (UNETRIP,NZ),BEGIN  Connect to IP address...                     
         SEGDC LC:UNETRIP                                                       
         SEG   '.'                                                              
         SEGDC LC:UNETRIP+1                                                     
         SEG   '.'                                                              
         SEGDC LC:UNETRIP+2                                                     
         SEG   '.'                                                              
         SEGDC LC:UNETRIP+3                                                     
         END                                                                    
         ELSE  'SEGT UNETRNAME'    Connect to host name                         
*                                                                               
         SEG   ' LPORT='                                                        
         SEGDC L:UNETLPORT         Our TCP port number (0=new id)               
         IF    (UNETRPORT,Z),'SEG " PASSIVE"'                                   
         ELSE  'SEG " RPORT="; SEGDC L:UNETRPORT'  Remote port                  
         SEG   ' FLOWL='                                                        
         SEGDC L:UNETFLOWL         Flow control low water mark                  
         SEG   ' FLOWH='                                                        
         SEGDC L:UNETFLOWH         Flow control high water mark                 
         IF    UNETFPRIV,'SEG " PRIV"'  Privileged port                         
*                                                                               
         SEGWR                                                                  
         CLEAR UNETFCTRL           Reset                                        
*-                                                                              
*-       Wait for open to complete.                                             
*-                                                                              
         L     R0,UNETWAIT         Timeout value (0=no timeout)                 
         IF    UNETFNOWAIT,'LA R0,2'  Convert NOWAIT to 2 sec wait              
         LA    R1,UNETSFOPEN       Wait for path to open                        
         IF    (UNETRPORT,Z),'LA R1,UNETSFOPENING'  Opening is ok               
         LA    R15,UNET                                                         
         ACALL NPATWAIT            Wait for connection to open                  
         BNZ   NPOEXIT                                                          
*                                                                               
         LA    R15,4               Assume error                                 
         SETMSG UNETEMSG            Saved error message text                    
         VCALL RTRIM                                                            
         IF    ((R0,Z),OR,(UNETEMSG,Z)),'CLEAR R15; SETMSG "OK"'                
*                                                                               
NPOEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATCTRL -- Routine to do network path control function.                     
*                                                                               
*    On entry:                                                                  
*      R1  - control function id, specifically:                                 
*              "EOF"   -- send end of file indicator                            
*              "ABORT" -- send abort                                            
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 = ok;          R1,R0 = msg ("OK")                                      
*      4 = error;       R1,R0 = error msg loc, len                              
*                                                                               
NPATCTRL XPROC (R2,LSR)                                                         
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATCTRL,'Bad UNET ptr'                         
*                                                                               
         LR    R5,R1               Save option string ptr                       
*-                                                                              
*-       Check for network requests.                                            
*-                                                                              
         ACALL NPATCHK             Check for new network requests               
*-                                                                              
*-       Send TCP_EOF or TCP_ABORT if connection is still active.               
*-                                                                              
         IF    (UNETSTATE,LT,UNETSFCLOSE),BEGIN  Connection open...             
         IF    (UNETAID,Z),EXIT    Never opened, forget it                      
*                                                                               
         IF    (@R5,EQ,'EOF'),BEGIN  EOF...                                     
         IF    (UNETSTATE,LE,UNETSFOPENING),NCTRLOK  Ignore if n/c              
         SET   UNETFOUTEOF         EOF sent                                     
         LA    R1,=CL16'TCP_EOF:'                                               
         END                                                                    
*                                                                               
         ELSE  BEGIN               ABORT...                                     
         SET   UNETFOUTABORT       ABORT sent                                   
         LA    R1,=CL16'TCP_ABORT:'                                             
         END                                                                    
*                                                                               
         SET   UNETFCTRL           Sending control info                         
         SEG   (R1),16,UNETOUTSG                                                
         SEG   UNETAID             Amelia session ID                            
         SEGWR                                                                  
         CLEAR UNETFCTRL           Reset                                        
         END                                                                    
*                                                                               
NCTRLOK  SETMSG 'OK'                                                            
         CLEAR R15                                                              
         PEND                                                                   
         EJECT                                                                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATREAD -- Routine to get the next "line" of data from the                  
*    input data stream.  This routine handles all the splitting                 
*    and wrapping of lines that are too long.                                   
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok;                           R1,R0 = line loc, len                  
*      1 - no data now/end of file;      R1,R0 = error msg text                 
*                                                                               
NPATREAD XPROC (R2,LSR)                                                         
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATREAD,'Bad UNET ptr'                         
*                                                                               
         CLEAR R2                  Working length (for loop below)              
         L     R3,UNETBUFP         Dest buffer (for loop below)                 
*-                                                                              
*-       Keep processing input data until we can return a line.                 
*-                                                                              
         LOOP  BEGIN                                                            
         LM    R4,R5,UNETINCUR     Get current source buffer ptrs               
*                                                                               
         IF    (R4,NP),BEGIN       Get the next buffer...                       
         LA    R15,UNET                                                         
         ACALL READDATA            Get more input data                          
         IF    NZ,BEGIN            Something's wrong...                         
         IF    (R2,Z),NRDEXIT      No partial data, scram                       
         CLEAR R4,R5               No more text                                 
         B     NRDDONE             Add final line of text                       
         END                                                                    
*                                                                               
         LR    R4,R0               Input buffer length                          
         LR    R5,R1               Input buffer loc                             
         END                                                                    
*-                                                                              
*-       Process the input data a character at a time.                          
*-                                                                              
NRDLOOP  WHILE (R4,POS),BEGIN      Go through data...                           
         MVC   @R3(1),@R5          Copy data character                          
         IF    ^UNETFASCII8,'NI @R3,X"7F"'  Zot MSB                             
*                                                                               
         LA    R5,@R5+1            Kick input character ptr                     
         DECR  R4                  Decr remaining length                        
*-                                                                              
*-       Expand the TAB character.                                              
*-                                                                              
         IF    (@R3,EQ,$TAB),BEGIN  ASCII tab character...                      
         IF    UNETFKEEPTABS,EXIT  Don't expand tab character, scram            
*                                                                               
         LOOP  BEGIN               Fill with blanks...                          
         MVI   @R3,$BLANK          ASCII blank                                  
         LA    R3,@R3+1            Next position                                
         LA    R2,@R2+1            Kick length                                  
*                                                                               
* WYLBUR didn't check during tab expansion to see if it would                   
* cause the buffer to be overrun. If it will, we merely terminate               
* the input line.                                                               
*                                                                               
*   MPD 4/14/97                                                                 
*                                                                               
         IF    (R2,GE,UNETMAXL),NRDDONE  Too long, stop                         
         LR    R15,R2                                                           
         N     R15,=A(X'7')        Is it modulo 8?                              
         UNTIL Z                                                                
         END                                                                    
*                                                                               
         B     NRDLOOP             Go back for more                             
         END                                                                    
*-                                                                              
*-       CR ends the line; we must also check for an optional                   
*-           LF after the CR.                                                   
*-                                                                              
         IF    (@R3,EQ,X'0D'),BEGIN  ASCII CR...                                
         IF    ((R4,POS),AND,(@R5,EQ,X'0A')),BEGIN  CR LF...                    
         LA    R5,@R5+1            Kick input character ptr                     
         DECR  R4                  Decr remaining length                        
         END                                                                    
         ELSE  'SET UNETFCR'       Must check if LF follows this CR             
         B     NRDDONE                                                          
         END                                                                    
*-                                                                              
*-       LF can also end the line.                                              
*-                                                                              
         IF    (@R3,EQ,X'0A'),BEGIN  ASCII LF...                                
         IF    ^UNETFCR,NRDDONE    End of line, scram                           
*                                                                               
         CLEAR UNETFCR             Reset CR found flag                          
         IF    (R2,Z),NRDLOOP      Trailing LF in CR LF, loop back              
         END                                                                    
*                                                                               
         LA    R3,@R3+1            Kick output buffer ptr                       
         LA    R2,@R2+1            Kick working length                          
*-                                                                              
*-       Split the line if it is longer than UNETMAXL.  If WRAP mode            
*-         then split the line at the last blank before UNETMAXL.               
*-                                                                              
* !!!!!!!  what do we do about WRAP mode???                                     
         IF    (R2,GE,UNETMAXL),NRDDONE  Too long, stop                         
         END                                                                    
*                                                                               
         STM   R4,R5,UNETINCUR     Save current source buffer ptrs              
         END                                                                    
*-                                                                              
*-       Translate line from ASCII to EBCDIC.                                   
*-                                                                              
NRDDONE  STM   R4,R5,UNETINCUR     Save current source buffer ptrs              
*                                                                               
         SETMSG L:UNETBUFP,(R2)     Working copy of line                        
*                                                                               
         L     R2,CVEB7TBL         Assume 7-bit ASCII                           
         IF    UNETFASCII8,'L R2,CVEBCTBL'  Nope, it's 8-bit                    
*                                                                               
         XPUSH R0,R1                                                            
*                                                                               
         WHILE (R0,GT,256),BEGIN   Do 256 bytes at a time...                    
         TR    @R1(256),@R2        Translate string to EBCDIC                   
         LA    R1,@R1+256                                                       
         SH    R0,=H'256'                                                       
         END                                                                    
*                                                                               
         LR    R15,R0                                                           
         TDEX  R15,'TR @R1(0),@R2'    Translate remainder to EBCDIC             
*                                                                               
         XPOP  R0,R1                                                            
*-                                                                              
*-       Trace input line for server paths.                                     
*-                                                                              
         IF    ('LT R15,UNETSVIB',NZ),BEGIN  Server path...                     
         SETMSG (R1),(R0)                                                       
         LA    R2,=C'<<<'          Input                                        
         VCALL SERVTRC             Trace input                                  
         END                                                                    
*                                                                               
         CLEAR R15                 Set A-ok return code                         
*                                                                               
NRDEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATXRD -- Local routine to read the next "transparent line"                 
*    of data from the current input data stream.                                
*                                                                               
*    The data is in Samson transparent data format.                             
*                                                                               
*    On entry:                                                                  
*      R0 - 0=EBCDIC, 1=ASCII                                                   
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok;                           R1,R0 = line loc, len                  
*      1 - no data now/end of file;      R1,R0 = error msg text                 
*                                                                               
XRDLEN#  EQU   64,,C'N'            Length of a transparent line                 
*-                                                                              
NPXRWA   RECORD BEGIN                                                           
NPXROPT  FLAG                                                                   
         FLAG  (NPXRFEBCDIC,0,EQ)  - EBCDIC mode                                
         FLAG  (NPXRFASCII,1,EQ)   - ASCII mode                                 
         END                                                                    
*-                                                                              
NPATXRD  XPROC (R2,LSR),NPXRWA                                                  
         CLEAR NPXRWA                                                           
         STC   R0,NPXROPT          Save option byte                             
*                                                                               
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),READTRAN,'Bad UNET ptr'                         
*                                                                               
         L     R3,UNETBUFP         Dest buffer (for loop below)                 
         LA    R3,@R3+1            Skip past spot for "guard char"              
         LA    R2,XRDLEN#          Maximum data length                          
*                                                                               
         LM    R4,R5,UNETINCUR     Current READDATA buf position                
*-                                                                              
*-       Keep processing input data until we can return a line.                 
*-                                                                              
RDTLOOP  LOOP  BEGIN                                                            
         IF    (R4,NP),BEGIN       Get the next buffer...                       
         CLEAR (UNETINCUR,8)       Reset buffer ptrs                            
*                                                                               
         LA    R15,UNET                                                         
         ACALL READDATA            Get more input data                          
         IF    NZ,BEGIN            Something's wrong...                         
         IF    (R2,EQ,XRDLEN#),RDTEXIT  No partial data, scram                  
         B     RDTDONE             Add final line of text                       
         END                                                                    
*-                                                                              
*-       Check for "SAMDATA:" header and skip over it.  This check              
*-         should really be done in the SAM module.  Unfortunately,             
*-         the external routines are not set up to make that easy.              
*-                                                                              
         IF    UNETFSAMDATA,BEGIN  Check for Samson header...                   
         IF    ((R0,LT,8),OR,(@R1,NE,X'53414D444154413A')),BEGIN                
         SETMSG 'Network file transfer error, ftp header is missing.'           
         LA    R15,1               Error                                        
         EXIT  NPATXRD                                                          
         END                                                                    
*                                                                               
         CLEAR UNETFSAMDATA        Don't check any more                         
         LA    R1,@R1+8            Skip past header                             
         SH    R0,=H'8'                                                         
         BZ    RDTLOOP             No real read, go back                        
         END                                                                    
*                                                                               
         LR    R4,R0               Input buffer length                          
         LR    R5,R1               Input buffer location                        
         END                                                                    
*-                                                                              
*-       Now try to save enough data for a "transparent line".                  
*-                                                                              
         LR    R15,R4              Get total remaining length                   
         CEIL  R15,R2              Not more than our max                        
         XPUSH R15                                                              
         MOVE  R15,@R3,@R5         Save the data                                
         XPOP  R15                                                              
         AR    R5,R15              Kick data ptr                                
         SR    R4,R15              Deduct amount taken from buffer              
         AR    R3,R15              Kick our destination buffer ptr              
         SR    R2,R15              Keep our remaining len accurate              
         UNTIL NP                                                               
         END                                                                    
*                                                                               
         STM   R4,R5,UNETINCUR     Save updated buffer ptrs                     
*-                                                                              
*-       We now have the data for a transparent line.  Add the                  
*-         guard characters and convert it to EBCDIC to make it                 
*-         Samson transparent line format.                                      
*-                                                                              
RDTDONE  LA    R4,XRDLEN#                                                       
         SR    R4,R2               Line length                                  
*                                                                               
         L     R5,UNETBUFP         Working line area                            
         MVI   @R5,C'@'            Starting guard character                     
         LA    R15,@R4+1(R5)                                                    
         MVI   @R15,C'@'           Ending guard character                       
*-                                                                              
*-       Translate line from ASCII to EBCDIC.                                   
*-                                                                              
         IF    NPXRFEBCDIC,BEGIN   Convert to EBCDIC...                         
         L     R2,CVEBCTBL         ASCII to EBCDIC xl table                     
         TR    @R5(XRDLEN#+2),@R2                                               
         END                                                                    
*                                                                               
         SETMSG @R5,@R4+2           Transparent data line                       
         CLEAR R15                 A-ok                                         
*                                                                               
RDTEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  READDATA -- Local routine to read data from the current data                 
*    stream.  This routine also deletes the previously processed                
*    read data.                                                                 
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - line returned;            R1,R0 - line loc,len                       
*      1 - attn/timeout/eof/closed;  R1,R0 - error msg loc, len                 
*                                                                               
READDATA PROC  (R2,LSR)                                                         
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*-                                                                              
*-       Free previous buffer.                                                  
*-                                                                              
RDATLOOP IF    ('LT R1,UNETINOLD',NZ),BEGIN                                     
         CLEAR UNETINOLD           Reset old buffer ptr                         
         WITH  (INBUF,R1),'L R2,INBUFLEN'  This buffer's length                 
*                                                                               
         VCALL FREECORE            Free memory                                  
*                                                                               
         L     R15,UNETINL         Total input buffer byte count                
         SR    R15,R2              Deduct buffer just freed                     
         ST    R15,UNETINL         Save it                                      
*-                                                                              
*-       If we have previously told Amelia to stop sending new                  
*-         data and we now have enough buffer space then send                   
*-         a TCP_START.                                                         
*-                                                                              
         IF    UNETFINSTOP,BEGIN   We told Amelia to stop...                    
*                                                                               
         IF    (UNETINL,GT,UNETINLO#),EXIT  Stay stopped, scram                 
*                                                                               
         IF    (UNETOUTSGLENF,NZ),EXIT  We can't use the seg buffer             
*                                                                               
         SEGDEF UNETOUTSG                                                       
         MVC   @R13(1),UNETSGFLG   Save seg flags                               
         XPUSH ,,4                                                              
         SET   (UNETFCTRL+UNETFWRONLY,EQ)  Our control flags                    
*                                                                               
         SEG   LA:=CL16'TCP_START:',16                                          
         SEG   UNETAID             Amelia ID                                    
         SEGWR                                                                  
         XPOP  ,,4                                                              
         MVC   UNETSGFLG,@R13      Restore                                      
         SEGDEF DUMMY              (Safety)                                     
*                                                                               
         CLEAR UNETFINSTOP         No longer stopped                            
         END                                                                    
         END                                                                    
*-                                                                              
*-       Return the next input buffer in the queue.                             
*-                                                                              
         LT    R5,UNETINQH         Get first input buffer ptr                   
         IF    NZ,BEGIN            We have something...                         
         WITH  (INBUF,R5)                                                       
*                                                                               
         MVC   UNETINQH,INBUFLNK   De-queue this entry                          
         IF    (UNETINQH,Z),'CLEAR UNETINQT'  Nothing in the queue              
*                                                                               
         MVC   INBUFLNK,=F'-1'     Zap link ptr                                 
         ST    R5,UNETINOLD        Save old buffer ptr (for delete)             
*                                                                               
         SETMSG INBUFDAT,L:INBUFLEN  Return this buffer                         
*                                                                               
         IF    UNETFIAC,BEGIN      We need to process IACs...                   
         LA    R15,UNET                                                         
         ACALL IACCHK              Process IAC sequences now                    
         IF    (R0,NP),RDATLOOP    No non-IAC data, loop back                   
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         B     RDATEXIT                                                         
         END                                                                    
*-                                                                              
*-       No input data currently available.                                     
*-                                                                              
         IF    (UNETSTATE,EQ,UNETSFDATA),BEGIN  No data waiting...              
         MVI   UNETSTATE,UNETSFOPEN                                             
         END                                                                    
*                                                                               
         IF    (UNETSTATE,EQ,UNETSFDATASTOP),BEGIN  No data...                  
         MVI   UNETSTATE,UNETSFOPENSTOP                                         
         END                                                                    
*-                                                                              
*-       Check to see if end of file is pending, if it is we return             
*-         the 'end of file' return code.                                       
*-                                                                              
         IF    UNETFINEOF,BEGIN    End of file pending...                       
         SETMSG 'END OF FILE'                                                   
         LA    R15,1                                                            
         B     RDATEXIT                                                         
         END                                                                    
*                                                                               
         IF    (UNETSTATE,GE,UNETSFABORT),BEGIN                                 
         SETMSG 'CONNECTION CLOSED'                                             
         LA    R15,1                                                            
         B     RDATEXIT                                                         
         END                                                                    
*-                                                                              
*-       Wait for more data (if wait mode was specified).                       
*-                                                                              
         IF    ^UNETFNOWAIT,BEGIN  Wait mode...                                 
RDATWAIT L     R0,UNETWAIT         Timeout specifed                             
         LA    R1,UNETSFDATASTOP   Wait for new data                            
         LA    R15,UNET                                                         
         ACALL NPATWAIT            Wait for data connection to open             
         IF    NZ,BEGIN            Attn or timeout...                           
         LA    R15,1               Set rc (msg already set)                     
         B     RDATEXIT            Scram                                        
         END                                                                    
         B     RDATLOOP            Try it again                                 
         END                                                                    
*                                                                               
         VCALL SLICECHK            For safety against loops                     
*                                                                               
         SETMSG 'NO DATA'                                                       
         LA    R15,1               No data right now                            
*                                                                               
RDATEXIT PEND                                                                   
*                                                                               
         SEGDEF  DUMMY             (Safety)                                     
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IACCHK -- Local routine to process Telnet IAC control sequences              
*    in the input data stream.  This routine processes all IAC                  
*    sequences, and returns the data buffer with the IAC sequences              
*    removed.                                                                   
*                                                                               
*    On entry:                                                                  
*      R1,R0 - data location, length                                            
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit:                                                                   
*      R0 - new data length (will be shorter if IAC sequences                   
*             were removed)                                                     
*                                                                               
IACCHK   PROC                                                                   
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LR    R5,R1               Input data ptr                               
         LTR   R4,R0               Input data length                            
         BNP   ICHKDONE            No data, scram                               
*-                                                                              
*-       Look for IAC sequences in the data stream.                             
*-                                                                              
IACLOOP  WHILE (R4,POS),BEGIN      Look for control sequences...                
         LR    R15,R4                                                           
         CEIL  R15,256                                                          
         LA    R1,@R5(R15)                                                      
         CLEAR R2                                                               
         DEX   R15,'TRT @R5(0),IACTRT'  Look for IAC character                  
         LR    R3,R1                                                            
         SR    R3,R5               Data length before IAC                       
*                                                                               
         AR    R5,R3               Skip past data characters                    
         SR    R4,R3               Keep length accurate                         
         IF    NP,EXIT             Nothing left, scram                          
*-                                                                              
*-       Call appropriate routine to process IAC sequence.                      
*-                                                                              
         IF    (R2,NZ),BEGIN       Process IAC sequence...                      
         LC    R2,@R5+1            Opcode after IAC                             
         SH    R2,=AL2(239)        Valid opcodes are 240-255                    
         IF    NEG,'CLEAR R2'                                                   
*                                                                               
         SLL   R2,2                Times 4                                      
         L     RAR,IACTABLE(R2)                                                 
         BR    RAR                 Go do IAC function                           
         END                                                                    
         END                                                                    
*                                                                               
         PRESTORE (R1)             Get original line ptr                        
         SR    R5,R1               New line length                              
         LR    R0,R5                                                            
         PRETURN (R0)              Save new length                              
*                                                                               
         B     ICHKDONE                                                         
         EJECT                                                                  
*-                                                                              
*-       Telnet IAC control sequences                                           
*-                                                                              
IACTRT   DC    256X'00'            Non-zero for telnet control chars            
         ORG   IACTRT+X'FF'                                                     
         DC    X'FF'               IAC                                          
         ORG                                                                    
*                                                                               
IACTABLE DC    A(IACERROR)                                                      
         DC    A(IACNOP)      240: End of subnegotiation parms                  
         DC    A(IACNOP)      241: No operation                                 
         DC    A(IACNOP)      242: Data mark                                    
         DC    A(IACBREAK)    243: Break                                        
         DC    A(IACBREAK)    244: Interrupt process                            
         DC    A(IACBREAK)    245: Abort output                                 
         DC    A(IACAYT)      246: Are you there                                
         DC    A(IACEC)       247: Erase character                              
         DC    A(IACEL)       248: Erase line                                   
         DC    A(IACNOP)      249: The "go ahead" signal                        
         DC    A(IACSB)       250: Sub-option follows                           
         DC    A(IACWILL)     251: He will do the following option              
         DC    A(IACWONT)     252: He wont do the following option              
         DC    A(IACDO)       253: He wants us to do  " "    "  "               
         DC    A(IACDONT)     254: He wants us to stop doing "  "               
         DC    A(IAC255)      255: Data byte of 255                             
         SPACE 2                                                                
*-                                                                              
*-       Bad IAC control sequence.                                              
*-                                                                              
IACERROR LA    R15,2                                                            
         LCALL IACDEL              Delete IAC xxx                               
         B     IACLOOP             Skip past bad IAC byte                       
         SPACE 2                                                                
*-                                                                              
*-       No operation.                                                          
*-                                                                              
IACNOP   LA    R15,2                                                            
         LCALL IACDEL              Delete IAC NOP                               
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Break/Interrupt process.                                               
*-                                                                              
IACBREAK LA    R15,1                                                            
         LCALL IACDEL                                                           
         MVI   @R5,$CTRLC          Plant ctrl-C                                 
*                                                                               
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote is asking "Are you there?".                                     
*-                                                                              
IACAYT   LA    R15,2                                                            
         LCALL IACDEL              Delete IAC AYT                               
         SEG   '(We are here!)',,.UNETOUTSG  Add it to output                   
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Erase character.                                                       
*-                                                                              
IACEC    LA    R15,1                                                            
         LCALL IACDEL              Delete IAC (but leave "EC")                  
         MVI   @R5,X'08'           Plant backspace                              
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Erase line.                                                            
*-                                                                              
IACEL    LA    R15,1                                                            
         LCALL IACDEL              Delete IAC (but leave "EL")                  
         MVI   @R5,X'18'           Plant ctrl-X                                 
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is telling us that it will do something.                   
*-                                                                              
IACWILL  IF    (R4,NP),ICHKDONE    Incomplete sequence, scram                   
         LC    R2,@R5+2            Will "opcode"                                
*                                                                               
         IF    (R2,EQ,$ECHO),BEGIN  They will echo their chars...               
         SET   UNETFNOECHO         Don't echo for remote host                   
         END                                                                    
*                                                                               
         ELSE  BEGIN               Reject unrecognized WILL..                   
         IF    (R2,NE,$SGA),BEGIN                                               
         SET   UNETFNOXL           Seg w/o translation                          
         SEG   LA:=AL1($IAC,$DONT),2,.UNETOUTSG  Don't                          
         SEG   @R5+2,1,.UNETOUTSG  Whatever                                     
         CLEAR UNETFNOXL           Reset                                        
         END                                                                    
         END                                                                    
*                                                                               
         LA    R15,3                                                            
         LCALL IACDEL              Delete IAC WILL opcode                       
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is telling us that it won't do something.                  
*-                                                                              
IACWONT  IF    (R4,NP),ICHKDONE    Incomplete sequence, scram                   
         LC    R2,@R5              Won't "opcode"                               
*                                                                               
         IF    (R2,EQ,$ECHO),BEGIN  They won't echo their chars...              
         CLEAR UNETFNOECHO         Echo for remote host                         
         END                                                                    
*                                                                               
         LA    R15,3                                                            
         LCALL IACDEL              Delete IAC WONT opcode                       
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is demanding that we do something.                         
*-                                                                              
IACDO    IF    (R4,NP),ICHKDONE    Incomplete sequence, scram                   
         LC    R2,@R5+2            Do "opcode"                                  
*                                                                               
         IF    (R2,EQ,$SGA),''     Accept "suppress go ahead"                   
*                                                                               
         ELSEIF (R2,EQ,$TTYPE),BEGIN  Tell it we will send ttype                
         SET   UNETFNOXL           Seg w/o translation                          
         SEG   LA:=AL1($IAC,$WILL),2,.UNETOUTSG  Send WILL                      
         SEG   @R5+2,1,.UNETOUTSG  followed by TTYPE code                       
         CLEAR UNETFNOXL           Reset                                        
         END                                                                    
*                                                                               
         ELSE  BEGIN               Reject unrecognized DO...                    
         SET   UNETFNOXL           Seg w/o translation                          
         SEG   LA:=AL1($IAC,$WONT),2,.UNETOUTSG  Won't                          
         SEG   @R5+2,1,.UNETOUTSG  Whatever                                     
         CLEAR UNETFNOXL           Reset                                        
         END                                                                    
*                                                                               
         LA    R15,3                                                            
         LCALL IACDEL              Delete IAC DO opcode                         
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Remote host is demanding that we stop doing something.                 
*-                                                                              
IACDONT  IF    (R4,NP),ICHKDONE    Incomplete sequence, scram                   
         LC    R2,@R5+2            Don't "opcode"                               
*                                                                               
         LA    R15,3                                                            
         LCALL IACDEL              Delete IAC DONT opcode                       
         B     IACLOOP                                                          
         SPACE 2                                                                
*-                                                                              
*-       Data byte of 255.                                                      
*-                                                                              
IAC255   LA    R15,1                                                            
         LCALL IACDEL              Delete IAC character                         
         B     IACLOOP                                                          
*-                                                                              
*-       Start of sub-option.                                                   
*-         Currently we just scan for the end of sub-options                    
*-         IAC sequence, and delete the entire sequence.                        
*-                                                                              
*-         Not quite: SEND Terminal type sequence is recognized                 
*-                    here. Fixes a bug (wherein WSYLBUR sent                   
*-                    the terminal information in response to                   
*-                    "DO". MPD - 6/23/97                                       
*-                                                                              
IACSB    DS    0H                                                               
*                                                                               
*   Check to see if it's a request to send the terminal type.                   
*                                                                               
         LC    R2,@R5+2            Get "opcode"                                 
*                                                                               
         IF (R2,EQ,$TTYPE),BEGIN   Send back terminal type...                   
         SET   UNETFNOXL           Seg w/o translation                          
         SEG   LA:=AL1($IAC,$SB,$TTYPE,0),4,.UNETOUTSG                          
*                                                                               
         CLEAR UNETFNOXL           Turn on translation                          
         SETMSG UNETTERM            Terminal type                               
         VCALL RTRIM               Trim trailing blanks                         
         IF    ((R0,Z),OR,(UNETTERM,Z)),BEGIN  Our default...                   
         SETMSG CPSTCLS             Terminal class                              
         IF    CPSFSAM,'SETMSG "VT100"'  Samson becomes VT100                   
         IF    CPSTVTAM,'SETMSG "unknown"'  VTAM(3270) becomes unknown          
         END                                                                    
         SEGT  (R1),(R0),.UNETOUTSG  Terminal type name                         
         SET   UNETFNOXL                                                        
*                                                                               
         SEG   LA:=AL1($IAC,$SE),2,.UNETOUTSG                                   
         CLEAR UNETFNOXL           Reset                                        
         END                                                                    
*                                                                               
*  Flush the sequence                                                           
*                                                                               
         LA    R15,2               Count bytes "IAC SB"                         
         LR    R2,R4                                                            
         LR    R3,R5                                                            
         WHILE ((R2,GE,2),AND,(@R3,NE,IACSE)),BEGIN  Keep looking...            
         LA    R15,@R15+1          Count this character                         
         LA    R3,@R3+1                                                         
         DECR  R2                                                               
         END                                                                    
         IF    (R2,GE,2),'LA R15,@R15+2'  Count bytes "IAC SE"                  
         LCALL IACDEL              Delete entire sequence                       
         B     IACLOOP                                                          
*                                                                               
IACSE    DC    0CL2'xx',AL1($IAC,$SE)  IAC SE                                   
*                                                                               
ICHKDONE SEGWR ,,.UNETOUTSG                                                     
*                                                                               
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Safety)                                     
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IACDEL -- Local routine to delete the number of characters                   
*    specified from the current position in the input buffer.                   
*                                                                               
*    On entry:                                                                  
*      R15 - number of bytes to remove from buffer                              
*      R5,R4 - current remaining buffer location, length                        
*                                                                               
*    On exit:                                                                   
*      R5,R4 - updated remaining buffer location, length                        
*                                                                               
IACDEL   PROC  (R7,LSR)                                                         
*                                                                               
         IF    (R15,LGE,R4),'CLEAR R4'   Deleting rest of buffer                
*                                                                               
         ELSE  BEGIN               Move buffer over...                          
         SR    R4,R15              Deduct chars to be deleted                   
*                                                                               
         LR    R14,R5              Dest ptr                                     
         LA    R0,@R5(R15)         Source ptr                                   
         LR    R15,R4              Len                                          
         LR    R1,R4               (Ditto)                                      
         MVCL  R14,R0              Move text over to delete chars               
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATTALK -- Routine to do combined terminal and network I/O.                 
*    This allows a user to "talk" to a network connection                       
*    (primarily for TELNET support).                                            
*                                                                               
*    On entry:                                                                  
*      R0  - working active file number (0=none)                                
*      R1  - option string:                                                     
*              N...    - Don't re-prompt                                        
*              ...x    - "x" is the ATTN char (. = Ctrl-C)                      
*                                                                               
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0  - OK                                                                  
*      nz - some sort of error                                                  
*      R1,R0 - error msg loc,len                                                
*                                                                               
NTKWA    RECORD BEGIN                                                           
NTKFLAG  FLAG                                                                   
         FLAG  NTKFACT             - Working Active file specified              
         FLAG  NTKFATTN            - Read ended with ATTN                       
         FLAG  NTKFNPR             - Don't re-prompt                            
         FLAG  NTKFNOWAIT          - No wait mode                               
         FLAG  NTKFRSHD            - You're talking to an rshd                  
*                                                                               
NTKATTNC DS    X                   Attention character (in ASCII)               
*                                                                               
NTKOLDA  DS    F                   Original active file number                  
*                                                                               
NTKSAVE  DS    3A                  Register save area                           
*                                                                               
NTKWORKL DS    CL(&LINESZ)         Working line text                            
*                                                                               
NTKTRM   DS    CL(L'CPTRM)         Saved terminal options                       
*                                                                               
NTKPUTCB PUTCB PFX=NTK             PUTBYTES options                             
         END                                                                    
*-                                                                              
NPATTALK XPROC (R2,LSR),NTKWA                                                   
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATTALK,'Bad UNET ptr'                         
*                                                                               
         LA    R5,NTKWA                                                         
         WITH  (NTKWA,R5)                                                       
*                                                                               
         LR    R2,R0               Save actno                                   
         LR    R3,R1               Option string ptr                            
         ZOT   NTKWA                                                            
*                                                                               
         IF    (UNETRPORT,EQ,514),'SET NTKFRSHD'                                
*                                                                               
         IF    (UNETTALK,Z),BEGIN  Set default talk mode...                     
         MVI   UNETTALK,UNETTALKCHAR  Char mode talking                         
         IF    CPSTVTAM,'MVI UNETTALK,UNETTALKVTAM'  Vtam                       
         IF    CPSTVIRT,'MVI UNETTALK,UNETTALKLINE'  Line                       
         END                                                                    
*                                                                               
         IF    (@R3,EQ,'N'),'SET NTKFNPR'  Don't re-prompt                      
         IF    UNETFNOWAIT,'SET NTKFNOWAIT'  No wait mode                       
*                                                                               
         MVC   NTKATTNC,@R3+3      Save attention character                     
         IF    (NTKATTNC,EQ,'.'),'MVI NTKATTNC,X"03"'  Default                  
*                                                                               
         SEGDEF UNETOUTSG                                                       
*-                                                                              
*-       Switch in to the working Active file.                                  
*-                                                                              
         LTR   R15,R2              Actno                                        
         IF    NZ,BEGIN            Working Active file specified...             
         VCALL ACTPICK             Pick it                                      
         IF    POS,'SET NTKFACT'   We found the working active                  
         ST    R15,NTKOLDA         Save original Active file no                 
         END                                                                    
*-                                                                              
*-       Get any old prompt from the working Active file.                       
*-         If the line ends with our "[]" characters it is a prompt.            
*-                                                                              
         IF    NTKFACT,BEGIN       Only if we have a working act...             
         L     R15,CPALLNO         Last lineno                                  
         SETMSG NTKWORKL            Prompt line area                            
         VCALL GETLINE             Get last line                                
*                                                                               
         IF    (R0,GE,2),BEGIN     Check for our ending chars...                
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         SH    R2,=H'2'                                                         
         IF    (@R2,EQ,'[]'),BEGIN  It's our prompt...                          
         SH    R0,=H'2'            Deduct length of "[]" chars                  
         LR    R2,R0               Save true line length                        
*                                                                               
         L     R0,CPALLNO          First line to delete                         
         LR    R1,R0               Last line to delete                          
         VCALL DELRANGE            Delete the line                              
*                                                                               
         SETMSG NTKWORKL,(R2)       Prompt text                                 
         VCALL TOASCII             Convert EBCDIC to ASCII                      
         LA    R15,NTKPUTCB                                                     
         VCALL PUTBYTES            Save prompt text in Active file              
*                                                                               
         IF    ^NTKFNPR,BEGIN      Write out the prompt again...                
         IF    (UNETTALK,EQ,UNETTALKCHAR),BEGIN  Wr transparent...              
         SET   CPFTRAN             Transparent I/O                              
         END                                                                    
*                                                                               
         ELSE  'VCALL TOEBCDIC'    Convert back to EBCDIC                       
*                                                                               
         TSEG  (R1),(R0)           Write prompt                                 
         TMARK                                                                  
         TWRITE                                                                 
         CLEAR CPFTRAN                                                          
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Send initial Telnet IAC sequences.                                     
*-                                                                              
         IF    ^UNETFIACSENT,BEGIN  Initial IACs not yet sent...                
         SET   UNETFIACSENT        Only go through this the 1st time            
         IF    ^UNETFIAC,EXIT      Don't send telnet IACs, scram                
*                                                                               
         SET   UNETFNOXL                                                        
         SEG   LA:=AL1($IAC,$DO,$SGA,$IAC,$WILL,$SGA),6                         
*                                                                               
         IF    (UNETTALK,EQ,UNETTALKCHAR),BEGIN  Do remote echo...              
         SEG   LA:=AL1($IAC,$DO,$ECHO),3                                        
         END                                                                    
*-                                                                              
*-       Think about what to send for VTAM TALK...  !!!!!!                      
*-                                                                              
         IF    (UNETTALK,EQ,UNETTALKVTAM),BEGIN  Do remote echo...              
         SEG   LA:=AL1($IAC,$DO,$ECHO),3                                        
         END                                                                    
*                                                                               
         SEG   LA:=AL1($IAC,$WILL,$TTYPE),3  We will answer ttype               
*                                                                               
         SEGWR                                                                  
         CLEAR UNETFNOXL                                                        
         END                                                                    
*                                                                               
         IF    (UNETTALK,EQ,UNETTALKCHAR),'LCALL CHARTALK'                      
         ELSEIF (UNETTALK,EQ,UNETTALKLINE),'LCALL LINETALK'                     
         ELSEIF (UNETTALK,EQ,UNETTALKVTAM),'LCALL VTAMTALK'                     
         ELSE  'KAPUT BADTALK,"NET TALK error."'                                
*                                                                               
         STM   R15,R1,NTKSAVE      Save return regs                             
*-                                                                              
*-       If we have a working Active file then save the last                    
*-         partial line (a prompt probably) in the Active file.                 
*-                                                                              
         IF    NTKFACT,BEGIN       We have a working Active...                  
         SETMSG X'5B5D'             Ascii "[]"                                  
         LA    R15,NTKPUTCB                                                     
         VCALL PUTBYTES            Add prompt suffix                            
*                                                                               
         LH    R0,=H'-1'                                                        
         LA    R15,NTKPUTCB                                                     
         VCALL PUTBYTES            Flush buffer                                 
*                                                                               
         L     R15,NTKOLDA                                                      
         VCALL ACTPICK             Restore current Active file                  
         END                                                                    
*                                                                               
         IF    ^NTKFNOWAIT,'CLEAR UNETFNOWAIT'  Restore path wait               
*                                                                               
         LM    R15,R1,NTKSAVE      Restore regs                                 
*                                                                               
NTKEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CHARTALK -- Local routine to do character at a time terminal                 
*    input.                                                                     
*                                                                               
*    Anything typed at the terminal is send across the                          
*    network path and anything sent across the network path is                  
*    typed at the terminal.                                                     
*                                                                               
*    On exit, R15 (and cc):                                                     
*      1 - done talking;  R1,R0 = error msg loc, len                            
*                                                                               
CHARTALK PROC  (R2,LSR)                                                         
         WITH  (UNET,R6),(NTKWA,R5)                                             
         SET   UNETFNOWAIT         Force no wait on READDATA                    
*-                                                                              
*-       Talk loop for character echoing mode.                                  
*-                                                                              
CHARLP   LA    R15,UNET                                                         
         ACALL READDATA            Get input data                               
         IF    NZ,BEGIN            No data or end of file...                    
         IF    (@R1,NE,'NO DATA'),CTKEXIT   End of file, etc.                   
         IF    NTKFNOWAIT,'LA R15,1; B CTKEXIT'  Return if no wait              
         CLEAR R1,R0               No data                                      
         END                                                                    
*-                                                                              
*-       If we're talking to an rsh daemon, then eliminate the                  
*-       leading X'00' (or X'01' if an error occurred on the                    
*-       command line fed to the remote shell), so that the                     
*-       NET_TALK user doesn't see it.                                          
*-                                                                              
         IF    ((R0,POS),AND,(NTKFRSHD)),BEGIN                                  
         IF    ((@R1,EQ,X'00'),OR,(@R1,EQ,X'01')),BEGIN                         
         DECR  R0                                                               
         LA    R1,@R1+1                                                         
         END                                                                    
         CLEAR NTKFRSHD            Do this once only                            
         END                                                                    
*-                                                                              
*-       Save the data we received from the network in the                      
*-         working Active file (if one was specified).                          
*-                                                                              
         IF    NTKFACT,BEGIN       Save text in working Active...               
         LA    R15,NTKPUTCB                                                     
         VCALL PUTBYTES            Save output text in Active file              
         END                                                                    
*-                                                                              
*-       Send what we read from the network to the terminal.                    
*-         Two things are done to the data:                                     
*-                                                                              
*-         1.  It is changed to even parity; since that is what                 
*-               is what our terminals expect.                                  
*-                                                                              
*-             Eliminated 7/7/97 by MPD. Parity generation                      
*-             is properly the front end's job, not the                         
*-             mainframes, and WYLBUR should not be doing it.                   
*-                                                                              
*-         2.  The end of line character(s) are replaced with a                 
*-               CR-LF.                                                         
*-                                                                              
         MVC   NTKTRM,CPTRM        Save terminal options                        
         SET   CPFTRAN,CPFNECHO,CPFBUFIO                                        
*                                                                               
         IF    (R0,POS),BEGIN      We have some data to write...                
*-                                                                              
*-       Outdata=CRLF                                                           
*-                                                                              
         IF    UNETOUTFCRLF,BEGIN  Outdata mode is CRLF...                      
         TSEG  (R1),(R0)           Write data exactly as is                     
         END                                                                    
*-                                                                              
*-       Outdata=LF                                                             
*-                                                                              
         ELSE  BEGIN               Outdata mode is LF...                        
         LR    R4,R1               Start of output data ptr                     
         LR    R3,R0               Data length                                  
*                                                                               
         WHILE (R3,POS),BEGIN      Write the data...                            
         LR    R1,R4                                                            
         WHILE ((R3,POS),AND,(@R4,NE,X'0A')),'DECR R3; LA R4,@R4+1'             
         LR    R0,R4                                                            
         SR    R0,R1               Length of text before LF                     
*                                                                               
         IF    (R3,NZ),BEGIN       Ended with LF...                             
         TSEG  (R1),(R0)           Write what we have                           
         TSEG  X'0D0A'             CR-LF                                        
         LA    R4,@R4+1                                                         
         DECR  R3                                                               
         END                                                                    
*                                                                               
         ELSE  'TSEG (R1),(R0)'    Write final piece of text                    
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       If we have an unusual network state then just write out                
*-         what we have to the terminal and then loop back.  This               
*-         happens when the other side writes a bunch of data and               
*-         then closes it's side of the path.                                   
*-                                                                              
         IF    (UNETSTATE,GT,UNETSFOPEN),BEGIN  Write current...                
         TMARK                                                                  
         TWRITE                                                                 
         MVC   CPTRM,NTKTRM        Restore terminal I/O options                 
         B     CHARLP              Loop back                                    
         END                                                                    
*-                                                                              
*-       Do an interruptable terminal read for any immediately                  
*-         available characters.  If no characters have been typed,             
*-         then this will wait for one character.  (This is a                   
*-         "buffered transparent" terminal read.)                               
*-                                                                              
         MVC   CPTRMIN,=H'256'     Maximum amount of terminal input             
         IF    (CPSFE,EQ,'11'),'MVC CPTRMIN,=H"1"'  Pre-ALF limit               
         SET   CPFTINT             Allow term I/O to be interrupted             
         SET   UNETFINT            Path is interruptable                        
*                                                                               
         TREAD ,                   Get data from terminal                       
*                                                                               
         MVC   CPTRM,NTKTRM        Restore terminal options                     
         CLEAR UNETFINT            Path is interruptable                        
*                                                                               
         LTR   R15,R15             Test TREAD return code                       
         BM    CTKEXIT             Logging off                                  
         IF    POS,BEGIN           Attn or interrupt...                         
         IF    (R15,EQ,101),EXIT   It's an interrupt, scram                     
         L     R2,CVCURJCB                                                      
         WITH  (JCB,R2),'CLEAR JCBFATTN,JCBFPATN'  Don't EXEC BREAK             
         SETMSG X'03'               Assume ASCII Ctrl-C                         
         END                                                                    
*                                                                               
         IF    (R0,POS),BEGIN      Terminal chars to send...                    
*-                                                                              
*-       Send exactly what we read from the terminal to the                     
*-         network.  The only modification is that our end of line              
*-         CR will get sent as LF or CR-LF depending on the outdata             
*-         mode.                                                                
*-                                                                              
         SET   UNETFNOXL           Data is already in ASCII                     
*                                                                               
         LR    R4,R1                                                            
         LR    R3,R0                                                            
         LOOP  BEGIN                                                            
         NI    @R4,X'7F'           Clear MSB of input ASCII data                
*                                                                               
         SETMSG @R4,1               A char at a time                            
*-                                                                              
*-       Convert backspace to delete character.                                 
*-                                                                              
         IF    UNETFBSISDEL,BEGIN  Backspace is delete...                       
         IF    (@R4,EQ,X'08'),'MVI @R4,X"7F"'  Change to DEL                    
         END                                                                    
*-                                                                              
*-       Stop if we found the attention character.                              
*-                                                                              
         IF    (@R4,EQ,NTKATTNC),BEGIN  Attention char...                       
         SEGWR                                                                  
         CLEAR UNETFNOXL           Reset                                        
*                                                                               
         SETMSG 'ATTN'                                                          
         LA    R15,1                                                            
         B     CTKEXIT             Scram                                        
         END                                                                    
*                                                                               
         IF    (@R4,EQ,X'0D'),BEGIN  CR...                                      
         IF    ^UNETFNOECHO,'TSEG X"0D0A"'  Echo CR LF locally                  
         SETMSG X'0D0A'             Assume "outdata=crlf"                       
         IF    UNETINFLF,'SETMSG X"0A"'  Just LF if "outdata=lf"                
         END                                                                    
*                                                                               
         ELSE  BEGIN               Not a CR...                                  
         IF    ^UNETFNOECHO,'TSEG (R1),(R0)'  Echo data locally                 
         END                                                                    
*                                                                               
         SEG   (R1),(R0)           Seg data                                     
*                                                                               
         LA    R4,@R4+1            Next character                               
         DECR  R3                                                               
         IF    (R3,NP),EXIT        All done, scram                              
         END                                                                    
*                                                                               
         SEGWR                                                                  
         CLEAR UNETFNOXL           Reset                                        
         END                                                                    
*                                                                               
         B     CHARLP              Loop back                                    
*                                                                               
CTKEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VTAMTALK -- Local routine to do "half duplex" style                          
*    character at a time I/O.                                                   
*                                                                               
*    The best we can do is have the user press ATTN any time                    
*    before he wants to enter terminal input.                                   
*                                                                               
*    On exit, R15 (and cc):                                                     
*      1 - done talking;  R1,R0 = error msg loc, len                            
*                                                                               
VTAMTALK PROC  (R2,LSR)                                                         
         WITH  (UNET,R6),(NTKWA,R5)                                             
         CLEAR UNETFNOWAIT         Force wait on READDATA                       
*-                                                                              
*-       Talk loop for half-duplex mode.                                        
*-                                                                              
HTKLOOP  LA    R15,UNET                                                         
         ACALL READDATA            Get input data                               
         IF    NZ,BEGIN            No data or end of file...                    
         IF    (@R1,EQ,'ATTN'),HTKREAD  ATTN means read for terminal            
         IF    (@R1,NE,'NO DATA'),HTKEXIT   End of file, etc.                   
         IF    NTKFNOWAIT,'LA R15,1; B HTKEXIT'  Return if no wait              
         CLEAR R1,R0               No data                                      
         END                                                                    
*-                                                                              
*-       Save the data we received from the network in the                      
*-         working Active file (if one was specified).                          
*-                                                                              
         IF    NTKFACT,BEGIN       Save text in working Active...               
         LA    R15,NTKPUTCB                                                     
         VCALL PUTBYTES            Save output text in Active file              
         END                                                                    
*-                                                                              
*-       Send exactly what we read from the network to the                      
*-         terminal.  The only thing special we need to do is look              
*-         for their end of line character(s) and send a CR-LF to               
*-         the terminal.                                                        
*-                                                                              
         MVC   NTKTRM,CPTRM        Save terminal options                        
*                                                                               
         IF    (R0,POS),BEGIN      We have some data to write...                
*-                                                                              
*-       Outdata=CRLF                                                           
*-                                                                              
         IF    UNETOUTFCRLF,BEGIN  Outdata mode is CRLF...                      
         LR    R4,R1               Start of output data ptr                     
         LR    R3,R0               Data length                                  
*                                                                               
         WHILE (R3,POS),BEGIN      Write the data...                            
         LR    R1,R4                                                            
         WHILE ((R3,POS),                                              *        
               AND,(@R4,NE,X'0D'),AND,(@R4,NE,X'8D')),                 *        
               'DECR R3; LA R4,@R4+1'                                           
         LR    R0,R4                                                            
         SR    R0,R1               Length of text before CR                     
*                                                                               
         VCALL TOEBC7              Convert ASCII-7 to EBCDIC                    
*                                                                               
         IF    (R3,NZ),BEGIN       Ended with CR...                             
         TSEG  (R1),(R0)           Write what we have                           
         TSEG  X'15'               NL                                           
         LA    R4,@R4+1                                                         
         DECR  R3                                                               
*                                                                               
         IF    ((R3,POS),                                              *        
               AND,((@R4,EQ,X'0A'),OR,(@R4,EQ,X'8A'))),                *        
               'LA R4,@R4+1; DECR R3'                                           
         END                                                                    
*                                                                               
         ELSE  'TSEG (R1),(R0)'    Write final piece of text                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Outdata=LF                                                             
*-                                                                              
         ELSE  BEGIN               Outdata mode is LF...                        
         LR    R4,R1               Start of output data ptr                     
         LR    R3,R0               Data length                                  
*                                                                               
         WHILE (R3,POS),BEGIN      Write the data...                            
         LR    R1,R4                                                            
         WHILE ((R3,POS),                                              *        
               AND,(@R4,NE,X'0A'),AND,(@R4,NE,X'8A')),                 *        
               'LA R4,@R4+1; DECR R3'                                           
         LR    R0,R4                                                            
         SR    R0,R1               Length of text before LF                     
*                                                                               
         VCALL TOEBC7              Convert ASCII-7 to EBCDIC                    
*                                                                               
         IF    (R3,NZ),BEGIN       Ended with LF...                             
         TSEG  (R1),(R0)           Write what we have                           
         TSEG  X'15'               NL                                           
         LA    R4,@R4+1                                                         
         DECR  R3                                                               
         END                                                                    
*                                                                               
         ELSE  'TSEG (R1),(R0)'    Write final piece of text                    
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Write whatever we got from the network to the terminal.                
*-                                                                              
         TMARK                                                                  
         TWRITE                                                                 
*                                                                               
         MVC   CPTRM,NTKTRM        Restore terminal I/O options                 
         B     HTKLOOP             Loop back                                    
*-                                                                              
*-       Do terminal read.                                                      
*-                                                                              
*-       We use a maximum input count of 80 characters to try to                
*-       avoid the MILTEN/VTAM code from blanking out more text                 
*-       that it needs to.                                                      
*-                                                                              
HTKREAD  MVC   CPTRMIN,=H'80'      Shorten max input count                      
         TREAD X'2F'               Prompt with BELL                             
         CLEAR CPTRMIN                                                          
*                                                                               
         MVC   CPTRM,NTKTRM        Restore terminal options                     
         LTR   R15,R15             Test TREAD return code                       
         BM    HTKEXIT             Logging off                                  
         IF    POS,BEGIN           Attn or interrupt...                         
         SET   NTKFATTN            Read ended with ATTN                         
         L     R2,CVCURJCB                                                      
         WITH  (JCB,R2),'CLEAR JCBFATTN,JCBFPATN'  Don't EXEC BREAK             
         END                                                                    
*                                                                               
         IF    (R0,POS),BEGIN      Terminal chars to send...                    
         SET   UNETFNOXL           We want to send ASCII data                   
*                                                                               
         VCALL TOASCII             Convert text to ASCII                        
         SEG   (R1),(R0)           Data                                         
         SETMSG X'0D0A'             Assume "outdata=crlf"                       
         IF    UNETINFLF,'SETMSG X"0A"'  Just LF if "outdata=lf"                
         SEG   (R1),(R0)           CR                                           
         SEGWR                                                                  
*                                                                               
         CLEAR UNETFNOXL           Reset                                        
         END                                                                    
*                                                                               
         IF    NTKFATTN,'SETMSG "ATTN"; LA R15,1; B HTKEXIT'                    
         B     HTKLOOP             Loop back                                    
*                                                                               
HTKEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LINETALK -- Local routine to do output only.                                 
*                                                                               
*    On exit, R15 (and cc):                                                     
*      1 - done talking;  R1,R0 = error msg loc, len                            
*                                                                               
LINETALK PROC  (R2,LSR)                                                         
         WITH  (UNET,R6),(NTKWA,R5)                                             
         CLEAR UNETFNOWAIT         Force wait on READDATA                       
*-                                                                              
*-       Talk loop for line mode.                                               
*-                                                                              
LTKLOOP  LA    R15,UNET                                                         
         ACALL READDATA            Get input data                               
         IF    NZ,BEGIN            No data or end of file...                    
         IF    (@R1,NE,'NO DATA'),LTKEXIT   End of file, etc.                   
         IF    NTKFNOWAIT,'LA R15,1; B LTKEXIT'  Return if no wait              
         CLEAR R1,R0               No data                                      
         END                                                                    
*-                                                                              
*-       Save the data we received from the network in the                      
*-         working Active file (if one was specified).                          
*-                                                                              
         IF    NTKFACT,BEGIN       Save text in working Active...               
         LA    R15,NTKPUTCB                                                     
         VCALL PUTBYTES            Save output text in Active file              
         END                                                                    
*-                                                                              
*-       Send exactly what we read from the network to the                      
*-         terminal.  The only thing special we need to do is look              
*-         for their end of line character(s) and send a CR-LF to               
*-         the terminal.                                                        
*-                                                                              
         MVC   NTKTRM,CPTRM        Save terminal options                        
*                                                                               
         IF    (R0,POS),BEGIN      We have some data to write...                
*-                                                                              
*-       Outdata=CRLF                                                           
*-                                                                              
         IF    UNETOUTFCRLF,BEGIN  Outdata mode is CRLF...                      
         LR    R4,R1               Start of output data ptr                     
         LR    R3,R0               Data length                                  
*                                                                               
         WHILE (R3,POS),BEGIN      Write the data...                            
         LR    R1,R4                                                            
         WHILE ((R3,POS),AND,(@R4,NE,X'0D')),'DECR R3; LA R4,@R4+1'             
         LR    R0,R4                                                            
         SR    R0,R1               Length of text before CR                     
*                                                                               
         VCALL TOEBC7              Convert ASCII-7 to EBCDIC                    
*                                                                               
         IF    (R3,NZ),BEGIN       Ended with CR...                             
         TSEG  (R1),(R0)           Write what we have                           
         TSEG  X'15'               NL                                           
         LA    R4,@R4+1                                                         
         DECR  R3                                                               
*                                                                               
         IF    ((R3,POS),AND,(@R4,EQ,X'0A')),'LA R4,@R4+1; DECR R3'             
         END                                                                    
*                                                                               
         ELSE  'TSEG (R1),(R0)'    Write final piece of text                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Outdata=LF                                                             
*-                                                                              
         ELSE  BEGIN               Outdata mode is LF...                        
         LR    R4,R1               Start of output data ptr                     
         LR    R3,R0               Data length                                  
*                                                                               
         WHILE (R3,POS),BEGIN      Write the data...                            
         LR    R1,R4                                                            
         WHILE ((R3,POS),AND,(@R4,NE,X'0A')),'LA R4,@R4+1; DECR R3'             
         LR    R0,R4                                                            
         SR    R0,R1               Length of text before LF                     
*                                                                               
         VCALL TOEBC7              Convert ASCII-7 to EBCDIC                    
*                                                                               
         IF    (R3,NZ),BEGIN       Ended with LF...                             
         TSEG  (R1),(R0)           Write what we have                           
         TSEG  X'15'               NL                                           
         LA    R4,@R4+1                                                         
         DECR  R3                                                               
         END                                                                    
*                                                                               
         ELSE  'TSEG (R1),(R0)'    Write final piece of text                    
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Write whatever we got from the network to the terminal.                
*-                                                                              
         TMARK                                                                  
         TWRITE                                                                 
*                                                                               
         MVC   CPTRM,NTKTRM        Restore terminal I/O options                 
         B     LTKLOOP             Loop back                                    
*                                                                               
LTKEXIT  PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATVIEW -- Routine to do combined terminal and network I/O                  
*    in full screen mode.  This is primarily for VTAM 3270 style                
*    terminals (for TELNET support).                                            
*                                                                               
*    On entry:                                                                  
*      R0  - working active file number (0=none)                                
*      R1  - option string:                                                     
*              ....    - Reserved                                               
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0  - OK                                                                  
*      nz - some sort of error                                                  
*      R1,R0 - error msg loc,len                                                
*                                                                               
NVWWA    RECORD BEGIN                                                           
NVWFLAG  FLAG                                                                   
         FLAG  NVWFATTN            - Read ended with ATTN                       
         FLAG  NVWFNOWAIT          - No wait mode                               
         FLAG  NVWFPRESERVE        - Preserve input text                        
         FLAG  NVWFSECURE          - Secure input mode                          
*                                                                               
NVWOLDA  DS    F                   Original active file number                  
*                                                                               
NVWSAVE  DS    3A                  Register save area                           
NVWPTRS  DS    2A                  Saved input text ptrs                        
*                                                                               
NVWWORKL DS    CL(&LINESZ)         Working line text                            
*                                                                               
NVWTRM   DS    CL(L'CPTRM)         Saved terminal options                       
*                                                                               
NVWPUTCB PUTCB PFX=NVW             PUTBYTES options                             
         END                                                                    
*-                                                                              
NPATVIEW XPROC (R2,LSR),NVWWA                                                   
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATTALK,'Bad UNET ptr'                         
*                                                                               
         LA    R5,NVWWA                                                         
         WITH  (NVWWA,R5)                                                       
*                                                                               
         LR    R2,R0               Save actno                                   
         LR    R3,R1               Option string ptr                            
         ZOT   NVWWA                                                            
*                                                                               
         IF    UNETFNOWAIT,'SET NVWFNOWAIT'  No wait mode                       
*                                                                               
         SEGDEF UNETOUTSG                                                       
*-                                                                              
*-       Switch in to the working Active file.                                  
*-                                                                              
         LTR   R15,R2              Actno                                        
         VCALL ACTPICK             Pick it                                      
         ST    R15,NVWOLDA         Save original Active file no                 
*-                                                                              
*-       Get any old prompt from the working Active file.                       
*-         If the line ends with our "[]" characters it is a prompt.            
*-                                                                              
         L     R15,CPALLNO         Last lineno                                  
         SETMSG NVWWORKL            Prompt line area                            
         VCALL GETLINE             Get last line                                
*                                                                               
         IF    (R0,GE,2),BEGIN     Check for our ending chars...                
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         SH    R2,=H'2'                                                         
         IF    (@R2,EQ,'[]'),BEGIN  It's our prompt...                          
         SH    R0,=H'2'            Deduct length of "[]" chars                  
         LR    R2,R0               Save true line length                        
*                                                                               
         L     R0,CPALLNO          First line to delete                         
         LR    R1,R0               Last line to delete                          
         VCALL DELRANGE            Delete the line                              
*                                                                               
         SETMSG NVWWORKL,(R2)       Prompt text                                 
         VCALL TOASCII             Convert EBCDIC to ASCII                      
         LA    R15,NVWPUTCB                                                     
         VCALL PUTBYTES            Save prompt text in Active file              
         END                                                                    
         END                                                                    
*-                                                                              
*-       Send initial Telnet IAC sequences.                                     
*-                                                                              
         IF    ^UNETFIACSENT,BEGIN  Initial IACs not yet sent...                
         SET   UNETFIACSENT        Only go through this the 1st time            
         IF    ^UNETFIAC,EXIT      Don't send telnet IACs, scram                
*                                                                               
         SET   UNETFNOXL                                                        
         SEG   LA:=AL1($IAC,$DO,$SGA,$IAC,$WILL,$SGA),6                         
         SEG   LA:=AL1($IAC,$DO,$ECHO),3                                        
*                                                                               
         SEG   LA:=AL1($IAC,$WILL,$TTYPE),3  We will answer ttype               
*                                                                               
         SEGWR                                                                  
         CLEAR UNETFNOXL                                                        
         END                                                                    
*                                                                               
         LCALL VTAMVIEW            Do it                                        
*                                                                               
         STM   R15,R1,NVWSAVE      Save return regs                             
*-                                                                              
*-       If we have a working Active file then save the last                    
*-         partial line (a prompt probably) in the Active file.                 
*-                                                                              
         SETMSG X'5B5D'             Ascii "[]"                                  
         LA    R15,NVWPUTCB                                                     
         VCALL PUTBYTES            Add prompt suffix                            
*                                                                               
         LH    R0,=H'-1'                                                        
         LA    R15,NVWPUTCB                                                     
         VCALL PUTBYTES            Flush buffer                                 
*                                                                               
         L     R15,NVWOLDA                                                      
         VCALL ACTPICK             Restore current Active file                  
*                                                                               
         IF    ^NVWFNOWAIT,'CLEAR UNETFNOWAIT'  Restore path wait               
*                                                                               
         LM    R15,R1,NVWSAVE      Restore regs                                 
*                                                                               
NVWEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VTAMVIEW -- Local routine to do full screen telnet for VTAM                  
*    terminals.                                                                 
*                                                                               
*    Anything typed at the terminal is send across the                          
*    network path and anything sent across the network path is                  
*    typed at the terminal.                                                     
*                                                                               
*    On exit, R15 (and cc):                                                     
*      1 - done talking;  R1,R0 = error msg loc, len                            
*                                                                               
VTAMVIEW PROC  (R2,LSR)                                                         
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Do first time initialization of screen information.                    
*-                                                                              
         IF    (UNETVHEI,Z),BEGIN  Initialize display info...                   
         LTH   R15,CPSHEI          Get session default height                   
         IF    Z,'LA R15,24'       Universal default                            
         FLOOR R15,10              (Be reasonable)                              
         STH   R15,UNETVHEI        Save number of lines                         
         SH    R15,=H'4'           Deduct number of control lines               
         STH   R15,UNETNTXT        Save numer of text lines                     
*                                                                               
         LTH   R15,CPSWID          Get session default width                    
         IF    Z,'LA R15,80'       Universal default                            
         FLOOR R15,50              (Be reasonable)                              
         STH   R15,UNETVWID        Save screen width                            
*                                                                               
         MVC   UNETFIXL,=F'-1000'  No fixed top lineno                          
         END                                                                    
*-                                                                              
*-       Write out initial formatted screen.                                    
*-                                                                              
         SET   CPFDISP                                                          
         LCALL VDFORMAT            Format full screen display                   
*-                                                                              
*-       Full screen talk loop.                                                 
*-                                                                              
         SET   UNETFNOWAIT         Force no wait on READDATA                    
*                                                                               
VVWLOOP  LA    R15,UNET                                                         
         ACALL READDATA            Get input data                               
         IF    NZ,BEGIN            No data or end of file...                    
         IF    (@R1,NE,'NO DATA'),VVWEXIT   End of file, etc.                   
         IF    NVWFNOWAIT,'LA R15,1; B VVWEXIT'  Return if no wait              
         CLEAR R1,R0               No data                                      
         END                                                                    
*-                                                                              
*-       Save the data we received from the network in the                      
*-         working Active file.                                                 
*-                                                                              
         LA    R15,NVWPUTCB                                                     
         VCALL PUTBYTES            Save output text in Active file              
*-                                                                              
*-       Now update the screen text.                                            
*-                                                                              
         LCALL VDWRITE             Write any text                               
*                                                                               
         LCALL VDSTATUS            Update status line                           
*                                                                               
         IF    (((UNETBOTC,NZ),AND,^UNETFPFHIGH),                      *        
               OR,((UNETBOTC,Z),AND,UNETFPFHIGH)),                     *        
               'LCALL VDPFKS'      Re-display PF key line                       
*-                                                                              
*-       Do an interruptable terminal read.                                     
*-                                                                              
         LCALL VDREAD              Read                                         
         BM    VVWEXIT             Logging off                                  
         STM   R0,R1,NVWPTRS       Save input text ptrs                         
*                                                                               
         IF    (R15,Z),BEGIN       Normal completion...                         
         IF    ('LT R2,UNETCURL',^NEG),BEGIN  Cursor on text line...            
         ST    R2,UNETFIXL         Set new top line-number                      
         B     VVWLOOP                                                          
         END                                                                    
*-                                                                              
*-       Save last line-number when input is entered; then we                   
*-         will automatically pause if this line will be pushed                 
*-         off the top of the screen.                                           
*-                                                                              
         CLEAR NVWFSECURE          Reset secure input mode                      
         MVC   UNETINPL,CPALLNO    Save last lineno                             
         MVC   UNETFIXL,=F'-1000'  Reset scroll lock                            
         END                                                                    
*                                                                               
         IF    (R15,POS),BEGIN     Attn, PF key...                              
         IF    (R15,EQ,101),VVWLOOP  Loop back                                  
         SETMSG 'ATTN'              Assume ATTN                                 
*                                                                               
         IF    (R15,EQ,161),BEGIN                                               
         ACALL VDFORMAT            We must re-do the formatting                 
         ACALL VDCLEAR             Clear screen (more or less)                  
         B     VVWLOOP                                                          
         END                                                                    
*-                                                                              
*-       Process built-in PF keys.                                              
*-                                                                              
         IF    (R15,GE,200),BEGIN  PF key...                                    
         SH    R15,=H'200'         Get value between 0-x                        
         IF    POS,BEGIN           Check for built-in PFs...                    
         IF    (R15,EQ,UNETPRPF),BEGIN  Previous page...                        
         ACALL VDPREV              Go back to previous page                     
         SET   NVWFPRESERVE        Preserve any input text                      
         B     VVWLOOP                                                          
         END                                                                    
*                                                                               
         IF    (R15,EQ,UNETNXPF),BEGIN  Next page...                            
         ACALL VDNEXT              Go to next page                              
         SET   NVWFPRESERVE        Preserve any input text                      
         B     VVWLOOP                                                          
         END                                                                    
*                                                                               
         IF    (R15,EQ,UNETMKPF),BEGIN  Mark line...                            
         ACALL VDMARK              Go mark the line                             
         B     VVWLOOP                                                          
         END                                                                    
*                                                                               
         IF    (R15,EQ,UNETSNPF),BEGIN  Send w/o CR...                          
         LM    R0,R1,NVWPTRS       Get input text ptrs                          
         SET   UNETFNOXL           We want to send ASCII data                   
         VCALL TOASCII             Convert text to ASCII                        
         SEGWR (R1),(R0)           Data                                         
         CLEAR UNETFNOXL           Reset                                        
         B     VVWLOOP                                                          
         END                                                                    
*                                                                               
         IF    (R15,EQ,UNETXXPF),BEGIN  Secure input mode...                    
         FLIP  NVWFSECURE          Secure mode toggle                           
         B     VVWLOOP                                                          
         END                                                                    
*                                                                               
         CEIL  R15,31              Not too high                                 
         SLL   R15,2               Times 4                                      
         SETMSG VVWPF(R15),4        PF key name                                 
         VCALL RTRIM                                                            
         END                                                                    
         END                                                                    
*                                                                               
         IF    (UNETTOPL,NZ),'MVC UNETFIXL,UNETTOPL'  Fix top line              
         MVC   UNETINPL,CPALLNO    Reset scroll lock lineno                     
         B     VVWEXIT             Attn or PF key means exit                    
         END                                                                    
*-                                                                              
*-       Send any data we received.                                             
*-                                                                              
         SET   UNETFNOXL           We want to send ASCII data                   
         VCALL TOASCII             Convert text to ASCII                        
         SEG   (R1),(R0)           Data                                         
         SETMSG X'0D0A'             Assume "outdata=crlf"                       
         IF    UNETINFLF,'SETMSG X"0A"'  Just LF if "outdata=lf"                
         SEG   (R1),(R0)           CR                                           
         SEGWR                                                                  
         CLEAR UNETFNOXL           Reset                                        
         B     VVWLOOP                                                          
*                                                                               
VVWEXIT  CLEAR CPFDISP             Reset display mode                           
         PEND                                                                   
*                                                                               
VVWPF    DC    C'PF0 PF1 PF2 PF3 PF4 PF5 PF6 PF7 '                              
         DC    C'PF8 PF9 PF10PF11PF12PF13PF14PF15'                              
         DC    C'PF16PF17PF18PF19PF20PF21PF22PF23'                              
         DC    C'PF24PF25PF26PF27PF28PF29PF30PF31'                              
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDFORMAT -- Local routine to format the full screen telnet                   
*    display.  This routine sets the field attributes (protected                
*    or unprotected) and the default renditions for each field.                 
*                                                                               
*    It should be called when first switching in to display mode.               
*                                                                               
VDFMWA   RECORD BEGIN                                                           
VDFMSG   SEGCB                                                                  
VDFMLINE DS    CL(&LINESZ)         Working line area                            
         END                                                                    
*-                                                                              
VDFORMAT PROC  VDFMWA                                                           
         WITH  (UNET,R6),(NVWWA,R5)                                             
         TSEG  $CS                 Clear screen                                 
*-                                                                              
*-       Set up status line.                                                    
*-                                                                              
         LH    R0,UNETNTXT         Number of text lines                         
         AH    R0,=H'1'            Plus one                                     
         TCURS (R0),2              Position to status line                      
         TREND STAT                Use status line rendition                    
         TSEG  $FPROT                                                           
*-                                                                              
*-       Set up input line.                                                     
*-                                                                              
         LH    R0,UNETNTXT         Number of text lines                         
         AH    R0,=H'2'            Plus two                                     
         TCURS (R0),2              Position to input row                        
         TREND CMD                 Input line rendition                         
         TSEG  $FPROT                                                           
*-                                                                              
*-       Set up message line.                                                   
*-                                                                              
         LH    R0,UNETNTXT         Number of text lines                         
         AH    R0,=H'3'            Plus two                                     
         TCURS (R0),2              Position to start                            
         TREND MSG                 Message line rendition                       
         TSEG  $FPROT                                                           
*-                                                                              
*-       Set up PFK line.                                                       
*-                                                                              
         MVC   UNETPFKR,UNETVHEI   Set PFK row                                  
         CLEAR UNETPFKC            Initialize PFK cols array                    
*                                                                               
         TCURS LH:UNETPFKR,2       Position to PFK row                          
         TREND NORM                Default rendition                            
         TSEG  $FPROT              Define field                                 
*                                                                               
         LCALL VDPFKS              Display PFK line                             
*-                                                                              
*-       Set up output text lines.                                              
*-                                                                              
         TCURS 1,1                                                              
         TREND NORM                Normal line rendition                        
         TSEG  $FPROT              Protected                                    
*-                                                                              
*-       Now add fixed data to formatted screen.                                
*-                                                                              
         CLEAR UNETBYCT,UNETLLNO   Reset optimizing info                        
*                                                                               
         LCALL VDMSG               Display message line                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDPFKS -- Local routine to write the PFK line and save away the              
*    starting column of each PFK's text (so the light pen logic can             
*    determine which PF key was selected).                                      
*                                                                               
VDPFWA   RECORD BEGIN                                                           
VDPFSG   SEGCB                                                                  
VDPFVAR  DS    CL64                Working variable for eval                    
VDPFEVAL DS    CL(&LINESZ)         Working eval result area                     
         END                                                                    
*-                                                                              
VDPFKS   PROC  VDPFWA                                                           
         WITH  (UNET,R6),(NVWWA,R5)                                             
         CLEAR UNETFPFHIGH         Clear highlighting flag                      
         IF    (UNETBOTC,NZ),'SET UNETFPFHIGH'  We will highlight               
*                                                                               
         TREND PF                  PFK line rendition                           
*                                                                               
         LA    R2,2                Start at column 2                            
         LA    R3,UNETPFKC         Put first PF column here                     
         LA    R4,1                Start at PF1                                 
         WHILE (R4,LE,9),BEGIN     Go through PFKs...                           
         LR    R15,R4              PFK number for BTD below                     
         XPUSH R2,R3                                                            
         LA    R2,VDPFEVAL         Put result here                              
         LA    R3,L'VDPFEVAL                                                    
         MVC   VDPFVAR(17),=CL17'X.NET_VIEW_PF[xx]'                             
         BTD   VDPFVAR+14,2,(R15)  Plug array number in                         
         SETMSG VDPFVAR,17          X.NET_VIEW_PF[R2]                           
         VCALL EVALSTR             Get string value, if defined                 
         LR    R1,R2                                                            
         LR    R0,R3                                                            
         XPOP  R2,R3                                                            
*                                                                               
         IF    (R15,Z),BEGIN       Defined...                                   
         XPUSH R0,R1                                                            
         TCURS LH:UNETPFKR,(R2)    Position cursor                              
         XPOP  R0,R1                                                            
*                                                                               
         STH   R2,@R3              Save starting col for this PF                
         AR    R2,R0               Next column position                         
         LA    R2,@R2+1            Allow a blank                                
*                                                                               
         IF    (R4,EQ,UNETNXPF),BEGIN  PF_NEXT is special...                    
         IF    UNETFPFHIGH,'TREND PFHI'  We should highlight it                 
         TSEG  (R1),(R0)           "pf_next" key text                           
         IF    UNETFPFHIGH,'TREND PF'                                           
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         TSEG  (R1),(R0)           Write the PF key text                        
         END                                                                    
         END                                                                    
*                                                                               
         LA    R3,@R3+2            Next PFK column entry                        
         LA    R4,@R4+1            Next PFK number                              
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDWRITE -- Local routine to write any new text lines to the                  
*    text area of the screen.  If necessary, all the text lines                 
*    will be re-written to simulate "scrolling up".                             
*                                                                               
*    The text is stored in the Active file (see PUTLINES routine).              
*                                                                               
VDWRWA   RECORD BEGIN                                                           
VDWRSTLN DS    F                   First lineno to display                      
VDWRLINE DS    CL(&LINESZ)         Working line area                            
         END                                                                    
*-                                                                              
VDWRITE  PROC  VDWRWA                                                           
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Flush the PUTBYTES buffer so we get the last partial line              
*-         in the Active file.                                                  
*-                                                                              
         LH    R0,=H'-1'                                                        
         LA    R15,NVWPUTCB                                                     
         VCALL PUTBYTES            Flush buffer                                 
*                                                                               
         LT    R5,UNETFIXL         Get fixed top line-number                    
         IF    NEG,BEGIN           Nothing explicit...                          
*-                                                                              
*-       Start at the end of the Active file and back up                        
*-         the number of text lines on the screen.                              
*-                                                                              
         L     R0,CVMAXLNO         Highest possible lineno                      
         CLEAR R1                                                               
         VCALL GTLASTLN            Get last lineno                              
         IF    Z,BEGIN             We have something...                         
         LH    R3,UNETNTXT         Number of lines on the screen                
         DECR  R3                  Deduct last line                             
         WHILE (R3,POS),BEGIN      Back up...                                   
         VCALL GTPREVLN            Get previous lineno                          
         DECR  R3                                                               
         END                                                                    
         END                                                                    
*                                                                               
         IF    (R15,NZ),'CLEAR R0'  Start at first possible lineno              
         LR    R5,R0               Starting line-number                         
*                                                                               
         IF    (R5,LT,UNETTOPL),'L R5,UNETTOPL'  Stay here                      
*-                                                                              
*-       This is the code which automatically stops the scrolling               
*-         if a response would write too much information.                      
*-                                                                              
*!!NIZ!! IF    (R5,GE,UNETINPL),BEGIN  Attempt to scroll too far...             
*!!NIZ!! L     R5,UNETINPL         Make this the new top lineno                 
*!!NIZ!! ST    R5,UNETFIXL         Set it                                       
*!!NIZ!! END                                                                    
         END                                                                    
*-                                                                              
*-       Screen I/O optimization.  Check to see if the top line on              
*-         the screen is the same as the last time.  If it is, then             
*-         we need only re-write the new lines.  Further, if the                
*-         Active file byte count is unchanged then we don't need               
*-         to rewrite anything.                                                 
*-                                                                              
         CLEAR VDWRSTLN            Assume we must write everything              
*                                                                               
         IF    (R5,EQ,UNETTOPL),BEGIN  Same top line...                         
         IF    ((UNETBYCT,EQ,CPABYCT),                                 *        
               AND,(UNETLLNO,EQ,CPALLNO)),VDWREXIT  Nothing changed             
         MVC   VDWRSTLN,UNETLLNO   Rewr old last line and beyond                
         END                                                                    
*-                                                                              
*-       Now write the lines.                                                   
*-                                                                              
         ST    R5,UNETTOPL         Save new top lineno                          
         MVC   UNETBYCT,CPABYCT    Save new byte count                          
         MVC   UNETLLNO,CPALLNO    Save new last lineno                         
*                                                                               
         LA    R3,1                Start at row 1                               
         LH    R4,UNETNTXT         Number of text lines                         
         WHILE (R3,LE,R4),BEGIN    Display the text lines...                    
         LR    R15,R5              Lineno                                       
         LA    R1,VDWRLINE                                                      
         VCALL GETLINE             Get the line text                            
         IF    NEG,BEGIN           No next line...                              
         TCURS (R3),1              Position to this row                         
         TSEG  $LCSI                                                            
         LA    R15,@R4+1                                                        
         SR    R15,R3              Number of unwritten rows                     
         MH    R15,UNETVWID        Times row width                              
         TNUM  (R15)               Blank count                                  
         TSEG  $BCT                Repeat this many blanks                      
         B     VDWRFIN             We're done writing lines                     
         END                                                                    
*                                                                               
         IF    (CPLCNO,GE,VDWRSTLN),BEGIN  Write the line...                    
         IF    (CPLCNO,LT,UNETMRKL),'TREND DIM'  Before mark                    
         ELSE  'TREND NORM'        After mark                                   
*                                                                               
         TCURS (R3),1              Position to approp row                       
         L     R2,CVDOTTBL                                                      
         TR    VDWRLINE,@R2        Convert binary chars to dots                 
*-                                                                              
*-       When writing the line text, write any trailing blanks                  
*-         out with the "repeat blanks" model terminal sequence                 
*-         for effeciency (since this gets converted to a 3270                  
*-         repeat function).                                                    
*-                                                                              
         SETMSG VDWRLINE,LH:UNETVWID  Display text                              
         CLEAR R2                  Number of trailing blanks                    
*                                                                               
         LR    R15,R1                                                           
         AR    R15,R0                                                           
         DECR  R15                 Last position in line                        
         WHILE ((R0,POS),AND,(@R15,EQ,' ')),BEGIN                               
         LA    R2,@R2+1            Count the trailing blank                     
         DECR  R0                  Reduce line length                           
         DECR  R15                 Back up ptr                                  
         END                                                                    
*                                                                               
         TSEG  (R1),(R0)           Write line text                              
         IF    (R2,POS),BEGIN      Zap trailing blanks...                       
         TSEG  $LCSI                                                            
         TNUM  (R2)                Blank count                                  
         TSEG  $BCT                Repeat this many blanks                      
         END                                                                    
         END                                                                    
*                                                                               
         L     R5,CPLCNO           Current lineno                               
         A     R5,CVONE            Kick for next line                           
*                                                                               
         LA    R3,@R3+1            Next row                                     
         END                                                                    
*-                                                                              
*-       Count the number of lines that follow the last line.                   
*-                                                                              
VDWRFIN  CLEAR R3                  Initialize counter                           
         LR    R0,R5               Next possible lineno                         
         CLEAR R1                  Current active file no                       
         WHILE ('VCALL GTFRSTLN',Z),BEGIN  Count the line...                    
         INCR  R0                  Next lineno                                  
         LA    R3,@R3+1            Count it                                     
         END                                                                    
*                                                                               
         ST    R3,UNETBOTC         Save count of lines that follow              
         IF    (R3,Z),'MVC UNETFIXL,=F"-1000"'  Allow scrolling                 
*                                                                               
VDWREXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDCLEAR -- Local routine to clear the screen.                                
*                                                                               
VDCLEAR  PROC                                                                   
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Only leave the last 2 lines on the screen.                             
*-                                                                              
         L     R0,CVMAXLNO         Highest possible lineno                      
         CLEAR R1                                                               
         VCALL GTLASTLN            Get last lineno                              
         IF    Z,BEGIN             We have something...                         
         LA    R3,1                Back up 1 line                               
         WHILE (R3,POS),BEGIN      Back up...                                   
         VCALL GTPREVLN            Get previous lineno                          
         DECR  R3                                                               
         END                                                                    
*                                                                               
         ST    R0,UNETFIXL         Make this the new top lineno                 
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDPREV -- Local routine to scroll to the previous screen.                    
*                                                                               
VDPREV   PROC                                                                   
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Back up NLINES-2 lines.                                                
*-                                                                              
         L     R0,UNETTOPL         Current top lineno                           
         CLEAR R1                                                               
         VCALL GTLASTLN            Get last lineno                              
         IF    Z,BEGIN             We have something...                         
         LH    R3,UNETNTXT         Number of text lines                         
         SH    R3,=AL2(2)          Keep two lines from old screen               
         WHILE (R3,POS),BEGIN      Back up...                                   
         VCALL GTPREVLN            Get previous lineno                          
         DECR  R3                                                               
         END                                                                    
         END                                                                    
*                                                                               
         ST    R0,UNETFIXL         Make this the new top lineno                 
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDNEXT -- Local routine to scroll to the next screen.                        
*                                                                               
VDNEXT   PROC                                                                   
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Go forward NLINES-2 lines.                                             
*-                                                                              
         L     R0,UNETTOPL         Current top lineno                           
         CLEAR R1                                                               
         VCALL GTLASTLN            Get last lineno                              
         IF    Z,BEGIN             We have something...                         
         LH    R3,UNETNTXT         Number of text lines                         
         SH    R3,=AL2(2)          Keep two lines from old screen               
         WHILE (R3,POS),BEGIN      Back up...                                   
         VCALL GTNEXTLN            Get next lineno                              
         DECR  R3                                                               
         END                                                                    
         END                                                                    
*                                                                               
         ST    R0,UNETFIXL         Make this the new top lineno                 
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDMARK -- Local routine to mark a starting line.                             
*                                                                               
VDMARK   PROC                                                                   
         WITH  (UNET,R6),(NVWWA,R5)                                             
*                                                                               
         LT    R15,UNETCURL        Cursor line-number                           
         IF    NEG,'L R15,CPALLNO'  Or last line                                
         ST    R15,UNETMRKL        Save marked line-number                      
*                                                                               
         CLEAR UNETTOPL,UNETBYCT,UNETLLNO  Force screen update                  
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDSTATUS -- Local routine to update status line.                             
*                                                                               
VDSTWA   RECORD BEGIN                                                           
VDSTSG   SEGCB                                                                  
VDSTLINE DS    CL(&LINESZ)         Working line area                            
         END                                                                    
*-                                                                              
VDSTATUS PROC  VDSTWA                                                           
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Format status line.                                                    
*-                                                                              
         SEGINIT VDSTLINE,,VDSTSG                                               
         IF    (UNETSTATE,LE,UNETSFOPENING),BEGIN                               
         SEG   'Opening connection'                                             
         END                                                                    
*                                                                               
         ELSEIF (UNETSTATE,LE,UNETSFDATA),BEGIN                                 
         SEG   'Connected'                                                      
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         SEG   'Closing connection'                                             
         END                                                                    
*                                                                               
         IF    ((UNETRNAME,NZ),AND,(UNETRNAME,NE,CVBLANKS)),BEGIN               
         SEG   ' to '                                                           
         SEGT  UNETRNAME                                                        
         END                                                                    
*-                                                                              
*-       Check for messages waiting.                                            
*-                                                                              
         IF    (CPSNMSG,NZ),BEGIN  We have messages waiting...                  
         SEG   '    *** '                                                       
         SEGDC LH:CPSNMSG                                                       
         SEG   ' msgs waiting ***'                                              
         END                                                                    
*-                                                                              
*-       Report how many lines follow.                                          
*-                                                                              
         IF    (UNETBOTC,NZ),BEGIN  We are not at the end...                    
         SEGCOL 40                                                              
         SEG   '*** '                                                           
         SEGDC L:UNETBOTC                                                       
         IF    (UNETBOTC,GE,UNETLMX#),'SEG "+"'                                 
         SEG   ' lines follow ***'                                              
         END                                                                    
*                                                                               
         LH    R0,UNETVWID         Screen width                                 
         SH    R0,=H'11'           11 spaces from the right side                
         SEGCOL (R0)                                                            
         SEGDC L:CPALNCT,4                                                      
         SEG   ' lines'                                                         
*-                                                                              
*-       Now write the status line.                                             
*-                                                                              
         TREND STAT                Use status line rendition                    
*                                                                               
         LH    R0,UNETNTXT         Number of text lines                         
         AH    R0,=H'1'            Plus one                                     
         TCURS (R0),2              Position to status line                      
         TSEG  VDSTLINE,L:VDSTSGLENF                                            
*                                                                               
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Safety)                                     
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDMSG -- Local routine to update message line.                               
*                                                                               
VDMSGWA  RECORD BEGIN                                                           
VDMSGTXT DS    CL(&LINESZ)         Working line area                            
         END                                                                    
*-                                                                              
VDMSG    PROC  VDMSGWA                                                          
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Write the message line.                                                
*-                                                                              
         LH    R0,UNETNTXT         Number of text lines                         
         AH    R0,=H'3'            Plus one                                     
         TCURS (R0),2              Position to status line                      
*                                                                               
         TREND MSG                 Message line rendition                       
*                                                                               
         LH    R4,UNETVWID                                                      
         DECR  R4                  Maximum allowable length                     
*                                                                               
         LA    R2,VDMSGTXT         Put result here                              
         LA    R3,L'VDMSGTXT                                                    
         SETMSG 'X.NET_VIEW_MSG'                                                
         VCALL EVALSTR             Get string value, if defined                 
         CEIL  R3,R4               Not too long                                 
         TSEG  (R2),(R3)           Write message out                            
         SR    R4,R3               Number of trailing blanks                    
         IF    POS,BEGIN           Write trailing blanks sequence...            
         TSEG  $LCSI                                                            
         TNUM  (R4)                                                             
         TSEG  $BCT                Multiple blank sequence                      
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDREAD -- Local routine to get input data from the terminal.                 
*    This routine must process the information returned from                    
*    a display mode read (see the model terminal document for                   
*    information on the format of what is returned).  This can                  
*    be pretty simple since we are only expecting one unprotected               
*    field to be returned.                                                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*      neg - logging off                                                        
*        0 - OK                                                                 
*              R1,R0 - input text loc, len                                      
*        1 - ATTN or PF key pressed                                             
*              R1,R0 - msg text (e.g. "PF1")                                    
*      101 - Read interrupted (new network data probably)                       
*                                                                               
VDREAD   PROC  (R2,LSR)                                                         
         WITH  (UNET,R6),(NVWWA,R5)                                             
*-                                                                              
*-       Position cursor to the start of the input area.                        
*-                                                                              
*-       In order to get the VTAM model terminal code to actually               
*-       move the cursor, we have to define the unprotected field               
*-       again.                                                                 
*-                                                                              
         IF    ^NVWFPRESERVE,BEGIN  Position cursor...                          
*-                                                                              
*-       Set up input line.                                                     
*-                                                                              
         LH    R2,UNETNTXT                                                      
         AH    R2,=H'2'                                                         
         TCURS (R2),2              Position to input row                        
         TREND CMD                 Input line rendition                         
         TSEG  $LCSI                                                            
         LH    R0,UNETVWID         Line width                                   
         DECR  R0                  Remember, we start in col 2                  
         TNUM  (R0)                                                             
         TSEG  'X'                 Dup zeros                                    
*                                                                               
         TCURS (R2),2                                                           
         TSEG  $FPROT                                                           
*                                                                               
         IF    NVWFSECURE,BEGIN    Secure input mode...                         
         TSEG  'Secure input: '                                                 
         TSEG  $SECURE             Set "blanked" rendition                      
         END                                                                    
*                                                                               
         ELSE  'TSEG "Input: "'                                                 
*                                                                               
         TSEG  $FUNPROT                                                         
         END                                                                    
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
         CLEAR R15                 Indicate output buffer                       
         SETMSG L:CPSEGLOC,L:CPSEGLENF                                          
         VCALL VIEWTRC             Do any tracing                               
*-                                                                              
*-       Do the terminal write (we want to do this separately from              
*-         the read so that it doesn't get interrupted by a reverse             
*-         break).                                                              
*-                                                                              
         IF    NVWFPRESERVE,'SET CPFNOCURS'  Don't move cursor                  
*                                                                               
         IF    (CPSEGLENF,NZ),'TWRITE; CLEAR CPREND'                            
*-                                                                              
*-       Do the terminal read; allow new data to interrupt the                  
*-         read if we don't already have lots of new data.                      
*-                                                                              
         IF    (UNETBOTC,LT,UNETLMX#),BEGIN  Lots of new data...                
         SET   CPFTINT             Allow term I/O to be interrupted             
         SET   UNETFINT            Path can interrupt read                      
         END                                                                    
*                                                                               
         TREAD                                                                  
*                                                                               
         CLEAR CPFTINT             Reset                                        
         CLEAR UNETFINT                                                         
*                                                                               
         CLEAR NVWFPRESERVE,CPFNOCURS                                           
         IF    (R15,EQ,101),'SET NVWFPRESERVE'  Preserve input                  
*-                                                                              
*-       Process model terminal read buffer response.                           
*-                                                                              
         IF    (R15,Z),BEGIN       Normal response...                           
         LA    R15,1               Indicate input buffer                        
         VCALL VIEWTRC             Do any tracing                               
*                                                                               
         LCALL VDGET               Get first unprotected field                  
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VDGET -- Routine to pick out the next field in the read                      
*    buffer.  This routine processes the model terminal                         
*    sequences (which are imbedded in the read buffer).                         
*                                                                               
*    On entry:                                                                  
*      R1,R0 - read buffer loc, len                                             
*                                                                               
*    On exit:                                                                   
*      R15   - ending function code (0=Normal)                                  
*      R1,R0 - first field data loc, len                                        
*                                                                               
FIELDWA  RECORD BEGIN                                                           
FIELDFLG FLAG                                                                   
         FLAG  FIELDFST            - Start of field processed                   
*                                                                               
FIELDFNC DS    F                   Ending function code                         
FIELDCRS DS    D                   Ending cursor position                       
FIELDSTA DS    A                   Start of field                               
*                                                                               
FIELDCSF FLAG                                                                   
         FLAG  FIELDFL             - Local CSI sequence                         
*                                                                               
FIELDCS# EQU   10                  Max no. of parms                             
FIELDCSN DS    H                   Current no. of parms                         
FIELDCS  DS    (FIELDCS#)F         Parms                                        
FIELDC   EQU   FIELDCSF,*-FIELDCSF,C'X'                                         
         END                                                                    
*-                                                                              
VDGET    PROC  (R2,LSR),FIELDWA                                                 
         WITH  (UNET,R6)                                                        
*                                                                               
         CLEAR FIELDWA                                                          
*                                                                               
         LR    R5,R1               Data ptr                                     
         LR    R4,R0               Remaining length                             
*                                                                               
GETFNLP  ST    R5,FIELDSTA         Start of field                               
GETFLP   IF    (R4,NP),GETFDONE    All done                                     
         LR    R15,R4                                                           
         CEIL  R15,256                                                          
         CLEAR R2                                                               
         LA    R1,@R5(R15)                                                      
         DEX   R15,'TRT @R5(0),ESCTBL'  Look for ESC (start of CSI)             
         SR    R1,R5                                                            
         LA    R5,@R1(R5)          Kick...                                      
         SR    R4,R1               ...ptrs                                      
*                                                                               
         IF    (R2,Z),GETFLP       No match, go back                            
         IF    (@R5,NE,$CSI),BEGIN  Not a CSI...                                
         LA    R5,@R5+1                                                         
         DECR  R4                                                               
         B     GETFLP              Go back                                      
         END                                                                    
*                                                                               
         IF    FIELDFST,GETFDONE   We have a field, scram                       
*-                                                                              
*-       Process control sequences.                                             
*-                                                                              
         CLEAR FIELDC                                                           
         LA    R5,@R5+2            Start of CSI                                 
         SH    R4,=H'2'                                                         
         IF    (POS,AND,(@R5,EQ,'<')),BEGIN  Local CSI seq...                   
         SET   FIELDFL             Remember that it's a local seq               
         LA    R5,@R5+1                                                         
         DECR  R4                                                               
         END                                                                    
*                                                                               
         LOOP  BEGIN                                                            
         DTB   (R5),(R4)           Pick up a numeric parameter                  
         LH    R2,FIELDCSN         Parameter number                             
         IF    (R2,LT,FIELDCS#),BEGIN                                           
         SLL   R2,2                                                             
         ST    R15,FIELDCS(R2)     Save parameter                               
         INCR  R15,FIELDCSN                                                     
         END                                                                    
*                                                                               
         LA    R5,@R1+1                                                         
         LR    R4,R0                                                            
         DECR  R4                                                               
         UNTIL (@R1,NE,';')                                                     
         END                                                                    
*                                                                               
         IF    FIELDFL,BEGIN       Local sequence...                            
         IF    (@R1,EQ,$RFC),BEGIN  Ending function code...                     
         MVC   FIELDFNC,FIELDCS    Save function code                           
         END                                                                    
*                                                                               
         ELSEIF (@R1,EQ,$RCP),BEGIN  Ending cursor position...                  
         MVC   FIELDCRS,FIELDCS    Save ending cursor position                  
         END                                                                    
*                                                                               
         ELSEIF (@R1,EQ,$RFP),BEGIN  Field cursor position...                   
         SET   FIELDFST            Start of a field                             
         END                                                                    
         END                                                                    
*                                                                               
         B     GETFNLP                                                          
*-                                                                              
*-       Set the line-number that the cursor is on.                             
*-                                                                              
GETFDONE MVC   UNETCURL,=F'-1000'  Assume cursor lineno will be -1              
*                                                                               
         L     R4,FIELDCRS         Row number cursor is on                      
         IF    ((R4,GE,1),AND,(R4,LE,UNETNTXT)),BEGIN  Text line...             
         LA    R3,2                                                             
         L     R0,UNETTOPL         Lineno of first line on screen               
         CLEAR R1                  (For GTNEXTLN: use cur active)               
         WHILE (R3,LE,R4),BEGIN    Count down rows...                           
         VCALL GTNEXTLN            Get next lineno                              
         LA    R3,@R3+1            Next row                                     
         END                                                                    
*                                                                               
         ST    R0,UNETCURL         Save cursor lineno                           
         END                                                                    
*-                                                                              
*-       Return the unprotected field text in R1,R0; and the                    
*-         ending function code in R15.                                         
*-                                                                              
         IF    ^FIELDFST,BEGIN     No field...                                  
         CLEAR R0,R1                                                            
         END                                                                    
*                                                                               
         ELSE  BEGIN               We have a field...                           
         L     R1,FIELDSTA         Start of field                               
         LR    R0,R5                                                            
         SR    R0,R1               Length of field                              
         END                                                                    
*                                                                               
         L     R15,FIELDFNC        Set rc with function code                    
         PEND                                                                   
*                                                                               
ESCTBL   DC    XL256'00'                                                        
         ORG   ESCTBL+X'27'                                                     
         DC    X'27'                                                            
         ORG                                                                    
         EJECT                                                                  
*-                                                                              
*-       Model terminal control sequences.                                      
*-                                                                              
$CSI     EQU   *,2,C'X'            Control sequence prefix                      
$LCSI    DC    X'27AD4C'           Local control sequence introducer            
$CS      DC    X'27AD8627ADF2D1'   Home & clear screen                          
$CSVTAM  DC    X'27AD86'           Home cursor (and that's all!)                
$CREM    DC    X'27ADD1'           Clear from cursor to end screen              
$BCT     DC    C'Z'                Blank count                                  
$FPROT   DC    X'27AD4CF1C6'       Protected field                              
$FUNPROT DC    X'27AD4CC6'         Unprotected field                            
$SECURE  DC    X'27ADF05EF894'     Blanked (secure) rendition                   
$FEND    DC    X'27AD4CC5'         End of field                                 
*                                                                               
$RFC     DC    C'V'                Report ending function code                  
$RCP     DC    C'C'                Report ending cursor position                
$RFP     DC    C'R'                Report cursor position                       
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATSEG -- Local routine to write the network path seg buffer                
*    as a Network packet.                                                       
*                                                                               
*    On entry:                                                                  
*      R15 - SEGCB ptr                                                          
*                                                                               
NPATSEG  PROC                                                                   
*                                                                               
         LR    R5,R15              SEGCB ptr                                    
         WITH  (SEGCB,R5)                                                       
         L     R6,SEGCBUSR         User field points to UNET                    
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NETERRC,'Bad UNET ptr'                          
*-                                                                              
*-       SEG.                                                                   
*-                                                                              
         IF    SEGCBSEG,BEGIN      SEG...                                       
         IF    UNETFCTRL,SEGEXIT   Don't do anything if control data            
         IF    (R0,NP),SEGEXIT     Nothing to seg, scram                        
*                                                                               
         IF    ^UNETFNOXL,BEGIN    Translate to ASCII...                        
         FAIL  (R0,GT,UNETBUF#),NETSEG,'Network interface error.'               
*                                                                               
         LR    R4,R0               Save text length                             
         MOVEL L:UNETBUFP,@R1,(R4)  Copy text                                   
*-                                                                              
*-       Translate to ASCII.                                                    
*-                                                                              
         SETMSG L:UNETBUFP,(R4)     Text                                        
         L     R2,CVASCTBL         EBCDIC to ASCII translate table              
         WHILE (R0,POS),BEGIN      Convert to ASCII...                          
         LR    R15,R0              Length                                       
         CEIL  R15,256             Not too much                                 
         DEX   R15,'TR @R1(0),@R2'    Translate a bit at a time                 
*                                                                               
         LA    R1,@R1+256                                                       
         SH    R0,=H'256'                                                       
         END                                                                    
*                                                                               
         SETMSG L:UNETBUFP,(R4)     Copy of translated text                     
         PRETURN (R0,R1)           Save new data ptrs                           
         END                                                                    
*                                                                               
         B     SEGEXIT                                                          
         END                                                                    
*-                                                                              
*-       SEGCR (write line separator characters).                               
*-                                                                              
         IF    SEGCBCR,BEGIN       SEGCR...                                     
         SET   UNETFNOXL                                                        
         SEGDEF SEGCB                                                           
         SEG   X'0D0A'             Line separator (CR,LF)                       
         SEGMARK                                                                
         CLEAR UNETFNOXL                                                        
         END                                                                    
*-                                                                              
*-       SEGWR (or overflow).                                                   
*-                                                                              
         IF    (SEGCBWR,OR,SEGCBOVF),BEGIN  SEGWR...                            
*-                                                                              
*-       Trace output line for server paths.                                    
*-                                                                              
         IF    ('LT R15,UNETSVIB',NZ),BEGIN  Server path...                     
         IF    UNETFCTRL,EXIT      Don't trace Amelia controls                  
         SETMSG (R1),(R0)                                                       
         LA    R2,=C'>>A'          Output ("A" = ASCII)                         
         VCALL SERVTRC             Trace output                                 
         END                                                                    
*                                                                               
         IF    (R0,NP),EXIT        Nothing to write, scram                      
*                                                                               
         IF    ^UNETFWRONLY,BEGIN  OK to check incoming...                      
         ACALL NPATCHK             Check for Amelia path activity               
         END                                                                    
*-                                                                              
*-       Don't ever write to a closed connection.                               
*-                                                                              
         IF    (UNETSTATE,EQ,UNETSFCLOSE),EXIT  Connection closed               
*-                                                                              
*- Check whether or not the path control block to the AMELIA                    
*- path has any buffers queued due to a prior full queue signal                 
*- from SUZAN. If this is the case, it can set up a problem                     
*- situation where the full queue emptied code in the PATH                      
*- module (PATHSNDQ) starts flushing all the previously delayed                 
*- buffers over to AMELIA. Because the PATH module is non-specific              
*- and doesn't know it's dealing with AMELIA, it can dump more                  
*- data for one connection than AMELIA can buffer, and AMELIA's                 
*- attempts to send a TCP_STOP control packet will be ignored                   
*- because PATHSNDQ doesn't check inbound data before sending as                
*- this routine does. AMELIA, its STOP having been ignored then                 
*- aborts the connection. This was first discovered on DEMS                     
*- FTP SAVEs to goddard.                                                        
*-                                                                              
*- What we'll do here is delay a few seconds if we see that a                   
*- send queue exists for the AMELIA path.                                       
*-                                                                              
*-  MPD - 8/24/2000                                                             
*-                                                                              
         L     R15,UNETPATP        Point to AMELIA path                         
         IF    (R15,NE,=F'-1'),BEGIN Do this if path not closing                
         USING UPATH,R15                                                        
         IF    (UPATWRQH,NZ),BEGIN Full queue - don't make it worse             
         DROP  R15                                                              
         IF    UNETFCTRL,EXIT      Ctrl msgs not flow controlled                
         INCR  R15,UNETCTR1        Count this occurrence                        
         LA    R0,2                Wait up to 2 seconds                         
         LA    R1,UNETSFDATA       Unlock on data waiting also                  
         LA    R15,UNET                                                         
         ACALL NPATWAIT            Wait                                         
*??????? BNZ   ...                                                              
         END                                                                    
         END                                                                    
*-                                                                              
*-       Handle flow controlled output to Amelia here.                          
*-         If Amelia has told us to stop sending, then                          
*-         we must wait until it's OK to send again.                            
*-                                                                              
         IF    UNETFOUTSTOP,BEGIN  Stop sending...                              
         IF    UNETFCTRL,EXIT      Ctrl msgs not flow controlled                
         CLEAR R0                  No timeout                                   
         LA    R1,UNETSFOPEN                                                    
         IF    (UNETSTATE,EQ,UNETSFDATASTOP),'LA R1,UNETSFDATA'                 
         LA    R15,UNET                                                         
         ACALL NPATWAIT            Wait                                         
*??????? BNZ   ...                                                              
         END                                                                    
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
         PRESTORE (R0,R1)          Text ptrs                                    
         LR    R3,R0               Save length processed for later              
*-                                                                              
*-       If it's not a control write then back up the seg buffer                
*-         and fill in the "TCP_WRITE:" prefix.  Note that we have              
*-         specially allocated a prefix area to the seg buffer                  
*-         (see references to UNETPFXL#).                                       
*-                                                                              
         IF    ^UNETFCTRL,BEGIN    Back up to include prefix...                 
*-                                                                              
*-       Encrypt the data if necessary (this is only done for                   
*-         TCP_WRITEs).                                                         
*-                                                                              
         IF    UNETFCRYPT,BEGIN    Encrypt outgoing data...                     
         LA    R2,UNETOUTCRYPT     Crypt work area                              
         VCALL SENCRYPT            Encrypt data                                 
         END                                                                    
*                                                                               
         SH    R1,=AL2(UNETPFXL#)  Back up for TCP_WRITE prefix                 
         AH    R0,=AL2(UNETPFXL#)  Adjust length                                
*                                                                               
         MVC   @R1(16),=CL16'TCP_WRITE:'                                        
         MVC   @R1+16(4),UNETAID   Amelia connection id                         
         END                                                                    
*-                                                                              
*-       Trace the data we are sending.                                         
*-                                                                              
         CLEAR R2                  0 means "output buffer"                      
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*-                                                                              
*-       Send the data across the path.                                         
*-                                                                              
         IF    (UNETSTATE,NE,UNETSFPATHCLS),BEGIN  Do it...                     
         L     R15,UNETPATP        Get UPATH                                    
         VCALL PATHWRIT            Send packet across Suzan path                
*  Full queues are handled by the path routines.                                
         END                                                                    
*                                                                               
         INCR  R15,CVENIO          Count network write I/O                      
*                                                                               
         LNR   R0,R3               For seg overflow: bytes processed            
         PRETURN (R0)              Save complimented value                      
         END                                                                    
*-                                                                              
*-       SEGWR/SEGCLR.                                                          
*-                                                                              
         IF    (SEGCBWR,OR,SEGCBOVF,OR,SEGCBCLR),BEGIN                          
         CLEAR UNETSINIT                                                        
         CLEAR R15                 A-ok                                         
         B     SEGEXIT                                                          
         END                                                                    
*                                                                               
SEGEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATWAIT -- Local routine to wait for network path to change                 
*    states.  Usually this just means to wait until new data                    
*    arrives.                                                                   
*                                                                               
*    On entry:                                                                  
*      R0  - Max number of seconds before timeout (0=infinite)                  
*      R1  - wait for path to enter this state (see UNETSTATE)                  
*              or higher                                                        
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - posted (see UNETSTATE);  R1,R0 = "OK"                                
*      1 - error;                   R1,R0 = error message (TIMEOUT)             
*                                                                               
NPATWAIT XPROC (R2,LSR)                                                         
         LR    R5,R15                                                           
         WITH  (UNET,R5)                                                        
         L     R6,CVCURJCB                                                      
         WITH  (JCB,R6)                                                         
*                                                                               
         FAIL  (UNET,NE,'UNET'),NPATWT1,'Net path WAIT error.'                  
*                                                                               
         L     R15,UNETJCBP                                                     
         IF    ((UNETLINK,NZ),OR,(R6,NE,R15)),BEGIN  Trouble...                 
         QSNAP 'NPATWAIT trace info...',MODE=LOG                                
         QSNAP UNET,L'UNET                                                      
         END                                                                    
*                                                                               
         FAIL  (UNETLINK,NZ),NPATWT2,'Net path WAIT error.'                     
         FAIL  (R6,NE,UNETJCBP),NPATWT3,'Net path WAIT error.'                  
*                                                                               
         STC   R1,UNETPOST         Save post state                              
*-                                                                              
*-       Save timeout clock value in UPATH.                                     
*-                                                                              
         L     R15,=F'-1'          No timeout possible                          
         IF    (R0,NZ),BEGIN       Timeout specified...                         
         L     R15,CVDSPCLK        Current TOD clock                            
         AR    R15,R0                                                           
         END                                                                    
         ST    R15,UNETXCLK        Clock when timeout happens                   
*-                                                                              
*-       Return immediately if we are already posted.                           
*-                                                                              
         IF    (UNETSTATE,GE,UNETPOST),BEGIN  Posted...                         
         VCALL SLICECHK            Check for timeslice expiration               
         B     NWTDONE             All done, scram                              
         END                                                                    
*-                                                                              
*-       Go to the dispatcher (and wait to be posted).                          
*-                                                                              
         MVC   UNETLINK,CVUNETQH   Link the rest to us                          
         ST    R5,CVUNETQH         Save new queue head                          
*                                                                               
         SET   JCBWWFPT            Waiting for path post                        
         PAUSE ,                                                                
*-                                                                              
*-       Returns when either the connection state is high enough                
*-         to be posted or if an ATTN has been received.                        
*-                                                                              
         LA    R3,CVUNETQH-(UNETLINK-UNET)  Dummy queue head                    
         LOOP  BEGIN                                                            
         LR    R2,R3               Save prev ptr                                
         WITH  (UNET,R3)                                                        
         LT    R3,UNETLINK         Next queue entry                             
         IF    Z,EXIT              All done, scram                              
         FAIL  (UNET,NE,'UNET'),NWAIT  (Better safe than sloppy)                
*                                                                               
         IF    (R6,EQ,UNETJCBP),BEGIN  Our path...                              
         L     R15,UNETLINK        Next in queue                                
         CLEAR UNETLINK            (Neatness)                                   
         LR    R3,R2               Back up                                      
         ST    R15,UNETLINK        This takes us out of the queue               
         END                                                                    
         END                                                                    
*-                                                                              
*-       Finish up.                                                             
*-                                                                              
NWTDONE  CLEAR R15                 A-ok                                         
         SETMSG 'OK'                Ditto                                       
*                                                                               
         IF    (UNETXCLK,LT,CVDSPCLK),BEGIN  Timeout...                         
         LA    R15,1                                                            
         SETMSG 'TIMEOUT'                                                       
         END                                                                    
*                                                                               
         IF    JCBFATTNFREE,BEGIN  Attn...                                      
         LA    R15,1                                                            
         SETMSG 'ATTN'                                                          
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATQ -- Routine to put all the user's paths whose posts                     
*    can interrupt terminal I/O on the active queue (which gets                 
*    checked by the dispatcher).                                                
*                                                                               
*    Note that NPATDEQ must be called before doing any more                     
*    path I/O.  Normally TREAD calls this routine before doing                  
*    a terminal read (if the read is interruptible) and then                    
*    calls NPATDEQ immediately upon completion.                                 
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      4 - a path has already been posted (no action taken)                     
*                                                                               
NPATQ    XPROC                                                                  
         L     R6,CVCURJCB                                                      
         WITH  (JCB,R6)                                                         
*-                                                                              
*-       Go through all user network connections.                               
*-                                                                              
         LA    R3,1                                                             
         L     R4,CVNETP                                                        
         WHILE (R3,LE,CVNET#),BEGIN                                             
         IF    ('LT R5,@R4',NZ),BEGIN                                           
         WITH  (UNET,R5)                                                        
         IF    (R6,EQ,UNETJCBP),BEGIN  Our net path...                          
*                                                                               
         FAIL  (UNET,NE,'UNET'),NINTQ1,'NETPQ logic error.'                     
         FAIL  (UNETLINK,NZ),NINTQ2,'NETPQ logic error.'                        
         IF    ^UNETFINT,EXIT      Skip this connection                         
*                                                                               
         MVI   UNETPOST,UNETSFDATASTOP  Post if new data, etc.                  
*-                                                                              
*-       Check to see if the network connection is already posted.              
*-                                                                              
         IF    (UNETSTATE,GE,UNETPOST),BEGIN  Posted...                         
         LA    R15,UNET                                                         
         LCALL NPATDEQ             Dequeue prev Q'd entries                     
         LA    R15,4               Hey, already posted                          
         B     NPATINQX                                                         
         END                                                                    
*-                                                                              
*-       Add path to dispatcher's active path queue (see NPATWAIT).             
*-                                                                              
         MVC   UNETXCLK,=F'-1'     No timeout                                   
         MVC   UNETLINK,CVUNETQH   Linked list                                  
         ST    R5,CVUNETQH         We are the new queue head                    
         END                                                                    
         END                                                                    
*                                                                               
         LA    R4,@R4+4            Next UNET ptr                                
         LA    R3,@R3+1            Next UNET number                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
NPATINQX PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATDEQ -- Routine to take all the user's paths off the                      
*    active queue.  This routine is the 'dequeue' call for                      
*    NPATQ; see the comments for that routine.                                  
*                                                                               
NPATDEQ  XPROC                                                                  
         L     R6,CVCURJCB                                                      
         WITH  (JCB,R6)                                                         
*-                                                                              
*-       Take all of this user's paths off the queue.                           
*-                                                                              
         LA    R3,CVUNETQH-(UNETLINK-UNET)  Dummy queue head                    
         LOOP  BEGIN                                                            
         LR    R2,R3               Save prev ptr                                
         WITH  (UNET,R3)                                                        
         LT    R3,UNETLINK         Next queue entry                             
         IF    Z,EXIT              All done, scram                              
*                                                                               
         IF    (R6,EQ,UNETJCBP),BEGIN  Our path...                              
         L     R15,UNETLINK        Next in queue                                
         CLEAR UNETLINK            (Neatness)                                   
         LR    R3,R2               Back up                                      
         ST    R15,UNETLINK        This takes us out of the queue               
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         EJECT                                                                  
         TITLE 'Network Dump Formatting Routine'                                
*box                                                                            
*                                                                               
*  NETFMT -- Routine to format networking information for the                   
*    dump formatter (called from FAIL module).                                  
*                                                                               
NETFMT   XPROC                                                                  
         VCALL NETDISP             Display general information                  
         ACALL NTRCDISP            Display trace table                          
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NTRCDISP -- Routine to display the network trace table.                      
*                                                                               
*    This routine is called by the SHOW WNET command and also the               
*    dump formatter.                                                            
*                                                                               
SHTRWA   RECORD BEGIN                                                           
SHTRPTRS DS    2A                  Working trace data ptrs                      
         END                                                                    
*-                                                                              
NTRCDISP XPROC SHTRWA                                                           
*-                                                                              
*-       Start with title line.                                                 
*-                                                                              
         IF    (CVETRCP,Z),BEGIN   No trace entries...                          
         SETMSG 'Network trace table is empty.'                                 
         B     NTRCEXIT                                                         
         END                                                                    
*                                                                               
         TSEG  'Network I/O trace',,CR                                          
         TSEG  '-----------------',,CR                                          
         TCR                                                                    
*-                                                                              
*-       Step through the trace entry queue.                                    
*-                                                                              
         LA    R6,CVETRCP-(ETRCLINK-ETRC)  Dummy first link                     
         LOOP  BEGIN                                                            
         WITH  (ETRC,R6)                                                        
         WHILE ('LT R6,ETRCLINK',NZ)  Go through buffers...                     
*-                                                                              
*-       Format the trace entry.                                                
*-                                                                              
         IF    (ETRC,NE,'ETRC'),BEGIN  Shucks...                                
         SETMSG 'Bad trace entry queue!'                                        
         B     NTRCEXIT                                                         
         END                                                                    
*                                                                               
         LM    R0,R1,ETRCCLCK      Get time stamp                               
         XPUSH ,,11,PTR=R15                                                     
         VCALL FMTTIME             Get "hh:mm:ss.th"                            
         TSEG  (R1),(R0),B                                                      
         TSEG  'Line '                                                          
         TNUM  LH:ETRCSNO,3        Session number                               
         TSEG  CVBLANKS,1                                                       
         TSEG  ETRCACCT+3,2        gg                                           
         TSEG  '.'                                                              
         TSEG  ETRCACCT,3          uuu                                          
*                                                                               
         SETMSG ' -- ??? -- '                                                   
         IF    ETRCFOUT,'SETMSG " >> OUTPUT >> "'                               
         IF    ETRCFIN,' SETMSG " << INPUT  << "'                               
         TSEG  (R1),(R0)                                                        
*                                                                               
         SETMSG ETRCDATA,LH:ETRCDLEN                                            
         STM   R0,R1,SHTRPTRS                                                   
*                                                                               
         IF    (R0,GT,16),BEGIN                                                 
         TSEG  (R1),16,TB                                                       
         LM    R0,R1,SHTRPTRS                                                   
         LA    R1,@R1+16                                                        
         SH    R0,=H'16'                                                        
         STM   R0,R1,SHTRPTRS                                                   
         END                                                                    
*                                                                               
         TSEG  '('                                                              
         TNUM  L:SHTRPTRS                                                       
         TSEG  ' bytes)',,CR                                                    
*                                                                               
         LM    R0,R1,SHTRPTRS      Data len, loc                                
         LR    R15,R1                                                           
         SH    R15,=H'16'          Back up to ID prefix                         
*                                                                               
         IF    ((@R15,EQ,'ERROR_PREV_REQ:'),                           *        
               OR,(@R15,EQ,'TCP_OPEN:'),                               *        
               OR,(@R15,EQ,'TCP_OPEN_INFO:'),                          *        
               OR,(@R15,EQ,'TCP_INFO:'),                               *        
               OR,(@R15,EQ,'TCP_CONNECT:'),                            *        
               OR,(@R15,EQ,'TCP_ABORT:')),BEGIN                                 
         HEXDUMP (R1),(R0),FORM=OFFSET,CHARSET=EBCDIC                           
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         HEXDUMP (R1),(R0),FORM=OFFSET,CHARSET=ASCII                            
         END                                                                    
*                                                                               
         TCR                                                                    
         END                                                                    
*                                                                               
NTRCEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DISPUNET -- Routine to display formatted information about                   
*    the UNET specified.                                                        
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
DISPUNET XPROC                                                                  
         LR    R5,R15                                                           
         WITH  (UNET,R5)                                                        
*                                                                               
         TNUM  L:UNETPNO                                                        
         TSEG  ' -- UNET at '                                                   
         THEX  LA:UNET,8                                                        
         TSEG  ' for line '                                                     
*                                                                               
         TNUM  LH:UNETSNO                                                       
         TSEG  ' '                                                              
         TSEG  UNETGRP                                                          
         TSEG  '.'                                                              
         TSEG  UNETUSER                                                         
*                                                                               
         TSEG  ', Amelia ID '                                                   
         TNUM  L:UNETAID                                                        
         TCR                                                                    
*                                                                               
         TSEG  '    JCB at '                                                    
         THEX  L:UNETJCBP,8                                                     
         TSEG  ', AMY UPATH at '                                                
         THEX  L:UNETPATP,8                                                     
         IF    (UNETSVIB,NZ),BEGIN                                              
         TSEG  ', SVIB at '                                                     
         THEX  L:UNETSVIB,8                                                     
         END                                                                    
         TCR                                                                    
*                                                                               
         IF    (UNETLINK,NZ),BEGIN                                              
         TSEG  '    Next UNET on waiting queue '                                
         THEX  L:UNETLINK,8                                                     
         TCR                                                                    
         END                                                                    
*                                                                               
         IF    (UNETCTR1,NZ),BEGIN                                              
         TSEG  'Full queue suspends: '                                          
         TNUM  L:UNETCTR1                                                       
         TCR                                                                    
         END                                                                    
*                                                                               
         TSEG  '    Flags 1 and 2: '                                            
         THEX  LH:UNETFLG1,4                                                    
         TCR                                                                    
*                                                                               
         IF    (UNETEMSG,NZ),BEGIN                                              
         TSEG  '    EMSG: '                                                     
         TSEG  UNETEMSG,L'UNETEMSG                                              
         TCR                                                                    
         END                                                                    
*                                                                               
         IF    (UNETWAIT,NZ),BEGIN                                              
         TSEG  '    Timeout value: '                                            
         TNUM  L:UNETWAIT                                                       
         TCR                                                                    
         END                                                                    
*                                                                               
         IF    (UNETXCLK,NE,-1),BEGIN                                           
         TSEG  '    Timeout TOD: '                                              
         THEX  L:UNETXCLK,8                                                     
         TCR                                                                    
         END                                                                    
*                                                                               
         TSEG  '    SEG flag: '                                                 
         THEX  LC:UNETSGFLG,2                                                   
         TCR                                                                    
*                                                                               
         TSEG  '    Post completion flags: '                                    
         THEX  LC:UNETPOST,2                                                    
         TCR                                                                    
*-                                                                              
*-       Display connection state.                                              
*-                                                                              
         TSEG  '    State='                                                     
         SETMSG 'Unknown'                                                       
         IF    (UNETSTATE,Z),'SETMSG "Never opened"'                            
         IF    (UNETSTATE,EQ,UNETSFINITIAL),'SETMSG "Initializing"'             
         IF    (UNETSTATE,EQ,UNETSFOPENING),'SETMSG "Opening"'                  
         IF    (UNETSTATE,EQ,UNETSFOPENSTOP),'SETMSG "Open/Stopped"'            
         IF    (UNETSTATE,EQ,UNETSFOPEN),'SETMSG "Open"'                        
  IF (UNETSTATE,EQ,UNETSFDATASTOP),'SETMSG "Data waiting/Stopped"'              
         IF    (UNETSTATE,EQ,UNETSFDATA),'SETMSG "Data waiting"'                
         IF    (UNETSTATE,EQ,UNETSFABORT),'SETMSG "Aborted"'                    
         IF    (UNETSTATE,EQ,UNETSFCLOSING),'SETMSG "Closing"'                  
         IF    (UNETSTATE,EQ,UNETSFPATHCLS),'SETMSG "Path closed"'              
         IF    (UNETSTATE,EQ,UNETSFCLOSE),'SETMSG "Closed"'                     
         TSEG  (R1),(R0)                                                        
*                                                                               
         IF    UNETFINSTOP,'TSEG ", Input stopped"'                             
         IF    UNETFINABORT,'TSEG ", ABORT received"'                           
         IF    UNETFINEOF,'TSEG ", EOF received"'                               
         IF    UNETFOUTSTOP,'TSEG ", Output stopped"'                           
         IF    UNETFOUTABORT,'TSEG ", ABORT sent"'                              
         IF    UNETFOUTEOF,'TSEG ", EOF sent"'                                  
*                                                                               
         TCR                                                                    
*-                                                                              
*-       Display IP addresses.                                                  
*-                                                                              
         TSEG  '    Our address='                                               
         TNUM  LC:UNETLIP                                                       
         TSEG  '.'                                                              
         TNUM  LC:UNETLIP+1                                                     
         TSEG  '.'                                                              
         TNUM  LC:UNETLIP+2                                                     
         TSEG  '.'                                                              
         TNUM  LC:UNETLIP+3                                                     
         TSEG  ', port '                                                        
         TNUM  L:UNETLPORT                                                      
         TCR                                                                    
*                                                                               
         TSEG  '    Remote address='                                            
         TNUM  LC:UNETRIP                                                       
         TSEG  '.'                                                              
         TNUM  LC:UNETRIP+1                                                     
         TSEG  '.'                                                              
         TNUM  LC:UNETRIP+2                                                     
         TSEG  '.'                                                              
         TNUM  LC:UNETRIP+3                                                     
         TSEG  ', port '                                                        
         TNUM  L:UNETRPORT                                                      
         TCR                                                                    
*                                                                               
         IF    (UNETINL,NZ),BEGIN                                               
         TSEG  '    Input buffer length='                                       
         TNUM  L:UNETINL                                                        
*                                                                               
         TSEG  ', current ptrs='                                                
         THEX  L:UNETINCUR+4,8                                                  
         TSEG  ', '                                                             
         THEX  L:UNETINCUR,8                                                    
         TCR                                                                    
         END                                                                    
*                                                                               
         LA    R4,UNETINQH-(INBUFLNK-INBUF)  Dummy first link                   
         LOOP  BEGIN                                                            
         WITH  (INBUF,R4)                                                       
         WHILE ('LT R4,INBUFLNK',NZ)                                            
         TCR                                                                    
         HEXDUMP INBUFDAT,L:INBUFLEN,FORM=OFFSET,CHARSET=ASCII                  
         END                                                                    
*                                                                               
         TCR                                                                    
*                                                                               
* Display trace table if the connection has one                                 
*                                                                               
         IF    (UNETTTBL,NZ),BEGIN                                              
         TSEG  'Trace table: '                                                  
         TCR                                                                    
*                                                                               
* Show entries from most recent to oldest                                       
*                                                                               
         L     R2,UNETTTBL                                                      
         L     R3,UNETTTNX                                                      
         IF    (R3,Z),'LA R3,CTRC#'                                             
         BCTR  R3,0                                                             
         LR    R6,R3               Save endpoint here                           
*                                                                               
*  Display most recent entry                                                    
*                                                                               
         LR    R15,R2                                                           
         LR    R0,R3                                                            
         SLL   R0,CTRCSHFT                                                      
         AR    R15,R0                                                           
         ACALL DISPCTRC                                                         
         IF    (R3,Z),'LA R3,CTRC#'                                             
         BCTR  R3,0                                                             
*                                                                               
* Now display rest of entries                                                   
*                                                                               
         WHILE (R3,NE,R6),BEGIN                                                 
         LR    R15,R2                                                           
         LR    R0,R3                                                            
         SLL   R0,CTRCSHFT                                                      
         AR    R15,R0                                                           
         ACALL DISPCTRC                                                         
         IF    (R3,Z),'LA R3,CTRC#'                                             
         BCTR  R3,0                                                             
         END                                                                    
*                                                                               
         TCR                                                                    
         END                                                                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*box                                                                            
*                                                                               
*  DISPCTRC -- Routine to display formatted information about                   
*    the CTRC entry specified.                                                  
*                                                                               
*    On entry:                                                                  
*      R15 - CTRC ptr                                                           
*                                                                               
DISPCTRC PROC                                                                   
         LR    R5,R15                                                           
         WITH  (CTRC,R5)                                                        
*                                                                               
*  Display entry                                                                
*                                                                               
         IF    (CTRCCLCK,NZ),BEGIN                                              
         LM    R0,R1,CTRCCLCK      Get time stamp                               
         XPUSH ,,11,PTR=R15                                                     
         VCALL FMTTIME             Get "hh:mm:ss.th"                            
         TSEG  (R1),(R0),B                                                      
         IF    (CTRCSR,EQ,0),'SETMSG "Sent:"'                                   
         ELSE  'SETMSG "Rcvd:"'                                                 
         TSEG  (R1),(R0),B                                                      
         TSEG  CTRCPKT,16,B                                                     
         TNUM  LH:CTRCLEN                                                       
         TCR                                                                    
         END                                                                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*box                                                                            
*                                                                               
*  NPATCHK -- Routine to check to see if there has been any new                 
*    activity on the Amelia paths.                                              
*                                                                               
NPATCHK  XPROC                                                                  
*-                                                                              
*-       Process new data from the network paths.                               
*-                                                                              
         LT    R15,CVAMYP          Production Amelia                            
         IF    NZ,'LCALL NPATPCHK'  Check path activity                         
*                                                                               
         LT    R15,CVTAMYP         Test Amelia                                  
         IF    NZ,'LCALL NPATPCHK'  Check path activity                         
         PEND                                                                   
         TITLE 'Network Interface Routines -- Dispatcher Subroutines'           
*box                                                                            
*                                                                               
*        The following routines can be called in dispatcher or                  
*        user mode.  As a result, no CP addressability can be                   
*        assumed.                                                               
*                                                                               
         DROP  CP                  No CP addressability                         
         SPACE 4                                                                
*box                                                                            
*                                                                               
*  NPATPOST -- Routine to post any network connections waiting for              
*    new data.  Efficiency is a concern here, since this is called              
*    every time the dispatcher is posted.                                       
*                                                                               
*    This routine is called by the dispatcher.                                  
*                                                                               
NPATPOST XPROC                                                                  
*-                                                                              
*-       Process new data from the network paths.                               
*-                                                                              
         LT    R15,CVAMYP          Production Amelia                            
         IF    NZ,'LCALL NPATPCHK'  Check path activity                         
*                                                                               
         LT    R15,CVTAMYP         Test Amelia                                  
         IF    NZ,'LCALL NPATPCHK'  Check path activity                         
*-                                                                              
*-       Check to see if any waiting network connections have                   
*-         been posted.                                                         
*-                                                                              
         LA    R5,CVUNETQH-(UNETLINK-UNET)  Dummy queue head                    
         LOOP  BEGIN                                                            
         WITH  (UNET,R5)                                                        
         LR    R4,R5               Save prev ptr                                
         LT    R5,UNETLINK         Next queue entry                             
         IF    Z,EXIT              All done, scram                              
         FAIL  (UNET,NE,'UNET'),PPOST  (Better safe than sloppy)                
*-                                                                              
*-       Dispatch the user if his connection has changed state or               
*-         if his maximum wait time has been exceeded.                          
*-                                                                              
         IF    (UNETXCLK,LT,CVDSPCLK),PPOST  Timed out                          
*                                                                               
         IF    (UNETSTATE,GE,UNETPOST),BEGIN  We are posted...                  
PPOST    L     R6,UNETJCBP         His JCB ptr                                  
         WITH  (JCB,R6)                                                         
         CLEAR JCBWWFPT            No longer waiting for path                   
         IF    (('LTH R15,JCBWFL',Z),AND,^JCBAPDSP),BEGIN                       
         SETUP JCB                                                              
         END                                                                    
*                                                                               
         ELSEIF JCBFTINT,BEGIN     Interruptible terminal I/O...                
         IF    UNETFINT,BEGIN      Path post can interrupt...                   
         LH    R0,JCBSEQ           User number                                  
         VCALL TBREAK              Halt his terminal I/O                        
         END                                                                    
         END                                                                    
*                                                                               
         ELSEIF JCBFWINT,BEGIN     Interruptible wait...                        
         IF    UNETFINT,BEGIN      Path post can interrupt...                   
         IF    ('LT R15,JCBTIMID',Z),EXIT  No timer, scram                      
         VCALL TIMERDQ             Purge timer                                  
         IF    NZ,EXIT             Timer already fired, scram                   
         CLEAR JCBTIMID            Reset timer id                               
         MVC   JCBTIMQL,=F'-1'     Reser timer queue link ptr                   
         CLEAR JCBWFTM             No longer waiting for timer                  
*                                                                               
         IF    (('LTH R15,JCBWFL',Z),AND,^JCBAPDSP),'SETUP JCB'                 
         END                                                                    
         END                                                                    
*                                                                               
         L     R15,UNETLINK        Next in queue                                
         CLEAR UNETLINK            (Neatness)                                   
         LR    R5,R4               Back up                                      
         ST    R15,UNETLINK        This takes us out of the queue               
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATPCHK -- Local routine to check network path for new data.                
*    Note that this routine runs in "dispatcher" mode (no CP).                  
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
NPWA     RECORD BEGIN                                                           
NPXPTRS  DS    2F                  Packet length, location ptrs                 
*                                                                               
NPID     DS    CL16                Packet identification                        
NPWORD1  DS    F                   Word 1 parameter                             
NPWORD2  DS    F                   Word 2 parameter                             
NPWORD3  DS    F                   Word 3 parameter                             
NPWORD4  DS    F                   Word 4 parameter                             
NPWORD5  DS    F                   Word 5 parameter                             
NPWORD6  DS    F                   Word 6 parameter                             
         DS    XL16                Extra stuff (possibly header)                
NPHDR    EQU   NPID,*-NPID,C'X'                                                 
*                                                                               
NPSEGCB  DS    XL(L'SEGCB)         Working SEGCB control block                  
*                                                                               
NPWAWORD DS    F                   Working fullword                             
         END                                                                    
*-                                                                              
NPATPCHK PROC  NPWA                                                             
         LA    R5,NPWA                                                          
         WITH  (NPWA,R5)           Basic assumption for TCP routines            
*                                                                               
         LR    R6,R15                                                           
         WITH  (UPATH,R6)                                                       
*                                                                               
         IF    CVFNONETCHK,EXIT    No network checks (for debugging)            
*-                                                                              
*-       Save pointer to current UPATH for failsoft recovery.                   
*-                                                                              
*-         If we get a failsoft in this routine it will be a                    
*-         "dispatcher failsoft" -- to avoid a failsoft loop we                 
*-         will close the current path.                                         
*-                                                                              
         ST    R6,CVCURPATH        Save ptr to current path                     
*-                                                                              
*-       Get new data from path.                                                
*-                                                                              
         LOOP  BEGIN                                                            
         LA    R15,UPATH                                                        
         VCALL PATHREAD            Get next packet from Amelia                  
         IF    NZ,EXIT             Nothing, scram                               
*-                                                                              
*-       Trace incoming data.                                                   
*-                                                                              
         STM   R0,R1,NPXPTRS       Save packet ptrs for later                   
*                                                                               
         LR    R15,R0                                                           
         CEIL  R15,L'NPHDR                                                      
         MOVE  R15,NPHDR,@R1       Save header information                      
***      XPUSH R15,R2              !!!!!!!                                      
***      LR    R2,R0               !!!!!!!                                      
****     IF    (R2,LE,L'NPID),BEGIN !!!!!                                       
****     DEBUG 'NPHDR is ',NPID,'; R0=',R2    !!!!!!!                           
****     END ,                     !!!!!!                                       
****     XPOP  R15,R2              !!!!!!                                       
*                                                                               
         IF    (NPID,EQ,'TCP_DATA:'),BEGIN  Data...                             
         LCALL TCPDATA             Handle incoming TCP data                     
         END                                                                    
*                                                                               
         ELSEIF  ((NPID,EQ,'TCP_STOP:'),OR,                            *        
               (NPID,EQ,'TCP_START:')),BEGIN                                    
         LCALL TCPFLOW             Handle flow control                          
         END                                                                    
*                                                                               
         ELSEIF  (NPID,EQ,'TCP_OPEN_INFO:'),BEGIN                               
         LCALL TCPOINFO            Save open info                               
         END                                                                    
*                                                                               
         ELSEIF  (NPID,EQ,'TCP_CONNECT:'),BEGIN  New session...                 
         LCALL TCPCONN             Handle new TCP connection                    
         END                                                                    
*                                                                               
         ELSEIF  (NPID,EQ,'TCP_CLOSE:'),BEGIN                                   
         LCALL TCPCLOSE            Close TCP connection                         
         END                                                                    
*                                                                               
         ELSEIF  (NPID,EQ,'TCP_EOF:'),BEGIN                                     
         LCALL TCPEOF              End of file on TCP connection                
         END                                                                    
*                                                                               
         ELSEIF  (NPID,EQ,'TCP_ABORT:'),BEGIN                                   
         LCALL TCPABORT            Abort TCP connection                         
         END                                                                    
*                                                                               
         ELSEIF  (NPID,EQ,'ERROR_PREV_REQ:'),BEGIN                              
         LM    R0,R1,NPXPTRS       Packet ptrs                                  
         LA    R2,1                1 means "input buffer"                       
         CLEAR R15                 *** No UNET ***                              
         ACALL NETTRC              Save buffer for trace                        
*                                                                               
         INCR  R15,CVENERR         Count the error packet                       
*                                                                               
         IF    ('LT R1,CVENERP',NZ),'CLEAR CVENERP; VCALL FREECORE'             
*                                                                               
         L     R0,NPXPTRS          Packet length                                
         STH   R0,CVENERL          Save error packet length                     
         VCALL GETCORE             Get space for the packet                     
         ST    R1,CVENERP          Save ptr to saved error packet               
         MOVEL @R1,L:NPXPTRS+4,L:NPXPTRS  Save packet data                      
         END                                                                    
*-                                                                              
*-       Bad packet from Amelia.                                                
*-                                                                              
         ELSE  BEGIN                                                            
         LM    R0,R1,NPXPTRS       Packet ptrs                                  
         LA    R2,1                1 means "input buffer"                       
         CLEAR R15                 *** No UNET ***                              
         ACALL NETTRC              Save buffer for trace                        
*                                                                               
         KAPUT BADPACK,'Bad packet type.'                                       
         END                                                                    
         END                                                                    
*-                                                                              
*-       Check to see if the path is closing.                                   
*-                                                                              
         IF    UPATSFLG.UPATFCLS,BEGIN  Closing...                              
         LA    R15,UPATH                                                        
         VCALL PATHCLS             Close and free path                          
         END                                                                    
*-                                                                              
*-       Reset current path pointer.                                            
*-                                                                              
         CLEAR CVCURPATH           Reset current path                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATCLS -- Routine to close a network path.                                  
*                                                                               
*    Note: This routine can be called while in dispatcher mode                  
*          so no CP addressability can be assumed.                              
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 = closed;      R1,R0 = msg ("OK")                                      
*      4 = not closed;  R1,R0 = error msg loc, len                              
*                                                                               
NCLSWA   RECORD BEGIN                                                           
NCLSJCBP DS    A                   Path owner's JCB ptr (0=global)              
         END                                                                    
*-                                                                              
NPATCLS  XPROC (R2,LSR),NCLSWA                                                  
         CLEAR NCLSWA              Initialize wa                                
*                                                                               
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
         FAIL  (UNET,NE,'UNET'),NPATCLS,'Bad UNET ptr'                          
*                                                                               
         CLEAR R15                 Assume it's a global UNET ptr                
         IF    ^UNETFGLOBAL,'L R15,UNETJCBP'  User UNET ptr                     
         ST    R15,NCLSJCBP        Save user UNET JCB ptr                       
*-                                                                              
*-       Check for network requests.                                            
*-                                                                              
         ACALL NPATCHK             Check for new network requests               
*-                                                                              
*-       Path has closed, we need to get rid of the UNET ourselves.             
*-                                                                              
         IF    (UNETSTATE,EQ,UNETSFPATHCLS),BEGIN  Closed...                    
         LA    R15,UNET                                                         
         ACALL FREEUNET            Release our UNET                             
         B     NCLSFIN             Scram                                        
         END                                                                    
*-                                                                              
*-       Connection is still active.                                            
*-                                                                              
         FAIL  (UNETSTATE,GE,UNETSFCLOSING),NPATCLS,'Net error.'                
*                                                                               
         IF    (UNETAID,Z),BEGIN   Never opened...                              
         LA    R15,UNET                                                         
         ACALL FREEUNET            Release UNET ourselves                       
         B     NCLSFIN             Scram                                        
         END                                                                    
*-                                                                              
*-       Send abort to force the connection to go away.                         
*-                                                                              
         IF    (UNETFOUTEOF+UNETFOUTABORT,Z),BEGIN  Send ABORT...               
         IF    UNETFINABORT,EXIT   We got an abort, skip this                   
*                                                                               
         SET   UNETFCTRL           Sending control info                         
         SEG   LA:=CL16'TCP_ABORT:',16,UNETOUTSG                                
         SEG   UNETAID             Amelia session ID                            
         SEGWR                                                                  
         CLEAR UNETFCTRL           Reset                                        
         END                                                                    
*-                                                                              
*-       We are done with the connection; the connection will                   
*-         remain in the 'closing' state until Amelia responds                  
*-         with a TCP_CLOSE and then we can free the UNET control               
*-         block.                                                               
*-                                                                              
         SET   UNETFCTRL           Sending control info                         
         SEG   LA:=CL16'TCP_CLOSE:',16,UNETOUTSG                                
         SEG   UNETAID             Amelia session ID                            
         SEGWR                                                                  
         CLEAR UNETFCTRL           Reset                                        
*                                                                               
         MVI   UNETSTATE,UNETSFCLOSING  Current state is closing                
*                                                                               
         MVC   UNETJCBP,=F'-1'     UNET no longer belongs to us                 
*-                                                                              
*-       The following is a check for "^UNETFGLOBAL".  We can't                 
*-         actually check this flag, because we just released                   
*-         the memory for the UNET (above).  If it's not a global               
*-         UNET, then it belongs to the current user and we need                
*-         to keep the use counts accurate.                                     
*-                                                                              
NCLSFIN  LT    R5,NCLSJCBP         Former path owner's JCB ptr                  
         IF    NZ,BEGIN            It was a user (non global) path...           
         WITH  (JCB,R5)                                                         
         LT    R4,JCBCPX           Get user's CP ptr                            
         IF    Z,EXIT              No CP, scram                                 
         WITH  (CP,R4)                                                          
         FAIL  (CP,NE,'CP'),NPATCLS,'Network path UNET/CP error.'               
         DECR  R15,CPNNETS         One less open connection now                 
         END                                                                    
*                                                                               
         SETMSG 'OK'                                                            
         CLEAR R15                 Set rc                                       
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NPATPCLS -- Routine to handle the closure of a Suzan path.                   
*    This routine is called by PATHCLS.  If it is a network path                
*    then we have to update all the UNETs so that they no longer                
*    point to the UPATH that is about to be freed.                              
*                                                                               
*    Note: This routine can be called while in dispatcher mode                  
*          so no CP addressability can be assumed.                              
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK                                                                   
*                                                                               
NPATPCLS XPROC                                                                  
         LR    R6,R15                                                           
         WITH  (UPATH,R6)                                                       
*                                                                               
         LA    R3,1                Net path number                              
         L     R4,CVNETP           Start of net path table                      
*                                                                               
         WHILE (R3,LE,CVNET#),BEGIN  Go through entries...                      
         IF    ('LT R2,@R4',NZ),BEGIN  Active entry...                          
         WITH  (UNET,R2)                                                        
*                                                                               
         IF    (R6,EQ,UNETPATP),BEGIN  Mark this connection...                  
         IF    (UNETSTATE,LT,UNETSFPATHCLS),BEGIN                               
         MVI   UNETSTATE,UNETSFPATHCLS  Amelia path has closed                  
         END                                                                    
*                                                                               
         MVC   UNETPATP,=F'-1'     Reset UPATH ptr                              
         END                                                                    
         END                                                                    
*                                                                               
         LA    R4,@R4+4            Next net path ptr                            
         LA    R3,@R3+1            Next net path number                         
         END                                                                    
*-                                                                              
*-       We can now safely free the path.                                       
*-                                                                              
         LA    R15,UPATH                                                        
         IF    (R15,EQ,CVAMYP),'CLEAR CVAMYP'  No Amelia                        
         IF    (R15,EQ,CVTAMYP),'CLEAR CVTAMYP'  No Testamy                     
*                                                                               
         CLEAR R15                 A-OK                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPCONN -- Routine to process a new TCP connection.                          
*                                                                               
*    On entry:                                                                  
*      R1,R0 - packet location, length                                          
*                                                                               
TCPCONN  PROC                                                                   
         WITH  (NPWA,R5)           Entry assumption                             
*                                                                               
         L     R15,NPWORD1         Our id                                       
         LCALL GETUNET             Get our UNET ptr                             
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LA    R2,1                1 means "input buffer"                       
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*-                                                                              
*-       Save connection information.                                           
*-                                                                              
         MVC   UNETAID,NPWORD2     Save Amelia control id                       
         MVC   UNETLIP,NPWORD3     Save our IP address                          
         MVC   UNETLPORT,NPWORD4   Save our port number                         
         MVC   UNETRIP,NPWORD5     Save remote's IP address                     
         MVC   UNETRPORT,NPWORD6   Save remote's port number                    
*                                                                               
         IF    (UNETSTATE,LT,UNETSFOPEN),BEGIN                                  
         MVI   UNETSTATE,UNETSFOPEN                                             
         IF    UNETFOUTSTOP,'MVI UNETSTATE,UNETSFOPENSTOP'                      
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPDATA -- Routine to handle data from an existing TCP                       
*    connection.                                                                
*                                                                               
*    On entry:                                                                  
*      R1,R0 - packet location, length                                          
*                                                                               
TCPDATA  PROC                                                                   
         WITH  (NPWA,R5)           Entry assumption                             
*                                                                               
         L     R15,NPWORD1         Our id                                       
         LCALL GETUNET             Get our UNET ptr                             
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         IF    (UNETSVIB,NZ),'INCR R15,CVCSNIO'  Count "server I/O"             
*-                                                                              
*-       Trace the data we received.                                            
*-                                                                              
         LA    R2,1                1 means "input buffer"                       
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*-                                                                              
*-       We have received data after we closed the connection,                  
*-         now send an ABORT to try to shut the other guy up.                   
*-                                                                              
*-       For now, we can't do this -- it's not legal to send a                  
*-       control packet after the TCP_CLOSE.                                    
*-                                                                              
         IF    (UNETSTATE,GE,UNETSFCLOSING),BEGIN  Extra data...                
*        IF    ^UNETFOUTABORT,BEGIN  Send one ABORT...                          
*        SEGCLR UNETOUTSG                                                       
*        SET   UNETFCTRL           Sending control info                         
*        SEG   LA:=CL16'TCP_ABORT',16                                           
*        SEG   UNETAID             Amelia session ID                            
**                                                                              
*        SET   UNETFWRONLY         Don't check incoming packets                 
*        SEGWR                                                                  
*        CLEAR UNETFCTRL,UNETFWRONLY  Reset                                     
**                                                                              
*        SET   UNETFOUTABORT       Abort the connection                         
*        END                                                                    
*                                                                               
         B     TCPDEXIT            Scram                                        
         END                                                                    
*                                                                               
         LM    R2,R3,NPXPTRS       Get packet ptrs                              
         LA    R3,@R3+L'NPID+4     Skip past header...                          
         SH    R2,=AL2(L'NPID+4)   Keep length accurate                         
         IF    NEG,'CLEAR R2'                                                   
*-                                                                              
*-       Buffer input data.                                                     
*-                                                                              
         LA    R0,L'INBUF+@R2      Total INBUF entry length                     
         VCALL GETCORE             Get core for buffer entry                    
         LR    R4,R1                                                            
         WITH  (INBUF,R4),BEGIN                                                 
         CLEAR INBUFLNK            No next INBUF entry                          
         ST    R2,INBUFLEN         Data length                                  
         MOVEL INBUFDAT,@R3,(R2)   Save data                                    
*-                                                                              
*-       Decrypt the data if necessary.                                         
*-                                                                              
         IF    UNETFCRYPT,BEGIN    Decrypt...                                   
         SETMSG INBUFDAT,(R2)       Data                                        
         LA    R2,UNETINCRYPT      Crypt work area                              
         VCALL SDECRYPT            Decrypt data                                 
         END                                                                    
*                                                                               
         LT    R15,UNETINQT        Get current queue tail                       
         IF    Z,'ST R4,UNETINQH'   Nothing in the queue                        
         ELSE  'ST R4,INBUFLNK-INBUF(,R15)'  Link us to previous                
         ST    R4,UNETINQT         We are the new queue tail                    
*                                                                               
         L     R15,UNETINL         Input buffer length                          
         A     R15,INBUFLEN        Account for buffer we just added             
         ST    R15,UNETINL         New total buffer length                      
         END                                                                    
*-                                                                              
*-       If we have buffered a lot of data then tell Amelia to                  
*-         stop sending us new stuff for a while until we catch up.             
*-                                                                              
         IF    (UNETINL,GE,UNETINHI#),BEGIN  We have lots...                    
*        FAIL  (UNETINL,GE,UNETINMX#),TCPD,'Too much input data'                
         IF    UNETFINSTOP,EXIT    We are already stopped, scram                
*                                                                               
         IF    (UNETOUTSGLENF,NZ),EXIT  We can't use the seg buffer             
*                                                                               
         SEGDEF UNETOUTSG                                                       
         MVC   @R13(1),UNETSGFLG   Save seg flags                               
         XPUSH ,,4                                                              
         SET   (UNETFCTRL+UNETFWRONLY,EQ)  Our control flags                    
         SEG   LA:=CL16'TCP_STOP:',16                                           
         SEG   UNETAID             Amelia ID                                    
         SEGWR                                                                  
         XPOP  ,,4                                                              
         MVC  UNETSGFLG,@R13       Restore                                      
*                                                                               
         SET   UNETFINSTOP         We will stop getting new data                
         END                                                                    
*-                                                                              
*-       Change state to indicate that data is waiting.                         
*-                                                                              
         IF    (UNETSTATE,LT,UNETSFDATASTOP),BEGIN  Change state...             
         MVI   UNETSTATE,UNETSFDATA  Data waiting                               
         IF    UNETFOUTSTOP,'MVI UNETSTATE,UNETSFDATASTOP'                      
         END                                                                    
*                                                                               
TCPDEXIT PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPCLOSE -- Local routine to handle the closing of the TCP                   
*    input stream.  This means that an "end of file" has been                   
*    reached in the input data stream.  The connection is still                 
*    valid and we can still write data.                                         
*                                                                               
TCPCLOSE PROC                                                                   
         WITH  (NPWA,R5)           Entry assumption                             
*                                                                               
         L     R15,NPWORD1         Our id                                       
         LCALL GETUNET             Get our UNET ptr                             
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LA    R2,1                1 means "input buffer"                       
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*-                                                                              
*-       This is a response to our TCP_CLOSE.                                   
*-                                                                              
         FAIL  (UNETSTATE,NE,UNETSFCLOSING),TCPC,'TCPCLOSE error.'              
         MVI   UNETSTATE,UNETSFCLOSE  We are closed                             
*                                                                               
         LA    R15,UNET                                                         
         LCALL FREEUNET            Free UNET control block                      
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREEUNET -- Routine to free the UNET control block.                          
*                                                                               
*    On entry:                                                                  
*      R15 - UNET ptr                                                           
*                                                                               
FREEUNET PROC                                                                   
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*-                                                                              
*-       Free the network path id for this path.                                
*-                                                                              
         L     R2,UNETPNO          Net path number                              
         FAIL  ((R2,NP),OR,(R2,GT,CVNET#)),NPATCLS,'Net close err'              
         DECR  R2                  Relative to zero, not one                    
         SLL   R2,2                Times 4                                      
         A     R2,CVNETP           Our entry ptr                                
         CLEAR (@R2,4)             Zero our entry ptr                           
*-                                                                              
*-       Free UNET buffers.                                                     
*-                                                                              
         FAIL  (UNETLINK,NZ),NFREE                                              
*                                                                               
         LT    R1,UNETTTBL         Trace table                                  
         IF    NZ,BEGIN                                                         
         L     R15,=A(CTRCCELL)                                                 
         VCALL FREEPOOL                                                         
         CLEAR UNETTTBL                                                         
         END                                                                    
*                                                                               
         LT    R1,UNETBUFP         Working buffer ptr                           
         IF    NZ,BEGIN            Free it...                                   
         L     R15,=A(UNETSGBF)                                                 
         VCALL FREEPOOL                                                         
         MVC   UNETBUFP,=F'-1'     (Safety)                                     
         END                                                                    
*                                                                               
         LT    R1,UNETOBUFP        Output seg buffer ptr                        
         IF    NZ,BEGIN            Free it...                                   
         L     R15,=A(UNETSGBF)                                                 
         VCALL FREEPOOL                                                         
         MVC   UNETOBUFP,=F'-1'    (Safety)                                     
         MVC   UNETOUTSGLOC,=F'-1'  (Safety)                                    
         END                                                                    
*-                                                                              
*-       Free UNET.                                                             
*-                                                                              
         MVC   UNET(4),=C'XNET'    Zap id                                       
*                                                                               
         LA    R1,UNET                                                          
         L     R15,=A(UNETCELL)                                                 
         VCALL FREEPOOL            Release UNET memory                          
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPOINFO -- Local routine to save the TCP OPEN information which             
*    is immediately available.                                                  
*                                                                               
TCPOINFO PROC                                                                   
         WITH  (NPWA,R5)           Entry assumption                             
*                                                                               
         L     R15,NPWORD1         Our id                                       
         LCALL GETUNET             Get our UNET ptr                             
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LA    R2,1                1 means "input buffer"                       
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*                                                                               
         IF    (UNETSTATE,GE,UNETSFCLOSING),EXIT  Ignore                        
*-                                                                              
*-       Save connection information.                                           
*-                                                                              
         MVC   UNETAID,NPWORD2     Save Amelia control id                       
         MVC   UNETLIP,NPWORD3     Save our IP address                          
         MVC   UNETLPORT,NPWORD4   Save our port number                         
         MVC   UNETRIP,NPWORD5     Save remote's IP address                     
         MVC   UNETRPORT,NPWORD6   Save remote's port number                    
*                                                                               
         IF    (UNETSTATE,LT,UNETSFOPENING),BEGIN                               
         MVI   UNETSTATE,UNETSFOPENING                                          
         END                                                                    
*-                                                                              
*-       Give Amelia some information about the path owner.                     
*-                                                                              
         SEGDEF UNETOUTSG                                                       
         SET   UNETFCTRL           Segging control sequence                     
         SEG   LA:=CL16'TCP_INFO:',16                                           
         SEG   NPWORD2             Amelia ID                                    
         SEG   'Line '                                                          
         SEGDC LH:UNETSNO          Milten line-number                           
         SEG   ' '                                                              
         SEG   UNETGRP             Account                                      
         SEG   '.'                                                              
         SEG   UNETUSER                                                         
*                                                                               
         SET   UNETFWRONLY         Don't check incoming packets                 
         SEGWR                                                                  
         CLEAR UNETFCTRL,UNETFWRONLY  Reset                                     
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPFLOW -- Local routine to handle Amelia flow control requests.             
*    If we get a TCP_STOP request then we simply set a flag here;               
*    then when we get the next write request (see NPATSEG) we will              
*    wait until a TCP_START is sent.                                            
*                                                                               
TCPFLOW  PROC                                                                   
         WITH  (NPWA,R5)           Entry assumption                             
*                                                                               
         L     R15,NPWORD1         Our id                                       
         LCALL GETUNET             Get our UNET ptr                             
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LA    R2,1                1 means "input buffer"                       
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*                                                                               
         IF    (UNETSTATE,GE,UNETSFCLOSING),EXIT  Ignore                        
*-                                                                              
*-       TCP_STOP:   Stop sending data to Amelia.                               
*-                                                                              
         IF    (NPID,EQ,'TCP_STOP:'),BEGIN  Stop...                             
         SET   UNETFOUTSTOP        Stop sending data                            
*                                                                               
         IF    (UNETSTATE,EQ,UNETSFOPEN),BEGIN  Lower state...                  
         MVI   UNETSTATE,UNETSFOPENSTOP                                         
         END                                                                    
*                                                                               
         IF    (UNETSTATE,EQ,UNETSFDATA),BEGIN                                  
         MVI   UNETSTATE,UNETSFDATASTOP                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       TCP_START:  OK to send data to Amelia again.                           
*-                                                                              
         ELSE  BEGIN               Start...                                     
         CLEAR UNETFOUTSTOP        Start sending data again                     
*                                                                               
         IF    (UNETSTATE,EQ,UNETSFOPENSTOP),BEGIN  Raise state...              
         MVI   UNETSTATE,UNETSFOPEN                                             
         END                                                                    
*                                                                               
         IF    (UNETSTATE,EQ,UNETSFDATASTOP),BEGIN                              
         MVI   UNETSTATE,UNETSFDATA                                             
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPEOF -- Local routine to handle an end of file on a TCP                    
*    connection.                                                                
*                                                                               
TCPEOF   PROC                                                                   
         WITH  (NPWA,R5)           Entry assumption                             
*                                                                               
         L     R15,NPWORD1         Our id                                       
         LCALL GETUNET             Get our UNET ptr                             
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LA    R2,1                1 means "input buffer"                       
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*                                                                               
         SET   UNETFINEOF          We received normal eof                       
*-                                                                              
*-       Change state to indicate that data is waiting.                         
*-                                                                              
         IF    (UNETSTATE,LT,UNETSFDATASTOP),BEGIN  Change state...             
         MVI   UNETSTATE,UNETSFDATA  Data waiting                               
         IF    UNETFOUTSTOP,'MVI UNETSTATE,UNETSFDATASTOP'                      
         END                                                                    
*-                                                                              
*-       If this is a "server" connection then call SERVPOST                    
*-         (in the QUERY module) to handle the noteworthy event.                
*-                                                                              
         LT    R15,UNETSVIB                                                     
         IF    NZ,'VCALL SERVPOST'  Call SERV                                   
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCPABORT -- Local routine to handle an aborted TCP connection.               
*                                                                               
TCPABORT PROC                                                                   
         WITH  (NPWA,R5)           Entry assumption                             
*                                                                               
         L     R15,NPWORD1         Our id                                       
         LCALL GETUNET             Get our UNET ptr                             
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LA    R2,1                1 means "input buffer"                       
         LA    R15,UNET                                                         
         ACALL NETTRC              Save buffer for trace                        
*                                                                               
*  Check the abort message. If it's 'ERROR: DATA OVERFLOW' we've                
*  made a bad mistake.                                                          
*                                                                               
         LM    R2,R3,NPXPTRS       Get packet ptrs                              
         LA    R3,@R3+L'NPID+4     Skip past header...                          
         SH    R2,=AL2(L'NPID+4)   Keep length accurate                         
         IF    NEG,'CLEAR R2'                                                   
         IF    (R2,GE,20),BEGIN                                                 
         FAIL  (@R3,EQ,'ERROR: DATA OVERFLOW'),TCPABORT,'Flow error'            
         END                                                                    
*-                                                                              
*-       Connection has been aborted (the other side went away                  
*-         or something unusual closed the connection).                         
*-                                                                              
         SET   UNETFINABORT        We received an abort                         
*                                                                               
         IF    (UNETSTATE,LT,UNETSFABORT),BEGIN  Active...                      
         MVI   UNETSTATE,UNETSFABORT  We are closing now                        
         END                                                                    
*                                                                               
*                                                                               
         MVC   UNETEMSG,CVBLANKS                                                
         MOVE  R2,UNETEMSG,@R3     Save error message text                      
         IF    (UNETEMSG,EQ,CVBLANKS),'CLEAR UNETEMSG'                          
*-                                                                              
*-       If this is a "server" connection then call SERVPOST                    
*-         (in the QUERY module) to handle the noteworthy event.                
*-                                                                              
         LT    R15,UNETSVIB                                                     
         IF    NZ,'VCALL SERVPOST'  Call SERV                                   
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETUNET -- Local routine to get the UNET ptr given the network               
*    path number.                                                               
*                                                                               
*    On entry:                                                                  
*      R15 - net path number                                                    
*                                                                               
*    On exit:                                                                   
*      R15 - UNET ptr                                                           
*                                                                               
GETUNET  PROC                                                                   
         LR    R2,R15              Path number                                  
         DECR  R2                  Relative to zero, not one                    
         SLL   R2,2                Times 4 for word offset                      
         A     R2,CVNETP           Ptr to appropriate table entry               
         LT    R15,@R2             Get UNET ptr                                 
         FAIL  Z,GETUNET,'Bad network connection ID'                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NETTRC -- Routine to queue a trace buffer for debugging (if                  
*    the user has set network tracing).                                         
*                                                                               
*    On entry:                                                                  
*      R1,R0 - data loc, len                                                    
*      R2    - type of trace:                                                   
*              0 = output buffer                                                
*              1 = input buffer                                                 
*      R15   - UNET ptr (or zero if n/a)                                        
*                                                                               
NETTRC   PROC                                                                   
*-                                                                              
*-       Only save the buffer if network tracing is requested.                  
*-                                                                              
         USING UNET,R15                                                         
         IF    ((R15,NZ),AND,(UNETTTBL,NZ)),BEGIN                               
         XPUSH R15,R2                                                           
         ACALL UNETTRC             Do a connection trace                        
         XPOP  R15,R2                                                           
         END                                                                    
         DROP  R15                                                              
*                                                                               
         IF    CVFNTRC,BEGIN       Net tracing...                               
         LR    R6,R15                                                           
*                                                                               
         LR    R4,R1                                                            
         LR    R3,R0                                                            
*                                                                               
         AH    R0,=AL2(L'ETRCHDR)  Get a new trace buffer                       
         GETMAIN RU,LV=(0),LOC=ANY                                              
         LR    R5,R1                                                            
         WITH  (ETRC,R5)                                                        
         CLEAR ETRCHDR                                                          
         MVC   ETRC(4),=C'ETRC'    Set self-identification                      
         MVC   ETRCLINK,CVETRCP    Set our queue link ptr                       
         VCALL LOCALTOD            Time stamp                                   
         STM   R0,R1,ETRCCLCK                                                   
*                                                                               
         IF    (R2,EQ,0),'SET ETRCFOUT'  Output buffer                          
         IF    (R2,EQ,1),'SET ETRCFIN'   Input buffer                           
*                                                                               
         MVC   ETRCACCT,=C'?????'  Pre-set unknown account                      
         IF    (R6,NZ),BEGIN       Save session info if avail...                
         WITH  (UNET,R6)                                                        
         MVC   ETRCSNO,UNETSNO     Save session number                          
         MVC   ETRCACCT,UNETACCT   Save account                                 
         END                                                                    
*                                                                               
         STH   R3,ETRCDLEN         Save data length                             
         MOVEL ETRCDATA,(R4),(R3)  Save data                                    
*-                                                                              
*-       Now link this new ETRC trace entry.                                    
*-                                                                              
         ST    R5,CVETRCP          Set new ETRC queue head                      
*                                                                               
         INCR  R15,CVENTRC         Keep count of number of entries              
*-                                                                              
*-       Free oldest entries.                                                   
*-                                                                              
         WHILE (CVENTRC,GT,=Y(CVETRC#)),'CLEAR R1; LCALL FREEETRC'              
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  UNETTRC -- Perform a connection trace                                        
*                                                                               
*    On entry:                                                                  
*      R1,R0 - data loc, len                                                    
*      R2    - type of trace:                                                   
*              0 = output buffer                                                
*              1 = input buffer                                                 
*      R15   - UNET ptr                                                         
*                                                                               
UNETTRC  PROC                                                                   
         LR    R6,R15                                                           
         WITH  (UNET,R6)                                                        
*                                                                               
         LR    R4,R1                                                            
         LR    R3,R0                                                            
*                                                                               
         L     R15,UNETTTBL        Get pointer to                               
         L     R0,UNETTTNX           next trace entry                           
         SLL   R0,CTRCSHFT             to be used                               
         AR    R15,R0                                                           
*                                                                               
         WITH  (CTRC,R15)                                                       
         STCK  CTRCCLCK            Timestamp                                    
         STC   R2,CTRCSR           In/Out                                       
         STH   R3,CTRCLEN          Data length                                  
         MVC   CTRCPKT(L'CTRCPKT),0(R4)    Save packet data                     
         DROP  R15                                                              
*                                                                               
         L     R15,UNETTTNX        Set next index                               
         LA    R15,1(,R15)                                                      
         IF    (R15,GE,CTRC#),'CLEAR R15'                                       
         ST    R15,UNETTTNX                                                     
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREEETRC -- Routine to free a trace entry.                                   
*                                                                               
*    On entry:                                                                  
*      R1 - ETRC ptr of entry to free;                                          
*             or zero to free last (oldest) entry.                              
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - no entries left in trace queue                                       
*      nz- there are still entries in the trace queue                           
*                                                                               
FREEETRC XPROC                                                                  
         LR    R6,R1               ETRC ptr                                     
*-                                                                              
*-       Find the previous ETRC entry so we can unlink this entry.              
*-                                                                              
         CLEAR R5                  Previous entry ptr                           
         LT    R15,CVETRCP         First entry ptr                              
         FAIL  Z,ETRCERR1,'Free ETRC logic error.'                              
*                                                                               
         LOOP  BEGIN               Go through ETRC entries...                   
         WITH  (ETRC,R15)                                                       
*                                                                               
         IF    ((R6,Z),AND,(ETRCLINK,Z)),BEGIN  Free last entry...              
         LR    R6,R15              Set current ptr to last entry                
         B     FETRCOM                                                          
         END                                                                    
*                                                                               
         IF    (R6,EQ,R15),FETRCOM  Matched the entry, scram                    
*                                                                               
         LR    R5,R15              Save previous entry ptr                      
         LT    R15,ETRCLINK        Next ETRC entry                              
         FAIL  Z,ETRCERR2,'Free ETRC logic error.'                              
         END                                                                    
*-                                                                              
*-       Dequeue our ETRC entry.                                                
*-                                                                              
FETRCOM  IF    (R5,Z),BEGIN        We are removing the 1st entry...             
         MVC   CVETRCP,ETRCLINK-ETRC(R6)  Set new queue head                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Dequeue...                                   
         WITH  (ETRC,R5)                                                        
         FAIL  (ETRC,NE,'ETRC'),ETRCERR3,'Free ETRC logic error.'               
         MVC   ETRCLINK,ETRCLINK-ETRC(R6)  Dequeue our entry                    
         END                                                                    
*-                                                                              
*-       Free the ETRC entry.                                                   
*-                                                                              
         WITH  (ETRC,R6),BEGIN                                                  
         FAIL  (ETRC,NE,'ETRC'),ETRCERR4,'Free ETRC logic error.'               
         MVC   ETRC(4),=C'OXTR'    Neatness                                     
         MVC   ETRCLINK,=F'-1'     (Ditto)                                      
*                                                                               
         LA    R1,ETRC                                                          
         LA    R0,L'ETRCHDR        ETRC header...                               
         AH    R0,ETRCDLEN         ...plus buffer (variable length)             
         FREEMAIN RU,A=(1),LV=(0)                                               
*                                                                               
         DECR  R15,CVENTRC         Decrement number of trace entries            
         END                                                                    
*                                                                               
         LT    R15,CVETRCP         Set CC for caller                            
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
         VLTORG                                                                 
         END   .                                                                
