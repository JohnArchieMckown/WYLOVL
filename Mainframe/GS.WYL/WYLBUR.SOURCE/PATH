PATH     TITLE 'WYLBUR''s Path Support'                                         
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
WYLPATH  CSECT                                                                  
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
PATH     IDENT 2193                15:11:47 07/12/02  (SLP)                     
*                                                                               
         SYSDEFN ,                 Define installation values                   
*                                                                               
         PUSH  DSECTS                                                           
         TITLE 'DSECTS'                                                         
         COPY  CONTROL             Copy CV/CP                                   
*                                                                               
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
*                                                                               
KWR      RECORD BEGIN                                                           
         KWR                                                                    
         END                                                                    
*                                                                               
SIN      RECORD BEGIN                                                           
         COPY  SIN                                                              
         END                                                                    
*                                                                               
SEGCB    RECORD 'SEGCB'                                                         
         POP   DSECTS                                                           
*                                                                               
WYLPATH  CSECT                                                                  
         TITLE 'Path Support'                                                   
UPATH    RECORD BEGIN                                                           
UPAT     UPATH                                                                  
         END                                                                    
         EJECT                                                                  
         COPY  PINFO                                                            
         EJECT                                                                  
MPATHX   DS    0F                                                               
MAT      UPATH                                                                  
MPATH    EQU   MPATHX,*-MPATHX,C'X'                                             
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWWPAT -- SHOW WPATHS Command.                                             
*                                                                               
SHOWWPAT XPROC ,                                                                
         CLEAR R5                  Default is all paths                         
         SCAN  WPATHPRT                                                         
         SCANCHK                                                                
*-                                                                              
*-       Do the "SHOW WPATH n" command.                                         
*-                                                                              
         IF    (R5,NZ),BEGIN       Specific path specified...                   
         LR    R6,R5                                                            
         DECR  R6                  Relative to one, not zero                    
         SLL   R6,2                Times 4 for word offset                      
         A     R6,CVPATHP                                                       
         LT    R15,@R6             Get UPATH ptr                                
         IF    NZ,'ACALL PATHDISP'  Display path info                           
         ELSE  BEGIN               Not active...                                
         TSEG  'Path '                                                          
         TNUM  (R5)                                                             
         ERROR ' is not active.'                                                
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
         END                                                                    
*-                                                                              
*-       Do the "SHOW WPATHS" command.                                          
*-                                                                              
         TSEG  CVWYLSSN,,T                                                      
         TSEG  ' path information:'                                             
         TCR                                                                    
         TCR                                                                    
*                                                                               
         TSEG  'UPATH index table at '                                          
         THEX  L:CVPATHP,8                                                      
         TCR                                                                    
         TCR                                                                    
*                                                                               
         LA    R5,1                Path number                                  
         L     R6,CVPATHP          Start of path table                          
         WHILE (R5,LE,CVPATH#),BEGIN  Go through entries...                     
         IF    ('LT R15,@R6',NZ),'ACALL PATHDISP'  Display path info            
*                                                                               
         LA    R6,@R6+4            Next path ptr                                
         LA    R5,@R5+1            Next path number                             
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
         PEND  ,                                                                
*-                                                                              
*-       SHOW WPATHS options.                                                   
*-                                                                              
WPATHPRT SCKW  ,WPATHNO,PI                                                      
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*-                                                                              
WPATHNO  PROC  ,                                                                
         IF    ((R0,NEG),OR,(R0,GT,CVPATH#)),'VCALL NOTVALID'                   
         LR    R5,R0                                                            
         PRETURN (R5)                                                           
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHDISP -- Routine to display formatted information about                   
*    the path specified.                                                        
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
PATHDISP PROC                                                                   
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
*                                                                               
         TNUM  L:UPATPNO,4                                                      
         TSEG  ' -- '                                                           
         IF    UPATFGLOBAL,'TSEG "Global "'                                     
         TSEG  'UPATH'                                                          
*                                                                               
         LT    R2,UPATJCBP                                                      
         IF    NZ,BEGIN                                                         
         TSEG  ' for line '                                                     
         WITH  (JCB,R2)                                                         
         TNUM  LH:JCBSEQ                                                        
         TSEG  ' '                                                              
         TSEG  JCBGRP                                                           
         TSEG  '.'                                                              
         TSEG  JCBUSER                                                          
         END                                                                    
*-                                                                              
*-       Count pending transactions.                                            
*-                                                                              
         CLEAR R2                  Counter                                      
         L     R3,UPATWRQH                                                      
         WHILE ((R3,NZ),AND,(R2,LT,1000)),'L R3,@R3; INCR R2'                   
*                                                                               
         IF    (R2,NZ),BEGIN       Display count...                             
         TSEG  ' *** '                                                          
         TNUM  (R2)                                                             
         IF    (R2,GE,1000),'TSEG "+"'                                          
         TSEG  ' pending transactions ***'                                      
         END                                                                    
*                                                                               
         TCR                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHFREE -- Routine to free up all open user paths.                          
*    This routine is called at the end of a user session.                       
*                                                                               
PATHFREE XPROC                                                                  
         LA    R2,1                Path number                                  
         L     R3,CVPATHP          Start of path table                          
         WHILE (R2,LE,CVPATH#),BEGIN  Go through entries...                     
         IF    ('LT R4,@R3',NZ),BEGIN  Close it...                              
         WITH  (UPATH,R4)                                                       
*                                                                               
         IF    (UPATJCBP,NE,CVCURJCB),EXIT  Not ours, skip it                   
*                                                                               
         LA    R15,UPATH                                                        
         ACALL PATHCLS             Close and free it                            
         END                                                                    
*                                                                               
         LA    R3,@R3+4            Next entry                                   
         LA    R2,@R2+1                                                         
         END                                                                    
*                                                                               
         CLEAR CPNPATHS            No paths for this user any more              
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHALLO -- Routine to allocate a user path.                                 
*                                                                               
*    On entry:                                                                  
*      R0 -  0 = user path                                                      
*            1 = global path (won't "belong" to this user)                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - allocated                                                            
*            R0 = path number                                                   
*            R1 = UPATH ptr                                                     
*      4 - not allocated                                                        
*            R1,R0 = error msg loc, len                                         
*                                                                               
PATHALLO XPROC (R2,LSR)                                                         
         LR    R5,R0               Save option flag                             
*-                                                                              
*-       Check to see if the user can open another path.                        
*-                                                                              
         IF    (R5,Z),BEGIN        User path...                                 
         IF    (CPNPATHS,LT,CVUPMAX#),EXIT  OK, not too many                    
         SETMSG 'TOO MANY PATHS OPEN'                                           
         LA    R15,4               Bad news                                     
         EXIT  PATHALLO                                                         
         END                                                                    
*-                                                                              
*-       Allocate UPATH which will belong to this user.                         
*-                                                                              
         LA    R2,1                                                             
         L     R3,CVPATHP          Start of path table                          
         WHILE (R2,LE,CVPATH#),BEGIN  Find available path entry...              
         IF    ('OC @R3(4),@R3',Z),BEGIN  It's available...                     
*-                                                                              
*-       Get memory for PATH control block and initialize                       
*-         with model path.                                                     
*-                                                                              
         L     R0,=A(L'UPATH)                                                   
         VCALL GETCORE             Get memory for PATH                          
*                                                                               
         LR    R4,R1                                                            
         WITH  (UPATH,R4),BEGIN                                                 
         MOVEL UPATH,L:=A(MPATH),L:=A(L'UPATH)   Move in model path             
         SET   UPATFHDR            Assume multi-line headers format             
*                                                                               
         ST    R2,UPATPNO          Save path number                             
*-                                                                              
*-       Fill in path information for a global UPATH.                           
*-                                                                              
         IF    (R5,NZ),BEGIN       Global...                                    
         SET   UPATFGLOBAL         This is a global path                        
         CLEAR UPATJCBP            No owning JCB currently                      
         MVC   UPATMY,CVWYLSSN     MYTAG=WYLBUR                                 
         END                                                                    
*-                                                                              
*-       Fill in path information for a user UPATH.                             
*-                                                                              
         ELSE  BEGIN               User...                                      
         MVC   UPATJCBP,CVCURJCB   Save our JCB                                 
         MVC   UPATMY,CVBLANKS     Construct MYTAG=gguuunnn                     
         MVC   UPATMY(2),CPSGRP                                                 
         MVC   UPATMY+2(3),CPSUSER                                              
         L2    R15,CPSANO                                                       
         IF    (R15,GT,1),BEGIN                                                 
         LA    R15,1000+@R15       Force high order zeros                       
         BTD   UPATMY+5,3,(R15)                                                 
         END                                                                    
         END                                                                    
*                                                                               
         LA    R15,CVECB                                                        
         ST    R15,UPATECB         Save ECB ptr                                 
         LA    R15,UPATSFLG                                                     
         ST    R15,UPATECBF        Save Suzan path flag ptr                     
         END                                                                    
*                                                                               
         ST    R4,@R3              Save UPATH ptr in table                      
*                                                                               
         IF    (R5,Z),'INCR R15,CPNPATHS'  Count our paths                      
*                                                                               
         LR    R1,R4               Path ptr                                     
         LR    R0,R2               Path number                                  
         CLEAR R15                 A-ok                                         
         EXIT  PATHALLO                                                         
         END                                                                    
*                                                                               
         LA    R3,@R3+4            Next entry                                   
         LA    R2,@R2+1                                                         
         END                                                                    
*-                                                                              
*-       Fall through if we can't allocate the path.                            
*-                                                                              
         SETMSG 'NO MORE PATHS'                                                 
         LA    R15,4               Bad news                                     
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHSETU -- Routine to make us the global UPATH owner.                       
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
PATHSETU XPROC                                                                  
         LR    R6,R15                                                           
         WITH  (UPATH,R6)                                                       
         FAIL  (UPATH,NE,'UPATH'),PATHSETU,'UPATH logic problem.'               
         FAIL  ^UPATFGLOBAL,PATHSETU,'Global UPATH problem.'                    
         FAIL  (UPATJCBP,NZ),PATHSETU,'Global UPATH owner problem.'             
*                                                                               
         L     R5,CVCURJCB                                                      
         ST    R5,UPATJCBP         Save our JCB ptr                             
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  PATHCLRU -- Routine to reset owner information for this global               
*    UPATH (we are done with it).                                               
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
PATHCLRU XPROC                                                                  
         LR    R6,R15                                                           
         WITH  (UPATH,R6)                                                       
         FAIL  (UPATH,NE,'UPATH'),PATHCLRU,'UPATH logic problem.'               
         FAIL  ^UPATFGLOBAL,PATHCLRU,'Global UPATH problem.'                    
         FAIL  (UPATJCBP,Z),PATHSETU,'Global UPATH owner problem.'              
*                                                                               
         CLEAR UPATJCBP            Reset owner                                  
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHGET -- Routine to get a path ptr given it's path                         
*    number.                                                                    
*                                                                               
*    On entry:                                                                  
*      R0 - path number                                                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - found                                                                
*             R0 = path number                                                  
*             R1 = UPATH ptr                                                    
*      4 - not found                                                            
*             R1,R0 = error msg loc, len                                        
*                                                                               
PATHGET  XPROC (R2,LSR)                                                         
*-                                                                              
*-       Make sure path number is within acceptable range.                      
*-                                                                              
         IF    ((R0,NP),OR,(R0,GT,CVPATH#)),BEGIN                               
         SETMSG 'BAD PATH NUMBER'                                               
         LA    R15,4               Boo                                          
         EXIT  PATHGET                                                          
         END                                                                    
*-                                                                              
*-       Get UPATH ptr.                                                         
*-                                                                              
         LR    R2,R0               Path number                                  
         DECR  R2                  Relative to zero, not one                    
         SLL   R2,2                Times 4 for word offset                      
         A     R2,CVPATHP          Ptr to appropriate table entry               
         LT    R1,@R2              Get UPATH ptr                                
         BZ    PGETNONE            No path here                                 
*                                                                               
         WITH  (UPATH,R1),BEGIN                                                 
         FAIL  (UPATH,NE,'PATH'),PATHGET,'UPATH logic error.'                   
         IF    (UPATJCBP,NE,CVCURJCB),BEGIN  Not your path...                   
PGETNONE SETMSG 'NOT OPEN'                                                      
         LA    R15,4                                                            
         EXIT  PATHGET                                                          
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHOPEN -- Routine to open a user path.                                     
*                                                                               
*    On entry:                                                                  
*      R1  - @ 4 byte caller ID (or zero)                                       
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - opened                                                               
*      nz- problems; R1,R0 - error msg loc, len                                 
*                                                                               
POPNWA   RECORD BEGIN                                                           
POPNCALL DS    A                   Caller ID                                    
POPNWORD DS    F                   Working fullword                             
POPNPINL DS    F                   PINFO length                                 
POPNPINF DS    XL(L'PINFO)         PINFO area                                   
         END                                                                    
*-                                                                              
PATHOPEN XPROC POPNWA                                                           
         CLEAR POPNCALL            Assume no caller ID                          
         IF    (R1,NZ),'MVC POPNCALL,@R1'  Save caller ID                       
*                                                                               
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),POPENERR,'Path logic problem.'                 
*-                                                                              
*-       Build the PINFO area.                                                  
*-         Note:  This is NOT done if we are opening a global path.             
*-                                                                              
         IF    ^UPATFGLOBAL,BEGIN  Path belongs to us...                        
         LA    R4,POPNPINF                                                      
         WITH  (PINFO,R4)                                                       
         CLEAR PINFO                                                            
         MVC   PINFO(4),=CL4'PINF'                                              
         MVC   PINFOSYS,CVWYLSSN   Our subsystem name                           
         MVC   PINFOACC,CVBLANKS                                                
         MVC   PINFOACC(2),CPSGRP  Our account ("gg.uuu")                       
         MVI   PINFOACC+2,C'.'                                                  
         MVC   PINFOACC+3(3),CPSUSER                                            
         MVC   PINFOPRJ,CPSPROJ    Our project (subgroup)                       
         MVC   PINFOIFL,CPSKIFL    Our KWRIFL flags                             
         IF    CPFXAUTH,BEGIN      Authorized exec...                           
         SET   PINFOIFL.KWRIFSPR   Give sys privs to authorized exec            
         END                                                                    
         MVC   PINFOAFL,CPSKAFL    Our KWRAFL flags                             
         MVC   PINFOLNO,CPSNO      Our Milten line number                       
         MVC   PINFOID,CPSID       Our session id                               
         MVC   PINFONAM,CPSNAME    Our name                                     
         MVC   PINFOCAL,POPNCALL   Our caller ID                                
*                                                                               
         L     R1,CVCURJCB                                                      
         WITH  (JCB,R1),'L R1,JCBSINP'                                          
         WITH  (SIN,R1),BEGIN                                                   
         IF    (SIN,EQ,'SIN'),'MVC PINFOTAG,SINSTAG'  Our ses tag               
         END                                                                    
*                                                                               
         MVC   POPNPINL,=A(L'PINFO)  Length of area                             
*                                                                               
         LA    R1,POPNPINL         PINFO param                                  
         ST    R1,UPATPINP         Save PINFO ptr in path                       
         END                                                                    
*                                                                               
*test    IF    CVFTEST,'MVC UPATBUF,=F"2048"'  Force small buffer               
*-                                                                              
*-       Open the path.                                                         
*-                                                                              
         SET   UPATFOPENING        Path is opening                              
*                                                                               
         LA    R1,UPAT             Suzan path control block                     
         ST    R1,POPNWORD         Build parm (path addr)                       
         SET   POPNWORD.X'80'      Flag end of parm list                        
         SCOM  OPEN,LA:POPNWORD    Open the path                                
         IF    NZ,'SETMSG "OPEN FAILED"; B POPNRET'                             
*                                                                               
         CLEAR UPATPINP            (Neatness)                                   
*-                                                                              
*-       TEMPORARY -- No longer needed as of 11/91.  Niz                        
*-                                                                              
**DEL    IF    ^UPATFGLOBAL,BEGIN  Path belongs to us...                        
**DEL    SCOM  SETINFO,LA:POPNPINL,L:UPATMGC  Set path info                     
**DEL    END                                                                    
*                                                                               
         SETMSG 'OK'                                                            
         CLEAR R15                 Set A-ok return code                         
*-                                                                              
*-       Wait for partner to open his side                                      
*-         of the path if WAIT specified.                                       
*-                                                                              
         IF    ^UPATFNOWAIT,BEGIN  Wait for partner...                          
         L     R0,UPATWAIT                                                      
         LA    R1,UPATFOPN                                                      
         LA    R15,UPATH                                                        
         ACALL PATHWAIT            Wait for open                                
         END                                                                    
*-                                                                              
*-       Finish processing path if the other side has opened.                   
*-                                                                              
         XPUSH R15,R1                                                           
         LA    R15,UPATH                                                        
         ACALL PATHOFIN            Finish processing path open                  
         XPOP  R15,R1                                                           
*                                                                               
         IF    (UPATFOPENING,AND,(@R1,EQ,'OK')),'SETMSG "OK OPENING"'           
*                                                                               
POPNRET  PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHOFIN -- Local routine to process path open status flag.                  
*    All we really need to do is turn off our OPENING flag.                     
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
PATHOFIN PROC                                                                   
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PATHOFIN,'PATHOFIN error.'                     
*-                                                                              
*-       Clear path opened status bit.  Also clear our opening flag.            
*-                                                                              
         IF    UPATSFLG.UPATFOPN,BEGIN  Path has opened...                      
         CLEAR UPATSFLG.UPATFOPN,MODE=LOCKED,REF=UPATH                          
         CLEAR UPATFOPENING        We are no longer opening                     
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHINFO -- Routine to get path partner information.                         
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit:                                                                   
*      UPATH information fields are filled in                                   
*                                                                               
PIWA     RECORD BEGIN                                                           
PIPARMS  DS    2A                  Suzan INFO parm: loc, len                    
*                                                                               
PIASCBP  DS    A                   Info:  Partner's ASCB ptr                    
PIBUFSIZ DS    F                   Info:  Partner's buffer size                 
PIPATHNM DS    CL8                 Info:  Partner's path name                   
PIXACTP  DS    A                   Info:  Input XACT chain ptr                  
         DS    XL16                Info:  Zeros (reserved)                      
PIPINFO  DS    XL(L'PINFO)         Info:  Partner's "PINFO"                     
PIINFO   EQU   PIASCBP,*-PIASCBP,C'X'                                           
*                                                                               
PIWORK   DS    XL64                Local work area                              
         END                                                                    
*-                                                                              
PATHINFO XPROC PIWA                                                             
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PATHINFO,'PATHINFO error.'                     
*-                                                                              
*-       Get path information from Suzan.                                       
*-                                                                              
         LA    R0,PIINFO           Addr of area                                 
         LA    R1,L'PIINFO         Length                                       
         STM   R0,R1,PIPARMS                                                    
         SET   PIPARMS.X'80'       Mark as end of list                          
*                                                                               
         SCOM  INFO,PIPARMS,L:UPATMGC  Get Suzan info                           
         IF    (R15,NZ),EXIT       Couldn't get info, forget it                 
*                                                                               
         IF    (PIASCBP,Z),EXIT    No partner's ASCB, forget it                 
*                                                                               
         MVC   UPATPASC,PIASCBP    Save partner's ASCB ptr                      
*-                                                                              
*-       Save partner information when PINFO is present.                        
*-                                                                              
         LA    R4,PIPINFO                                                       
         WITH  (PINFO,R4)                                                       
         IF    (PINFO,EQ,'PINF'),BEGIN  We have info...                         
         MVC   UPATPJOB,PINFOSYS   Save partner's "jobname"                     
         MVC   UPATPACT,PINFOACC   Save partner's account                       
         MVC   UPATPLNO,PINFOLNO   Save partner's line number                   
         MVC   UPATPNAM,PINFONAM   Save partner's user name                     
         MVC   UPATPTAG,PINFOTAG   Save partner's session tag                   
         END                                                                    
*-                                                                              
*-       Save partner information for batch jobs (no PINFO).                    
*-                                                                              
         ELSE  BEGIN               No PINFO, get jobname...                     
         HASPSERV JOBNAME,PIWORK,ASCB=UPATPASC  Get jobname                     
         MVC   UPATPJOB,PIWORK     Save jobname                                 
*                                                                               
         HASPSERV JOBACCT,PIWORK,ASCB=UPATPASC  Get account                     
         MVC   UPATPACT,CVBLANKS   Form "gg.uuu"...                             
         MVC   UPATPACT(2),PIWORK+3                                             
         MVI   UPATPACT+2,C'.'                                                  
         MVC   UPATPACT+3(3),PIWORK                                             
*                                                                               
         MVC   UPATPLNO,=H'-1'     No line number                               
         CLEAR UPATPNAM            No user name                                 
         END                                                                    
*                                                                               
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHRDCK -- Routine to read a new Suzan transaction                          
*    if there is no data remaining in the current transaction.                  
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok (check UPATDLOC,UPATDLEN)                                         
*      nz- problems; R1,R0 - error msg loc, len                                 
*                                                                               
PATHRDCK XPROC (R2,LSR)                                                         
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PATHRD1,'PATHRDCK error.'                      
*-                                                                              
*-       Try sending pending transactions now if full queue emptied.            
*-                                                                              
         IF    UPATSFLG.UPATFFQE,BEGIN  Full queue empty...                     
         IF    (UPATJCBP,NZ),EXIT  It's not a global path, skip this            
*                                                                               
         LA    R15,UPATH                                                        
         ACALL PATHSNDQ                                                         
         END                                                                    
*-                                                                              
*-       Check to see if there is data in the current transaction.              
*-                                                                              
         IF    (UPATDLEN,NZ),PRCHKOK  Fine, scram                               
*-                                                                              
*-       Get the next transaction and process it's header.                      
*-                                                                              
         IF    UPATSFLG.UPATFNI,BEGIN  We have new info...                      
         CLEAR UPATSFLG.UPATFNI,MODE=LOCKED,REF=UPATH  Reset NI                 
*                                                                               
         SCOM  FREELOC,0,L:UPATMGC  Get next transaction                        
         IF    (R15,NZ),BEGIN                                                   
         ACALL PATHRC              Get error msg text                           
         EXIT  PATHRDCK                                                         
         END                                                                    
*                                                                               
         IF    (R0,Z),PRCHKOK      Nothing to read, scram                       
*                                                                               
         ST    R1,UPATDLOC         Save data location                           
         ST    R0,UPATDLEN         ...and remaining length                      
         SET   UPATSFLG.UPATFNI,MODE=LOCKED,REF=UPATH  Set NI                   
         END                                                                    
*                                                                               
PRCHKOK  SETMSG 'PATHRDCK OK'                                                   
         CLEAR R15                 A-ok                                         
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHREAD -- Routine to read the next line from the path buffer.              
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*        0 - ok;        R1,R0 - line loc, len                                   
*       -4 - timeout;   R1,R0 - error msg loc, len                              
*      pos - problems;  R1,R0 - error msg loc, len                              
*                                                                               
PATHREAD XPROC (R2,LSR)                                                         
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PRDERR,'Path logic error.'                     
*-                                                                              
*-       Finish processing path open now, if necessary.                         
*-                                                                              
         IF    UPATSFLG.UPATFOPN,'LA R15,UPATH; ACALL PATHOFIN'                 
*-                                                                              
*-       Check to see if there is still data in the current packet.             
*-                                                                              
PRDRETRY IF    (UPATDLEN,Z),BEGIN  No data, go check for more...                
         LA    R15,UPATH                                                        
         ACALL PATHRDCK            Check for more data                          
         BNZ   PRDEXIT                                                          
         END                                                                    
*-                                                                              
*-       Wait for a packet if there is no new data.                             
*-                                                                              
         IF    (UPATDLEN,Z),BEGIN  No data...                                   
         IF    UPATSFLG.UPATFCLS,BEGIN  Closing...                              
         SETMSG 'PATH CLOSED'                                                   
         LA    R15,20                                                           
         B     PRDEXIT                                                          
         END                                                                    
*                                                                               
         IF    ^UPATFNOWAIT,BEGIN  Wait for a packet...                         
         L     R0,UPATWAIT         Timeout time (in seconds)                    
         LA    R1,UPATFNI+UPATFCLS  New info or closing                         
         LA    R15,UPATH                                                        
         ACALL PATHWAIT            Wait for a post                              
         BNZ   PRDEXIT             Attn or timeout, scram                       
         B     PRDRETRY            Try it again                                 
         END                                                                    
         END                                                                    
*                                                                               
         L     R1,UPATDLOC         Start of data                                
         LT    R0,UPATDLEN         Total data length                            
         IF    Z,'SETMSG "NO DATA"; LH R15,=H"-4"; B PRDEXIT'                   
         CLEAR UPATDLOC,UPATDLEN   Assume we will return everything             
*-                                                                              
*-       Deblock buffer if multiple lines can be in a buffer.                   
*-                                                                              
         IF    UPATFHDR,BEGIN      Pick out a single line...                    
         LR    R3,R1               Start of data                                
         LR    R2,R0               Total data length                            
*-                                                                              
*-       Return pointer to next line of data.                                   
*-         R1,R0 = line loc, len                                                
*-                                                                              
         L     R0,@R3              Get length                                   
         LA    R3,@R3+4            Adjust for length                            
         SH    R2,=H'4'                                                         
         IF    NEG,'CLEAR R2'                                                   
         IF    (R0,LGT,R2),'LR R0,R2'  Not too much now                         
         LR    R1,R3               Start of text                                
         AR    R3,R0               Adjust for data bytes                        
         SR    R2,R0                                                            
         ST    R3,UPATDLOC                                                      
         ST    R2,UPATDLEN                                                      
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
PRDEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHWRIT -- Routine to write data to across the path (called                 
*    by the PATHSEG routine to process SEGWR).                                  
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*      R1,R0 - message loc, len                                                 
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      nz- path problems                                                        
*                                                                               
PWRWA    RECORD BEGIN                                                           
PWRDATAA DS    A                   SCOM parm: address                           
PWRDATAL DS    F                   SCOM parm: length                            
         END                                                                    
*-                                                                              
PATHWRIT XPROC PWRWA                                                            
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PWRERR,'Path logic error.'                     
*-                                                                              
*-       Finish processing path open now, if necessary.                         
*-                                                                              
         IF    UPATSFLG.UPATFOPN,'LA R15,UPATH; ACALL PATHOFIN'                 
*-                                                                              
*-       Send any pending transactions first.                                   
*-                                                                              
         IF    (UPATWRQH,NZ),BEGIN  Send pending xacts...                       
         LA    R15,UPATH                                                        
         ACALL PATHSNDQ            Send pending stuff                           
         IF    NZ,BEGIN            We couldn't send it all...                   
         LA    R15,UPATH                                                        
         ACALL PATHADDQ            Queue the current xact                       
         CLEAR R15                 A-OK                                         
         B     PWREXIT                                                          
         END                                                                    
         END                                                                    
*-                                                                              
*-       Send this transaction.                                                 
*-                                                                              
         ST    R1,PWRDATAA         Seg data ptrs                                
         ST    R0,PWRDATAL                                                      
         SET   PWRDATAA.X'80'      Set VL bit                                   
*                                                                               
PWRRETRY LABEL ,                                                                
         COMMENT CLEAR FULLQ POST FLAG NOW,                                     
         CLEAR UPATSFLG.UPATFFQE,MODE=LOCKED,REF=UPATH  Reset FQE               
         SCOM  SEND,PWRDATAA,L:UPATMGC                                          
         IF    (R15,NZ),BEGIN      Couldn't send...                             
         XPUSH R15,R2                                                           
         LR    R2,R15                                                           
         DEBUG 'PATHWRIT send error, rc=',R2                                    
         XPOP  R15,R2                                                           
*                                                                               
         ACALL PATHRC              Get return code string                       
*                                                                               
         IF    (R15,EQ,=A(UPATRBAF)),BEGIN  Buffer full...                      
         IF    UPATFNOFULLQWAIT,EXIT  Can't wait, report problem                
*-                                                                              
*-       If it is a global path not owned by anyone then we must                
*-         simply queue the request locally.                                    
*-                                                                              
         IF    (UPATJCBP,Z),BEGIN  No ownership...                              
         DEBUG 'PATHWRIT queueing local xact for later resend'                  
         SETMSG L:PWRDATAA,L:PWRDATAL                                           
         LA    R1,@R1                                                           
         LA    R15,UPATH                                                        
         ACALL PATHADDQ            Queue the transaction for later              
         CLEAR R15                                                              
         B     PWREXIT             Scram                                        
         END                                                                    
*-                                                                              
*-       The path is owned by a user, so we will wait that user                 
*-         until the full queue empties.                                        
*-                                                                              
         L     R0,UPATWAIT                                                      
         LA    R1,UPATFFQE+UPATFCLS  FullQ emptied or closing                   
         LA    R15,UPATH                                                        
         ACALL PATHWAIT            Wait for buffer queue to empty               
         BZ    PWRRETRY            Loop back and try it again                   
*                                                                               
         IF    (UPATRCMP,Z),BEGIN  Only set it the first time...                
         STM   R0,R1,UPATRCMP      Save return code string ptrs                 
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
PWREXIT  IF    (R15,NZ),BEGIN                                                   
         XPUSH R15,R2                                                           
         LR    R2,R15                                                           
         DEBUG 'PATHWRIT returns rc=',R2                                        
         XPOP  R15,R2                                                           
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHSEG -- Seg processing routine to handle writing                          
*    data across the Suzan path.                                                
*                                                                               
*    On entry:                                                                  
*      R15 - SEGCB ptr                                                          
*                                                                               
PATHSEG  XPROC                                                                  
*                                                                               
         LR    R5,R15                                                           
         WITH  (SEGCB,R5)                                                       
*                                                                               
         L     R6,SEGCBUSR         Seg user field points to UPATH               
         WITH  (UPATH,R6)                                                       
         FAIL  (UPATH,NE,'PATH'),PATHSEG,'Path logic error.'                    
*-                                                                              
*-       SEGWR (or overflow).                                                   
*-                                                                              
         IF    (SEGCBWR,OR,SEGCBOVF),BEGIN  SEGWR...                            
         LTR   R2,R0               Current buffer length                        
         IF    NP,EXIT             Nothing to write, scram                      
*                                                                               
         LA    R15,UPATH                                                        
         ACALL PATHWRIT            Send data across Suzan path                  
*                                                                               
         LCR   R0,R2               For overflow: nbytes processed               
         PRETURN (R0)                                                           
         END                                                                    
*-                                                                              
*-       Post processing (set return code only).                                
*-                                                                              
         IF    SEGCBSPP,BEGIN      Post processing...                           
         CLEAR R0                  Assume A-ok                                  
         IF    (UPATRCMP,NZ),'LA R0,4'  Trouble                                 
         PRETURN (R0)              Return the rc                                
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHCLS -- Routine to close and free the UPATH.                              
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 = closed                                                               
*                                                                               
PATHCLS  XPROC                                                                  
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PFREERR,'Path logic error.'                    
*-                                                                              
*-       Free pending transactions in send queue.                               
*-                                                                              
         LA    R15,UPATH                                                        
         ACALL PATHDELQ            Delete pending send queue                    
*-                                                                              
*-       Free related network information if this is a net path.                
*-                                                                              
         LA    R15,UPATH                                                        
         VCALL NPATPCLS            Tell NPAT that path is closing               
*-                                                                              
*-       Free the user path id for this path.                                   
*-                                                                              
         L     R2,UPATPNO          Path number                                  
         FAIL  ((R2,NP),OR,(R2,GT,CVPATH#)),PATHCLS,'Path close err'            
         DECR  R2                  Relative to zero, not one                    
         SLL   R2,2                Times 4                                      
         A     R2,CVPATHP          Our entry ptr                                
         CLEAR (@R2,4)             Zero our entry ptr                           
*                                                                               
         IF    ^UPATFGLOBAL,BEGIN  User (non global) path...                    
         DECR  R15,CPNPATHS        One less open user path now                  
         END                                                                    
*-                                                                              
*-       Close path (we don't care if it's not open).                           
*-                                                                              
         FAIL  (UPATLINK,NZ),PCLSERR2                                           
         SCOM  CLOSE,0,L:UPATMGC   Close path                                   
*                                                                               
         FAIL  (UPATLINK,NZ),PFREERR2                                           
*                                                                               
         MVC   UPATH(4),=C'FPTH'   Zap id                                       
*-                                                                              
*-       Free UPATH memory.                                                     
*-                                                                              
         LA    R1,UPATH                                                         
         VCALL FREECORE            Release memory                               
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHRC -- Routine to form string from return code.                           
*                                                                               
*    On entry:                                                                  
*      R15 - return code from Suzan                                             
*                                                                               
*    On exit:                                                                   
*      R1,R0 - message loc, len                                                 
*                                                                               
PATHRC   XPROC (R2,LSR)                                                         
         SETMSG 'OK'                                                            
         IF    (R15,NZ),'SETMSG "ERROR"'                                        
         IF    (R15,EQ,=A(UPATRIFC)),'SETMSG "BAD SUZAN FUNCTION CODE"'         
         IF    (R15,EQ,=A(UPATRPMW)),'SETMSG "BAD SUZAN CONTROL BLOCK"'         
         IF    (R15,EQ,=A(UPATRBAF)),'SETMSG "BUFFER FULL"'                     
         IF    (R15,EQ,=A(UPATRNOP)),'SETMSG "NO PARTNER"'                      
         IF    (R15,EQ,=A(UPATRBOM)),'SETMSG "TOO BIG"'                         
         IF    (R15,EQ,=A(UPATRIBS)),'SETMSG "BUFFER TOO SMALL"'                
         IF    (R15,EQ,=A(UPATRBPI)),'SETMSG "BAD SUZAN BUFFER ADDR"'           
         IF    (R15,EQ,=A(UPATRIAD)),'SETMSG "BAD SUZAN ADDR"'                  
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHQ -- Routine to put all the user's paths whose posts                     
*    can interrupt terminal I/O on the active queue (which gets                 
*    checked by the dispatcher).                                                
*                                                                               
*    Note that PATHDEQ must be called before doing any more                     
*    path I/O.  Normally TREAD calls this routine before doing                  
*    a terminal read (if the read is interruptible) and then                    
*    calls PATHDEQ immediately upon completion.                                 
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      4 - a path has already been posted (no action taken)                     
*                                                                               
PATHQ    XPROC                                                                  
         L     R6,CVCURJCB                                                      
         WITH  (JCB,R6)                                                         
*-                                                                              
*-       Go through all user paths.                                             
*-                                                                              
         LA    R3,1                                                             
         L     R4,CVPATHP                                                       
         WHILE (R3,LE,CVPATH#),BEGIN                                            
         IF    ('LT R5,@R4',NZ),BEGIN                                           
         WITH  (UPATH,R5)                                                       
         IF    (R6,EQ,UPATJCBP),BEGIN  Our path...                              
*                                                                               
         FAIL  (UPATH,NE,'PATH'),PINTQ1,'PATHQ logic error.'                    
         FAIL  (UPATLINK,NZ),PINTQ2,'PATHQ logic error.'                        
*                                                                               
         IF    ^UPATFINT,EXIT      Skip this path                               
*-                                                                              
*-       Check to see if the path is already posted.                            
*-                                                                              
         IF    UPATSFLG.UPATFNI,BEGIN  New info...                              
         LA    R15,UPATH                                                        
         ACALL PATHRDCK            Make sure we really have new info            
         END                                                                    
*                                                                               
         IF    UPATSFLG.UPATFNI+UPATFOPN+UPATFCLS,BEGIN  Do it...               
         ACALL PATHDEQ             Dequeue prev Q'd paths                       
         LA    R15,4               Hey, already posted                          
         B     PATHINQX                                                         
         END                                                                    
*-                                                                              
*-       Add path to dispatcher's active path queue (see PATHWAIT).             
*-                                                                              
         MVI   UPATPMSK,UPATFNI+UPATFOPN+UPATFCLS  Post bits                    
         MVC   UPATXCLK,=F'-1'     No timeout                                   
         MVC   UPATLINK,CVPATHQH   Linked list                                  
         ST    R5,CVPATHQH         We are the new queue head                    
         END                                                                    
         END                                                                    
*                                                                               
         LA    R4,@R4+4            Next path ptr                                
         LA    R3,@R3+1            Next path number                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
PATHINQX PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHDEQ -- Routine to take all the user's paths off the                      
*    active queue.  This routine is the 'dequeue' call for                      
*    PATHQ; see the comments for that routine.                                  
*                                                                               
PATHDEQ  XPROC                                                                  
         L     R6,CVCURJCB                                                      
         WITH  (JCB,R6)                                                         
*-                                                                              
*-       Take all of this user's paths off the queue.                           
*-                                                                              
         LA    R3,CVPATHQH-(UPATLINK-UPATH)  Dummy queue head                   
         LOOP  BEGIN                                                            
         LR    R2,R3               Save prev ptr                                
         WITH  (UPATH,R3)                                                       
         LT    R3,UPATLINK         Next queue entry                             
         IF    Z,EXIT              All done, scram                              
*                                                                               
         IF    (R6,EQ,UPATJCBP),BEGIN  Our path...                              
         L     R15,UPATLINK        Next in queue                                
         CLEAR UPATLINK            (Neatness)                                   
         LR    R3,R2               Back up                                      
         ST    R15,UPATLINK        This takes us out of the queue               
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHWAIT -- Routine to wait the user until his path                          
*    has been posted.  Note that ATTN will interrupt this wait.                 
*                                                                               
*    On entry:                                                                  
*      R0  - Max number of seconds before timeout (0=infinite)                  
*      R1  - Suzan post bits to check for                                       
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - posted (see UPATSFLG byte);  R1,R0 = "OK"                            
*      4 - ATTN;                        R1,R0 = "ATTN"                          
*     -4 - TIMEOUT;                     R1,R0 = "TIMEOUT"                       
*                                                                               
PATHWAIT XPROC (R2,LSR)                                                         
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         L     R6,CVCURJCB                                                      
         WITH  (JCB,R6)                                                         
*                                                                               
         FAIL  (UPATH,NE,'PATH'),PATHWT1,'PATH WAIT error.'                     
         FAIL  (UPATLINK,NZ),PATHWT2,'PATH WAIT error.'                         
         FAIL  (R6,NE,UPATJCBP),PATHWT3,'PATH WAIT error.'                      
*                                                                               
         STC   R1,UPATPMSK         Save post bits                               
*-                                                                              
*-       Save timeout clock value in UPATH.                                     
*-                                                                              
         L     R15,=F'-1'          No timeout possible                          
         IF    (R0,NZ),BEGIN       Timeout specified...                         
         L     R15,CVDSPCLK        Current TOD clock                            
         AR    R15,R0                                                           
         END                                                                    
         ST    R15,UPATXCLK        Clock when timeout happens                   
*-                                                                              
*-       Return immediately if we are already posted.                           
*-                                                                              
         IF    UPATSFLG.UPATFNI,BEGIN  New info...                              
         LA    R15,UPATH                                                        
         ACALL PATHRDCK            Make sure we really have new info            
         END                                                                    
*                                                                               
         LC    R2,UPATPMSK         Port mask (thanks, WSF!)                     
         EX    R2,'TM UPATSFLG,*-*'  Are we still posted?                       
         IF    NZ,BEGIN            Yes...                                       
         VCALL SLICECHK            Check for timeslice expiration               
         B     PWTDONE             All done, scram                              
         END                                                                    
*-                                                                              
*-       Go to the dispatcher (and wait to be posted).                          
*-                                                                              
         MVC   UPATLINK,CVPATHQH   Link the rest to us                          
         ST    R5,CVPATHQH         Save new queue head                          
*                                                                               
         SET   JCBWWFPT            Waiting for path post                        
         PAUSE ,                                                                
*-                                                                              
*-       Returns when either a Suzan post bit is on or if an                    
*-         ATTN has been received.                                              
*-                                                                              
         LA    R3,CVPATHQH-(UPATLINK-UPATH)  Dummy queue head                   
         LOOP  BEGIN               Go through UPATH queue...                    
         LR    R2,R3               Save prev ptr                                
         WITH  (UPATH,R3)                                                       
         LT    R3,UPATLINK         Next queue entry                             
         IF    Z,EXIT              All done, scram                              
         FAIL  (UPATH,NE,'PATH'),PWAIT  (Better safe than sloppy)               
*                                                                               
         IF    (R3,EQ,R5),BEGIN    Our path...                                  
         L     R15,UPATLINK        Next in queue                                
         CLEAR UPATLINK            (Neatness)                                   
         LR    R3,R2               Back up (neatness, also)                     
         ST    R15,UPATLINK        This takes us out of the queue               
         B     PWTNOPST            All done                                     
         END                                                                    
         END                                                                    
*                                                                               
PWTNOPST LABEL                                                                  
*-                                                                              
*-       Finish up.                                                             
*-                                                                              
PWTDONE  TSTAT ,                   Set rc                                       
         SETMSG 'OK'                Assume OK                                   
         IF    NZ,BEGIN                                                         
         IF    (CPFRCVY),'CLEAR R15'                                            
         ELSE  'SETMSG "ATTN"'     ATTN                                         
         END                                                                    
*                                                                               
         IF    (UPATXCLK,LT,CVDSPCLK),BEGIN  Timeout...                         
         LH    R15,=H'-4'                                                       
         SETMSG 'TIMEOUT'                                                       
         END                                                                    
*                                                                               
         PEND                                                                   
         TITLE 'Path Interface Routines -- Dispatcher Subroutines'              
*box                                                                            
*                                                                               
*        The following routines can be called in dispatcher or                  
*        user mode.  As a result, no CP addressability can be                   
*        assumed.                                                               
*                                                                               
         DROP  CP                  No CP addressibility                         
         SPACE 4                                                                
*box                                                                            
*                                                                               
*  PATHADDQ -- Routine to add a transaction to the end of the                   
*    pending send queue.                                                        
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*      R1,R0 - transaction location, length                                     
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
PATHADDQ PROC                                                                   
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PATHSNDQ,'Path logic error.'                   
         LR    R4,R1                                                            
         LR    R3,R0                                                            
*-                                                                              
*-       Allocate memory to save transaction.                                   
*-                                                                              
         LA    R0,@R3+8                                                         
         VCALL GETCORE             Get memory for pending xact                  
         LR    R6,R1                                                            
         CLEAR (@R6,4)             Zero forward queue ptr                       
         ST    R3,@R6+4            Save transaction length                      
         MOVEL @R6+8,(R4),(R3)     Save transaction                             
*-                                                                              
*-       Add the transaction to the end of the queue.                           
*-                                                                              
         IF    (UPATWRQH,Z),BEGIN  Nothing in queue...                          
         ST    R6,UPATWRQH         Save queue head                              
         ST    R6,UPATWRQT         Save queue tail                              
         END                                                                    
*                                                                               
         ELSE  BEGIN               Add to end of existing queue...              
         L     R15,UPATWRQT        Last entry                                   
         ST    R6,@R15             Point last entry to us                       
         ST    R6,UPATWRQT         We are the new queue tail                    
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHDELQ -- Routine to delete the pending send queue                         
*    (presumably because of a path closure, etc.).                              
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*                                                                               
PATHDELQ PROC                                                                   
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PATHDELQ,'Path logic error.'                   
*-                                                                              
*-       Free all pending transactions.                                         
*-                                                                              
         WHILE (UPATWRQH,NZ),BEGIN  Free all pending transactions...            
         L     R4,UPATWRQH         Get first entry                              
         L     R15,@R4             Get next entry ptr                           
         ST    R15,UPATWRQH        Set new queue head ptr                       
         IF    (R15,Z),'ST R15,UPATWRQT'  If nothing left, zero tail            
*                                                                               
         LA    R1,@R4              Buffer ptr                                   
         MVC   @R1(4),=F'-1'       (Neatness)                                   
         VCALL FREECORE                                                         
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATHSNDQ -- Routine to send the queue of pending transactions                
*    to the partner.  Presumably these transactions were added                  
*    to the queue because of a Suzan full queue condition.                      
*                                                                               
*    On entry:                                                                  
*      R15 - UPATH ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - no pending transactions                                              
*      4 - couldn't send everything (full queue)                                
*                                                                               
PSNDWA   RECORD BEGIN                                                           
PSNDADDR DS    A                   SCOM parm: address                           
PSNDLEN  DS    F                   SCOM parm: length                            
         END                                                                    
*-                                                                              
PATHSNDQ PROC  PSNDWA                                                           
         LR    R5,R15                                                           
         WITH  (UPATH,R5)                                                       
         FAIL  (UPATH,NE,'PATH'),PATHSNDQ,'Path logic error.'                   
*-                                                                              
*-       Reset Suzan "full queue emptied" post bit.                             
*-                                                                              
         CLEAR UPATSFLG.UPATFFQE,MODE=LOCKED,REF=UPATH  Reset FQE               
*-                                                                              
*-       Send all pending transactions.                                         
*-                                                                              
         WHILE (UPATWRQH,NZ),BEGIN  Send all pending transactions...            
         L     R4,UPATWRQH         Get first entry                              
*                                                                               
         LA    R1,@R4+8            Transaction location                         
         L     R0,@R4+4            Transaction length                           
         ST    R1,PSNDADDR         Save ptr                                     
         ST    R0,PSNDLEN          Save length                                  
         SET   PSNDADDR.X'80'      Set VL bit                                   
         SCOM  SEND,PSNDADDR,L:UPATMGC  Send it                                 
         IF    (R15,NZ),PSNDEXIT   Couldn't send, scram                         
*                                                                               
         L     R15,@R4             Get next entry ptr                           
         ST    R15,UPATWRQH        Set new queue head ptr                       
         IF    (R15,Z),'ST R15,UPATWRQT'  If nothing left, zero tail            
*                                                                               
         LA    R1,@R4              Buffer ptr                                   
         MVC   @R1(4),=F'-1'       (Neatness)                                   
         VCALL FREECORE                                                         
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
PSNDEXIT PEND                                                                   
         TITLE 'Path Interface Post Routine'                                    
*box                                                                            
*                                                                               
*  PATHPOST -- Routine to post any users waiting for ready user                 
*    paths.  Efficiency is a concern here, since this is called                 
*    every time the dispatcher is posted.                                       
*                                                                               
*    This routine is called by the dispatcher.                                  
*                                                                               
PATHPOST XPROC                                                                  
         LA    R5,CVPATHQH-(UPATLINK-UPATH)  Dummy queue head                   
         LOOP  BEGIN                                                            
         WITH  (UPATH,R5)                                                       
         LR    R4,R5               Save prev ptr                                
         LT    R5,UPATLINK         Next queue entry                             
         IF    Z,EXIT              All done, scram                              
         FAIL  (UPATH,NE,'PATH'),PPOST  (Better safe than sloppy)               
*-                                                                              
*-       Dispatch the user if bits are on in the Suzan post                     
*-         flag.  Dispatch the user if his maximum wait time has                
*-         been exceeded.                                                       
*-                                                                              
         IF    (UPATXCLK,LT,CVDSPCLK),PPOST  Timed out                          
*                                                                               
         LC    R2,UPATPMSK         Post bits we are interested in               
         EX    R2,'TM UPATSFLG,*-*'  Are we posted?                             
         IF    NZ,BEGIN            Yes...                                       
         LA    R15,UPATH                                                        
         ACALL PATHRDCK            Make sure we really have new info            
*                                                                               
         EX    R2,'TM UPATSFLG,*-*'  Are we still posted?                       
         IF    NZ,BEGIN            Fine, then post the user...                  
PPOST    L     R6,UPATJCBP         His JCB ptr                                  
         WITH  (JCB,R6)                                                         
         CLEAR JCBWWFPT            No longer waiting for path                   
         IF    (('LTH R15,JCBWFL',Z),AND,^JCBAPDSP),BEGIN                       
         SETUP JCB                                                              
         END                                                                    
*                                                                               
         ELSEIF JCBFTINT,BEGIN     Interruptible terminal I/O...                
         IF    UPATFINT,BEGIN      Path post can interrupt...                   
         LH    R0,JCBSEQ           User number                                  
         VCALL TBREAK              Halt his terminal I/O                        
         END                                                                    
         END                                                                    
*                                                                               
         ELSEIF JCBFWINT,BEGIN     Interruptible wait...                        
         IF    UPATFINT,BEGIN      Path post can interrupt...                   
         IF    ('LT R15,JCBTIMID',Z),EXIT  No timer, scram                      
         VCALL TIMERDQ             Purge timer                                  
         IF    NZ,EXIT             Timer already fired, scram                   
         CLEAR JCBTIMID            Reset timer id                               
         MVC   JCBTIMQL,=F'-1'     Reser timer queue link ptr                   
         CLEAR JCBWFTM             No longer waiting for timer                  
*                                                                               
         IF    (('LTH R15,JCBWFL',Z),AND,^JCBAPDSP),'SETUP JCB'                 
         END                                                                    
         END                                                                    
*                                                                               
         L     R15,UPATLINK        Next in queue                                
         CLEAR UPATLINK            (Neatness)                                   
         LR    R5,R4               Back up                                      
         ST    R15,UPATLINK        This takes us out of the queue               
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
         VLTORG                                                                 
         END   .                                                                
