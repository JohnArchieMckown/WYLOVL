WBUG     TITLE 'WYLBUR Debugger'                                                
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
         SYSDEFN                                                                
WYLWBUG  CSECT                                                                  
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
WBUG     IDENT 2025                11:49:38 01/25/02  (SLP)                     
         SPACE 2                                                                
*                                                                               
         PUSH  DSECTS                                                           
         COPY  CONTROL             Copy CV/CP                                   
         TITLE 'DSECTS'                                                         
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         EJECT                                                                  
SEGCB    RECORD 'SEGCB'                                                         
         POP   DSECTS                                                           
         TITLE 'WYLBUR Debugger'                                                
*-                                                                              
*-       LOCAL MACROS                                                           
*-                                                                              
         MACRO                                                                  
&L       COMMENT &OP                                                            
         MEND                                                                   
         SPACE 2                                                                
*                                                                               
         MACRO                                                                  
&L       STOP    &OP                                                            
         DC    H'0'                                                             
         MEND                                                                   
         SPACE 2                                                                
*-                                                                              
*-       INSTR MACRO,  CREATES ENTRY IN INSTRUCTION TABLE                       
*-                                                                              
         MACRO                                                                  
&L       INSTR &NAME,&TYPE,&OPCD                                                
&L       DC    XL1'&OPCD',AL1(L'I&TYPE),CL6'&NAME'                              
         MEND                                                                   
*                                                                               
         TITLE 'DEBUG DATA AREA'                                                
*box                                                                            
*                                                                               
*                                                                               
*  DBAREA - DEBUG DATA AREA                                                     
*                                                                               
*  Note: This is the debug data area dsect.  The actual debug                   
*        data area is at end of debug module, it is zeroed when                 
*        WYLBUR starts.  Debug is not reentrant.                                
*                                                                               
*                                                                               
DBDSECT  DSECT ,                  DEBUG DATA AREA DSECT                         
         DS    CL8                'DBAREA  '                                    
DBFLAG   FLAG  ,                                                                
         FLAG  DBACTIVE           DEBUG ACTIVE                                  
         FLAG  DBBREAK            DEBUG BREAK HAPPENING NOW                     
         FLAG  DBRNO              NO RECURSION, TRAPS MUST BE OFF               
DBCMDS   FLAG  ,                                                                
         FLAG  DBCLEAR            CLEAR DEBUG                                   
         FLAG  DBTRACE            TRACE IS ON                                   
DBMISC   FLAG  ,                                                                
         FLAG  DBEXECD            TRAPS IN DISPATCHER, NOT TRAPPED              
         FLAG  DBFMSG              DEBUG message is waiting                     
         FLAG  DBFMSGDISP          DEBUG message(s) from dispatcher             
*                                                                               
DBERJCB  DS    F                  JCB OF DEBUGER                                
DBEEJCB  DS    F                  JCB OF DEBUGEE                                
DBEECP   DS    F                  CP OF DEBUGEE                                 
*                                                                               
DBMSGQH  DS    A                   DEBUG message queue head                     
DBMSGQT  DS    A                   DEBUG message queue tail                     
*                                                                               
* BREAK INFO                                                                    
*                                                                               
DBIA     DS    F                  BREAK INSTRUCTION ADDR                        
DBCC     DS    F                  BREAK CC                                      
DBIC     DS    F                  BREAD INTERRUPTION CODE                       
DBILC    DS    F                  BREAK ILC (FROM PSW)                          
DBILEN   DS    F                  LENGTH OF TRAPPED INSTRUCTION                 
DBINSTR  DS    2F                 PLACE TO SIMULATE TRAPPED INSTR               
*                                                                               
DBPSW    DS    2F                 BREAK PSW                                     
DBPSWCC  EQU   DBPSW+2,1          PSW CC IS BITS 2-3                            
DBPSWIA  EQU   DBPSW+4,4          PSW INSTRUCTION ADDRESS                       
*                                                                               
DBREGS   DS    16F                BREAK REGISTERS                               
DBREG0   EQU   DBREGS+0*4                                                       
DBREG1   EQU   DBREGS+1*4                                                       
*                                                                               
* TRAP INFO                                                                     
*                                                                               
DBTRAPNF DS    4F                 TRAP INFO FOR CURRENT BREAK                   
DBTRAPS  DS    64F                16*4F TRAP ENTRIES                            
DBTRAPI  DS    4F                 SIMULATED INSTRUCTION TRAP                    
DBTRAPC  DS    4F                 SIMULATED CONTINUE TRAP                       
DBTRAPT  DS    4F                 TRACE TRAP                                    
DBTRAPE  DS    4F                 TRACE ENTRY TRAP                              
DBTRAPR  DS    4F                 TRACE RETURN TRAP STACK (16 DEEP)             
DBTRAPR2 DS    56F                TRACE RETURN TRAP STACK                       
DBTRAPRL DS    4F                 LAST TRAP IN RETURN TRAP STACK                
USERTC   EQU   16                 NUMBER OF USER TRAPS ALLOWED                  
SPECTC   EQU   20                 NUMBER OF SPECIAL TRAPS                       
RETTC    EQU   12                 NUMBER OF RETURN TRAPS                        
TRAPCODE EQU   X'09BB'            TRAP OP CODE, CAUSES 0C1                      
*                                                                               
DBTRAP   RECORD BEGIN ,,          TRAP DSECT                                    
DBTPADDR DS    F                  TRAP ADDRESS                                  
DBTPOPCD DS    H                  OP CODE OF TRAPED INSTRUCTION                 
DBTPTYPE FLAG  ,                  TYPE OF TRAP                                  
         FLAG  DBTPNORM           TRAP TYPE: NORMAL                             
         FLAG  DBTPINST           TRAP TYPE: SIMULATED INSTRUCTION              
         FLAG  DBTPCONT           TRAP TYPE: SIMULATED CONTINUE                 
         FLAG  DBTPTRC            TRAP TYPE: TRACE TRAP                         
         FLAG  DBTPNTY            TRAP TYPE: TRACE ENTRY TRAP                   
         FLAG  DBTPRET            TRAP TYPE: TRACE RETURN TRAP                  
         FLAG  DBTPIRPT           TRAP TYPE: PGM INTRUPT, NOT A TRAP            
DBRESV   FLAG  ,                  UNUSED BYTE                                   
DBTPNAME DS    CL8                TRACE TRAP NAME                               
DBTPINFO EQU   DBTPNAME           TRAP NAME OR TRAP INFO                        
DBTPNEXT DS    0H                 START OF NEXT TRAP IN LIST                    
         END                                                                    
*-                                                                              
*-                                                                              
*-                                                                              
DBSTKLEN EQU   512                DEBUG STACK LENGTH                            
*$ DEBUG STACK IS AT LAST BIT OF USER STACK, BE CAREFUL                         
*                                                                               
DBPAGENO DS    H                  DEBUGEE WPAGE NUMBER                          
DBPAR    DS    A                                                                
DBPBR    DS    A                                                                
*                                                                               
DBSPIEAD DS    F                  PUSH CVSPIEAD DURING BREAK                    
DBRTN    DS    A                  REQUEST ROUTINE ADDR                          
DBPARMS  DS    4F                 REQUEST ROUTINE PARMS                         
DBRETC   DS    F                  RETURN CODE FROM REQUEST ROUTINE              
DBTRCSAV DS    16F                TRACE SAVE AREA                               
*                                                                               
DBCP     DS    (CPXSIZE)X           DEBUGEE PAGES                               
DBSTACK  DS    (128*1024)X                                                      
DBDSTACK DS    (128*1024)X                                                      
DBHEAP   DS    (512*1024)X                                                      
DBPAGE   DS    (CVPSZ)X                                                         
*                                                                               
DBLENGTH EQU   *-DBDSECT                                                        
         EJECT                                                                  
IRECORD  RECORD BEGIN             INSTRUCTION TABLE ENTRY                       
IOPCD    DS    X                                                                
ITYPE    FLAG  ,                                                                
         FLAG  IRR                RR INSTRUCTION                                
         FLAG  IRX                RX INSTRUCTION                                
         FLAG  IRS                RS INSTRUCTION                                
         FLAG  ISI                SI INSTRUCTION                                
         FLAG  ISS                SS INSTRUCTION                                
         FLAG  IBCR               BCR INSTRUCTION                               
         FLAG  IBC                BC INSTRUCTION                                
         FLAG  IOTHER             OTHER INSTRUCTION                             
INAME    DS    CL6                NAME OF INSTRUCTION                           
INEXT    EQU   *                                                                
         END                                                                    
         SPACE 2                                                                
         COPY  SYMBOL                                                           
         SPACE 2                                                                
         COPY  TP                                                               
*                                                                               
*                                                                               
WYLWBUG  CSECT                                                                  
         TITLE 'WYLBUR Debugger'                                                
WYLWBUG  CSECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  DBUGINIT - initialize debug                                                  
*                                                                               
*                                                                               
DBUGINIT XPROC ,                                                                
*-                                                                              
*-       SET SPIE EXIT                                                          
*-                                                                              
*-       Note:  The only reason CVFNSPIE would be set would be if               
*-        WYLBUR was started with PARM=NOSPIE -- for debugging                  
*-        purposes.                                                             
*-                                                                              
         IF    ^CVFNSPIE,BEGIN     OK to set SPIE exit...                       
         ESPIE SET,SPIEPROC,(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)               
         END                                                                    
*-                                                                              
*-       ZERO DEBUG AREA                                                        
*-                                                                              
         L     R2,=A(DBAREA)                                                    
         L     R3,=A(DBLENGTH)                                                  
         SR    R5,R5                                                            
         MVCL  R2,R4                                                            
         L     R2,=A(DBAREA)                                                    
         MVC   0(8,R2),=CL8'DBAREA'                                             
*                                                                               
         PEND  ,                                                                
         TITLE 'DEBUG ROUTINE: process DEBUG string'                            
***                                                                             
***  DEBUG Seg Control Block.                                                   
***    (Pointed to by CVDEBUGP.  See DEBUG macro.)                              
***                                                                             
         ENTRY DEBUGSG                                                          
DEBUGSG  SEGCB DEBUGBUF,,RTN=DEBUGRTN                                           
*                                                                               
DEBUGBUF DS    CL300               DEBUG seg buffer                             
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DEBUGRTN -- Routine to process DEBUG statement.  This routine is             
*      entered as a SEG exit routine, with the SEGCB containing                 
*      a flag indicating what kind of action is desired.                        
*                                                                               
*    On entry:                                                                  
*      R15 - SEGCB ptr                                                          
*                                                                               
DEBUGRTN PROC  ,                                                                
         L     R6,=A(DBAREA)                                                    
         WITH  (DBDSECT,R6)                                                     
*                                                                               
         LR    R5,R15                                                           
         WITH  (SEGCB,R5)                                                       
*-                                                                              
*-       Before doing anything else, figure out if we should                    
*-         ignore this call (because it's not the debugee).                     
*-                                                                              
         IF    ^DBACTIVE,DEBUGXIT  No debugging, scram                          
*                                                                               
         IF    (CVCURJCB,NZ),BEGIN  Running in user mode...                     
         IF    (DBEEJCB,Z),BEGIN   No debugee yet...                            
         IF    (CVCURJCB,EQ,DBERJCB),DEBUGXIT  Can't stop debugger              
         MVC   DBEEJCB,CVCURJCB    Assign debugee                               
         END                                                                    
*                                                                               
         IF    (DBEEJCB,NE,CVCURJCB),DEBUGXIT  Not for us, skip it              
         END                                                                    
*                                                                               
*-                                                                              
*-       SEGCR/SEGWR.                                                           
*-                                                                              
         IF    (SEGCBCR,OR,SEGCBWR),BEGIN  Write...                             
*-                                                                              
*-       Save the message text in a linked list of messages.                    
*-                                                                              
         LR    R2,R0               Current message length                       
         LR    R3,R1               Current message location                     
*                                                                               
         LA    R0,8+@R2            Get enough memory for msg+link               
         VCALL GETCORE                                                          
         LR    R4,R1               Save message buffer ptr                      
         CLEAR (@R4,4)             No forward link yet                          
         ST    R2,@R4+4            Message length                               
         MOVEL @R4+8,@R3,(R2)      Copy message text                            
*                                                                               
         LT    R2,DBMSGQT          Last message in queue                        
         IF    Z,BEGIN             We are the only message...                   
         ST    R4,DBMSGQH          We are the queue head                        
         ST    R4,DBMSGQT          We are the queue tail too                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Add our message to the end...                
         ST    R4,@R2              Link us in old last msg                      
         ST    R4,DBMSGQT          We are now the last                          
         END                                                                    
*-                                                                              
*-       We are in dispatcher mode now, so set a flag for the                   
*-          dispatcher to call DEBDISP when it's safe to                        
*-          start up the "debugger" user.                                       
*-                                                                              
         IF    (CVCURJCB,Z),BEGIN  Dispatcher mode...                           
         SET   CVFDEBUGIO          DEBUG message(s) waiting                     
         CLEAR R15                                                              
         B     DEBUGXIT            Scram                                        
         END                                                                    
*-                                                                              
*-       We are running the "debugee" user now, so we will run                  
*-          the debugger user and suspend ourselves.                            
*-                                                                              
         CLEAR SEGCBLENF,SEGCBMRKF Reset seg (reentry case)                     
         CLEAR CVFDEBUGIO          We'll pick up these msgs                     
*                                                                               
***???   ACALL LOCKP               Lock user's pages                            
***???   ACALL SAVEP               Save user's CP, STACK and HEAP               
***???   SET   DBBREAK             Session break now in progress                
         SET   DBFMSG              DEBUG message is waiting                     
         CLEAR DBFMSGDISP          (Shouldn't ever be set)                      
*-                                                                              
*-       Put debugger on the run queue and pause us.                            
*-                                                                              
         L     R1,DBERJCB                                                       
         ACALL STARTJCB            Start debugger                               
*                                                                               
         L     R1,DBEEJCB                                                       
         ACALL PAUSEJCB            Pause us                                     
*-                                                                              
*-       We resume execution here after the debugger has written                
*-         out the debug text to the control terminal.                          
*-                                                                              
***????  CLEAR DBBREAK             Done with session break                      
*????    ACALL RESTOREP            Restore user's CP, STACK, HEAP               
*????    ACALL UNLOCKP             Unlock user's pages                          
*                                                                               
         CLEAR R15                 A-ok                                         
         END                                                                    
*                                                                               
DEBUGXIT PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DEBDISP -- Called by the dispatcher to write the queued up                   
*    messages.  We put the debugger line on the setup queue and                 
*    leave.                                                                     
*                                                                               
DEBDISP  XPROC ,                                                                
         L     R6,=A(DBAREA)                                                    
         WITH  (DBDSECT,R6)                                                     
*                                                                               
         IF    (DBMSGQH,NZ),BEGIN  We have DEBUG messages waiting...            
         SET   DBFMSGDISP          DEBUG message from dispatcher                
         CLEAR DBFMSG              (Shouldn't ever be set)                      
*-                                                                              
*-       Put debugger on the setup queue.                                       
*-                                                                              
         L     R1,DBERJCB                                                       
         ACALL STARTJCB            Start debugger                               
*                                                                               
         MVI   CVECB,X'40'         We have work now                             
         END                                                                    
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DEBWRITE -- Called when running under the debugger's terminal.               
*                                                                               
*    On entry:                                                                  
*      DBAREA has flag set if we have a message                                 
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK                                                                   
*      nz- ATTN, logging off, etc.                                              
*                                                                               
DEBWRITE PROC  ,                                                                
         L     R6,=A(DBAREA)                                                    
         WITH  (DBDSECT,R6)                                                     
*                                                                               
         L     R5,=A(DEBUGSG)                                                   
         WITH  (SEGCB,R5)                                                       
*-                                                                              
*-       Write all saved debug messages.                                        
*-                                                                              
         WHILE ('LT R4,DBMSGQH',NZ),BEGIN  Keep processing msgs...              
         MVC   DBMSGQH,@R4         Dequeue it                                   
         IF    (DBMSGQH,Z),'CLEAR DBMSGQT'  No messages left                    
*                                                                               
         TSEG  @R4+8,L:@R4+4,CR    DEBUG message text                           
*                                                                               
         LR    R1,R4                                                            
         VCALL FREECORE            Release message entry                        
         END                                                                    
*-                                                                              
*-       Force terminal I/O now.                                                
*-                                                                              
         TWRITE                                                                 
         PEND  ,                                                                
         TITLE 'SPIE ROUTINE: process interrupts and breakpoints'               
*box                                                                            
*                                                                               
*                                                                               
*  SPIE ROUTINE                                                                 
*                                                                               
*  The SPIE routine handles three situations,                                   
*            a. DEBUG interrupts                                                
*            b. expected interrupts                                             
*            c. unexpected interrupts                                           
*                                                                               
*  DEBUG interrupts are handled by saving the current users state               
*  information, stopping the user and starting the debugger user.               
*  The debugger user allows the debuger to look at and change the               
*  state information of the user being debugged.  All traps are                 
*  turned off during the debug break to avoid recursion.                        
*                                                                               
*  Expected interrupts are handled by the spieroutine by branching              
*  to the routine address saved in CVSPIEAD.  It is important to                
*  note that CVSPIEAD is cleared by the dispatcher and is only                  
*  valid for sections of code that do not get dispatched.                       
*                                                                               
*  Unexpected interrupts will generate a DEBUG break if a debugging             
*  session is active, otherwise a failsoft bomb will occur.                     
*                                                                               
*  The SPIE routine does not allow in general for recursion.  If                
*  a program interrupt occurs while we are processing a previous                
*  SPIE request (ie. we are in the middle of a trap pause),  then               
*  we execute the second level SPIE routine below.  This in general             
*  results in a failsoft bomb of the users session.                             
*                                                                               
*                                                                               
*                                                                               
SPIEPROC LABEL ,                  SPECIAL ENTRY FOR SPIE                        
         WITH  (*,R15),BEGIN                                                    
         STM   R0,R15,SPIEREGS    ENTER SPIE ROUTINE                            
         ST    R1,SPIEEPIE                                                      
***      QSNAP 'SPIE ENTRY: EPIE AND REGS'                                      
***      QSNAP 0(R1),128                                                        
***      QSNAP SPIEREGS,64                                                      
         END                                                                    
         BALR  BR,0               GET ADDRESSIBILITY                            
         USING *,BR                                                             
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
         L     CVR,=V(CV)                                                       
         IF    ^DBRNO,BEGIN       IF NOT CURRENTLY IN SPIE ROUTINE              
         ACALL SPIELEV1           PROCESS SPIE, LEVEL=1                         
         END                                                                    
         ELSE  BEGIN ,,           ELSE                                          
         ACALL SPIELEV2           PROCESS SPIE, LEVEL=2                         
         END                                                                    
***      QSNAP 'SPIE EXIT: REGS AND EPIE'                                       
***      QSNAP SPIEREGS,64                                                      
         LM    R0,R15,SPIEREGS    EXIT SPIE ROUTINE                             
***      QSNAP 0(R1),128                                                        
         BR    R14                                                              
         EJECT                                                                  
*-                                                                              
*-                                                                              
*-         SPIE ROUTINE, LEVEL=1                                                
*-                                                                              
*-         WE HANDLE THE FOLLOWING CASES:                                       
*-        1. DEBUG TRAP HIT                                                     
*-        2. USER EXIT, TAKE CVPSIEAD                                           
*-        3. INTERRUPT                                                          
*-                                                                              
*-                                                                              
SPIELEV1 LABEL ,                                                                
         SET   DBRNO              NO RECURSION ALLOWED                          
         L     R13,CVSTACKE       USE LAST BIT OF STACK FOR DEBUG               
         S     R13,=A(DBSTKLEN)                                                 
*        BE CAREFUL!!, THIS STACK IS SMALL, IN AKWARD PLACE                     
         XPUSH RAR,,                                                            
         ACALL TRAPSOFF           TURN OFF TRAPS, AVOID RECUSION                
         L     R2,SPIEREGS+(R7*4)                                               
         XTRACE SPIE1,REGS=(R1,R2) TRACE                                        
*                                                                               
         WITH  (EPIE,R1),BEGIN    ADJUST IA TO INTRUPT ADDR                     
         L     R2,EPIEIA              INTRUPT ADDR = IA - ILC                   
         LH    R0,EPIEILC                                                       
         SR    R2,R0                                                            
         ST    R2,EPIEIA                                                        
         SR    R0,R0                  SET ILC TO ZERO                           
         STH   R0,EPIEILC                                                       
         END                                                                    
*-                                                                              
*-       IF TRAP HIT ,,,                                                        
*-                                                                              
         ACALL TRAPCHK                                                          
         IF    E,BEGIN            IF TRAP SPRUNG,,                              
         ACALL TRAPUSER               TRAP USER                                 
         B     SPIERET1                                                         
         END                                                                    
*-                                                                              
*-       IF USER SPIE EXIT ,,,                                                  
*-                                                                              
         IF    (CVSPIEAD,NE,0),BEGIN   IF USER SPIE EXIT,                       
         WITH  (EPIE,R1),BEGIN                                                  
         NC    EPIEIA(4),=X'80000000'       RETAIN AMODE BIT                    
         OC    EPIEIA(4),CVSPIEAD           EXIT TO USER (NO RETURN)            
         END   , WITH (EPIE,R1)                                                 
         CLEAR CVSPIEAD                                                         
         B     SPIERET1                                                         
         END                                                                    
*-                                                                              
*-       IF INTERRUPT,                                                          
*-                                                                              
         IF    DBACTIVE,BEGIN     IF DEBUG ACTIVE AND NOT IN BREAK,             
         ACALL TRAPUSER                AND TRAP USER AT INTERRUPT               
         B     SPIERET1                                                         
         END                                                                    
*-                                                                              
*-   Program check occurred, go to SPIE restart routine to failsoft.            
*-                                                                              
         L     R1,SPIEEPIE                                                      
         WITH  (EPIE,R1),BEGIN                                                  
         MVC   SPIESAVE,EPIE       Save EPIE                                    
         LA    R2,SPIEFAIL         Failsoft exit                                
         IF    EPIEIA.X'80','O R2,=A(X"80000000")'  Preserve AMODE              
         ST    R2,EPIEIA           Set restart routine address                  
         END                                                                    
*-                                                                              
*-       RETURN                                                                 
*-                                                                              
SPIERET1 LABEL ,                                                                
         XTRACE SPIERET1,REGS=(R1,R6)                                           
         CLEAR DBRNO              CLEAR ANTI-RECURSION LOCK                     
         ACALL TRAPSON            TURN TRAPS BACK ON, DONE W/SPIE               
         XPOP  RAR,,                                                            
         BR    RAR                                                              
         EJECT                                                                  
*-                                                                              
*-       SPIE ROUTINE, LEVEL=2                                                  
*-                                                                              
*-       USE ONLY REGISTERS R1,R2 !!! OR ELSE.                                  
*-                                                                              
SPIELEV2 LABEL ,                                                                
         L     R2,SPIEREGS+(R7*4)                                               
         XTRACE SPIE2,REGS=(R1,R2)  Leave some tracks                           
*                                                                               
         WITH  (EPIE,R1),BEGIN                                                  
         MVC   SPIESAVE,EPIE       Save EPIE                                    
*                                                                               
         LT    R2,CVSPIEAD         User SPIE exit                               
         IF    Z,'LA R2,SPIEFAIL'  No user exit, provide our own                
         IF    EPIEIA.X'80','O R2,=A(X"80000000")'  Preserve AMODE              
         ST    R2,EPIEIA           Set restart routine address                  
         END                                                                    
*                                                                               
         CLEAR CVSPIEAD            Reset SPIE exit addr                         
*                                                                               
         XTRACE SPIERET,REGS=(R1,R2)                                            
         BR    RAR                 Go off to user routine                       
         SPACE 2                                                                
*-                                                                              
*- SPIEFAIL -- Entered when the user didn't have a CVSPIEAD routine.            
*-                                                                              
SPIEFAIL BASR  R15,0                                                            
         WITH  (*,R15),BEGIN                                                    
         LA    R1,SPIESAVE         EPIE for FAIL/TRACE                          
         KAPUT PGMCHK              Failsoft                                     
         STOP  ,                   (No return)                                  
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TRAPCHK - CHECK IF WE HIT USER TRAP                                          
*                                                                               
*       RETURNS -  CC=0, USER TRAP,    CC=NE  NOT USER TRAP                     
*                                                                               
*                                                                               
TRAPCHK  PROC  ,                                                                
         L     R1,SPIEEPIE                                                      
         WITH  (EPIE,R1),BEGIN                                                  
         L     R1,EPIEIA          R1 - INSTRUCTION ADDR                         
         LA    R1,0(R1)                CLEAR AMODE BIT                          
         END   , WITH (EPIE,R1)                                                 
         WITH  (DBTRAP,R5),BEGIN  LOOP LOOKING FOR MATCH TRAP ADDR              
         LA    R5,DBTRAPS         R5 - TRAP LIST ADDR                           
         LA    R4,USERTC+SPECTC                                                 
         WHILE ((R4,NZ),AND,(R1,NE,DBTPADDR)),BEGIN                             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         END   , WITH (DBTRAP,R5)                                               
         SPACE 2                                                                
         IF    (R4,NZ),' CLEAR R15 '   WE HAVE USER TRAP                        
         IF    (R4,Z),'  LA R15,4  '   WE NO HAVE USER TRAP                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TRAPSOFF - turn off traps, we avoid recursive traping                        
*                                                                               
*                                                                               
TRAPSOFF PROC  ,TRACE=NO    NO RECURSIVE TRACING !!                             
         WITH  (DBTRAP,R5),BEGIN                                                
         LA    R5,DBTRAPS         LOOP THRU ALL TRAPS,                          
         LA    R4,USERTC+SPECTC                                                 
         WHILE (R4,NZ),BEGIN      LOOP THRU ALL TRAPS                           
         L     R1,DBTPADDR        R1 - TRAP ADDRESS                             
         IF    (R1,NZ),BEGIN                                                    
         LH    R0,DBTPOPCD        R0 - ORIGINAL OPCODE                          
         STH   R0,0(R1)           RESTORE ORIGINAL OPCODE                       
         END                                                                    
         BCTR  R4,0                                                             
         LA    R5,DBTPNEXT                                                      
         END                                                                    
         END   , WITH (DBTRAP,R5)                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TRAPSON - turn traps back on, they may be off to avoid                       
*            recursive traping.                                                 
*                                                                               
*                                                                               
TRAPSON  PROC  ,TRACE=NO    NO RECURSIVE TRACING !!!                            
         IF    ^DBRNO,BEGIN       IF ANTI-RECURSION FLAG IS OFF                 
         COMMENT                     WE CAN TURN TRAPS BACK ON                  
*-                                                                              
*-       UPDATE OPCODE FIELD FOR ALL TRAPS                                      
*-                                                                              
         WITH  (DBTRAP,R5),BEGIN                                                
         LA    R5,DBTRAPS         RESET ALL OPCODES                             
         LA    R4,USERTC+SPECTC                                                 
         WHILE (R4,NZ),BEGIN      LOOP THRU ALL TRAPS                           
         L     R1,DBTPADDR        R1 - TRAP ADDRESS                             
         IF    (R1,NZ),BEGIN                                                    
         LH    R0,0(R1)           R0 - TRAPPED INSTR OPCODE                     
         CH    R0,=AL2(TRAPCODE)                                                
         IF    NE,BEGIN           IF VALID OPCODE, SAVE IT                      
         STH   R0,DBTPOPCD                                                      
         END                                                                    
         END                                                                    
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
*-                                                                              
*-       INSERT TRAP OPCODES                                                    
*-                                                                              
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC+SPECTC                                                 
         WHILE (R4,NZ),BEGIN      LOOP THRU ALL TRAPS                           
         L     R1,DBTPADDR                                                      
         IF    (R1,NZ),BEGIN                                                    
         LH    R0,=AL2(TRAPCODE)  R0 - TRAP OPCODE                              
         STH   R0,0(R1)                                                         
         END                                                                    
         BCTR  R4,0                                                             
         LA    R5,DBTPNEXT                                                      
         END                                                                    
         LA    R5,DBTRAPI         DO NOT TRAP SIM INSTRUCTION                   
         MVC   DBINSTR(2),DBTPOPCD                                              
         END   , WITH (DBTRAP,R5)                                               
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
STWA     RECORD BEGIN                                                           
STTEMP   DS    CL(L'DBTRAP)                                                     
         END                                                                    
*box                                                                            
*                                                                               
*                                                                               
*  SETTRAP - set trap opcode                                                    
*                                                                               
*  this routine should be called to set trap opcode into place.                 
*  it sets the trap checking for recursion, and also for multiple               
*  traps at the same address                                                    
*                                                                               
*  on entry:  R5 - trap entry address                                           
*                                                                               
*  on exit:  DBTPOPCD set, and trap turned on if appropriate                    
*                                                                               
*                                                                               
*                                                                               
SETTRAP  PROC  STWA,TRACE=NO  NO RECURSIVE TRACING !!!                          
         WITH  (DBTRAP,R5),BEGIN  R5 - TRAP ENTRY ADDRESS                       
         MVC   STTEMP(L'DBTRAP),DBTRAP                                          
         CLEAR DBTRAP                                                           
         ACALL TRAPSOFF           RESTORE CORRECT OPCODE                        
         MVC   DBTRAP(L'DBTRAP),STTEMP                                          
         L     R1,DBTPADDR        SET OPCODE IN TRAP ENTRY                      
         LH    R0,0(R1)                                                         
         STH   R0,DBTPOPCD                                                      
         ACALL TRAPSON            TURN TRAPS IF NO RECURSION PROB               
         END   , WITH(DPTRAP,R5)                                                
         PEND  ,                                                                
         TITLE 'SPIE ROUTINE: trap user'                                        
*box                                                                            
*                                                                               
*                                                                               
*  TRAPUSER - STOP USER AND START UP DEBUG TERMINAL                             
*                                                                               
*  WE DO THE FOLLOWING:                                                         
*       1.  SET UP DEBUG AREA FOR BREAK                                         
*       2.  PROCESS UNUSUAL TRAP TYPES                                          
*       3.  LOCK ALL PAGES                                                      
*       4.  SAVE CP, STACK, AND HEAP AREAS                                      
*       5.  ENABLE SPIE RECUSION                                                
*       6.  PAUSE THIS USER, START DEBUGER TERMINAL                             
*       7.  WAIT                                                                
*       8.  REVERSE STEPS 2,3,4,5,6                                             
*       9.  SIMULATE TRAPED INSTRUCTION                                         
*                                                                               
*                                                                               
TRAPUSER PROC ,      SET UP TRAP AND STOP USER                                  
*-                                                                              
*-       SET UP DEBUG DATA AREA WITH BREAK INFORMATION                          
*-                                                                              
         ACALL DBSETUP            SET UP DEBUG AREA                             
*                                                                               
*  CHECK IF THIS TRAP SHOULD BE TAKEN                                           
*                                                                               
***      QSNAP 'DBDSECT AFTER DBAREA SET UP'                                    
***      QSNAP DBDSECT,240                                                      
         IF    ^DBACTIVE,BEGIN               IF DEBUG NOT ACTIVE,               
         ACALL TRAPSKIP                      SKIP TRAP                          
         B     TRAPEXIT                                                         
         END                                                                    
*                                                                               
         IF    (DBEEJCB,EQ,0),BEGIN          IF NO DEBUGEE SPECIFIED,           
         IF    (CVCURJCB,NE,DBERJCB),BEGIN   THEN DEBUG THIS USER               
         MVC   DBEEJCB,CVCURJCB                                                 
         END                                                                    
         END                                                                    
*                                                                               
         IF    (CVCURJCB,NE,DBEEJCB),BEGIN   IF USER NOT DEBUGEE,               
         ACALL TRAPSKIP                       SKIP TRAP                         
         B     TRAPEXIT                                                         
         END                                                                    
*                                                                               
*  TRAPS IN DISPATCHER ARE EXECUTED AND NOT TRAPPED                             
*  WE CHECK STACK PTR TO SEE IF IN DISPATCHER,  VERY TRICKY                     
         L     R1,SPIEREGS+R13*4                                                
         IF    ((R1,LT,CVSTACK),OR,(R1,GT,CVSTACKE)),BEGIN                      
         SET   DBEXECD             MARK TRAP EXECUTED, NOT TRAPPED              
         ACALL TRAPSKIP                                                         
         B     TRAPEXIT                                                         
         END   ,                                                                
*-                                                                              
*-       PROCESS VARIOUS TYPES OF TRAPS                                         
*-                                                                              
         LA    R5,DBTRAPNF        R5 - CURRENT BREAK TRAP INFO                  
         WITH  (DBTRAP,R5),BEGIN                                                
*                                                                               
         IF    DBTPCONT,BEGIN     IF CONTINUE TRAP SPRUNG,,,                    
         L     R1,DBTPINFO          ADDR OF INSTR + LEN = NEXT INSTR            
         A     R1,DBTPINFO+4        PATCH THIS INTO START ADDR                  
         ST    R1,DBIA                                                          
         ACALL DBRESET              RESET PSW, REGS                             
         B     TRAPEXIT                                                         
         END                                                                    
*                                                                               
         IF    DBTPINST,BEGIN     IF SIMULATE INSTR. TRAP SPRUNG,,,             
         L     R1,DBTPINFO          R1 - INSTRUCTION THAT WAS TRAPPED           
         ST    R1,DBIA                                                          
         LA    R5,DBTRAPS           FIND TRAP FOR SIMULATED INSTR               
         LA    R4,USERTC+SPECTC                                                 
         WHILE ((R4,GT,0),AND,(' C R1,DBTPADDR',NE)),BEGIN                      
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         MVC   DBTRAPNF(16),DBTRAP  GET ACTUAL TRAP INFO                        
         LA    R5,DBTRAPNF                                                      
         SET   DBTPIRPT             SET INTERRUPT FLAG                          
         LA    R5,DBTRAPNF                                                      
         END                                                                    
*                                                                               
         IF    DBTPTRC,BEGIN      IF TRACE TRAP SPRUNG,,                        
         LA    R5,DBTRAPT           CLEAR TRACE TRAP                            
         CLEAR DBTRAP                                                           
         LA    R5,DBTRAPNF                                                      
         END                                                                    
*                                                                               
         IF    DBTPNTY,BEGIN      IF ROUTINE ENTRY TRAP SPRUNG,,,               
         LA    R5,DBTRAPE            CLEAR ENTRY TRAP                           
         CLEAR DBTRAP                                                           
         LA    R5,DBTRAPNF                                                      
         END                                                                    
*                                                                               
         IF    DBTPRET,BEGIN      IF ROUTINE RETURN TRAP SPRUNG,,,              
         LA    R5,DBTRAPRL           CLEAR RETURN TRAP BY POPPING               
         CLEAR DBTRAP                RETURN TRAP STACK                          
         LA    R5,DBTRAPR                                                       
         L     R1,DBIA                                                          
         WHILE (R1,NE,DBTPADDR),BEGIN    IF NOT 1ST TRAP, KEEP POPING           
         MVC   DBTRAPR((RETTC-1)*L'DBTRAP),DBTRAPR2                             
         END                                                                    
         MVC   DBTRAPR((RETTC-1)*L'DBTRAP),DBTRAPR2                             
         LA    R5,DBTRAPNF                                                      
         END                                                                    
         END   , WITH (DBTRAP,R5)                                               
*-                                                                              
*-                                                                              
*-       TURN OFF TRAPS, LOCK USERS PAGES IN CORE, ALLOW INTERRUPTS             
*-                                                                              
         ACALL LOCKP              LOCK USERS PAGES                              
         ACALL SAVEP              SAVE USERS CP, STACK, HEAP PAGES              
*$       FIX SPIE RECURSION !                                                   
*$       L     R1,SPIEEPIE        TURN ON SPIE RECURSION FLAG                   
*$       NI    0(R1),X'7F'                                                      
         SET   DBBREAK            WE START SESSION BREAK                        
*-                                                                              
*-       PUT DEBUGGER ON RUN QUEUE AND PAUSE DEBUGEE (US)                       
*-                                                                              
         L     R1,DBERJCB         START DEBUGGER                                
         ACALL STARTJCB                                                         
         L     R1,DBEEJCB         PAUSE US                                      
         ACALL PAUSEJCB                                                         
*-                                                                              
*-       WE RESUME EXECUTION HERE AFTER BREAK                                   
*-                                                                              
         CLEAR DBBREAK            WE ARE DONE WITH SESSION BREAK                
*$       FIX SPIE RECURSION                                                     
*$       L     R1,SPIEEPIE        TURN OFF SPIE RECURSION FLAG                  
*$       OI    0(R1),X'80'                                                      
         ACALL RESTOREP           RESTORE USERS CP, STACK, HEAP PAGES           
         ACALL UNLOCKP            UNLOCK USER PAGES                             
         ACALL SIMULATE           SIMULATE TRAPED INSTUCTION                    
         ACALL DBRESET            SET UP SPIE EXIT AND EXIT BELOW               
*-                                                                              
*-       TRAP COMPLETED EXIT VIA SPIE EXIT                                      
*-                                                                              
TRAPEXIT LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TRAPSKIP - skip trap                                                         
*                                                                               
*    we skip trap by simulating instruction.  main callers of this              
*    routine are non-debug users hitting debug traps.                           
*                                                                               
*                                                                               
TRAPSKIP PROC  ,                                                                
         LA    R5,DBTRAPNF        R5 - CURRENT BREAK TRAP INFO                  
         WITH  (DBTRAP,R5),BEGIN                                                
*                                                                               
* first handle any problems from previous instuction skip,,                     
*                                                                               
         IF    DBTPCONT,BEGIN     IF CONTINUE PREVIOUS SIMULATE,                
         L     R1,DBTPINFO           PATCH NEXT INSTR ADDR INTO PSW             
         A     R1,DBTPINFO+4         INSTR ADDR+INSTR LEN=NEXT INSTR            
         ST    R1,DBIA               AND CONTINUE USER'S EXECUTION              
         ACALL DBRESET                                                          
         B     TSKIPRET                                                         
         END                                                                    
         IF    DBTPINST,BEGIN      IF INSTR SIMULATED BOMBED,                   
         MVC   DBIA(4),DBTPINFO                    BOMB THIS USER               
         ACALL DBRESET                                                          
         L     R1,SPIEEPIE                                                      
         KAPUT PGMCHK              BOMB                                         
         STOP                                                                   
         END                                                                    
*-                                                                              
*-       skip trap                                                              
*-                                                                              
         ACALL SIMULATE            SIMULATE TRAPED INSTRUCTION                  
         ACALL DBRESET             SET UP SPIE EXIT                             
         COMMENT                   WE SKIP TRAP AND EXIT                        
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
TSKIPRET LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*                                                                               
*  DBSETUP - set up users debug area with spie info, break info                 
*                                                                               
*                                                                               
DBSETUP  PROC  ,                                                                
         ST    CPR,DBEECP          DEBUGEE CP ADDRESS                           
*-                                                                              
*-       SAVE SPIE STATE INFO                                                   
*-                                                                              
         L     R1,SPIEEPIE         R1 - PIE ADDRESS                             
         WITH  (EPIE,R1),BEGIN                                                  
         MVC   DBPSW(8),EPIEPSW        SAVE BREAK PSW                           
         MVC   DBREGS(64),EPIEREGS     SAVE BREAK REGISTERS                     
         LH    R2,EPIEILC              SAVE ILC                                 
         ST    R2,DBILC                                                         
         LH    R2,EPIEIC                                                        
         ST    R2,DBIC                                                          
         L     R2,EPIEIA               SAVE INSRUCTION ADDRESS                  
         LA    R2,0(R2)                                                         
         ST    R2,DBIA                                                          
         IC    R2,EPIECC               CC                                       
         SLL   R2,26                       IN BITS 2-3                          
         SRL   R2,30                                                            
         ST    R2,DBCC                                                          
         END   , WITH (PIE,R1)                                                  
*                                                                               
* FIND TRAP, AND TRAP TYPE                                                      
*                                                                               
         XC    DBTRAPNF(16),DBTRAPNF   CLEAR TRAP INFO                          
         LA    R5,DBTRAPS         R5 - TRAP LIST, TRAP DSECT                    
         WITH  (DBTRAP,R5),BEGIN                                                
         L     R1,DBIA            R1 - INSTRUCTION ADDRESS                      
         LA    R4,USERTC+SPECTC   FIND TRAP, LOOP THRU ALL TRAPS                
         WHILE ((R4,GT,0),AND,(R1,NE,DBTPADDR)),BEGIN                           
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,NZ),BEGIN      IF TRAP FOUND,                                
         MVC   DBTRAPNF(16),DBTRAP     SAVE CURRENT TRAP INFO                   
         END                                                                    
         LA    R5,DBTRAPNF        R5 - CURRENT TRAP INFO                        
         IF    (DBTPADDR,EQ,0),BEGIN   IF NO TRAP, MUST BE INTRUPT              
         SET   DBTPIRPT                                                         
         END                                                                    
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
*                                                                               
         L     R1,CVSPIEAD        SAVE SPIE EXIT ADDRESS                        
         ST    R1,DBSPIEAD                                                      
         SR    R1,R1                                                            
         ST    R1,CVSPIEAD                                                      
*                                                                               
* EXIT                                                                          
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*                                                                               
**                                                                              
**  LOCKP - lock users pages in core                                            
**                                                                              
*$                                                                              
*$ may need to save page addresses and free pages, etc. etc.                    
*$                                                                              
*                                                                               
LOCKP    PROC  ,                                                                
         VCALL PLOCKA              Lock PAR                                     
         VCALL PLOCKB              Lock PBR                                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  UNLOCKP - unlock users pages, no longer need be in core.                     
*                                                                               
*                                                                               
UNLOCKP  PROC  ,                                                                
         VCALL PUNLOCKA            Unlock PAR                                   
         VCALL PUNLOCKB            Unlock PBR                                   
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SAVEP -  save cp, stack, heap, directory contents,                           
*           and A and B pages.                                                  
*                                                                               
*                                                                               
*                                                                               
SAVEP    PROC  ,                                                                
         L     R2,CVSTACK          MOVE STACK                                   
         L     R3,CVSTACKE                                                      
         SR    R3,R2                                                            
         L     R4,=A(DBASTACK)                                                  
         LR    R5,R3                                                            
         MVCL  R4,R2                                                            
         L     R2,CVDSTK           MOVE DISPATCHER STACK                        
         L     R3,CVSTACKL                                                      
         L     R4,=A(DBADSTK)                                                   
         LR    R5,R3                                                            
         MVCL  R4,R2                                                            
         L     R2,CVHEAP           MOVE HEAP                                    
         L     R3,CVHEAPE                                                       
         SR    R3,R2                                                            
         L     R4,=A(DBAHEAP)                                                   
         LR    R5,R3                                                            
         MVCL  R4,R2                                                            
         ST    PAR,DBPAR           SAVE A PAGE INFO                             
         VCALL PLOCKA              Lock PAR page                                
         CLEAR PAR                                                              
         ST    PBR,DBPBR           SAVE B PAGE INFO                             
         VCALL PLOCKB              Lock PBR page                                
         CLEAR PBR                                                              
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  RESTOREP -  restore saved cp, stack, heap, directory,                        
*              and A and B pages.                                               
*                                                                               
*                                                                               
*                                                                               
RESTOREP PROC  ,                                                                
         L     R2,CVSTACK         MOVE STACK                                    
         L     R3,CVSTACKE                                                      
         SR    R3,R2                                                            
         S     R3,=A(DBSTKLEN)      DEBUG STACK IS LAST BIT OF STACK            
         L     R4,=A(DBASTACK)                                                  
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         L     R2,CVDSTK          MOVE DISPATCHER STACK                         
         L     R3,CVSTACKL                                                      
         L     R4,=A(DBADSTK)                                                   
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         L     R2,CVHEAP          MOVE HEAP                                     
         L     R3,CVHEAPE                                                       
         SR    R3,R2                                                            
         L     R4,=A(DBAHEAP)                                                   
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         CLEAR DBPAR              CLEAR A,B PAGE POINTERS                       
         CLEAR DBPBR                                                            
         COMMENT                  PAR AND PBR ARE SET UP AT SPIE EXIT           
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  DBRESET - set up pie spie returns from debug data area                       
*                                                                               
*  note: debug data area may be modified by debugger routines.                  
*                                                                               
*                                                                               
DBRESET  PROC  ,                                                                
         L     R1,SPIEEPIE        R1 - PIE ADDRESS                              
         WITH  (EPIE,R1),BEGIN                                                  
         NC    EPIEIA(4),=X'80000000'                                           
         OC    EPIEIA(4),DBIA         SET PSW INSTR. ADDR                       
         NI    EPIECC,X'CF'           SET PSW CC                                
         IC    R3,EPIECC                                                        
         L     R2,DBCC                                                          
         SLL   R2,4                                                             
         OR    R3,R2                                                            
         STC   R3,EPIECC                                                        
         MVC   EPIEREGS(64),DBREGS  SET REGISTERS, R3-R13                       
         XC    DBREGS(64),DBREGS    CLEAR DEBUG REGISTERS                       
         END   , WITH (PIE,R1)                                                  
         L     R1,DBSPIEAD                                                      
         ST    R1,CVSPIEAD        RESET SPIE EXIT ADDRESS                       
*                                                                               
         IF    DBCLEAR,BEGIN      IF CLEAR DEBUG, CLEAR DEBUG AREA              
         L     R2,=A(DBAREA+8)                                                  
         L     R3,=A(DBLENGTH-8)                                                
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         END                                                                    
*                                                                               
*                                                                               
         PEND  ,                                                                
         TITLE 'SPIE ROUTINE: process interrupts and breakpoints'               
**                                                                              
**  EPIE format (for ESPIE routines).                                           
**                                                                              
EPIE     RECORD BEGIN                                                           
EPIEID   DS    F                   'EPIE' ID                                    
EPIEUSER DS    F                   USER SUPPLIED PARM LIST                      
EPIEREGS DS    16F                 USER REGESTERS AT INTERRUPTION               
EPIEPSW  DS    2F                  USER PSW AT INTERRUPTION                     
EPIECC   EQU   EPIEPSW+2,1         PSW CC                                       
EPIEIA   EQU   EPIEPSW+4,4         PSW INSTRUCTION ADDRESS                      
EPIEILC  DS    H                   INSTRUCTION LENGTH CODE                      
EPIEIC   DS    H                   INTERRUPTION CODE                            
* FOLLOWED BY RESERVED FIELDS.                                                  
         END                                                                    
**                                                                              
**  IN LINE SAVE AREA FOR SPIE, PIE DATA                                        
**                                                                              
SPIEREGS DS    16F                 REGISTERS AT SPIE ENTRY                      
SPIEEPIE DS    A                   EPIE ADDRESS AT SPIE ENTRY                   
SPIESAVE DS    XL(L'EPIE)          Saved EPIE for Failsoft Kaput                
*                                                                               
*                                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'SPIE ROUTINE: simulate trapped instruction'                     
*box                                                                            
*                                                                               
*                                                                               
*  SIMULATE - simulate trapped instruction                                      
*                                                                               
*                                                                               
*  Trapped instructions are executed in the debug area.                         
*                                                                               
*                                                                               
SIMULATE PROC  ,                                                                
         LA    R5,DBTRAPNF        R5 - CURRENT TRAP INSTRUCTION                 
         WITH  (DBTRAP,R5),BEGIN                                                
*-                                                                              
*-       CHECK IF SHOULD SKIP SIMULATION                                        
*-                                                                              
         IF    DBTPIRPT,SIMEXIT   IF INTERUPT, DO NOT SIMULATE                  
         L     R1,DBIA                                                          
         L     R2,DBPSWIA                                                       
         LA    R2,0(R2)                                                         
         IF    (R1,NE,R2),SIMEXIT IF USER PATCHED PIA, DO NOT SIM.              
         L     R1,DBTPADDR        IF NO TRAP AT ADDR, DO NOT SIM.               
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC+SPECTC                                                 
         WHILE ((R4,NZ),AND,(R1,NE,DBTPADDR)),BEGIN                             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,Z),SIMEXIT     NO TRAP AT ADDR, WE DO NOT SIM.               
         LA    R5,DBTRAPNF                                                      
*-                                                                              
*-       GET INSTRUCTION LENGTH                                                 
*-                                                                              
         LA    R1,2               GET AND SAVE INSTRUCTION LENGTH               
         CLI   DBTPOPCD,X'40'                                                   
         IF    GE,' LA R1,4 '                                                   
         CLI   DBTPOPCD,X'D0'                                                   
         IF    GE,' LA R1,6 '                                                   
         ST    R1,DBILEN          R1 - LENGTH OF SIM INSTR.                     
*-                                                                              
*-       MOVE INTRUCTION INTO DEBUG AREA, SET UP INSTRUCTION TRAP               
*-                                                                              
         L     R2,DBIA            R2 - INSTRUCTION TO SIMULATE                  
         DEX   R1,' MVC DBINSTR(0),0(R2)'   MOVE INSTR TO DEBUG AREA            
         MVC   DBINSTR(2),DBTPOPCD                                              
         LA    R5,DBTRAPI         R5 - INSTRUCTION TRAP                         
         LA    R1,DBINSTR              SET UP INTRUCTION TRAP                   
         ST    R1,DBTPADDR                                                      
         SET   DBTPINST                                                         
         MVC   DBTPOPCD(2),DBINSTR                                              
         MVC   DBTPINFO(4),DBIA                                                 
*-                                                                              
*-       SET UP CONTINUE TRAP, AFTER SIMULATED INSTRUCTION                      
*-                                                                              
         LA    R1,DBINSTR         MOVE TRAP IN BEHIND SIM. INSTR.               
         A     R1,DBILEN                                                        
         MVC   0(2,R1),=AL2(TRAPCODE)                                           
         LA    R5,DBTRAPC         R5 - CONTINUE TRAP                            
         ST    R1,DBTPADDR             SET UP CONTINUE TRAP                     
         SET   DBTPCONT                                                         
         MVC   DBTPOPCD(2),=AL2(TRAPCODE)                                       
         MVC   DBTPINFO(4),DBIA                                                 
         MVC   DBTPINFO+4(4),DBILEN                                             
*-                                                                              
*-   SIMULATED INSTR IS EXECUTED IN DEBUG DATA AREA, POINT PSW AT IT            
*-                                                                              
         LA    R1,DBINSTR         INSTR ADDR IN DATA AREA                       
         ST    R1,DBIA            SAVE INSTR ADDR                               
*-                                                                              
*-       SPECIAL PROCESS BAL, BALR, BAS, BASR, BASSM                            
*-                                                                              
         CLI   DBINSTR,X'05'      BALR                                          
         IF    E,' ACALL SIMBALR'                                               
         CLI   DBINSTR,X'0D'      BASR                                          
         IF    E,' ACALL SIMBASR'                                               
         CLI   DBINSTR,X'45'      BAL                                           
         IF    E,' ACALL SIMBAL'                                                
         CLI   DBINSTR,X'4D'      BAS                                           
         IF    E,' ACALL SIMBAS'                                                
         END   , WITH (DBTRAP,R5)                                               
*-                                                                              
*-       EXIT                                                                   
*-                                                                              
SIMEXIT  LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SIMBALR - simulate branch and link register instruction                      
*                                                                               
*                                                                               
*                                                                               
SIMBALR  PROC  ,                                                                
         LA    R5,DBTRAPNF        POINT TO CURRENT TRAP ADDRESS                 
         WITH  (DBTRAP,R5),BEGIN                                                
*-                                                                              
*-       PUT BRANCH ADDRESS INTO PSW,                                           
*-                                                                              
         IC    R2,DBINSTR+1       R2 - REGISTER CONTAINING BR ADDR              
         SLL   R2,28                                                            
         SRL   R2,28                                                            
         IF    (R2,Z),BEGIN       IF BALR RX,0    NO BRANCH                     
         L     R1,DBTPADDR           SPIE RETURNS TO NEXT INSTR                 
         A     R1,DBILEN                                                        
         ST    R1,DBIA                                                          
         END                                                                    
         IF    (R2,NZ),BEGIN      IF BALR RX1,RX2                               
         SLL   R2,2                  SPIE RETURNS TO ADDR IN RX2                
         L     R1,DBREGS(R2)                                                    
         LA    R1,0(R1)                                                         
         ST    R1,DBIA               BRANCH ADDRESS                             
         END                                                                    
*-                                                                              
*-        FIX BALR RETURN REGISTER                                              
*-                                                                              
         L     R1,DBTPADDR        R1 - ADDR OF NEXT INSTRUCTION                 
         A     R1,DBILEN                                                        
         L     R2,DBILEN          BALR SETS HIGH ORDER BYTE JUNK                
         SLL   R2,30                LENGTH, CC, MASK BITS                       
         OR    R1,R2                                                            
         L     R2,DBCC                                                          
         SLL   R2,28                                                            
         OR    R1,R2                                                            
         IC    R2,DBPSWIA                                                       
         SLL   R2,28                                                            
         SRL   R2,4                                                             
         OR    R1,R2                                                            
         SR    R2,R2                                                            
         IC    R2,DBINSTR+1       R2 - # OF RETURN REGISTER                     
         SRL   R2,4                                                             
         SLL   R2,2                                                             
         ST    R1,DBREGS(R2)      SAVE RETURN REGISTER                          
*                                                                               
         END   , WITH (DBTRAP,R5)                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SIMBAL - simulate branch and link instruction                                
*                                                                               
*                                                                               
*                                                                               
SIMBAL   PROC  ,                                                                
*-                                                                              
*-       PUT BRANCH ADDRESS INTO PSW,                                           
*-                                                                              
         IC    R2,DBINSTR+1       R2 - BASE REGISTER                            
         SLL   R2,28                                                            
         SRL   R2,28                                                            
         IF    (R2,NZ),BEGIN                                                    
         SLL   R2,2                                                             
         L     R2,DBREGS(R2)                                                    
         LA    R2,0(R2)                                                         
         END                                                                    
         SR    R3,R3              R3 - ANOTHER BASE REGISTER                    
         IC    R3,DBINSTR+2                                                     
         SRL   R3,4                                                             
         IF    (R3,NZ),BEGIN                                                    
         SLL   R3,2                                                             
         L     R3,DBREGS(R3)                                                    
         LA    R3,0(R3)                                                         
         END                                                                    
         L     R4,DBINSTR         R4 - DISPLACEMENT                             
         SLL   R4,20                                                            
         SRL   R4,20                                                            
         SR    R1,R1              R1 - GRAND TOTAL = BRANCH ADDRESS             
         AR    R1,R2                                                            
         AR    R1,R3                                                            
         AR    R1,R4                                                            
         ST    R1,DBIA            SAVE BRANCH ADDRESS                           
*-                                                                              
*-        FIX BAL RETURN REGISTER                                               
*-                                                                              
         LA    R5,DBTRAPNF        GET CURRENT TRAP ADDRESS                      
         WITH  (DBTRAP,R5),BEGIN                                                
         L     R1,DBTPADDR        R1 - ADDR OF NEXT INSTRUCTION                 
         A     R1,DBILEN                                                        
         L     R2,DBILEN          BAL SETS HIGH ORDER BYTE JUNK                 
         SLL   R2,30                LENGTH, CC, MASK BITS                       
         OR    R1,R2                                                            
         L     R2,DBCC                                                          
         SLL   R2,28                                                            
         OR    R1,R2                                                            
         IC    R2,DBPSWIA                                                       
         SLL   R2,28                                                            
         SRL   R2,4                                                             
         OR    R1,R2                                                            
         SR    R2,R2                                                            
         IC    R2,DBINSTR+1       R2 - # OF RETURN REGISTER                     
         SRL   R2,4                                                             
         SLL   R2,2                                                             
         ST    R1,DBREGS(R2)      SAVE RETURN REGISTER                          
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SIMBASR - simulate branch and save register instruction                      
*                                                                               
*                                                                               
*                                                                               
SIMBASR  PROC  ,                                                                
         LA    R5,DBTRAPNF        POINT TO  CURRENT TRAP ADDRESS                
         WITH  (DBTRAP,R5),BEGIN                                                
*-                                                                              
*-       PUT BRANCH ADDRESS INTO PSW,                                           
*-                                                                              
         IC    R2,DBINSTR+1       R2 - REGISTER CONTAINING BR ADDR              
         SLL   R2,28                                                            
         SRL   R2,28                                                            
         IF    (R2,Z),BEGIN       IF BASR RX,0    NO BRANCH                     
         L     R1,DBTPADDR           SPIE RETURNS TO NEXT INSTR                 
         A     R1,DBILEN                                                        
         ST    R1,DBIA                                                          
         END                                                                    
         IF    (R2,NZ),BEGIN      IF BASR RX1,RX2                               
         SLL   R2,2                  SPIE RETURNS TO ADDR IN RX2                
         L     R1,DBREGS(R2)                                                    
         LA    R1,0(R1)                                                         
         ST    R1,DBIA               BRANCH ADDRESS                             
         END                                                                    
*-                                                                              
*-        FIX BASR RETURN REGISTER                                              
*-                                                                              
         L     R1,DBTPADDR        R1 - ADDR OF NEXT INSTRUCTION                 
         A     R1,DBILEN                                                        
         SR    R2,R2                                                            
         IC    R2,DBINSTR+1       R2 - # OF RETURN REGISTER                     
         SRL   R2,4                                                             
         SLL   R2,2                                                             
         ST    R1,DBREGS(R2)      SAVE RETURN REGISTER                          
*                                                                               
         END   , WITH (DBTRAP,R5)                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SIMBAS - simulate branch and save instruction                                
*                                                                               
*                                                                               
*                                                                               
SIMBAS   PROC  ,                                                                
*-                                                                              
*-       PUT BRANCH ADDRESS INTO PSW,                                           
*-                                                                              
         IC    R2,DBINSTR+1       R2 - BASE REGISTER                            
         SLL   R2,28                                                            
         SRL   R2,28                                                            
         IF    (R2,NZ),BEGIN                                                    
         SLL   R2,2                                                             
         L     R2,DBREGS(R2)                                                    
         LA    R2,0(R2)                                                         
         END                                                                    
         SR    R3,R3              R3 - ANOTHER BASE REGISTER                    
         IC    R3,DBINSTR+2                                                     
         SRL   R3,4                                                             
         IF    (R3,NZ),BEGIN                                                    
         SLL   R3,2                                                             
         L     R3,DBREGS(R3)                                                    
         LA    R3,0(R3)                                                         
         END                                                                    
         L     R4,DBINSTR         R4 - DISPLACEMENT                             
         SLL   R4,20                                                            
         SRL   R4,20                                                            
         SR    R1,R1              R1 - GRAND TOTAL = BRANCH ADDRESS             
         AR    R1,R2                                                            
         AR    R1,R3                                                            
         AR    R1,R4                                                            
         ST    R1,DBIA            SAVE BRANCH ADDRESS                           
*-                                                                              
*-        FIX BAS RETURN REGISTER                                               
*-                                                                              
         LA    R5,DBTRAPNF        GET CURRENT TRAP ADDRESS                      
         WITH  (DBTRAP,R5),BEGIN                                                
         L     R1,DBTPADDR        R1 - ADDR OF NEXT INSTRUCTION                 
         A     R1,DBILEN                                                        
         SR    R2,R2                                                            
         IC    R2,DBINSTR+1       R2 - # OF RETURN REGISTER                     
         SRL   R2,4                                                             
         SLL   R2,2                                                             
         ST    R1,DBREGS(R2)      SAVE RETURN REGISTER                          
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'SPIE ROUTINE: pause and start user'                             
*box                                                                            
*                                                                               
*   STARTJCB  -  start a paused user                                            
*                                                                               
*       on entry:  r1 - jcb address of user paused by debug                     
*                                                                               
STARTJCB PROC  ,                                                                
         LR    R5,R1              R5 - JCB ADDRESS                              
         WITH  (JCB,R5)                                                         
*                                                                               
         CLEAR JCBWFERR           CLEAR DEBUG WAIT FLAG                         
         SETUP JCB                AND CAUSE JCB TO BE PUT ON RUN Q              
         PEND  ,                                                                
         SPACE 2                                                                
*box                                                                            
*                                                                               
*   PAUSEJCB  -  pause a user                                                   
*                                                                               
*       on entry:  r1 - jcb of user to pause                                    
*                                                                               
PAUSEJCB PROC  ,                                                                
         LR    R5,R1                                                            
         WITH  (JCB,R5)                                                         
*                                                                               
         SET   JCBWFERR           SET DEBUG WAIT FLAG                           
         PAUSE ,                  AND PAUSE                                     
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'SET DEBUG - initialize/start debugging session'                 
*box                                                                            
*                                                                               
*                                                                               
*  SET DEBUG  <line no.>                                                        
*                                                                               
*   IDENTIFY USER WE ARE DEBUGING AND IDENTIFY US AS DEBUGGER.                  
*   THEN PAUSE US WAITING FOR DEBUG BREAK.                                      
*                                                                               
*                                                                               
*                                                                               
SETDEBUG XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         IF    ^CVFTEST,BEGIN                                                   
         TSEG  'SET DEBUG is only available for test systems.',,CR              
         SETMSG 'Do it anyway'                                                  
         VCALL YESREQ                                                           
         END                                                                    
*                                                                               
         L     R6,=A(DBAREA)      R6 - DEBUG DATA AREA                          
         USING DBDSECT,R6                                                       
         SR    R5,R5              R5 - JCB ADDRESS                              
         USING JCB,R5                                                           
         IF    DBACTIVE,BEGIN     IF ALREADY DEBUGING,,                         
         TSEG  'Debugging session already active.',,CR                          
         TSEG  'Use CLEAR DEBUG to terminate debug session.',,CR                
         B     CVABORT                                                          
         END                                                                    
*-                                                                              
*-       SCAN FOR DEBUGEE LINE NUMBER                                           
*-                                                                              
         SCAN  SETDBPRT                                                         
         SCANCHK                                                                
*-                                                                              
*-       IF DEBUG LINE SPECIFIED                                                
*-                                                                              
         IF    (R5,NZ),BEGIN      IF JCB SPECIFIED                              
         IF    (R5,EQ,CVCURJCB),BEGIN                                           
         ABORT 'Debugger may not debug itself.  Command ignored.',,CR           
         END                                                                    
         IF    JCBWFSO,BEGIN      IF WAITING FOR SIGN ON,                       
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         TSEG  ' is not logged on.'                                             
         B     CVABORT                                                          
         END                                                                    
         COMMENT                  IF LINE # OK, ASK IF OK TO DEBUG              
         TSEG  'OK to debug line ('                                             
         TNUM  LH:JCBSEQ                                                        
         TSEG  '), user '         OK to debug line (18), user ...?              
         LR    R1,R5                                                            
         ACALL TSEGUSER                                                         
         SR    R0,R0                                                            
         VCALL YESREQ                                                           
         END                                                                    
*-                                                                              
*-       PAUSE WAITING FOR DEBUGEE, TO REACTIVATE US                            
*-                                                                              
         TSEG  'Terminal paused, waiting for debug break.',,WR                  
         SET   DBACTIVE           ACTIVE IN DEBUG                               
         SET   CVENTON            TURN ON FAILSOFT TRACING                      
         ST    R5,DBEEJCB         SAVE JCB BEING DEBUGGED                       
*                                                                               
DEBLP    L     R1,CVCURJCB        SAVE JCB DOING THE DEBUGGING                  
         ST    R1,DBERJCB                                                       
         ACALL PAUSEJCB           PAUSE THIS SESSION RIGHT HERE                 
*-                                                                              
*-       RESTARTED HERE BY DEBUG BREAK OR CLEAR DEBUG COMMAND                   
*-                                                                              
         IF    DBACTIVE,BEGIN      Debugging is still active...                 
         IF    (CVCURJCB,NE,DBERJCB),EXIT  We aren't it anymore                 
*-                                                                              
*-       See if we were woken to process DEBUG messages.                        
*-                                                                              
         IF    (DBFMSG,OR,DBFMSGDISP),BEGIN  Process DEBUG msg...               
         SET   DBBREAK             Session break in progress                    
         ACALL DEBWRITE            Write DEBUG message(s)                       
         IF    DBFMSG,BEGIN        Other user is paused now...                  
         L     R1,DBEEJCB                                                       
         ACALL STARTJCB            Restart paused user                          
         END                                                                    
         CLEAR DBFMSG,DBFMSGDISP   Reset msg pending flags                      
         CLEAR DBBREAK             Clear session break flag                     
         B     DEBLP               Loop back                                    
         END                                                                    
*-                                                                              
*-       We were woken because the debugee blew up.                             
*-                                                                              
         ACALL DEBWRITE            Write any DEBUG msgs                         
         ACALL STOPMSG             Give pause message                           
         END                                                                    
         B     CVNEXT                                                           
         PEND  ,                                                                
*                                                                               
*                                                                               
SETDBPRT SCKW  ,WJCBLNO,I,5000                                                  
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
WJCBLNO  PROC  ,                                                                
         MH    R0,=AL2(L'JCB)                                                   
         L     R5,CVFJCB                                                        
         AR    R5,R0                                                            
         IF    (R5,GE,CVLJCB),' VCALL NOTVALID'                                 
         PRETURN (R5)                                                           
         PEND  ,                                                                
         DROP  R5                                                               
         TITLE 'SHOW DEBUG - show debug session info'                           
*box                                                                            
*                                                                               
*                                                                               
*  SHOW DEBUG - show debug info,                                                
*                                                                               
*                                                                               
*                                                                               
SHOWDBUG XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^DBACTIVE,BEGIN                                                  
         TSEG  'Debugging session not active.'                                  
         B     CVNEXT                                                           
         END                                                                    
*                                                                               
         WITH  (JCB,R5),BEGIN       IF DEBUGGEE IS KNOWN,,                      
         IF    (DBEEJCB,NE,0),BEGIN                                             
         L     R5,DBERJCB           DEBUGGER is debugging                       
         LR    R1,R5                                                            
         ACALL TSEGUSER                                                         
         TSEG  ' (line '                                                        
         TNUM  LH:JCBSEQ                                                        
         TSEG  ') is debugging '                                                
         L     R5,DBEEJCB           DEBUGEE                                     
         LR    R1,R5                                                            
         ACALL TSEGUSER                                                         
         TSEG  ' (line '                                                        
         TNUM  LH:JCBSEQ                                                        
         TSEG  ').',,CR                                                         
         END                                                                    
*                                                                               
         IF    (DBEEJCB,EQ,0),BEGIN IF DEBUGGEE IS NOT KNOWN                    
         L     R5,DBERJCB           DEBUGGER is debugging                       
         LR    R1,R5                                                            
         ACALL TSEGUSER                                                         
         TSEG  ' (line '                                                        
         TNUM  LH:JCBSEQ                                                        
         TSEG  ') is waiting to debug an unspecified user.'                     
         END                                                                    
         END   , WITH (JCB,R5)                                                  
*                                                                               
         B     CVNEXT                                                           
         PEND  ,                                                                
         TITLE 'CLEAR DEBUG - clear debugging session'                          
*box                                                                            
*                                                                               
*                                                                               
*   CLEAR DEBUG - clear debugging session                                       
*                                                                               
*                                                                               
*   we process three different cases,  1. debuggee , 2. debugger                
*          3. sombody else,,,, issued CLEAR DEBUG command                       
*                                                                               
*                                                                               
CLRDEBUG XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         CLEAR DBACTIVE                                                         
*                                                                               
         L     R2,DBEEJCB         R2 - DEBUGGEE JCB                             
         L     R3,DBERJCB         R3 - DEBUGGER JCB                             
*                                                                               
         IF    (CVCURJCB,EQ,R2),BEGIN     IF DEBUGEE,                           
         ACALL CLRALL             CLEAR ALL TRAPS                               
         L     R0,=A(DBAREA+8)    CLEAR DEBUG AREA                              
         L     R1,=A(DBLENGTH-8)                                                
         CLEAR R5                                                               
         MVCL  R0,R4                                                            
         LR    R1,R3              START UP DEBUGGER                             
         ACALL STARTJCB                                                         
         TSEG  'Debugging session terminated.'                                  
         B     CLREXIT                                                          
         END                                                                    
*                                                                               
         IF    (CVCURJCB,EQ,R3),BEGIN     IF DEBUGGER                           
         ACALL CLRALL             CLEAR ALL TRAPS                               
         SET   DBCLEAR            SET CLEAR FLAG                                
         LR    R1,R2              START UP DEBUGEE                              
         IF    (R1,NZ),BEGIN                                                    
         ACALL STARTJCB                                                         
         END                                                                    
         TSEG  'Debugging session terminated.'                                  
         B     CLREXIT                                                          
         END                                                                    
*                                                                               
         IF    ((CVCURJCB,NE,R2),OR,(CVCURJCB,NE,R3)),BEGIN                     
         WITH  (JCB,R5),BEGIN                                                   
         LR    R5,R2                                                            
         IF    JCBWFERR,BEGIN     IF DEBUGEE PAUSED,,                           
         ACALL CLRALL             CLEAR ALL TRAPS                               
         SET   DBCLEAR            SET CLEAR FLAG                                
         LR    R1,R2              START UP DEBUGEE                              
         ACALL STARTJCB                                                         
         TSEG  'Debugging session terminated. '                                 
         B     CLREXIT                                                          
         END                                                                    
         LR    R5,R3                                                            
         IF    JCBWFERR,BEGIN     IF DEBUGGER PAUSED,,                          
         ACALL CLRALL             CLEAR ALL TRAPS                               
         L     R0,=A(DBAREA+8)    CLEAR DEBUG AREA                              
         L     R1,=A(DBLENGTH-8)                                                
         CLEAR R5                                                               
         MVCL  R0,R4                                                            
         LR    R1,R3              START UP DEBUGGER                             
         ACALL STARTJCB                                                         
         TSEG  'Debugging session terminated.'                                  
         B     CLREXIT                                                          
         END                                                                    
         END   , WITH (JCB,R5)                                                  
         END                                                                    
*                                                                               
*                                                                               
CLREXIT  LABEL ,                                                                
         B     CVNEXT                                                           
         PEND  ,                                                                
         TITLE 'DEBUG - entry point for most debug commands'                    
*box                                                                            
*                                                                               
*                                                                               
*  DEBUG - root and entry point for most debugging commands                     
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WDEBUG   XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
*                                                                               
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         SCAN  DEBUGPRT                                                         
         SCANCHK ,                                                              
         ABORT 'Missing debug command.'                                         
         PEND  ,                                                                
*                                                                               
DEBUGPRT SCKW  S,SETDEBUG          S IS FOR DEBUG START                         
         SCKW  GO,WGO,A                                                         
         SCKW  GOTO,WGOTO                                                       
         SCKW  ST,WST                                                           
         SCKW  STS,WSTS                                                         
         SCKW  CT,WCT                                                           
         SCKW  CTS,WCTS                                                         
         SCKW  SC,WSC2                                                          
         SCKW  DISASM,WDISASM,A                                                 
         SCKW  PC,WPC2                                                          
         SCKW  SG,WSG                                                           
         SCKW  PG,WPG                                                           
         SCKW  SPG,WSPG                                                         
         SCKW  PPG,WPPG                                                         
         SCKW  SPSW,WSPSW                                                       
         SCKW  SCC,WSCC                                                         
         SCKW  PCC,WPCC                                                         
         SCKW  PIA,WPIA                                                         
         SCKW  TRACE,WTRACE,A                                                   
         SCKW  SA,WSA                                                           
         SCKW  ,V(SCNINVAL)                                                     
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'GO - continue execution after breakpoint'                       
*box                                                                            
*                                                                               
*                                                                               
*  WGO                                                                          
*                                                                               
*   START USER WE ARE DEBUGGING AND PAUSE OURSELVES.                            
*                                                                               
*                                                                               
WGO      XPROC ,                                                                
         L     R6,=A(DBAREA)      R6 - DEBUG DATA AREA                          
         USING DBDSECT,R6                                                       
*-                                                                              
*-       CHECK COMMAND VALIDITY                                                 
*-                                                                              
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*-                                                                              
*-       SCAN FOR COMMAND OPTIONS                                               
*-                                                                              
         COMMENT                  NO OPTIONS YET BUD                            
         COMMENT                                                                
         COMMENT                                                                
*-                                                                              
*-       START DEBUGEE, AND PAUSE DEBUGGER (THAT'S US)                          
*-                                                                              
         L     R1,DBEEJCB                                                       
         ACALL STARTJCB           START UP PAUSED DEBUGEE                       
         L     R1,DBERJCB                                                       
         ACALL PAUSEJCB           AND PAUSE DEBUGGER                            
*-                                                                              
*-       RESTARTED HERE BY DEBUG BREAK OR CLEAR DEBUG COMMAND                   
*-                                                                              
         IF    DBACTIVE,BEGIN     IF DEBUG IS STILL ACTIVE AND WE               
         IF    (CVCURJCB,EQ,DBERJCB),BEGIN     STILL ARE THE DEBUGER            
         ACALL STOPMSG            GIVE PAUSE MESSAGE                            
         END                                                                    
         END                                                                    
         B     CVNEXT                                                           
         PEND  ,                                                                
         TITLE 'GOTO - continue execution at specified address'                 
*box                                                                            
*                                                                               
*                                                                               
*  GOTO <address> - resume execution at specified address                       
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WGOTO    XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*-                                                                              
*-       SCAN ADDRESS OPTIONS                                                   
*-                                                                              
         SCINFO                                                                 
         LR    R2,R1              R2,R3 - LOC,LEN OF ADDRESS                    
         LR    R3,R0                                                            
         SCAN WGOTOPRT           SCAN DOES NOT RETURN                           
         SCANCHK ,                                                              
         BOMB                                                                   
*                                                                               
WGOTOPRT SCKW  NEXT,WGTNEXT                                                     
         SCKW  ABORT,WGTABORT                                                   
         SCKW  ,WGTEXPR                                                         
*-                                                                              
*-        PROCESS GENERAL ADDRESS EXPRESSION                                    
*-                                                                              
WGTEXPR  PROC  ,                  PROCESS GENERAL ADDRESS EXPRESSION            
         LR    R1,R2              R1,R0 - LOC, LEN OF ADDR EXPRESSION           
         LR    R0,R3                                                            
         SCINIT                                                                 
         ACALL EVALXPRN           EVALUATE INSTRUCTION ADDRESS                  
         COMMENT                    RETURNS R1=ADDR, R15=CC                     
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Missing address operand.'                                       
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid address.'                                               
         END                                                                    
         ACALL CHKRADDR                                                         
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address.'                                               
         END                                                                    
         ACALL CHKIADDR                                                         
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid instruction address.'                                   
         END                                                                    
*                                                                               
         ST    R1,DBIA            SAVE NEW INSTRUCTION ADDRESS                  
         ACALL WGO                EXIT VIA GO CODE                              
         BOMB                                                                   
         PEND                                                                   
*-                                                                              
*-       PROCESS GOTO NEXT,  GOTO ABORT,,,,                                     
*-                                                                              
WGTNEXT  PROC  ,                                                                
         LA    R1,CVNEXT          PATCH INSTR ADDR W/NEXT ADDR                  
         ST    R1,DBIA                                                          
         ACALL WGO                EXIT VIA GO CODE                              
         BOMB                                                                   
         PEND                                                                   
*                                                                               
WGTABORT PROC  ,                                                                
         SETMSG 'Command aborted by debugger.'                                  
         ST    R0,DBREG0          SAVE MESSAGE POINTERS                         
         ST    R1,DBREG1                                                        
         LA    R1,CVABTMSG        PATCH INSTR ADDR W/ABORT ADDR                 
         ST    R1,DBIA                                                          
         ACALL WGO                EXIT VIA GO CODE                              
         BOMB                                                                   
         PEND                                                                   
         TITLE 'ST - set trap'                                                  
WSTWA    RECORD BEGIN                                                           
WSTNAME  DS    CL8                TRAP NAME, IF SPECIFIED                       
WSTFLAG  FLAG   ,                                                               
         FLAG   WSTNOCHK          DO NOT CHECK TRAP ADDR VALIDITY               
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  WST - set trap                                                               
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WST      XPROC WSTWA                                                            
         CLEAR WSTWA                                                            
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^CVFTEST,BEGIN                                                   
         TSEG  'WDEBUG TRAPS are only available for test '                      
         TSEG  'systems.',,CR                                                   
         SETMSG 'Do it anyway'                                                  
         VCALL YESREQ                                                           
         END                                                                    
*-                                                                              
*-       CHECK FOR #ROUTINE TYPE TRAP                                           
*-                                                                              
         ACALL EVAL#SYM                                                         
         IF    NZ,BEGIN           IF #ROUTINE, GO SET #ROUTINE TRAP             
         LA    R2,WSTWA                                                         
         ACALL WST#SYM                                                          
         B     WSTEXIT                                                          
         END                                                                    
*-                                                                              
*-       GET TRAP ADDRESS                                                       
*-                                                                              
         ACALL EVALXPRN           EVALUATE TRAP ADDRESS EXPRESSION              
         COMMENT                  RETURNS R1 - ADDRESS,  R15 - CC               
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Trap specification missing.'                                    
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
   ABORT 'Invalid trap (address) specification, command ignored.'               
         END                                                                    
*                                                                               
         XPUSH R1,,                                                             
         LA    R4,WSTWA                                                         
         SCAN  WSTPRT             SCAN TRAP OPTIONS                             
         SCANCHK ,                                                              
         XPOP  R1,,                                                             
*-                                                                              
*-       SEE IF TRAP ALREADY EXISTS,  R1 - TRAP ADDRESS                         
*-                                                                              
         WITH  (DBTRAP,R5),BEGIN                                                
         IF    (R1,NZ),BEGIN      SEE IF TRAP ALREADY EXISTS                    
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC                                                        
         WHILE ((R4,NZ),AND,(R1,NE,DBTPADDR)),BEGIN                             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,NZ),BEGIN                                                    
         ABORT 'Trap already there, command ignored.'                           
         END                                                                    
         END                                                                    
*-                                                                              
*-       IS THERE ROOM FOR ANOTHER TRAP IN TABLE                                
*-                                                                              
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC                                                        
         WHILE ((R4,NZ),AND,(DBTRAP,NE,0)),BEGIN                                
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,Z),BEGIN                                                     
         ABORT 'Trap table full. Trap not set.'                                 
         END                                                                    
*-                                                                              
*-       CHECK TRAP ADDRESS, R1 - TRAP ADDRESS                                  
*-                                                                              
         ACALL CHKSADDR           CHECK ADDRESS (for store)                     
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address, command ignored.'                              
         END                                                                    
         IF    ^WSTNOCHK,BEGIN    IF TRAP ADDR CHECK, THEN CHECK                
         ACALL CHKIADDR           CHECK IF INSTRUCTION ADDRESS                  
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid instruction address, command ignored.'                  
         B     CVABORT                                                          
         END                                                                    
         CLI   0(R1),X'0A'        MAY NOT TRAP SVC'S                            
         IF    E,BEGIN                                                          
 ABORT  'SVC instructions may not be trapped.  Command ignored.'                
         END                                                                    
         CLI   0(R1),X'44'        MAY NOT TRAP EX INSTRUCTIONS                  
         IF    E,BEGIN                                                          
 ABORT  'EX instructions may not be trapped.  Command ignored.'                 
         END                                                                    
         L     R2,=A(WYLWBUG)     MAY NOT TRAP WITHIN DEBUG                     
         IF    (R1,GE,R2),BEGIN                                                 
         A     R2,=A(DEBUGLEN)                                                  
         IF    (R1,LT,R2),BEGIN                                                 
         ABORT 'Invalid instruction address, command ignored.'                  
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       FIND PLACE FOR TRAP                                                    
*-                                                                              
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC                                                        
         LA    R3,1                                                             
         WHILE ((R4,NZ),AND,(DBTRAP,NE,0)),BEGIN                                
         LA    R5,DBTPNEXT                                                      
         LA    R3,1(R3)           R3 - TRAP NUMBER                              
         BCTR  R4,0                                                             
         END                                                                    
*-                                                                              
*-       GIVE SET TRAP MESSAGE NOW                                              
*-                                                                              
         LR    R2,R1              R2, R1 - INSTRUCTION ADDRESS                  
         COMMENT                                                                
         TSEG  'Trap '            'Trap n set at (hex) instruction'             
         TNUM  (R3)                                                             
         TSEG  ' set at ('                                                      
         THEX  LH:@R2,4           ASSUME INSTR LENGTH IS 2                      
         IF    (@R2,GE,X'40'),BEGIN   IF INSTR LENGTH IS 4                      
         TSEG  ' '                                                              
         THEX  LH:@R2+2,4                                                       
         END                                                                    
         IF    (@R2,GE,X'D0'),BEGIN   IF INSTR LENGTH IS 6                      
         TSEG  ' '                                                              
         THEX  LH:@R2+4,4                                                       
         END                                                                    
         TSEG  ') instruction.',,CR                                             
         LR    R1,R2               R1 - TRAP ADDRESS                            
*-                                                                              
*-       SET TRAP,  R1 - TRAP ADDRESS                                           
*-                                                                              
         ST    R1,DBTPADDR        SET ADDRESS                                   
         SET   DBTPNORM           SET TYPE: NORMAL                              
         ACALL SETTRAP            SET TRAP OPCODE                               
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
WSTEXIT  LABEL ,                                                                
         B     CVNEXT                                                           
         PEND                                                                   
         EJECT                                                                  
*-                                                                              
*-       SCAN SET TRAP PARMS                                                    
*-                                                                              
WSTPRT   SCKW  NOCHECK,WSTNOCK                                                  
         SCKW  ,V(SCNINVAL)                                                     
         SPACE 3                                                                
WSTNOCK  DPROC ,                                                                
         USING WSTWA,R4                                                         
         SET   WSTNOCHK                                                         
         PEND                                                                   
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  WST#SYM - set #routine type trap                                             
*                                                                               
*                                                                               
*  on entry:  r15,r0 are trap name                                              
*             r2 is WSTWA                                                       
*                                                                               
*                                                                               
WST#SYM  PROC  ,                                                                
         USING WSTWA,R2                                                         
         STM   R15,R0,WSTNAME     SAVE ROUTINE NAME                             
*-                                                                              
*-       CHECK FOR DUPLICATE TRAPS                                              
*-                                                                              
         WITH  (DBTRAP,R5),BEGIN                                                
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC                                                        
         WHILE ((R4,NZ),AND,(' CLC DBTPNAME(8),WSTNAME',NE)),BEGIN              
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,NZ),BEGIN                                                    
         ABORT 'Trap already there, command ignored.'                           
         END                                                                    
*-                                                                              
*-       FIND PLACE FOR TRAP                                                    
*-                                                                              
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC                                                        
         LA    R3,1                                                             
         WHILE ((R4,NZ),AND,(DBTRAP,NE,0)),BEGIN                                
         LA    R5,DBTPNEXT                                                      
         LA    R3,1(R3)           R3 - TRAP NUMBER                              
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,Z),BEGIN                                                     
         ABORT 'Trap table full. Trap not set.'                                 
         END                                                                    
*-                                                                              
*-       SET TRAP, R3 - TRAP NUMBER                                             
*-                                                                              
         SET   DBTPNORM            SET TRAP TYPE: NORMAL                        
         MVC   DBTPNAME(8),WSTNAME MOVE IN TRAP NAME                            
*-                                                                              
*-       TRAP SET                                                               
*-                                                                              
         TSEG  'Trap '            'Trap n set at <xxx> routine. '               
         TNUM  (R3)                                                             
         TSEG  ' set at '                                                       
         TSEG  WSTNAME,8,TB                                                     
         TSEG  'routine.',,CR                                                   
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
         PEND  ,                                                                
         DROP  R2                                                               
         TITLE 'STS - show traps set'                                           
*box                                                                            
*                                                                               
*                                                                               
*  WSTS - show WYLBUR traps set                                                 
*                                                                               
*                                                                               
*    note: to see format of output, do a couple of WSTS commands                
*                                                                               
*                                                                               
WSTS     XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         SCAN  WSTSPRT                                                          
         SCANCHK ,                                                              
*                                                                               
         LA    R2,DBTRAPS         SEE IF THERE ARE TRAPS                        
         LA    R3,USERTC*(L'DBTRAP)                                             
         SR    R5,R5                                                            
         CLCL  R2,R4                                                            
         IF    E,BEGIN                                                          
         TSEG  'No Traps set.'    IF NO TRAPS, SAY SO, EXIT                     
         B     CVNEXT                                                           
         END                                                                    
*-                                                                              
*-        IF TRAPS, PRINT THEM                                                  
*-                                                                              
         WITH  (DBTRAP,R5),BEGIN                                                
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC                                                        
         LA    R3,1                                                             
         WHILE (R4,NZ),BEGIN      LOOP THRU ALL TRAPS                           
         IF    (DBTRAP,NE,0),BEGIN     IF TRAP, PRINT TRAP INFO                 
         TSEG  ' '                                                              
         IF    (R3,LE,9),BEGIN                                                  
         TSEG  ' '                                                              
         END                                                                    
         TNUM  (R3)                                                             
         TSEG  ' ('                                                             
         IF    (DBTPOPCD,NE,0),BEGIN                                            
         THEX  LH:DBTPOPCD,4                                                    
         END                                                                    
         ELSE  BEGIN ,                                                          
         TSEG  '----'                                                           
         END                                                                    
         TSEG  ') at '                                                          
         IF    (DBTPNAME,EQ,0),BEGIN                                            
         L     R1,DBTPADDR                                                      
         ACALL TSEGADDR                                                         
         END                                                                    
         ELSE  BEGIN ,                                                          
         TSEG  DBTPNAME,8,TB                                                    
         END                                                                    
         TCR                                                                    
         END   , PRINT TRAP INFO                                                
         LA    R5,DBTPNEXT        KEEP LOOPING                                  
         BCTR  R4,0                                                             
         LA    R3,1(R3)                                                         
         END   , WHILE LOOP                                                     
         END   , WITH (DBTRAP,R5)                                               
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       SHOW TRAPS PRINT OPTIONS                                               
*-                                                                              
WSTSPRT  SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
         TITLE 'CT - clear trap'                                                
WCTWA    RECORD BEGIN                                                           
WCTNAME  DS    CL8                 TRAP NAME, IF ANY                            
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*   CT - clear a trap                                                           
*                                                                               
*                                                                               
*                                                                               
*$ IF TRACE TRAP AND TRAP AT SAME LOC, CLR TRAP CLEARS BOTH, OH NO!             
*$                                                                              
WCT      XPROC WCTWA                                                            
         WITH  (DBTRAP,R5),BEGIN                                                
*                                                                               
         ACALL EVAL#SYM           SCAN FOR #ROUTINE                             
         IF    NZ,BEGIN           IF #ROUTINE, CLEAR IT                         
         LA    R2,WCTWA                                                         
         ACALL WCT#SYM                                                          
         B     WCTEXIT                                                          
         END                                                                    
*                                                                               
         ACALL EVALXPRN           SCAN TRAP EXPRESSION                          
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Trap specification missing.'                                    
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid trap specification.'                                    
         END                                                                    
*                                                                               
         IF    ((R1,GE,1),AND,(R1,LE,16)),BEGIN    IF TRAP #, CLEAR             
         LA    R5,DBTRAPS                                                       
         S     R1,=F'1'                                                         
         MH    R1,=AL2(L'DBTRAP)                                                
         AR    R5,R1                                                            
         IF    (DBTPADDR,NE,0),BEGIN               CLEAR NORMAL TRAP            
         L     R1,DBTPADDR                                                      
         LH    R0,DBTPOPCD                                                      
         STH   R0,0(R1)                                                         
         CLEAR DBTRAP                                                           
         B     WCTEXIT                                                          
         END                                                                    
         IF    (DBTPNAME,NE,0),BEGIN               IF #ROUTINE,                 
         LM    R15,R0,DBTPNAME                                                  
         ACALL WCT#SYM                                                          
         B     WCTEXIT                                                          
         END                                                                    
         END                                                                    
*                                                                               
         BEGIN ,                           IF ADDR SPECIFIED                    
         LA    R5,DBTRAPS                                                       
         LA    R4,USERTC                                                        
         WHILE ((R4,NZ),AND,(R1,NE,DBTPADDR)),BEGIN                             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,Z),BEGIN                                                     
         ABORT 'No such trap found.'                                            
         END                                                                    
         L     R1,DBTPADDR                                                      
         LH    R0,DBTPOPCD                                                      
         STH   R0,0(R1)                                                         
         CLEAR DBTRAP                                                           
         B     WCTEXIT                                                          
         END                                                                    
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
WCTEXIT  LABEL ,                                                                
         TSEG  'Trap cleared.',,CR                                              
         B     CVNEXT                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*   WCT#SYM - clear a #routine trap                                             
*                                                                               
*                                                                               
*   on entry - r15,r0  are trap name                                            
*              r2 is WCTWA                                                      
*                                                                               
*                                                                               
WCT#SYM  PROC  ,                                                                
         USING WCTWA,R2                                                         
         STM   R15,R0,WCTNAME     SAVE ROUTINE NAME                             
         WITH  (DBTRAP,R5),BEGIN                                                
*                                                                               
         LA    R5,DBTRAPS         FIND TRAP                                     
         LA    R4,USERTC                                                        
         WHILE ((R4,NZ),AND,(' CLC DBTPNAME(8),WCTNAME ',NE)),BEGIN             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,Z),BEGIN                                                     
         ABORT 'No such trap found.'                                            
         END                                                                    
         IF    (DBTPADDR,NE,0),BEGIN      CLEAR TRAP                            
         L     R1,DBTPADDR                                                      
         LH    R0,DBTPOPCD                                                      
         STH   R0,0(R1)                                                         
         CLEAR DBTRAP                                                           
         END                                                                    
         IF    (DBTPNAME,NE,0),BEGIN                                            
         CLEAR DBTRAP                                                           
         END                                                                    
         END   , WITH (DBTRAP,R5)                                               
*                                                                               
         PEND  ,                                                                
         DROP  R2                                                               
         TITLE 'CTS - clear all traps set'                                      
*box                                                                            
*                                                                               
*                                                                               
*  WCTS - clear all traps set                                                   
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WCTS     XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         ACALL CLRTRAPS           CLEAR USER TRAPS                              
         IF    ^DBTRACE,BEGIN     IF NOT TRACING CLEAR ALL TRAPS                
         ACALL CLRALL                BOTH USER AND TRACE TRAPS                  
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CLRTRAPS - clear all user traps                                              
*                                                                               
*                                                                               
*                                                                               
CLRTRAPS PROC  ,                                                                
         ACALL TRAPSOFF           TURN OFF TRAPS,                               
         LA    R2,DBTRAPS         CLEAR USER TRAP ENTRIES                       
         LA    R3,USERTC*(L'DBTRAP)                                             
         SR    R5,R5                                                            
         MVCL  R2,R4                                                            
         ACALL TRAPSON            TURN ON ANY REMAINING TRACE TRAPS             
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CLRALL - clear ALL traps, both user and trace                                
*                                                                               
*                                                                               
*                                                                               
CLRALL   PROC  ,                                                                
         ACALL TRAPSOFF           TURN OFF TRAPS,                               
         LA    R2,DBTRAPS         CLEAR USER AND TRACE TRAPS                    
         LA    R3,(USERTC+SPECTC)*(L'DBTRAP)                                    
         SR    R5,R5                                                            
         MVCL  R2,R4                                                            
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         TITLE 'SC - show core'                                                 
*box                                                                            
*                                                                               
*                                                                               
*  WSC - show WYLBUR memory                                                     
*                                                                               
*                                                                               
*                                                                               
WSC2     XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         ACALL EVALXPRN           EVALUATE ADDRESS EXPRESSION                   
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Missing address expression.'                                    
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid address expression.'                                    
         END                                                                    
         LR    R2,R1              R2 - ADDR TO START SHOWING                    
         LR    R4,R1              R4 - ADDR TO START SHOWING                    
*                                                                               
         ACALL EVALXPRN           EVALUATE LENGTH EXPRESSION                    
         IF    (R15,EQ,4),' LA R1,64 '     DEFAULT LENGTH IS 64                 
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid length expression.'                                     
         END                                                                    
         LR    R3,R1              R3 - LENGTH TO DISPLAY                        
*                                                                               
*$ CHECK FOR BREAK AS WELL AS DEBUGGER BELOW, OR ALWAYS SYNCHNOUS               
         IF    (CVCURJCB,EQ,DBERJCB),BEGIN    IF DEBUGGER,                      
         LR    R1,R2                          WE SHOW DEBUGEE CORE              
         ACALL RELOC                          R2 - RELOCATED ADDR               
         LR    R2,R1                                                            
         END                                                                    
*                                                                               
         CLEAR CPWK1               Reset ASCII translate flag                   
         SCAN  WSCPRT                                                           
         SCANCHK ,                                                              
*                                                                               
         LR    R1,R2              NOW R1,R0 - ADDR, LEN TO SHOW                 
         LR    R0,R3                    R15 - ADDR TO PRINT                     
         LR    R15,R4                                                           
         ACALL DISPCORE           DISPLAY MEMORY                                
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       SHOW CORE PRINT OPTIONS                                                
*-                                                                              
WSCPRT   SCKW  ASCII,WSCASCII,A                                                 
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
WSCASCII PROC  ,                   Set ASCII translate flag                     
         MVI   CPWK1,X'FF'                                                      
         PEND  ,                                                                
         TITLE 'DISASM - disassemble memory'                                    
*box                                                                            
*                                                                               
*                                                                               
*   DISASM - disasemble memory into 370 instructions                            
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WDISASM  XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         ACALL EVALXPRN           EVALUATE ADDRESS EXPRESSION                   
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Missing address expression.'                                    
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid address expression.'                                    
         END                                                                    
         LR    R2,R1              R2 - ADDR TO START SHOWING                    
*                                                                               
         ACALL EVALXPRN           EVALUATE LENGTH EXPRESSION                    
         IF    (R15,EQ,4),' LA R1,64 '     DEFAULT LENGTH IS 64                 
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid length expression.'                                     
         END                                                                    
         LR    R3,R1              R3 - LENGTH TO DISPLAY                        
*                                                                               
*$ DO NOT SHOW CP, STACK, HEAP, OR DIR RELOCATED ADDRESSES                      
         IF    (CVCURJCB,EQ,DBERJCB),BEGIN                                      
         LR    R1,R2                                                            
         ACALL RELOC                                                            
         IF    (R1,NE,R2),BEGIN                                                 
   ABORT 'Unable to disassemble debuggee CP, STACK, HEAP, or DIR'               
         END                                                                    
         END                                                                    
*                                                                               
         SCAN  WDISPRT                                                          
         SCANCHK                                                                
*                                                                               
         LR    R1,R2              NOW R1,R0 - ADDR, LEN TO SHOW                 
         LR    R0,R3                    R15 - ADDR TO PRINT                     
         LR    R15,R4                                                           
         ACALL DISPASM            DISPLAY DISASSEMBLED MEMORY                   
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       DISSASEMBLE PRINT OPTIONS                                              
*-                                                                              
WDISPRT  SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
         TITLE 'PC - patch core'                                                
PCWA     RECORD BEGIN                                                           
PCFLAG   FLAG                                                                   
         FLAG  PCSYS              SYSTEM (NO YES/NO PROMPT) OPTION              
PCTLEN   DS    H                  LENGTH OF REPLACEMENT TEXT                    
PCTEXT   DS    CL(&LINESZ)        REPLACEMENT TEXT                              
PCVLEN   DS    H                  VERIFICATION TEXT LENGTH                      
PCVTXT   DS    CL(&LINESZ)        VERIFICATION TEXT                             
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  PC - patch wylbur core                                                       
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WPC2     XPROC PCWA                                                             
         LA    R5,PCWA                                                          
         USING PCWA,R5                                                          
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
         CLEAR PCWA                                                             
*                                                                               
         ACALL EVALXPRN           EVALUATE ADDRESS EXPRESSION                   
         LR    R2,R1                RETURNS R1 - ADDRESS                        
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Missing address expression.'                                    
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid address expression.'                                    
         END                                                                    
*                                                                               
*$ CHECK FOR BREAK AS WELL AS DEBUGGER BELOW, OR ALWAYS SYNCHNOUS               
         IF    (CVCURJCB,EQ,DBERJCB),BEGIN   IF DEBUGER,                        
         ACALL RELOC                         PATCH DEBUGEE CORE                 
         LR    R2,R1                                                            
         END                                                                    
*                                                                               
         SCAN  ,                                                                
         SCANCHK ,                                                              
         IF    (R0,Z),CVABSENT                                                  
         LA    R15,PCTEXT                                                       
         VCALL DEQSTR             DEQOUTE TEXT                                  
         IF    NEG,BEGIN          NOT A STRING...                               
         LA    R15,PCTEXT                                                       
         VCALL HEXSTR             CHECK FOR HEX                                 
         IF    NEG,BEGIN                                                        
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid hex digits'                                           
         END                                                                    
         END                                                                    
         CEIL  R0,L'PCTEXT                                                      
         STH   R0,PCTLEN                                                        
*                                                                               
         SCAN  WPCPRT                                                           
         SCANCHK ,                                                              
         IF    NZ,' VCALL NOTVALID'                                             
*                                                                               
         LR    R1,R2               CHECK IF OK TO STORE AT ADDR                 
         LH    R0,PCTLEN                                                        
         ACALL CHKSADDR                                                         
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address.'                                               
         END                                                                    
*                                                                               
         TSEG  'Old data was '                                                  
         SETMSG (R2),LH:PCTLEN     ORIGINAL DATA                                
         FLOOR R0,PCVLEN                                                        
         FLOOR R0,4                                                             
         LA    R15,4                                                            
         VCALL HEXFMT                                                           
*                                                                               
         IF    ('LTH R15,PCVLEN',NZ),BEGIN                                      
         CMPR  R15,@R2,PCVTXT     COMPARE TEXT                                  
         IF    NE,'ABORT "Verify failed."'                                      
         END                                                                    
*                                                                               
         IF    ^PCSYS,BEGIN                                                     
         SETMSG 'Patch'                                                         
         VCALL YESREQ                                                           
         END                                                                    
*                                                                               
         IF    ('LTH R15,PCTLEN',NZ),BEGIN                                      
         MOVE  R15,@R2,PCTEXT     REPLACE TEXT                                  
         END                                                                    
*                                                                               
         SETMSG 'Done.'                                                         
         B     CVNXTMSG                                                         
         PEND  ,                                                                
         SPACE 2                                                                
WPCPRT   SCKW  VERIFY,PCVER,(A,P)                                               
         SCKW  SYSTEM,PCSETSYS,A                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
PCSETSYS PROC  ,                                                                
         SET   PCSYS                                                            
         PEND                                                                   
*                                                                               
PCVER    PROC  ,                                                                
         LA    R15,PCVTXT                                                       
         VCALL DEQSTR             DEQUOTE TEXT                                  
         IF    NEG,BEGIN          NOT A STRING...                               
         LA    R15,PCVTXT                                                       
         VCALL HEXSTR             CHECK FOR HEX                                 
         IF    NEG,BEGIN                                                        
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid hex digits'                                           
         END                                                                    
         END                                                                    
         CEIL  R0,L'PCVTXT                                                      
         STH   R0,PCVLEN                                                        
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
         DROP  R5                                                               
         TITLE 'SG - show registers'                                            
*box                                                                            
*                                                                               
*                                                                               
*   WSG - show WYLBUR's general purpose registers                               
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WSG      XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*                                                                               
         ACALL EVALXPRN           EVALUATE 1ST REG SPECIFICATION                
         IF    (R15,EQ,4),BEGIN   IF NO REG SPECIFICATION, ,,,                  
         LA    R0,14                 SHOW REGS 14 THRU 1                        
         LA    R1,1                                                             
         ACALL DISPREGS              DISPLAY R14 THRU R1                        
         B     CVNEXT                                                           
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid register specification.'                                
         END                                                                    
         IF    ((R1,NEG),OR,(R1,GT,15)),BEGIN                                   
         ABORT 'Invalid register specification.'                                
         END                                                                    
         LR    R2,R1              R2 - FIRST REGISTER TO SHOW                   
*                                                                               
         ACALL EVALXPRN           EVALUATE LAST REG SPECIFICATION               
         IF    (R15,EQ,4),BEGIN                                                 
         LR    R1,R2                                                            
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid register specification for 2nd register.'               
         END                                                                    
         IF    ((R1,NEG),OR,(R1,GT,15)),BEGIN                                   
         ABORT 'Invalid register specification for 2nd register.'               
         END                                                                    
*                                                                               
         LR    R0,R2              NOW R0,R1 - 1ST, LAST REGISTER                
*                                                                               
         XPUSH R0,R1                                                            
         SCAN  WSGPRT             SCAN REMAINING DISPLAY OPTIONS                
         SCANCHK                                                                
         XPOP  R0,R1                                                            
*                                                                               
         ACALL DISPREGS           DISPLAY REGISTERS                             
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       SHOW REGISTER PRINT OPTIONS                                            
*-                                                                              
WSGPRT   SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
         TITLE 'PG - patch general purpose register'                            
*box                                                                            
*                                                                               
*                                                                               
*  WPG - patch general purpose register                                         
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WPG      XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*                                                                               
         ACALL EVALXPRN           EVALUATE REGISTER OPERAND                     
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Missing operands'                                               
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid register specification.'                                
         END                                                                    
         IF    ((R1,NEG),OR,(R1,GT,15)),BEGIN                                   
         ABORT 'Invalid register specification.'                                
         END                                                                    
         LR    R2,R1              R2 - REGISTER # TO PATCH                      
*                                                                               
         ACALL EVALXPRN           EVALUATE PATCH VALUE                          
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Missing patch value operand.'                                   
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid patch value specified.'                                 
         END                                                                    
         COMMENT                  R1 - VALUE OF PATCH                           
*                                                                               
         SLL   R2,2               R2 - REGISTER OFFSET                          
         ST    R1,DBREGS(R2)      PATCH REGISTER !!                             
*                                                                               
         B     CVNEXT             WE DONE.                                      
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*   SPG - show wylbur page                                                      
*                                                                               
*   SPG <page number>  <offset>  <len>                                          
*                                                                               
*                                                                               
*                                                                               
WSPGWA   RECORD BEGIN ,                                                         
WSPGNUMB DS    F                   PAGE NUMBER                                  
WSPGOFF  DS    F                   DISPLAY OFFSET                               
WSPGLEN  DS    F                   DISPLAY LENGTH                               
WSPGJCB  DS    F                   JCB ADDR OF PAGE OWNER                       
WSPGTEMP DS    F                   TEMP PAGE NUMBER, FOR SAREAD                 
         END                                                                    
*                                                                               
*                                                                               
WSPG     XPROC WSPGWA                                                           
         USING DBDSECT,R6                                                       
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
*-                                                                              
*-       get page number, display offset, display length                        
*-                                                                              
         ACALL EVALXPRN                                                         
         IF    NZ,BEGIN                                                         
         ERROR 'Invalid or missing page number specification.'                  
         END                                                                    
         ST    R1,WSPGNUMB         SAVE PAGE NUMBER                             
         ACALL EVALXPRN                                                         
         IF    (R15,EQ,0),BEGIN                                                 
         ST    R1,WSPGOFF          SAVE DISPLAY OFFSET                          
         END                                                                    
         IF    (R15,EQ,4),BEGIN                                                 
         MVC   WSPGOFF(4),=F'-1'                                                
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ERROR 'Invalid page offset specification.'                             
         END                                                                    
         ACALL EVALXPRN                                                         
         IF    (R15,EQ,0),BEGIN                                                 
         CEIL  R1,1024             ** REMOVE LIMIT WHEN PLOCK FIXED             
         ST    R1,WSPGLEN          SAVE DISPLAY LENGTH                          
         END                                                                    
         IF    (R15,EQ,4),BEGIN                                                 
         MVC   WSPGLEN(4),=F'128'                                               
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ERROR 'Invalid page length specification.'                             
         END                                                                    
         SCAN  WSPGPRT                                                          
         SCANCHK                                                                
*-                                                                              
*-       get a dummy page, then do debug page read !                            
*-                                                                              
         VCALL PGETNEW             GET TEMP PAGE in PAR                         
         ST    R0,WSPGTEMP         SAVE TEMP PAGE NUMBER                        
         VCALL PLOCKA              Lock PAR page                                
         L     R0,WSPGNUMB                                                      
         VCALL DBGREAD             SPECIAL DEBUG PAGE READ !                    
         ST    R1,WSPGJCB                                                       
         IF    NZ,BEGIN                                                         
         XPUSH R15                                                              
         VCALL PUNLOCKA            Unlock PAR page                              
         PFREE PAR,EMPTY                                                        
         XPOP  R15                                                              
         TSEG  ' Command ignored. '                                             
         B     CVERROR                                                          
         END                                                                    
*-                                                                              
*-       page read,, display it                                                 
*-                                                                              
         IF    (WSPGOFF,EQ,-1),BEGIN   if offset not specified,                 
         CLEAR WSPGOFF                     display page owner                   
         TSEG  'Page number '                                                   
         TNUM  WSPGNUMB                                                         
         IF    ((WSPGJCB,EQ,0),OR,(WSPGNUMB,EQ,WSPGTEMP)),BEGIN                 
         TSEG  ' is not owned.',,CR                                             
         END                                                                    
         ELSE BEGIN                                                             
         TSEG  ' is owned by '                                                  
         L     R1,WSPGJCB                                                       
         ACALL TSEGUSER                                                         
         TSEG  '.',,CR                                                          
         END                                                                    
         END                                                                    
*                                                                               
         LR    R1,PAR                                                           
         A     R1,WSPGOFF          R1 - DISPLAY ADDRESS (ACTUAL)                
         L     R0,WSPGLEN          R0 - DISPLAY LENGTH                          
         L     R15,WSPGOFF         R15 - DISPLAY ADDRESS (TYPED)                
         ACALL DISPCORE            DISPLAY CORE                                 
         VCALL PUNLOCKA            Unlock PAR page                              
         PFREE PAR,EMPTY           FREE UP PAGE                                 
         B     CVNEXT              DONE                                         
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       SHOW PAGE PRINT OPTIONS                                                
*-                                                                              
WSPGPRT  SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
         EJECT                                                                  
*                                                                               
*  PATCH PAGE                                                                   
*                                                                               
*  NOT IMPLEMENTED                                                              
*                                                                               
*                                                                               
WPPG     PROC  ,                                                                
         VCALL NOTVALID            PATCH PAGE                                   
         PEND  ,                                                                
         TITLE 'SP - show psw'                                                  
*box                                                                            
*                                                                               
*                                                                               
*  WSP - show psw                                                               
*                                                                               
*                                                                               
*                                                                               
WSPSW    XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*                                                                               
         SCAN  WSPPRT                                                           
         SCANCHK ,                                                              
*                                                                               
         TSEG  ' '                                                              
         THEX  L:DBPSW,8                                                        
         TSEG  ' '                                                              
         L     R1,DBPSWIA                                                       
         N     R1,=X'80000000'     SET AMODE BIT OF PSW ADDRESS                 
         O     R1,DBIA                                                          
         THEX  (R1),8                                                           
         TSEG  '  '                                                             
         L     R1,DBIA                                                          
         ACALL TSEGSYM                                                          
*                                                                               
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       SHOW PSW PRINT OPTIONS                                                 
*-                                                                              
WSPPRT   SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
         TITLE 'SCC - show psw condition code'                                  
*box                                                                            
*                                                                               
*                                                                               
*  SCC - show condition code                                                    
*                                                                               
*                                                                               
*                                                                               
WSCC     XPROC ,                                                                
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*                                                                               
         SCAN  WSCCPRT                                                          
         SCANCHK                                                                
*                                                                               
         TSEG  'CC='                                                            
         TNUM  DBCC                                                             
         IF    (DBCC,EQ,0),BEGIN                                                
         TSEG  '  (zero,equal)'                                                 
         END                                                                    
         IF    (DBCC,EQ,1),BEGIN                                                
         TSEG  '  (minus,mixed,low)'                                            
         END                                                                    
         IF    (DBCC,EQ,2),BEGIN                                                
         TSEG  '  (positive,high)'                                              
         END                                                                    
         IF    (DBCC,EQ,3),BEGIN                                                
         TSEG  '  (ones,overflow)'                                              
         END                                                                    
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       SHOW CC PRINT OPTIONS                                                  
*-                                                                              
WSCCPRT  SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'PCC - patch psw condition code'                                 
*box                                                                            
*                                                                               
*                                                                               
*  PCC - patch condition code                                                   
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WPCC     XPROC ,                                                                
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*                                                                               
         CLEAR DBCC               DEFAULT IS CC=0                               
         SCAN  WPCCPRT            SCAN AND PROCESS OPTION                       
         SCANCHK                                                                
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-        CC OPTIONS                                                            
*-                                                                              
WPCCPRT  SCKW  0,WPCC0                                                          
         SCKW  ZERO,WPCC0,A                                                     
         SCKW  EQUAL,WPCC0,A                                                    
         SCKW  1,WPCC1                                                          
         SCKW  NEGATIVE,WPCC1,A                                                 
         SCKW  LOW,WPCC1                                                        
         SCKW  MIXED,WPCC1,A                                                    
         SCKW  MINUS,WPCC1,A                                                    
         SCKW  2,WPCC2                                                          
         SCKW  POSITIVE,WPCC2,A                                                 
         SCKW  HIGH,WPCC2                                                       
         SCKW  PLUS,WPCC2                                                       
         SCKW  3,WPCC3                                                          
         SCKW  ONES,WPCC3                                                       
         SCKW  OVERFLOW,WPCC3,A                                                 
         SCKW  ,V(SCNINVAL)                                                     
*-                                                                              
*-       CC SET ROUTINES                                                        
*-                                                                              
WPCC0    PROC  ,                  SET CC=0                                      
         LA    R1,0                                                             
         ST    R1,DBCC                                                          
         PEND  ,                                                                
*                                                                               
WPCC1    PROC  ,                  SET CC=1                                      
         LA    R1,1                                                             
         ST    R1,DBCC                                                          
         PEND  ,                                                                
*                                                                               
WPCC2    PROC  ,                  SET CC=2                                      
         LA    R1,2                                                             
         ST    R1,DBCC                                                          
         PEND  ,                                                                
*                                                                               
WPCC3    PROC  ,                  SET CC=3                                      
         LA    R1,3                                                             
         ST    R1,DBCC                                                          
         PEND  ,                                                                
         TITLE 'PIA - patch instruction address'                                
*box                                                                            
*                                                                               
*                                                                               
*  WPIA - patch instruction address                                             
*                                                                               
*                                                                               
*                                                                               
*                                                                               
WPIA     XPROC ,                                                                
         IF    ^CPSFSPR,' VCALL NOTVALID'                                       
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
*                                                                               
         IF    ^DBACTIVE,BEGIN                                                  
         ABORT 'Debugging session not active.'                                  
         END                                                                    
         IF    (CVCURJCB,NE,DBERJCB),BEGIN                                      
         ABORT 'Current line not debugger.'                                     
         END                                                                    
         IF    ^DBBREAK,BEGIN                                                   
         ABORT 'Not in debugging session break.  Command ignored.'              
         END                                                                    
*                                                                               
         ACALL EVALXPRN           EVALUATE INSTRUCTION ADDRESS                  
         COMMENT                    RETURNS R1=ADDR, R15=CC                     
         IF    (R15,EQ,4),BEGIN                                                 
         ABORT 'Missing address operand.'                                       
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         ABORT 'Invalid address.'                                               
         END                                                                    
         ACALL CHKRADDR                                                         
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address.'                                               
         END                                                                    
         ACALL CHKIADDR                                                         
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid instruction address.'                                   
         END                                                                    
*                                                                               
         ST    R1,DBIA            SAVE NEW INSTRUCTION ADDRESS                  
*                                                                               
         B     CVNEXT                                                           
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'TRACE - turn on/off debug tracing'                              
*box                                                                            
*                                                                               
*                                                                               
*  TRACE - turn on/off debug tracing                                            
*                                                                               
*                                                                               
*  note: failsoft type tracing is turned on automatically when                  
*        a debugging session is started.                                        
*                                                                               
*                                                                               
*                                                                               
WTRACE   XPROC ,                                                                
         L     R6,=A(DBAREA)                                                    
*                                                                               
         SCAN  TRACEPRT ,,        SCAN FOR ON/OFF                               
         SCANCHK                                                                
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 3                                                                
TRACEPRT SCKW  ,TRACEON,NULL       DEFAULT IS ON                                
         SCKW  ON,TRACEON                                                       
         SCKW  YES,TRACEON                                                      
         SCKW  OFF,TRACEOFF                                                     
         SCKW  NO,TRACEOFF                                                      
         SCKW  ,V(SCNINVAL)                                                     
         SPACE 3                                                                
*-                                                                              
*-       TRACE ON                                                               
*-                                                                              
TRACEON  PROC  ,                  TURN TRACE ON                                 
         SET   DBTRACE                                                          
         PEND  ,                                                                
         SPACE 2                                                                
*-                                                                              
*-       TRACE OFF                                                              
*-                                                                              
TRACEOFF PROC  ,                  TURN TRACE OFF                                
         CLEAR DBTRACE                                                          
         ACALL TRAPSOFF           TURN OFF TRAPS, RESTORES OPCODES              
         LA    R2,DBTRAPT         CLEAR ALL TRACE TRAPS                         
         LA    R3,(RETTC+2)*(L'DBTRAP)                                          
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         ACALL TRAPSON            TURN REMAINING TRAPS BACK ON                  
         PEND  ,                                                                
         TITLE 'TRACE - set trace traps'                                        
*box                                                                            
*                                                                               
*                                                                               
*  TRAPTRC - set trace traps                                                    
*                                                                               
*  This routine is called from the trace routine in FAIL.  trace                
*  routine linkages are a bit tricky.  see CVENT in CV and TRC in               
*  FAIL for hints.                                                              
*                                                                               
*  * !!!!                                                                       
*  * DO NOT DO XPROC FOR C COMPATIBILITY !!!                                    
*  * !!!!                                                                       
*                                                                               
TRAPTRC  LABEL ,                  UNIQUE ENTRY                                  
         ENTRY TRAPTRC                                                          
         BALR  R1,0                                                             
         USING *,R1                                                             
         L     R1,=A(DBAREA)                                                    
         STM   R0,R15,DBTRCSAV-DBDSECT(R1)                                      
         DROP  R1                                                               
         BALR  BR,0                                                             
         USING *,BR                                                             
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
         L     CVR,=V(CV)                                                       
         L     R13,CVSTACKE       USE LAST BIT OF STACK FOR DEBUG               
         S     R13,=A(DBSTKLEN)                                                 
*        BE CAREFUL!!, THIS STACK IS SMALL, IN AKWARD PLACE                     
*-                                                                              
*-   TRACE ONLY IF DEBUG IS ACTIVE, USER IS DEBUGEE, AND NOT ALREADY            
*-       PROCESSING SPIE ROUTINE LEVEL=1, AND IF NOT IN DISPATCHER              
*-                                                                              
         IF    ^DBACTIVE,TTRCEXIT                                               
         IF    ((CVCURJCB,NE,DBEEJCB),AND,(DBEEJCB,NE,0)),TTRCEXIT              
         IF    DBRNO,TTRCEXIT                                                   
         L     R1,CVLNKRGS+R13*4  **** TEST FOR DISPATCHER                      
         IF    ((R1,LT,CVSTACK),OR,(R1,GT,CVSTACKE)),TTRCEXIT                   
*-                                                                              
*-       GET TRACE INFO                                                         
*-                                                                              
         WITH  (TP,R5),BEGIN      GET TRACE INFO, ADDRESSES                     
         L     R5,CVLNKRTN                                                      
         LA    R1,TPNAME                                                        
         LA    R2,TPEND  ,                                                      
         IF    TPFKAPUT*TPFMSG,' LA R2,TPENDK'                                  
         SR    R3,R3                                                            
         SR    R4,R4                                                            
         IF    (TPNAME,EQ,'ENTRY   '),BEGIN                                     
         L     R1,CVLNKRGS+(R7*4)                                               
         S     R1,=F'8'                                                         
         SR    R2,R2                                                            
         L     R3,CVLNKRGS+(R7*4)                                               
         L     R4,CVLNKRGS+(R14*4)                                              
         END                                                                    
         LA    R0,0(R1)           R1 - ROUTINE NAME ADDR                        
         LA    R2,0(R2)           R2 - TRACE ADDR                               
         LA    R3,0(R3)           R3 - ROUTINE ENTRY ADDR                       
         LA    R4,0(R4)           R4 - ROUTINE RETURN ADDR                      
         END   , WITH (TP,R5)                                                   
*                                                                               
         WITH  (DBTRAP,R5),BEGIN  CLEAR TRACE AND ENTRY TRAPS                   
         LA    R5,DBTRAPT                                                       
         CLEAR DBTRAP                                                           
         LA    R5,DBTRAPE                                                       
         CLEAR DBTRAP                                                           
*-                                                                              
*-       IF TRACE, SET TRACE TRAPS                                              
*-                                                                              
         IF    DBTRACE,BEGIN      IF TRACE IS ON, SET TRACE TRAPS               
         IF    (R2,NE,0),BEGIN    SET TRACE TRAP                                
         LA    R5,DBTRAPT                                                       
         SET   DBTPTRC                                                          
         ST    R2,DBTPADDR                                                      
         ACALL SETTRAP                                                          
         MVC   DBTPNAME(8),0(R1)                                                
         END                                                                    
         IF    (R3,NE,0),BEGIN    SET ENTRY TRAP                                
         LA    R5,DBTRAPE                                                       
         SET   DBTPNTY                                                          
         ST    R3,DBTPADDR                                                      
         ACALL SETTRAP                                                          
         MVC   DBTPNAME(8),0(R1)                                                
         END                                                                    
*$ COULD MAKE BELOW CODE LOOK BETTER                                            
         IF    (R4,NE,0),BEGIN    SET RETURN TRAP                               
         LA    R5,DBTRAPRL        PUSH RETURN TRAP LIST                         
         IF    (DBTPADDR,NE,0),BEGIN   IF LAST TRAP EXITS, CLR IT               
         XPUSH R1,,                       BEFORE PUSHING OFF LIST               
         L     R1,DBTPADDR                                                      
         LH    R0,DBTPOPCD                                                      
         STH   R0,0(R1)                                                         
         XPOP  R1,,                                                             
         END                                                                    
         LA    R5,DBTRAPRL        PUSH RETURN TRAP LIST                         
         LA    R0,DBTRAPR                                                       
         WHILE (R5,GT,R0),BEGIN                                                 
         S     R5,=A(L'DBTRAP)                                                  
         MVC   DBTPNEXT(L'DBTRAP),DBTRAP                                        
         END                                                                    
         LA    R5,DBTRAPR                                                       
         SET   DBTPRET                                                          
         ST    R4,DBTPADDR                                                      
         ACALL SETTRAP                                                          
         MVC   DBTPNAME,0(R1)                                                   
         END                                                                    
         END                                                                    
*-                                                                              
*-       IF NOT TRACE, CHECK FOR TRAP BY NAME                                   
*-                                                                              
         LA    R5,DBTRAPS         LOOK FOR TRAP WITH SAME NAME                  
         LA    R4,USERTC                                                        
         WHILE ((R4,POS),AND,(@R1,NE,DBTPNAME)),BEGIN                           
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,NZ),BEGIN      IF #ROUTINE TRAP NAME MATCHES,,               
         IF    (R2,NE,0),BEGIN    SET TRACE TRAP                                
         LA    R5,DBTRAPT                                                       
         SET   DBTPTRC                                                          
         ST    R2,DBTPADDR                                                      
         ACALL SETTRAP                                                          
         MVC   DBTPNAME(8),0(R1)                                                
         END                                                                    
         IF    (R3,NE,0),BEGIN    SET ENTRY TRAP                                
         LA    R5,DBTRAPE                                                       
         SET   DBTPNTY                                                          
         ST    R3,DBTPADDR                                                      
         ACALL SETTRAP                                                          
         MVC   DBTPNAME(8),0(R1)                                                
         END                                                                    
         END                                                                    
         END   , WITH (DBTRAP,R5)                                               
*-                                                                              
*-                                                                              
*-                                                                              
TTRCEXIT LABEL ,                                                                
         LM    R0,R15,DBTRCSAV                                                  
         BR    RAR                                                              
         TITLE 'SA - show WYLBUR address'                                       
*box                                                                            
*                                                                               
*                                                                               
*  WSA - show wylbur address                                                    
*                                                                               
*                                                                               
*                                                                               
WSA      XPROC ,                                                                
         L     R6,=A(DBAREA)                                                    
         USING DBDSECT,R6                                                       
         ACALL EVALXPRN           EVALUATE ADDRESS EXPRESSION                   
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address expression.'                                    
         END                                                                    
         LR    R2,R1              R2 - ADDRESS                                  
*                                                                               
         SCAN  WSAPRT                                                           
         SCANCHK                                                                
*                                                                               
         TNUM  (R2)                                                             
         TSEG  '   0'                                                           
         IF    (R2,NZ),BEGIN                                                    
         THEX  (R2)                                                             
         END                                                                    
         TSEG ' '                                                               
         LR    R1,R2                                                            
         ACALL TSEGSYM            IF SYMBOLIC FORM, PRINT IT TOO                
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
*-                                                                              
*-       SA PRINT OPTIONS                                                       
*-                                                                              
WSAPRT   SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'Debug Subroutines - Evaluate ...'                               
*box                                                                            
*                                                                               
*                                                                               
*       EVALXPRN - EVALUATE AN ADDRESS EXPRESSION                               
*                                                                               
*       ON ENTRY: SCANNER IS SET UP TO POINT AT EXPRESSION                      
*                                                                               
*       ON EXIT:  R1 - VALUE OF EXPRESSION                                      
*                 CC SET,  R15=0  OK                                            
*                          R15=4  NO EXPRESSION FOUND                           
*                          R15=8  INVALID EXPRESSION                            
*                                                                               
*                                                                               
*       NOTE: EXPRESSION MUST BE SIMPLE. PLUSES AND MINUSES,                    
*             SYMBOLS, @REGISTERS, *, HEXIDCIMAL, AND DECIMAL                   
*             VALUES ARE ALLOWED. NOTHING ELSE.                                 
*                                                                               
*                                                                               
*                                                                               
EVWA     RECORD BEGIN ,                                                         
EVVALUE  DS    F                  VALUE OF EXPRESSION                           
EVOPR    DS    X                  VALUE OF OPERATOR +/-                         
         END   ,                                                                
         SPACE 2                                                                
*-                                                                              
*-       EVALUATE SIMPLE ADDRESS EXPRESSION                                     
*-                                                                              
*-                                                                              
EVALXPRN PROC  EVWA                                                             
         CLEAR EVWA               INITIALIZE WORK AREA TO ZEROS                 
         MVC   EVVALUE(4),=F'0'   ZERO EXPRESSION VALUE                         
*                                                                               
         SCAN  ,                  SCAN FIRST TERM OF EXPRESSION                 
         SCANCHK ,                                                              
         IF    (R0,Z),NOEXPR                                                    
         IF    ((@R1,NE,''''),OR,(@R1,NE,'"')),BEGIN UPCASE TERM                
         SCUPCASE (R1),(R0)                                                     
         END                                                                    
         B     EVALTERM           EVALUATE IT                                   
         SPACE                                                                  
*-                                                                              
*-       LOOP THRU ALL TERMS IN EXPRESSION                                      
*-                                                                              
EVALLOOP LABEL ,                                                                
         SCINFO                                                                 
         IF    (R0,Z),EVALDONE           IF NO MORE TERMS, EXIT                 
         IF    (@R1,EQ,' '),EVALDONE     IF END OF EXPRESSION, EXIT             
         IF    (@R1,EQ,','),EVALDONE     IF END OF EXPRESSION, EXIT             
         IF    (@R1,EQ,'='),EVALDONE     IF END OF EXPRESSION, EXIT             
*                                                                               
         SCAN  ,                  SCAN NEXT TERM                                
         SCANCHK ,                                                              
         IF    (R0,Z),EVALDONE           IF NO NEXT TERM, EXIT                  
         IF    ((@R1,NE,''''),OR,(@R1,NE,'"')),BEGIN UPCASE TERM                
         SCUPCASE (R1),(R0)                                                     
         END                                                                    
*                                                                               
*                                 EVALUATE EXPRESSION TERMS                     
EVALTERM LABEL ,                  OH YEAH !!                                    
         COMMENT                                                                
         SPACE                                                                  
*-                                                                              
*-       PLUS SIGN                                                              
*-                                                                              
         IF    (@R1,EQ,'+'),BEGIN                                               
         CLI   EVOPR,0                                                          
         BNE   BADEXPR                                                          
         MVI   EVOPR,C'+'         SET ADDITION OPERATOR                         
         B     EVALLOOP                                                         
         END                                                                    
*-                                                                              
*-       MINUS SIGN                                                             
*-                                                                              
         IF    (@R1,EQ,'-'),BEGIN                                               
         CLI   EVOPR,0                                                          
         BNE   BADEXPR                                                          
         MVI   EVOPR,C'-'         SET SUBTRACT OPERATOR                         
         B     EVALLOOP                                                         
         END                                                                    
*-                                                                              
*-       @ REGISTER                                                             
*-                                                                              
         IF    (@R1,EQ,'@'),BEGIN                                               
         IF    ^DBBREAK,BADEXPR   NOT AT BREAK, NO REGISTERS                    
         LA    R1,1(R1)           SKIP TO REGISTER NUMBER                       
         S     R0,=F'1'                                                         
         BNP   BADEXPR                                                          
         IF    (@R1,EQ,'0'),' VCALL XTB '    CONVERT REG # TO BINARY            
         ELSE  'VCALL DTB '                                                     
         IF    (R0,POS),BADEXPR                                                 
         IF    ((R15,LT,0),OR,(R15,GT,15)),BADEXPR  0 <= REG # <= 15            
         SLL   R15,2                                                            
         L     R1,DBREGS(R15)     GET VALUE OF REGISTER                         
         L     R2,=X'FF000000'                                                  
         NR    R2,R1                                                            
         IF    (R2,NE,X'FF000000'),BEGIN                                        
         LA    R1,0(R1)                                                         
         END                                                                    
         IF    (EVOPR,EQ,'-'),BEGIN                                             
         LCR   R1,R1                                                            
         END   ,                  SUBTRACT OR ADD                               
         A     R1,EVVALUE         ADD VALUE TO EXPRESSION                       
         ST    R1,EVVALUE                                                       
         MVI   EVOPR,0            CLEAR OPERATOR                                
         B     EVALLOOP                                                         
         END                                                                    
*-                                                                              
*-       *,  CURRENT INSTRUCTION ADDRESS                                        
*-                                                                              
         IF    ((@R1,EQ,'*'),AND,(R0,EQ,1)),BEGIN                               
         IF    ^DBBREAK,BADEXPR                                                 
         L     R1,DBIA            GET INSTRUCTION ADDR VALUE                    
         IF    (EVOPR,EQ,'-'),BEGIN                                             
         LCR   R1,R1                                                            
         END   ,                   SUBTRACT OR                                  
         A     R1,EVVALUE         ADD VALUE TO EXPRESSION                       
         ST    R1,EVVALUE                                                       
         MVI   EVOPR,0            CLEAR OPERATOR                                
         B     EVALLOOP                                                         
         END                                                                    
*-                                                                              
*-       HEX NUMBER                                                             
*-                                                                              
         IF    (@R1,EQ,'0'),BEGIN                                               
         IF    (R0,LE,0),BADEXPR                                                
         VCALL XTB                CONVERT HEX TO BINARY                         
         IF    (R0,POS),BADEXPR                                                 
         LR    R1,R15             R1 - HEX VALUE                                
         IF    (EVOPR,EQ,'-'),BEGIN                                             
         LCR   R1,R1                                                            
         END   ,                  SUBTRACT OR,                                  
         A     R1,EVVALUE         ADD VALUE TO EXPRESSION                       
         ST    R1,EVVALUE                                                       
         MVI   EVOPR,0            CLEAR OPERATOR                                
         B     EVALLOOP                                                         
         END                                                                    
*-                                                                              
*-       DECIMAL NUMBER                                                         
*-                                                                              
         IF    ((@R1,GE,'1'),AND,(@R1,LE,'9')),BEGIN                            
         IF    (R0,LE,0),BADEXPR                                                
         VCALL DTB                CONVERT DEC TO BINARY                         
         IF    (R0,POS),BADEXPR                                                 
         LR    R1,R15             R1 - DECIMAL VALUE                            
         IF    (EVOPR,EQ,'-'),BEGIN                                             
         LCR   R1,R1                                                            
         END   ,                  SUBTRACT OR                                   
         A     R1,EVVALUE         ADD VALUE TO EXPRESSION                       
         ST    R1,EVVALUE                                                       
         MVI   EVOPR,0            CLEAR OPERATOR                                
         B     EVALLOOP                                                         
         END                                                                    
*-                                                                              
*-       TRACE SUBROUTINE ADDRESS,                                              
*-                                                                              
         IF    (@R1,EQ,'#'),BEGIN                                               
         COMMENT                  TRACE SUBROUTINES CAN NOT BE                  
         COMMENT                  EVALUATED, PROCESS AS #SYMBOL BELOW           
         END                                                                    
*-                                                                              
*-       SYMBOL                                                                 
*-                                                                              
         BEGIN                                                                  
         ACALL EVALSYM            EVALUATE SYMBOL, VALUE                        
         BNZ   BADEXPR            R1 - SYMBOL VALUE                             
         IF    (EVOPR,EQ,'-'),BEGIN                                             
         LCR   R1,R1                                                            
         END   ,                  SUBTRACT OR ,,                                
         A     R1,EVVALUE         ADD VALUE TO EXPRESSION                       
         ST    R1,EVVALUE                                                       
         MVI   EVOPR,0            CLEAR OPERATOR                                
         B     EVALLOOP                                                         
         END                                                                    
*-                                                                              
*-       GOT EVALUATED ADDRESS, CHECK IT                                        
*-                                                                              
EVALDONE LABEL ,                                                                
         CLI   EVOPR,0            NO HANGING OPERATORS                          
         BNE   BADEXPR                                                          
         L     R1,EVVALUE         RETURN VALUE, CC=0                            
         SR    R15,R15                                                          
         B     EVALEXIT                                                         
*-                                                                              
*-       ERROR IN EXPRESION EVAULATION                                          
*-                                                                              
NOEXPR   LABEL ,                  NO EXPRESSION                                 
         SR    R1,R1                                                            
         LA    R15,4                                                            
         B     EVALEXIT                                                         
*                                                                               
BADEXPR  LABEL ,                  INVALID EXPRESSION                            
         SR    R1,R1                                                            
         LA    R15,8                                                            
         B     EVALEXIT                                                         
*                                                                               
*                                                                               
*                                                                               
EVALEXIT LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         TITLE 'Debug Subroutines - Evaluate ...'                               
*box                                                                            
*                                                                               
*                                                                               
*  EVALSYM - find value of symbolic address                                     
*                                                                               
*  on entry:  r1 - location of symbol                                           
*             r0 - length of symbol                                             
*                                                                               
*  on exit:   r1 - symbol address                                               
*            r15 - CC=0 symbol found,  CC=NZ symbol not found (r1=0)            
*                                                                               
*                                                                               
*                                                                               
EVWA2    RECORD BEGIN ,           WORK AREA FOR SYMBOL, ADDR EVAL               
EV2SYM   DS    CL8                SYMBOL                                        
EV2ADDR  DS    F                  ADDR                                          
EV2OFF   DS    F                  OFFSET                                        
         END   ,                                                                
         SPACE 2                                                                
*-                                                                              
*-        EVALUATE SYMBOL                                                       
*-                                                                              
*-                                                                              
EVALSYM  PROC  EVWA2                                                            
         MVC   EV2SYM(8),CVBLANKS                                               
         IF    ((R0,LT,1),OR,(R0,GT,8)),BADSYM                                  
         LR    R2,R0                                                            
         DEX   R2,' MVC EV2SYM(0),0(R1)'                                        
*-                                                                              
*-        CHECK SYMBOL TABLE                                                    
*-                                                                              
         L     R2,=V(SYMBOLS)                                                   
         WITH  (SYMBOL,R2),BEGIN                                                
         UNTIL SYMFEND,BEGIN      LOOP THRU SYMBOL TABLE                        
         IF    (SYMNAME,EQ,EV2SYM),BEGIN    IF SYMBOL FOUND, ,,,                
         L3    R1,SYMADDR                         R1 - ADDR, CC = 0             
         LA    R1,0(R1)                                                         
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         LA    R2,SYMNEXT                                                       
         END                                                                    
         END   , WITH (SYMBOL,R2)                                               
*-                                                                              
*-       CHECK ODDBALL SYMBOLS                                                  
*-                                                                              
         IF    (EV2SYM,EQ,'CP      '),BEGIN    IF CP,                           
         COMMENT                                                                
         IF    ((CVCURJCB,EQ,DBERJCB),AND,(DBEEJCB,NE,0)),BEGIN                 
         L     R1,DBEECP                                                        
         SR    R15,R15                         IF DEBUGGER,                     
         B     ESYMEXIT                           SHOW DEBUGGEE CP              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R1,CP                                                            
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         END                                                                    
         IF    (EV2SYM,EQ,'STACK   '),BEGIN    IF STACK ,,                      
         L     R1,CVSTACK                                                       
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         IF    (EV2SYM,EQ,'HEAP    '),BEGIN    IF HEAP ,,                       
         L     R1,CVHEAP                                                        
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         IF    (EV2SYM,EQ,'JCB     '),BEGIN    IF JCB,,                         
         COMMENT                                                                
         IF    ((CVCURJCB,EQ,DBERJCB),AND,(DBEEJCB,NE,0)),BEGIN                 
         L     R1,DBEEJCB                                                       
         SR    R15,R15                         IF DEBUGGER,                     
         B     ESYMEXIT                           SHOW DEBUGEE JCB              
         END                                                                    
         ELSE  BEGIN                                                            
         L     R1,CVCURJCB                                                      
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         END                                                                    
         IF    (EV2SYM,EQ,'PGA     '),BEGIN    IF PAGE A ,,                     
         IF    (DBPAR,NE,0),BEGIN                  AND PAGE A EXISTS            
         L     R1,DBPAR                                                         
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         END                                                                    
         IF    (EV2SYM,EQ,'PGB     '),BEGIN    IF PAGE B ,,                     
         IF    (DBPAR,NE,0),BEGIN                  AND PAGE B EXISTS            
         L     R1,DBPBR                                                         
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         END                                                                    
         IF    (EV2SYM,EQ,'DBAREA  '),BEGIN   IF DBAREA ,,                      
         L     R1,=A(DBAREA)                                                    
         SR    R15,R15                                                          
         B     ESYMEXIT                                                         
         END                                                                    
         SPACE 2                                                                
*                                                                               
BADSYM   LABEL ,                  BAD OR NO SYMBOL                              
         SR    R1,R1                 R1 = 0, CC = NZ                            
         LA    R15,4                                                            
*                                                                               
ESYMEXIT LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         TITLE 'Debug Subroutines - Evaluate ...'                               
*box                                                                            
*                                                                               
*                                                                               
*  EVALADDR - evaluate address into CSECT+OFFSET value                          
*                                                                               
*  on entry:   r1 - address                                                     
*                                                                               
*  on exit:    r1 - offset                                                      
*              r15,r0 - csect name                                              
*              if r15=0, no csect found, r1 = address                           
*                                                                               
*                                                                               
EVALADDR PROC  EVWA2                                                            
         ST    R1,EV2ADDR         INIT WORK AREA                                
         LA    R1,0(R1)                                                         
*                                                                               
* CHECK FOR ODDBALLS FIRST                                                      
*                                                                               
         LA    R2,CP                                        IF CP,              
         LR    R3,R2                                                            
         A     R3,=A(CPXSIZE)                                                   
         IF    ((R1,GE,R2),AND,(R1,LT,R3)),BEGIN                                
         MVC   EV2SYM(8),=C'CP      '                                           
         SR    R1,R2                                                            
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END                                                                    
*                                                                               
         IF    ((CVCURJCB,EQ,DBERJCB),AND,(DBEEJCB,NE,0)),BEGIN                 
         L     R2,DBEECP                                                        
         LR    R3,R2                             IF DEBUGGER,                   
         A     R3,=A(CPXSIZE)                      CHECK DEBUGGEE CP            
         IF    ((R1,GE,R2),AND,(R1,LT,R3)),BEGIN                                
         MVC   EV2SYM(8),=C'CP      '                                           
         SR    R1,R2                                                            
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END                                                                    
         END                                                                    
*                                                                               
         IF    ((R1,GE,CVSTACK),AND,(R1,LT,CVSTACKE)),BEGIN IF STACK,           
         MVC   EV2SYM(8),=C'STACK   '                                           
         S     R1,CVSTACK                                                       
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END                                                                    
*                                                                               
         IF    ((R1,GE,CVHEAP),AND,(R1,LT,CVHEAPE)),BEGIN  IF HEAP,             
         MVC   EV2SYM(8),=C'HEAP    '                                           
         S     R1,CVHEAP                                                        
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END                                                                    
*                                                                               
         L     R2,DBPAR                               IF PAR, ,,,               
         IF    (R2,NZ),BEGIN                                                    
         LR    R3,R2                                                            
         AH    R3,=AL2(CVPSZ)                                                   
         IF    ((R1,GE,R2),AND,(R1,LT,R3)),BEGIN                                
         MVC   EV2SYM(8),=C'PGA     '                                           
         SR    R1,R2                                                            
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END                                                                    
         END                                                                    
*                                                                               
         L     R2,DBPBR                               IF PBR, ,,,               
         IF    (R2,NZ),BEGIN                                                    
         LR    R3,R2                                                            
         AH    R3,=AL2(CVPSZ)                                                   
         IF    ((R1,GE,R2),AND,(R1,LT,R3)),BEGIN                                
         MVC   EV2SYM(8),=C'PGB     '                                           
         SR    R1,R2                                                            
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                                           IF JCB,              
         WITH  (JCB,R2),BEGIN                                                   
         L     R2,CVCURJCB                                                      
         LA    R3,JCBNEXT                                                       
         IF    ((R1,GE,R2),AND,(R1,LT,R3)),BEGIN                                
         MVC   EV2SYM(8),=C'JCB     '                                           
         SR    R1,R2                                                            
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END                                                                    
         END   , WITH (JCB,R2)                                                  
*                                                                               
         COMMENT                                           IF JCB,              
         WITH  (JCB,R2),BEGIN                                                   
         IF    ((CVCURJCB,EQ,DBERJCB),AND,(DBEEJCB,NE,0)),BEGIN                 
         L     R2,DBEEJCB                                                       
         LA    R3,JCBNEXT                                                       
         IF    ((R1,GE,R2),AND,(R1,LT,R3)),BEGIN                                
         MVC   EV2SYM(8),=C'JCB     '                                           
         SR    R1,R2                       IF DEBUGGER,                         
         ST    R1,EV2OFF                     CHECK IF DEBUGGEE JCB              
         B     EADREXIT                                                         
         END                                                                    
         END                                                                    
         END   , WITH (JCB,R2)                                                  
*-                                                                              
*-       CHECK SYMBOL TABLE                                                     
*-                                                                              
         L     R2,=V(SYMBOLS)                                                   
         WITH  (SYMBOL,R2),BEGIN                                                
         LR    R3,R2                                                            
      WHILE ((^SYMFEND),AND,(' CLC EV2ADDR+1(3),SYMADDR',GE)),BEGIN             
         LR    R3,R2                                                            
         LA    R2,SYMNEXT                                                       
         END                                                                    
         COMMENT                  FOUND SYMBOL, PREVIOUS ONE IS IT              
         IF    (R2,EQ,R3),NOSYM                                                 
         LR    R2,R3              GET PREVIOUS                                  
         MVC   EV2SYM(8),SYMNAME  SAVE NAME                                     
         L3    R3,SYMADDR                                                       
         SR    R1,R3              SAVE OFFSET                                   
         ST    R1,EV2OFF                                                        
         B     EADREXIT                                                         
         END   , WITH (SYMBOL,R2)                                               
         SPACE 2                                                                
*                                                                               
NOSYM    LABEL ,                  IF NO SYMBOL,                                 
         MVC   EV2OFF(4),EV2ADDR        OFFSET IS ADDRESS,                      
         MVC   EV2SYM(8),=X'00000000'   SYMBOL IS ZERO                          
         SPACE                                                                  
*-                                                                              
*-       EXIT                                                                   
*-                                                                              
EADREXIT LABEL ,                                                                
         LM    R15,R0,EV2SYM      RETURN SYMBOL, OFFSET                         
         L     R1,EV2OFF                                                        
         IF    ((R1,NEG),OR,(R1,GT,65536)),BEGIN  IF BAD OFFSET,                
         L     R1,EV2ADDR                            DON'T USE IT               
         CLEAR R15,R15                                                          
         END                                                                    
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         TITLE 'Debug Subroutines - Evaluate ...'                               
*box                                                                            
*                                                                               
*                                                                               
*   EVAL#SYM - scan for #rountine                                               
*                                                                               
*   on entry:  scan setup                                                       
*                                                                               
*   on exit:   r15,r0 - routine name (as if lm)                                 
*              if r15 - 0, no routine name, scan status restored                
*                                                                               
*                                                                               
*                                                                               
EVAL#SYM PROC  EVWA2                                                            
         SCPUSH                                                                 
         MVC   EV2SYM(8),CVBLANKS BLANK NAME                                    
         SCAN  ,                                                                
         SCANCHK ,                                                              
         SCUPCASE (R1),(R0)                                                     
         LA    R15,0              ASSUME #ROUTINE NOT SCANNED                   
         COMMENT                  ABOVE INSTR MUST NOT SET CC                   
         COMMENT                                                                
         IF    (R0,NZ),BEGIN      IF SCANNED SOMETHING                          
         IF    (@R1,EQ,'#'),BEGIN    AND IT STARTED WITH '#'                    
         IF    ((R0,GE,2),AND,(R0,LE,9)),BEGIN    AND OF LENGTH 2-9             
         LA    R1,1(R1)           SKIP PAST '#'                                 
         LR    R2,R0                                                            
         BCTR  R2,R0                                                            
         DEX   R2,' MVC EV2SYM(0),0(R1) '                                       
         LM    R15,R0,EV2SYM                                                    
         END                                                                    
         END                                                                    
         END                                                                    
         IF    (R15,Z),BEGIN      IF NO #ROUTINE, RESTORE SCAN                  
         SCPOP ,                                                                
         SR    R15,R15                                                          
         END                                                                    
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
*box                                                                            
*                                                                               
*                                                                               
*  RELOC - relocate cp, stack, heap, dir, page A, and page B                    
*          addresses to point to debugee saved copies                           
*                                                                               
*  on entry:   r1 - address to relocate                                         
*                                                                               
*  on exit:    r1 - relocated address                                           
*                                                                               
*                                                                               
REWA     RECORD BEGIN ,                                                         
READDR   DS    F                  ADDRESS                                       
RESYM    DS    CL8                SYMBOL                                        
REOFF    DS    F                  OFFSET                                        
         END   ,                                                                
         SPACE                                                                  
*-                                                                              
*-        RELOCATE ADDRESS                                                      
*-                                                                              
*-                                                                              
RELOC    PROC  REWA                                                             
         ST    R1,READDR                                                        
         ACALL EVALADDR           GET SYMBOLIC FORM OF ADDR                     
         IF    NZ,BEGIN                                                         
         STM   R15,R0,RESYM       SAVE SYMBOL                                   
         ST    R1,REOFF                                                         
         IF    (RESYM,EQ,'STACK   '),BEGIN     IF STACK, ,,,                    
         A     R1,=A(DBASTACK)                                                  
         B     RELOEXIT                                                         
         END                                                                    
         IF    (RESYM,EQ,'HEAP    '),BEGIN     IF HEAP,  ,,,                    
         A     R1,=A(DBAHEAP)                                                   
         B     RELOEXIT                                                         
         END                                                                    
         END                                                                    
         L     R1,READDR          IF NOT RELOCATED, RETURN ENTRY                
         COMMENT                     ADDRESS VALUE                              
*-                                                                              
*-       EXIT                                                                   
*-                                                                              
RELOEXIT LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'Debug Subroutines - Display ...'                                
*box                                                                            
*                                                                               
*                                                                               
*  DISPCORE - DISPLAY CORE                                                      
*                                                                               
*       ON ENTRY:                                                               
*             R1  - ACTUAL ADDRESS OF MEMORY                                    
*             R0  - LENGTH OF MEMORY, 0 - DEFAULTS TO 64                        
*             R15 - ADDRESS TO PRINT AS DISPLAY ADDR                            
*                                                                               
*                                                                               
*                                                                               
DCWA     RECORD BEGIN ,                                                         
DCSTART  DS    F                  ADDR TO START DISPLAYING                      
DCPSTART DS    F                  ADDR TO PRINT AS START                        
DCADDR   DS    F                  ADDR CURRENTLY DISPLAYING                     
DCPADDR  DS    F                  ADDR TO PRINT AS WE DISPLAY                   
DCEND    DS    F                  LAST ADDRESS TO DISPLAY                       
DCLEN    DS    F                  LENGTH TO DISPLAY (0 MEANS ALL)               
DCTEMPLT DS    CL80               DISPLAY LINE TEMPLATE                         
DCTPADDR EQU   DCTEMPLT           ADDRESS IN TEMPLATE                           
DCTPHEX1 EQU   DCTEMPLT+10                                                      
DCTPHEX2 EQU   DCTEMPLT+19                                                      
DCTPHEX3 EQU   DCTEMPLT+28                                                      
DCTPHEX4 EQU   DCTEMPLT+37                                                      
DCTPCHAR EQU   DCTEMPLT+47                                                      
DCTPMSG  EQU   DCTEMPLT+66                                                      
         END                                                                    
         SPACE 5                                                                
*box                                                                            
*                                                                               
*                                                                               
*       DISPLAY CORE                                                            
*                                                                               
*                                                                               
DISPCORE XPROC DCWA                                                             
*-                                                                              
*-       INITIALIZE WORK AREA                                                   
*-                                                                              
         CLEAR DCWA               CLEAR WORKAREA                                
         LA    R1,0(R1)                                                         
         LA    R15,0(R15)                                                       
         ST    R1,DCSTART         SAVE START AND LENGTH TO DISPLAY              
         ST    R15,DCPSTART                                                     
         ST    R0,DCLEN                                                         
         IF    (R0,EQ,0),' LA R0,64'    R0=0, DEFAULTS TO 64                    
         AR    R0,R1                                                            
         ST    R0,DCEND                                                         
         LR    R2,R15             ROUND ADDRESS TO NEAREST 16                   
         SRL   R2,4                                                             
         SLL   R2,4                                                             
         SR    R2,R15             R2=ROUNDED ADDR-ADDR=                         
         L     R1,DCSTART           =STARTING OFFSET (NEGATIVE)                 
         AR    R1,R2                                                            
         ST    R1,DCADDR                                                        
         L     R15,DCPSTART                                                     
         AR    R15,R2                                                           
         ST    R15,DCPADDR                                                      
         TCCR                                                                   
*                                                                               
* LOOP DISPLAYING 16 BYTES AT A TIME                                            
*                                                                               
         WHILE (DCADDR,LT,DCEND),BEGIN                                          
         MVC   DCTEMPLT(L'DCTEMPLT),TEMPLT  INITIALIZE TEMPLET                  
         L     R2,DCADDR          R2 - ADDR OF CURRENT 16 BYTES                 
         LR    R1,R2                                                            
         LA    R0,16                                                            
         ACALL CHKRADDR           CHECK ADDR (for read)                         
         IF    NZ,BEGIN                                                         
         TSEG  'Invalid address.',,CR                                           
         B     DISPEXIT                                                         
         END                                                                    
         L     R15,DCPADDR        OUTPUT 6 BYTES OF ADDRESS                     
         LA    R1,DCTPADDR                                                      
         LA    R0,8                                                             
         VCALL BTX                                                              
         L     R15,0(R2)          OUTPUT 1ST 4 BYTES OF HEX                     
         LA    R1,DCTPHEX1                                                      
         LA    R0,8                                                             
         VCALL BTX                                                              
         L     R15,4(R2)          OUTPUT 2ND 4 BYTES OF HEX                     
         LA    R1,DCTPHEX2                                                      
         LA    R0,8                                                             
         VCALL BTX                                                              
         L     R15,8(R2)          OUTPUT 3RD 4 BYTES OF HEX                     
         LA    R1,DCTPHEX3                                                      
         LA    R0,8                                                             
         VCALL BTX                                                              
         L     R15,12(R2)         OUTPUT 4TH 4 BYTES OF HEX                     
         LA    R1,DCTPHEX4                                                      
         LA    R0,8                                                             
         VCALL BTX                                                              
         MVC   DCTPCHAR(16),0(R2) OUTPUT 16 BYTES IN CHARACTER FORM             
         IF    (CPWK1,EQ,X'FF'),BEGIN                                           
         L     R1,CVEBCTBL         Point to ASCII->EBCIDIC table                
         TR    DCTPCHAR(16),@R1    Translate so I can read it                   
         END                                                                    
         TR    DCTPCHAR(16),DOTMASK      MASK OUT UNPRINTABLES                  
*-                                                                              
*-      IF BEFORE START ADDR,  BLANK OUT HEX, DOT OUT CHARACTER DATA            
*-            (OCCURS WHEN WE ROUND DOWN START ADDRESS)                         
*-                                                                              
         IF    (DCADDR,LT,DCSTART),BEGIN                                        
         L     R15,DCPSTART       PRINT OFFSET START ADDRESS                    
         LA    R1,DCTPADDR                                                      
         LA    R0,8                                                             
         VCALL BTX                                                              
         L     R4,DCADDR          BLANK, DOT OUT CHARS AS NEEDED                
         L     R5,DCSTART                                                       
         SR    R5,R4              R5,R4 - AMOUNT BEFORE START                   
         LR    R4,R5                                                            
         LR    R3,R5                                                            
         SLL   R4,1                    TWO CHARS PER HEX BYTE                   
         SRL   R3,2                    NUMBER OF HEX SEPARATORS                 
         AR    R4,R3              R4 - AMOUNT PLUS HEX SEPARATORS               
         COMMENT                       THAT OCCUR EVERY 4 HEX BYTES             
         DEX   R5,' MVC DCTPCHAR(0),DOTMASK'   DOT OUT CHARACTERS               
         DEX   R4,' MVC DCTPHEX1(0),CVBLANKS'  BLANK OUT HEX                    
         END                                                                    
         IF    (DCADDR,LE,DCSTART),BEGIN                                        
         IF    (DCADDR,NE,DCPADDR),BEGIN  IF REAL ADDR IS DIFFERENT             
         MVC   DCTPMSG(4),=CL4'(RA='         PRINT OUT REAL ADDR                
         L     R15,DCSTART                                                      
         LA    R1,DCTPMSG+4                                                     
         LA    R0,8                                                             
         VCALL BTX                                                              
         MVC   DCTPMSG+12(1),=CL1')'                                            
         END                                                                    
         END                                                                    
*-                                                                              
*-       DISPLAY 16 BYTES OF MEMORY                                             
*-                                                                              
         TSEG  DCTEMPLT,80,CR     DISPLAY LINE OF MEMORY                        
*                                                                               
         BNZ   DISPEXIT           IF ATTN HIT, EXIT                             
         L     R2,DCADDR                                                        
         LA    R2,16(R2)          BUMP MEMORY, VIRTUAL ADDR BY 16               
         ST    R2,DCADDR                                                        
         L     R2,DCPADDR                                                       
         LA    R2,16(R2)                                                        
         ST    R2,DCPADDR         AND LOOP                                      
         END                                                                    
*                                                                               
* EXIT                                                                          
*                                                                               
DISPEXIT LABEL ,                                                                
         PEND  ,                                                                
         SPACE 5                                                                
TEMPLT   DC    CL80' '                                                          
         ORG   TEMPLT+46                                                        
         DC    C'|'                                                             
         ORG   TEMPLT+63                                                        
         DC    C'|'                                                             
         ORG   TEMPLT+L'TEMPLT                                                  
*                                                                               
* DOTMASK,  TRANSLATE UNPRITABLES TO DOTS                                       
*                                                                               
DOTMASK  LABEL ,                                                                
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'                              
         DC    X'504B4B4B4B4B4B4B4B4B5A5B5C5D5E5F'                              
         DC    X'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F'                              
         DC    X'4B4B4B4B4B4B4B4B4B797A7B7C7D7E7F'                              
         DC    X'4B8182838485868788894B4B4B4B4B4B'                              
         DC    X'4B9192939495969798994B4B4B4B4B4B'                              
         DC    X'4B4BA2A3A4A5A6A7A8A94B4B4BAD4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4BBD4B4B'                              
         DC    X'C0C1C2C3C4C5C6C7C8C94B4B4B4B4B4B'                              
         DC    X'D0D1D2D3D4D5D6D7D8D94B4B4B4B4B4B'                              
         DC    X'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B'                              
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'                              
         TITLE 'Debug Subroutines - Display ...'                                
*box                                                                            
*                                                                               
*                                                                               
*  DISPREGS - display registers                                                 
*                                                                               
*  on entry:  r0 - first register to display                                    
*             r1 - last register to display                                     
*  sample:                                                                      
*     R0 = 0000034F             R1 = 001C00A3 TERM+0F2E                         
*     R2 = 001C00A3 TERM+0F2E   R3 = 00000000                                   
*                                                                               
*                                                                               
*  note: r15 wraps to r0                                                        
*                                                                               
DISPREGS PROC  ,                                                                
         LR    R4,R0              R4 - FIRST REG, USED AS INDEX                 
         LR    R5,R1              R5 - LAST REG, USED AS TEST                   
         SRL   R4,1               FIRST IS EVEN REG, LAST IS ODD                
         SLL   R4,1                                                             
         SRL   R5,1                                                             
         SLL   R5,1                                                             
         LA    R5,1(R5)                                                         
         IF    (R4,GT,R5),BEGIN   IF REGISTERS WRAP, ,,,                        
         LA    R3,15                                                            
         WHILE (R4,LT,R3),BEGIN      SHO REGS FIRST THRU R15                    
         LR    R1,R4                                                            
         ACALL DISPPAIR              DISPLAY REGISTER PAIR                      
         LA    R4,2(R4)                                                         
         END                                                                    
         SR    R4,R4                                                            
         END                                                                    
         WHILE (R4,LT,R5),BEGIN  IF REGISTERS DO NOT WRAP ,,,                   
         LR    R1,R4                                                            
         ACALL DISPPAIR             DISPLAY REGISTER PAIR                       
         LA    R4,2(R4)                                                         
         END                                                                    
         PEND  ,                                                                
         TITLE 'Debug Subroutines - Display ...'                                
*box                                                                            
*                                                                               
*                                                                               
*  DISPPAIR - display register pair                                             
*                                                                               
*  on entry:  r1 - even register number                                         
*                                                                               
*                                                                               
DISPPAIR PROC  ,                                                                
         LR    R4,R1              R4 - EVEN REGISTER NUMBER                     
         TCCR                     START OUTPUT ON NEW LINE                      
         IF    (R4,LE,9),BEGIN    OUTPUT EVEN REGISTER                          
         TSEG  ' '                                                              
         END                                                                    
         TSEG  ' R'                                                             
         TNUM  (R4)                                                             
         TSEG  ' = '                                                            
         LR    R2,R4                                                            
         SLL   R2,2                                                             
         L     R2,DBREGS(R2)          R2 - REGISTER VALUE                       
         THEX  (R2),8                                                           
         TSEG  ' '                                                              
         LR    R1,R2                                                            
         ACALL TSEGSYM                IF SYMBOLIC FORM, TYPE IT                 
         LA    R0,30                  START ODD REGISTER IN COL 30              
         LA    R15,CPSEG                                                        
         VCALL SEGCOL                                                           
         LA    R4,1(R4)           R4 - ODD REGISTER                             
         IF    (R4,LE,9),BEGIN    OUTPUT ODD REGISTER                           
         TSEG  ' '                                                              
         END                                                                    
         TSEG  ' R'                                                             
         TNUM  (R4)                                                             
         TSEG  ' = '                                                            
         LR    R2,R4                                                            
         SLL   R2,2                                                             
         L     R2,DBREGS(R2)          R2 - REGISTER VALUE                       
         THEX  (R2),8                                                           
         TSEG  ' '                                                              
         LR    R1,R2                                                            
         ACALL TSEGSYM                IF SYMBOLIC FORM, TYPE IT                 
         TCR                                                                    
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'Debug Subroutines - Display ...'                                
DMWA     RECORD BEGIN                                                           
DMSTART  DS    F                  START OF MEMORY TO DISPLAY                    
DMLEN    DS    F                  LENGTH OF MEMORY TO DISPLAY                   
DMADDR   DS    F                  ADDR OF MEMORY DISPLAYING                     
DMEND    DS    F                  END OF MEMORY TO DISPLAY                      
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  DISPASM - display disassembled memory                                        
*                                                                               
*       on entry:  r1 - address                                                 
*                  r0 - length (defaults to 64 if 0)                            
*                                                                               
*                                                                               
*                                                                               
*                                                                               
DISPASM  PROC  DMWA                                                             
         LA    R1,0(R1)           SAVE MEMORY POINTERS                          
         SLL   R1,1               MUST BE EVEN ADDRESS                          
         SRL   R1,1                                                             
         IF    (R0,Z),' LA R0,64 '                                              
         ST    R1,DMSTART                                                       
         ST    R1,DMADDR                                                        
         AR    R1,R0                                                            
         ST    R1,DMEND                                                         
         ST    R0,DMLEN                                                         
*                                                                               
         WHILE (DMADDR,LT,DMEND),BEGIN   LOOP DISPLAYING                        
         L     R1,DMADDR                                                        
         ACALL CHKINST            CHECK FOR INSTR/DATA                          
         IF    Z,BEGIN            IF INSTRUCTION,  DISPLAY IT                   
         L     R1,DMADDR                                                        
         ACALL DISPINST                                                         
         ST    R1,DMADDR                                                        
         END                                                                    
         ELSE  BEGIN ,            IF DATA, DISPLAY IT                           
         L     R1,DMADDR                                                        
         ACALL DISPDATA                                                         
         ST    R1,DMADDR                                                        
         END                                                                    
         END   ,                  LOOP DISPLAYING MEMORY                        
*                                                                               
         PEND  ,                                                                
         TITLE 'Debug Subroutines - Display ...'                                
*box                                                                            
*                                                                               
*                                                                               
*  DISPDATA - display up to 8 bytes of data                                     
*                                                                               
*       on entry:  r1 - data address                                            
*       on exit:   r1 - address updated                                         
*                                                                               
*                                                                               
*  notes: data is displayed in simi-assembler format.  address                  
*  in r1 must be even, and may not point at valid opcode.  if                   
*  a valid opcode occurrs before 8 bytes,  then only data will                  
*  be written out.                                                              
*                                                                               
*                                                                               
*                                                                               
DISPDATA PROC  ,                                                                
         LR    R5,R1              R5 - ADDRESS OF DATA                          
         LA    R0,32                                                            
         ACALL CHKRADDR           CHECK ADDRESS                                 
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address.'                                               
         END                                                                    
         TCCR                                                                   
*-                                                                              
*-       FIND LENGTH OF DATA TO PUT (UP TO 8 BYTES)                             
*-                                                                              
         LR    R1,R5              R1,R0 - START, END OF DATA TO PUT             
         LA    R0,8(R1)                                                         
         S     R1,=F'2'                                                         
         WHILE (NZ,AND,(R1,LT,R0)),BEGIN   LOOK FOR NEXT INSTR.                 
         LA    R1,2(R1)                                                         
         ACALL CHKINST                                                          
         END                                                                    
         SR    R1,R5              R1 - LENGTH OF DATA TO PUT                    
         LR    R4,R1              R4 - LENGTH OF DATA TO PUT !!                 
         IF    (R4,Z),DDEXIT      IF NO DATA, NO DISPLAY                        
*-                                                                              
*-       WRITE OUT LINE OF DATA                                                 
*-                                                                              
         TSEG  ' '                                                              
         LR    R1,R5              DATA ADDRESS                                  
         ACALL TSEGADDR                                                         
         LA    R0,16                                                            
         LA    R15,CPSEG                                                        
         VCALL SEGCOL             MOVE TO COLUMN 14                             
         THEX  LH:0(R5),4                                                       
         IF    (R4,GT,2),BEGIN    PUT OUT DATA IN HEX                           
         THEX  LH:2(R5),4                                                       
         END                                                                    
         TSEG  ' '                                                              
         IF    (R4,GT,4),BEGIN                                                  
         THEX  LH:4(R5),4                                                       
         END                                                                    
         IF    (R4,GT,6),BEGIN                                                  
         THEX  LH:6(R5),4                                                       
         END                                                                    
         LA    R0,38                                                            
         LA    R15,CPSEG                                                        
         VCALL SEGCOL             MOVE TO COLUMN 34                             
         TSEG  'DC'               PUT 'DC'                                      
         LA    R0,66                                                            
         LA    R15,CPSEG                                                        
         VCALL SEGCOL             MOVE TO COLUMN 66                             
         TSEG  ''''                                                             
         XPUSH ,,8,PTR=R1                                                       
         MVC   0(8,R1),0(R5)      PUT DATA IN CHAR FORM                         
         L     R2,=A(DOTMASK)     DOT OUT UNPRINTABLES                          
         TR    0(8,R1),0(R2)                                                    
         TSEG  0(R1),(R4)                                                       
         XPOP  ,,8                                                              
         TSEG  ''''                                                             
         TCR                      TERMINATE LINE WITH <CR>                      
*$$$$$$$ HEY SET THIS IS A SNEAKY EXIT                                          
         BNZ   CVNEXT             IF ATTENTION, EXIT                            
*                                                                               
*                                                                               
DDEXIT   LABEL ,                                                                
         LR    R1,R5              R1 - UPDATE MEMORY ADDRESS                    
         AR    R1,R4                                                            
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         TITLE 'Debug Subroutines - Display Instruction'                        
*box                                                                            
*                                                                               
*                                                                               
*  DISPINST - display one instruction                                           
*                                                                               
*       on entry: r1 - address                                                  
*                                                                               
*       on exit:  r1 - address of next instruction (data)                       
*                                                                               
*                                                                               
*                                                                               
*                                                                               
DISPINST PROC  ,                                                                
         LA    R5,0(R1)           R5 - INSTRUCTION ADDRESS                      
         LA    R4,2               R4 - INSTRUCTION LENGTH                       
         IF    (@R5,GE,X'40'),' LA R4,4 '                                       
         IF    (@R5,GE,X'D0'),' LA R4,6 '                                       
*                                                                               
         LR    R1,R5              CHECK ADDRESS                                 
         LR    R0,R4                                                            
         ACALL CHKRADDR                                                         
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address.'                                               
         END                                                                    
*                                                                               
         TCCR ,                   START OUTPUT ON NEW LINE                      
*                                                                               
         TSEG  ' '                                                              
         LR    R1,R5              WRITE ADDRESS                                 
         ACALL TSEGADDR                                                         
         LA    R0,16                                                            
         LA    R15,CPSEG          MOVE TO COLUMN 16                             
         VCALL SEGCOL                                                           
         THEX  LH:0(R5),4                                                       
         IF    (R4,GT,2),BEGIN    INSTRUCTION IN HEX                            
         TSEG  ' '                                                              
         THEX  LH:2(R5),4                                                       
         END                                                                    
         IF    (R4,GT,4),BEGIN                                                  
         TSEG  ' '                                                              
         THEX  LH:4(R5),4                                                       
         END                                                                    
*                                                                               
         LA    R0,38                                                            
         LA    R15,CPSEG                                                        
         VCALL SEGCOL                                                           
*-                                                                              
*-       LOOK UP INSTRUCTION NEMONIC                                            
*-                                                                              
         SR    R2,R2              R2 - INSTRUCTION OP CODE                      
         IC    R2,0(R5)                                                         
         LA    R3,INSTTAB         R3 - INSTRUCTION TABLE                        
         WITH  (IRECORD,R3),BEGIN                                               
         WHILE ((R2,NE,IOPCD),AND,(IOPCD,NE,0)),BEGIN                           
         LA    R3,INEXT                                                         
         END                                                                    
         COMMENT                  R3 - INSTRUCTION TABLE ENTRY                  
*-                                                                              
*-       FORMAT INSTRUCTION                                                     
*-                                                                              
         IF    (IOPCD,EQ,0),BEGIN IF UNRECOGNIZED OPCODE                        
         TSEG  '???   ???'                                                      
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    IRR,BEGIN          IF RR INSTRUCTION,                            
         TSEG  INAME,6                                                          
         TSEG  'R'                                                              
         L     R1,0(R5)                                                         
         N     R1,=X'00F00000'                                                  
         SRL   R1,20                                                            
         TNUM  (R1)                                                             
         TSEG  ',R'                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'000F0000'                                                  
         SRL   R1,16                                                            
         TNUM  (R1)                                                             
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    IRX,BEGIN          IF RX INSTRUCTION                             
         TSEG  INAME,6                                                          
         TSEG  'R'                                                              
         L     R1,0(R5)                                                         
         N     R1,=X'00F00000'                                                  
         SRL   R1,20                                                            
         TNUM  (R1)                                                             
         TSEG  ','                                                              
         L     R1,0(R5)                                                         
         N     R1,=X'00000FFF'                                                  
         TNUM  (R1)                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'000FF000'                                                  
         IF    NZ,BEGIN                                                         
         TSEG  '(R'                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'000F0000'                                                  
         SRL   R1,16                                                            
         IF    (R1,NZ),BEGIN                                                    
         TNUM  (R1)                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'0000F000'                                                  
         IF    NZ,BEGIN                                                         
         TSEG  ','                                                              
         END                                                                    
         END                                                                    
         L     R1,0(R5)                                                         
         N     R1,=X'0000F000'                                                  
         SRL   R1,12                                                            
         IF    (R1,NZ),BEGIN                                                    
         TNUM  (R1)                                                             
         END                                                                    
         TSEG  ')'                                                              
         END                                                                    
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    IRS,BEGIN          IF RS INSTRUCTION,                            
         TSEG  INAME,6                                                          
         TSEG  'R'                                                              
         L     R1,0(R5)                                                         
         N     R1,=X'00F00000'                                                  
         SRL   R1,20                                                            
         TNUM  (R1)                                                             
         TSEG  ',R'                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'000F0000'                                                  
         SRL   R1,16                                                            
         TNUM  (R1)                                                             
         TSEG  ','                                                              
         L     R1,0(R5)                                                         
         N     R1,=X'00000FFF'                                                  
         TNUM  (R1)                                                             
         TSEG  '(R'                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'0000F000'                                                  
         SRL   R1,12                                                            
         TNUM  (R1)                                                             
         TSEG  ')'                                                              
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    ISI,BEGIN          IF SI INSTRUCTION,                            
         TSEG  INAME,6                                                          
         L     R1,0(R5)                                                         
         N     R1,=X'00000FFF'                                                  
         TNUM  (R1)                                                             
         TSEG  '(R'                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'0000F000'                                                  
         SRL   R1,12                                                            
         TNUM  (R1)                                                             
         TSEG  '),X'''                                                          
         L     R1,0(R5)                                                         
         N     R1,=X'00FF0000'                                                  
         SRL   R1,16                                                            
         THEX  (R1),2                                                           
         TSEG  ''''                                                             
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    ISS,BEGIN          IF SS INSTRUCTION,,,                          
         TSEG  INAME,6                                                          
         L     R1,0(R5)                                                         
         N     R1,=X'00000FFF'                                                  
         TNUM  (R1)                                                             
         TSEG  '('                                                              
         L     R1,0(R5)                                                         
         N     R1,=X'00FF0000'                                                  
         SRL   R1,16                                                            
         LA    R1,1(R1)                                                         
         TNUM  (R1)                                                             
         TSEG  ',R'                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'0000F000'                                                  
         SRL   R1,12                                                            
         TNUM  (R1)                                                             
         TSEG  '),'                                                             
         L     R1,2(R5)                                                         
         N     R1,=X'00000FFF'                                                  
         TNUM  (R1)                                                             
         TSEG  '(R'                                                             
         L     R1,2(R5)                                                         
         N     R1,=X'0000F000'                                                  
         SRL   R1,12                                                            
         TNUM  (R1)                                                             
         TSEG  ')'                                                              
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    IBCR,BEGIN         IF BCR, BEGIN                                 
         L     R1,0(R5)                                                         
         N     R1,=X'00F00000'                                                  
         SRL   R1,20                                                            
         LR    R2,R1                                                            
         IF    (R2,EQ,0),BEGIN                                                  
         TSEG  'NOPR  '                                                         
         END                                                                    
         IF    (R2,EQ,1),BEGIN                                                  
         TSEG  'BOR   '                                                         
         END                                                                    
         IF    (R2,EQ,2),BEGIN                                                  
         TSEG  'BHR   '                                                         
         END                                                                    
         IF    (R2,EQ,4),BEGIN                                                  
         TSEG  'BLR   '                                                         
         END                                                                    
         IF    (R2,EQ,7),BEGIN                                                  
         TSEG  'BNER  '                                                         
         END                                                                    
         IF    (R2,EQ,8),BEGIN                                                  
         TSEG  'BER   '                                                         
         END                                                                    
         IF    (R2,EQ,11),BEGIN                                                 
         TSEG  'BNLR  '                                                         
         END                                                                    
         IF    (R2,EQ,13),BEGIN                                                 
         TSEG  'BNHR  '                                                         
         END                                                                    
         IF    (R2,EQ,15),BEGIN                                                 
         TSEG  'BR    '                                                         
         END                                                                    
         TSEG  'R'                                                              
         L     R1,0(R5)                                                         
         N     R1,=X'000F0000'                                                  
         SRL   R1,16                                                            
         TNUM  (R1)                                                             
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    IBC,BEGIN          IF BC, BEGIN                                  
         L     R1,0(R5)                                                         
         N     R1,=X'00F00000'                                                  
         SRL   R1,20                                                            
         LR    R2,R1                                                            
         IF    (R2,EQ,0),BEGIN                                                  
         TSEG  'NOP   '                                                         
         END                                                                    
         IF    (R2,EQ,1),BEGIN                                                  
         TSEG  'BO    '                                                         
         END                                                                    
         IF    (R2,EQ,2),BEGIN                                                  
         TSEG  'BH    '                                                         
         END                                                                    
         IF    (R2,EQ,3),BEGIN                                                  
         TSEG  'BH-   '                                                         
         END                                                                    
         IF    (R2,EQ,4),BEGIN                                                  
         TSEG  'BL    '                                                         
         END                                                                    
         IF    (R2,EQ,5),BEGIN                                                  
         TSEG  'BL-   '                                                         
         END                                                                    
         IF    (R2,EQ,6),BEGIN                                                  
         TSEG  'BNE-  '                                                         
         END                                                                    
         IF    (R2,EQ,7),BEGIN                                                  
         TSEG  'BNE   '                                                         
         END                                                                    
         IF    (R2,EQ,8),BEGIN                                                  
         TSEG  'BE    '                                                         
         END                                                                    
         IF    (R2,EQ,9),BEGIN                                                  
         TSEG  'BE-   '                                                         
         END                                                                    
         IF    (R2,EQ,10),BEGIN                                                 
         TSEG  'BNL-  '                                                         
         END                                                                    
         IF    (R2,EQ,11),BEGIN                                                 
         TSEG  'BNL   '                                                         
         END                                                                    
         IF    (R2,EQ,12),BEGIN                                                 
         TSEG  'BNH-  '                                                         
         END                                                                    
         IF    (R2,EQ,13),BEGIN                                                 
         TSEG  'BNH   '                                                         
         END                                                                    
         IF    (R2,EQ,14),BEGIN                                                 
         TSEG  'BNO   '                                                         
         END                                                                    
         IF    (R2,EQ,15),BEGIN                                                 
         TSEG  'B     '                                                         
         END                                                                    
         L     R1,0(R5)                                                         
         N     R1,=X'00000FFF'                                                  
         TNUM  (R1)                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'000FF000'                                                  
         IF    NZ,BEGIN                                                         
         TSEG  '(R'                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'000F0000'                                                  
         SRL   R1,16                                                            
         IF    (R1,NZ),BEGIN                                                    
         TNUM  (R1)                                                             
         L     R1,0(R5)                                                         
         N     R1,=X'0000F000'                                                  
         IF    NZ,BEGIN                                                         
         TSEG  ','                                                              
         END                                                                    
         END                                                                    
         L     R1,0(R5)                                                         
         N     R1,=X'0000F000'                                                  
         SRL   R1,12                                                            
         IF    (R1,NZ),BEGIN                                                    
         TNUM  (R1)                                                             
         END                                                                    
         TSEG  ')'                                                              
         END                                                                    
         B     DISPIRET                                                         
         END                                                                    
*                                                                               
         IF    IOTHER,BEGIN       IF NONE OF THE ABOVE,,,                       
         TSEG  INAME,6                                                          
         TSEG  'OPERAND(S)'                                                     
         END                                                                    
         END   , WITH (IRECORD,R3)                                              
*                                                                               
DISPIRET LABEL ,                                                                
         TCR   ,                                                                
*$$$$$$ THIS IS SNEAKY EXIT,,,, SHOULD FIX IT !!                                
         BNZ   CVNEXT             IF ATTENTION,, EXIT                           
         LR    R1,R5              R1 - INSTRUCTION ADDRESS                      
         AR    R1,R4              R1 - NEXT INSTRUCTION ADDRESS                 
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'Debug Subroutines'                                              
*box                                                                            
*                                                                               
*                                                                               
*   Instruction table                                                           
*                                                                               
*                                                                               
*                                                                               
INSTTAB  LABEL ,                                                                
         INSTR AR,RR,1A                                                         
         INSTR A,RX,5A                                                          
         INSTR AH,RX,4A                                                         
         INSTR ALR,RR,1E                                                        
         INSTR AL,RX,5E                                                         
         INSTR NR,RR,14                                                         
         INSTR N,RX,54                                                          
         INSTR NC,SS,D4                                                         
         INSTR NI,SI,94                                                         
         INSTR BALR,RR,05                                                       
         INSTR BAL,RX,45                                                        
         INSTR BASR,RR,0D                                                       
         INSTR BAS,RX,4D                                                        
         INSTR BASSM,RR,0C                                                      
         INSTR BSM,RR,0B                                                        
         INSTR BCR,BCR,07                                                       
         INSTR BC,BC,47                                                         
         INSTR BCTR,RR,06                                                       
         INSTR BCT,RX,46                                                        
         INSTR BXH,RS,86                                                        
         INSTR BXLE,RS,87                                                       
         INSTR B2OP,OTHER,B2                                                    
         INSTR CR,RR,19                                                         
         INSTR C,RX,59                                                          
         INSTR CS,RS,BA                                                         
         INSTR CDS,RS,BB                                                        
         INSTR CH,RX,49                                                         
         INSTR CLR,RR,15                                                        
         INSTR CL,RX,55                                                         
         INSTR CLC,SS,D5                                                        
         INSTR CLI,SI,95                                                        
         INSTR CLM,RS,BD                                                        
         INSTR CLCL,RR,0F                                                       
         INSTR CVB,RX,4F                                                        
         INSTR CVD,RX,4E                                                        
         INSTR DR,RR,1D                                                         
         INSTR D,RX,5D                                                          
         INSTR XR,RR,17                                                         
         INSTR X,RX,57                                                          
         INSTR XC,SS,D7                                                         
         INSTR XI,SI,97                                                         
         INSTR EX,RX,44                                                         
         INSTR IC,RX,43                                                         
         INSTR ICM,RS,BF                                                        
         INSTR IPM,OTHER,B2                                                     
         INSTR LR,RR,18                                                         
         INSTR L,RX,58                                                          
         INSTR LA,RX,41                                                         
         INSTR LTR,RR,12                                                        
         INSTR LCR,RR,13                                                        
         INSTR LH,RX,48                                                         
         INSTR LM,RS,98                                                         
         INSTR LNR,RR,11                                                        
         INSTR LPR,RR,10                                                        
         INSTR MC,SI,AF                                                         
         INSTR MVC,SS,D2                                                        
         INSTR MVI,SI,92                                                        
         INSTR MVCL,RR,0E                                                       
         INSTR MVN,SS,E1                                                        
         INSTR MVO,SS,F1                                                        
         INSTR MVZ,SS,D3                                                        
         INSTR MR,RR,1C                                                         
         INSTR M,RX,5C                                                          
         INSTR MH,RX,4C                                                         
         INSTR OR,RR,16                                                         
         INSTR O,RX,56                                                          
         INSTR OC,SS,D6                                                         
         INSTR OI,SI,96                                                         
         INSTR PACK,SS,F2                                                       
         INSTR SPM,OTHER,04                                                     
         INSTR SLDA,RX,8F                                                       
         INSTR SLDL,RX,8D                                                       
         INSTR SLA,RX,8B                                                        
         INSTR SLL,RX,89                                                        
         INSTR SRDA,RX,8E                                                       
         INSTR SRDL,RX,8C                                                       
         INSTR SRA,RX,8A                                                        
         INSTR SRL,RX,88                                                        
         INSTR ST,RX,50                                                         
         INSTR STC,RX,42                                                        
         INSTR STCM,RS,BE                                                       
         INSTR STCK,OTHER,B2                                                    
         INSTR STH,RX,40                                                        
         INSTR STM,RS,90                                                        
         INSTR SR,RR,1B                                                         
         INSTR S,RX,5B                                                          
         INSTR SH,RX,4B                                                         
         INSTR SLR,RR,1F                                                        
         INSTR SL,RX,5F                                                         
         INSTR SVC,OTHER,0A                                                     
         INSTR TS,OTHER,93                                                      
         INSTR TM,SI,91                                                         
         INSTR TR,SS,DC                                                         
         INSTR TRT,SS,DD                                                        
         INSTR UNPK,SS,F3                                                       
         INSTR ???,OTHER,00       END OF LIST                                   
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'Debug Subroutines'                                              
*box                                                                            
*                                                                               
*                                                                               
*  CHKRADDR - see if address is valid for read                                  
*                                                                               
*  on entry:   r1 - address to check                                            
*              r0 - length to check  (<256)                                     
*                                                                               
*  on exit:   r15 - CC=0  valid address,  CC=NZ invalid address                 
*                                                                               
*                                                                               
CHKRADDR XPROC ,                                                                
         LR    R2,R0              R1,R2 - LOC, LEN TO CHECK                     
         LA    R3,BADRADDR                                                      
         ST    R3,CVSPIEAD              SET SPIE EXIT                           
         CEIL  R2,256                                                           
         FLOOR R2,2                                                             
         DEX   R2,' CLC 0(0,R1),0(R1)'  TEST ADDRESS                            
         SR    R15,R15                                                          
         B     CHKREXIT                                                         
*                                                                               
BADRADDR LABEL ,                                                                
         LA    R15,4                                                            
         B     CHKREXIT                                                         
*                                                                               
CHKREXIT LABEL ,                                                                
         CLEAR CVSPIEAD                                                         
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
*box                                                                            
*                                                                               
*                                                                               
*  CHKSADDR - see if address is valid for store                                 
*                                                                               
*  on entry:   r1 - address to check                                            
*              r0 - length to check  (<256)                                     
*                                                                               
*  on exit:   r15 - CC=0  valid address,  CC=NZ invalid address                 
*                                                                               
*                                                                               
CHKSADDR XPROC ,                                                                
         LR    R2,R0              R1,R2 - LOC, LEN TO CHECK                     
         LA    R3,BADSADDR                                                      
         ST    R3,CVSPIEAD              SET SPIE EXIT                           
         CEIL  R2,256                                                           
         FLOOR R2,2                                                             
         EX    R2,' MVC 0(0,R1),0(R1)'  TEST ADDRESS                            
         SR    R15,R15                                                          
         B     CHKSEXIT                                                         
*                                                                               
BADSADDR LABEL ,                                                                
         LA    R15,4                                                            
         B     CHKSEXIT                                                         
*                                                                               
CHKSEXIT LABEL ,                                                                
         CLEAR CVSPIEAD                                                         
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
CHKIWA   RECORD BEGIN                                                           
CHKINAME DS    CL8                                                              
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  CHKIADDR - see if address is an instruction address,                         
*             we check for valid opcode, and check a bit to                     
*             see if the address is in the program, not data area               
*                                                                               
*  on entry:   r1 - address to check                                            
*                                                                               
*  on exit:   r15 - CC=0  valid address,  CC=NZ invalid address                 
*                                                                               
*                                                                               
CHKIADDR XPROC CHKIWA                                                           
         COMMENT                  R1 - ADDRESS TO CHECK                         
         LA    R0,2                                                             
         ACALL CHKRADDR           CHECK ADDR FOR READ, WEAK CHECK               
         IF    NZ,BADIADDR                                                      
         LR    R2,R1              CHECK FOR EVEN ADDRESS                        
         SRL   R2,31                                                            
         IF    (R2,NZ),BADIADDR                                                 
         SR    R2,R2              CHECK FOR INSTRUCTION OP CODE                 
         IC    R2,0(R1)                                                         
         IC    R2,INSTTYPE(R2)                                                  
         IF    (R2,NZ),BADIADDR                                                 
         ACALL EVALADDR           CHECK IF NOT IN PROGRAM CSECTS                
         STM   R15,R0,CHKINAME             (DESTROYS ADDR IN R1)                
         CLC   CHKINAME(8),=C'CV      '                                         
         BE    BADIADDR                                                         
         CLC   CHKINAME(8),=C'CP      '                                         
         BE    BADIADDR                                                         
         CLC   CHKINAME(8),=C'STACK   '                                         
         BE    BADIADDR                                                         
         SR    R15,R15            IF NOT BAD, THEN IT MUST BE OK                
         B     CHKIEXIT                                                         
         SPACE 4                                                                
BADIADDR LABEL ,                                                                
         LA    R15,4                                                            
         B     CHKIEXIT                                                         
*-                                                                              
*-       EXIT                                                                   
*-                                                                              
CHKIEXIT LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*   INSTRUCTION TYPE TABLE  (370-XA)                                            
*                                                                               
*     0 - GENERAL INSTRUCTION                                                   
*     4 - INVALID OPCODE                                                        
*     8 - DECIMAL                                                               
*    12 - FLOATING POINT                                                        
*    16 - CONTROL                                                               
*    20 - I/O AND MORE (B2 OPCODE)                                              
*                                                                               
*                                                                               
*               0 1 2 3 4 5 6 7 8 9 A B C D E F                                 
*                                                                               
INSTTYPE DC    X'04040404000000000404000000000000'   0                          
         DC    X'00000000000000000000000000000000'   1                          
         DC    X'0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C'   2                          
         DC    X'0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C'   3                          
         DC    X'00000000000000000000000000000000'   4                          
         DC    X'00040404000000000000000000000000'   5                          
         DC    X'0C0404040404040C0C0C0C0C0C0C0C0C'   6                          
         DC    X'0C040404040404040C0C0C0C0C0C0C0C'   7                          
         DC    X'10041010040400000000000000000000'   8                          
         DC    X'00000000000000000010040404040404'   9                          
         DC    X'04040404040404040404040410101000'   A                          
         DC    X'04101404040410100404000004000000'   B                          
         DC    X'04040404040404040404040404040404'   C                          
         DC    X'04000000000000000410101000000808'   F                          
         DC    X'04040404041004040404040404040404'   E                          
         DC    X'08000000040404040808080808080404'   F                          
         TITLE 'Debug Subroutines'                                              
CKINWA   RECORD BEGIN                                                           
CKINTEMP DS    CL8                                                              
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  CHKINST - Check if instruction or data                                       
*                                                                               
*       on entry:  r1 - address                                                 
*                                                                               
*       on exit:   r15=0 - yes,  r15=NZ - not instruction                       
*                                                                               
*                                                                               
*  This routine makes an attemp to determine whether we are                     
*  looking at an instruction or data.  We make a number of                      
*  tests none are always right,,,  we try to error in favor                     
*  of the instruction.                                                          
*                                                                               
*                                                                               
*                                                                               
CHKINST  PROC  CKINWA                                                           
*                                                                               
         LA    R0,32              CHECK READ ACCESS FOR 32 BYTES                
         ACALL CHKRADDR                                                         
         IF    NZ,BEGIN                                                         
         ABORT 'Invalid address.'                                               
         END                                                                    
*                                                                               
         LA    R4,4               CHECK FOR 4 INSTRUCTIONS                      
         WHILE (R4,NZ),BEGIN      LOOP THRU 4 INSTRUCTIONS                      
*                                                                               
         L     R3,=A(INSTTYPE)    CHECK FOR VALID OPCODE                        
         SR    R2,R2                                                            
         IC    R2,0(R1)                                                         
         IC    R2,0(R3,R2)                                                      
         IF    (R2,NZ),NOTINST                                                  
*                                                                               
         IF    (@R1,EQ,X'05'),GOTINST    CHECK FOR BRANCH OPCODES               
         IF    (@R1,EQ,X'07'),GOTINST                                           
         IF    (@R1,EQ,X'0B'),GOTINST                                           
         IF    (@R1,EQ,X'0C'),GOTINST                                           
         IF    (@R1,EQ,X'0D'),GOTINST                                           
         IF    (@R1,EQ,X'45'),GOTINST                                           
         IF    (@R1,EQ,X'47'),GOTINST                                           
         IF    (@R1,EQ,X'4D'),GOTINST                                           
*                                                                               
         IF    (@R1,EQ,'    '),NOTINST   CHECK FOR BLANKS, LETTERS              
         SR    R0,R0                                                            
         LR    R2,R1                                                            
         LA    R3,6                                                             
         WHILE (R3,POS),BEGIN     CHECK FOR 6 UPPER CASE LETTERS                
         IF    ((@R2,LE,X'C0'),AND,(@R2,NE,X'40')),' LA R0,1 '                  
         LA    R2,1(R2)                                                         
         BCTR  R3,0                                                             
         END                                                                    
         IF    (R0,Z),NOTINST                                                   
         SR    R0,R0                                                            
         LR    R2,R1                                                            
         LA    R3,8                                                             
         WHILE (R3,POS),BEGIN     CHECK FOR 8 LOWER CASE LETTERS                
         IF    ((@R2,LE,X'80'),AND,(@R2,NE,X'40')),' LA R0,1 '                  
         LA    R2,1(R2)                                                         
         BCTR  R3,0                                                             
         END                                                                    
         IF    (R0,Z),NOTINST                                                   
*                                                                               
         LA    R2,2                      CHECK NEXT INSTRUCTION                 
         IF    (@R1,GE,X'40'),' LA R2,4 '      GET INSTRUCTION LEN              
         IF    (@R1,GE,X'D0'),' LA R2,6 '                                       
         LA    R1,0(R2,R1)                                                      
         BCTR  R4,0                                                             
         END   ,                  LOOP CHECKING NEXT INSTRUCTION                
         B     GOTINST            FALL THRU INDICATES WE HAVE INSTR.            
*                                                                               
GOTINST  LABEL ,                                                                
         CLEAR R15,R15                                                          
         B     CKINEXIT                                                         
*                                                                               
NOTINST  LABEL ,                                                                
         LA    R15,4                                                            
         B     CKINEXIT                                                         
*                                                                               
CKINEXIT LABEL ,                                                                
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
STOPWA   RECORD BEGIN                                                           
STOPNAME DS    CL8                                                              
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  STOPMSG - print break message                                                
*                                                                               
*  samples:                                                                     
*      TRAP,  GG.XX2 stopped at CR+01448 (SEGDC entry)                          
*      TRAP,  GG.XX2 stopped at CR+01458                                        
*      TRAP,  GG.XX2 stopped at CR+0145C (SEGDC return)                         
*      TRACE, GG.XX2 stopped at SCAN+0234 (SCANINIT entry)                      
*      INTERRUPT (0005), GG.XX2 stopped at DEBUG+0123                           
*                                                                               
*                                                                               
STOPMSG  PROC  STOPWA                                                           
         L     R6,=A(DBAREA)      GET ADDRIBILITY                               
*                                                                               
         LA    R5,DBTRAPNF                                                      
         WITH  (DBTRAP,R5),BEGIN                                                
*                                                                               
         IF    DBEXECD,BEGIN                                                    
         CLEAR DBEXECD                                                          
         TSEG  '  ... trap(s) hit and ignored in dispatcher.',,CR               
         END                                                                    
*                                                                               
         IF    DBTPIRPT,BEGIN     IF INTERRUPT (000X),                          
         TSEG  'INTERRUPT ('                                                    
         THEX  L:DBIC,4                                                         
         TSEG  '), '                                                            
         L     R1,DBEEJCB                                                       
         ACALL TSEGUSER                                                         
         TSEG  ' stopped at '                                                   
         L     R1,DBIA                                                          
         ACALL TSEGADDR                                                         
         B     SMSGEXIT                                                         
         END                                                                    
*                                                                               
         IF    DBTPNORM,BEGIN     IF USER TRAP,,                                
         TSEG  'TRAP,  '                                                        
         L     R1,DBEEJCB                                                       
         ACALL TSEGUSER                                                         
         TSEG  ' stopped at '                                                   
         L     R1,DBIA                                                          
         ACALL TSEGADDR                                                         
         LA    R5,DBTRAPT         SEE IF WE KNOW ROUTINE NAME                   
         LA    R4,RETTC+2         LOOP THRU ENTRY AND RETURN TRAPS              
         L     R1,DBIA                                                          
         WHILE ((R4,NZ),AND,(R1,NE,DBTPADDR)),BEGIN                             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         IF    (R4,NZ),BEGIN      IF TRAP AT TRACE ADDR, GIVE                   
         TSEG  ' ('                  ROUTINE ADDRESS                            
         TSEG  DBTPNAME,8,TB                                                    
         IF    DBTPTRC,BEGIN                                                    
         TSEG  'trace)'                                                         
         END                                                                    
         IF    DBTPNTY,BEGIN                                                    
         TSEG  'entry)'                                                         
         END                                                                    
         IF    DBTPRET,BEGIN                                                    
         TSEG  'return)'                                                        
         END                                                                    
         END                                                                    
         B     SMSGEXIT                                                         
         END                                                                    
*                                                                               
         IF    DBTPTRC,BEGIN      IF TRACE,                                     
         MVC   STOPNAME(8),DBTPNAME   SEE IF THERE IS #ROUTINE TRAP             
         LA    R5,DBTRAPS             TRAP TAKES PRECEDENT OVER TRACE           
         LA    R4,USERTC                                                        
         WHILE ((R4,NZ),AND,(' CLC STOPNAME(8),DBTPNAME',NE)),BEGIN             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         LA    R5,DBTRAPNF                                                      
         IF    (R4,NZ),BEGIN      FOUND #ROUTINE TRAP AT ENTRY                  
         TSEG  'TRAP,  '                                                        
         END                                                                    
         IF    (R4,Z),BEGIN       DID NOT FIND TRAP AT ENTRY TRACE              
         TSEG  'TRACE, '                                                        
         END                                                                    
         L     R1,DBEEJCB                                                       
         ACALL TSEGUSER                                                         
         TSEG  ' stopped at '                                                   
         L     R1,DBIA                                                          
         ACALL TSEGADDR                                                         
         TSEG  ' ('                                                             
         TSEG  DBTPNAME,8,TB                                                    
         TSEG  'trace)'                                                         
         B     SMSGEXIT                                                         
         END                                                                    
*                                                                               
         IF    DBTPNTY,BEGIN      IF TRACE ENTRY,,                              
         MVC   STOPNAME(8),DBTPNAME  SEE IF THERE IS #ROUTINE TRAP              
         LA    R5,DBTRAPS            TRAP TAKES PRECEDENT OVER TRACE            
         LA    R4,USERTC                                                        
         WHILE ((R4,NZ),AND,(' CLC STOPNAME(8),DBTPNAME',NE)),BEGIN             
         LA    R5,DBTPNEXT                                                      
         BCTR  R4,0                                                             
         END                                                                    
         LA    R5,DBTRAPNF                                                      
         IF    (R4,NZ),BEGIN      FOUND #ROUTINE TRAP AT ENTRY                  
         TSEG  'TRAP,  '                                                        
         END                                                                    
         IF    (R4,Z),BEGIN       DID NOT FIND TRAP AT ENTRY TRACE              
         TSEG  'TRACE, '                                                        
         END                                                                    
         L     R1,DBEEJCB                                                       
         ACALL TSEGUSER                                                         
         TSEG  ' stopped at '                                                   
         L     R1,DBIA                                                          
         ACALL TSEGADDR                                                         
         TSEG  ' ('                                                             
         TSEG  DBTPNAME,8,TB                                                    
         TSEG  'entry)'                                                         
         B     SMSGEXIT                                                         
         END                                                                    
*                                                                               
         IF    DBTPRET,BEGIN      IF TRACE RETURN,,                             
         TSEG  'TRACE, '                                                        
         L     R1,DBEEJCB                                                       
         ACALL TSEGUSER                                                         
         TSEG  ' stopped at '                                                   
         L     R1,DBIA                                                          
         ACALL TSEGADDR                                                         
         TSEG  ' ('                                                             
         TSEG  DBTPNAME,8,TB                                                    
         TSEG  'return)'                                                        
         B     SMSGEXIT                                                         
         END                                                                    
*                                                                               
         STOP                     ANYBODY ELSE IS BOMB                          
         END   , WITH (DBTRAP,R5)                                               
*-                                                                              
*-                                                                              
*-                                                                              
SMSGEXIT LABEL ,                                                                
         TCR                                                                    
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
*box                                                                            
*                                                                               
*                                                                               
*  TSEGUSER - tseg gg.uuu or gg.uuu#nn                                          
*                                                                               
*    on input,  R1 - JCB ADDR                                                   
*                                                                               
*                                                                               
TSEGUSER PROC  ,                                                                
         LR    R5,R1                                                            
         WITH  (JCB,R5)                                                         
*                                                                               
         TSEG  JCBGRP                                                           
         TSEG  '.'                                                              
         TSEG  JCBUSER                                                          
*                                                                               
         IF    (JCBANO,GT,1),BEGIN                                              
         TSEG  '#'                                                              
         TNUM  L2:JCBANO                                                        
         END                                                                    
*                                                                               
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
TAWA     RECORD BEGIN                                                           
TANAME   DS    CL8                                                              
         END                                                                    
*box                                                                            
*                                                                               
*                                                                               
*  TSEGADDR - tseg an address,                                                  
*             gives MODULE+OFFSET, or ADDRESS                                   
*                                                                               
*   on input, R1 - ADDRESS                                                      
*                                                                               
*                                                                               
TSEGADDR PROC  TAWA                                                             
         ACALL EVALADDR           GET MODULE+OFFSET REPRESENTATION              
         STM   R15,R0,TANAME      MODULE NAME                                   
         LR    R2,R1              OFFSET  (OR ADDR)                             
         IF    (R15,NZ),BEGIN     IF MODULE NAME,                               
         TSEG  TANAME,8,T         MODULE+                                       
         IF    (R2,NZ),BEGIN                                                    
         TSEG  '+0'                      0HHHEX                                 
         THEX  (R2)                                                             
         END                                                                    
         END                                                                    
         ELSE  BEGIN ,            IF NO MODULE NAME, JUST GIVE ADDR             
         THEX  (R2),8                                                           
         END                                                                    
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
TSWA     RECORD BEGIN                                                           
TSNAME   DS    CL8                 SYMBOL NAME                                  
         END                                                                    
*box                                                                            
*                                                                               
*                                                                               
*  TSEGSYM - tseg symbolic form of address if there is one                      
*            gives MODULE+OFFSET, or nothing                                    
*                                                                               
*  on entry: r1 - address                                                       
*                                                                               
*                                                                               
*                                                                               
TSEGSYM  PROC  TSWA                                                             
         ACALL EVALADDR                                                         
         IF    NZ,BEGIN           IF SYMBOLIC FORM, PRINT IT                    
         STM   R15,R0,TSNAME      SYMBOL                                        
         LR    R2,R1              OFFSET                                        
         TSEG  TSNAME,8,T                                                       
         IF    (R2,NZ),BEGIN                                                    
         TSEG  '+0'                                                             
         THEX  (R2)                                                             
         END                                                                    
         END                                                                    
         PEND  ,                                                                
         TITLE 'Debug Subroutines'                                              
*-                                                                              
*-       FUTURE ROUTINES                                                        
*-                                                                              
         STOP                                                                   
         EJECT                                                                  
         QLTORG                                                                 
         EJECT 'Debug Data Area'                                                
*box                                                                            
*                                                                               
*                                                                               
*  DATA AREA FOR DEBUG DESECT                                                   
*                                                                               
*                                                                               
DBAREA   DS    0D                                                               
         DS    (DBLENGTH)X                                                      
DBASTACK EQU   DBAREA+(DBSTACK-DBDSECT)                                         
DBADSTK  EQU   DBAREA+(DBDSTACK-DBDSECT)                                        
DBAHEAP  EQU   DBAREA+(DBHEAP-DBDSECT)                                          
DBAPAGE  EQU   DBAREA+(DBPAGE-DBDSECT)                                          
         EJECT                                                                  
DEBUGLEN EQU   *-WYLWBUG                                                        
         EJECT                                                                  
         END   .                                                                
