DISK     TITLE 'WYLBUR''S Disk I/O Routines'                                    
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         SPACE                                                                  
         HIBAL                                                                  
*                                                                               
WYLDISK  CSECT                                                                  
DISK     IDENT 4072                10:30:06 03/12/04  (SLP)                     
         SPACE 2                                                                
         SYSDEFN ,                 Define installation params                   
*                                                                               
         GBLC  &INSTALN,&PUBUSER,&PUBGRP,&PUBVOL                                
         GBLB  &SETKWVL                                                         
*                                                                               
         EJECT                                                                  
*-                                                                              
*-       MACRO DEFINITION FOR INITIALIZING CAMLIST ENTRIES IN                   
*-       WYLBUR'S I/O WORK AREA.                                                
*-                                                                              
         SPACE                                                                  
         MACRO                                                                  
         CAMINIT &NAME,&FLAGS,&A1,&A2,&A3                                       
         LCLA  &CNTR                                                            
         AIF   (T'&FLAGS EQ 'O').NOFLAGS                                        
         AIF   ('&FLAGS'(1,1) EQ '(').PAREND                                    
         MVI   &NAME,&FLAGS                                                     
         AGO   .NOFLAGS                                                         
.PAREND  ANOP  ,                                                                
&CNTR    SETA  0                   SET COUNTER LOOP CONTROL                     
.NXTFLG  ANOP  ,                                                                
         AIF   (&CNTR GT 4).NOFLAGS                                             
&CNTR    SETA  &CNTR+1             BUMP TO NEXT POTENTIAL FLAG                  
         AIF   (T'&FLAGS(&CNTR) EQ 'O').NXTFLG                                  
         MVI   &NAME+&CNTR-1,&FLAGS(&CNTR)                                      
         AGO   .NXTFLG                                                          
.NOFLAGS ANOP  ,                                                                
         AIF   (T'&A1 EQ 'O').NOA1                                              
         LA    R0,&A1              GENERATE ADDRESS OF A1                       
         ST    R0,&NAME+4          SAVE INTO CAMLIST AREA                       
.NOA1    ANOP  ,                                                                
         AIF   (T'&A2 EQ 'O').NOA2                                              
         LA    R0,&A2              GENERATE ADDRESS OF A2                       
         ST    R0,&NAME+8          SAVE INTO CAMLIST AREA                       
.NOA2    ANOP  ,                                                                
         AIF   (T'&A3 EQ '0').NOA3                                              
         LA    R0,&A3              GENERATE ADDRESS OF A3                       
         ST    R0,&NAME+12         SAVE INTO CAMLIST AREA                       
.NOA3    ANOP  ,                                                                
         MEND                                                                   
         EJECT                                                                  
*-                                                                              
*-       register usage                                                         
*-                                                                              
         REGS  FSR,,,,,JCBR,IOWAR,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR          
*                                                                               
         PUSH  DSECTS                                                           
*                                                                               
         COPY  CONTROL             Copy cv/cp                                   
*                                                                               
         COPY  RTNCODES                                                         
         TITLE 'DSECTS'                                                         
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
*                                                                               
UCE      RECORD BEGIN                                                           
         COPY  UCE                                                              
         END                                                                    
*                                                                               
         COPY  RSCGROUP                                                         
*                                                                               
         DCBD  DSORG=PS                                                         
*                                                                               
         IEFZB4D0 ,                Dynalloc (svc99) mapping                     
         IEFZB4D2 ,                Dynalloc (svc99) mapping                     
*                                                                               
         IEZATTCH ,                Attach (svc42) param list mapping            
*                                                                               
         CVT   DSECT=YES                                                        
*                                                                               
         IKJTCB                                                                 
*                                                                               
TIOT     DSECT                                                                  
         IEFTIOT1                                                               
*                                                                               
UCBDSECT DSECT                                                                  
         IEFUCBOB LIST=YES                                                      
*                                                                               
         IHASDWA                                                                
*                                                                               
         IEFJESCT                                                               
*                                                                               
VOLDSECT VOLUME DSECT=YES                                                       
VOLENTSZ EQU   *-VOLDSECT                                                       
*                                                                               
         POP   DSECTS                                                           
         SPACE 2                                                                
         VOLINFO                                                                
         TITLE 'External I/O Work Area'                                         
***  DISK expects the multiple work areas to be chained together.               
**       Since the number of work areas defines the number of I/O               
**       subtasks which will be attached and since the                          
**       number of duplicate symbols makes multiple definition                  
**       within an assembly dificult, the work areas must be                    
**       chained together by some other mechanism.                              
*PUSH,GEN                                                                       
IOWA     IOWA  DSECT               Generate iowa dsect                          
IOWAGLEN EQU   *-IOWA              Generate total iowa length                   
         EJECT                                                                  
         ORG   SAREA                                                            
         SDSNBUF                                                                
         EJECT ,                                                                
*                                                                               
* Indexed VTOC support parameter lists and flag definitions                     
*                                                                               
         SPACE                                                                  
INXVFLG  FLAG  ,                   Processing indexed VTOC                      
         FLAG  INXVTOC               -  Active indexed VTOC                     
         SPACE                                                                  
CVAFDSN  DC    CL44' '             Next data set from volume                    
         DC    0D'0'               Force alignment                              
CVAFPL   CVAFSEQ                                                       X        
               ACCESS=GTEQ,DSNONLY=YES,DSN=CVAFDSN,                    X        
               ARG=DS1PTRDS,IXRCDS=KEEP,MF=L                                    
         EJECT ,                                                                
         SCATBUF                                                                
*POP                                                                            
*                                                                               
DSORGPS  EQU   X'40'               Dsorg=ps                                     
DSORGPO  EQU   X'02'               Dsorg=po                                     
UNDEFIND EQU   X'C0'               Recfm=u                                      
FIXBLOCK EQU   X'90'               Recfm=fb                                     
RECFMF   EQU   X'80'               Recfm=f                                      
RECFMV   EQU   X'40'               Recfm=v                                      
BLOCKED  EQU   X'10'               Recfm=xb                                     
SPANNED  EQU   X'08'               Recfm=xs                                     
         TITLE 'DISKINIT -- DISK''s Initialization Chores'                      
WYLDISK  CSECT                                                                  
         ENTRY IOWASIZE            Total iowa length, externalized              
IOWASIZE DC    A(IOWAGLEN)         Used in FAIL                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DISKINIT -- Routine to initialize I/O stuff (called by "INIT"                
*   during WYLBUR initialization).  This routine initializes                    
*   the volume table and the I/O subtasks.                                      
*                                                                               
DISKINIT XENTER                                                                 
*-                                                                              
*-       Load the I/O subtasks.                                                 
*-                                                                              
         L     R5,=V(IOWRSG)       Iowa resource group ptr                      
         USING RSCGROUP,R5                                                      
         LA    R1,RSGQFRFW         Point at free chain                          
         LR    R2,R1               Copy                                         
         STM   R1,R2,RSGQFRFW      Initialize pointers                          
         LH    R4,RSG#FREE         Get number to start                          
         CLEAR IOWAR                                                            
IOLOADLP LABEL ,                   Initialize next iowa                         
         L     R0,=A(IOWAGLEN)     SET TOTAL LENGTH OF IOWA                     
         ICM   R0,8,=AL1(60)       SP=60 (Added, 3/89, Niz)                     
         GETMAIN R,LV=(0)          Request storage for iowa                     
         LR    IOWAR,R1            Copy address of IOWA                         
         LR    R0,R1               Copy address for IOWA clear                  
         L     R1,=A(IOWAGLEN)       Set length of total IOWA                   
         CLEAR R15                     Zero from length and pad                 
         MVCL  R0,R14                    Clear IOWA to zeroes                   
         WITH  IOWA,BEGIN                                                       
         LR    R1,IOWAR            Copy for queue.                              
         LA    R15,RSGQFRFW-(RSC@NEXT-RESOURCE)                                 
         QRSC  (R1)                Queue up the resource                        
         LA    R0,DECB             Point at ecb                                 
         ST    R0,IWA$ECB          Save address                                 
         SET   IWA1@ECB            Set have ecb address                         
         STC   R4,IDMASK           Save iowa number                             
         MVC   DSDD,=CL8'IOWA'                                                  
         BTD   DSDD+4,2,(R4)       Iowa number                                  
         OI    DSDD+4,C'0'         (leading zero)                               
         SPACE ,                                                                
         LA    R0,DECB             Address of data event control                
         ST    R0,WADECB             Save for waiton/off post                   
         SPACE ,                                                                
         LA    R0,JFCB             Address of job file cnt block                
         ST    R0,EXLST+4            Save for dcb exlst                         
         MVI   EXLST+4,X'87'         Set jfcb dcb exit and lst                  
         SPACE ,                                                                
         MVI   IOB,X'C2'           Set IOB channel flags                        
         SPACE ,                                                                
         MVC   SRCHCCW(CCWMLEN),CCWMODL      MOVE IN CCW CHAIN                  
         LA    R1,SRCHCCW          Set address of 1st ccw in chain              
         LA    R0,SRCHCCW+CCWMLEN  Set last address for termination             
         LOOP  BEGIN               Relocate ccw chain                           
         ICM   R2,7,@R1+1          Set ccw address into register                
         ALR   R2,IOWAR              Relocate ccw address                       
         STCM  R2,7,@R1+1              Reset ccw address in chain               
         LA    R1,@R1+8            Bump to next ccw in chain                    
         UNTIL (R1,GE,R0),END      Go relocate next ccw                         
         SPACE ,                                                                
         MVI   DSN,X'04'           Initialize for FMT4 DSCB                     
         MVC   DSN+1(44-1),DSN       Propagate FMT4 dscb name                   
         MVI   DSNAME,X'40'            Initialize for blank dsn                 
         MVC   DSNAME+1(44-1),DSNAME     Propagate blanks                       
         MVC   NEWDSNAM,DSNAME             Set into new dsname also             
         SPACE ,                                                                
         MVC   BLDL(4),=AL2(1,BLDLSZ)  Initialize STOW/BLDL list                
         SPACE ,                                                                
         MVC   SCRVLST(2),=AL2(1)      Initialize scratch camlist               
         SPACE ,                                                                
         LA    R0,ID               TIC address for show dsnames                 
         ST3   R0,VTOCCCW                                                       
         LA    R0,PDSREAD          TIC address for show directory               
         ST3   R0,PDSCCW                                                        
         LA    R0,ENDCCW+8         Address in CSW VTOC search done              
         ST3   R0,LASTCCW                                                       
         LA    R0,ENDCCW           Address in CSW when last vtoc                
         ST3   R0,LASTCCW1         End of CCW fixup                             
         SPACE ,                                                                
         MVI   DECB+5,X'80'        Set DECB mode=SF                             
         LA    R0,DCB                Address of DCB                             
         ST    R0,DECB+8             Save into DECB                             
         LA    R0,DBUF               Address of disk buffer                     
         ST    R0,DECB+12            Save into DECB                             
         SPACE ,                                                                
         CAMINIT DSCB,X'C1',DSNAME,DSVID,DS1FMTID                               
         CAMINIT SCRLST,(X'41',,X'50'),DSNAME,,SCRVLST                          
         CAMINIT USCATL,196,DSNAME,,CATBLOCK                                    
         CAMINIT USCATL2,194,CATNTTR,CATVOLID,CATBLOCK                          
         CAMINIT VTOC,193,DSN,DSVID,VTOCAREA                                    
         CAMINIT VTOC3,(192,128),DS1PTRDS,DSVID,IECSDSL3                        
         CAMINIT CATLST,228,DSNAME,,SCRVLST                                     
         CAMINIT RENAMLST,(193,,32),DSNAME,NEWDSNAM,SCRVLST                     
         SPACE ,                                                                
         LA    R0,DCB              ADDRESS OF DATA CONTROL BLOCK                
         ST    R0,OPENLIST           save into open parameter list              
         OI    OPENLIST,X'80'          mark as last dcb in list                 
         SPACE ,                                                                
         WITH  (IHADCB,R1),BEGIN   Addressability to dcb                        
         L     R2,=A(MODELDCB)     Address of model dcb                         
         MVC   DCB(DCBSZ),@R2      Move in model dcb                            
         LA    R1,DCB              Address of read/write dcb                    
         L     R2,=A(FOURMODL)     Address of model dcb                         
         MVC   FOURS(FOURSIZ),@R2  Move in model dcb                            
         LA    R1,FOURS            Address of vtoc dcb                          
         LA    R0,EXLST            Address of exit list                         
         ST3   R0,DCBEXLSA         Set dcb exit list address                    
         END                                                                    
         SPACE ,                                                                
         MVC   ENQVOL(L'ENQVOLM),ENQVOLM                                        
         MVC   ENQDSN(L'ENQDSNM),ENQDSNM                                        
         LA    R0,DSVID            Set address of device id                     
         ST    R0,ENQVOL+8           Save into ENQ parameter list               
         SPACE ,                                                                
         LA    R0,ACWOPER          Address of security operation                
         ST    R0,ACSPFLGS           Save into parameter list                   
         LA    R0,DSNAME           Address of data set name                     
         ST    R0,ACSPDSN            Save into parameter list                   
         LA    R0,DS1FMTID         Address of fmt1 dscb area                    
         ST    R0,ACSPDSCB           Save into parameter list                   
         LA    R0,UALAUTH          Address of access length                     
         ST    R0,ACSPACCT           Save into parameter list                   
         MVC   UALLEN,=AL2(20)     Set user access parm length                  
         SPACE ,                                                                
         LA    R3,DSDD             Point at it                                  
         L     R1,=A(SUBTSKGO)     Entry address                                
         IDENTIFY EPLOC=(R3),ENTRY=(1)                                          
         LR    R1,IOWAR            Set parm pointer                             
         LA    R15,ATTACHL         Attach param list                            
         ATTACH EPLOC=(R3),ECB=DECB,SF=(E,(15))                                 
         ST    R1,WATCB            Save tcb addr for detach                     
         END                                                                    
         BCT   R4,IOLOADLP         Loop starting tasks                          
         CLEAR R2                                                               
         ST    IOWAR,CVFIOWA       Initialize for others                        
         DROP  RSCGROUP                                                         
*                                                                               
* now try to locate cvol used for wyl datasets to help                          
* optimize the catalog.  note that header-1 is used to avoid '.'                
*                                                                               
* (This is obsolete and can be deleted.  6/90, Niz)                             
*                                                                               
         WITH  IOWA,BEGIN                                                       
         MVC   DSNAME(L'KWYL-1),=C'WYL.'  move in header                        
         NI    USCATL,255-CAMFCVOL Set to not use cvol ptr                      
         LOCATE USCATL             Find cvol                                    
         IF    (R15,EQ,12),BEGIN   Begin if so                                  
         L     R1,=A(WYLVOL)                                                    
         MVC   @R1(6),CATVOLID     Set wyl. cvol                                
         L     R1,=A(WYLCVOL)                                                   
         MVI   @R1+1,X'70'         Set branch flag                              
         END                                                                    
         END                                                                    
         EJECT                                                                  
*-                                                                              
*-       Save a pointer to the eligible device lookup table for                 
*-         later use.                                                           
*-                                                                              
         L     R1,CVTPTR           -> CVT                                       
         L     R1,CVTJESCT-CVT(R1) -> JESCT                                     
         L     R1,JESEDT-JESCT(R1) -> EDTSECT                                   
         IF    (@R1,EQ,'EDT'),'CLEAR R1'  Not available (ESA style?)            
         ELSE  'L R1,@R1'          -> Lookup section                            
         COMMENT ,  *** GG.SCH     THIS CODE DOES NOT WORK FOR ESA              
         COMMENT                   WE CLEAR THE LOOKUP POINTER                  
         CLEAR R1                  *** no UNIT=xxx allowed                      
         ST    R1,CVLUVPTR         Save pointer to EDT lookup section           
         SPACE 2                                                                
*-                                                                              
*-       Set up the volume table.                                               
*-                                                                              
         IF    CVFRLG,BEGIN        RLG machine...                               
         LOAD  EP=WVOLRLG                                                       
         END                                                                    
*                                                                               
         ELSEIF (CVMACHID,EQ,'SYSC '),BEGIN  SYSC machine...                    
         LOAD  EP=WVOLSYSC                                                      
         END                                                                    
*                                                                               
         ELSE  BEGIN               Regular (SYSA) machine...                    
         LOAD  EP=WVOL                                                          
         END                                                                    
*                                                                               
         ST    R0,CVVOLIST         Save volume list address                     
         ST    R0,CVRCVOL          Save pointer for recovery                    
*                                                                               
         L     IOWAR,CVFIOWA       Use an iowa for local wa                     
         USING IOWA                                                             
*-                                                                              
*-       Now allocate the required volumes.                                     
*-                                                                              
         L     R2,CVVOLIST         Get ptr to volume list                       
         USING VOLDSECT,R2                                                      
         CLEAR R3                  Clear counter of save volumes                
DOVOL1   TM    VFLG1,VF1AVAIL      Is this to be avail at init ?                
         BZ    DOVOLNXT            No go to next one                            
*                                                                               
         CLEAR TRY2                                                             
*                                                                               
DOALLOC  L     R5,CVTCBP                                                        
         L     R5,@R5+12           Tiot ptr                                     
         WITH  (TIOT,R5),BEGIN                                                  
         CLEAR R4                                                               
*                                                                               
         CLEAR R0,R1               Assume not found                             
         LOOP  BEGIN                                                            
         AR    R5,R4               Go to next dd entry                          
         LC    R4,TIOELNGH         Get length of this dd entry                  
         IF    (R4,Z),BEGIN        Volume not found...                          
         IF    (TRY2,NZ),DOVOLSTO  Better forget it                             
         MVC   BALDD,VTYPE                                                      
         MVC   BALVOL,VTYPE+2      Set volume serial                            
         LA    R1,BALLOC                                                        
         DYNALLOC ,                Try allocating it                            
         IF    (R15,NZ),'CLEAR R0,R1; B DOVOLSTO'  sorry                        
         MVI   TRY2,X'FF'                                                       
         B     DOALLOC             Try it again                                 
         END                                                                    
         IF    ('CLC VTYPE+2(6),TIOEDDNM+2',EQ),BEGIN  got it...                
         IF    ('CLC VTYPE(2),TIOEDDNM',NE),BEGIN   DD typ mismatch?            
         MVC   CHGFRVL,VTYPE       Changed from...                              
         MVC   CHGTOVL,TIOEDDNM    ...to                                        
         LA    R1,CHGVLWTO         -->WTO                                       
         WTO   MF=(E,(1))                                                       
         MVC   VTYPE,TIOEDDNM      Over-ride DD type                            
         END   ,                                                                
         LA    R1,TIOENTRY         Tiot entry                                   
         L3    R0,TIOEFSRT         Ucb addr                                     
         B     DOVOLGOT            it's ok now                                  
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
DOVOLGOT MVC   VOLUSECT,=H'0'      Set the use count to zero                    
         OI    VFLG1,VF1ON         Set vol online                               
DOVOLSTO ST    R0,VOLUCBAD         Save ucb address                             
DOVOLNXT LA    R2,VOLENTSZ(,R2)    Pt to next entry                             
         CLI   0(R2),X'FF'         At end?                                      
         BNE   DOVOL1              No, continue                                 
         B     INITDONE            All done                                     
         DROP  VOLDSECT                                                         
*                                                                               
VOLNORM  LR    R3,R1               Save tiot pointer                            
         LR    R9,R14              Save return address                          
         LA    R1,NORMWTO          Point at wto                                 
         MVC   NORMVOL(6),@R3+6    Move in vol name                             
         WTO   ,MF=(E,(1))         Out with it                                  
         LR    R1,R3               Restore r1                                   
         LR    R14,R9              Restore r14                                  
         BR    RAR                 Return to caller                             
*                                                                               
NORMWTO  WTO   '*** WYLBUR *** NO ROOM FOR VVVVVV ***',MF=L                     
NORMVOL  EQU   NORMWTO+32                                                       
*                                                                               
CHGVLWTO WTO   '*** WYLBUR *** VOL TYPE CHANGED FROM XX TO YY BY JCL **C        
               *',MF=L                                                          
CHGFRVL  EQU   CHGVLWTO+41,2       Change from type                             
CHGTOVL  EQU   CHGVLWTO+47,2       ...to type                                   
*                                                                               
TRY2     DC    X'00'               0=first try, FF=second try                   
*                                                                               
         DROP  IOWA                                                             
INITDONE XEXIT R2,R8               Return                                       
         DROP  BR                                                               
         SPACE 2                                                                
*  Dynamic allocation parameter list...                                         
BALLOC   DS    0F                                                               
         DC    X'80',AL3(BALRB)    Alloc request block ptr                      
*                                                                               
BALRB    DC    AL1(20)             RB length                                    
BALVERB  DC    AL1(S99VRBAL)       DSNAME allocation                            
BALFLG11 DC    AL1(S99NOMNT)       don't mount if unavailable                   
BALFLG12 DC    AL1(0)              Flags #2                                     
BALRSC   DS    0F                  Returned fields:                             
BALERROR DC    H'0'                Error code                                   
BALINFO  DC    H'0'                Information code                             
         DC    A(BALTXTP)          Text item ptrs                               
         DC    A(0)                Reserved                                     
         DC    A(0)                Special flags                                
*                                                                               
BALTXTP  DC    A(BALTXTDD)                                                      
         DC    A(BALTXTV)                                                       
         DC    A(BALTXTU)                                                       
         DC    A(BALTXTS)                                                       
         DC    A(BALTXTD)                                                       
         DC    X'80',AL3(BALTXTC)                                               
*                                                                               
BALTXTDD DC    AL2(DALDDNAM,1,8)   DDNAME definition                            
BALDD    DC    CL8'*'                                                           
*                                                                               
BALTXTV  DC    AL2(DALVLSER,1,6)   Vol=ser=                                     
BALVOL   DC    CL6'*'                      volume                               
*                                                                               
BALTXTU  DC    AL2(DALUNIT,1,8)    Unit=                                        
         DC    C'SYSALLDA'              sysallda                                
*                                                                               
BALTXTS  DC    AL2(DALSTATS,1,1),X'01'  disp=old                                
BALTXTD  DC    AL2(DALNDISP,1,1),X'08'  disp=(,keep)                            
BALTXTC  DC    AL2(DALCDISP,1,1),X'08'  disp=(,,keep)                           
*-                                                                              
*-       MODEL CHANNEL COMMAND PROGRAMS                                         
*-                                                                              
CCWMODL  CCWP  TYPE=GENERATE                                                    
CCWMLEN  EQU   *-CCWMODL           LENGTH OF CCW COMMAND CHAIN                  
*                                                                               
ENQVOL1  ENQ   (0,DSVID-IOWA,E,6,STEP),MF=L                                     
ENQVOLM  EQU   ENQVOL1,*-ENQVOL1                                                
ENQDSN1  ENQ   (0,0,E,0,SYSTEM),RET=USE,MF=L                                    
ENQDSNM  EQU   ENQDSN1,*-ENQDSN1                                                
*                                                                               
         QLTORG                                                                 
*                                                                               
ATTACHL  ATTACH SZERO=NO,SF=L                                                   
         TITLE 'Final I/O Subtask Shutdown Routine'                             
*box                                                                            
*                                                                               
*  DISKSTOP -- Routine to shutdown I/O subtasks.  This is                       
*    called just before normal termination.                                     
*                                                                               
DISKSTOP XENTER                                                                 
         STIMER WAIT,BINTVL==A(15*100)  15 sec wait for subtask I/O             
*                                                                               
         L     R5,=V(IOWRSG)       Iowa resource group ptr                      
         USING RSCGROUP,R5                                                      
         LA    R4,RSGQFRFW-(RSC@NEXT-RESOURCE)  free queue                      
         LCALL DETQUEUE            Detach subtasks on free queue                
         LA    R4,RSGQACFW-(RSC@NEXT-RESOURCE)  active queue                    
         LCALL DETQUEUE            Detach subtasks on active queue              
         DROP  RSCGROUP                                                         
         XEXIT                                                                  
*                                                                               
DETQUEUE LR    R3,R4                                                            
         WITH  (RESOURCE,R3),BEGIN                                              
         WHILE ('L R3,RSC@NEXT; CR R3,R4',NE),BEGIN                             
         IF    (R3,Z),RAR          (Queue not built yet)                        
         WITH  (IOWA,R3)           Resource hdr is start of iowa                
         CLEAR DECB                                                             
         DETACH WATCB                                                           
         WAIT  ECB=DECB            Wait for termination                         
         END                                                                    
         END                                                                    
         BR    RAR                 Return                                       
         DROP  BR                                                               
*                                                                               
         QLTORG                                                                 
         TITLE 'DSKOPEN, Disk Interface Routines'                               
*box                                                                            
*                                                                               
*  DSKOPEN -- Routine to open a disk file.  (Called by the                      
*    EXTOPEN routine.)                                                          
*                                                                               
*    On entry:                                                                  
*      DSNWA contains information about the file.                               
*                                                                               
DSKOPEN  XENTER                                                                 
*                                                                               
USEOPEN  L     R5,CPLRCL           Get type given (if any)                      
         DOPEN (R5),,USE           Open data set                                
         BZ    OPNISGD             Good open                                    
         VCALL ACSCHECK            Check for access probs                       
         BZ    USEOPEN             Can now do the open                          
         IF    DSNFSML+DSNFMAIL,UDOPXIT  Return for mail                        
         VCALL NTGDOPN             Go do open error message                     
*                                                                               
OPNISGD  ST    R1,CPDRED           Save start input buffer                      
         LTR   R5,R5               Test format specified                        
         BNM   UDOPEN1             Br if yes                                    
         LR    R5,R0               Lrecl plugged in by dopen                    
         ST    R0,CPLRCL           Save format found                            
UDOPEN1  VCALL CHKMBRIG            Check member ignored                         
         IF    (^CPLFLG5.CPFFOPT,OR,CPLFLG5.CPFUNUM),UDOPENX  Unn               
         OI    CPSEQLN,X'80'       Turn on flag to determine point              
         LTR   R5,R5               Test format                                  
         BNZ   UDOPENX             Okay if not edit                             
         ACALL DCLOSE                                                           
         ERROR 'Numbered invalid.'                                              
*                                                                               
UDOPENX  CLEAR R15                 Set rc                                       
UDOPXIT  XEXIT ,,LTR                                                            
         DROP  BR                                                               
         TITLE 'DSKREAD, Disk Interface Routines'                               
*box                                                                            
*                                                                               
*                                                                               
*  DSKREAD                                                                      
*                                                                               
*  GET LINE FROM OLDIBM (OS) FILE                                               
*                                                                               
*  ON ENTRY:                                                                    
*    @R1 - PLACE TO PUT LINE                                                    
*    R0 - MAX LINE LEN (IGNORED FOR NOW, ASSUMED >= &LINESZ)                    
*    DSNWA contains information about the file.                                 
*                                                                               
*  ON EXIT:                                                                     
*    @R1 - LINE TEXT                                                            
*    R0 - LENGTH OF LINE TEXT                                                   
*    R2 - LINE NUMBER                                                           
*    R15=ZERO, LINE FOUND.  R15=NZ, END OF FILE                                 
*                                                                               
*  CAUTION!:                                                                    
*  THIS ROUTINE USES CPNWLN TO FIND MINIMUM NEXT LINE                           
*  NUMBER. SEE COMMENTS AT START OF LXCATE BELOW.                               
*                                                                               
*                                                                               
DSKREAD  XPROC ,                                                                
*                                                                               
         LR    R4,R1                                                            
         LR    R5,R0                                                            
*                                                                               
         COMMENT                   CALL LXCATE FOR NOW                          
         LA    R1,CPNWLN                                                        
         ACALL LXCATE                                                           
*                                                                               
         COMMENT                   LOCATED LINE IN EXTERNAL FILE                
         IF    (^CPDRPT.CPFNTYT,AND,^CPDRPT.CPFHIGH),BEGIN                      
         LR    R1,R4                                                            
         LA    R0,&LINESZ                                                       
         VCALL UNPRESS                                                          
         LR    R2,R15              RETURN LINE NUMBER                           
         PRETURN (R0,R2)           RETURN LINE TEXT LOC,LEN                     
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         COMMENT                   END OF FILE                                  
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PEND                                                                   
         TITLE 'DSKREAD Routine'                                                
*box                                                                            
*                                                                               
*  LXCATE needs R1 pointing at internal lineno to LOCATE.                       
*                                                                               
*    Return flags (in 1st byte CPDRPT) and return items are:                    
*      CPFNTYT - X'80' - nothing at all - others returns all zero               
*      CPFMTCH - X'08' - got a line in external data set                        
*                                                                               
*      R15 - points to addr of line                                             
*      CPLCNO - lineno of locate line                                           
*                                                                               
*  LXCATE NOTES!                                                                
*  LXCATE IS NOW USED ONLY FOR DSKREAD.  IE. THIS IS THE ROUTINE                
*  THAT DOES MOST OF THE WORK FOR READING OLDIBM FILES.  THE                    
*  INTERFACE IS A BIT STRANGE.  BUT AS THIS ROUTINE WILL BE AXED                
*  WHEN WINGS IS OPERATIVE.  WE ARE JUST TAKING THIS CODE AND                   
*  MAKING IT WORK, BY HOOK OR CROOK.                                            
*                                                                               
*  CAUTION!!:                                                                   
*  R1 INPUT IS NOW IGNORED.  WE GET MINIMUM LINE NUMBER FROM                    
*  CPNWLN !!                                                                    
*                                                                               
*  HEY!!:                                                                       
*  THIS ROUTINE MUST BE CALLED ONLY BY DSKREAD.  IT WILL BE                     
*  ELIMINATED WHEN OLDIBM GOES AWAY AND WE USE ONLY WINGS OS                    
*  FILE INTERFACE.                                                              
*                                                                               
LXCATEWA RECORD BEGIN                                                           
LXLNOPTR DS    F                                                                
         END                                                                    
*                                                                               
LXCATE   PROC  LXCATEWA                                                         
         LA    R1,CPNWLN           *** R1 INPUT IGNORED ***                     
         ST    R1,LXLNOPTR                                                      
         CLEAR CPNEDPFX            Initialize prefix info                       
         CLEAR R5                  Set for ic inst                              
         TM    CPDRED,CPFSTART     See if 1st time in                           
         BO    LOADEM              No                                           
         CLEAR R4                  Initialize line number value                 
READRE   VCALL DREAD               Read a record                                
         BP    NDFIL               Eof                                          
         BZ    NDSKERJ             B if disk i/o ok                             
         VCALL RDERROR             Disk read error msg                          
         IF    P,'ACALL GOCLRNW'   Br if attention                              
NDSKERJ  OI    CPDRED,CPFSTART     Set not 1st time                             
         L3    R2,CPDRED+1         Addr input buffer                            
         LT    R6,CPLRCL           Get type of file                             
         BNZ   READR1              Br if not edit                               
         IF    DSNFCODE,BEGIN                                                   
         LR    R6,R0               R6 -> HOLDS COUNT                            
         LR    R5,R2               R5 -> 1ST CHARACTER                          
         L     R4,=F'65539'        R4 HOLDS MAGIC VALUE                         
         L     R15,DSNCODE         R15 HOLDS CODE                               
         SPACE 1                                                                
USELOOP  MR    R14,R4              MULTIPLY BY MAGIC VALUE                      
         LR    R3,R15              MOVE LOWER HALF OF PRODUCT                   
         SLDL  R2,8                SHIFT HIGH ORDER BYTE INTO R2                
         IC    R3,@R5              LOAD CHARACTER INTO R3                       
         SLR   R3,R2               DECODE CHARACTER                             
         STC   R3,@R5              REPLACE CHARACTER                            
         LA    R5,1(R5)            GET NEXT CHARACTER                           
         BCT   R6,USELOOP          LOOP BACK FOR ALL CHARACTERS                 
         SPACE 1                                                                
         CLEAR R4,R5               CLEAR REGISTERS                              
         L3    R2,CPDRED+1         RE-INIT R2                                   
         END   ,                                                                
         LH    R3,@R2              Block length                                 
         N     R3,=A(X'7FFF')      Throw away extended edit bit                 
*                                                                               
         CR    R3,R0               Compare to read count                        
         IF    H,'ACALL NOGGODY'   Nonsense                                     
         AR    R3,R2               Point R3 to end of buffer                    
         LA    R2,@R2+2            Point at 1st line                            
         STM   R2,R4,CPWK1         Save ptr and end ptr                         
ICAGEN   IF    @R2.X'20','LA R2,@R2+10'  Skip past prefix                       
         LC    R5,@R2+4            Get next prest-count                         
         LA    R2,5(R2,R5)         Kick pointer                                 
         CR    R2,R3               More?                                        
         BL    ICAGEN              Yes                                          
         IF    H,'ACALL NOGGODY'   Too much                                     
         B     LOADEM              Now go do this buffer                        
*                                                                               
READR1   LR    R3,R0               Set R3 to read count                         
         BM    READR2              Branch if variable format                    
         AR    R3,R2               Point R3 to end for fixed form               
         B     READR3              Go join common                               
*                                                                               
READR2   CH    R0,@R2              Does vb count agree                          
         IF    NE,'ACALL INVARDS'  Br no to invalid vb                          
         AR    R3,R2               Set R3 to end of buffer                      
         LA    R2,@R2+4            Set R2 to first vb record                    
READR3   STM   R2,R4,CPWK1         Save setup values                            
LOADEM   LM    R2,R4,CPWK1         Set registers for next line                  
         MVI   CPDRPT,0            Set no match yet                             
TRYMOR   CR    R2,R3               Any more to do for this buff                 
         BNL   READRE              Br no to read next buff                      
         LT    R6,CPLRCL           Get format type                              
         BNZ   NOTEDT              Br if not edit format                        
*                                                                               
         IF    @R2.X'20',BEGIN     Extended edit prefix...                      
         MVC   CPNEDPFX,@R2        Save prefix info                             
         LC    R5,@R2+14           Length byte                                  
         LR    R15,R2              Start of line prefix                         
         LA    R2,@R5+15(R2)       Point to next line                           
         IF    ^CPFXALL,BEGIN      Only return text lines...                    
         IF    (@R15+8,NE,=H'0'),TRYMOR  Skip this line                         
         END                                                                    
         LA    R15,@R15+10         Start of pressed line                        
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         CLEAR @R2.X'F8'           Clear unwanted bits                          
         LC    R5,@R2+4            Pressed count next line                      
         LR    R15,R2              Point at line beginning                      
         LA    R2,@R5+5(R2)        Point at start next line                     
         END                                                                    
*                                                                               
         L     R1,LXLNOPTR         Restore R1 for lineno                        
         CLC   @R15(4),@R1         At wanted line?                              
         BL    TRYMOR              No                                           
         BH    NOTEQ               No match                                     
         MVI   CPDRPT,CPFMTCH      Set matching line no. found                  
NOTEQ    STM   R2,R4,CPWK1         Save 2-3-4                                   
         MVC   CPLCNO,@R15         Set located line no.                         
         LR    R1,R15              Line ptr before lineno                       
         VCALL EDITCK              Check for good stuff                         
         IF    M,'ACALL NOEMSG'    It's not nice to fool nature                 
         LR    R15,R1              Copy pressed line ptr                        
         B     LXEXIT                                                           
*                                                                               
NDFIL    MVI   CPDRPT,CPFNTYT      Set eof flag                                 
         B     LXEXIT                                                           
*                                                                               
NOTEDT   BP    GOTFIXD             Br if fb format                              
         MVC   CPDOUB(2),@R2       Put vb count on proper bound                 
         LH    R6,CPDOUB           Get length of this record                    
         LTR   R6,R6               Make sure valid value                        
         IF    NP,'ACALL INVARDS'  Error if not positive                        
         LA    R5,@R2+4            Set R5 to start of data                      
         AR    R2,R6               Point R2 to next record                      
         SH    R6,=H'4'            Adjust to true length of data                
         IF    M,'ACALL INVARDS'   Error if negative result                     
         CR    R2,R3               Check that not past buff end                 
         IF    H,'ACALL INVARDS'   Error if past buff end                       
         B     NOTEDT1             Now join common code                         
*                                                                               
GOTFIXD  LR    R5,R2               Set start of record                          
         AR    R2,R6               Point R2 to next record                      
         CR    R2,R3               Is this a short record                       
         BNH   NOTEDT1             Br no, length is ok                          
         SR    R6,R2               Truncate last                                
         AR    R6,R3               Record                                       
NOTEDT1  CH    R6,=AL2(&LINESZ)    Is record length 21 max                      
         BNH   *+8                 Ok if it is                                  
         LH    R6,=AL2(&LINESZ)    Use max if not                               
         IF    (CPLFLG5.CPFFOPT,AND,^CPLFLG5.CPFUNUM),DOLXNMB  num              
         LR    R0,R4               Set r0                                       
         L     R1,CPDELTA          And R1 for adder                             
         VCALL ADDER               Calculate next line no.                      
         IF    M,'ACALL LXERRB'    Error if bad result                          
         LR    R4,R0               Save new line no.                            
CUTTIN2  L     R1,LXLNOPTR         Point to line no. to locate                  
         C     R4,@R1              Is this line we want                         
         BL    TRYMOR              Br no to get next line                       
         BNE   *+8                 Br if not match                              
         MVI   CPDRPT,CPFMTCH      Set match                                    
         LR    R0,R6               Set R0 to length for press                   
         L     R1,CPIOWAP          Get work area                                
         LA    R1,WALINAR-IOWA(,R1)  in disk path                               
         LTR   R6,R6               Test for length zero                         
         BZ    LENZERO             it's a null line                             
         DEX   R6,' MVC @R1(0),@R5 '  Move line to area                         
LENZERO  LR    R15,R4              Set R15 to line no.                          
         VCALL PRESS               Press the line                               
         LR    R15,R1              Set R15 to pressed line                      
         B     NOTEQ               Go finish up                                 
*                                                                               
DOLXNMB  TM    CPSEQLN,X'80'       Need to determine point/nopoint              
         BE    DOLXNM3             No                                           
         NI    CPSEQLN,255-X'80'   Turn off flag                                
         LH    R15,CPSEQLN         Get count                                    
         NI    CPLFLG5,255-CPNFINT Assume decimal point                         
         TM    CPSEQFLD,X'80'      Test seqfld at end                           
         BE    DOLXNM2             No                                           
         LA    R1,0(R6,R5)         Point to                                     
         SR    R1,R15              Seqfld                                       
         B     DOLXNM1             Go look for decimal pnt                      
*                                                                               
DOLXNM2  LH    R1,CPSEQFLD         Point                                        
         DECR  R1                  To                                           
         AR    R1,R5               Seqfld                                       
DOLXNM1  CLI   @R1,C'.'            Decimal point in seqfld                      
         BE    DOLXNM3             Yes, go on                                   
         LA    R1,@R1+1            Point to next position                       
         BCT   R15,DOLXNM1         Loop till done                               
         OI    CPLFLG5,CPNFINT     Set no decimal point                         
DOLXNM3  LH    R0,CPSEQLN          Get seqfld length                            
         TM    CPSEQFLD,X'80'      Seq fld at end                               
         BO    DOLXNMB1            Yes                                          
         LH    R1,CPSEQFLD         Get seqfld position                          
         DECR  R1                  Set machine position                         
         LR    R15,R0              Check                                        
         AR    R15,R1              Seqfld                                       
         CR    R6,R15              In record                                    
         IF    L,'ACALL LXERRC'    No                                           
         AR    R1,R5               Point to seqfld position                     
         B     CUTTIN1             Go scan                                      
*                                                                               
DOLXNMB1 CH    R6,CPSEQLN          Check seqfld in record                       
         IF    L,'ACALL LXERRC'    No                                           
         LA    R1,0(R6,R5)         Point to                                     
         SR    R1,R0               Seqfld position                              
CUTTIN1  SCINIT (R1),(R0)          Scan init                                    
         TM    CPLFLG5,CPNFINT     Is it nopoint                                
         IF    E,BEGIN                                                          
         SCAN  LXNMPRT                                                          
         END                                                                    
         ELSE  BEGIN                                                            
         SCAN  LXNMPRT2                                                         
         END                                                                    
         IF    (R15,NEG),'ACALL LXERRC'                                         
         CLEAR R15                                                              
         B     CUTTIN2                                                          
*                                                                               
*  EXIT                                                                         
*                                                                               
LXEXIT   LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*                                                                               
*  LXCATE ERROR EXITS                                                           
*                                                                               
LXERRC   PROC  ,                                                                
         TSEG  'Numbered option error.',,B                                      
         ACALL GOCLRNW             NO RETURN                                    
         PEND  ,                                                                
*                                                                               
LXERRB   PROC  ,                                                                
         TSEG  'Delta too big.',,B                                              
         ACALL GOCLRNW             NO RETURN                                    
         PEND  ,                                                                
*                                                                               
NOGGODY  PROC  ,                                                                
         TSEG  'Invalid edit format block.',,B                                  
         ACALL GOCLRNW             NO RETURN                                    
         PEND  ,                                                                
*                                                                               
INVARDS  PROC  ,                                                                
         TSEG  'Invalid variable length block.',,B                              
         ACALL GOCLRNW             NO RETURN                                    
         PEND  ,                                                                
*                                                                               
NOEMSG   PROC  ,                                                                
         TSEG  (R1),(R0),B                                                      
         ACALL GOCLRNW             NO RETURN                                    
         PEND  ,                                                                
*                                                                               
GOCLRNW  PROC  ,                                                                
         VCALL EXTCLOSE                                                         
         TSEG  'Command incomplete.',,B                                         
         VCALL LASTLINE            Show last lineno                             
         B     CVABORT                                                          
         PEND  ,                                                                
         EJECT                                                                  
*                                                                               
*    LXCATE NUMBERED SCANNING STUFF                                             
*                                                                               
LXNMPRT  SCKW  ,LXERRC,NULL                                                     
         SCKW  ,HVLXNMB,LN                                                      
         SCKW  ,LXERRC                                                          
*                                                                               
LXNMPRT2 SCKW  ,LXERRC,NULL                                                     
         SCKW  ,HVLXNMB1,I                                                      
         SCKW  ,LXERRC                                                          
*                                                                               
HVLXNMB  PROC  ,                                                                
         SH    R6,CPSEQLN          Set record size                              
         LR    R4,R0               Set R4 to lineno found                       
         TM    CPSEQFLD,X'80'      Seqfld at end                                
         BO    HVLXNX              Yes done                                     
         LH    R1,CPSEQFLD         Get seqfld position                          
         DECR  R1                  Set for machine position                     
         LA    R1,0(R5,R1)         Set R1 to seqfld start                       
         LR    R14,R1              Set R14 to text                              
         AH    R14,CPSEQLN         After seqfld                                 
         LR    R0,R6               Save R6                                      
         SH    R6,CPSEQFLD         Length - posit of seq fld                    
         BM    *+8                 Br if really is at end                       
         EX    R6,'MVC @R1(0),@R14'                                             
         LR    R6,R0               Reload R6                                    
HVLXNX   LABEL ,                                                                
         PRETURN (R4)                                                           
         PRETURN (R6)                                                           
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
HVLXNMB1 PROC  ,                                                                
         CL    R0,CVMAXLNO         Test max value                               
         IF    H,'ACALL LXERRC'    Error if high                                
         SH    R6,CPSEQLN          Set record size                              
         LR    R4,R0               Set R4 to lineno found                       
         TM    CPSEQFLD,X'80'      Seqfld at end                                
         BO    HVLXNX2             Yes done                                     
         LH    R1,CPSEQFLD         Get seqfld position                          
         DECR  R1                  Set for machine position                     
         LA    R1,0(R5,R1)         Set R1 to seqfld start                       
         LR    R14,R1              Set R14 to text                              
         AH    R14,CPSEQLN         After seqfld                                 
         LR    R0,R6               Save R6                                      
         SH    R6,CPSEQFLD         Length - posit of seq fld                    
         BM    *+8                 Br if really is at end                       
         EX    R6,'MVC @R1(0),@R14'                                             
         LR    R6,R0               Reload R6                                    
HVLXNX2  LABEL ,                                                                
         PRETURN (R4)                                                           
         PRETURN (R6)                                                           
         LA    R15,4                                                            
         PEND  ,                                                                
         QLTORG                                                                 
         TITLE 'DSKWRITE, Disk Interface Routines'                              
*box                                                                            
*                                                                               
*  DSKWRITE -- Routine to write the next line to a disk file.                   
*                                                                               
*  On entry:                                                                    
*    R1,R0 - text,location, length                                              
*    R2 - line number                                                           
*    DSNWA contains information about the file                                  
*                                                                               
*  Only returns if ok.                                                          
*                                                                               
*  Note:                                                                        
*  This routines just repackages the line for DSKWRT2,                          
*  (the original DSKWRITE routine) below.                                       
*                                                                               
*                                                                               
DWWA     RECORD BEGIN                                                           
DWLINE   DS    XL(&PRESSZ+256)                                                  
         END                                                                    
*                                                                               
*                                                                               
DSKWRITE XPROC DWWA                                                             
         SET   DSNFWRITE                                                        
         LR    R15,R0                                                           
         MOVE  R15,DWLINE,@R1                                                   
         LA    R1,DWLINE                                                        
         LR    R15,R2                                                           
         VCALL PRESS                                                            
         LR    R15,R1                                                           
         ACALL DSKWRT2                                                          
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DSKWRITE -- Routine to write the next line to a disk file.                   
*                                                                               
*    On entry:                                                                  
*      R15 - pressed line ptr or zero to just empty buffer.                     
*      DSNWA contains information about the file.                               
*                                                                               
*  Only returns if ok.                                                          
*                                                                               
*  Note:                                                                        
*  This is original DSKWRITE code.  It has the old DSKWRITE                     
*  interface as described above.                                                
*                                                                               
*                                                                               
DSKWRT2  XENTER R2,R8,*+&PRESSZ+32,LOCAL                                        
         IF    (R15,Z),BEGIN       Empty buffer...                              
         IF    (CPLRCL,Z),BEGIN    Edit format...                               
         L     R2,CPNWCT           Buffer len                                   
         IF    (R2,EQ,2),DSKEXIT   Nothing to write, scram                      
         L     R3,CPDRED                                                        
         STH   R2,@R3              Save it in block                             
*                                                                               
         IF    CPFNEWED,BEGIN      NEWEDIT format...                            
         SET   @R3.X'80'           Set extended format                          
         END                                                                    
*                                                                               
         IF    DSNFCODE,'ACALL ENCODE'                                          
         END                                                                    
*                                                                               
         L     R0,CPNWCT                                                        
         ACALL DWRITE                                                           
         BZ    DSKEXIT             Normal completion                            
         BP    WORKXEOV            Eov                                          
         ACALL WRERROR             Write I/O error (no return)                  
         END                                                                    
*                                                                               
*                                                                               
         L     R2,CPLRCL           Get lrecl (&type)                            
         LM    R3,R6,CPNREC        Set all regs                                 
         LTR   R2,R2               Edit?                                        
         BZ    DOEDIT              Yes                                          
         AR    R6,R2               Update char count                            
         LA    R1,@R8+32           Work area addr                               
         TM    CPSEQFLD,X'80'      Is seq # at end?                             
         BO    GUNPRSS             Yes                                          
         AH    R1,CPSEQLN          No, leave room for seq #                     
GUNPRSS  VCALL UNPRESS             Unpress                                      
         IF    (R0,GT,R2),'SET CPFTRUNC'  lines were truncated                  
         IF    (^CPLFLG5.CPFFOPT,OR,CPLFLG5.CPFUNUM),GOONNOW  unn               
         L     R0,CPLCNO           Line no. into r0                             
         VCALL CVEXNO              Convert to external                          
         SETMSG CPDOUB,9                                                        
         TM    CPSEQFLD,X'80'      Is seq # at end?                             
         BO    GUNPR2              Yes                                          
         LH    R14,CPSEQFLD        Get seq fld start                            
         SH    R14,=H'2'           Subtract for ex count                        
         BM    GUNPR1              Beginning if negative                        
         LA    R15,32(,R8)         Point to                                     
         AH    R15,CPSEQLN         Text to move                                 
         EX    R14,'MVC @R8+32(0),@R15'                                         
GUNPR1   LA    R15,32+1(R14,R8)    Point to lineno position                     
         B     GUNPR3                                                           
*                                                                               
GUNPR2   LA    R15,32(R2,R8)                                                    
         SH    R15,CPSEQLN         Point to lineno position                     
GUNPR3   LH    R14,CPSEQLN         Get seqfld length                            
         SR    R0,R14              Adjust external                              
         AR    R1,R0               Pointer for length                           
         DEX   R14,'MVC @R15(0),@R1'                                            
GOONNOW  CR    R6,R4               Buffer full?                                 
         BNH   PUTMOR              No                                           
         CLEAR R0                                                               
         ACALL DWRITE                                                           
         BZ    WRITOK              Write ok                                     
         BP    WORKXEOV            Br if no more space                          
         ACALL WRERROR             Write I/O error (no return)                  
WRITOK   L     R5,CPDRED           Reset buffer addr to start                   
         LR    R6,R2               Reset count                                  
PUTMOR   EX    R3,'MVC @R5(0),@R8+32'                                           
         AR    R5,R2               Update buffer ptr                            
         B     SCRAM                                                            
*-                                                                              
*-       Doing edit format save                                                 
*-                                                                              
DOEDIT   LC    R2,@R15+4           Pick prest count                             
         LA    R6,@R2+5(R6)        Total count for line plus previous           
         IF    CPFNEWED,'LA R6,@R6+10'  Include line prefix len                 
         CR    R6,R4               Too much? - first output buffer              
         BNH   DOSTOW              All ok - stow away                           
         L     R5,CPDRED           External I/O buf addr                        
         L     R6,CPNWCT           Set with count for output rec                
         STH   R6,@R5              Store total byte count                       
         IF    CPFNEWED,BEGIN      NEWEDIT...                                   
         SET   @R5.X'80'           Extended format                              
         END                                                                    
         MVC   @R8+32(&PRESSZ),@R15  Save located line                          
         IF    DSNFCODE,'ACALL ENCODE'                                          
         L     R0,CPNWCT           Use actual record size                       
         ACALL DWRITE                                                           
         BZ    NDSKERH             B if disk I/O ok                             
         BP    WORKXEOV            Br if no more space                          
         ACALL WRERROR             Write I/O error (no return)                  
         B     CVERROR                                                          
*                                                                               
NDSKERH  L     R5,CPDRED                                                        
         LA    R5,@R5+2            Point 2 bytes into buffer                    
         LA    R6,@R2+7            Set count thru first line nxt bufr           
         IF    CPFNEWED,'LA R6,@R6+10'  Include line prefix len                 
         LA    R15,@R8+32          Point at saved line image                    
*                                                                               
DOSTOW   IF    CPFNEWED,BEGIN      NEWEDIT...                                   
         MVC   @R5(10),CPNEDPFX    Move in NEWEDIT line prefix                  
         SET   @R5.X'20'           Set extended line format                     
         LA    R5,@R5+10           Skip over prefix                             
         END                                                                    
         LA    R2,@R2+4            Prest count plus 4 for move                  
         EX    R2,'MVC @R5(0),@R15'                                             
         LA    R5,@R2+1(R5)        Kick pointer                                 
SCRAM    STM   R5,R6,CPNXAD        Store                                        
DSKEXIT  XEXIT R2,R8               Return                                       
*                                                                               
WORKXEOV VCALL EOV                 Return to caller's caller (kludge)           
         DROP  BR                                                               
         EJECT                                                                  
ENCODE   XENTER R2,R8,*,LOCAL                                                   
         L     R5,CPDRED           R5 -> External buffer I/O address            
         L     R6,CPNWCT           R6 holds count for output record             
         L     R4,=F'65539'        R4 holds magic value                         
         L     R1,DSNCODE          R1 holds code                                
         SPACE 1                                                                
SAVLOOP  MR    R0,R4               Multiply by magic value                      
         LR    R3,R1               Move lower half of product                   
         SLDL  R2,8                Shift high order byte into R2                
         IC    R3,@R5              Load character into R3                       
         ALR   R3,R2               Decode character                             
         STC   R3,@R5              Replace character                            
         LA    R5,1(R5)            Get next character                           
         BCT   R6,SAVLOOP          Loop back for all characters                 
         SPACE 1                                                                
         XEXIT R2,R8                                                            
         DROP  BR                                                               
         TITLE 'DSKCLOSE, Disk Interface Routines'                              
*box                                                                            
*                                                                               
*  DSKCLOSE -- Routine to close a Samson file.                                  
*                                                                               
*    On entry:                                                                  
*      DSNWA contains information about the file.                               
*                                                                               
DSKCLOSE XENTER                                                                 
         CLEAR R15                 Assume good return code                      
*                                                                               
         LT    IOWAR,CPIOWAP       IOWA ptr                                     
         IF    NZ,BEGIN            Disk path is open...                         
         IF    DSNFWRITE,BEGIN     If output, force out buffer                  
         CLEAR R15                                                              
         ACALL DSKWRT2                                                          
         CLEAR DSNFWRITE                                                        
         END                                                                    
         ELSEIF (CPCMNM,EQ,'SAV'),'CLEAR R15; ACALL DSKWRT2'                    
         ACALL DCLOSE                                                           
         END                                                                    
         XEXIT                                                                  
         DROP  BR                                                               
         EJECT                                                                  
RDERROR  XENTER R15,R8                                                          
         TSEG  'Data set read error.  Proceeding.',,WR                          
         MVC   CPERRID,=CL8'READERR'                                            
         BNZ   CVABORT                                                          
         SET   CPFERROR                                                         
         XEXIT R15,R8                                                           
         DROP  BR                                                               
         SPACE 2                                                                
WRERROR  BASE                                                                   
         ABORT 'Data set write error.  Command stopped.',,WRITERR               
*                                                                               
         DROP  BR                                                               
         TITLE 'DENQ/DDEQ Routines'                                             
DENQENT  RECORD BEGIN                                                           
DENQID   DS    CL4'DENQ'           Self identification                          
DENQNEXT DS    A                   Ptr to next DENQENT (or zero)                
DENQFLAG FLAG                                                                   
         FLAG  DENQFTMP            - Temporary ENQ                              
DENQLEN  DS    H                   Dsname length                                
DENQNAME DS    CL44                Dsname                                       
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  DENQ -- Routine to ENQUEUE on the data set name in the                       
*    DSNWA.                                                                     
*                                                                               
*    On entry:                                                                  
*      R15 - 0 = permanent ENQ (only DEQ automatically at logoff)               
*            1 = temporary ENQ (DEQ automatically at end of cmd)                
*      DSNWA - contains dsname (and DSN flags)                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK                                                                   
*      4 - NOT YOURS                                                            
*      8 - IN USE                                                               
*                                                                               
DENQ     XPROC                                                                  
         LR    R3,R15              Save option flag                             
         L     R1,=A(MODLENQ)      Model enq list                               
         MVC   ENQXPARM(L'MODLENQ),@R1  Move in model enq list                  
*                                                                               
         LA    R15,4               Assume "NOT YOURS" return code               
         IF    DSNWAF1.DSNFMYDS,BEGIN  User owns this file...                   
         LA    R1,DSNWADSN                                                      
         ST    R1,ENQXDSN          Addr of "rname"                              
         MVC   ENQXLEN,DSNWANL+1   Rnamel                                       
         ENQ   RET=USE,TCB=CVITCBP,MF=(E,ENQXPARM)                              
*                                                                               
         IF    (R15,NZ),'LA R15,8'  Already in use                              
         ELSE  BEGIN               It worked...                                 
         LA    R0,L'DENQENT                                                     
         VCALL GETCORE             Get memory for entry                         
         LR    R2,R1                                                            
         WITH  (DENQENT,R2)                                                     
         CLEAR DENQENT                                                          
         MVC   DENQID,=C'DENQ'                                                  
         MVC   DENQNEXT,CPDENQP    Link up list                                 
         MVC   DENQLEN,DSNWANL                                                  
         MVC   DENQNAME,DSNWADSN   Save dsname                                  
         IF    (R3,NZ),'SET DENQFTMP'  Temporary ENQ                            
         ST    R2,CPDENQP          Save queue head ptr                          
         CLEAR R15                 Set good rc                                  
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DDEQ -- Routine to DEQUEUE the data set name in the                          
*    DSNWA.                                                                     
*                                                                               
*    On entry:                                                                  
*      DSNWA - contains dsname (and DSN flags)                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK                                                                   
*      4 - NOT YOURS                                                            
*      8 - NOT ENQUEUED                                                         
*                                                                               
DDEQ     XPROC                                                                  
*                                                                               
         LA    R15,8               Assume "NOT ENQUEUED"                        
*                                                                               
         LA    R5,CPDENQP-(DENQNEXT-DENQENT)  Dummy queue head                  
         LOOP  BEGIN                                                            
         WITH  (DENQENT,R5)                                                     
         LR    R4,R5                                                            
         WHILE ('LT R5,DENQNEXT',NZ)                                            
         FAIL  (DENQENT,NE,'DENQ'),DDEQERR1                                     
*                                                                               
         IF    (DENQNAME,EQ,DSNWADSN),BEGIN  Dequeue this dsname...             
         L     R1,=A(MODLENQ)                                                   
         MVC   ENQXPARM(L'MODLENQ),@R1  Model enq list                          
         LA    R1,DENQNAME                                                      
         ST    R1,ENQXDSN          Addr of "rname"                              
         MVC   ENQXLEN,DENQLEN+1   Rnamel                                       
         DEQ   RET=HAVE,TCB=CVITCBP,MF=(E,ENQXPARM)                             
*                                                                               
         MVC   DENQNEXT-DENQENT(4,R4),DENQNEXT  Unlink our entry                
         MVC   DENQID,=C'XENQ'     Zot id                                       
*                                                                               
         LA    R1,DENQENT                                                       
         VCALL FREECORE            Release DENQ entry                           
         CLEAR R15                 Good rc                                      
         B     DDEQEXIT                                                         
         END                                                                    
         END                                                                    
*                                                                               
DDEQEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DENQTEST -- Routine to test to see if we are already enqueued                
*    on the dsname specified in the DSNWA.                                      
*                                                                               
*    On entry:                                                                  
*      DSNWA - contains dsname (and DSN flags)                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK (WE ARE ENQUEUED)                                                 
*      4 - NOT YOURS                                                            
*      8 - NOT ENQUEUED                                                         
*                                                                               
DENQTEST XPROC                                                                  
*                                                                               
         LA    R15,8               Assume "NOT ENQUEUED"                        
*                                                                               
         LA    R5,CPDENQP-(DENQNEXT-DENQENT)  Dummy queue head                  
         LOOP  BEGIN                                                            
         WITH  (DENQENT,R5)                                                     
         LR    R4,R5                                                            
         WHILE ('LT R5,DENQNEXT',NZ)                                            
         FAIL  (DENQENT,NE,'DENQ'),DENQTEST                                     
*                                                                               
         IF    (DENQNAME,EQ,DSNWADSN),BEGIN  Dequeue this dsname...             
         CLEAR R15                 Good rc                                      
         B     DTSTEXIT                                                         
         END                                                                    
         END                                                                    
*                                                                               
DTSTEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DENQFREE -- Routine to dequeue on all the user's enqueued                    
*    dsnames.                                                                   
*                                                                               
*    On entry:                                                                  
*      R15 - 0 = dequeue ALL dsnames (for logoff)                               
*            1 = dequeue only temporary enq's (for end of command)              
*                                                                               
DENQFREE XPROC                                                                  
         LR    R3,R15              Save option flag                             
*                                                                               
DFRELOOP LA    R5,CPDENQP-(DENQNEXT-DENQENT)  Dummy queue head                  
         LOOP  BEGIN                                                            
         WITH  (DENQENT,R5)                                                     
         LR    R4,R5                                                            
         WHILE ('LT R5,DENQNEXT',NZ)                                            
         FAIL  (DENQENT,NE,'DENQ'),DENQFREE                                     
*                                                                               
         IF    ((R3,Z),OR,DENQFTMP),BEGIN  Dequeue this entry...                
         L     R1,=A(MODLENQ)                                                   
         MVC   ENQXPARM(L'MODLENQ),@R1  Model enq list                          
         LA    R1,DENQNAME                                                      
         ST    R1,ENQXDSN          Addr of "rname"                              
         MVC   ENQXLEN,DENQLEN+1   Rnamel                                       
         DEQ   RET=HAVE,TCB=CVITCBP,MF=(E,ENQXPARM)                             
*                                                                               
         MVC   DENQNEXT-DENQENT(4,R4),DENQNEXT  Unlink our entry                
         MVC   DENQID,=C'FENQ'     Zot id                                       
*                                                                               
         LA    R1,DENQENT                                                       
         VCALL FREECORE            Release DENQ entry                           
         B     DFRELOOP                                                         
         END                                                                    
         END                                                                    
*                                                                               
DFREEXIT PEND                                                                   
*                                                                               
*                                                                               
         DC    3A(0)               Enq param prefix                             
ENQXPARM ENQ   (0,0,E,0,SYSTEM),RET=USE,MF=L                                    
ENQXLEN  EQU   ENQXPARM+1,1,C'X'   Dsn len                                      
ENQXDSN  EQU   ENQXPARM+8,4,C'F'   Dsn ptr                                      
*                                                                               
         QLTORG                                                                 
         TITLE 'Disk Open (DOPEN) Routine'                                      
*box                                                                            
*                                                                               
*  DOPEN -- Disk open routine.                                                  
*                                                                               
DOPEN    XENTER R15,R8,ENTL                                                     
         FAIL  (CPIOWAP,NZ),DOPENX,'DOPEN logic error.'                         
*-                                                                              
*-     Until all the disk I/O functions go through the EXT interface            
*-       we still need to set CPRFEXT to true here.                             
*-                                                                              
         SET   CPRFEXT             External data set is open                    
         MVI   DSNDTYPE,DSNDDISK   Make sure it's a disk                        
*                                                                               
REDO     GETRSC IOW,WAIT=NO        Try for IOWA immediately                     
         IF    NZ,BEGIN            If we didn't get one then                    
         IF    (R1,EQ,R1),BEGIN    *** Patchable ***                            
         PFREE PAR                                                              
         PFREE PBR                                                              
         END                                                                    
*                                                                               
         IF    (^CPSSFPS,AND,^CPFEXNOB,AND,^CPFRCVY),BEGIN                      
         IF    ^CPFDUMP,BEGIN      If not to active                             
         TSEG  'Queued.',,WR                                                    
         END   ELSE,'CLEAR R0'     Typed response to active                     
         IF    Z,'GETRSC IOW'      If write ok then get iowa                    
         IF    NZ,BEGIN                                                         
         LA    R15,ABRTCODE                                                     
         L     BR,=A(DOPBASE)                                                   
         B     RET-DOPBASE(,BR)                                                 
         END                                                                    
         END   ELSE,BEGIN          Do NOATTN getrsc for recovery                
         IF    CPFEXNOB,BEGIN                                                   
         CLEAR R3                  Clear quiet flag                             
         IF    CPFQUIET,'CLEAR CPFQUIET; LA R3,1'  Save QUIET status            
         TSEG  'Please wait ...',,WR  Special msg for "EXEC NOBREAK"            
         IF    (R3,NZ),'SET CPFQUIET'  Reset QUIET if needed                    
         END                                                                    
         GETRSC IOW,ATTN=NO                                                     
         END                                                                    
         END                                                                    
*                                                                               
         LR    IOWAR,R1                                                         
         ST    IOWAR,CPIOWAP       Save IOWA addr                               
         USING IOWA                                                             
         B     DOPRES                                                           
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
DOPRES   BASE  ,                   Get new addressability                       
DOPBASE  LABEL                                                                  
*                                                                               
HAVIOWA  LABEL ,                                                                
         VCALL ACEESET             Set user's ACEE pointer for RACF             
         LM    R15,R1,@R8+4        Restore entry regs                           
         ACALL OPENINIT            Init misc stuff                              
         IF    (F2,EQ,DSNFSIMP),'CLEAR R15; B RET'  simple dopen                
*                                                                               
         ACALL LOGDS               Log data set access                          
         EJECT                                                                  
*-                                                                              
*-       Main open processing.                                                  
*-                                                                              
         ST    R0,RECSIZE          Save parms                                   
         ST    R15,SPACE                                                        
         L     R15,=A(MODLENQ)                                                  
         MVC   ENQDSN(L'MODLENQ),@R15  set up model enq list                    
         LA    R15,DSNAME                                                       
         ST3   R15,ENQDSN+9        Save rname ptr                               
         TM    F2,DSNFWRT+DSNFSCR+DSNFALLO+DSNFVALO  test function              
         BNZ   HAVEENQ             Br if save or scr                            
         MVI   ENQDSN+2,ENQSHARE   Otherwise, shared is ok                      
*                                                                               
HAVEENQ  IF    CPFNOCAT,TESTCAT    Ignore the catalog                           
         IF    F4.DSNFFAST,NOCATSCH  Brance if FASTLIB                          
         LA    R15,8               Pre-set bad return code                      
         IF    (DSNWANL,Z),NOTLOC  Null dsname, skip locate                     
         WAITOFF X                                                              
         LA    R1,USCATL           Set to use                                   
         DOWYLCVL DSNAME           CVOL lookup for standard names               
         LOCATE (1)                Go get catalog entry                         
         WAITON X                                                               
*                                                                               
         IF    CPFGEN,BEGIN        Generation data sets ...                     
         MVC   DSNWADSN,DSNAME     Move in real name                            
         CLEAR DSNWANL             Clear dsn length                             
         LA    R1,DSNWADSN         R1 -> Start of real dsn                      
         LR    R3,R1               Save in R3 also                              
         WHILE (@R1,NE,' '),'INCR R1'      Find the end                         
         SR    R1,R3               Compute new dsn length                       
         STH   R1,DSNWANL          Save new dsn length                          
         IF    (CATVOL,Z),'LA R15,8' Fake out a "not found"                     
         END                                                                    
*                                                                               
NOTLOC   ST    R15,RETCOD          Save return code for show cat                
         IF    (R15,Z),HAVECAT     Data set is cataloged                        
         ST    R15,ERROR           Store error                                  
         CLEAR DSNCATV             Not found in the catalog                     
*                                                                               
         IF    F2.DSNFCAT,BEGIN    Catalog commands...                          
         IF    ^F2.DSNFSHOW,TESTCAT  not SHOW CATALOG                           
         CLI   ERROR+3,4           Cvol not mounted?                            
         BE    CILLVOL             Yes                                          
         CLI   ERROR+3,12          Index not dsname?                            
         BE    HAVECAT             Yes                                          
         CLI   ERROR+3,20                                                       
         BNH   ILLCAT                                                           
XCATER   MVI   ERROR+1,C'3'        Error id                                     
         ACALL CATER                                                            
         B     ERR                                                              
         END                                                                    
*                                                                               
         IF    (R15,EQ,8),TESTCAT  not found, that's ok                         
         IF    F2.DSNFSHOW+DSNFSCR+DSNFPROT,TESTCAT  don't require cat          
         IF    F4.DSNFRENA,TESTCAT Cat failure OK on RENAME                     
         IF    (F2,Z),TESTCAT      USE, COPY FROM, etc.                         
*                                                                               
         ST    R15,RECSIZE         Pass LOCATE RC to caller (in R0)             
         LA    R15,RTNCATDV        Expecting problems with catalog              
         B     ERR                                                              
*                                                                               
HAVECAT  IF    F2.DSNFSHOW*DSNFCAT,CALLVTOC                                     
         MVC   DSNCATV,CATVOL      Save cataloged volume name                   
         IF    (DSNON6,NZ),BEGIN   Volume specified...                          
         IF    (DSNON6,EQ,DSNCATV),TESTCAT  no conflict, fine                   
         IF    F2.DSNFSHOW+DSNFSCR+DSNFPROT,TESTCAT  don't require cat          
         IF    F4.DSNFRENA,TESTCAT Match not req for RENAME                     
         IF    (F2,Z),TESTCAT      USE, COPY FROM, etc.                         
         IF    CPFRECAT,TESTCAT    recataloging, so it's fine                   
         ST    R15,RECSIZE         Zero RC means vol conflict                   
         LA    R15,RTNCATDV        Volume is different from catalog             
         B     ERR                                                              
         END                                                                    
         MVC   DSNON,CVBLANKS                                                   
         MVC   DSNON6,CATVOL                                                    
*                                                                               
TESTCAT  ACALL GETVOL              Pick a volume, if neccessary                 
         BNZ   ERR                 Trouble                                      
NOCATSCH MVC   DSVID,DSNON6        Move in VOLSER                               
*                                                                               
         IF    ((F2,EQ,DSNFCAT),AND,CPFUNCAT),'ACALL DCATLG; B ERR'             
*                                                                               
         ACALL DOUCBSR             Search for volume                            
         IF    F2.DSNFCAT,BEGIN    CAT/RECAT/UNCAT ...                          
         IF    (R15,NZ),BEGIN      Volume not found ...                         
         IF    ^F5.DSNFCUNI,'LA R15,64; B ERR'                                  
         ELSE  'B CALLCAT2'        Catalog on unknown vol                       
         END                                                                    
         SET   F5.DSNFCUIG         INDICATE UNIT WAS IGNORED                    
         B     CALLCAT             Catalog on known vol                         
         END                                                                    
*                                                                               
         IF    (R15,NZ),ERR        Br if bad volume                             
*                                                                               
         MVC   DCB+DCBDDNAM-IHADCB(8),DSDD  set dcb ddname                      
         L     R3,VOLENTRY                                                      
         WITH  (VOLDSECT,R3),BEGIN                                              
         IF    (^F2.DSNFWRT*DSNFSCR*DSNFALLO,AND,                      C        
               ^F4.DSNFRENA),SYSENQ   Skip if not write req                     
         CLC   CVSTYPE,VTYPE       Is volume valid for save                     
         BE    SYSENQ              Branch yes                                   
         CLC   CVTTYPE,VTYPE       Is it temporary volume type                  
         BE    SYSENQ              Br if so                                     
         IF    DSNFMAIL,SYSENQ     Let the mail go thru!                        
         IF    CPSFSPR,SYSENQ      Sys privs gets it                            
         IF    (CPSGRP,NE,'G'),ILLVOLND  not a good guy.. sorry                 
*                                                                               
SYSENQ   TM    VFLG2,VF2DALLO      De allocate?                                 
         BZ    CKALLO              Br if not                                    
         ACALL VDALLO              Go deallocate                                
         END                                                                    
         LR    R3,R15              Save return code                             
         B     DEQERRV             B  to return error                           
*                                                                               
CKALLO   ACALL VALLOCAT            Go allocate/get devtype                      
         LR    R3,R15              Save return code                             
         BNZ   DEQERRV             Br if error                                  
         CLI   F2,DSNFVALO         Allocate call?                               
         BE    DEQERRV             Br if so - all done                          
*                                                                               
         CLI   F2,DSNFSHOW         Is it show dsnames?                          
         BNE   SYSENQ2             Br if not                                    
CALLVTOC L     RAR,=A(DVTOC)       Show dsnames routine                         
         LR    R13,R8              Restore regs                                 
         LM    R15,R8,@R13+4                                                    
         BR    RAR                 Go to show dsnames routine                   
         SPACE 2                                                                
SYSENQ2  ACALL DENQTEST            Are we already enqueued on this?             
         IF    Z,'SET F5.DSNFNONQ'  Yes, don't enqueue again then               
*                                                                               
         LH    R3,DSNWANL          Get length of dsname                         
         WAITOFF X                                                              
*                                                                               
         ACALL OPENENQ             Call ENQ routine                             
         IF    (R15,NZ),LOCKOUT    Dataset in use                               
*                                                                               
         RDJFCB (DCB),MF=(E,OPENLIST)                                           
         IF    F4.DSNFFAST,'CLEAR R15; B OBTRET'                                
DOOBTAIN OBTAIN DSCB                                                            
OBTRET   STC   R15,SCRRET          Save return code for later                   
         LTR   R15,R15             Bad obtain?                                  
         BNZ   OPTCDNE             Br if so                                     
         CLI   DS1OPTCD,X'F4'      Funny options requested?                     
         BNE   OPTCDNE             Br if not                                    
         MVI   DCB+DCBOPTCD-IHADCB,X'20'  set chained sched                     
OPTCDNE  WAITON X                                                               
         ACALL CLRJFCB             Go clean up the jfcb                         
         IF    F2.DSNFALLO,DOPACC                                               
         IF    (F2.DSNFWRT+DSNFSCR,NM),'BAL R2,MUSTXST'                         
         IF    F4.DSNFRENA,'BAL R2,MUSTXST'                                     
         IF    F2.DSNFPROT,NOBLDL  Done for set/sho prot                        
DOPACC   VCALL ACCESS              Go check access (in PROT)                    
         BNZ   DEQERR              Branch if no access                          
*                                                                               
* now calculate current date and set ccredt in case save or                     
*        scratch command                                                        
*                                                                               
*  "trkadds1" has the "cchhr" of the fmt1 dscb (from obtain).                   
         LH    R2,DVTNUMT          No. of tracks/cyl                            
         MH    R2,TRKADDS1         (tracks/cyl)*cc                              
         AH    R2,TRKADDS1+2       Add in "hh"                                  
         SLL   R2,8                Make room for record no                      
         LC    R0,TRKADDS1+4       Get "r"                                      
         ALR   R2,R0               Make rel track addr                          
*  (note: ttr is relative to disk origin, not vtoc orgin.)                      
         ST3   R2,JFCBDSCB         Save ttr for open  (tnx, jsl!)               
*                                                                               
         LCALL TMSET               Set ccredt to vtoc form date                 
*                                                                               
         IF    F4.DSNFRENA,DOREN                                                
         TM    F2,DSNFWRT+DSNFSCR  Test function                                
         BM    CREATE              Br if save                                   
         IF    F2.DSNFALLO,CREATE                                               
         TM    F2,DSNFSCR          Test scratch or use                          
         BO    DELT                Br if scratch                                
         B     OLD                                                              
*                                                                               
READKW   TM    F1,DSNFSTD          Is it a standard dsname?                     
         BZR   R2                  Br if not                                    
         IF    ('CLC KWRUSER(5),DSNAME+DSNXU',NE),BEGIN                         
         MVC   KWRUSER,DSNAME+DSNXU  charged user                               
         MVC   KWRGRP,DSNAME+DSNXG  Charged group                               
         XC    KWRSPUSD(L'KWRSPUSD+L'KWRSPMAX),KWRSPUSD                         
READKW2  KREAD KWR                 Go read it                                   
         END                                                                    
         TM    KWRIFL,KWRIFVAL     Was record found?                            
         BR    R2                  Return                                       
         EJECT                                                                  
* create data set                                                               
*                                                                               
CREATE   CLC   DSTYPE,CVSTYPE      Controlled volume?                           
         BNE   CREATEOK            No                                           
         MVC   KWRUSER,CPSUSER     Move in user                                 
         MVC   KWRGRP,CPSGRP       And group                                    
         BAL   R2,READKW2          Read record                                  
CREATEOK LABEL                                                                  
         LH    R0,=AL2(&BUFRMAX)   Maximum block size                           
         IF    ^CPFNEWED,'LH R0,=AL2(6447)'  Old maximum size                   
         LA    R1,DVTAREA          Point to device table                        
         ACALL CALCTRK             Calculate best block size                    
         ST    R0,DEVBLOCK         Use best block size                          
         CLI   SCRRET,8            Was dscb not found?                          
         BE    CREATE2             Br if yes - not found                        
         CLI   SCRRET,0            Was dscb found?                              
         BNE   MUSTXST             Br if error                                  
***  dscb was found                                                             
         IF    F2.DSNFALLO,EXISTS  can't replace for allocate                   
         TM    DS1DSORG,DSORGPO    Was old data set a pds?                      
         BZ    CREXI1              Br if no                                     
**  existing data set is a pds                                                  
         BAL   R2,DSISPDS          Go check for member                          
         OI    F2,DSNFPDS          Set this is pds operation                    
CREXI1   L     R0,RECSIZE          Get orig record size flag                    
         LTR   R0,R0               Was a format given                           
         BM    CREXI2              No, go decide from dscb                      
         BE    CREXEDT             Yes, it was edit                             
* lrecl was given                                                               
CREXLR   MVI   RRECFM,FIXBLOCK     Set fixed blocked recfm                      
         L     R15,CPNREC          Get records/block count                      
         LTR   R15,R15             Was it given                                 
         BNZ   CREXLR4             Yes, go use it                               
         CH    R0,DS1LRECL         Is lrecl same as specified                   
         BNE   CREXLR2             No, use default blocksize                    
         CLC   DS1RECFM,RRECFM     Do recfms agree                              
         BNE   CREXLR2             No, use default blocksize                    
CREXLR1  LH    R15,DS1BLKL         Get blocksize from dscb                      
         LTR   R15,R15             Is it positive                               
         BNP   CREXLR2             No, use default blocksize                    
         CH    R15,=AL2(&BUFRMAX)  Is it within allowed size?                   
         BNH   CREXLR3             Yes, use it                                  
CREXLR2  L     R15,DEVBLOCK        Get default blocksize                        
CREXLR3  CLEAR R14                 Set for divide                               
         DR    R14,R0              Get records/block                            
         ST    R15,CPNREC          Save value                                   
CREXLR4  MR    R14,R0              Recalculate actual blocksize                 
         ST    R0,CPLRCL           Make sure cplrcl set                         
         LCALL CHKSQFLD            Check seqfld bounds                          
         B     CREXTST             Go test result                               
*                                                                               
CREXEDT  TM    DS1RECFM,UNDEFIND   Is data set edit format                      
         BNO   CREXED              Br no to force edit format                   
         B     CREXI20             Go use existing blksize                      
*                                                                               
CREXED   L     R15,DEVBLOCK        Use default blksize for edit                 
CREXED1  LR    R0,R15              Set r0 to same size                          
         XC    CPLRCL,CPLRCL       Make sure edit is saved                      
         B     CREXTST             Now go test result                           
*                                                                               
CREXI2   TM    DS1RECFM,UNDEFIND   Is data set edit format                      
         BNO   CREXI3              Br no to check for fixed                     
         TM    CPLFLG5,CPFFOPT     Was a numbered option given                  
         BO    CREXI22             Yes, make data set fixed                     
CREXI20  LH    R15,DS1BLKL         Get existing blocksize                       
         LTR   R15,R15             Is it positive                               
         BNP   CREXED              No, use default                              
         CH    R15,=AL2(&BUFRMAX)  Is it within allowed size?                   
         BNH   CREXED1             Yes, use this blocksize                      
         B     CREXED              No, use default blocksize                    
*                                                                               
CREXI21  TM    CPLFLG5,CPFFOPT     Was a number option given                    
         BNO   CREXED              No, make data set edit                       
CREXI22  LA    R0,80               Use lrecl of 80                              
         B     CREXLR              Go make it fixed                             
*                                                                               
CREXI3   TM    DS1RECFM,RECFMF     Is it fixed recfm                            
         BNO   CREXI21             No, make edit unless num opt                 
         MVI   RRECFM,FIXBLOCK     Set fixed blocked recfm                      
         LH    R0,DS1LRECL         Get lrecl value                              
         LTR   R0,R0               Is it positive                               
         BNP   CREXI22             No, use 80                                   
         CH    R0,=Y(&LINESZ)      Is it within bounds?                         
         BNH   CREXLR1             Yes, use it                                  
         B     CREXI22             No, use 80                                   
*                                                                               
CREXTST  ST    R15,RECSIZE         Save blocksize                               
         ST    R0,LRECSIZE         Save lrecl                                   
         IF    (RRECFM.RECFMF,AND,^RRECFM.UNDEFIND),BEGIN  recfm=f...           
         SET   RRECFM.BLOCKED      Set blocked                                  
         IF    (R0,EQ,R15),'CLEAR RRECFM.BLOCKED'  set recfm=f                  
         IF    (DS1RECFM.RECFMF,AND,^DS1RECFM.UNDEFIND),BEGIN  ...              
         IF    ^DS1RECFM.BLOCKED,EXIT  original is not blocked, scram           
         SET   RRECFM.BLOCKED      If orig is blocked, keep it as "fb"          
         END                                                                    
         END                                                                    
         TM    F3,DSNFCHT          Is it ok to change type                      
         BO    CREXTST1            Yes, go on                                   
         CLI   DS1RECFM,0          Does library have valid recfm                
         BE    CREXTST1            Br if not to set valid                       
         CLC   DS1RECFM,RRECFM     Do recfms agree                              
         BNE   TYPECHNG            No, go ask user                              
         CH    R15,DS1BLKL         Does blksize agree                           
         BNE   TYPECHNG            No, go ask user                              
         IF    (DS1RECFM,EQ,UNDEFIND),CREXTST1  don't chk recfm if u            
         CH    R0,DS1LRECL         Does lrecl agree                             
         BNE   TYPECHNG            No, go ask user                              
CREXTST1 STH   R15,DCB+DCBBLKSI-IHADCB  put blksize in dcb                      
         STH   R0,DCB+DCBLRECL-IHADCB  put lrecl in dcb                         
         TM    F2,DSNFPDS          Is this pds processing                       
         BNO   CRSEQ               No, continue for sequential                  
         B     OLDSTUP             Now go open pds data set                     
*                                                                               
**  existing data set is not a pds                                              
CRSEQ    CLC   DSTYPE,CVSTYPE      Is it controlled vol save                    
         BNE   CRSEQTMP            Br no, no space acctng                       
         BAL   R2,READKW           Read in password record                      
         BAL   R2,CHKSPOK          Test space avail for user                    
CRSEQTMP TM    CPLFLG2,CPFSCRTC    Can we scratch it?                           
         BZ    EXISTS              Br if no                                     
         TM    MEMBER,X'BF'        Was a member specified?                      
         BNZ   NOTPDS              yes, can't replace                           
         L     R15,RECSIZE         Set R15 to actual blksize                    
         L     R14,SPACE           Get address of space routine                 
         BASR  R14,R14             Go calc size of save                         
         XC    MEMBER+4(2),MEMBER+4  make space adj. zero                       
*                                                                               
*  Check to see if data set can be reused instead of scratching                 
*        and re-allocating.                                                     
*                                                                               
*DONT*   CLI   DS1NOEPV,1          Is it a single extent ds                     
*DONT*   BNE   CRSEQSCR            Br no, do scratch                            
         CLI   DS1KEYL,0           Does ds have key                             
         BNE   CRSEQSCR            Br yes, do scratch                           
         XC    SPTRK,SPTRK         Zero for size calc                           
         ACALL DVTOC2              Go calc size of ds                           
         L     R0,RECSIZE          Get blksize for this save                    
         LA    R1,DVTAREA          Point to device table                        
         ACALL CALCTRK             Go calculate blocks/trk                      
         LH    R15,DSAVBLK         Get block count for this save                
         SR    R14,R14             Set for divide                               
         DR    R14,R1              Divide by blocks/trk                         
         LTR   R14,R14             Is there a remainder                         
         BZ    *+8                 Br if no                                     
         LA    R15,@R15+1          Yes, up trk count by 1                       
         CH    R15,SPTRK           Is new ds same size                          
         BNE   CRSEQSCR            Br no, do scratch                            
         CLC   DS1EXPDT,CCREDT+1   Is old ds date protected                     
         BH    CRSEQSCR            Br yes, do scratch                           
         MVC   JFCBDSNM,DSNAME     Move dsname into jfcb                        
         LCR   R15,R15             Set neg space as if scratch                  
         STH   R15,MEMBER+4        And put in space adj. field                  
         B     OK1                 Now go set exit                              
*                                                                               
CRSEQSCR XC    DS1EXPDT,DS1EXPDT   Force zero expiration date                   
         BAL   R2,DELTALL          Go scratch it                                
         B     CREATE3                                                          
         SPACE 2                                                                
**  dscb not found - allocate space                                             
CREATE2  IF    F2.DSNFALLO,CREA1                                                
         CLI   MEMBER,C' '         Was a member specified                       
         BE    CREATE2M            Branch no                                    
         CLI   MEMBER,0            Was it explicit null member                  
         BNE   NOSUCH              br no, don't allocate seq ds                 
CREATE2M TM    F1,DSNFWLIB         Is it a wylbur library?                      
         BO    NOSUCH              Yes - pds not found on vol                   
CREA1    L     R0,RECSIZE          Get recsize                                  
         LTR   R0,R0               Did user specify format                      
         BM    CREDITST            No, make it edit if no num                   
         BZ    CREATE2B            Make edit if edit spec                       
CRELREC  L     R15,CPNREC          Create fixed -- get nrec                     
         LTR   R15,R15             Was it given                                 
         BP    CRELREC1            Yes, use it                                  
         L     R15,DEVBLOCK        No, get default                              
         SR    RAR,RAR                                                          
         DR    RAR,R0              Get records/block                            
         ST    R15,CPNREC          Set nrec                                     
CRELREC1 MR    R14,R0              Calculate actual blksize                     
         MVI   RRECFM,FIXBLOCK     Set fixed-blocked recfm                      
         IF    (R0,EQ,R15),'MVI RRECFM,RECFMF'  set fixed if lrecl=blk          
         ST    R0,CPLRCL           Make sure lrecl set                          
         LCALL CHKSQFLD            Check seqfld bounds                          
         B     CREATE2A            Go on                                        
*                                                                               
CREDITST TM    CPLFLG5,CPFFOPT     Was a numbered option given                  
         LA    R0,80               Set r0 for card                              
         BO    CRELREC             Yes, go make fixed                           
         IF    F2.DSNFALLO,CREATEJ  allo of pds                                 
         CLEAR R0                  No, set for edit                             
         ST    R0,CPLRCL           Set cplrcl for edit                          
CREATE2B L     R15,DEVBLOCK        Get blocksize for edit                       
         LR    R0,R15              Also use for lrecl                           
CREATE2A ST    R0,LRECSIZE         Save lrecl                                   
         ST    R15,RECSIZE         Save blocksize                               
CREATEJ  CLC   DSTYPE,CVSTYPE      Is it controlled vol save                    
         BNE   CREATTMP            Br no, no space acctng                       
         BAL   R2,READKW           Read in password record                      
         BAL   R2,CHKSPOK          Test space avail for user                    
CREATTMP XC    MEMBER+4(2),MEMBER+4  make space adj. zero                       
         NI    CPLFLG2,255-CPFSCRTC  indicate scratch not done                  
*                                                                               
         IF    F2.DSNFALLO,BEGIN   Allocate (only) request...                   
         MVI   JFCDSORG,DSORGPO    Pds                                          
         MVI   JFCBCTRI,JFCBTRK    Allocate by track                            
         LTH   R15,DSNNTRK         No. of tracks to allocate                    
         IF    (R15,NEG),BEGIN     Pick a default...                            
         LA    R15,10              Assume 10 tracks                             
         IF    (DSNNBLK,Z),'LA R15,1'  1 track if sequential                    
         STH   R15,DSNNTRK         Save no. of tracks                           
         END                                                                    
         ST3   R15,JFCBPQTY        Primary                                      
         LA    R15,@R15+1                                                       
         SRL   R15,1                                                            
         ST3   R15,JFCBSQTY        Secondary (1/2 primary)                      
         LTH   R0,DSNNBLK          No. of dir blocks wanted                     
         IF    Z,'MVI JFCDSORG,DSORGPS'  zero means seq data set                
         IF    (R0,NEG),BEGIN      Figure out default...                        
         L3    R0,JFCBPQTY         No. of tracks                                
         FLOOR R0,32               At least 32 dir blocks                       
         CEIL  R0,320              Be reasonable                                
         END                                                                    
         CLEAR JFCRECFM,JFCLRECL,JFCBLKSI   zot ds type                         
         ST3   R0,JFCBDQTY         No. of dirblks                               
         LT    R0,RECSIZE          Format explicit?                             
         BM    CREATEAJ            No, keep as undefined                        
         B     CREATEA             Join common                                  
         END                                                                    
*                                                                               
         L     R15,RECSIZE         Set r15 to actual blksize                    
         L     RAR,SPACE           Get address of space routine                 
         BASR  RAR,RAR             Go calc size of save                         
CREATE3  LH    R15,DSAVBLK         Get count calc by space rout                 
         ST3   R15,JFCBPQTY        Set primary quantity                         
         LA    R15,@R15+1                                                       
         SRL   R15,1               Secondary is 1/2 primary                     
         ST3   R15,JFCBSQTY        Set secondary quantity                       
         SET   JFCBIND1.JFCRLSE    Release any extra space                      
         MVI   JFCDSORG,DSORGPS    Move in ps dsorg                             
         MVI   JFCBCTRI,JFCBAVR    Allocate by average block                    
         MVC   JFCBDRLH,RECSIZE+1  Move in avg block size                       
*                                                                               
CREATEA  MVC   JFCRECFM,RRECFM     Move in recfm                                
         MVC   JFCLRECL,LRECSIZE+2 Move in lrecl                                
         MVC   JFCBLKSI,RECSIZE+2  Move in blocksize                            
CREATEAJ MVC   JFCBDSNM,DSNAME     Move in dsname                               
         MVC   JFCBCRDT,CCREDT+1   Move in creation date                        
         CLEAR JFCBXPDT            No expiration                                
         WAITOFF X,ABEND=ALLOCABE                                               
***  allocate svc linkage                                                       
         LA    R0,JFCB             Point to jfcb                                
         LA    R1,UCB              Point to ucb                                 
         SVC   32                  Allocate data set                            
         WAITON X                                                               
         CLEAR DS1EXPDT            Zot "old" expiration date                    
*                                                                               
         IF    (R15,NE,R15),BEGIN  Never fall thru--label br...                 
ALLOCABE LA    R15,254             0xfe error code (abend)                      
         END                                                                    
*                                                                               
         IF    (R15,Z),OK1         No errors, good                              
         ST    R15,ERROR           Save for cater                               
         MVI   ERROR+1,C'1'        Put in code                                  
         CLI   ERROR+3,4           Analyze error                                
         BE    EXISTS              Sorry                                        
         CLI   ERROR+3,8           Is there room                                
         BE    NOROOM              No                                           
         CLI   ERROR+3,X'14'       Is there room                                
         BE    NOROOM              No                                           
         ACALL CATER                                                            
         B     DEQERR                                                           
OK1      TM    KWRIFL,KWRIFVAL     Is there a password record                   
         BZ    OLDOPEN             no, don't intercept for space                
         L     R15,=A(DCBEXIT)     ADDR OF DCB EXIT ROUTINE                     
         ST    R15,EXLST           Store it in exit list                        
         MVI   EXLST,X'05'         With the appropriate code                    
         B     OLDOPEN             Finish processing like old ds                
*                                                                               
* calculate date in form needed by data set label                               
TMSET    TIME                                                                   
         CLEAR R0                                                               
         ST    R0,CCREDT           Setup for cvb                                
         SLDL  R0,16               Year to r0                                   
         SRL   R1,16               Day back                                     
         ST    R1,CCREDT+4         Store day                                    
         SLL   R1,28               Sign to high end                             
         SLDL  R0,4                Sign on the year too                         
         CVB   R1,CCREDT           Day in binary                                
         ST    R0,CCREDT+4         Store year for cvb                           
         CVB   R0,CCREDT           Year to binary                               
         STH   R1,CCREDT+2         Store appropriately                          
         STH   R0,CCREDT                                                        
         BR    RAR                 Return                                       
         EJECT                                                                  
* old data set processing                                                       
*                                                                               
OLD      TM    F2,DSNFSHOW         Is command show?                             
         BO    OLDEDIT             Br if yes - no blksize chk                   
         LH    R0,DS1BLKL          Get block size                               
         CL    R0,=A(&BUFRMAX)     Is it under maximum?                         
         BH    ILLBLKSZ            Br if too big                                
         LT    R0,RECSIZE          Get recsize                                  
         BNM   OLDSTUP             Edit or lrecl                                
**  otherwise use the dscb information                                          
         TM    DS1RECFM,UNDEFIND   Is it recfm=u?                               
         BO    OLDEDIT             Assume edit for recfm=u                      
         TM    DS1RECFM,RECFMF     Is it recfm=f(x)?                            
         BO    USELRECL            Use lrecl if so                              
         TM    DS1RECFM,RECFMV     Is it recfm=v(x)?                            
         BZ    ILLORG              Error if not                                 
* recfm=v                                                                       
         TM    DS1RECFM,SPANNED    Spanned records?                             
         BO    ILLORG              br if yes - can't hack them                  
USELRECL LH    R0,DS1LRECL         Get dscb lrecl                               
         LTR   R0,R0               Is it zero                                   
         BNZ   HAVRECSZ            Br if not                                    
USEBS    LH    R0,DS1BLKL          Get blocksize                                
         LTR   R0,R0               Is it zero?                                  
         BZ    ILLBLKSZ            Br if yes - invalid                          
HAVRECSZ TM    DS1RECFM,RECFMV     Is it variable?                              
         BZ    *+6                 Br if no                                     
         LNR   R0,R0               Indicate variable                            
         ST    R0,RECSIZE          Store result                                 
         B     OLDSTUP             Go on                                        
*                                                                               
OLDEDIT  CLEAR RECSIZE             Indicate edit format                         
OLDSTUP  LABEL ,  ***** enter here From save/scr memb also  **                  
         MVC   JFCBDSNM,DSNAME     Move in dsname                               
         TM    F2,DSNFSHOW+DSNFPDS Is command show directory?                   
         BO    CALLVTOC            Br if yes                                    
         CLI   MEMBER,X'FF'        To be treated as ps?                         
         BE    OLDOPEN             Br if yes                                    
         TM    DS1DSORG,DSORGPO    Is it pds?                                   
         BZ    OLDOPEN             Br if no                                     
         MVI   DCB+DCBDSORG-IHADCB,DSORGPO  set dcb for po                      
         OI    F2,DSNFPDS          Indicate pds processing                      
OLDOPEN  LABEL ,  ***** enter here From create routine also **                  
         MVC   DCB+DCBRECFM-IHADCB(1),RRECFM  move in req recfm                 
         IF    F2.DSNFALLO,BEGIN   Allocate...                                  
         MVC   DCB+DCBDSORG-IHADCB(1),JFCDSORG  get good dsorg                  
         IF    (JFCRECFM,Z),NOBLDL  format is ???, don't open                   
         END                                                                    
         WAITOFF X,ABEND=NOSUCH                                                 
         TM    F2,DSNFWRT          Input or output?                             
         BO    OPENOUT             Br if output                                 
         IF    F2.DSNFALLO,OPENOUT   now open for output to upd dscb            
         SPACE 2                                                                
*** open data set for input                                                     
         OPEN  (,INPUT),TYPE=J,MF=(E,OPENLIST)                                  
         B     OPEN1                                                            
         SPACE 2                                                                
***  open data set for output                                                   
OPENOUT  TM    F3,DSNFEXP          Need check for expdt                         
         BO    OPENOUT1            No, go do open                               
         CLC   DS1EXPDT,CCREDT+1   Is data set date protected                   
         BH    EXPDATE             Yes, abort the operation                     
OPENOUT1 OPEN  (,OUTPUT),TYPE=J,MF=(E,OPENLIST)                                 
         MVI   DCB+(DCBRECFM-IHADCB),UNDEFIND                                   
OPEN1    WAITON X,CLEAR                                                         
         TM    DCB+(DCBOFLGS-IHADCB),X'10'  is it opened ok                     
         BZ    OPNER               No                                           
         IF    F2.DSNFALLO,NOBLDL  All done for allocate                        
         IF    F4.DSNFRENA,RENMBR  No BLDL for rename member                    
         TM    DCB+DCBDSORG-IHADCB,DSORGPO  pds?                                
         BZ    NOBLDL              Br if no                                     
         WAITOFF X                                                              
         BLDL  DCB,BLDL                                                         
         WAITON X                                                               
         ST    R15,ERROR           Store return code                            
         CLI   ERROR+3,8           Was it I/O error                             
         BE    BLDLERR             Br if yes                                    
         TM    F2,DSNFWRT+DSNFSCR  Test function                                
         BO    SCRMBR              Go scratch member                            
         BZ    FINDMEMB            Br if use                                    
**  command is save member                                                      
         CLI   ERROR+3,4           Was member found?                            
         BE    SVNWMBR             Br if not found - normal                     
*-                                                                              
*-       save title text from original directory entry...                       
*-                                                                              
         IF    (DSAVTITL,Z),BEGIN  No new title...                              
         IF    (BLDLDATA+4,NE,'WYL0'),EXIT  not WYLBUR format                   
         IC    R15,BLDLLEN         User data length                             
         N     R15,=A(X'1F')       Isolate                                      
         AR    R15,R15             Convert to byte count                        
         SH    R15,=H'20'          WYLBUR prefix                                
         IF    NP,EXIT             No title                                     
         STH   R15,DSAVTITL        Title length                                 
         MVC   DSAVTIT,CVBLANKS    Tidy                                         
         MOVE  R15,DSAVTIT,BLDLDATA+20                                          
         END                                                                    
*                                                                               
         TM    CPLFLG2,CPFSCRTC    Can we scratch old member?                   
         BO    OKREPL              Br if yes                                    
         LA    RAR,EXISTS          Member already exists                        
         B     BLDLERR                                                          
*                                                                               
OKREPL   OI    DFL,DFREPL          Indicate repl for stow                       
*                                                                               
SVNWMBR  TM    DFL,DFREPL          Is it to be a repl funct?                    
         BC    0,NOBLDL  **PJG**   Br if yes - no space check                   
* The above test removed for PDS title line increases                           
         CLI   DCB+DCBDIRCT+1-IHADCB,0  Check if last dir block used            
         BE    NOBLDL              Nope, directory has space left               
         LA    RAR,NODIRSPC        Load error rtn addr                          
         B     BLDLERR             Last dir blk has been used                   
*                                                                               
FINDMEMB CLI   ERROR+3,4           Was member found for use                     
         LA    RAR,ILLMEMB         Prime return addr                            
         BE    BLDLERR             Br if not                                    
         VCALL AMODE24             ********                                     
         FIND  DCB,BLDLTTR,C       Find member                                  
         VCALL AMODE31             ********                                     
         SPACE 2                                                                
NOBLDL   CLEAR R15                 Indicate success                             
         LA    R1,DBUF             Point to buffer                              
         BAL   R2,RESETWA          Go reset dsnwa                               
RET      LR    R13,R8              Restore orig r13                             
         LM    R2,R8,16(R13)       Restore other regs                           
         L     14,0(,13)                                                        
         LTR   15,15                                                            
         BR    14                                                               
*                                                                               
OPNER    XC    ERROR,ERROR                                                      
         MVI   ERROR+1,C'4'        Set open error code                          
         ACALL CATER                                                            
         B     DEQERR                                                           
*                                                                               
BLDLERR  LR    R3,RAR              Save routine addr                            
         WAITOFF X                                                              
         CLOSE MF=(E,OPENLIST)                                                  
         WAITON X                                                               
         CLI   ERROR+3,8           Was it an I/O error                          
         BNER  R3                  Br to pre-desig rtn if not                   
         LA    R15,RTNDIRIO        Set I/O error return code                    
         B     DEQERR                                                           
         SPACE 8                                                                
***  reset dsnwa in case changed values                                         
RESETWA  L     R0,RECSIZE          Return size                                  
         MVC   DSNON,CVBLANKS                                                   
         MVC   DSNON6,DSVID        Return actual volume name                    
         IF    (DSNON6,Z),'CLEAR DSNON'        ***ISU                           
         MVC   DSNWAMBR,MEMBER     In case member changed                       
         MVC   DSNWAF1(L'FLAGS),F1 Restore flags also                           
         IF    F2.DSNFCAT,'MVC DCATUNIT,DEVCODE'  Move in UNIT used             
         BR    R2                  Return                                       
         EJECT                                                                  
* delete processing                                                             
*                                                                               
DELT     CLI   MEMBER,X'FF'        Scratch entire thing anyway?                 
         BE    DELT1               Br if yes                                    
         TM    DS1DSORG,DSORGPO    Is it a pds?                                 
         BZ    DELT1               Br if its not                                
DELT0    MVC   RRECFM,DS1RECFM     Save actual recfm                            
         B     OLDSTUP             Then go open pds                             
*                                                                               
DELT1    BAL   R2,READKW           Go read in password record                   
DELTALL  LABEL                                                                  
*|         tm    ds1space,spacflag   was space acctd for?                       
*|         bno   deltall2            br if not                                  
         CLC   DSTYPE,CVSTYPE      Is it save type of vol                       
         BNE   DELTALL2            Br no, ignore space acctng                   
         XC    SPTRK,SPTRK         Clear area for space total                   
         ACALL DVTOC2              Go compute actual space used                 
         LH    R1,SPTRK            Get track value                              
         LNR   R1,R1               Complement it                                
         STH   R1,MEMBER+4         Save it for update later                     
         IF    ^DFL.DFNOACTG,'SET DFL.DFUPTSPC'  spac actg needed               
DELTALL2 MVI   SCRRET,0            Set before drop-thru                         
         CLEAR R0                  Must be zero on entry                        
         WAITOFF X,ABEND=SCRABE                                                 
         SCRATCH SCRLST            Kill the data set                            
         WAITON X                                                               
         CLEAR R15                 Fix up code                                  
         CLI   SCRRET,0            Was there an error                           
         BE    CHKUNCAT            No.  all ok                                  
         CLI   SCRRET,1            Was ds not there                             
         BE    NOSUCH              Ds not there                                 
         IC    R15,SCRRET          Get into reg                                 
*                                                                               
         IF    (R15,NE,R15),BEGIN  Never fall thru--label br...                 
SCRABE   LA    R15,254             0xfe error code (abend)                      
         END                                                                    
*                                                                               
         ST    R15,ERROR           Save for cater                               
         MVI   ERROR+1,C'6'        Put in code                                  
         ACALL CATER                                                            
         B     DEQERR                                                           
*                                                                               
CHKUNCAT IF    ^F2.DSNFSCR,R2      (subroutine of SAVE)                         
*-                                                                              
*-       Remove RACF generic profile after SCRATCH.                             
*-                                                                              
         VCALL RACGREM             Generic remove profile                       
*-                                                                              
*-       Uncatalog file.                                                        
*-                                                                              
         IF    (DSNON6,EQ,DSNCATV),'SET CPFUNCAT'                               
         ELSE  'SET CPFNOCAT'                                                   
         ACALL DCATLG              Do any uncataloging                          
         IF    NZ,'LA R15,12'                                                   
         B     DEQERR              Return                                       
         SPACE 2                                                                
**  return here from open to scratch member                                     
SCRMBR   LA    RAR,ILLMEMB         Load in case of error                        
         CLI   ERROR+3,4           Was it found?                                
         BE    BLDLERR             Br if no                                     
         BAL   R2,RESETWA          Go reset dsnwa                               
         LR    R3,R0               Save r0 return value                         
         LA    R1,DCB                                                           
         LA    R0,MEMBER                                                        
         LCR   R0,R0               Flag delete for stow                         
         ACALL DCLOSE              Go stow, close, and deq                      
         LR    R0,R3               Restore R0 return value                      
         B     RET                                                              
         EJECT 1                                                                
* RENAME Processing                                                             
*                                                                               
DOREN    LABEL ,                                                                
         IF    DRENMBR,BEGIN                                                    
         IF    ^DS1DSORG.DSORGPO,NOTPDS                                         
         MVC   RRECFM,DS1RECFM     Save original RECFM                          
         B     OLDSTUP             Enter OPEN processing                        
         END                                                                    
         MVC   DRENPROT,DS1DSIND   Save protection ind for msg                  
         MVI   SCRRET,0            Clear RENAME return code                     
         CLEAR R0                                                               
         WAITOFF X                                                              
         RENAME RENAMLST           Rename dataset                               
         WAITON X                                                               
         CLEAR R15                                                              
         IF    (SCRRET,Z),RENUNCAT  Error?                                      
         IF    (SCRRET,EQ,1),NOSUCH  Dsn not there                              
         IF    (SCRRET,EQ,2),NOACCESS No access                                 
         IF    (SCRRET,EQ,3),EXISTS  Newname exists                             
         IC    R15,SCRRET          Get other error code                         
         ST    R15,ERROR           Save for CATER                               
         MVI   ERROR+1,C'9'        Set RENAME code for CATER                    
         ACALL CATER                                                            
         B     DEQERR                                                           
*                                                                               
* Uncatlog old name                                                             
*                                                                               
RENUNCAT IF    (DSNON6,EQ,DSNCATV),'SET CPFUNCAT' Safe to uncat                 
         ELSE  'SET CPFNOCAT'      Don't futz with cat                          
         ACALL DCATLG                                                           
         IF    NZ,'SET DRENUNCF'   Set if uncat failed                          
         SET   DRENUNC             Set uncat attempted                          
         SPACE 1                                                                
*                                                                               
* Catlog new name                                                               
*                                                                               
         CLEAR CPFUNCAT+CPFNOCAT   Clear flags which interfere                  
         LA    R0,NEWDSNAM         R0 -> New dsname                             
         ST    R0,CATLST+4         Change CAMLIST                               
         ACALL DCATLG              Perform any catlg function                   
         LA    R0,DSNAME           R0 -> Orginal dsname                         
         ST    R0,CATLST+4         Restore CAMLIST                              
         ST    R15,DRENCTRC        Save catlg return code                       
         IF    CPFNOCAT,'SET DRENCATF'   Set error flag if needed               
         CLEAR R15                 Clear ret code                               
         B     DEQERR                                                           
         SPACE 3                                                                
** Return here from OPEN for member RENAME                                      
RENMBR   LABEL ,                                                                
         BAL   R2,RESETWA          Reset DSNWA                                  
         MVC   NEWDSNAM(8),DSNWAMBR    Set old name for STOW                    
         MVC   NEWDSNAM+8(8),DRENMNAM  Set new name for STOW                    
         WAITOFF X                                                              
         STOW  DCB,NEWDSNAM,C      Issue RENAME                                 
         WAITON X                                                               
         LR    R3,R15              Save return code for R0                      
         ACALL DCLOSE              Close PDS                                    
         LR    R0,R3               Restore STOW return code                     
         B     RET                 Exit                                         
         EJECT                                                                  
*                                                                               
* Processing for catalog/uncatalog/recatalog commands...                        
*                                                                               
CALLCAT  ACALL VALLOCAT            Alloc vol                                    
         BNZ   ERR                 Troubles                                     
         ACALL DCATLG              Go do it                                     
         LR    R3,R15              Save return code                             
         ACALL VDALLO              Go dequeue on vol                            
         LNR   R15,R3              Neg if DCATLG error                          
         B     ERR                                                              
*                                                                               
CALLCAT2 ACALL DCATLG              Go do it                                     
         B     ERR                                                              
*                                                                               
* some sort of catalog error...                                                 
*                                                                               
CILLVOL  MVC   DSVID,CATVOLID      Get missing cvol name                        
ILLVOLND LA    R15,RTNBDVOL        Ill volume error code                        
         B     ERR                                                              
*                                                                               
ILLCATRF LA    R15,RTNBDCAT        Invalid catlg reference                      
         B     ERR                                                              
         EJECT                                                                  
* utility routines                                                              
*                                                                               
DEQERR   WAITOFF X                 Do deq under subtask control                 
DEQERRW  LR    R3,R15              Save return code                             
         IF    F2.DSNFPROT,BEGIN  deq sysvtoc only if set prot                  
         IF    ^F2.DSNFSHOW,BEGIN                                               
         DEQ   MF=(E,ENQVOL)                                                    
         END                                                                    
         END   ,                   But skip dsn deq for prot                    
         ELSE  BEGIN                                                            
         IF    F4.DSNFENQ,BEGIN    Need to DEQ...                               
         DEQ   RET=HAVE,TCB=CVITCBP,MF=(E,ENQDSN)                               
         END                                                                    
         END                                                                    
         WAITON X,CLEAR            Return to main task                          
         ACALL VDALLO              Go deallocate it                             
DEQERRV  LR    R15,R3              Restore return code                          
         B     ERR                                                              
*                                                                               
NOACCESS LA    R15,RTNNOACS        Set rc                                       
         XC    RECSIZE,RECSIZE                                                  
         B     DEQERR              Go deq and return                            
*                                                                               
ILLDS    LA    R15,RTNILDSN                                                     
         B     ERR                                                              
*                                                                               
TYPECHNG LNR   R15,BR              Set r15 negative                             
         B     DEQERR                                                           
*                                                                               
EXPDATE  LA    R15,RTNEXPDT                                                     
         B     DEQERRW             Error detected under subtask                 
*                                                                               
ABORTMS  LA    R15,ABRTCODE        Set request aborted code                     
         B     DEQERR                                                           
*                                                                               
NOSTORE  LA    R15,RTNNOSTR                                                     
         B     DEQERR                                                           
*                                                                               
ILLMEMB  LA    R15,RTNBDMBR                                                     
         B     DEQERR                                                           
*                                                                               
NODIRSPC LA    R15,RTNDIRFL                                                     
         B     DEQERR                                                           
*                                                                               
NOTPDS   LA    R15,RTNNTPDS        Indicate error                               
         B     DEQERR              Go and cleanup                               
*                                                                               
NOSUCH   LA    R15,RTNNODS                                                      
         B     DEQERR                                                           
*                                                                               
EXISTS   LA    R15,RTNDUPDS                                                     
         B     DEQERR                                                           
*                                                                               
NOROOM   LA    R15,RTNNOSPC                                                     
         B     DEQERR                                                           
*                                                                               
ILLORG   LA    R15,RTNILORG                                                     
         B     DEQERR                                                           
*                                                                               
* lockout code is executed under subtask control                                
LOCKOUT  CLEAR RECSIZE             Flag: data set in use                        
         LA    R15,RTNINUSE        Indicate enq failed                          
         B     DEQERRW  go deq in case one in the list gotten                   
*                                                                               
ILLBLKSZ ST    R0,RECSIZE          Save invalid blocksize                       
         LA    R15,RTNINVBS                                                     
         B     DEQERR                                                           
*                                                                               
ILLCAT   LA    R15,RTNNODS                                                      
         CLI   F2,DSNFSHOW         Is it show dsn on catlg                      
         BE    ILLCATRF            Yes, invalid catlg reference                 
*                                                                               
ERR      TM    DFL,DFUPTSPC        Is space accntg needed?                      
         BNO   ERR1                Br if not                                    
         LH    R1,MEMBER+4         Get computed total                           
         ACALL UPDTSPAC            Go update space used                         
ERR1     BAL   R2,RESETWA          Go reset dsnwa                               
         LR    R3,R0               Save r0                                      
         LR    R4,R1               Save r1                                      
         LR    R2,R15              Save return code                             
         ACALL RELIOWA             Release IOWA                                 
         LTR   R15,R2              Restore return register                      
         LR    R0,R3               Restore r0                                   
         LR    R1,R4               Restore r1                                   
         B     RET                                                              
         EJECT                                                                  
**  routine to make sure data set exists and member spec if req                 
*                                                                               
MUSTXST  LC    R15,SCRRET          Get return code from obtain                  
         LTR   R15,R15                                                          
         BZ    DSEXISTS            Br if dscb found                             
         ST    R15,ERROR                                                        
         MVI   ERROR+1,C'2'                                                     
         CLI   ERROR+3,8           Was it just not found?                       
         BE    NOSUCH              Br if yes                                    
         CLI   ERROR+3,4           Was it vol not avail                         
         LA    R15,RTNBDVOL        Bad volume                                   
         BE    DEQERR                                                           
         ACALL CATER                                                            
         B     DEQERR                                                           
*                                                                               
DSEXISTS IF    F2.DSNFPROT,R2      Anything ok for set/sho prot                 
         IF    F4.DSNFRENA,R2      Rename doesn't care                          
         CLI   MEMBER,X'FF'        Is it to be treated as seq?                  
         BER   R2                  Br if yes                                    
         TM    DS1DSORG,DSORGPO    Is it a pds?                                 
         BO    DSISPDS             Br if yes                                    
         TM    F2,DSNFSCR          Scratch command?                             
         BO    CHKPSMBR            if so don't check for ps                     
         TM    DS1DSORG,DSORGPS    Is it seq?                                   
         BZ    ILLORG              Br if no - invalid dsorg                     
CHKPSMBR LABEL                                                                  
**  sequential data set specified                                               
         CLI   F2,0                Is this a use access?                        
         BER   R2                  Yes, ignore the member                       
         TM    MEMBER,X'BF'        Was a member specified?                      
         BNZ   NOTPDS              yes, and that's an error                     
         TM    F2,DSNFSHOW+DSNFPDS Is command show directory?                   
         BO    ILLORG              Br if yes - illegal                          
         BR    R2                  Return                                       
*                                                                               
**  partitioned data set                                                        
DSISPDS  TM    F2,DSNFSHOW+DSNFPDS Is command show directory?                   
         BOR   R2                  Br if yes - return                           
         IF    ((MEMBER,EQ,X'00'),OR,(MEMBER,EQ,' ')),ILLMEMB                   
         BR    R2                                                               
         SPACE 4                                                                
* test user has not exceeded his sequential space allowed                       
CHKSPOK  LABEL                                                                  
         IF    DSNFSML,R2          Allow re-write for show mail                 
         LA    R1,KWR              R1 -> KWR                                    
         VCALL EXIT4               LOCAL exit - check space alloc               
*                                                                               
*   Removed 6/15/95 by M. Durket. Because WYLBUR uses WINGS                     
*   it no longer updates the space information. Disk quota                      
*   handling is done by the nightly accounting routines.                        
*                                                                               
*        IF    (R15,NZ),BEGIN      Space exceeded ...                           
*        TSEG  KWRGRP                                                           
*        TSEG  '.'                                                              
*        TSEG  KWRUSER,,B                                                       
*        LA    R15,RTNOVSP         Set return code                              
*        B     DEQERR                                                           
*        END                                                                    
         BR    R2                  Return to caller                             
         SPACE 2                                                                
* check that seqfld values are within lrecl if numbered save                    
*    r0 = lrecl at entry                                                        
CHKSQFLD IF    ^CPLFLG5.CPFFOPT,RAR  nothing explicit, scram                    
         IF    CPLFLG5.CPFUNUM,RAR  unnumbered, scram                           
         LH    R2,CPSEQLN          Get length of seqfld                         
         TM    CPSEQFLD,X'80'      Seq field at end of record                   
         BO    CHKSQFL1            Yes                                          
         AH    R2,CPSEQFLD         Add start col for seqfld                     
         BCTR  R2,0                Set for compare to lrecl                     
CHKSQFL1 CR    R2,R0               Is it within bounds                          
         BNHR  RAR                 No, return                                   
         TSEG  'LRECL invalid.',,CR                                             
         LA    R15,ABRTCODE        Set abort code                               
         B     DEQERR              Finish up                                    
         SPACE 2                                                                
         EJECT                                                                  
MODLENQX ENQ   (SYSDSN,0,E,0,SYSTEM),RET=USE,MF=L                               
MODLENQ  EQU   MODLENQX,*-MODLENQX,C'X'                                         
*                                                                               
ENQSHARE EQU   X'C3'               Enq option for shared                        
         SPACE 2                                                                
         QLTORG                                                                 
         EJECT                                                                  
OPENINIT XENTER                                                                 
         L     R3,=A(MODELDCB)     Get brand new copy of dcb                    
         MVC   DCB(DCBSZ),@R3                                                   
         L     R3,=A(FOURMODL)     Get address of model dcb                     
         MVC   FOURS(FOURSIZ),@R3  Move it in                                   
         LA    R3,EXLST            Addr of exlst                                
         ST    R3,DCB+DCBEXLST-IHADCB  enter into dcb                           
         ST    R3,FOURS+DCBEXLST-IHADCB  enter into fours dcb                   
         MVI   RRECFM,UNDEFIND     Set undefined                                
         MVI   DCB+(DCBRECFM-IHADCB),UNDEFIND  set undefined                    
         MVI   DCB+DCBDSORG-IHADCB,DSORGPS  init to ps org                      
         MVC   DSNAME(44),DSNWADSN Save ds name                                 
         MVC   DSVID,DSNON6        Volid                                        
         MVC   MEMBER,DSNWAMBR     Member name                                  
         MVC   FLAGS,DSNWAF1       And dsn flags                                
         IF    F4.DSNFRENA,'MVC NEWDSNAM,DRENDSN'  Newname for RENAME           
         IF    F5.DSNFCUNI,'MVC DEVCODE,DCATUNIT'                               
         MVI   DFL,0               Make sure zero                               
         XC    EXLST,EXLST         Clear dcb exit addr                          
         MVI   KWRIFL,0            Indicate no password record                  
         CLEAR (KWRUSER,5)                                                      
         MVC   WAUSER,CPSUSER      Save user                                    
         MVC   WAGRP,CPSGRP        Save signed on group                         
         XEXIT                                                                  
         DROP  BR                                                               
         EJECT                                                                  
         DROP  CP                                                               
OPENENQ  XENTER R2,R8,TRACE=NO                                                  
         IF    F2.DSNFPROT,BEGIN   Set/show protect                             
         IF    ^F2.DSNFSHOW,BEGIN            enq sysvtoc for set                
         ENQ   (SYSVTOC,,,,SYSTEM),MF=(E,ENQVOL)                                
         END                                                                    
         CLEAR R15                 Set good return code                         
         B     OPENENQX            All done                                     
         END                                                                    
*                                                                               
         CLEAR R15                 Assume A-OK                                  
         IF    (NOT,F5.DSNFNONQ),BEGIN  Need to ENQ...                          
         MVI   ENQDSN,X'81'        TCB= option in ENQ param list                
         MVC   ENQDSN-4(4),CVITCBP                                              
         ENQ   (SYSDSN,,,(R3)),MF=(E,ENQDSN)                                    
*                                                                               
* When two shared ENQ's for the same resource are done, MVS will                
* return RC=8 to the second (task already has control of                        
* resource).  Damn shame too, because WYLBUR will need to keep                  
* it's own use count for any ENQ'd dsnames to know when to DEQ.                 
* For now, we'll just ignore the integrity error...                             
*                                                                               
         IF    (R15,Z),'SET F4.DSNFENQ'  We got it, we'll DEQ                   
         IF    (R15,NZ),BEGIN                                                   
         IF    ('CLI ENQDSN+2,ENQSHARE',NE),EXIT  Exclusive, scram              
         LC    R0,@R15+3           Return code                                  
         IF    (R0,EQ,8),'CLEAR R15'  We already have it                        
         END                                                                    
         END                                                                    
OPENENQX XEXIT R2,R8,LTR                                                        
*                                                                               
SYSDSN   DC    CL8'SYSDSN'         Qname for data sets                          
SYSVTOC  DC    CL8'SYSVTOC'        Qname for vtoc enqs                          
         DROP  BR                                                               
         USING CP                                                               
         EJECT                                                                  
WYLDISK2 CSECT                                                                  
MODELDCB DCB   DSORG=PS,EODAD=EODAD,SYNAD=SYNAD,                       *        
               MACRF=(RP,WP)                                                    
DCBSZ    EQU   *-MODELDCB                                                       
*-                                                                              
FOURMODL DCB   DSORG=PS,MACRF=E,EXLST=FOURMODL                                  
FOURSIZ  EQU   *-FOURMODL                                                       
WYLDISK  CSECT                                                                  
         EJECT                                                                  
***  dcb exit routine during open  ***                                          
*                                                                               
         PUSH  USING                                                            
         DS    0H                  Verify alignment                             
         USING *,R15                                                            
DCBEXIT  LR    R2,RAR              Save return addr                             
         IF    ^DFL.DFNOACTG,'SET DFL.DFUPTSPC'  acct for space                 
         BR    R2                  Return to open                               
         POP   USING                                                            
         TITLE 'Look Up Volume Routine'                                         
*box                                                                            
*                                                                               
*  GETVOL -- Routine to select a disk volume for a new permanent                
*    data set.                                                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - volume set; DSNON contains volume name                               
*      nz- error                                                                
*                                                                               
GETVOL   PROC                                                                   
         CLEAR R3                  Assume good rc                               
*                                                                               
         IF    (DSNON6,EQ,DSNBADV),'CLEAR DSNON'  Not this vol                  
         IF    (DSNON,NZ),GETVEXIT  This volume will do                         
*                                                                               
         IF    (CPVOLUME,NZ),BEGIN  Use SET VOLUME...                           
         IF    (DSNFMAIL+DSNFSML,NZ),EXIT  Ignore for MAIL files                
         MVC   DSNON,CVBLANKS                                                   
         MVC   DSNON6,CPVOLUME     User's set volume                            
         IF    (DSNON6,EQ,DSNBADV),'CLEAR DSNON'  Not this vol                  
         IF    (DSNON,NZ),GETVEXIT                                              
         END                                                                    
*                                                                               
         CLEAR R2                  Flag                                         
         IF    F1.DSNFSTD,BEGIN    Standard dsname...                           
         MVC   KWRUSER,DSNAME+DSNXU  uuu                                        
         MVC   KWRGRP,DSNAME+DSNXG  gg                                          
         KREAD KWR                                                              
         IF    ^KWRIFL.KWRIFVAL,EXIT  no record, scram                          
         MVC   DSNON,CVBLANKS                                                   
         MVC   DSNON6,KWRVOL       Use his volume                               
         IF    (DSNON6,Z),'CLEAR DSNON'                                         
         IF    (DSNON6,EQ,DSNBADV),'CLEAR DSNON'  Not this vol                  
         IF    (DSNON,NZ),GETVEXIT                                              
         LA    R2,1                                                             
         END                                                                    
*                                                                               
         IF    ((F2,Z),OR,F2.DSNFSHOW+DSNFSCR+DSNFPROT,OR,             C        
               F4.DSNFRENA),BEGIN                                               
         IF    F2.DSNFALLO,EXIT    Use storage vol if ALLOCATE ...              
         LA    R3,RTNNODS          Not in the catalog                           
         B     GETVEXIT            Scram                                        
         END                                                                    
*                                                                               
         IF    (F2.DSNFWRT,AND,(DSNWAMBR,NE,X'00'),AND,                C        
               (DSNWAMBR,NE,' ')),'LA R3,RTNNODS; B GETVEXIT'                   
*                                                                               
         LH    R15,CVVOLCUR                                                     
         LR    R1,R15                                                           
         MH    R1,=H'6'                                                         
         LA    R1,CVVOL(R1)                                                     
         MVC   DSNON,CVBLANKS                                                   
         MVC   DSNON6,@R1          Set volume                                   
         LA    R15,@R15+1                                                       
         IF    (R15,GE,CVVOLMAX),'CLEAR R15'                                    
         STH   R15,CVVOLCUR                                                     
         IF    (CVVOLMAX,Z),'MVC DSNON6,=C"&PUBVOL"'  (temp)                    
         IF    (DSNON6,Z),'CLEAR DSNON'                                         
         INCR  R15,CVCHKUC         Time for checkpoint I/O                      
*                                                                               
         AIF   (NOT &SETKWVL).NOKWVOL                                           
         IF    (R2,NZ),BEGIN       Set user's volume...                         
         IF    (KWRVOL,NZ),EXIT                                                 
*                                                                               
         LOOP  BEGIN                                                            
         MVC   KWRVOL,DSNON6       Set volume                                   
         KWRITE KWR                                                             
         UNTIL KWRHFL.KWRHFUOK,END                                              
         END                                                                    
.NOKWVOL ANOP                                                                   
*                                                                               
GETVEXIT LTR   R15,R3              Set cc                                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VOLCHK -- Routine to check to see if the volume specified is                 
*    in our volume table.                                                       
*                                                                               
*    On entry:                                                                  
*      R1 - 6 character string ptr                                              
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - yes, this is one of our disks                                        
*      4 - no, it's not                                                         
*                                                                               
VOLCHK   XPROC                                                                  
         L     R4,CVVOLIST                                                      
         WITH  (VOLDSECT,R4)                                                    
*                                                                               
         WHILE (VOLDSECT,NE,X'FF'),BEGIN  Go through volumes...                 
         IF    (VNAME,EQ,@R1),'CLEAR R15; B VCHKEXIT'  Matched                  
         LA    R4,VOLENTSZ(,R4)    Next VOL entry                               
         END                                                                    
*                                                                               
         LA    R15,4               It's not a disk                              
VCHKEXIT PEND                                                                   
         EJECT                                                                  
DOUCBSR  XENTER R2,R8,*,LOCAL                                                   
         CLEAR DSTYPE                                                           
         USING VOLDSECT,R2                                                      
         L     R2,CVVOLIST                                                      
         WHILE (VNAME,NE,DSVID),BEGIN                                           
         LA    R2,VOLENTSZ(,R2)    POINT AT NEXT                                
         IF    (VOLDSECT,EQ,X'FF'),BADVOL                                       
         END                                                                    
         MVC   DSTYPE,VTYPE        Save volume type                             
         IF    VFLG2.VF2ALLO,DOALOXX  BR IF ALLOCATION                          
         IF    VFLG2.VF2DALLO,DEALLOC  BR IF DEALLOCATION                       
         IF    ^VFLG1.VF1AVAIL,VOLNTCUR  BR VOL UNAVAIL                         
         IF    VFLG3.VF3BKUP,VOLBKUP   BR IF BACKUP                             
         IF    VFLG1.VF1PRIV,BEGIN DO IF PRIV ACCESS ONLY                       
         IF    (CPSFOPR+CPSFSPR,Z),NOVOLACS                                     
         END                                                                    
         IF    ^VFLG1.VF1ON,BEGIN                                               
         IF    VFLG1.VF1PDA,VOLNTCUR  BR DEALLO PENDING                         
         IF    VFLG1.VF1PRES,BEGIN                                              
         SET   VFLG1.VF1ON         TURN VOL ONLINE                              
         B     DOALOXX             AND GO TRY ALLOCATING IT                     
         END                                                                    
         B     VOLNTCUR            NOT CURRENTLY AVAILABLE                      
         END                                                                    
         IF    ('LT R15,VOLUCBAD',Z),DOALOXX  ALLOC IF NO UCB                   
         WITH  (UCBDSECT,R15),BEGIN                                             
         IF    (DSVID,NE,UCBVOLI),DEALLOC                                       
         IF    ^UCBSTAT.UCBONLI,DEALLOC  MAKE SURE ONLINE                       
         END                                                                    
*                                                                               
         ST    R15,UCB             SAVE UCB ADDR                                
         ST    R2,VOLENTRY         SAVE VOL TABLE ENTRY                         
         MVC   DSDD(8),VTYPE       Move in DDNAME                               
         CLEAR R15                 ZERO RC                                      
         IF    ^VFLG1.VF1PRES,'SET DFL.DFNOACTG'  ACCOUNT RES SPACE             
         B     DOUCBRTN            RETURN TO CALLER                             
*                                                                               
DEALLOC  CLEAR VFLG1.VF1ON         TURN VOL OFFLINE                             
         IF    ^VFLG1.VF1PRES,'CLEAR VFLG1.VF1AVAIL'                            
         IF    ('LTH R15,VOLUSECT',P),BEGIN                                     
         SET   VFLG1.VF1PDA        SET DEALLO PENDING                           
         B     VOLNTCUR            TELL USER VOL NOT CURR AVAIL                 
         END                                                                    
         SET   VFLG2.VF2DALLO      DEALLO VOLUME                                
DOUCALD  CLEAR R15                                                              
         ST    R15,UCB             ZERO UCB POINTER                             
         ST    R2,VOLENTRY         SAVE VOL ENTRY                               
         B     DOUCBRTN                                                         
*                                                                               
DOALOXX  IF    VFLG2.VF2DALLO,NOALLOC                                           
         IF    ('CLI F2,DSNFCAT',EQ),NOALLOC  SKIP IF CAT OPER                  
         IF    ^VFLG1.VF1PRES,'SET VFLG2.VF2QUIET'                              
         IF    (VNAME,EQ,' '),'SET VFLG1.VF1CLR'                                
         SET   VFLG2.VF2ALLO       ALLOCATE PLEASE                              
         MVC   VNAME,DSVID         SET UP VOL NAME                              
         MVC   DSDD(8),VTYPE       SET UP DDNAME                                
         IF    ^VFLG1.VF1PRES,'SET DFL.DFNOACTG' ACNT RESIDENT SPACE 96         
         B     DOUCALD                                                          
*                                                                               
VOLNTCUR LA    R15,RTNVOLNA        VOL NOT AVAILABLE                            
         B     DOUCBRTN                                                         
*                                                                               
VOLBKUP  LA    R15,RTNBKUP         VOLUME IN BACKKUP STATUS                     
         B     DOUCBRTN                                                         
*                                                                               
BADVOL   LA    R15,RTNBDVOL        UNKNOWN VOLUME                               
         B     DOUCBRTN                                                         
*                                                                               
NOVOLACS LA    R15,RTNVOLNA        SET NO ACCESS TO VOLUME                      
         B     DOUCBRTN                                                         
*                                                                               
NOALLOC  LA    R15,RTNALLER        SET ALLO ERROR                               
*        B     DOUCBRTN                                                         
*                                                                               
DOUCBRTN XEXIT ,,LTR                                                            
         DROP  VOLDSECT,IOWA,BR                                                 
         TITLE 'Routine to Clear and Reset the JFCB'                            
*** THIS SUBROUTINE CANNOT USE CP SINCE IT SOMETIMES OPERATES                   
***   UNDER AN I/O SUBTASK.                                                     
         DROP  CP                                                               
*                                                                               
CLRJFCB  XENTER R2,R8,TRACE=NO                                                  
         USING IOWA                                                             
         MVC   JFCBSAVE(JFCBLGTH),JFCB  COPY JFCB                               
         XC    JFCB(JFCBLGTH),JFCB CLEAR THE WHOLE THING                        
         MVC   JFCBELNM,JFCBSAVE+JFCBELNM-JFCB                                  
         MVC   JFCBLTYP,JFCBSAVE+JFCBLTYP-JFCB                                  
         MVC   JFCBVLSQ,JFCBSAVE+JFCBVLSQ-JFCB                                  
         MVI   JFCBIND2,JFCOLD     Force DISP=OLD (no security bits)            
         MVC   JFCBNVOL,JFCBSAVE+JFCBNVOL-JFCB                                  
         MVC   JFCBVOLS,JFCBSAVE+JFCBVOLS-JFCB                                  
         MVC   JFCBVOLS+(4-1)*6(6),=CL6'      '                                 
         MVC   JFCBVLCT,JFCBSAVE+JFCBVLCT-JFCB                                  
**  JFCBDSNM  IS FILLED IN ELSEWHERE                                            
         XEXIT                                                                  
         DROP  IOWA,BR                                                          
*                                                                               
         USING CP                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LOGDS -- Routine to log data set accesses.                                   
*    (Right now only "PUBLIC" data set accesses are logged.)                    
*                                                                               
SMFDS    RECORD BEGIN                                                           
SMFDATYP DS    CL8                 COMMAND CODE (TYPE OF ACCESS)                
SMFDDSN  DS    CL44                DATA SET NAME                                
SMFDMEMB DS    CL8                 MEMBER NAME                                  
SMFDCMD  DS    CL64                COMMAND TEXT                                 
         END                                                                    
*-                                                                              
LOGDS    XENTER R15,R8,*,LOCAL                                                  
         IF    CVFINIT,LOGDSXIT    DON'T LOG IF IN INITIALIZATION               
         IF    (DSNWADSN,NE,'WYL.&PUBGRP..&PUBUSER..'),LOGDSXIT                 
         XPUSH ,,L'SMFDS,PTR=R6                                                 
         WITH  (SMFDS,R6),BEGIN                                                 
         CLEAR SMFDS                                                            
         MVC   SMFDATYP,CVBLANKS                                                
         MVC   SMFDATYP(3),CPCMNM   COMMAND NAME                                
         MVC   SMFDDSN,DSNWADSN    DSNAME                                       
         MVC   SMFDMEMB,DSNWAMBR   MEMBER NAME                                  
         MVC   SMFDCMD,CVBLANKS                                                 
         LH    R15,CPCMDLEN                                                     
         CEIL  R15,L'SMFDCMD                                                    
         MOVE  R15,SMFDCMD,CPCMD   COMMAND TEXT                                 
         LA    R15,=CL8'PUBDS'     TYPE OF RECORD                               
         SETMSG SMFDS                                                           
         VCALL SMFLOG              WRITE RECORD                                 
         END                                                                    
LOGDSXIT XEXIT R15,R8                                                           
         DROP  BR                                                               
         TITLE 'Disk Read (DREAD) Routine'                                      
*box                                                                            
*                                                                               
*  DREAD -- Read a disk buffer.                                                 
*                                                                               
DRDWA    RECORD BEGIN                                                           
DRDID    DS    XL16                Unique ID check                              
         END                                                                    
*-                                                                              
DREAD    XPROC (R2,LSR),DRDWA                                                   
         L     IOWAR,CPIOWAP       IOWA ptr                                     
         WITH  IOWA                                                             
*                                                                               
         L     JCBR,CVCURJCB                                                    
         IF    ('CLM JCBR,7,IWA@JCB+1',NE),NOTOPEN  BR NOT OURS                 
         WITH  JCB                                                              
*                                                                               
         MVC   DRDID,=CL(L'DRDID)'DATABUF 11223344'                             
         STCK  DRDID+8             Form unique ID                               
         MVC   DBUF(L'DRDID),DRDID  Initialize with unique ID                   
*                                                                               
         CLEAR R15                                                              
         ST    R15,RETCOD          SAVE RETURN CODE                             
         IC    R15,DCB+DCBKEYLE-IHADCB  GET KEY LENGTH                          
         LH    R2,=Y(&BUFRMAX)     GET SIZE OF BUFFER                           
         SR    R2,R15              SET BLKSIZE FOR READ                         
         VCALL AMODE24             ********                                     
         READ  DECB,SF,,,(2),MF=E                                               
         VCALL AMODE31             ********                                     
         INCR  R0,CVNDIO           COUNT THE DISK I/O                           
         INCR  R0,JCBWIO           Count disk I/O                               
         LT    R2,JCBUCEP          Current component charges                    
         IF    NZ,BEGIN            Component is set...                          
         WITH  (UCE,R2)                                                         
         INCR  R0,UCEWIO           Ditto                                        
         END                                                                    
*                                                                               
         LCALL DWAIT               Wait for I/O completion                      
*-                                                                              
*-       Validity check.                                                        
*-                                                                              
         IF    (R15,Z),BEGIN       Only if good read completion...              
         IF    (R0,GE,L'DRDID),BEGIN  We've read a block...                     
         IF    (DRDID,EQ,DBUF),BEGIN  But our ID hasn't changed...              
         QSNAP 'Read buffer check failed...',MODE=WTL                           
         QSNAP (R0)                                                             
         QSNAP DBUF,64                                                          
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         TITLE 'Disk Write (DWRITE) Routine'                                    
DWRITE   XPROC (R2,LSR)                                                         
         L     IOWAR,CPIOWAP       IOWA ptr                                     
         WITH  IOWA                                                             
*                                                                               
         L     JCBR,CVCURJCB                                                    
         IF    ('CLM JCBR,7,IWA@JCB+1',NE),NOTOPEN  BR NOT OURS                 
         WITH  JCB                                                              
*                                                                               
         LTR   R3,R0                                                            
         IF    NP,'L R3,RECSIZE'                                                
         CLEAR R15                                                              
         ST    R15,RETCOD          SAVE RETURN CODE                             
         VCALL AMODE24             ********                                     
         WRITE DECB,SF,,,(R3),MF=E                                              
         VCALL AMODE31             ********                                     
         INCR  R0,CVNDIO           COUNT THE DISK I/O                           
         INCR  R0,JCBWIO           Count disk I/O                               
         LT    R2,JCBUCEP          Current component charges                    
         IF    NZ,BEGIN            Component is set...                          
         WITH  (UCE,R2)                                                         
         INCR  R0,UCEWIO           DITTO                                        
         END                                                                    
*                                                                               
         LCALL DWAIT                                                            
         PEND                                                                   
         TITLE 'Disk Close (DCLOSE) Routine'                                    
DCLOSE   XENTER                                                                 
         LT    IOWAR,CPIOWAP       IOWA ptr                                     
         IF    Z,BEGIN             No disk path...                              
         CLEAR R15                 Set good return code                         
         B     DCXX                Scram                                        
         END                                                                    
*                                                                               
         USING IOWA                                                             
*                                                                               
         L     JCBR,CVCURJCB                                                    
         FAIL  (JCBR,NE,IWA@JCB),DCLSERR,'Bad DCLOSE call'                      
         IF    (F2,EQ,DSNFSIMP),'CLEAR ERROR; B DCX'  Simple                    
         IF    F2.DSNFPROT,BEGIN   SET/SHOW PROTECT                             
         IF    ^F2.DSNFSHOW,BEGIN  DEQ for set only                             
         WAITOFF X                 A few extra dispatches...                    
         DEQ   MF=(E,ENQVOL)                                                    
         WAITON X                                                               
         END                                                                    
         B     DCX                 Release IOWA & return                        
         END                                                                    
         LA    R3,DCB              Use R3 to address DCB                        
         USING IHADCB,R3                                                        
         IF    F2.DSNFALLO,BEGIN   ALLOCATE REQUEST...                          
         LH    R1,DSNNTRK          NO. OF TRACKS                                
         IF    DFL.DFUPTSPC,DCLALLO  ACCOUNT FOR SPACE                          
         B     DCLRET              SCRAM                                        
         END                                                                    
         MVC   DCBRECFM(1),RRECFM  RESET FOR CLOSE                              
         TM    F2,DSNFWRT+DSNFSCR+DSNFPDS  TEST FUNCTION                        
         BO    STOW                BR IF SCRATCH MEMBER                         
         CLEAR R15                 INIT RETURN CODE                             
         IF    F4.DSNFRENA,CLOSNEOB  For rename member, just close              
         TM    DCBDSORG,DSORGPO    TEST FOR PDS                                 
         BO    CLOSPDS             BR IF YES                                    
         TM    DFL,DFUPTSPC        IS SEQ SPACE ACCTG NEEDED                    
         BZ    CLOSE               BR IF NOT                                    
         VCALL AMODE24             ********                                     
         NOTE  (R3)                GET ADDR OF LAST DATA BLOCK                  
         VCALL AMODE31             ********                                     
         CLEAR R15                 INIT RETURN CODE                             
         SRL   R1,16               GET TT FROM TTRZ IN NOTE                     
         LTR   R1,R1               IS IT STILL ON FIRST TRACK                   
         BNZ   DCLOSE2             BRANCH NO -- NOT SMALL FILE                  
         L     R0,DEVBLOCK         GET BLKSIZE FOR DEVICE                       
         SRA   R0,1                HALVE IT                                     
         C2    R0,DCBTRBAL         COMPARE TO BALANCE ON TRACK                  
         BH    DCLOSE2             NOT SMALL IF HIGH                            
         OI    CPLFLG2,CPFSMALL    SET SMALL DATA SET FLAG                      
DCLOSE2  LA    R1,1(R1)            BY 1 BECAUSE REL TTR                         
         AH    R1,MEMBER+4         ADD IN ANY SCRATCH DIFFERENCE                
DCLALLO  ACALL UPDTSPAC                                                         
DCLRET   CLEAR R15                 INIT RETURN CODE                             
         B     CLOSE                                                            
**                                                                              
CLOSPDS  TM    F2,DSNFWRT          TEST OUTPUT                                  
         BZ    CLOSE               BR IF NOT                                    
* WE MIGHT GET TO THIS POINT WITH A SAVE OF A VOID RANGE                        
         IF    ^CPFSOME,CLOSVOID   WAS IT A VOID RANGE                          
         COMMENT ,                 YES, DON'T UPDATE DIRECTORY                  
**  SET UP FOR STOW OF NEW/REPL MEMBER                                          
         XC    BLDLTTR(STOWSZ-L'MEMBER),BLDLTTR  CLEAR TRASH                    
         CLEAR (STOWDATA,4)        Reserved                                     
         MVC   STOWDATA+4(4),=C'WYL0'  indicates WYLBUR format                  
         STCK  STOWDATA+8          High work of clock for date                  
         MVC   STOWDATA+12(8),CVBLANKS  account field                           
         MVC   STOWDATA+12(2),CPSGRP                                            
         MVI   STOWDATA+14,C'.'                                                 
         MVC   STOWDATA+15(3),CPSUSER                                           
         MVC   STOWDATA+20(L'STOWDATA-20),DSAVTIT  user title                   
         LH    R15,DSAVTITL        Title length                                 
         LA    R15,@R15+20+1       Account for header & round                   
         SRL   R15,1               In halfwords                                 
         STC   R15,STOWLEN         Save for STOW                                
* the stow routine calls eov to allocate a new extent if                        
* the eob will not fit in the data set.  wylbur does not                        
* allow extra extents to be allocated and many times wylbur                     
* would abend x37 because no extent was defined or no extent                    
* would be available.  therefore, the following code is needed                  
* to determine if the eob will fit without calling eov.  it is                  
* a duplicate of the test made by r21 mvt stow module igg0210a.                 
*                                                                               
* the code first checks if the eob will fit on the track being                  
* used.  if it won't then it uses the resident convert routines                 
* to determine if there is another track in the current extent.                 
* this is done by converting the current absolute address to                    
* ttrn form, add 1 track to the tt, and convert back to                         
* absolute form.  the convert back has a zero return code if                    
* the track is within the data set, or a four return code if not                
*                                                                               
* the resident routines use  r1 as the deb ptr, r2 as the                       
* absolute address area, r0 as the ttrn contents.  r1-r8 are                    
* not changed by the routines. par-r13 are changed. rar is the                  
* return register, and r15 is the entry address.                                
         L3    R2,DCBDVTBL+1       GET DEVTABLE ADDRESS                         
         LC    R1,@R2+7            OVERHEAD FOR KEYED LAST RECORD               
         TM    @R2+9,X'08'         IS OVERHEAD HALF WORD                        
         BZ    *+8                 NO, VALUE IS OK                              
         LH    R1,@R2+6            GET HALF WORD OVERHEAD                       
         LC    R0,@R2+8            FOR KEYED RECORDS                            
         SR    R1,R0               GET OVERHEAD FOR NO KEYS                     
         C2    R1,DCBTRBAL         WILL EOB FIT ON THIS TRACK                   
         BL    STOWCR1             YES, EVERYTHING IS OK                        
* WON'T FIT ON THIS TRACK, CALCULATE NEXT TRACK AND SEE IF                      
* STILL IN DATA SET EXTENT.                                                     
         L3    R1,DCBDEBAD+1       GET DEB ADDRESS                              
         L     R5,CVCURJCB                                                      
*-                                                                              
*-       Although the comment says below 16Meg, it is now okay to               
*-       be above the line and called in 31-bit mode                            
*-                                                                              
         WITH  (JCB,R5),'LA R2,JCBTEMP'  POINT TO 8-BYTE AREA, BELOW            
         MVC   @R2(8),DCBFDAD      LINE, SET IT TO CURRENT ABS ADDR             
         STM   R3,R13,@R13         SAVE REGISTERS                               
         LR    R3,R13              AND R13                                      
         L     R4,CVTPTR           GET POINTER TO CVT                           
         USING CVT,R4                                                           
         L     R15,CVTPRLTV        CONVERT MBBCCHHR                             
         BASR  R14,R15             TO TTRN                                      
         AL    R0,=XL4'10000'      POINT TO NEXT TRACK                          
         L     R15,CVTPCNVT        CONVERT TTRN                                 
         BASR  R14,R15             TO MBBCCHHR                                  
         DROP  CVT                                                              
         LM    R3,R13,0(R3)        RESTORE REGISTERS                            
         LTR   R15,R15             IS NEXT TRACK OK                             
         BNZ   CLOSVOID            NO, ABORT  THE STOW                          
STOWCR1  LR    R1,R3               SET DCB ADDR                                 
         LA    R0,MEMBER                                                        
         NI    CPLFLG2,255-CPFSCRTC  CLEAR IN CASE NOT REPL                     
         TM    DFL,DFREPL          WAS IT REPL?                                 
         BZ    STOW                GO DO NOW IF NO                              
         OI    CPLFLG2,CPFSCRTC    RESET IT                                     
         LCR   R1,R1               INDICATE REPL FUNCT                          
STOW     WAITOFF X,ABEND=CLSERR                                                 
         SVC   21                  STOW                                         
         IF    (R15,EQ,12),'LH R15,=H"-2"'  directory full                      
         B     CLOSE2                                                           
*                                                                               
* An attempt was made to save a member of a PDS but the range                   
* was void.  Recover by not updating the directory or DSCB.                     
* Also used to bypass STOW if EOB won't fit.                                    
CLOSVOID LNR   R15,R6              Set neg return code                          
* Enter here to close PDS without writing EOB.  Used by member rename           
CLOSNEOB NI    DCB+DCBOFLGS-IHADCB,X'7F'  Turn off last op write                
CLOSE    WAITOFF X,ABEND=CLSERR                                                 
CLOSE2   ST    R15,ERROR           SAVE RETURN CODE                             
         CLOSE MF=(E,OPENLIST)     CLOSE DATA SET                               
         SPACE 2                                                                
         IF    F2.DSNFWRT*DSNFPDS,BEGIN                                         
         OBTAIN DSCB               Get the new DSCB                             
         IF    (R15,NZ),SKIPUTIL   Forget utilization stats                     
         DEVTYPE DSDD,DVTAREA,DEVTAB                                            
         IF    (R15,NZ),SKIPUTIL   Forget utilization stats                     
         WAITON X,CLEAR            Back out of hyper-space                      
         MVC   CCREDT(2),DS1TRBAL  Save TRBAL for later                         
         MVC   CCREDT+2(2),DS1LSTAR Save LSTAR for later                        
         SPACE 1                                                                
         MVC   DS4DEVSZ+2(2),DVTNUMT "DVTOC2" needs this                        
         CLEAR SPTRK               Zero track count                             
         ACALL DVTOC2              Compute tracks for dataset                   
         L2    R3,SPTRK            R3 holds total tracks                        
         SPACE 1                                                                
         XR    R0,R0               Clear even reg                               
         L2    R1,DVTTRKSZ         Load bytes per track                         
         XR    R2,R2               Clear for ICM                                
         L2    R2,CCREDT           Load bytes left on last track                
         SR    R1,R2               Compute bytes used                           
         M     R0,=F'100'          Scale for percentage                         
         L2    R2,DVTTRKSZ         Load bytes per track                         
         DR    R0,R2               Compute percent of last track                
         LR    R2,R1               Save in R2 for now                           
         SPACE 1                                                                
         XR    R0,R0               Clear high dividend reg                      
         LH    R1,CCREDT+2         Load last track written                      
         M     R0,=F'100'          Scale for percentage                         
         AR    R1,R2               Add in last track percentage                 
         DR    R0,R3               Compute percentage utilized                  
         ST    R1,CPWK8            Save number for later                        
         SPACE 2                                                                
         WAITOFF X,ABEND=CLSERR    Back into hyper-space                        
         END                                                                    
         SPACE 2                                                                
SKIPUTIL IF    F4.DSNFENQ,BEGIN    DEQ required...                              
         DEQ   RET=HAVE,TCB=CVITCBP,MF=(E,ENQDSN)                               
         END                                                                    
         WAITON X,CLEAR                                                         
         B     CLSOK                                                            
CLSERR   MVC   ERROR,=A(X'FF')     DUMMY RETURN CODE FOR ABEND                  
CLSOK    ACALL VDALLO              GO CHECK DEALLO                              
         L     R15,ERROR           GET RETURN CODE                              
         LTR   R15,R15             WAS IT NORMAL?                               
         BZ    CHKCLCAT            BR IF YES                                    
         BM    DCX                 VOID OR STOW EOF RECORD PROB IF NEG          
         MVI   ERROR+1,C'7'        EITHER I/O ERROR OR LOGIC PROB               
         ACALL CATER                                                            
         ACALL RELIOWA             Release IOWA                                 
         L     R0,RECSIZE          RELOAD ERROR CODE                            
         LA    R15,RTNCATER        SET CATASTROPHIC ERROR                       
         B     DCXX                                                             
         SPACE 2                                                                
CHKCLCAT ACALL DCATLG              Do any cataloging                            
         ST    R15,ERROR                                                        
*                                                                               
DCX      ACALL RELIOWA             Release IOWA                                 
         L     R15,ERROR           RESTORE R15                                  
DCXX     LTR   R15,R15                                                          
         XEXIT R2,R8               RETURN                                       
         DROP  BR                                                               
*                                                                               
         DROP  IHADCB                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RELIOWA -- Routine to release an I/O work area.                              
*                                                                               
RELIOWA  PROC                                                                   
*-                                                                              
*-       Release any temporary GETMAIN buffer.                                  
*-                                                                              
         IF    ('LT R1,IOWALOC',NZ),BEGIN  release getmain buffer...            
         L     R0,IOWALEN                                                       
         CLEAR IOWALOC,IOWALEN                                                  
         FREEMAIN R,A=(1),LV=(0)                                                
         END                                                                    
*-                                                                              
*-       Release the IOWA resource.                                             
*-                                                                              
         VCALL ACEECLR             Clear user's ACEE pointer                    
         FREERSC IOW               Free up the I/O work area                    
         CLEAR CPIOWAP             No IOWA owned any more                       
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*  PROCESS REQUEST ON UNOPENED FILE                                             
*                                                                               
NOTOPEN  BASE                                                                   
         ABEND 69,DUMP,STEP                                                     
         DROP  BR                                                               
         TITLE 'Disk Wait (DWAIT) Routine'                                      
*** ROUTINE TO WAIT FOR DISK I/O                                                
*box                                                                            
*                                                                               
*  UNDER NORMAL CIRCUMSTANCES, THIS ROUTINE GOES DIRECTLY TO THE                
*    WYLBUR DISPATCHER.  THUS, THE REGISTERS ARE SAVED IN THE CP.               
*    THE EXCEPTION TO THIS IS WHEN AN I/O OPERATION IS COMPLETED                
*    IMMEDIATELY BECAUSE THERE IS NO MORE ROOM IN A PDS.  INSTEAD               
*    OF LETTING THE CHECK MODULE CALL EOV AND ABEND, THE APPROPRIATE            
*    FLAGS ARE TURNED OFF TO PREVENT STOW AND DSCB UPDATING AND                 
*    DCLOSE IS USED TO CLOSE THE DATA SET.  FOR THIS FUNCTION, IT               
*    IS NECESSARY TO SAVE THE REGISTERS IN THE STANDARD WAY SO THAT             
*    WHEN DCLOSE CALLS THE DISPATCHER THE REGISTERS IN THE CP ARE               
*    NOT OVERLAID CAUSING A LOOP.                                               
*                                                                               
DWAIT    XENTER R5,R8,*,LOCAL                                                   
         USING IOWA                                                             
         IF    (DECB.X'40',Z),DW   WAITING FOR POST...                          
**  IF OPERATION IS IMMEDIATELY COMPLETE CHECK FOR OPERATION                    
*        NOT INITIATED.  IF NOT, CHECK OUT OF SPACE AND BYPASS                  
*        FURTHER PROCESSING.                                                    
*                                                                               
POSTED   TM    DECB+5,X'20'        WAS IT A WRITE?                              
         BZ    DWNB                BR IF NO                                     
         TM    DCB+DCBCIND1-IHADCB,X'20'  WAS IT EOV?                           
         BZ    DWNB                BR IF NO                                     
         TM    DCB+DCBDSORG-IHADCB,DSORGPO  PDS?                                
         BZ    DWNB                No, then allow extents                       
**  OUT OF SPACE IN PDS. TURN OFF WRITE FLAG TO PREVENT DSCB                    
*      UPDATE DURING CLOSE.                                                     
         NI    DCB+DCBOFLGS-IHADCB,X'7F'                                        
         L3    R15,DCB+(DCBIOBA+1-IHADCB) GET IOB ADDR                          
         NI    @R15,X'BF'          INDICATE NO WRITE IN PROGRESS                
         NI    F2,255-DSNFWRT  TELL CLOSE IT'S INPUT/BYPASS STOW A06            
*  Note:  Call "DCLOSE", not "EXTCLOSE".  EXTCLOSE will try to                  
*     do a DSKWRITE if there is something in a buffer and will                  
*     loop.  All EXTCLOSE does is to call DCLOSE in the normal                  
*     case anyway.                                                              
         ACALL DCLOSE                                                           
         LA    R15,RTNNOSPC        RETURN CODE FOR NO SPACE                     
         B     DWTEXIT             BR TO END                                    
*                                                                               
DWNB     VCALL AMODE24             ********                                     
         CHECK DECB                                                             
DWCL     L3    R3,DECB+16+1        POINT TO IOB                                 
         LC    R0,DCB+DCBKEYLE-IHADCB  GET ANY KEY LENGTH                       
         AH    R0,DECB+6           ADD BLKSIZE TO GET ORIG LEN                  
         SH    R0,@R3+14           SUB RESID TO GET READ CNT                    
DWCL1    L     R15,RETCOD          LOAD RETURN CODE                             
DWTXW    VCALL AMODE31             ********                                     
*                                                                               
DWTEXIT  XEXIT R5,R8,LTR                                                        
*                                                                               
EODAD    LA    R15,4                                                            
         B     DWTXW                                                            
*                                                                               
SYNAD    LA    R3,4                                                             
         LCR   R3,R3               MAKE NEGATIVE                                
         ST    R3,RETCOD           SAVE RETURN CODE                             
         BR    RAR                                                              
*-                                                                              
*-        NOT COMPLETE                                                          
*-                                                                              
DW       SET   IWA1ACTV            SET IT ACTIVE                                
         L     JCBR,CVCURJCB       GET CURRENT JCB                              
         WITH  JCB,'PAUSE JCBWFD'  WAIT FOR THE POST                            
         B     POSTED                                                           
         TITLE 'Volume Allocate/Deallocate Subroutines'                         
VDALLO   XENTER R4,R8                                                           
         USING VOLDSECT,R5                                                      
ALOBASE  L     R5,VOLENTRY         GET VOLENTRY POINTER                         
         LH    R15,VOLUSECT        GET VOL USE COUNT                            
         LTR   R15,R15             POSITIVE USE COUNT?                          
         BNP   VDAVOL              BR IF NOT DEALLO NOW!                        
         BCT   R15,*+8             BUMP OVER IF IN USE                          
         B     VDAVOL              GO DEALLO VOLUME                             
         STH   R15,VOLUSECT        SAVE NEW USE COUNT                           
         CLEAR R15                                                              
         B     VALLODN             BR ALL DONE                                  
*                                                                               
VDAVOL   STH   R15,VOLUSECT        ZERO USE COUNT                               
         TM    VFLG1,VF1ON         IS IT ONLINE?                                
         BO    VALLODN             BR IF SO, ALL DONE                           
         XC    PARREQCD(PARAMEND-PARREQCD),PARREQCD  CLEAR PARMS                
         MVI   PARREQCD,PARRUNAL   UNALLOCATE REQUEST                           
         MVI   PARFLAG,PARFWAIT    WAIT ON RESOURCES                            
         MVC   PARDDNAM(8),VTYPE   SET CORRECT DDNAME                           
         LA    R1,PARREQCD         POINT TO PARM LIST                           
         ST    R15,VOLUCBAD        ZERO UCBADDR                                 
         TM    VFLG1,VF1CLR        CLEAR REQUEST?                               
         BZ    VDAWTOF             BR IF NOT                                    
         MVC   VNAME,CVBLANKS      CLEAR NAME                                   
         XC    VOLJUNK,VOLJUNK     CLEAR STAT AREA                              
         XC    VOLOWNR,VOLOWNR     CLEAR VOL OWNER AREA                         
VDAWTOF  MVC   WAVFLG1(2),VFLG1    SAVE FLAGS FOR DEALLO                        
         NI    VFLG1,255-VF1CLR-VF1PDA  RESET DEALLO FLAGS                      
         NI    VFLG2,0             ZERO FLAG2                                   
         OI    VFLG2,VF2ADACT      MARK VOLUME AS BUSY                          
         DYNALO (R1)               Call dynamic allocation                      
         NI    VFLG2,255-VF2ADACT  RESET VOLUME BUSY FLAG                       
         CLI   F2,DSNFVALO         ALLO/DEALLO CALL                             
         BE    VDATRC              BR IF SO TAKE RC EXIT                        
         TM    WAVFLG2,VF2DALLO    DID WE HAVE BAD VOL DEALLO?                  
         BO    NOTAVAIL            BR IF SO TAKE ERROR EXIT                     
VDATRC   LTR   R15,R15             HOW DID WE DO?                               
         BZ    VALLODN             BR IF OK                                     
         B     VALLORC             BR TO GIVE RETURN                            
         SPACE 2                                                                
VALLOCAT XENTER R4,R8                                                           
         BASE  ALOBASE                                                          
         L     R5,VOLENTRY         SET UP VOLENTRY                              
         TM    VFLG2,VF2ALLO       WANT TO ALLOCATE?                            
         BZ    ALDEVTYP            BR IF JUST DEVTYPE                           
         IF    ('LT R0,VOLUCBAD',NZ),ALLOGOT  Already there?                    
         XC    PARREQCD(PARAMEND-PARREQCD),PARREQCD CLEAR PARM LI               
         MVI   PARREQCD,PARRALLO   SET ALLOCATE REQUEST                         
         IF    VFLG2.VF2MOUNT,'MVI PARREQCD,PARRMNT'  Mount?                    
         MVC   PARDDCOD,VTYPE      MOVE IN DDCODE                               
         MVC   PARDDVOL,VNAME      AND VOLUME NAME                              
         MVI   PARFLAG,PARFWAIT    WAIT FOR IT TO COME                          
         LA    R1,PARREQCD         PT TO PARM LIST                              
         OI    VFLG2,VF2ADACT      SET VOLUME BUSY NOW                          
         DYNALO (R1)               Call dynamic allocation                      
         NI    VFLG2,255-VF2ALLO-VF2ADACT-VF2MOUNT                              
*                                  Reset ALLO/BUSY/MOUNT request                
VALLORC  CH    R15,=H'40'          RETURN CODE TOO HIGH?                        
         BH    ALLOCERR            REPORT ERROR                                 
         B     *+4(15)                                                          
         B     ALLOSUCC            0 - Success                                  
         B     ALLOBUSY            4 - CAN'T ENQ                                
         B     NOVPATH             8 - NO DD ENTRIES                            
         B     NOVOL               12 - VOLUME NOT MOUNTED                      
         B     ALLOCERR            16 - PARM ERROR                              
         B     ALLOCERR            20 - BAD DEVICE CODE                         
         B     ALLOCERR            24 - INVALID ADDRESS                         
         B     ALLOCERR            28 - INVALID DD (UNALLOCATE)                 
         B     ALLOCERR            32 - MISSING DD                              
         B     ALLOCERR            36 - JOB Q I/O ERROR                         
         B     NOTAVAIL            40 - VOLUME NOT ALLOCATABLE                  
         SPACE 2                                                                
ALLOSUCC LABEL                                                                  
**** PUT IN CHARGING ROUTINE STUFF HERE ****                                    
         ST    R0,VOLUCBAD         Save UCB address                             
ALLOGOT  LABEL                                                                  
         OI    VFLG1,VF1AVAIL      SET AVAILABLE                                
         ST    R0,UCB              TRANSFER UCB ADDR TO IOWA                    
ALDEVTYP DEVTYPE DSDD,DVTAREA,DEVTAB                                            
         MVC   DEVCODE(4),DVTDEVCD SAVE DEVCODE                                 
         MVC   DS4DEVSZ+2(2),DVTNUMT  SET IN CASE FMT4 NOT READ                 
         SR    R15,R15             SET R15 FOR OK                               
         CLI   DEVCODE+2,X'20'     IS IT DIRECT ACCESS?                         
         BNE   NOVOL               BR IF NOT                                    
         COUNT VOLUSECT,LENGTH=2   BUMP VOLUME USE COUNT                        
         B     VALLODN             FINISH UP                                    
*                                                                               
ALLOBUSY LA    R15,RTNBUSY         SET RETURN CODE                              
         B     VALLODN                                                          
*                                                                               
CANTALLO LA    R15,RTNALLER        SET RETURN CODE                              
         B     VALLODN                                                          
*                                                                               
ALLOCERR LA    R15,RTNALLER        SET RETURN CODE                              
         B     VALLODN                                                          
*                                                                               
NOTAVAIL LA    R15,RTNVOLNA        SET RETURN CODE                              
         B     VALLODN                                                          
*                                                                               
NOVPATH  LA    R15,RTNVOLNO        SET RETURN CODE                              
         B     VALLODN                                                          
*                                                                               
NOVOL    LA    R15,RTNBDVOL        INVALID VOLUME REQUEST                       
*        B     VALLODN                                                          
         DROP  VOLDSECT                                                         
VALLODN  XEXIT R4,R8,LTR                                                        
         SPACE 2                                                                
         QLTORG                                                                 
         TITLE 'Catalog Manipulation (DCATLG) Routine'                          
***  ROUTINE TO DO CATLG/RECATLG/UNCATLG                                        
*                                                                               
DCATLG   XENTER R2,R8,32,LOCAL                                                  
         CLEAR R15                                                              
         IF    CPFNOCAT,DCATNO     Nothing to do, scram                         
         IF    (^CPFUNCAT,AND,(DSNON6,EQ,DSNCATV),AND,                 X        
               ^F4.DSNFRENA),DCATNO  scram                                      
         IF    F2.DSNFPDS,DCATNO   Skip for PDS operations                      
*                                                                               
         IF    ^CPFUNCAT,BEGIN     Going to catalog...                          
         IF    ^DSNFBADN,EXIT      it's a good name, scram                      
         IF    CPSFSPR,EXIT        Allow good guys                              
         LA    R15,24              Invalid dsname                               
         B     DCATX                                                            
         END                                                                    
*                                                                               
GETCATF  L     R15,CAMCAT          Catalog                                      
         IF    CPFUNCAT,'L R15,CAMUNC'  uncatalog                               
         IF    CPFRECAT,'L R15,CAMRECAT'  recatalog                             
         ST    R15,CATLST          AND STORE IN CAMLIST                         
         NI    DEVCODE+1,255-X'20' TURN OFF SHARED CPU DASD BIT                 
*              FOR CATLG ENTRY (SAME AS IBM UTILITIES)                          
         MVI   SCRRET,0            CLEAR DATA SET SEQ NO FIELD                  
         VCALL ACEECLR             SET TO BYPASS RACF PROTECTION                
         WAITOFF                                                                
         LA    R1,CATLST           SET TO USE                                   
*  Do CVOL lookup for standard dsnames.  Since dsn may be in "dsname"           
*  or "newdsnam" field, pick up address from CAMLST.                            
         DOWYLCVL L:@R1+4                                                       
         CATALOG (1)               DO FUNCTION                                  
         WAITON                                                                 
         LA    R1,@R1              DROP HIGH BYTE                               
         LA    R15,@R15            Drop high byte                               
         CH    R15,=H'8'           RC=8 means real code in R1                   
         BNE   DCATX               BR IF NOT RETURN CODE 8                      
         IF    ((R1,Z),AND,(R0,EQ,56)),'LA R15,68; B DCATX'                     
         IF (R1,Z),'LR R1,R0; LA R1,@R1'                                        
         IF    ^CPFRECAT,DCATXX    Not recatalog, we give up                    
         CH    R1,=H'8'            WAS DATA SET NOT FOUND                       
         BNE   DCATXX              NO, MUST BE REAL ERROR                       
         CLEAR CPFRECAT            Not a recatalog                              
         B     GETCATF             GO DO CATLG                                  
*                                                                               
DCATXX   LA    R15,32(,R1)         Set R15 to RC+32                             
         B     DCATX                                                            
*                                                                               
DCATNO   SET   CPFNOCAT            No cataloging was done                       
DCATX    IF    (R15,NZ),'SET CPFNOCAT'  we didn't catalog it                    
         XEXIT ,,LTR                                                            
         SPACE 5                                                                
         DS    0F                                                               
CAMUNC   CAMLST UCATDX,0           UNCATLG AND DELETE INDICES                   
         ORG   CAMUNC+4                                                         
CAMCAT   CAMLST CATBX,0,,0         CATLG AND BUILD INDICES                      
         ORG   CAMCAT+4                                                         
CAMRECAT CAMLST RECAT,0,,0         RECATLG EXISTING DATA SET                    
         ORG   ,                                                                
         TITLE 'Space Accounting Update Routine'                                
***  ROUTINE TO UPDATE SPACE ACCOUNTING INFORMATION IN KWR                      
*                                                                               
UPDTSPAC XENTER R15,R8                                                          
*                                                                               
         IF    (R1,NZ),BEGIN       Update space ...                             
         LR    R0,R1               R0 =  change in space                        
         LA    R1,KWR              R1 -> KWR                                    
         VCALL EXIT5               LOCAL exit - update space                    
         END                                                                    
*                                                                               
*                                                                               
*   The following SHOW SPACE command was deleted on 11/14/00                    
*   by M. Durket. WYLBUR no longer blocks sequential saves                      
*   and recovery because it uses WINGS. Nightly accounting                      
*   now will handle the overspace issue.                                        
*                                                                               
*        LA    R0,1                Conditional show space                       
*        LA    R1,KWR              Point to password record                     
*        VCALL EXIT3               LOCAL exit - show space                      
*                                                                               
         XEXIT R15,R8                                                           
         DROP  BR                                                               
         TITLE 'SHOW DSNAMES/DIRECTORY/CATALOG (DVTOC) Routine'                 
*   SHOW DSNAMES                                                                
*                                                                               
DVTOC    L     RAR,@R13            GET FINAL EXIT RETURN                        
DVTOC2   XENTER R2,R8,32,LOCAL     AND RESAVE REGS                              
         L     JCBR,CVCURJCB                                                    
         USING JCB                                                              
         L     IOWAR,CPIOWAP       RESTORE IOWA REG                             
         TM    F2,DSNFSHOW         IS IT A SHOW COMMAND?                        
         BZ    SDSNSPAC            NO - COMPUTE DSCB SPACE                      
         ST    15,PAGEGET          SAVE SUBR ADDRESS                            
         LA    R1,FOURS            DCB                                          
         ST    R1,IOBDCB           STORE IT IN DCB                              
         LA    R1,DECB             GET ADDR OF ECB FOR EXCP I/O                 
         ST    R1,IOBECB           SAVE IT IN IOB                               
         MVC   CCWSW+1(3),VTOCCCW  SET SHOW DSNAMES TIC ADDR                    
         MVI   KEY,SCHKADEQ+MT     RESET CCW COMMAND CODE                       
         MVI   ENDCCW1,SCHKADEQ+MT                                              
         LH    R0,DSNWANL          GET PATTERN LENGTH                           
         LTR   R0,R0               IS THERE ONE?                                
         BNZ   BLF                 BR IF NOT                                    
         LA    R0,1                SET DUMMY ONE FOR CCW                        
         MVI   DSNAME,X'80'        SET LOW VALUE IN AREA                        
         MVI   KEY,SCHKADHI+MT     USE SEARCH HI VICE EQ                        
         MVI   ENDCCW1,SCHKADHI+MT                                              
BLF      STH   R0,KEY+6            LENGTH OF PATTERN                            
         STH   R0,ENDCCW1+6                                                     
         CLI   DEVCODE+3,8         IS DEVICE 2314?                              
         BE    DO2314              BR IF YES                                    
**  SCH KEY AND DATA COMMANDS ONLY VALID ON 2314                                
         XI    KEY,SWKADKY         SWAP TO SCH KEY                              
         XI    ENDCCW1,SWKADKY     SAME                                         
DO2314   BASR  RAR,R15             GO TO PAGEGET SUBR                           
         BZ    VTOCERR             NO PAGES                                     
         LA    R0,1                INIT COUNT                                   
         STH   R0,@PAR                                                          
         MVI   @PAR+2,0            INIT PAGE                                    
         PMARK PAR                 MARK THE PAGE AS CHANGED                     
*                                                                               
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?                        
         BZ    VTOCLP              BR IF NOT                                    
**  OTHERWISE, IT'S SHOW DIRECTORY                                              
         MVC   SEEK(4),DS1EXT1+2   SET DIRECTORY SEEK ADDR                      
         MVI   SEEK+4,0            RO                                           
         MVC   CCWSW+1(3),PDSCCW   SET SHOW DIR TIC ADDR                        
         EJECT                                                                  
VTOCLP   LA    R0,6                PUT OUT VOLID MSG                            
         LA    R1,DSVID                                                         
         LCALL VTOCMSG                                                          
         IF    F5.DSNFONLY,OBTFMT1 Just do an "OBTAIN" ...                      
         TM    F2,DSNFCAT          IS IT SHOW CATALOG?                          
         BO    SHOWCAT             BR IF YES                                    
         LA    R3,FOURS            VTOC DCB                                     
         USING IHADCB,R3                                                        
         MVC   DCBDDNAM(8),DSDD    INITIALIZE IT                                
         DROP  IHADCB                                                           
*                                                                               
         WAITOFF ABEND=VTOCERR                                                  
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?                        
         BO    OPENEXCP            BR IF YES                                    
         OBTAIN VTOC                                                            
         WAITON ,CLEAR                                                          
         LTR   R15,R15             WAS IT OK                                    
         BZ    DVTOBTOK            BR IF OBTAIN OK                              
         CH    R15,=H'8'           WAS IT VALID ERROR?                          
         BE    DVTOBTOK            BR IF NO                                     
         CH    R15,=H'4'           WAS IT VOL NOT MOUNTED                       
         BNE   VTOCERR             BR IF NO - I/O ERROR                         
         LA    R15,RTNBDVOL        INDICATE BAD VOLUME                          
         ST    R15,RETCOD                                                       
         B     VTOCRET3            GO EXIT                                      
         SPACE 2                                                                
DVTOBTOK LABEL                                                                  
******** DEVTYPE DSDD,DVTAREA,DEVTAB                                            
         LH    R1,DVTNUMT                                                       
         DECR  R1                                                               
         STH   R1,NUMTRK                                                        
         MVC   ENDTEST(4),VTOCEND                                               
         MVC   ENDTEST+4(1),DS4DEVDT  SET UP FOR TEST                           
         MVC   SEEK(4),VTOCBEG                                                  
         MVI   SEEK+4,0                                                         
*                                                                               
         WAITOFF ABEND=VTOCERR                                                  
         RDJFCB (FOURS),MF=(E,OPENLIST)                                         
         ACALL CLRJFCB             GO CLEAN UP THE JFCB                         
         MVC   JFCBDSNM(44),DSN                                                 
OPENEXCP OPEN  (FOURS,INPUT),TYPE=J,MF=(E,OPENLIST)                             
         WAITON ,CLEAR                                                          
         L     R3,VOLENTRY                                                      
         WITH  (VOLDSECT,R3),'COUNT VOLOPNS'                                    
         LA    R3,FOURS                                                         
         WITH  (IHADCB,R3),BEGIN                                                
         TM    DCBOFLGS,X'10'      IS IT OPEN                                   
         BZ    VTOCERR             NO,ERROR                                     
         END                                                                    
         MVI   SBUF,X'40'          CLEAR SHOW DSNAMES BUFFER                    
         MVC   SBUF+1(SBSZ-1),SBUF                                              
         SET   (INXVTOC,EQ)        CLEAR INDEXED VTOC PROCESSING                
         SPACE                                                                  
         SPACE                                                                  
SRCHSTRT LABEL                                                                  
         IF    (^F2.DSNFPDS,AND,DS4VTOCI.X'81'),BEGIN                           
         WAITOFF                                                                
         IF    INXVTOC,BEGIN       Test for first pass through                  
         WITH  (IHADCB,R1),BEGIN   Addressability to DCB                        
         LA    R1,FOURS            Address of open VTOC DCB                     
         L     R0,DCBDEBAD         Load address for DEB                         
         END                                                                    
         XC    CVAFPL(64),CVAFPL       Clear CVAF parameter list                
         MVC   CVAFPL(4),=C'CVPL'      Set parameter list ID                    
         MVC   CVAFPL+4(2),=AL2(64)    Set parameter length                     
         MVC   CVAFDSN,DSNAME          Set pattern data set name                
         CVAFSEQ ACCESS=GTEQ,DSN=CVAFDSN,IXRCDS=KEEP,                  X        
               DSNONLY=YES,ARG=DS1PTRDS,                               X        
               DEB=(0),MF=(E,CVAFPL)                                            
         CLEAR INXVTOC             Clear first pass flag                        
         END   ELSE,BEGIN          Second and subsequent calls                  
         CVAFSEQ ACCESS=GT,MF=(E,CVAFPL)                                        
         END                                                                    
         LR    R2,R15              SAVE CVAF RETURN CODE                        
         WAITON                                                                 
         IF    (R2,GT,4),CVAFDONE  Error abort on CVAFSEQ routine               
         IF    EQ,BEGIN            Check for end of data return                 
         CLI   CVAFPL+7,X'20'      Check status byte for EOD                    
         IF    EQ,'CLEAR R2'       Clear CVAF return to zero                    
         B     CVAFDONE            And exit processing                          
         END   ,                                                                
         LH    R1,DSNWANL          Set pattern name length                      
         IF    (R1,P),BEGIN        Test for pattern extension                   
         DEX   R1,'CLC DSNAME(0),CVAFDSN'    TEST FOR PAST PATTERN              
         IF    NE,CVAFDONE                   EXIT CVAF PROCESSING               
         END                                                                    
         WAITOFF                                                                
         OBTAIN VTOC3              CHEAT - PUT IN FMT3 AREA                     
         LR    R2,R15              SAVE RETURN CODE                             
         WAITON                                                                 
         IF    (R2,NZ),CVAFDONE    ERROR IN OBTAIN, ABORT COMMAND               
         IF    JCBFATTN,CVAFDONE   IDLE ATTENTION COMMAND ABORT                 
         B     SDSNWANT            GO PROCESS THIS FMT1 DSCB                    
         END                                                                    
         LA    R1,SRCHCCW                                                       
         ST    R1,IOBSTART                                                      
*                                                                               
EXCP     IF    JCBFATTN,VTOCERR    Idle attn to abort commnd                    
         EXCP  IOB                 NO, START NEXT I/O                           
         LCALL VTOCWT              WAIT                                         
*                                                                               
         TM    DECB,X'20'          OK COMPLETE                                  
         BO    ENDCHK                                                           
         TM    IOBSNS+1,X'20'                                                   
         BO    NEWCYL                                                           
         IF    (CPLFLG3.CPFBLOCK,AND,F2.DSNFPDS),DONE                           
VTOCERR  LA    R15,RTNSHERR        SHOW ERROR RETURN CODE                       
         B     VTOCRET             EXIT                                         
*                                                                               
NEWCYL   CLEAR R1                                                               
         STC   R1,SEEK+4                                                        
         IC    R1,SEEK+1                                                        
         LA    R1,@R1+1                                                         
         STC   R1,SEEK+1                                                        
         B     EXCP                                                             
*                                                                               
ENDCHK   CLC   IOBCSW+1(3),LASTCCW                                              
         BE    DONE                                                             
         CLC   IOBCSW+1(3),LASTCCW1  WAS IT LAST REC AND EQUAL                  
         BE    READOK              GO PROCESS DSNAME                            
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?                        
         BO    PDSRDOK             BR IF YES                                    
**  DECREMENT DA ADDR BY ONE RECORD AND GO READ IT                              
         LC    R1,SRCHR                                                         
         DECR  R1                                                               
         LTR   R1,R1                                                            
         STC   R1,SRCHR                                                         
         BP    SAMETRK                                                          
         IC    R1,DS4DEVDT         # VTOC RECS PER TRK                          
         STC   R1,SRCHR                                                         
         LH    R1,SRCHH                                                         
         DECR  R1                                                               
         STH   R1,SRCHH                                                         
         LTR   R1,R1                                                            
         BNM   SAMETRK                                                          
         LH    R1,NUMTRK           # OF LAST TRK ON CYL                         
         STH   R1,SRCHH                                                         
         LH    R1,SRCHC                                                         
         DECR  R1                                                               
         STH   R1,SRCHC                                                         
SAMETRK  MVC   SEEK(5),SRCHC                                                    
         LA    R1,READCCW                                                       
         ST    R1,IOBSTART                                                      
         EXCP  IOB                                                              
         LCALL VTOCWT              WAIT                                         
*                                                                               
         TM    DECB,X'20'          OK COMPLETE                                  
         BZ    VTOCERR             ERROR                                        
*                                                                               
READOK   CLI   DS1FMTID,C'1'       IS REC FMT 1?                                
         BNE   DONTWANT            BR IF NO                                     
         LH    R2,DSNWANL          GET PATTERN LENGTH                           
         LA    R15,DS1DSNAM(R2)    GET OFFSET IN DSN                            
         LA    R3,44               LENGTH OF DSN                                
         SR    R3,R2               LENGTH REMAINING FOR RANGE                   
         DEX   R3,SDSNCLC1         CHECK DSNAME IN BOUNDS                       
         BL    OUTOFRNG            BR IF LOWER THAN LOW BOUND                   
         EX    R3,SDSNCLC2         CHECK DSNAME IN BOUNDS                       
         BH    OUTOFRNG            BR IF HIGHER THAN UPPER BOUND                
         TM    CPLFLG3,CPFEXCL     TEST FOR EXCLUDE RANGE                       
         BO    DONTWANT            BR IF YES                                    
         B     SDSNWANT            WE WANT THIS ONE                             
OUTOFRNG TM    CPLFLG3,CPFEXCL     TEXT FOR EXCLUDE RANGE                       
         BZ    DONTWANT            BR IF NO                                     
*                           THEN OUT OF RANGE IS IN EXCL RANGE                  
SDSNWANT LABEL                                                                  
**  GET PERTINENT STUFF FROM FORMAT 1 DSCB                                      
         MVC   SBDSN,DS1DSNAM      DSNAME                                       
         MVC   SBCRDT,DS1CREDT     CREATION DATE                                
         MVC   SBEXDT,DS1EXPDT     Expiration (used to hold LA date)            
         IF  ((DS1REFD+1,GE,=H'1'),AND,(DS1REFD+1,LE,=H'366')),BEGIN            
         MVC   SBEXDT,DS1REFD      Last referenced date (MVS)                   
         END                                                                    
         MVC   SBDSIND,DS1DSIND    Data set indicators                          
         MVC   SBNOEX,DS1NOEPV     NUMBER OF EXTENTS                            
         MVC   SBDSORG,DS1DSORG    DSORG                                        
         MVC   SBRECFM,DS1RECFM    RECFM                                        
         MVC   SBLRECL,DS1LRECL    LRECL                                        
         MVC   SBBLKSZ,DS1BLKL     BLKSIZE                                      
         MVC   SBKEYL,DS1KEYL      KEY LENGTH                                   
         MVC   SBLB,DS1LSTAR       LAST RECORD WRITTEN                          
         MVC   SBACCTG,0           Zero--no longer set DS1SPACE                 
**  THE FOLLOWING CODE IS ALSO USED AS A SUBROUTINE                             
**  COMPUTE AMOUNT OF SPACE ALLOCATED FROM EXTENT INFORMATION                   
SDSNSPAC CLEAR R3                  Total space (in trks)                        
         LA    R0,3                Number of extents in fmt 1                   
         LC    R2,DS1NOEPV         Total number of extents                      
         IF    DS1EXT1.X'40','LA R2,@R2+1'  Count user label extent             
         LA    R15,DS1EXT1         Addr of first extent descrip                 
NXTXSECT CR    R2,R0               TOTAL REMAINING VS MAX THIS SECT             
         BH    MULTSECT            BR IF MORE SECTIONS FOLLOWING                
         LTR   R0,R2               TOTAL IS REMAINING                           
         BZ    XTNTALL             UNLESS ZERO                                  
MULTSECT SR    R2,R0               REMAINING AFTER THIS SECTION                 
XTNTLP   CLI   @R15,0              IS THIS EXTENT ACTIVE?                       
         BE    XTNTDONE            BR IF NO                                     
         MVC   CPDOUB,@R15+2       MOVE LOWER/UPPER DESCRIP                     
         LH    R1,CPDOUB+6         LAST TRACK                                   
         LA    R1,@R1+1            +1 FOR SUBT                                  
         SH    R1,CPDOUB+2         LESS FIRST TRACK                             
         AR    R3,R1                                                            
         LH    R1,CPDOUB+4         UPPER CYL                                    
         SH    R1,CPDOUB           LOWER CYL                                    
         MH    R1,DS4DEVSZ+2       * # TRKS/CYL                                 
         AR    R3,R1                                                            
XTNTDONE LA    R15,DS1EXT2-DS1EXT1(R15)  TO NEXT DESCRIP                        
         BCT   R0,XTNTLP           PROCESS NEXT ONE                             
**  ALL EXTENTS IN THIS SECTION OR DSCB PROCESSED                               
         LTR   R2,R2               ARE THERE MORE?                              
         BZ    XTNTALL             BR IF NO                                     
         CLI   DS3FMTID,C'3'       HAS FMT 3 BEEN READ?                         
         BE    FMT3SEC2            BR IF YES - SECTION 2                        
READFMT3 WAITOFF                                                                
         OBTAIN VTOC3                                                           
         WAITON                                                                 
         LTR   R15,R15             TEST NORMAL                                  
         BZ    XTNTFMT3            BR IF YES                                    
FMT3ERR  LNR   R3,R3               FLAG TOTAL AS INCOMPLETE                     
         B     XTNTALL             SKIP IT                                      
*                                                                               
XTNTFMT3 CLI   DS3FMTID,C'2'       IS IT FORMAT 2?                              
         BE    READFMT3            BR IF YES - GO GET FMT 3                     
***      CLI   DS3FMTID,C'5'       IS IT FORMAT 5?                              
***      BE    FMT5PROC            BR IF YES                                    
         CLI   DS3FMTID,C'3'       WAS DSCB FMT 3?                              
         BNE   FMT3ERR             BR IF NO - ERROR                             
         LA    R0,4                4 EXTENTS IN FIRST SECTION                   
         LA    R15,DS3EXTNT        ADDR OF FIRST SECTION                        
         B     NXTXSECT            GO PROCESS IT                                
*                                                                               
FMT3SEC2 LA    R15,DS3ADEXT        ADDR OF SECTION 2 IN FMT 3                   
         LA    R0,9                9 EXTENTS IN SECT 2                          
         B     NXTXSECT                                                         
         SPACE 2                                                                
XTNTALL  STH   R3,SPTRK            SAVE TOTAL                                   
         CLEAR R15                 RESET RETURN CODE                            
         TM    F2,DSNFSHOW         IS IT A SHOW COMMAND?                        
         BZ    VTRX                NO - SUBROUTINE EXIT                         
**   END OF SUBROUTINE CODE                                                     
         LA    R1,SBUF             ADDR OF BUFFER                               
         LA    R0,SBSZ             LENGTH OF ENTRY                              
         LCALL VTOCMSG             PUT IT OUT                                   
         IF    F5.DSNFONLY,DONE    Just want one quick and dirty                
         IF    DS4VTOCI.X'81',SRCHSTRT                                          
DONTWANT CLC   IOBCSW+1(3),LASTCCW1  WAS THIS THE FUNNY CASE                    
         BNE   SRCHSTRT            NO CONTINUE SEARCH                           
*                                                                               
DONE     CLEAR R15                 COMP CODE                                    
         B     VTOCRET                                                          
         SPACE ,                                                                
CVAFDONE LABEL ,                   END OF INDEXED VTOC PROCESSING               
         WAITOFF ,                 ENTER SUBTASK MODE                           
         CVAFDIR ACCESS=RLSE,IXRCDS=NOKEEP,                            X        
               MF=(E,CVAFPL)       Release CVAF buffers                         
         WAITON ,                  NORMAL MODE                                  
         CLEAR R15                 CLEAR VTOC RETEURN CODE                      
         IF    (R2,NZ),'LA R15,RTNSHERR'     SET VTOC ERROR                     
         B     VTOCRET             CLEANUP RESOURCES AND RETURN                 
         SPACE 2                                                                
SDSNCLC1 CLC   @R15(0),SDSNQLB                                                  
SDSNCLC2 CLC   @R15(0),SDSNQUB                                                  
         SPACE 3                                                                
OBTFMT1  MVI   SBUF,C' '           Clean up                                     
         MVC   SBUF+1(SBSZ-1),SBUF   the buffer                                 
         WAITOFF ABEND=OBTERR      Into subtask control                         
         OBTAIN DSCB               Get FORMAT1 DSCB                             
         LR     R2,R15             Save cond code                               
         WAITON ,CLEAR             Out of subtask control                       
         LR     R15,R2             Reload return code                           
         IF     (R15,EQ,0),BEGIN   Got it ...                                   
         MVC    DS1DSNAM,DSNAME    Simulate "READ KEY AND DATA"                 
         B      SDSNWANT           Off to common code                           
         END                                                                    
         IF     (R15,EQ,4),'LA R15,RTNBDVOL; B VTOCRET'                         
         IF     (R15,EQ,8),'CLEAR R15; B VTOCRET'                               
OBTERR   LA     R15,RTNSHERR       Set error code                               
         B      VTOCRET            Return                                       
         EJECT                                                                  
*                                                                               
*** ROUTINE TO PROCESS DIRECTORY BLOCK FOR SHOW DIRECTORY                       
*                                                                               
PDSRDOK  LA    R2,DBUF+8           ADDR OF DIRECTORY BLOCK                      
         IF    CPLFLG3.CPFBLOCK,BEGIN  "BLOCK" option on "SHOW DIR"             
         INCR  R0,CPWK8            Up total dir block count                     
         IF    (CPWK9,NZ),PDENDBLK This is an unused block                      
         END                                                                    
PDSRDOK2 LH    R1,@R2              LENGTH OF DATA                               
         CH    R1,=Y(256)          IS LENGTH OK?                                
         BH    VTOCERR             BR IF TOO LONG - SOMETHING BA                
         LA    R1,0(R1,R2)         ADDR OF END OF BLOCK                         
         DECR  R1                  ADDR OF LAST CHAR IN BLOCK                   
         LA    R0,2                LENGTH OF BLOCK COUNT FIELD                  
PDSUNBLK BXH   R2,R0,PDENDBLK      BR IF NO MORE ENTRIES IN BLK                 
         LA    R0,12               LENGTH OF STD STUFF                          
         IC    R4,@R2+11           GET "C"                                      
         N     R4,=X'0000001F'     CLEAR ALL EXCEPT LENGTH                      
         SLL   R4,1                WHICH IS IN HALFWORDS                        
         AR    R0,R4               TOTAL ENTRY LENGTH                           
         TM    F2,DSNFCAT          IS IT SHOW CATLG?                            
         BOR   RAR                 RETURN IF YES                                
         IF    (@R2,EQ,X'FF'),BEGIN Check for last member                       
         IF    (CPLFLG3.CPFBLOCK,AND,F2.DSNFPDS),BEGIN                          
         MVC   CPWK9,CPWK8         Last block used is current count             
         B     PDENDBLK            Keep reading till eof                        
         END                                                                    
         B     DONE                All done                                     
         END                                                                    
*                                                                               
SCATPRNM CLC   @R2(8),SDSNQLB      Member in lower bound?                       
         BL    PDSORNG             BR IF BELOW LOWER BOUND                      
         CLC   @R2(8),SDSNQUB      Upper bound?                                 
         BH    PDSORNG             BR IF ABOVE UPPER BOUND                      
**  PDS MEMBER IN SPECIFIED RANGE                                               
         TM    CPLFLG3,CPFEXCL     EXCLUDE RANGE?                               
         BO    PDSUNBLK            BR IF YES                                    
         B     HAVEMBR             NO - PROCESS IT                              
**  PDS MEMBER OUTSIDE SPECIFIED RANGE                                          
PDSORNG  TM    CPLFLG3,CPFEXCL     EXCLUDE RANGE?                               
         BZ    PDSUNBLK            BR IF NOT                                    
*                 OUTSIDE EXCLUDED RANGE IS INSIDE DESIRED RANGE                
HAVEMBR  TM    F2,DSNFCAT          IS IT SHOW CATLG?                            
         BO    HAVEC               BR IF YES                                    
         LR    R3,R1               SAVE R1                                      
         LR    R1,R2               ADDR OF ENTRY                                
         LCALL VTOCMSG             GO ADD TO DISPLAY PAGE                       
         LR    R1,R3               RESTORE R1 FOR BXH                           
         B     PDSUNBLK                                                         
         SPACE 4                                                                
**  END OF DIRECTORY BLOCK                                                      
PDENDBLK TM    F2,DSNFCAT          IS IT SHOW CATLG?                            
         BO    VTOCERR             ERR IF SO                                    
         MVC   SEEK(5),SRCHC       ADDR OF LAST BLOCK READ                      
         IF    ((DBUF,EQ,X'FF'),AND,^CPLFLG3.CPFBLOCK),DONE                     
         B     SRCHSTRT            GO GET NEXT BLOCK                            
         EJECT                                                                  
*                                                                               
***  ROUTINE TO PROCESS CATALOG BLOCKS                                          
*                                                                               
SHOWCAT  LH    R0,DSNWANL          PATTERN LENGTH                               
         LTR   R0,R0               IS PATTERN LENGTH ZERO?                      
         BZ    FSTCTBLK            GO READ HIGHEST LEVEL IF SO                  
         CLI   RETCOD+3,0          WAS DSN FOUND BY LOCATE?                     
         BE    SCATDSN             BR IF YES                                    
         CLI   RETCOD+3,12         WAS INDEX LEVEL FOUND?                       
         BE    SCATGO              BR IF YES                                    
         L     R0,RETCOD           SOMETHING WRONG                              
         B     VTOCERR             SCRAM                                        
         SPACE 2                                                                
***  GO DEBLOCK INDEX BLOCK                                                     
*                                                                               
SCATGO   LA    R2,CATBLOCK         FOR SHOW DIR ROUTINE                         
         LCALL PDSRDOK2            USE SHOW DIR RTN TO DEBLOCK                  
         B     SCATGO2                                                          
SCATNEXT LCALL PDSUNBLK            GET NEXT ENTRY                               
SCATGO2  CLC   @R2(4),=F'-1'       IS IT INDEX LINK ENTRY?                      
         BNE   SCATDATA            BR IF NOT                                    
**  ENTRY SHOULD BE INDEX LINK                                                  
         CLI   @R2+11,0            VERIFY ENTRY TYPE                            
         BNE   VTOCERR             BR IF NOT                                    
         CLC   @R2+8(3),=XL3'0'    IS IT END OF LIST?                           
         BE    DONE                BR IF YES                                    
         MVC   CATNTTR(3),@R2+8    NEXT TTR                                     
         OI    USCATL2,CAMFCVOL    SET TO USE CVOL                              
LOCATTR  WAITOFF                                                                
         LOCATE USCATL2            LOCATE NEXT BLOCK                            
         WAITON                                                                 
         LTR   R0,R15              LOCATE OK?                                   
         BNZ   VTOCERR             BR IF NOT                                    
         B     SCATGO              NOW GO AHEAD                                 
         SPACE 4                                                                
***  NULL PATTERN - READ FIRST CATALOG BLOCK FROM SYSRES                        
FSTCTBLK NI    USCATL2,255-CAMFCVOL  FORCE USE OF SYSRES                        
         MVC   CATNTTR(3),=AL3(1)  TTR=001                                      
         B     LOCATTR             GO DO LOCATE                                 
         EJECT                                                                  
***  PROCESS OTHER ENTRY TYPES                                                  
*                                                                               
SCATDATA LA    RAR,SCATGO2         LOAD IN CASE OUT OF LIMITS                   
         B     SCATPRNM            GO CHECK IN LIMITS SPECIFIED                 
HAVEC    MVI   SCBUF,X'40'                                                      
         MVC   SCBUF+1(SCBSZ-1),SCBUF  CLEAR BUFFER                             
         MVC   SCBNM,@R2           MOVE INDEX NAME                              
         CLI   11(R2),5            CHECK FOR DSN POINTER ENTRY                  
         BH    SCATDSP             BR IF YES                                    
         LC    R4,@R2+11           GET TYPE                                     
         SLL   R4,2                *4                                           
         B     *+4(R4)             BR TO PROPER ROUTINE                         
         B     SCATINDX            INDEX POINTER ENTRY                          
         B     SCATVCB             VOLUME CONTROL BLOCK ENTRY                   
         B     SCATGDG             GENERATION DATA GROUP ENTRY                  
         B     SCATNEXT            INDEX CONTROL ENTRY - IGNORED                
         B     SCATALAS            ALIAS ENTRY                                  
         B     SCATCVOL            CVOL ENTRY                                   
         SPACE 10                                                               
**  ENTRY HERE FOR DSNAME SPECIFIED TO ORIG LOCATE                              
SCATDSN  MVI   SCBNM,X'FF'         INDICATE NAME IN DSNWA                       
         MVI   SCBCODE,C'D'        ENTER DSNAME CODE                            
         MVC   SCBNVOLS,CATNOENT   GET NUMBER OF VOLUMES                        
         MVC   SCBVOL,CATVOL       GET VOLUME NAME                              
         MVC   SCBDEVCD,CATDVTYP   Get device codes                             
         MVC   SCBSEQNO,CATSEQNO   SAVE SEQUENCE NO                             
         LA    R1,SCBUF                                                         
         LA    R0,SCBSZ                                                         
         LCALL VTOCMSG                                                          
         B     DONE                EXIT                                         
         SPACE 2                                                                
**  INDEX POINTER ENTRY                                                         
SCATINDX MVI   SCBCODE,C'I'        ENTER INDEX CODE                             
         B     SCATWRT             THAT'S ALL                                   
         SPACE 2                                                                
**  VOLUME CONTROL BLOCK ENTRY                                                  
SCATVCB  MVI   SCBCODE,C'D'        FLAG AS DSNAME                               
         MVI   SCBVOL,X'FF'        INDICATE VOL NAME NOT AVAIL                  
         B     SCATGDSN            GO CHECK FOR GDG NAME                        
         SPACE 2                                                                
**  GENERATION DATA GROUP INDEX POINTER                                         
SCATGDG  MVI   SCBCODE,C'G'        ENTER GDG CODE                               
         MVC   SCBMAX(L'SCBMAX+L'SCBNVOLS),13(R2)  TWO COUNTERS                 
         B     SCATWRT                                                          
         SPACE 2                                                                
**  ALIAS ENTRY                                                                 
SCATALAS MVI   SCBCODE,C'A'        ENTER ALIAS CODE                             
         MVC   SCBNM2,@R2+12       GET TRUE NAME                                
         B     SCATWRT                                                          
         SPACE 2                                                                
**  CVOL ENTRY                                                                  
SCATCVOL CLC   SCBNM,=FL8'1'       IS ENTRY CVOL OR VOL INDEX?                  
         BE    SCATNEXT            BR IF VOL INDEX ENTRY                        
         MVI   SCBCODE,C'C'        ENTER CVOL CODE                              
         MVC   SCBVOL,16(R2)       GET CVOL NAME                                
         B     SCATWRT                                                          
         SPACE 2                                                                
**  DATA SET POINTER ENTRY                                                      
SCATDSP  MVI   SCBCODE,C'D'        ENTER DSNAME CODE                            
         MVC   SCBNVOLS,12(R2)     GET NUMBER OF VOLS                           
         MVC   SCBDEVCD,14(R2)     Get device codes                             
         MVC   SCBVOL,18(R2)       GET VOL NAME                                 
         MVC   SCBSEQNO,24(R2)     GET FILE. NO (FOR TAPES)                     
**  CHECK FOR COMPLEMENTED GDG LOWEST LEVEL NAME                                
SCATGDSN TM    SCBNM+1,X'F0'       TEST NO HI-ORDER BITS                        
         BNZ   SCATWRT             CAN'T BE GDG NAME                            
         CLI   SCBNM,C'G'          MAKE SURE GDG                                
         BNE   SCATWRT             BR IF NOT                                    
         XC    SCBNM+1(4),=F'-1'   MAKE IT READABLE                             
         SPACE 2                                                                
SCATWRT  STM   R0,R1,CCREDT        SAVE REGS                                    
         LA    R1,SCBUF                                                         
         LA    R0,SCBSZ                                                         
         LCALL VTOCMSG                                                          
         LM    R0,R1,CCREDT        RESTORE REGS                                 
         B     SCATNEXT            CONTINUE TO NEXT ENTRY                       
         EJECT                                                                  
VTOCRET  ST    R15,RETCOD                                                       
         TM    F2,DSNFCAT          IS IT SHOW CATLG?                            
         BO    VTOCRET4            BR IF YES                                    
         IF     F5.DSNFONLY,VTOCRET3                                            
         WAITOFF                                                                
         CLOSE MF=(E,OPENLIST)                                                  
         TM    F2,DSNFPDS          IS IT SHOW DIRECTORY?                        
         BZ    VTOCRET1            BR IF NOT                                    
         DEQ   RET=HAVE,TCB=CVITCBP,MF=(E,ENQDSN)                               
VTOCRET1 WAITON X                                                               
VTOCRET3 ACALL VDALLO              GO CHECK DEALLOCATION                        
         L     R15,RETCOD                                                       
VTOCRET4 LR    R3,R0               SAVE R0                                      
         LR    R4,R1               AND R1                                       
         LR    R2,R15              SAVE R15                                     
         ACALL RELIOWA             Release IOWA                                 
         LR    R0,R3               RESTORE R0                                   
         LR    R1,R4               RESTORE R1                                   
         LR    R15,R2              RESTORE R15                                  
VTRX     XEXIT ,,LTR                                                            
         EJECT                                                                  
VTOCMSG  STM   R14,R8,VTOCSV       SAVE REGS                                    
         LH    R3,@PAR             GET COUNT                                    
         LR    R4,R0               NEW COUNT                                    
         AR    R3,R4               NEW TOTAL                                    
         C     R3,=A(CVPSZ-3)      Thats how much there is                      
         LH    R3,@PAR             OLD COUNT                                    
         BNH   VMSGOK              IT'LL FIT                                    
         DECR  R3                  DECR. COUNT                                  
         STH   R3,@PAR             STORE IT BACK                                
         L     R15,PAGEGET         GET ADDR OF SUBR                             
         BASR  RAR,R15                                                          
         BZ    VTOCERR             NO PAGES                                     
         LA    R3,1                INIT NEW PAGE                                
VMSGOK   LA    R4,@R3+1(PAR)       POINTER WHERE TO PUT IT                      
         AR    R3,R0                                                            
         LA    R3,@R3+1            FORM NEW COUNT                               
         STH   R3,@PAR             STORE IT                                     
         LR    R3,R0               MSG COUNT                                    
         DEX   R3,DVTMV            MOVE IN MSG                                  
         LA    R3,@R3+1            COUNT OF MSG                                 
         STC   R3,@R4              STORE IT                                     
         LA    R3,@R3+1(R4)        ONE PAST END OF MSG                          
         MVI   @R3,0               END FLAG                                     
         PMARK PAR                 MARK THE PAGE AS CHANGED                     
         LM    R14,R8,VTOCSV                                                    
         BR    RAR                                                              
*                                                                               
DVTMV    MVC   @R4+1(1),@R1                                                     
         SPACE 2                                                                
VTOCWT   TM    DECB,X'40'          ALREADY COMPLETE                             
         BOR   RAR                 YES                                          
         LENTER ,                  SAVE INPUT                                   
         SET   IWA1ACTV            TURN ON ECB WATCH                            
         PAUSE JCBWFD              WAIT FOR POST                                
         LEXIT ,                   RETURN TO CALLER                             
         TITLE 'Disk I/O Routines'                                              
*                                                                               
*** WAITOFF ROUTINE - POSTS I/O SUBTASK WITH WORK TO DO                         
**          NOTE THAT THE WAITOFF/WAITON ROUTINES ASSUME IOWAR                  
**          POINTS TO THE USER'S IOWA ON ENTRY.                                 
*                                                                               
         ENTRY WAITOFF                                                          
WAITOFF  XTRACE WAITOFF,REGS=14                                                 
         ST    CPR,WACPR           Save CP ptr                                  
         STM   RAR,R7,WAR14        SAVE REGS FOR SUBTASK                        
         IF    CVFNDSUB,RAR        For debugging: don't subtask                 
         BASE                                                                   
*                                                                               
         L     JCBR,CVCURJCB       GET CURRENT JCB                              
         USING JCB                                                              
         CLM   JCBR,B'0111',IWA@JCB+1  IS IT OUR RESOURCE?                      
         BNE   WAITBAD             BR IF NOT, ...                               
         MVI   DECB,0              CLEAR DECB                                   
         POST  STECB               Post subtask                                 
         TM    DECB,X'40'          SUBTASK ALREADY DONE?                        
         BZ    DODSP               NO, GO DISPATCH OTHERS                       
         B     WAITRET             RETURN TO SAME USER                          
*                                                                               
DODSP    SET   IWA1ACTV            ECB NEEDS MONITORING                         
         PAUSE JCBWFD              WAIT FOR SUBTASK TO POST                     
         DROP  BR,JCBR                                                          
*                                                                               
WAITRET  LM    RAR,R7,WAR14        RETURN SAVED BY WAITON                       
         XTRACE WAITON,REGS=14                                                  
         BR    RAR                 GO ON WITH MAIN TASK                         
         EJECT                                                                  
*box                                                                            
*        Subtask initialization.                                                
*                                                                               
SUBTSKGO SAVE  (14,12)             SAVE OS SLOP                                 
         LR    IOWAR,R1            WORK AREA ADDR PASSED AS PARM                
         ST    R13,OSR13           SAVE OS SAVE AREA ADDR                       
         BASE                                                                   
         L     CVR,=V(CV)          MAKE SURE OF CV PTR                          
*-                                                                              
*-       Switch to same AMODE as the mother task.                               
*-                                                                              
         IF    CVFXA,BEGIN         XA mode...                                   
         LA    R2,A31GO                                                         
         IF    CVFXA31,BEGIN       We want 31-bit mode...                       
         O     R2,=A(X'80000000')  31 bit mode wanted                           
         END                                                                    
         BSM   0,R2                                                             
*                                                                               
A31GO    LABEL                                                                  
         END                                                                    
*                                                                               
         CHAP  +1                  We should run above main task                
*                                                                               
         L     R0,=A(WASTACK#)                                                  
         GETMAIN R,LV=(0)          Get subtask stack                            
         ST    R1,WASTACKP         Save stack ptr                               
*                                                                               
         TTIMER CANCEL             Cancel any time                              
         CLEAR R1                                                               
         ESPIE RESET,(1)           Clear any spie                               
         ESTAE 0                   Clear stae                                   
*                                                                               
         IF    ^CVFNSTAE,BEGIN     OK TO DO STAE...                             
         ESTAE SUBSTAE,PARAM=(IOWAR)  SET UP STAE FOR ABENDS                    
         IF    (R15,GT,4),IOABEND  Bad call                                     
         END                                                                    
*                                                                               
         B     SUBTSKWT            WAIT FOR WORK TO DO                          
*                                                                               
         LTORG                                                                  
         DROP  R7                                                               
         SPACE 2                                                                
*                                                                               
*** WAITON ROUTINE - SUBTASK HAS DONE ITS WORK - POST MAIN TASK                 
**         NOTE THAT THE WAITOFF/WAITON ROUTINES ASSUME IOWAR                   
**         POINTS TO THE USER'S IOWA ON ENTRY.                                  
*                                                                               
         ENTRY WAITON                                                           
WAITON   STM   R14,R7,WAR14        SAVE FOR MAIN TASK                           
         IF    CVFNDSUB,RAR        For debugging: don't subtask                 
WAITONP  POST  DECB,0              POST I/O DECB                                
SUBTSKWT WAIT  ECB=STECB           WAIT FOR WORK                                
*-                                                                              
*-       Subtask always waits at this point for work to do.                     
*-                                                                              
         L     CPR,WACPR           Restore CP ptr                               
         LM    R14,R7,WAR14        Restore regs                                 
         L     R13,WASTACKP        Reset subtask stack ptr                      
         LR    R8,R13              Ditto                                        
         MVI   STECB,0             Clear subtask ECB                            
         LA    IOWAR,IOWA          Clear High                                   
         BR    RAR                                                              
*-                                                                              
WAITBAD  BASE                                                                   
         KAPUT IOWAERR,'WAITON/WAITOFF LOGIC ERROR'                             
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  THESE SUBROUTINES ARE CALLED WHILE RUNNING UNDER A SUBTSK, SO "CP"           
*  ASSUMPTIONS CAN NOT BE MADE.  (ALSO, "CVENTCK" USED BY XENTER                
*  WON'T WORK).                                                                 
*                                                                               
         DROP  CP,CV                                                            
* THIS ROUTINE WILL SET THE CATALOG OR LOCATE WORK AREA                         
* POINTED TO BY R1 TO USE THE WYL. CVOL IF THE DSNAME STARTS                    
* WITH WYL. AND INITIALIZATION FOUND WYL. IN THE CATALOG                        
*                                                                               
* The address of the dsname to be processed must be in R15 on entry.            
* The DOWYLCVL macro may be used to load R15 and call routine.                  
*                                                                               
DOWYLCVL ST    BR,@R13             SAVE OLD BASE REG                            
         BASE                                                                   
         NI    @R1,255-CAMFCVOL    SET NOT TO USE CVOL                          
         CLC   @R15(L'KWYL),KWYL   Does name start with "WYL."?                 
WYLCVOL  B     DOWYLEX             SET TO BNE BY INITIALIZATION                 
         OI    @R1,CAMFCVOL        SET TO USE CVOL IF WYL.                      
         MVC   @R1+8(4),=A(WYLVOL) MOVE IN CVOL ADDRESS                         
         NI    F3,255-DSNFCVOL     TURN OFF CVOL OPTION                         
DOWYLEX  L     R7,@R13                                                          
         BR    RAR                 RETURN                                       
         DROP  BR                                                               
         SPACE                                                                  
KWYL     DC    C'WYL.'             DEFINE WYL. HEADER                           
         ENTRY WYLVOL                                                           
WYLVOL   DC    CL6' '              SPACE FOR WYL. CVOL NAME                     
         TITLE 'Calculate Records/Track Routine'                                
         DROP  IOWA                                                             
         SPACE 2                                                                
TRKWA    RECORD BEGIN                                                           
         PUSH  NOGEN                                                            
         XSA   R2,R8                                                            
TRKREGS  DS    (R15-R9+1)F         Saved regs                                   
TRKBLK   DS    F                   Block size on entry                          
TRKLIST  TRKCALC MF=D                                                           
         POP   PRINT                                                            
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  CALCTRK -- Routine to calculate the number of records per                    
*    track for a given block size.                                              
*                                                                               
*    On entry:                                                                  
*      R0 - block size                                                          
*      R1 - DVTAREA ptr (info returned from DEVTYPE)                            
*                                                                               
*    On exit:                                                                   
*      R0 - best block size                                                     
*      R1 - no. of records/track                                                
*      R15- best no. of records/track                                           
*                                                                               
*                                                                               
CALCTRK  XENTER R2,R8,L'TRKWA,TRACE=NO                                          
         USING TRKWA,WAR                                                        
         LR    R6,R1                                                            
         USING DVTAREA,R6                                                       
*                                                                               
         CLEAR TRKLIST                                                          
         N     R0,=A(X'FFFF')      Only want data length                        
         ST    R0,TRKBLK           Save for later                               
         ST    R0,STARRKDD         Save data length                             
         MVI   STARR,1             Save record number                           
         LC    R2,DVTUTYPE         Device type                                  
         STM   R9,R15,TRKREGS      Be careful                                   
         TRKCALC  FUNCTN=TRKCAP,TYPE=(R2),MF=(E,TRKLIST)                        
         LM    R9,R15,TRKREGS                                                   
         LR    R1,R0               Records per track                            
*-                                                                              
*-       Now calculate the best block size less than or equal to the            
*-       one given.  If we have to make it less than the one given,             
*-       then we make it the maximum for R+1 records per track)...              
*-                                                                              
         LR    R15,R1              Best no. of recs per track                   
         LOOP  BEGIN                                                            
         L2    R5,DVTTRKSZ         Total track length                           
         IF    DVTFLAG.DVTFMOD,BEGIN  modulo device...                          
         CLEAR R4                                                               
         DR    R4,R15              "n" equal parts                              
         SH    R5,DVTBLKO          Subtract fixed overhead                      
         LC    R3,DVTMODN          Modulo this number                           
         CLEAR R4                                                               
         DR    R4,R3               /modulo                                      
         MR    R4,R3               *modulo                                      
         SH    R5,DVTMODO          Subtract data overhead                       
         AR    R5,R3               Best case...                                 
         DECR  R5                  ... for modulo R3                            
         LR    R0,R5               Max blksize for this rpt                     
         END                                                                    
*                                                                               
         ELSE  BEGIN               Non-modulo device...                         
         LC    R2,DVTLBLKO         Last block overhead                          
         LC    R3,DVTBLKO          Block overhead                               
         IF    DVTFLAG.DVTFOHD,'L2 R2,DVTBLKO; LR R3,R2'                        
         LC    R4,DVTKEYO          No key reduction amount                      
         SR    R2,R4               Reduce                                       
         SR    R3,R4               Ditto                                        
         SR    R5,R2               Subtract last block overhead                 
         LR    R4,R15                                                           
         DECR  R4                                                               
         MR    R2,R4               Overhead for other blocks                    
         SR    R5,R3               Subtract that too                            
         SLL   R5,9                Times 512                                    
         LA    R3,512              Assume no tolerance                          
         IF    DVTFLAG.DVTFTOL,'L2 R3,DVTTOL'                                   
         MR    R2,R4               Times tolerance factor                       
         AH    R3,=H'512'          No tolerance for last block                  
         CLEAR R4                                                               
         DR    R4,R3                                                            
         LR    R0,R5               Max blksize for this rpt                     
         END                                                                    
*                                                                               
         IF    (R0,LE,TRKBLK),EXIT  blksize within bounds, scram                
         LA    R15,@R15+1          Try with one more rpt                        
         END                                                                    
*                                                                               
         XEXIT                                                                  
         DROP  DVTAREA,TRKWA,BR                                                 
*                                                                               
         USING (IOWA),(CP),(CV)                                                 
         TITLE 'Catastrophic Error (CATER) Routine'                             
*  CATASTROPHIC ERROR                                                           
*                                                                               
CATER    XENTER R0,R8                                                           
         USING IOWA                                                             
         SEG   'Disk error during ',,L:CVWTOSGP                                 
         IC    R2,ERROR+1          GET THE CODE                                 
         N     R2,=XL4'0000000F'   AND AND IT OUT                               
         IF    (R2,GT,MAXERR),'CLEAR R2'     MAKE SURE OK                       
         SLL   R2,3                * BY 8                                       
         LA    R1,ERRMSG(R2)       POINT AT MSG                                 
         LA    R0,L'ERRMSG         AND LENGTH                                   
         SEGTB (R1),(R0)           Output the msg                               
         SEG   'RC='               Output the return code                       
         LH    R0,ERROR+2          GET THE RETURN CODE                          
         LA    R15,2               SET TR LENGTH                                
         LOOP  BEGIN                                                            
         SRDL  R0,4                MOVE TO RIGHT                                
         SRL   R1,4                MOVE OFFSET                                  
         DECR  R15                 DOWN ONE                                     
         UNTIL (R15,Z),END         LOOP UNTIL DONE                              
         STCM  R1,12,ERROR+2       SAVE GOOD INFO                               
         TR    ERROR+2(2),TRTB     TRANSLATE ERROR                              
         MVC   RECSIZE,ERROR       Save for NTGDOPN                             
         SEG   ERROR+2,2                                                        
         SEG   '.  Dsname='                                                     
         SEGT  DSNAME,LH:DSNWANL                                                
         SEG   ', Volume='                                                      
         SEGT  DSVID                                                            
         XWTO                                                                   
         LA    R15,RTNCATER                                                     
         XEXIT R0,R8                                                            
         DROP  IOWA,BR                                                          
*                                                                               
TRTB     DC    C'0123456789ABCDEF'                                              
*                                                                               
ERRMSG   DC    CL8'Unknown'        0                                            
         DC    CL8'Allocate'       1                                            
         DC    CL8'Obtain'         2                                            
         DC    CL8'Locate'         3                                            
         DC    CL8'Open'           4                                            
         DC    CL8'BLDL'           5                                            
         DC    CL8'Scratch'        6                                            
         DC    CL8'Stow'           7                                            
         DC    CL8'ACSVWRIT'       8                                            
         DC    CL8'RENAME'         9 - Error type                               
*                                                                               
MAXERR   EQU   (*-ERRMSG)/8-1,,C'N'                                             
         TITLE 'Subtask ESTAE Exit Routine'                                     
*box                                                                            
*                                                                               
*  SUBSTAE -- Subtask ESTAE exit.                                               
*                                                                               
SUBSTAE  SAVE  (14,12)                                                          
         BASE                                                                   
         QSNAP 'SUBSTAE entered',MODE=WTL                                       
*                                                                               
         LR    R4,R1               Save SCB ptr                                 
         USING SDWA,R4                                                          
         STCK  DISKCLCK            Time/date of error                           
         MVC   DISKSCB,SDWA        Save a copy of the SCB                       
*                                                                               
         L     CVR,=V(CV)          Global addressability                        
         CLEAR CPR                 No CP here                                   
*                                                                               
         L     IOWAR,SDWAPARM      Get IOWA ptr                                 
         USING IOWA                                                             
*                                                                               
         CLEAR R8                  No Wylbur stack                              
*        (We can't CLEAR R13 because it is the OS save area ptr.)               
*-                                                                              
*-       Switch back into our TCB key and problem state.                        
*-                                                                              
         MODESET MODE=SUP          Play the game....                            
         L     R3,WATCB            Our TCB                                      
         WITH  (TCB,R3),BEGIN                                                   
         MODESET EXTKEY=TCB,SAVEKEY=STAEKEY,WORKREG=1  TCB key(safe)            
         END                                                                    
         MODESET MODE=PROB         Always return to problem state               
*-                                                                              
*-       Figure out if recovery is possible.                                    
*-                                                                              
         L     R0,SDWAABCC         GET ABEND CODE FROM SDWA                     
         IF    (WAABEND,Z),NORETRY  NO ABEND RECOVERY ROUTINE, ABEND            
         SLL   R0,8                                                             
         CLEAR R1                  CLEAR                                        
         SRDL  R0,20               R1=USER ABEND CODE, R0=SYS CODE              
         IF    (R1,NZ),NORETRY     Don't retry if user abend                    
*-                                                                              
*-       Call the retry routine.                                                
*-                                                                              
         GETMAIN R,LV=66           Register area                                
         LR    R2,R1               RUB area (for SETRP)                         
         MVC   @R2(2),=X'FFFF'     All register                                 
         LA    R15,@R2+2           Put registers here                           
         STM   R0,R15,@R15         Save registers                               
*                                                                               
         MODESET KEY=ZERO          ********                                     
         LA    R1,SDWA             Needed for SETRP                             
         SETRP RC=4,RETADDR=STAERETR,FRESDWA=YES,DUMP=NO,              *        
               RETREGS=YES,RUB=(R2),REGS=(14)                                   
         DC    H'0'                (Don't return)                               
*-                                                                              
*-       No recovery possible, continue abending.                               
*-                                                                              
NORETRY  LABEL                                                                  
         MODESET KEY=ZERO          ********                                     
         LA    R1,SDWA             Needed for SETRP                             
         SETRP RC=0                Continue abending                            
         DC    H'0'                (Don't return)                               
*                                                                               
         DROP  SDWA,IOWA,BR                                                     
*                                                                               
STAEKEY  DC    X'FF'               PSW key on entry                             
         TITLE 'Subtask STAE Retry Control Routine'                             
*box                                                                            
*                                                                               
*  STAERETR -- ESTAE retry routine.                                             
*                                                                               
STAERETR BASE                                                                   
         USING IOWA                Entry assumption                             
*                                                                               
         L     CVR,=V(CV)          Global addressability                        
         CLEAR CPR                 No CP here                                   
*                                                                               
         FREEMAIN R,A=(R2),LV=66   Free RUB area (see above)                    
*                                                                               
         L     R13,WASTACKP        Reset subtask stack ptr                      
         LR    R8,R13              Ditto                                        
*                                                                               
         L     R14,WAABEND         GET INTERCEPT ROUTINE ADDRESS                
         ST    R14,WAR14           SAVE FOR WAITON                              
         CLEAR WAABEND             CLEAR ABEND ADDR                             
*                                                                               
         ACALL WAITONP             GO TO WAITON, BUT DON'T SAVE REGS            
         DC    H'0'                No return                                    
         DROP  IOWA,BR                                                          
*                                                                               
         ENTRY DISKCLCK,DISKSCB    (FAIL formats this stuff)                    
DISKCLCK DC    D'0'                Time/date of last entry                      
DISKSCB  DS    XL104               Copy of SCB                                  
         TITLE 'Miscellaneous Stuff'                                            
*  PROCESS ABNORMAL TERMINATION OF AN I/O TASK                                  
*                                                                               
IOABEND  BASE                                                                   
         ABEND 39,,STEP            NAUGHTY, NAUGHTY                             
*                                                                               
         VLTORG                                                                 
         END   .                                                                
