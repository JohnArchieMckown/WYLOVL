RECS     TITLE 'WYLBUR''s RECORD GET/LOC/PUT/DELETE/ETC. '                      
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
* MODULE COMMENTS GO HERE !                                                     
*                                                                               
* COMMENTS ABOUT PURPOSE,, GROUPS, SETS, NAMES, AND KEYS !                      
         EJECT                                                                  
WYLRECS  CSECT                                                                  
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
RECS     IDENT 2101                11:33:18 04/10/92 (JDN)                      
*                                                                               
         SYSDEFN ,                 Define installation values                   
*                                                                               
         PUSH  DSECTS                                                           
         TITLE 'DSECTS'                                                         
         COPY  CONTROL             Copy CV/CP                                   
         TITLE 'DSECTS'                                                         
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         POP   DSECTS                                                           
WYLRECS  CSECT                                                                  
         DC    C'It do it too!'                                                 
         EJECT                                                                  
*-                                                                              
*-      RPCHECK MACRO, CHECK TO SEE IF PAGE OBTAINED IS RECORDS PAGE            
*-                                                                              
         MACRO                                                                  
&L       RPCHECK                                                                
&L       CLC   RPNAME(6),=CL6'RECS  '   IS RECORDS HEADER CORRECT               
         BNE   CHK1&SYSNDX              YES, CONTINUE                           
         CLC   RPUTYPE(4),RECTYPE                                               
         BE    CHK2&SYSNDX                                                      
CHK1&SYSNDX BOMB                        NO, BOMB RIGHT HERE                     
CHK2&SYSNDX DS 0H                                                               
         MEND                                                                   
*-                                                                              
*-       XMARK MACRO, MARK CURRENT LOCATION (ADDRESS+2)                         
*-                                                                              
         MACRO                                                                  
&L       XMARK  &REG                                                            
&L       BASR   &REG,0                                                          
         MEND                                                                   
         TITLE 'BINARY SEARCH DSECTS'                                           
         COPY  BSINFO                                                           
         TITLE 'RECORD, RECORD PAGE DSECTS'                                     
*box                                                                            
*                                                                               
*                                                                               
*  RECORD PAGE                                                                  
*                                                                               
*  THE RECORD GROUP IS A GENERALIZED STRUCTURE AND MAY BE USED                  
*  TO HOLD SEVERAL TYPES AND FORMATS OF RECORDS.  EACH RECORD                   
*  PAGE CONTAINS A SORTED INDEX LIST OF THE RECORDS ON THE PAGE                 
*  AND ALSO THE ASSOCIATED RECORDS.  THE INDEXES ARE BINARY                     
*  SEACHED AND CONSIST OF THE RECORD NAME AND AN OFFSET POINTER                 
*  TO THE RECORD DATA.  THE RECORD DATA IS PLACED AT THE END OF                 
*  THE PAGE.  THE RECORD DATA GROWS UP AS MORE RECORDS ARE                      
*  ADDED, LIKEWIZE THE RECORD INDEX ENTRIES GROWS DOWN.  IN                     
*  ADDITION TO A NAME, EACH RECORD HAS A SET NUMBER ASSOCIATED                  
*  WITH IT.  THUS EACH RECORD IS  UNIQUELY SPECIFIED BY A                       
*  RECORD GROUP POINTER, A SET NUMBER, AND A NAME.  A SET                       
*  NUMBER, AND A NAME TOGETHER WILL BE REFERED TO AS THE RECORD                 
*  KEY. (THE INDEX ENTRIES ACTUALLY CONTAIN RECORD KEYS, NOT                    
*  JUST THE NAMES.)  RECORD NAMES ARE FIXED LENGTH FOR EACH                     
*  RECORD GROUP.  DIG IT !                                                      
*                                                                               
*  PAGE USAGE:                                                                  
*    PAGE A - PAGE A IS THE PRIMARY PAGE AREA.  ONLY IF TWO                     
*             PAGES ARE USED SIMULTANEOUSLY IS PAGE B USED.                     
*             PAGE A IS NEVER PFREED.                                           
*    PAGE B - SECONDARY PAGE AREA, USED ONLY WHEN TWO PAGES                     
*             ARE NEEDED SIMULTANEOUSLY.  PAGE B MUST BE PFREED                 
*             IMMEDIATELY AFTER USE. (PBR SHOULD BE ZERO ON                     
*             ENTRY TO ALL ROUTINES!)                                           
*  THESE PAGE USAGE RULES, PROVIDE EFFICIENCY - USUALLY THE PAGE                
*  WE WANT IS ALREADY IN PAGE A.  AND ORDER - THE PAGE WE WANT IN               
*  PAGE A IS NEVER IN PAGE B. (A SITUATION THAT CAUSES A FAILSOFT)              
*                                                                               
*                                                                               
RPAGE    RECORD BEGIN ,            RECORD PAGE                                  
RPSTART  DS    0D                                                               
RPNAME   DS    CL6                 BLOCK TYPE NAME = 'RECS  '                   
RPUTYPE  DS    CL4                 BLOCK TYPE SPECIFIED BY USER                 
* EXAMPLES                           'TEXT'                                     
*                                    'EXEC'                                     
*                                    'RECS'                                     
*                                    'FLOW'                                     
*                                    'SYS '                                     
RPNAME2  DS    CL6                 SECODARY BLOCK TYPE NAME                     
* MAY BE                             'MASTER'                                   
*                                    'DATA'                                     
RPNUMB   DS    F                   BLOCK NUMBER                                 
RPTYPE   FLAG  ,                   BLOCK TYPE                                   
         FLAG  RPDATA              STANDARD PAGE FORMAT                         
         FLAG  RPMASTER            MASTER INDEX FOR BINARY PAGES                
RPFLAG2  FLAG  ,                                                                
         FLAG  RPRECVRY            RECORVER THESE PAGES                         
         FLAG  RPMEMORY            GET MEMORY PAGES                             
*                                                                               
RPLINK   DS    F                   LINK TO MASTER PAGE                          
*                                                                               
RPKEYLN  DS    H                   SEARCH KEY LENGTH                            
RPNAMELN DS    H                   SEARCH NAME LENGTH                           
RPNTRYLN DS    H                   INDEX ENTRY LENGTH                           
*                                                                               
RPXSTART DS    H                   START OF INDEX ENTRIES                       
RPXEND   DS    H                   END OF INDEX ENTRIES                         
RPXFIRST DS    H                   ALL INDEXS, >= VALUE AT RPXFIRST             
RPXLAST  DS    H                   ALL INDEXS, < VALUE AT RPXLAST               
*                                                                               
RPDSTART DS    H                   START OF DATA                                
RPDEND   DS    H                   END OF DATA                                  
RPRESVD  DS    ((((*-RPSTART+15)/16)*16)-(*-RPSTART))X                          
*                                                                               
RPINFO   DS    (L'BSINFO)X         BINARY SEARCH INFO                           
RPRSEVD2 DS    ((((*-RPSTART+15)/16)*16)-(*-RPSTART))X                          
*                                                                               
RPAREA   DS    XL(CVPSZ-(*-RPSTART))   INDEX AND DATA AREA                      
RPEND    EQU   *                   END OF USER INDEX, DATA AREAS                
         END                                                                    
         EJECT                                                                  
*                                                                               
RGROUP   RECORD BEGIN                                                           
         RG    PREFIX=REC                                                       
         END                                                                    
         EJECT                                                                  
*                                                                               
*  RECORD INDEX ENTRY EQU'S                                                     
*                                                                               
*  NOTE:                                                                        
*     A RECORD KEY IS:                                                          
*        4 BYTE RECORD SET NUMBER                                               
*        N BYTE RECORD NAME  (N < MXNAMELN)                                     
*                                                                               
* THE TERMS ARE ARBITRARY BUT WE TRY TO BE CONSISTENT !                         
*                                                                               
MXNAMELN EQU   128                 MAX ALLOWABLE SEARCH NAME LENGTH             
MXKEYLN  EQU   MXNAMELN+L'NDXSET                                                
MXNTRYLN EQU   MXKEYLN+L'DATAPTR+L'DATALN                                       
MXDATALN EQU   2048                ARBITRARY, MAX ^< PAGESIZE/10                
*                                                                               
*        INDEX ENTRY OFFSETS !                                                  
NDXKEY   EQU   0                   SEARCH KEY                                   
NDXSET   EQU   0,4                    SEARCH KEY: SET NUMBER                    
NDXNAME  EQU   4                      SEARCH KEY: NAME                          
DATAPGNO EQU   0,4                 DATA PAGE NUMBER OFFSET AFTER KEY            
DATAPTR  EQU   0,2                 DATA POINTER OFFSET AFTER KEY                
DATALN   EQU   2,2                 DATA LENGTH OFFSET AFTER KEY                 
*                                                                               
         TITLE 'INITIALIZE/FREE RECORD GROUP'                                   
*box                                                                            
*                                                                               
*                                                                               
*  INITRG - INITIALIZE RECORD GROUP                                             
*                                                                               
*  SET UP A RECORD GROUP,,, THIS ROUTINE SETS UP THE FIRST                      
*  PAGE OF A RECORD GROUP.                                                      
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK (SEE RG MACRO)                             
*       R0 - LENGTH OF RECORD NAMES FOR GROUP                                   
*      @R1 - 4 CHARACTER TYPE NAME                                              
*            (EG. 'TEXT','EXEC','VARS','FLOW')                                  
*      @R2 - 4 CHARACTER FLAG BYTES                                             
*            IF C'M...', GET PAGES FROM MEMORY                                  
*            IF C'.R..', SET RECOVERY FLAG FOR PAGES                            
*                                                                               
*  ON EXIT:                                                                     
*       RECORD GROUP FORMATED.                                                  
*       RECORD GROUP INFO BLOCK SET UP.                                         
*                                                                               
*  NOTES: ONLY USER SETTABLE FIELDS IN THE RECORD GROUP INFO                    
*         BLOCK IS THE SET NUMBER, AND THE SPLIT FACTOR.  THESE                 
*         FIELDS ARE SET WITH THE 'XSETSET' AND THE 'XSETSPLT'                  
*         ROUTINES.                                                             
*  NOTES: IF RECOVERY FLAG IS SET, THE 'RCVYINFO' ROUTINE WILL                  
*         BE CALLED WITH THE ROOT PAGE NUMBER IN R0 AND THE                     
*         4 CHARACTER TYPE NAME @R1 EVERYTIME THE ROOT PAGE                     
*         NUMBER CHANGES.  (R0=0 IMPLIES NO ROOT PAGE).                         
*                                                                               
NITWA    RECORD BEGIN                                                           
NITNAMLN DS    F                   LENGTH OF SEARCH NAME                        
NITTYPE  DS    CL4                 RECORD GROUP TYPE NAME                       
NITFLAGS DS    4CL1                RECORD GROUP FLAGS                           
         END                                                                    
*                                                                               
*                                                                               
INITRG   XPROC NITWA                                                            
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15              INITIALIZE WORK AREA W/ENTRY PARMS           
         ST    R0,NITNAMLN                                                      
         MVC   NITTYPE(4),0(R1)                                                 
         MVC   NITFLAGS(4),0(R2)                                                
         CLEAR RGROUP              INITIALIZE RECORD GROUP WORK AREA            
         STH   R0,RECNLEN                                                       
         MVC   RECSET,=F'1'                                                     
         MVI   RECSPLT,128-16                                                   
         MVC   RECTYPE,NITTYPE                                                  
*                                                                               
         COMMENT                   GET RECORD ROOT PAGE                         
         IF    (NITFLAGS,EQ,'M'),BEGIN                                          
         VCALL MGETNEW             GET NEW PAGE FROM MEMORY                     
         END                                                                    
         ELSE  BEGIN                                                            
         VCALL PGETNEW             GET NEW PAGE                                 
         END                                                                    
         IF    NZ,BEGIN                                                         
         VCALL NOMORPG                                                          
         END                                                                    
         ST    R0,RECGRP           SAVE ROOT PAGE NUMBER, RGROUP ID             
*                                                                               
         COMMENT                   FORMAT RECORD PAGE                           
         LR    R2,PAR                                                           
         L     R3,=A(L'RPAGE)      ZERO PAGE                                    
         SR    R5,R5                                                            
         MVCL  R2,R4                                                            
         MVC   RPNAME,=CL6'RECS  ' SET UP PAGE HEADERS                          
         MVC   RPNAME2,=CL6'DATA  '                                             
         SET   RPDATA                                                           
         MVC   RPUTYPE,NITTYPE                                                  
         ST    R0,RPNUMB           PAGE NUMBER                                  
         L     R1,NITNAMLN         SET SEARCH LENGTHS                           
         STH   R1,RPNAMELN                                                      
         LA    R1,L'NDXSET(R1)                                                  
         STH   R1,RPKEYLN                                                       
         LA    R1,L'DATAPTR+L'DATALN(R1)                                        
         STH   R1,RPNTRYLN                                                      
         LA    R1,RPAREA           SET DATA POINTERS                            
         SR    R1,PAR                                                           
         STH   R1,RPXFIRST                                                      
         AH    R1,RPKEYLN                                                       
         STH   R1,RPXLAST                                                       
         AH    R1,RPKEYLN                                                       
         STH   R1,RPXSTART                                                      
         AH    R1,RPNTRYLN                                                      
         STH   R1,RPXEND                                                        
         LH    R2,RPXSTART         ADD ZERO 1ST ENTRY                           
         AR    R2,PAR                                                           
         LH    R3,RPNTRYLN                                                      
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         LH    R2,RPXFIRST         ADD X'000..' FIRST ENTRY LIMIT               
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         LH    R2,RPXLAST          ADD X'FFF..' LAST ENTRY LIMIT                
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
         L     R1,=A(L'RPAGE)      SET UP DATA POINTERS                         
         STH   R1,RPDSTART                                                      
         STH   R1,RPDEND                                                        
         LA    R0,RPINFO           SET UP BINARY SEARCH INFO                    
         L     R1,=A(L'RPAREA)                                                  
         LH    R2,RPNTRYLN                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPNTRYLN                                                      
         ACALL BSINIT                                                           
         IF    (NITFLAGS,EQ,C'M'),BEGIN                                         
         SET   RPMEMORY            GET PAGES IN MEMORY                          
         END                                                                    
         IF    (NITFLAGS+1,EQ,C'R'),BEGIN                                       
         SET   RPRECVRY            RECOVER PAGE                                 
         END                                                                    
         IF    RPRECVRY,BEGIN      SET PAGE TYPE /RECOVERY BIT                  
         PTYPE PAR,RPUTYPE,RECOVERY=YES                                         
         END                                                                    
         ELSE  BEGIN                                                            
         PTYPE PAR,RPUTYPE                                                      
         END                                                                    
         PMARK PAR                 MARK PAGE AS CHANGED                         
         PFREE PAR                 FREE PAGE                                    
*                                                                               
         COMMENT                   IF RECOVERY PAGES,                           
         IF    (NITFLAGS+1,EQ,C'R'),BEGIN     SET RECOVERY INFO                 
         L     R0,RECGRP                                                        
         LA    R1,RECTYPE                                                       
         VCALL RCVYINFO                                                         
         END                                                                    
*                                                                               
         CLEAR R15                 RETURN CC = ZERO                             
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  FREERG - FREE RECORD GROUP PAGES                                             
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*                                                                               
*                                                                               
*                                                                               
FREERG   XPROC                                                                  
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         IF    ((R6,NZ),AND,(RECGRP,NE,0)),BEGIN                                
*                                                                               
         COMMENT                   GET MASTER OR DATA PAGE @PAR                 
         L     R0,RECGRP                                                        
         PGET  PAR,(0)                                                          
         RPCHECK                                                                
*                                                                               
         COMMENT                   IF RECOVERY PAGES,                           
         IF    RPRECVRY,BEGIN             CLEAR RECORVERY INFO                  
         CLEAR R0                                                               
         LA    R1,RECTYPE                                                       
         VCALL RCVYINFO                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF MASTER PAGE,                              
         IF    RPMASTER,BEGIN         GET AND FREE ALL DATA PAGES               
         LH    R2,RPXSTART                                                      
         AR    R2,PAR                                                           
         LH    R4,RPXEND                                                        
         AR    R4,PAR                                                           
         LH    R3,RPKEYLN                                                       
         PFLIP ,                   PUT MASTER PAGE @PBR                         
         USING RPAGE,PAR                                                        
         WHILE (R2,LT,R4),BEGIN    LOOP FREEING ALL DATA PAGES                  
         L     R0,DATAPGNO(R3,R2)                                               
         SR    R2,PBR                                                           
         SR    R4,PBR                                                           
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         MVC   RPNAME(6),=C'FREED '                                             
         PFREE PAR,EMPTY                                                        
         AR    R2,PBR                                                           
         AR    R4,PBR                                                           
         AH    R2,RPNTRYLN-RPAGE(PBR)                                           
         END                                                                    
         PFLIP ,                   RETURN MASTER PAGE TO @PAR                   
         END                                                                    
*                                                                               
         COMMENT                   FREE ROOT PAGE IN @PAR                       
         MVC   RPNAME(6),=C'FREED '                                             
         PFREE PAR,EMPTY                                                        
*                                                                               
         END                                                                    
         CLEAR RGROUP                                                           
         CLEAR R15                                                              
         PEND                                                                   
         DROP  PBR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XGETINFO - GET RECORD GROUP INFORMATION                                      
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*                                                                               
*  ON EXIT:                                                                     
*       R0 - MASTER PAGE NUMBER                                                 
*       R1 - LENGTH OF RECORD NAMES                                             
*      R15 - CONTAINS 4 CHARATER RECORD GROUP TYPE NAME                         
*                                                                               
*                                                                               
*  NOTE: INPUT, OUTPUT PARAMETERS ARE NOT VALIDITY CHECKED.                     
*        PARMS ARE JUST LOADED FROM RECORD GROUP INFO OFFSETS.                  
*                                                                               
*                                                                               
XGETINFO XPROC                                                                  
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         L     R0,RECGRP                                                        
         LH    R1,RECNLEN                                                       
         L     R15,RECTYPE                                                      
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'GET RECORD ROUTINES'                                            
*box                                                                            
*                                                                               
*                                                                               
*  XGET   - GET A RECORD                                                        
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - LENGTH OF RETURN BUFFER                                            
*       R1 - ADDRESS OF RETURN BUFFER                                           
*      @R2 - RECORD NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF RECORD OBTAINED                                          
*       R1 - UNCHANGED, ADDRESS OF RECORD OBTAINED                              
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING: RECORD IS RETURNED INTO BUFFER SPECIFIED BY R1,R0.                  
*    IF THE BUFFER IS TOO SMALL THE RECORD WILL BE TRUNCATED,                   
*    R0 WILL BE THE TRUNCATED LENGTH, AND CC=ZERO.                              
*                                                                               
*                                                                               
XGET     XPROC                                                                  
         LR    R4,R1               R4,R5 - BUFFER LOC, LEN                      
         LR    R5,R0                                                            
         ACALL XLOCATE                                                          
         IF    Z,BEGIN                                                          
         IF    (R0,GT,R5),BEGIN    TRUNCATE IF NECESSARY                        
         LR    R0,R5                                                            
         END                                                                    
         LR    R2,R1               R2,R3 - RECORD LOC, LEN                      
         LR    R3,R0                                                            
         MVCL  R4,R2                                                            
         END                                                                    
         PRETURN R0                                                             
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XGETNEXT - GET NEXT RECORD                                                   
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - LENGTH OF RETURN BUFFER                                            
*       R1 - ADDRESS OF RETURN BUFFER                                           
*      @R2 - RECORD NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF RECORD OBTAINED                                          
*       R1 - UNCHANGED, ADDRESS OF RECORD OBTAINED                              
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF NEXT RECORD DOES NOT EXIST                             
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING: RECORD IS RETURNED INTO BUFFER SPECIFIED BY R1,R0.                  
*    IF THE BUFFER IS TOO SMALL THE RECORD WILL BE TRUNCATED,                   
*    R0 WILL BE THE TRUNCATED LENGTH, AND CC=ZERO.                              
*                                                                               
*                                                                               
XGETNEXT XPROC                                                                  
         LR    R4,R1               R4,R5 - BUFFER LOC, LEN                      
         LR    R5,R0                                                            
         ACALL XLOCNEXT                                                         
         IF    Z,BEGIN                                                          
         IF    (R0,GT,R5),BEGIN    TRUNCATE IF NECESSARY                        
         LR    R0,R5                                                            
         END                                                                    
         LR    R2,R1               R2,R3 - RECORD LOC, LEN                      
         LR    R3,R0                                                            
         MVCL  R4,R2                                                            
         END                                                                    
         PRETURN R0                                                             
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XGETPREV - GET PREVIOUS RECORD                                               
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - LENGTH OF RETURN BUFFER                                            
*       R1 - ADDRESS OF RETURN BUFFER                                           
*      @R2 - RECORD NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF RECORD OBTAINED                                          
*       R1 - UNCHANGED, ADDRESS OF RECORD OBTAINED                              
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF PREVIOUS RECORD DOES NOT EXIST                         
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING: RECORD IS RETURNED INTO BUFFER SPECIFIED BY R1,R0.                  
*    IF THE BUFFER IS TOO SMALL THE RECORD WILL BE TRUNCATED,                   
*    R0 WILL BE THE TRUNCATED LENGTH, AND CC=ZERO.                              
*                                                                               
*                                                                               
XGETPREV XPROC                                                                  
         LR    R4,R1               R4,R5 - BUFFER LOC, LEN                      
         LR    R5,R0                                                            
         ACALL XLOCPREV                                                         
         IF    Z,BEGIN                                                          
         IF    (R0,GT,R5),BEGIN    TRUNCATE IF NECESSARY                        
         LR    R0,R5                                                            
         END                                                                    
         LR    R2,R1               R2,R3 - RECORD LOC, LEN                      
         LR    R3,R0                                                            
         MVCL  R4,R2                                                            
         END                                                                    
         PRETURN R0                                                             
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XGETFRST - GET FIRST RECORD IN RANGE                                         
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - LENGTH OF RETURN BUFFER                                            
*       R1 - ADDRESS OF RETURN BUFFER                                           
*      @R2 - RECORD NAME (MARKS START OF RANGE)                                 
*            (NO END OF RANGE IS SPECIFIED, LAST ALWAYS ASSUMED)                
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF RECORD OBTAINED                                          
*       R1 - UNCHANGED, ADDRESS OF RECORD OBTAINED                              
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NO RECORD IN RANGE                              
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING: RECORD IS RETURNED INTO BUFFER SPECIFIED BY R1,R0.                  
*    IF THE BUFFER IS TOO SMALL THE RECORD WILL BE TRUNCATED,                   
*    R0 WILL BE THE TRUNCATED LENGTH, AND CC=ZERO.                              
*                                                                               
*                                                                               
XGETFRST XPROC                                                                  
         LR    R4,R1               R4,R5 - BUFFER LOC, LEN                      
         LR    R5,R0                                                            
         ACALL XLOCFRST                                                         
         IF    Z,BEGIN                                                          
         IF    (R0,GT,R5),BEGIN    TRUNCATE IF NECESSARY                        
         LR    R0,R5                                                            
         END                                                                    
         LR    R2,R1               R2,R3 - RECORD LOC, LEN                      
         LR    R3,R0                                                            
         MVCL  R4,R2                                                            
         END                                                                    
         PRETURN R0                                                             
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XGETLAST - GET LAST RECORD IN RANGE                                          
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - LENGTH OF RETURN BUFFER                                            
*       R1 - ADDRESS OF RETURN BUFFER                                           
*      @R2 - RECORD NAME (MARKS END OF RANGE)                                   
*            (NO START OF RANGE IS SPECIFIED, ZERO ALWAYS ASSUMED)              
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF RECORD OBTAINED                                          
*       R1 - UNCHANGED, ADDRESS OF RECORD OBTAINED                              
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NO RECORD IN RANGE                              
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING: RECORD IS RETURNED INTO BUFFER SPECIFIED BY R1,R0.                  
*    IF THE BUFFER IS TOO SMALL THE RECORD WILL BE TRUNCATED,                   
*    R0 WILL BE THE TRUNCATED LENGTH, AND CC=ZERO.                              
*                                                                               
*                                                                               
XGETLAST XPROC                                                                  
         LR    R4,R1               R4,R5 - BUFFER LOC, LEN                      
         LR    R5,R0                                                            
         ACALL XLOCLAST                                                         
         IF    Z,BEGIN                                                          
         IF    (R0,GT,R5),BEGIN    TRUNCATE IF NECESSARY                        
         LR    R0,R5                                                            
         END                                                                    
         LR    R2,R1               R2,R3 - RECORD LOC, LEN                      
         LR    R3,R0                                                            
         MVCL  R4,R2                                                            
         END                                                                    
         PRETURN R0                                                             
         PEND                                                                   
         TITLE 'LOCATE RECORD ROUTINES'                                         
*box                                                                            
*                                                                               
*                                                                               
*  LLOCATE - LOCATE RECORD (LONG VERSION)                                       
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
SEARCHWA RECORD BEGIN                                                           
SRCHINFO DS    A                   ADDRESS OF RECORD INFO                       
SRCHPARM DS    A                   ADDRESS OF SEARCH NAME PARM                  
SRCHKEY  DS    (MXKEYLN)X          SEARCH KEY                                   
SRCHSET  EQU   SRCHKEY,4             SEARCH SET NUMBER                          
SRCHNAME EQU   SRCHKEY+4,MXNAMELN    SEARCH NAME                                
         END                                                                    
*                                                                               
*                                                                               
LLOCATE  PROC  SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM         SAVE ENTRY PARM ADDRESSES                    
         ST    R15,SRCHINFO                                                     
         MVC   SRCHSET,RECSET      SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
         CLEAR RECQPG              RESET QUICK GET/PUT INFO                     
         CLEAR RECQOFF                                                          
         IF    ((RECGRP,EQ,0),OR,(RECSET,EQ,0)),BEGIN  IF NULL                  
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         ELSE  BEGIN ,             IF VALID REC GROUP, SET,,,                   
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE            GET DATA PAGE # INTO PAR                     
*                                                                               
         LA    R0,RPINFO           BSEARCH PAGE TO GET DATA INDEX               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BSEARCH             GET DATA INDEX                               
         IF    NZ,BEGIN            IF DATA NOT FOUND,                           
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN  ,            IF DATA FOUND,,,                             
         MVC   RECQPG,RPNUMB       SET QUICK GET/PUT INFO                       
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECQOFF                                                       
         LH    R3,RPKEYLN                                                       
         LH    R0,DATALN(R3,R1)      GET DATA ADDR, LENGTH                      
         LH    R1,DATAPTR(R3,R1)                                                
         AR    R1,PAR                RETURN R1  - LOCATION OF DATA              
         COMMENT                     RETURN R0  - LEN OF DATA                   
         CLEAR R15                   SET CC=ZERO, DATA FOUND                    
         END                                                                    
         END                                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XLOCATE - LOCATE RECORD (QUICK VERSION)                                      
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
XLOCATE  XPROC SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM         SAVE ENTRY PARM ADDRESSES                    
         ST    R15,SRCHINFO                                                     
         MVC   SRCHSET,RECSET      SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
         IF    ((RECGRP,EQ,0),OR,(RECSET,EQ,0)),BEGIN  IF NULL                  
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         ELSE  BEGIN ,             IF VALID REC GROUP, SET,,,                   
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL CHKQPAGE            TRY QUICK PAGE GET                           
         IF    NZ,BEGIN                                                         
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE            GET DATA PAGE # INTO PAR                     
         END                                                                    
*                                                                               
         LA    R0,RPINFO           BSEARCH PAGE TO GET DATA INDEX               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BSEARCH             GET DATA INDEX                               
         IF    NZ,BEGIN            IF DATA NOT FOUND,                           
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN  ,            IF DATA FOUND,,,                             
         MVC   RECQPG,RPNUMB       SET QUICK GET/PUT INFO                       
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECQOFF                                                       
         LH    R3,RPKEYLN                                                       
         LH    R0,DATALN(R3,R1)      GET DATA ADDR, LENGTH                      
         LH    R1,DATAPTR(R3,R1)                                                
         AR    R1,PAR                RETURN R1  - LOCATION OF DATA              
         COMMENT                     RETURN R0  - LEN OF DATA                   
         CLEAR R15                   SET CC=ZERO, DATA FOUND                    
         END                                                                    
         END                                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  LLOCNEXT - LOCATE NEXT (LONG VERSION)                                        
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      @R2 - SEARCH NAME UPDATED WITH VALUE OF NEXT, IF EXISTS                  
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
LLOCNEXT XPROC SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM         SAVE ENTRY PARM ADDRESSES                    
         ST    R15,SRCHINFO                                                     
         MVC   SRCHSET,RECSET      SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
         CLEAR RECQPG              RESET QUICK GET/PUT INFO                     
         CLEAR RECQOFF                                                          
         IF    ((RECGRP,EQ,0),OR,(RECSET,EQ,0)),BEGIN  IF NULL                  
         B     NONEXT                                                           
         END                                                                    
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE            GET DATA PAGE INTO @PAR                      
         LA    R0,RPINFO           BSEARCH PAGE TO GET DATA INDEX               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BSEARCH             GET CURRENT DATA INDEX                       
         IF    Z,BEGIN             IF ENTRY FOUND, POINT AT NEXT                
         AH    R1,RPNTRYLN                                                      
         END                                                                    
         LH    R3,RPXEND                                                        
         AR    R3,PAR                                                           
         IF    (R1,GE,R3),BEGIN    IF NEXT ENTRY ON NEXT PAGE,,                 
         LA    R15,RGROUP                                                       
         ACALL NEXTPAGE               GO GET NEXT PAGE                          
         BNZ   NONEXT                                                           
         LH    R1,RPXSTART            POINT TO 1ST INDEX ON NEW PAGE            
         AR    R1,PAR                                                           
         END                                                                    
*                                                                               
         IF    (@R1,NE,RECSET),BEGIN  NO NEXT LINE IN THIS SEARCH SET           
         B     NONEXT                                                           
         END                                                                    
*                                                                               
         MVC   RECQPG,RPNUMB       SET QUICK GET/PUT INFO                       
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECQOFF          SET QUICK GET/PUT INFO                       
         L     R2,SRCHPARM                                                      
         LH    R3,RPNAMELN                                                      
         LA    R4,NDXNAME(R1)                                                   
         LR    R5,R3                                                            
         MVCL  R2,R4               UPDATE SREACH NAME TO PREVIOUS               
         LH    R3,RPKEYLN                                                       
         LH    R0,DATALN(R3,R1)    RETURN R1,R0 - DATA LOC,LEN                  
         LH    R1,DATAPTR(R3,R1)                                                
         AR    R1,PAR                                                           
         COMMENT                                                                
         CLEAR R15                 SET CC=ZERO, FOUND NEXT                      
*                                                                               
         B     NEXTDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
NONEXT   LABEL ,                   NO NEXT LINE                                 
         CLEAR R0                                                               
         CLEAR R1                                                               
         LA    R15,4                                                            
         B     NEXTDONE                                                         
*                                                                               
NEXTDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XLOCNEXT - LOCATE NEXT, USE QUICK GET/LOC INFO                               
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      @R2 - SEARCH NAME UPDATED WITH VALUE OF NEXT, IF EXISTS                  
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
XLOCNEXT XPROC SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM         SAVE ENTRY PARM ADDRESSES                    
         ST    R15,SRCHINFO                                                     
         MVC   SRCHSET,RECSET      SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL CHKQINFO            POINT TO INDEX QUICKLY                       
         BNZ   QNONEXT                                                          
         AH    R1,RPNTRYLN         POINT TO NEXT LINE                           
         LH    R3,RPXEND                                                        
         AR    R3,PAR                                                           
         IF    (R1,GE,R3),QNONEXT  IF NOT ON THIS PAGE ,,, OH NO                
*                                                                               
         IF    (@R1,NE,RECSET),BEGIN  NO NEXT LINE IN THIS SEARCH SET           
         B     QNONEXT                                                          
         END                                                                    
*                                                                               
         MVC   RECQPG,RPNUMB       SET QUICK GET/PUT INFO                       
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECQOFF          SET QUICK GET/PUT INFO                       
         L     R2,SRCHPARM                                                      
         LH    R3,RPNAMELN                                                      
         LA    R4,NDXNAME(R1)                                                   
         LR    R5,R3                                                            
         MVCL  R2,R4               UPDATE SREACH NAME TO PREVIOUS               
         LH    R3,RPKEYLN                                                       
         LH    R0,DATALN(R3,R1)    RETURN R1,R0 - DATA LOC,LEN                  
         LH    R1,DATAPTR(R3,R1)                                                
         AR    R1,PAR                                                           
         COMMENT                                                                
         CLEAR R15                 SET CC=ZERO, FOUND NEXT                      
*                                                                               
         B     QNXTDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
QNONEXT  LABEL ,                   NO QUICK NEXT,                               
         LA    R15,RGROUP          CALL LONG VERSION OF LOCNEXT                 
         L     R2,SRCHPARM                                                      
         ACALL LLOCNEXT                                                         
         B     QNXTDONE                                                         
*                                                                               
QNXTDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  LLOCPREV - LOCATE PREVIOUS RECORD (LONG VERSION)                             
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      @R2 - SEARCH NAME UPDATED WITH VALUE OF PREVIOUS,                        
*            IF IT EXISTS                                                       
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
LLOCPREV PROC  SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM         SAVE ENTRY PARM ADDRESSES                    
         ST    R15,SRCHINFO                                                     
         MVC   SRCHSET,RECSET      SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
         CLEAR RECQPG              RESET QUICK GET/PUT INFO                     
         CLEAR RECQOFF                                                          
         IF    ((RECGRP,EQ,0),OR,(RECSET,EQ,0)),BEGIN  IF NULL                  
         B     NOPREV                                                           
         END                                                                    
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE            GET DATA PAGE INTO @PAR                      
         LA    R0,RPINFO           BSEARCH PAGE TO GET DATA INDEX               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BSEARCH             GET CURRENT DATA INDEX                       
         SH    R1,RPNTRYLN         POINT AT PREVIOUS ENTRY                      
         LH    R3,RPXSTART                                                      
         AR    R3,PAR                                                           
         IF    (R1,LT,R3),BEGIN    IF NEXT ENTRY ON PREV PAGE,,                 
         LA    R15,RGROUP                                                       
         ACALL PREVPAGE               GO GET PREVIOUS PAGE                      
         BNZ   NOPREV                                                           
         LH    R1,RPXEND           POINT TO LAST INDEX ON NEW PAGE              
         AR    R1,PAR                                                           
         SH    R1,RPNTRYLN                                                      
         COMMENT                   R1 - PREVIOUS RECORD NDX ENTRY               
         END                                                                    
*                                                                               
         IF    (@R1,NE,RECSET),BEGIN  NO NEXT LINE IN THIS SEARCH SET           
         B     NOPREV                                                           
         END                                                                    
*                                                                               
         MVC   RECQPG,RPNUMB       SET QUICK GET/PUT INFO                       
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECQOFF                                                       
         L     R2,SRCHPARM                                                      
         LH    R3,RPNAMELN                                                      
         LA    R4,NDXNAME(R1)                                                   
         LR    R5,R3                                                            
         MVCL  R2,R4               UPDATE SRCH NAME W/PREVIOUS                  
         LH    R3,RPKEYLN                                                       
         LH    R0,DATALN(R3,R1)    RETURN R1,R0 - DATA LOC,LEN                  
         LH    R1,DATAPTR(R3,R1)                                                
         AR    R1,PAR                                                           
         COMMENT                                                                
         CLEAR R15                 SET CC=ZERO, FOUND NEXT                      
*                                                                               
         B     PREVDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
NOPREV   LABEL ,                   NO NEXT LINE                                 
         CLEAR R0                                                               
         CLEAR R1                                                               
         LA    R15,4                                                            
         B     PREVDONE                                                         
*                                                                               
PREVDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XLOCPREV - LOCATE PREVIOUS RECORD, USE QUICK GET/LOC INFO                    
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      @R2 - SEARCH NAME UPDATED WITH VALUE OF PREV, IF EXISTS                  
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
XLOCPREV XPROC SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM         SAVE ENTRY PARM ADDRESSES                    
         ST    R15,SRCHINFO                                                     
         MVC   SRCHSET,RECSET      SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL CHKQINFO            POINT TO INDEX QUICKLY                       
         BNZ   QNOPREV                                                          
         SH    R1,RPNTRYLN         POINT TO PREV LINE                           
         LH    R3,RPXSTART                                                      
         AR    R3,PAR                                                           
         IF    (R1,LT,R3),QNOPREV  IF NOT ON THIS PAGE ,,, OH NO                
*                                                                               
         IF    (@R1,NE,RECSET),BEGIN  NO PREV LINE IN THIS SEARCH SET           
         B     QNOPREV                                                          
         END                                                                    
*                                                                               
         MVC   RECQPG,RPNUMB       SET QUICK GET/PUT INFO                       
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECQOFF                                                       
         L     R2,SRCHPARM                                                      
         LH    R3,RPNAMELN                                                      
         LA    R4,NDXNAME(R1)                                                   
         LR    R5,R3                                                            
         MVCL  R2,R4               UPDATE SREACH NAME TO PREVIOUS               
         LH    R3,RPKEYLN                                                       
         LH    R0,DATALN(R3,R1)    RETURN R1,R0 - DATA LOC,LEN                  
         LH    R1,DATAPTR(R3,R1)                                                
         AR    R1,PAR                                                           
         COMMENT                                                                
         CLEAR R15                 SET CC=ZERO, FOUND PREV                      
*                                                                               
         B     QPREDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
QNOPREV  LABEL ,                   NO QUICK PREV,                               
         LA    R15,RGROUP          CALL LONG VERSION OF LOCPREV                 
         L     R2,SRCHPARM                                                      
         ACALL LLOCPREV                                                         
         B     QPREDONE                                                         
*                                                                               
QPREDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XLOCFRST - LOCATE FIRST ACTUAL RECORD IN RANGE,,,                            
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME FOR START OF RANGE                                     
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      R15 - CC = ZERO, IF A RECORD IS FOUND                                    
*            CC = NZ, IF NO RECORDS AFTER SPECIFIED RECORD NAME                 
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
XLOCFRST XPROC                                                                  
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ACALL LLOCATE                                                          
         IF    NZ,BEGIN                                                         
         LA    R15,RGROUP                                                       
         ACALL LLOCNEXT                                                         
         END                                                                    
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XLOCLAST - LOCATE LAST ACTUAL RECORD IN RANGE,,,                             
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME FOR END OF RANGE                                       
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF DATA                                                     
*       R1 - LOCATION OF DATA                                                   
*      R15 - CC = ZERO, IF A RECORD IS FOUND                                    
*            CC = NZ, IF NO RECORDS BEFORE SPECIFIED RECORD NAME                
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
XLOCLAST XPROC                                                                  
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ACALL LLOCATE                                                          
         IF    NZ,BEGIN                                                         
         LA    R15,RGROUP                                                       
         ACALL LLOCPREV                                                         
         END                                                                    
         PRETURN (R0,R1)                                                        
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         TITLE 'PUT RECORD ROUTINE'                                             
*box                                                                            
*                                                                               
*                                                                               
*  XPUT   - SAVE SPECIFIED RECORD                                               
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - RECORD DATA LENGTH                                                 
*       R1 - RECORD DATA ADDRESS                                                
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC = ZERO                                                          
*            CC = NEG, IF NO MORE ROOM                                          
*            CC = POS, IF INVALID SET, REC  GROUP ID (NO ZERO'S!)               
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*                                                                               
PUTWA    RECORD BEGIN                                                           
PUTLOC   DS    F                   RECORD LOCATION                              
PUTLEN   DS    F                   RECORD LENGTH                                
PUTNDX   DS    XL(MXNTRYLN)        DUMMY NDX AREA                               
PUTKEY   EQU   PUTNDX,MXKEYLN      SEARCH KEY                                   
PUTSET   EQU   PUTKEY,4              SEARCH SET                                 
PUTNAME  EQU   PUTKEY+4,MXNAMELN     SEARCH NAME (RECORD NAME)                  
         END                                                                    
MINSPACE EQU   1024                MIN FREE SPACE AFTER PAGE CONDENSE           
*-                                                                              
XPUT     XPROC PUTWA                                                            
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15              SAVE CALLING PARMS                           
         ST    R0,PUTLEN                                                        
         ST    R1,PUTLOC                                                        
         MVC   PUTSET,RECSET       SAVE RECORD SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,PUTNAME                                                       
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE RECORD NAME                             
*                                                                               
         COMMENT                   VALIDITY CHECK                               
         IF    (RECGRP,EQ,0),BADPUT                                             
         IF    (RECSET,EQ,0),BADPUT   (LOWEST LOGICAL RECD RESEVED)             
         IF    (RECSET,EQ,-1),BADPUT  (HIGHEST LOGICAL RECD RESERVED)           
*                                                                               
         COMMENT                   GET DATA PAGE INTO @PAR                      
         LA    R15,RGROUP                                                       
         LA    R2,PUTKEY                                                        
         ACALL CHKQPAGE            CHECK QUICK PAGE INFO FIRST                  
         IF    NZ,BEGIN            IF QUICK INFO NOT CORRECT,,                  
         LA    R15,RGROUP                                                       
         LA    R2,PUTKEY                                                        
         ACALL GETDPAGE            GET DATA PAGE INTO @PAR                      
         END                                                                    
*                                                                               
         COMMENT                   CHECK PAGE FOR SPACE                         
         L     R4,PUTLEN                                                        
         LA    R4,MXNTRYLN+16(R4)  R4 - MAX INDEX LEN + MAX DATA LEN            
         LH    R3,RPDEND                                                        
         SH    R3,RPXEND           R3 - SPACE LEFT ON BLOCK                     
         IF    (R4,GT,R3),BEGIN    IF NOT ENOUGH SPACE,                         
         ACALL CONDPAGE               CONDENSE PAGE                             
         LH    R3,RPDEND                                                        
         SH    R3,RPXEND                                                        
         COMMENT                   CHECK FOR SPACE AFTER CONDENSE               
         IF    ((R4,GT,R3),OR,(R3,LT,MINSPACE)),BEGIN    IF NONE,,              
         LA    R15,RGROUP                                                       
         ACALL ADDDPAGE               ADD A NEW PAGE (IE. SPLIT PAGE)           
         BNZ   NOSPACE                                                          
         LA    R15,RGROUP                                                       
         LA    R2,PUTKEY                                                        
         ACALL GETDPAGE               AND GET CORRECT DATA PAGE @PAR            
         ACALL CONDPAGE                                                         
         LH    R3,RPDEND                                                        
         SH    R3,RPXEND                                                        
         IF    (R3,LT,R4),' BOMB'     FOUND SPACE, OR ELSE !                    
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   BSEARCH PAGE TO GET DATA INDEX               
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,PUTKEY                                                        
         ACALL BSEARCH             GET CURRENT DATA INDEX                       
         COMMENT                   R1 - INDEX ADDRESS, IF EXIST                 
*                                                                               
         COMMENT                   SAVE QUICK INFO                              
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECPOFF                                                       
         L     R3,RPNUMB                                                        
         ST    R3,RECPPG                                                        
*                                                                               
         COMMENT                   IF RECORD EXISTS, REPLACE IT                 
         IF    Z,BEGIN                                                          
         LH    R3,RPKEYLN                                                       
         L     R2,PUTLEN           R2 - DATA LEN, ROUNDED UP                    
         LA    R2,15(R2)                                                        
         SRL   R2,4                                                             
         SLL   R2,4                                                             
         LH    R4,DATALN(R3,R1)    R4 - LEN OF CURRENT DATA SPOT,               
         LA    R4,15(R4)                ROUNDED UP                              
         SRL   R4,4                                                             
         SLL   R4,4                                                             
         IF    (R2,GT,R4),BEGIN    IF DATA DOES NOT FIT, GET NEW                
         LH    R4,RPDEND              SPOT AT END OF DATA                       
         SR    R4,R2                  R4 - NEW SPOT                             
         STH   R4,RPDEND                                                        
         STH   R4,DATAPTR(R3,R1)                                                
         END                                                                    
         LH    R2,DATAPTR(R3,R1)                                                
         AR    R2,PAR                                                           
         L     R3,PUTLEN                                                        
         L     R4,PUTLOC                                                        
         LR    R5,R3                                                            
         MVCL  R2,R4               REPLACE DATA,                                
         LH    R3,RPKEYLN                                                       
         L     R2,PUTLEN                                                        
         STH   R2,DATALN(R3,R1)    REPLACE DATA LENGTH,                         
         PMARK PAR                                                              
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         COMMENT                   IF NEW RECORD, INSERT IT                     
         ELSE  BEGIN ,,                                                         
         L     R2,PUTLEN           R2 - DATA LENGTH ROUNDED UP                  
         LA    R2,15(R2)                                                        
         SRL   R2,4                                                             
         SLL   R2,4                                                             
         LH    R4,RPDEND           R4 - SPOT FOR DATA                           
         SR    R4,R2               PUT DATA AT END OF DATA AREA                 
         STH   R4,RPDEND           (NOTE: DATA AREA GROWS UP)                   
         LH    R3,RPKEYLN                                                       
         LA    R5,PUTKEY           CREATE NEW DATA INDEX                        
         STH   R4,DATAPTR(R3,R5)   SAVE DATA POINTER, LENGTH                    
         L     R0,PUTLEN                                                        
         STH   R0,DATALN(R3,R5)                                                 
         LH    R2,DATAPTR(R3,R5)   SAVE DATA                                    
         AR    R2,PAR                                                           
         L     R3,PUTLEN                                                        
         L     R4,PUTLOC                                                        
         LR    R5,R3                                                            
         MVCL  R2,R4               SAVE DATA                                    
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,PUTNDX                                                        
         ACALL BINSERT             INSERT NEW DATA INDEX                        
         SR    R0,PAR                                                           
         STH   R0,RPXEND           UPDATE END OF INDEXES POINTER                
         PMARK PAR                                                              
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         B     PUTDONE                                                          
*                                                                               
*  EXITS                                                                        
*                                                                               
BADPUT   LABEL ,                                                                
         LA    R15,4                                                            
         B     PUTDONE                                                          
*                                                                               
NOSPACE  LABEL ,                                                                
         L     R15,=F'-4'                                                       
         B     PUTDONE                                                          
*                                                                               
PUTDONE  LABEL ,                   NORMAL EXIT                                  
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         TITLE 'DELETE RECORDS ROUTINES'                                        
*box                                                                            
*                                                                               
*                                                                               
*  XDELETE - XDELETE A RECORD                                                   
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO, RECORD DELETED                                            
*            CC=NZ, RECORD NOT FOUND                                            
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*                                                                               
XDELETE  XPROC SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM                                                      
         ST    R15,SRCHINFO        SAVE ENTRY PARM ADDRESSES                    
         MVC   SRCHSET,RECSET                                                   
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SERACH NAME                             
*                                                                               
         COMMENT                   VALIDITY CHECK                               
         IF    (RECGRP,EQ,0),NODELETE                                           
         IF    (RECSET,EQ,0),NODELETE                                           
*                                                                               
         COMMENT                   GET DATA PAGE INTO @PAR                      
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL CHKQPAGE            CHECK QUICK PAGE INFO FIRST                  
         IF    NZ,BEGIN            IN QUICK INFO NOT CORRECT,,                  
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE                                                         
         END                                                                    
*                                                                               
         COMMENT                   DELETE ENTRY                                 
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BDELETE             DELETE ENTRY                                 
         BNZ   NODELETE                                                         
         SR    R0,PAR                                                           
         STH   R0,RPXEND                                                        
         PMARK PAR                                                              
         IF    (RPXSTART,EQ,RPXEND),BEGIN   IF PAGE NOW EMPTY,,,                
         LA    R15,RGROUP                                                       
         ACALL DELDPAGE                        DELETE IT                        
         CLEAR RECQPG                          AND CLEAR QUICK INFO             
         CLEAR RECQOFF                                                          
         CLEAR RECPPG                                                           
         CLEAR RECPOFF                                                          
         END                                                                    
         CLEAR R15                                                              
*                                                                               
         B     DELDONE                                                          
*                                                                               
*  EXITS                                                                        
*                                                                               
NODELETE LABEL ,                                                                
         LA    R15,4                                                            
         B     DELDONE                                                          
*                                                                               
DELDONE  LABEL ,                   NORMAL EXIT                                  
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XDELRECS  - DELETE A RANGE OF RECORDS                                        
*                                                                               
*  DELETE ALL RECORDS FROM RECORD #1 TO RECORD #2 INCLUSIVE.                    
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*            (CONTAINS SET NUMBER OF FIRST RECORD)                              
*      @R0 - NAME OF FIRST RECORD                                               
*      @R1 - NAME OF SECOND RECORD                                              
*       R2 - SET NUMBER OF SECOND RECORD                                        
*            (ZERO IMPLIES SAME AS FIRST)                                       
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO, ALL RECORDS DELETED                                       
*            CC=NZ, NO RECORDS IN RANGE                                         
*                                                                               
*                                                                               
*                                                                               
DDWA     RECORD BEGIN ,                                                         
DDXFIRST DS    XL(MXKEYLN)         KEY OF FIRST RECORD                          
DDXFSET  EQU   DDXFIRST,L'NDXSET       RECORD SET                               
DDXFNAME EQU   DDXFIRST+L'NDXSET,0     RECORD NAME                              
DDXLAST  DS    XL(MXKEYLN)         KEY FOR SECOND (LAST) RECORD                 
DDXLSET  EQU   DDXLAST,L'NDXSET        RECORD SET                               
DDXLNAME EQU   DDXLAST+L'NDXSET,0      RECORD NAME                              
DDPAGE1  DS    F                   PAGE THAT CONTAINS FIRST DELETE              
DDPOINT1 DS    H                   OFFSET OF FIRST DELETE ON PAGE               
DDPAGE2  DS    F                   PAGE THAT CONTAINS LAST DELETE               
DDPOINT2 DS    H                   OFFSET OF END OF LAST DEL ON PAGE            
DDTEMP   DS    0X                  PAGE SIZED TEMP AREA                         
*                                  AREA IS MANUALLY PUSHED, POP'D               
         END                                                                    
         DS    0S(4-L'NDXSET)      SET NUMBER MUST BE FULLWORD                  
*                                                                               
*                                                                               
XDELRECS XPROC DDWA                                                             
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         LR    R15,R2                                                           
         IF    (RECGRP,EQ,0),NORECS                                             
         IF    (RECSET,EQ,0),NORECS                                             
*                                                                               
         COMMENT                   SAVE SEARCH KEYS FOR DELETE RANGE            
         MVC   DDXFSET,RECSET      SAVE FIRST RECORD KEY: SET, NAME             
         LR    R2,R0                                                            
         LH    R3,RECNLEN                                                       
         LA    R4,DDXFNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2                                                            
         LR    R2,R15                                                           
         ST    R2,DDXLSET          SAVE LAST RECORD KEY: SET, NAME              
         IF    (R2,Z),BEGIN                                                     
         MVC   DDXLSET,DDXFSET                                                  
         END                                                                    
         LR    R2,R1                                                            
         LH    R3,RECNLEN                                                       
         LA    R4,DDXLNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2                                                            
*                                                                               
         COMMENT                   POINT TO FIRST RECORD TO DELETE              
         LA    R15,RGROUP                                                       
         LA    R2,DDXFIRST                                                      
         ACALL GETDPAGE            GET PAGE CONTAINING RECORD                   
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,DDXFIRST                                                      
         ACALL BSEARCH             GET RECORD INDEX OFFSET                      
         LH    R3,RPXEND                                                        
         AR    R3,PAR                                                           
         IF    (R1,GT,R3),BEGIN    IF RECD DOES NOT EXIST,,                     
         LA    R15,RGROUP                                                       
         ACALL NEXTPAGE               MAY HAVE TO START DELETING                
         BNZ   NORECS                 ON NEXT PAGE                              
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         END                                                                    
         SR    R1,PAR                                                           
         STH   R1,DDPOINT1         SAVE PLACE TO START DELETING                 
         L     R0,RPNUMB                                                        
         ST    R0,DDPAGE1                                                       
*                                                                               
         COMMENT                   POINT TO LAST RECD IF ON PAGE                
         LA    R15,RGROUP                                                       
         LA    R2,DDXLAST                                                       
         ACALL GETDPAGE                                                         
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,DDXLAST                                                       
         ACALL BSEARCH                                                          
         IF    Z,BEGIN             IF RECORD FOUND, BUMP PAST IT                
         AH    R1,RPNTRYLN         THIS DELETE IS INCLUSIVE                     
         END                                                                    
         SR    R1,PAR                                                           
         STH   R1,DDPOINT2         SAVE POINT TO END DELETING                   
         L     R0,RPNUMB                                                        
         ST    R0,DDPAGE2                                                       
*                                                                               
         COMMENT                   VALIDITY CHECK FOR ASCENDING RANGE           
         LA    R2,DDXFIRST                                                      
         LH    R3,RPKEYLN                                                       
         LA    R4,DDXLAST                                                       
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         BH    NORECS                                                           
         COMMENT                   VALIDTY CHECK FOR NON VOID RANGE             
         IF    (DDPAGE1,EQ,DDPAGE2),BEGIN                                       
         IF    (DDPOINT1,EQ,DDPOINT2),NORECS                                    
         END                                                                    
*-                                                                              
*-       PROCESS SINGLE PAGE DELETE                                             
*-                                                                              
         IF    (DDPAGE1,EQ,DDPAGE2),BEGIN                                       
         A     R13,=A(L'RPAGE)     XPUSH TEMP AREA, DDTEMP                      
         LA    R2,DDTEMP                                                        
         LH    R3,RPXEND                                                        
         SH    R3,DDPOINT2                                                      
         LH    R4,DDPOINT2                                                      
         AR    R4,PAR                                                           
         LR    R5,R3               MOVE ENTRIES AFTER DELETE POINT              
         MVCL  R2,R4               TO TEMP BUFFER                               
         LH    R2,DDPOINT1                                                      
         AR    R2,PAR                                                           
         LH    R3,RPXEND                                                        
         SH    R3,DDPOINT2                                                      
         LA    R4,DDTEMP                                                        
         LR    R5,R3               NOW MOVE UP ENDING ENTRIES,                  
         MVCL  R2,R4               THIS DELETES OVERWRITTEN ENTRIES             
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
         LH    R3,DDPOINT2         UPDATE INDEX POINTERS                        
         SH    R3,DDPOINT1         R3 - LENGTH OF DELETED INDEXES               
         LH    R2,RPXEND                                                        
         SR    R2,R3                                                            
         STH   R2,RPXEND                                                        
         LA    R1,RPINFO                                                        
         USING BSINFO,R1                                                        
         LH    R2,RPXEND                                                        
         SH    R2,RPXSTART                                                      
         ST    R2,BSEND                                                         
         DROP  R1                                                               
         PMARK PAR                                                              
         IF    (RPXSTART,EQ,RPXEND),BEGIN   IF PAGE NOW EMPTY,                  
         LA    R15,RGROUP                                                       
         ACALL DELDPAGE                         DELETE IT                       
         END                                                                    
         END                                                                    
*-                                                                              
*-       PROCESS MULTIPLE PAGE DELETE                                           
*-                                                                              
         IF    (DDPAGE1,NE,DDPAGE2),BEGIN                                       
* IF MULTI-PAGE DELETE, 1ST WE DELETE ALL THOSE PAGES THAT ARE TO               
* BE COMPLETELY DELETED.  THIS IS DONE BELOW. WE WORK BACKWARDS                 
* FROM THE LAST PAGE, THIS IS SIMPLE BECAUSE DELDPAGE ALWAYS                    
* RETURNS WITH PAR POINTING TO THE PREVIOUS PAGE.                               
         LA    R15,RGROUP                                                       
         ACALL PREVPAGE            WE WORK BACKWARDS, FROM LAST                 
         WHILE (RPNUMB,NE,DDPAGE1),BEGIN                                        
         LA    R15,RGROUP                                                       
         ACALL DELDPAGE            DELETE ALL COMPLETE PAGES 1ST                
         COMMENT                   DELDPAGE RETNS PREV PAGE @PAR                
         END                                                                    
*                                                                               
         COMMENT                   DELETE RECORDS ON FIRST BLOCK                
         L     R0,DDPAGE1                                                       
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         LH    R2,DDPOINT1         WE JUST FIX ENDING INDEX PTRS                
         STH   R2,RPXEND                                                        
         LA    R1,RPINFO                                                        
         USING BSINFO,R1                                                        
         LH    R2,RPXEND                                                        
         SH    R2,RPXSTART                                                      
         ST    R2,BSEND                                                         
         DROP  R1                                                               
         PMARK PAR                                                              
*  WARNING: THE DELDPAGE ROUTINE MAY CAUSE A DATA PAGE TO CHANGE                
*  PAGE NUMBERS.  THIS OCCURS WHEN ONLY ONE PAGE IS LEFT AND THE                
*  MASTER PAGE IS AXED.  IF THIS WERE TO OCCUR, DDPAGE1 OR DDPAGE2              
*  MIGHT BE IN ERROR...  IT DOES NOT OCCUR, IF WE TAKE CARE OF 1ST              
*  PAGE BEFORE THE LAST PAGE,, AS THE 1ST PAGE CONTAINS A ZERO ENTRY            
*  AND WILL NEVER BE EMPTY.  AND HEY, LET'S BE CAREFUL OUT THERE !              
         IF    (RPXSTART,EQ,RPXEND),BEGIN   IF PAGE NOW EMPTY,                  
         LA    R15,RGROUP                                                       
         ACALL DELDPAGE                         DELETE IT                       
         END                                                                    
*                                                                               
         COMMENT                   DELETE RECORDS ON LAST BLOCK                 
         L     R0,DDPAGE2                                                       
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         A     R13,=A(L'RPAGE)     XPUSH TEMP AREA, DDTEMP                      
         LA    R2,DDTEMP                                                        
         LH    R3,RPXEND                                                        
         SH    R3,DDPOINT2                                                      
         LH    R4,DDPOINT2                                                      
         AR    R4,PAR                                                           
         LR    R5,R3               MOVE ENTRIES AFTER DELETE POINT              
         MVCL  R2,R4               TO TEMP BUFFER                               
         LH    R2,RPXSTART                                                      
         AR    R2,PAR                                                           
         LH    R3,RPXEND                                                        
         SH    R3,DDPOINT2                                                      
         LA    R4,DDTEMP                                                        
         LR    R5,R3               NOW MOVE UP ENDING ENTRIES,                  
         MVCL  R2,R4               THIS DELETES OVERWRITTEN ENTRIES             
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
         LH    R3,DDPOINT2         UPDATE INDEX POINTERS                        
         SH    R3,RPXSTART         R3 - LENGTH OF DELETED INDEXES               
         LH    R2,RPXEND                                                        
         SR    R2,R3                                                            
         STH   R2,RPXEND                                                        
         LA    R1,RPINFO                                                        
         USING BSINFO,R1                                                        
         LH    R2,RPXEND                                                        
         SH    R2,RPXSTART                                                      
         ST    R2,BSEND                                                         
         DROP  R1                                                               
         PMARK PAR                                                              
         IF    (RPXSTART,EQ,RPXEND),BEGIN   IF PAGE NOW EMPTY,                  
         LA    R15,RGROUP                                                       
         ACALL DELDPAGE                         DELETE IT                       
         END                                                                    
         END                                                                    
         CLEAR R15                                                              
*                                                                               
         B     DELSDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
NORECS   LABEL ,                                                                
         LA    R15,4 FOR VOID RANGE                                             
         B     DELSDONE                                                         
*                                                                               
DELSDONE LABEL ,                   NORMAL EXIT                                  
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         TITLE 'COUNT RECORDS ROUTINE'                                          
*box                                                                            
*                                                                               
*                                                                               
*  XCNTRECS  - COUNT A RANGE OF RECORDS                                         
*                                                                               
*  COUNT ALL RECORDS FROM RECORD #1 TO RECORD #2 INCLUSIVE.                     
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*            (CONTAINS SET NUMBER OF FIRST RECORD)                              
*      @R0 - NAME OF FIRST RECORD                                               
*      @R1 - NAME OF SECOND RECORD                                              
*       R2 - SET NUMBER OF SECOND RECORD                                        
*            (ZERO IMPLIES SAME AS FIRST)                                       
*                                                                               
*  ON EXIT:                                                                     
*       R0 - TOTAL BYTE COUNT (DATA ONLY) OF RECORDS                            
*      R15 - (and CC) NUMBER OF RECORDS                                         
*                                                                               
*                                                                               
CTWA     RECORD BEGIN ,                                                         
CTXFIRST DS    XL(MXKEYLN)         KEY OF FIRST RECORD                          
CTXFSET  EQU   CTXFIRST,L'NDXSET       RECORD SET                               
CTXFNAME EQU   CTXFIRST+L'NDXSET,0     RECORD NAME                              
CTXLAST  DS    XL(MXKEYLN)         KEY FOR SECOND (LAST) RECORD                 
CTXLSET  EQU   CTXLAST,L'NDXSET        RECORD SET                               
CTXLNAME EQU   CTXLAST+L'NDXSET,0      RECORD NAME                              
CTPAGE1  DS    F                   PAGE THAT CONTAINS FIRST COUNT               
CTPOINT1 DS    H                   OFFSET OF FIRST COUNT ON PAGE                
CTPAGE2  DS    F                   PAGE THAT CONTAINS LAST COUNT                
CTPOINT2 DS    H                   OFFSET OF END OF LAST CNT ON PAGE            
CTTEMP   DS    0X                  PAGE SIZED TEMP AREA                         
*                                  AREA IS MANUALLY PUSHED, POP'D               
         END                                                                    
         DS    0S(4-L'NDXSET)      SET NUMBER MUST BE FULLWORD                  
*                                                                               
*                                                                               
XCNTRECS XPROC CTWA                                                             
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         LR    R15,R2                                                           
         IF    (RECGRP,EQ,0),NOCOUNT                                            
         IF    (RECSET,EQ,0),NOCOUNT                                            
*                                                                               
         COMMENT                   SAVE SEARCH KEYS FOR COUNT RANGE             
         MVC   CTXFSET,RECSET      SAVE FIRST RECORD KEY: SET, NAME             
         LR    R2,R0                                                            
         LH    R3,RECNLEN                                                       
         LA    R4,CTXFNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2                                                            
         LR    R2,R15                                                           
         ST    R2,CTXLSET          SAVE LAST RECORD KEY: SET, NAME              
         IF    (R2,Z),BEGIN                                                     
         MVC   CTXLSET,CTXFSET                                                  
         END                                                                    
         LR    R2,R1                                                            
         LH    R3,RECNLEN                                                       
         LA    R4,CTXLNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2                                                            
*                                                                               
         COMMENT                   POINT TO LAST RECD TO COUNT                  
         COMMENT                                                                
         COMMENT ,                 (WE POINT TO LAST, THEN FIRST                
         COMMENT                    FOR EFFICIENCY REASONS)                     
         LA    R15,RGROUP                                                       
         LA    R2,CTXLAST                                                       
         ACALL GETDPAGE                                                         
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,CTXLAST                                                       
         ACALL BSEARCH                                                          
         IF    Z,BEGIN             IF RECORD FOUND, BUMP PAST IT                
         AH    R1,RPNTRYLN         THIS COUNT IS INCLUSIVE                      
         END                                                                    
         SR    R1,PAR                                                           
         STH   R1,CTPOINT2         SAVE POINT TO END COUNTING                   
         L     R0,RPNUMB                                                        
         ST    R0,CTPAGE2                                                       
*                                                                               
         COMMENT                   POINT TO FIRST RECORD TO COUNT               
         LA    R15,RGROUP                                                       
         LA    R2,CTXFIRST                                                      
         ACALL GETDPAGE            GET PAGE CONTAINING RECORD                   
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,CTXFIRST                                                      
         ACALL BSEARCH             GET RECORD INDEX OFFSET                      
         LH    R3,RPXEND                                                        
         AR    R3,PAR                                                           
         IF    (R1,GT,R3),BEGIN    IF RECD DOES NOT EXIST,,                     
         LA    R15,RGROUP                                                       
         ACALL NEXTPAGE               MAY HAVE TO START COUNTING                
         BNZ   NOCOUNT                ON NEXT PAGE                              
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         END                                                                    
         SR    R1,PAR                                                           
         STH   R1,CTPOINT1         SAVE PLACE TO START COUNTING                 
         L     R0,RPNUMB                                                        
         ST    R0,CTPAGE1                                                       
*                                                                               
         COMMENT                   VALIDITY CHECK FOR ASCENDING RANGE           
         LA    R2,CTXFIRST                                                      
         LH    R3,RPKEYLN                                                       
         LA    R4,CTXLAST                                                       
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         BH    NOCOUNT                                                          
         COMMENT                   VALIDTY CHECK FOR NON VOID RANGE             
         IF    (CTPAGE1,EQ,CTPAGE2),BEGIN                                       
         IF    (CTPOINT1,EQ,CTPOINT2),NOCOUNT                                   
         END                                                                    
*                                                                               
         COMMENT                   GET R1 - FIRST INDEX ENTRY                   
         LH    R1,CTPOINT1                                                      
         AR    R1,PAR                                                           
         IF    (RPNUMB,NE,CTPAGE1),BEGIN PAGE MUST STILL BE FIRST ONE           
         BOMB                                                                   
         END                                                                    
*                                                                               
         COMMENT                   COUNT RECORDS, BYTES                         
         COMMENT                                                                
         COMMENT                   R1 - INDEX ENTRY                             
         LH    R2,RPXEND           R2 - END OF INDEX ENTRIES                    
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN          R3 - KEY LENGTH                              
         CLEAR R4                  COUNT RECORDS                                
         CLEAR R5                  COUNT BYTES                                  
*                                                                               
         COMMENT                   LOOP THRU RECS                               
         COMMENT                   WHILE NOT ON LAST PAGE WE COUNT              
         COMMENT                   ALL RECORDS ON PAGE                          
         WHILE (RPNUMB,NE,CTPAGE2),BEGIN                                        
         WHILE (R1,LT,R2),BEGIN                                                 
         LA    R4,1(R4)                                                         
         AH    R5,DATALN(R3,R1)                                                 
         AH    R1,RPNTRYLN                                                      
         END                                                                    
         LA    R15,RGROUP                                                       
         ACALL NEXTPAGE                                                         
         IF    NZ,BEGIN                                                         
         BOMB                                                                   
         END                                                                    
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LH    R2,RPXEND                                                        
         AR    R2,PAR                                                           
         END                                                                    
*                                                                               
         COMMENT                   LOOP THRU RECS,                              
         COMMENT                   COUNT TO END OF RANGE ON LAST PAGE           
         LH    R2,CTPOINT2                                                      
         AR    R2,PAR                                                           
         WHILE (R1,LT,R2),BEGIN                                                 
         LA    R4,1(R4)                                                         
         AH    R5,DATALN(R3,R1)                                                 
         AH    R1,RPNTRYLN                                                      
         END                                                                    
*                                                                               
         COMMENT                   THATS ALL FOLKS                              
         LR    R0,R5               BYTE COUNT                                   
         LR    R15,R4              RECORD COUNT                                 
*                                                                               
         B     CNTDONE                                                          
*                                                                               
*  EXITS                                                                        
*                                                                               
NOCOUNT  LABEL ,                                                                
         CLEAR R0                                                               
         CLEAR R15 FOR VOID RANGE                                               
         B     CNTDONE                                                          
*                                                                               
CNTDONE  LABEL ,                   NORMAL EXIT                                  
         PRETURN R0                                                             
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         TITLE 'INPLACE REPLACE'                                                
*box                                                                            
*                                                                               
*                                                                               
*  XREPLACE - INPLACE (!!!) REPLACE OF RECORD                                   
*                                                                               
*  THIS ROUTINE IS VERY RESTRICTIVE !!  IN GENERAL, "XPUT"                      
*  ROUTINE SHOULD BE USED TO REPLACE A RECORD.  THIS ROUTINE WAS                
*  CODED SPECIFICALLY FOR REPLACING "AINFO" RECORD. SEE ADDITIONAL              
*  NOTES BELOW                                                                  
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - RECORD DATA LENGTH                                                 
*       R1 - RECORD DATA ADDRESS                                                
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC = ZERO, IF RECORD REPLACED                                      
*            CC = NZ, IF UNABLE TO REPLACE RECORD                               
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  NOTE: THIS ROUTINE DOES AN INPLACE REPLACE OF SPECIFIED                      
*    RECORD.  THIS ROUTINE HAS THE FOLLOWING RESTRICTIONS:                      
*       1. RECORD TO REPLACE MUST EXIST.                                        
*          (USE XPUT OR XPUTLINE TO CREATE ORIGINAL)                            
*       2. RECORD LENGTH MUST EQUAL RECORD LENGTH OF RECORD                     
*          BEING REPLACED.                                                      
*    IF RECORD CAN NOT BE REPLACED THEN, R15 - CC=NZ.                           
*    FINALLY, WE NOTE THAT THIS ROUTINE IS USED TO WRITE THE                    
*    ACTIVE FILE "AINFO" RECORDS.  THIS ROUTINE IS USED AS IT                   
*    WILL NEVER GET A "NO MORE ROOM" ERROR.  DIG IT!                            
*                                                                               
*                                                                               
*                                                                               
XREPWA   RECORD BEGIN                                                           
XREPLOC  DS    F                   RECORD LOCATION                              
XREPLEN  DS    F                   RECORD LENGTH                                
XREPKEY  DS    (MXKEYLN)X          SEARCH KEY                                   
XREPSET  EQU   XREPKEY,4             SEARCH SET NUMBER                          
XREPNAME EQU   XREPKEY+4,MXNAMELN    SEARCH NAME                                
         END                                                                    
*                                                                               
*                                                                               
XREPLACE XPROC XREPWA                                                           
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R1,XREPLOC          SAVE RECORD LOC, LEN                         
         ST    R0,XREPLEN                                                       
*                                                                               
         COMMENT                   CREATE SEARCH KEY:  SET, NAME                
         MVC   XREPSET,RECSET                                                   
         LH    R3,RECNLEN                                                       
         LA    R4,XREPNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
*                                                                               
         COMMENT                   CHECK FOR VALID REC GROUP, SET #             
         IF    ((RECGRP,EQ,0),OR,(RECSET,EQ,0)),BEGIN  IF NULL                  
         LA    R15,4                                                            
         B     XREPDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   GET DATA PAGE IN PAR                         
         LA    R15,RGROUP                                                       
         LA    R2,XREPKEY                                                       
         ACALL GETDPAGE            GET DATA PAGE IN PAR                         
*                                                                               
         COMMENT                   FIND DATA INDEX                              
         LA    R0,RPINFO           BSEARCH PAGE TO GET DATA INDEX               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,XREPKEY                                                       
         ACALL BSEARCH             GET DATA INDEX                               
         IF    NZ,BEGIN            IF DATA NOT FOUND,                           
         LA    R15,4                                                            
         B     XREPDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF DATA FOUND,,,                             
         LH    R3,RPKEYLN                                                       
         LH    R0,DATALN(R3,R1)      GET DATA ADDR, LENGTH                      
         LH    R1,DATAPTR(R3,R1)                                                
         AR    R1,PAR                R1,R0 - EXISTING DATA LOC, LEN             
         IF    (R0,NE,XREPLEN),BEGIN IF LENGTH DOES NOT MATCH                   
         LA    R15,4                                                            
         B     XREPDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF ALL OK, REPLACE OLD RECORD W/NEW          
         LR    R2,R1                                                            
         LR    R3,R0                                                            
         L     R4,XREPLOC                                                       
         L     R5,XREPLEN                                                       
         MVCL  R2,R4               MOVE IN NEW RECORD DATA                      
         PMARK PAR                 MARK PAGE CHANGED                            
         CLEAR R15                 SET CC=ZERO, ALL OK                          
*                                                                               
XREPDONE LABEL ,                   NORMAL EXIT                                  
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'RECORD PAGE HANDLING ROUTINES'                                  
*box                                                                            
*                                                                               
*                                                                               
*  CONDPAGE - CONDENSE DATA PAGE                                                
*                                                                               
*  RECOVER SPACE ON DATA PAGE LOST BY FRAGMENTATION.                            
*  THIS OPERATATION IS SIMILAR TO A LIBRARY CONDENSE.                           
*                                                                               
*  ON ENTRY:                                                                    
*       PAR - PAGE TO CONDENSE                                                  
*  ON EXIT:                                                                     
*       PAR - PAGE IS CONDENSED                                                 
*       R15 - CC=ZERO                                                           
*                                                                               
*                                                                               
CONDWA   RECORD BEGIN                                                           
CONDDMMY DS    4F                  UNUSED                                       
CONDTEMP DS    0F                  TEMP WORK AREA                               
*                                  WORK AREA MANUALLY PUSHED, POP'D             
         END                                                                    
*                                                                               
*                                                                               
CONDPAGE XPROC CONDWA                                                           
         A     R13,=A(L'RPAGE)     XPUSH TEMP AREA                              
         LA    R2,CONDTEMP                                                      
         L     R3,=A(L'RPAGE)                                                   
         LR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4               COPY PAGE @PAR TO TEMP AREA                  
*                                                                               
         COMMENT                   CONDENSE DATA INTO TEMP AREA                 
         USING RPAGE,PAR                                                        
         LH    R1,RPXSTART         R1 - INDEX POINTER (IN PAR)                  
         AR    R1,PAR                                                           
         LH    R0,RPXEND           R0 - END OF INDEXES (IN PAR)                 
         AR    R0,PAR                                                           
         LA    R4,CONDTEMP         R4 - DATA POINTER (IN TEMP AREA)             
         AH    R4,RPDSTART                                                      
         LH    R5,RPDSTART         R5 - DATA OFFSET (IN TEMP AREA)              
         LA    R6,CONDTEMP         R6 - INDEX POINTER (IN TEMP AREA)            
         AH    R6,RPXSTART                                                      
         WHILE (R1,LT,R0),BEGIN    LOOP THRU ALL INDEXS AND DATAS               
         LH    R3,RPKEYLN                                                       
         LH    R14,DATAPTR(R3,R1)  R14 - DATA ADDR (IN @PAR)                    
         AR    R14,PAR                                                          
         LH    R15,DATALN(R3,R1)   R15 - DATA LEN  (ROUNDED UP)                 
         LA    R15,15(R15)                                                      
         SRL   R15,4                                                            
         SLL   R15,4                                                            
         SR    R4,R15              R4,R2 - NEW SPOT FOR DATA                    
         SR    R5,R15              R5 - NEW DATA OFFSET                         
         STH   R5,DATAPTR(R3,R6)   SAVE NEW DATA OFFSET                         
         LR    R2,R4                                                            
         LR    R3,R15                                                           
         MVCL  R2,R14              MOVE DATA                                    
         AH    R1,RPNTRYLN                                                      
         AH    R6,RPNTRYLN                                                      
         END                                                                    
         DROP  PAR                                                              
         USING RPAGE,R1                                                         
         LA    R1,CONDTEMP                                                      
         STH   R5,RPDEND           RESET DATA END POINTER                       
         DROP  R1                                                               
         PMARK PAR                                                              
*                                                                               
         COMMENT                   COPY CONDENSED PAGE TO @PAR                  
         LR    R2,PAR                                                           
         L     R3,=A(L'RPAGE)                                                   
         LA    R4,CONDTEMP                                                      
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         PMARK PAR                                                              
*                                                                               
         CLEAR R15                                                              
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CHKQINFO - VERIFY THAT QUICK GET/LOC POINTERS ARE OK !                       
*                                                                               
*  THE QUICK GET/LOC POINTERS GIVE THE OFFSET AND                               
*  PAGE NUMBER OF THE LAST DATA INDEX REFERENCED.  WHEN                         
*  SEQUENTIALLY ACCESSING A FILE, THESE QUICK GET/LOC                           
*  POINTERS MAY BE USED TO SPEED UP ACCESS. THIS ROUTINE                        
*  CHECKS THE VALIDITY OF THE POINTERS !                                        
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*            (CONTAINS QUICK GET/LOC INFO)                                      
*      @R2 - RECORD KEY (SET,NAME)                                              
*                                                                               
*  ON EXIT:                                                                     
*       R1 - CURRENT LINE INDEX POINTER, ZERO IF DOES NOT EXIST                 
*      R15 - CC=ZERO IF OK, CC=NZ IF INVALID QUICK INFO                         
*      PAR - PAGE OBTAINED                                                      
*                                                                               
CHKQINFO PROC                                                                   
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         IF    ((RECQPG,EQ,0),OR,(RECQOFF,EQ,0)),BEGIN                          
         B     BADQINFO                                                         
         END                                                                    
         L     R0,RECQPG                                                        
         PGET  PAR,(R0)            GET SPECIFIED QUICK PAGE                     
         RPCHECK                   CHECK IT                                     
         IF    ^RPDATA,BEGIN                                                    
         B     BADQINFO                                                         
         END                                                                    
         IF    ((RPNUMB,NE,RGROUP),AND,(RPLINK,NE,RGROUP)),BEGIN                
         B     BADQINFO                                                         
         END                                                                    
         LH    R3,RPXSTART         R3 - START OF INDEX ENTRIES                  
         AR    R3,PAR                                                           
         LH    R4,RPXEND           R4 - END OF INDEX ENTRIES                    
         AR    R4,PAR                                                           
         LH    R1,RECQOFF          R1 - QUICK INDEX POINTER                     
         AR    R1,PAR                                                           
         IF    ((R1,LT,R3),OR,(R1,GE,R4)),BEGIN                                 
         B     BADQINFO                                                         
         END                                                                    
         LH    R5,RPKEYLN          COMPARE QUICK INDEX TO KEY                   
         DEX   R5,' CLC 0(0,R1),0(R2) '                                         
         IF    NZ,BEGIN                                                         
         B     BADQINFO                                                         
         END                                                                    
         COMMENT                   ALL OK -- WE GOT INDEX MATCH                 
         CLEAR R15                                                              
*                                                                               
         B     CHKQDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BADQINFO LABEL ,                                                                
         CLEAR R1                                                               
         LA    R15,4                                                            
         B     CHKQDONE                                                         
*                                                                               
CHKQDONE LABEL ,                   NORAML EXIT                                  
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CHKQPAGE - VERIFY THAT QUICK GET/LOC PAGE POINTER IS OK !                    
*                                                                               
*  THE QUICK GET/LOC POINTERS GIVE THE OFFSET AND                               
*  PAGE NUMBER OF THE LAST DATA INDEX REFERENCED.  WHEN                         
*  SEQUENTIALLY ACCESSING A FILE, THESE QUICK GET/LOC                           
*  POINTERS MAY BE USED TO SPEED UP ACCESS. THIS ROUTINE                        
*  CHECKS THE VALIDITY OF THE QUICK PAGE POINTER.                               
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*            (CONTAINS QUICK GET/LOC INFO)                                      
*      @R2 - RECORD KEY (SET,NAME)                                              
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO IF OK, CC=NZ IF INVALID QUICK INFO                         
*      PAR - PAGE OBTAINED                                                      
*                                                                               
CHKQPAGE PROC                                                                   
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         IF    ((RECQPG,EQ,0),OR,(RECQOFF,EQ,0)),BEGIN                          
         B     BADPINFO                                                         
         END                                                                    
         L     R0,RECQPG                                                        
         PGET  PAR,(R0)            GET SPECIFIED QUICK PAGE                     
         RPCHECK                   CHECK IT                                     
         IF    ^RPDATA,BEGIN                                                    
         B     BADPINFO                                                         
         END                                                                    
         IF    ((RPNUMB,NE,RGROUP),AND,(RPLINK,NE,RGROUP)),BEGIN                
         B     BADPINFO                                                         
         END                                                                    
         LH    R3,RPXFIRST         R3 - 1ST VALID ENTRY LIMIT                   
         AR    R3,PAR                                                           
         LH    R4,RPXLAST          R4 - LAST VALID ENTRYL LIMIT                 
         AR    R4,PAR                                                           
         LH    R5,RPKEYLN          CHECK IF ENTRY GOES ON THIS PAGE             
         DEX   R5,' CLC 0(0,R2),0(R3) '                                         
         IF    LT,BEGIN                                                         
         B     BADPINFO                                                         
         END                                                                    
         LH    R5,RPKEYLN          CHECK IF ENTRY GOES ON THIS PAGE             
         DEX   R5,' CLC 0(0,R2),0(R4) '                                         
         IF    GE,BEGIN                                                         
         B     BADPINFO                                                         
         END                                                                    
         COMMENT                   ALL OK -- WE GOT RIGHT PAGE                  
         CLEAR R15                                                              
*                                                                               
         B     CHKPDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BADPINFO LABEL ,                                                                
         LA    R15,4                                                            
         B     CHKPDONE                                                         
*                                                                               
CHKPDONE LABEL ,                   NORMAL EXIT                                  
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GETDPAGE - GET DATA PAGE                                                     
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*      @R2 - NAME OF RECORD TO FIND                                             
*                                                                               
*  ON EXIT:                                                                     
*       PAR - PAGE TO SEARCH                                                    
*             (IE. IF ANY PAGE CONTAINS THE RECORD, THIS ONE DOES)              
*       R15 - CC=ZERO                                                           
*                                                                               
*                                                                               
*                                                                               
GETDPAGE PROC  ,                   GET PAGE THAT CONTAINS RECORD                
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
*                                                                               
         L     R0,RECGRP                                                        
         PGET  PAR,(R0)            GET ROOT PAGE                                
         RPCHECK                                                                
         IF    RPDATA,GOTBPAGE     IF QUICK PAGE, SEARCH THIS PAGE              
         IF    RPMASTER,BEGIN      IF MASTER PAGE, FIND PAGE TO SRCH            
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR              BINARY SEARCH MASTER PAGE TO                 
         ACALL BSEARCH             FIND CORRECT DATA PAGE                       
         LH    R3,RPKEYLN                                                       
         DEX   R3,' CLC 0(0,R2),0(R1) '                                         
         IF    LT,BEGIN            IF REC IS LESS THAN MASTER ENTRY             
         SH    R1,RPNTRYLN         THEN SEARCH ON PREVIOUS PAGE                 
         END                                                                    
         LH    R2,RPXSTART         UNLESS WE WERE ALREADY ON FIRST              
         AR    R2,PAR              OR HAVE GONE PAST LAST PAGE                  
         LH    R3,RPXEND                                                        
         AR    R3,PAR                                                           
         IF    (R1,LT,R2),BEGIN    R2-1ST REC PAGE, R3-LAST PAGE                
         LR    R1,R2                                                            
         END                                                                    
         IF    (R1,GE,R3),BEGIN                                                 
         LR    R1,R3                                                            
         SH    R1,RPNTRYLN                                                      
         END                                                                    
         COMMENT                   R1 - ADDR OF BLOCK NO TO SEARCH              
         LH    R3,RPKEYLN                                                       
         L     R2,DATAPGNO(R3,R1)  R2 - BLK NUMBER OF BLOCK TO SEARCH           
         PFREE PAR                 FREE MASTER PAGE                             
         PGET  PAR,(R2)            GET PAGE TO SEARCH                           
         RPCHECK                                                                
         END                                                                    
*                                                                               
GOTBPAGE LABEL ,                                                                
         SR    R15,R15                                                          
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  NEXTPAGE - GET NEXT DATA PAGE                                                
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*      PAR - CURRENT DATA PAGE                                                  
*                                                                               
*  ON EXIT:                                                                     
*       PAR - NEXT DATA PAGE                                                    
*       R15 - CC=ZERO, IF NEXT DATA PAGE EXISTS                                 
*             CC=NZ, IF NO NEXT DATA PAGE                                       
*                                                                               
*                                                                               
NEXTPAGE PROC  SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         IF    (RPLINK,EQ,0),BEGIN IF NO MASTER PAGE, NO NEXT PAGE              
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         LH    R2,RPXLAST                                                       
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         L     R5,=X'FF000000'                                                  
         CLCL  R2,R4                                                            
         IF    E,BEGIN             IF LAST = X'FFFF..', NO NEXT PAGE            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         ELSE  BEGIN  ,,,          IF THERE IS NEXT PAGE, GET IT                
         LA    R2,SRCHKEY                                                       
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXLAST                                                       
         AR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4               SAVE SEARCH KEY FOR NEXT PAGE                
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE            GET NEXT DIRECTORY PAGE !                    
         CLEAR R15                                                              
         END                                                                    
         END                                                                    
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  PREVPAGE - GET PREVIOUS DATA PAGE                                            
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*      PAR - CURRENT DATA PAGE                                                  
*                                                                               
*  ON EXIT:                                                                     
*       PAR - PREVIOUS DATA PAGE                                                
*       R15 - CC=ZERO, IF PREVIOUS DATA PAGE EXISTS                             
*             CC=NZ, IF NO PREVIOUS DATA PAGE                                   
*                                                                               
*                                                                               
PREVPAGE PROC  SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         IF    (RPLINK,EQ,0),BEGIN IF NO MASTER PAGE, NO PREV PAGE              
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         LH    R2,RPXFIRST                                                      
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         CLEAR R5                                                               
         CLCL  R2,R4                                                            
         IF    E,BEGIN             IF FIRST = X'000..', NO PREV PAGE            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         ELSE  BEGIN  ,,,          IF THERE IS PREV PAGE, GET IT                
         LA    R2,SRCHKEY                                                       
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXFIRST                                                      
         AR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4               SAVE SEARCH KEY FOR THIS PAGE                
         L     R0,RPLINK                                                        
         PGET  PAR,(R0)            GET MASTER PAGE                              
         RPCHECK                                                                
         IF    ^RPMASTER,' BOMB '                                               
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BSEARCH             SEARCH MASTER FOR NEXT PAGE                  
         IF    NZ,' BOMB '         WE MUST FIND CURRENT PAGE,                   
         SH    R1,RPNTRYLN         NOW BACK UP ONE PAGE                         
         LH    R2,RPXSTART                                                      
         AR    R2,PAR                                                           
         IF    (R1,LT,R2),' BOMB ' WE MUST BE ABLE TO BACK UP                   
         LH    R3,RPKEYLN                                                       
         L     R0,DATAPGNO(R3,R1)  GET NEXT PAGE NUMBER                         
         PGET  PAR,(R0)            GET NEXT PAGE                                
         CLEAR R15                                                              
         END                                                                    
         END                                                                    
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  ADDDPAGE - ADD A NEW DATA PAGE                                               
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*            (CONTAINS ROOT PAGE POINTER, SPLIT INFO !)                         
*      PAR - PAGE TO SPLIT                                                      
*                                                                               
*  ON EXIT:                                                                     
*       **  - THE GIVEN PAGE IS SPLIT AND THE MASTER INDEX UPDATED.             
*             IF A MASTER INDEX DOES NOT EXIST ONE IS CREATED.                  
*       PAR - WILL CONTAIN MASTER INDEX, ALL DATA PAGES PFREED                  
*       R15 - CC=ZERO,                                                          
*             CC=NZ, IF MASTER PAGE FULL !  (VERY HARD TO DO!)                  
*                                                                               
*  ORDER OF EVENTS:                                                             
*       WE MAKE A COPY OF @PAR ONTO @PBR, THE WE CALCULATE                      
*       THE SPLIT POINT.  AND SET UP 2ND HALF OF SPLIT @PBR.                    
*       THEN WE SET UP THE FIRST HALF OF THE SPLIT @PAR.  WE THEN               
*       UPDATE THE MASTER INDEX TO POINT AT THESE NEW PAGES.                    
*       SHOULD THERE BE A CRASH,, I HOPE LINKS WILL ALLOW ERROR                 
*       FREE RECOVERY !                                                         
*                                                                               
*                                                                               
ADWA     RECORD BEGIN                                                           
ADKEEP   DS    F                   AMNT TO KEEP ON 1ST PAGE OF SPLIT            
ADSPLITP DS    H                   OFFSET OF SPLIT POINT                        
ADENTRY  DS    XL(MXKEYLN+4)       MASTER PAGE ENTRY FOR NEW PAGE               
*                                                                               
         END                                                                    
*                                                                               
*                                                                               
ADDDPAGE PROC  ADWA                                                             
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
*                                                                               
         COMMENT                   IF NO MASTER PAGE, MAKE ONE                  
         USING RPAGE,PAR                                                        
         IF    (RPLINK,EQ,0),BEGIN                                              
         LA    R15,RGROUP                                                       
         ACALL MKMASTER                                                         
         END                                                                    
         DROP  PAR                                                              
*                                                                               
         COMMENT                   CHECK IF MASTER PAGE FULL,                   
         COMMENT                         IF FULL, WE DO NOT ADD PAGE            
         USING RPAGE,PBR                                                        
         L     R0,RPLINK-RPAGE(PAR)                                             
         PGET  PBR,(R0)            GET MASTER PAGE                              
         RPCHECK                                                                
         LH    R1,RPXEND           CALCULATE NEW END OF INDEXES                 
         AH    R1,RPNTRYLN                                                      
         AH    R1,RPNTRYLN         (PARANOIA CITY!   AX STMT AT WILL)           
         L     R2,=A(L'RPAGE)                                                   
         IF    (R1,GE,R2),BEGIN    IF FULL, EXIT W/ERROR                        
         PFREE PBR                                                              
         LA    R15,4                                                            
         B     ADDDDONE                                                         
         END                                                                    
         DROP  PBR                                                              
*                                                                               
         PFLIP ,                   Preserve RPAGE in PBR                        
         WITH  (RPAGE,PBR),BEGIN                                                
         IF    RPMEMORY,'VCALL MGETNEW'  Get page from memory                   
         ELSE  'VCALL PGETNEW'     Get new page                                 
         IF    NZ,'VCALL NOMORPG'                                               
         END                                                                    
         PFLIP ,                   Flip new page into PBR                       
*                                                                               
         COMMENT                   COPY PAGE TO @PBR                            
         USING RPAGE,PBR                                                        
         LR    R2,PBR              COPY PAGE TO @PBR                            
         L     R3,=A(L'RPAGE)                                                   
         LR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         ST    R0,RPNUMB           SET NEW PAGE NUMBER                          
         IF    RPRECVRY,BEGIN      SET PAGE TYPE /RECOVERY BIT                  
         PTYPE PBR,RPUTYPE,RECOVERY=YES                                         
         END                                                                    
         ELSE  BEGIN                                                            
         PTYPE PBR,RPUTYPE                                                      
         END                                                                    
         PMARK PBR                                                              
         DROP  PBR                                                              
*                                                                               
         COMMENT                   CALCULATE SPLIT FACTOR                       
         LC    R2,RECSPLT                                                       
         CEIL  R2,128-16           CHECK LIMITS OF SPLIT FACTOR                 
         FLOOR R2,16                                                            
         CLEAR R0                                                               
         L     R1,=A(L'RPAREA)     AMOUNT ON 1ST PAGE =                         
         MR    R0,R2                 PAGE AREA*SPLT FACTOR/128                  
         SRL   R1,7  (DIV BY 128)                                               
         ST    R1,ADKEEP                                                        
*                                                                               
         COMMENT                   CALCULATE SPLIT POINT                        
         USING RPAGE,PAR                                                        
         LH    R1,RPXSTART         CALCULATE SPLIT POINT                        
         AR    R1,PAR                                                           
         LH    R0,RPXEND           R1 - START OF INDEXES                        
         AR    R0,PAR              R0 - END OF INDEXES                          
         CLEAR R2                  R2 - RUNNING SPACE USED TOTAL                
         LH    R3,RPKEYLN                                                       
         WHILE ((R1,LT,R0),AND,(R2,LT,ADKEEP)),BEGIN                            
         AH    R2,RPNTRYLN         SPACE USED = INDEX ENTRY LEN +               
         LH    R4,DATALN(R3,R1)      + DATA LEN ,, FOR EACH INDEX               
         LA    R4,15(R4)                                                        
         SRL   R4,4                                                             
         SLL   R4,4                                                             
         AR    R2,R4                                                            
         AH    R1,RPNTRYLN                                                      
         END                                                                    
         IF    (R1,EQ,R0),BEGIN    INSURE NON TRIVIAL SPLIT                     
         SH    R1,RPNTRYLN                                                      
         END                                                                    
         SR    R1,PAR                                                           
         STH   R1,ADSPLITP         SAVE SPLIT POINT OFFSET                      
         DROP  PAR                                                              
*                                                                               
         USING RPAGE,PBR                                                        
         LA    R2,ADENTRY          SAVE MASTER ENTRY FOR 2ND PAGE               
         LH    R3,RPKEYLN                                                       
         LH    R4,ADSPLITP                                                      
         AR    R4,PBR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4               SAVE FIRST ENTRY ON NEW PAGE                 
         L     R0,RPNUMB           FOLLOWED BY NEW PAGE BLOCK NUMBER            
         LA    R2,ADENTRY                                                       
         AH    R2,RPKEYLN                                                       
         ST    R0,0(R2)                                                         
         DROP  PBR                                                              
*                                                                               
         COMMENT                   SET 2ND HALF OF SPLIT @PBR                   
         USING RPAGE,PBR                                                        
         LH    R2,RPXFIRST         SET UP NEW FIRST ENTRY LIMIT                 
         AR    R2,PBR                                                           
         LH    R3,RPKEYLN                                                       
         LH    R4,ADSPLITP                                                      
         AR    R4,PBR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         LH    R2,RPXSTART         MOVE 2ND HALF OF INDEXES TO                  
         AR    R2,PBR              START OF INDEX LIST                          
         LH    R4,ADSPLITP                                                      
         AR    R4,PBR                                                           
         LH    R3,RPXEND                                                        
         AR    R3,PBR                                                           
         SR    R3,R4                                                            
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         LH    R4,ADSPLITP         SET NEW END OF INDEXES POINTER               
         LH    R3,RPXEND                                                        
         SR    R3,R4                                                            
         AH    R3,RPXSTART                                                      
         STH   R3,RPXEND                                                        
         LA    R0,RPINFO           UPDATE BINARY SEARCH INFO                    
         L     R1,=A(L'RPAREA)                                                  
         LH    R2,RPNTRYLN                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXEND                                                        
         SH    R4,RPXSTART                                                      
         ACALL BSINIT                                                           
         PMARK PBR                 MARK AND FREE PAGE                           
         PFREE PBR                                                              
         DROP  PBR ,,              2ND HALF OF SPLIT DONE                       
*                                                                               
         COMMENT                   SET UP 1ST HALF OF SPLIT @PAR                
         USING RPAGE,PAR                                                        
         LH    R2,RPXLAST          SET UP NEW LAST ENTRY LIMIT                  
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         LH    R4,ADSPLITP                                                      
         AR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         LH    R1,ADSPLITP         SET NEW END OF INDEXES POINTER               
         STH   R1,RPXEND                                                        
         LA    R0,RPINFO           UPDATE BINARY SEARCH INFO                    
         L     R1,=A(L'RPAREA)                                                  
         LH    R2,RPNTRYLN                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXEND                                                        
         SH    R4,RPXSTART                                                      
         ACALL BSINIT                                                           
         PMARK PAR                 MARK AND FREE PAGE                           
         PFREE PAR                                                              
         DROP  PAR ,,              1ST HALF OF SPLIT DONE                       
*                                                                               
         COMMENT                   UPDATE MASTER PAGE NOW                       
         USING RPAGE,PAR                                                        
         L     R0,RECGRP                                                        
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         LA    R0,RPINFO           INSERT NEW ENTRY                             
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,ADENTRY                                                       
         ACALL BINSERT                                                          
         IF    NZ,' BOMB '                                                      
         SR    R0,PAR                                                           
         STH   R0,RPXEND                                                        
         PMARK PAR                                                              
         CLEAR R15                 PAGE ADDED, NO PROBLEMS                      
         DROP  PAR                                                              
*                                                                               
ADDDDONE LABEL ,                   NORMAL EXIT                                  
         COMMENT                   RETURNS R15 = ZERO, UNLESS FULL              
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  MKMASTER - MAKE AND INITIALIZE A MASTER INDEX PAGE                           
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*      PAR - CURRENT SINGLE DATA PAGE                                           
*  ON EXIT:                                                                     
*       PAR - CURRENT DATA PAGE, RELOCATED, SEE COMMENTS BELOW                  
*       R15 - CC=ZERO                                                           
*                                                                               
*  THIS ROUTINE IS USED TO CREATE A MASTER INDEX PAGE.  IT IS                   
*  CALLED WHEN WE SPLIT THE FIRST AND ONLY DATA PAGE INTO                       
*  MULTIPLE DATA PAGES, WITH AN INDEX.  IT IS IMPERATIVE THAT                   
*  THE DATA PAGE BE COPIED TO A NEW PAGE (THAT WILL LATER BE                    
*  SPLIT.)  AND THAT THE INDEX PAGE BE CREATED ON THE CURRENT                   
*  PAGE.  WHY, BECAUSE THEN THE RECORD GROUP ROOT PAGE POINTER                  
*  STAYS THE SAME, (IE. THE REC GROUP PAGE POINTER POINTS EITHER                
*  TO A MASTER INDEX,, OR A SINGLE UNSPLIT DATA PAGE.)  OH YEAH !               
*                                                                               
*                                                                               
MKMASTER PROC  ,                   MAKE A MASTER PAGE                           
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
*                                                                               
         PFLIP ,                   Preserve RPAGE in PBR                        
         WITH  (RPAGE,PBR),BEGIN                                                
         IF    RPMEMORY,'VCALL MGETNEW'  Get page from memory                   
         ELSE  'VCALL PGETNEW'     Get new page                                 
         IF    NZ,'VCALL NOMORPG'                                               
         END                                                                    
         PFLIP ,                   Flip new page into PBR                       
*                                                                               
         LR    R2,PBR              MOVE DATA PAGE TO NEW PAGE.                  
         L     R3,=A(L'RPAGE)      OLD PAGE WILL BECOME MASTER PAGE             
         LR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   MAKE REQUIRED UPDATES TO NEW DATA            
         COMMENT                   PAGE. (@PBR)                                 
         USING RPAGE,PBR                                                        
         ST    R0,RPNUMB                         SET NEW PAGENO                 
         L     R0,RPNUMB-RPAGE(PAR)              GET MASTER PAGENO              
         ST    R0,RPLINK                         SET LINK TO MASTER             
         PMARK PBR                                                              
         IF    RPRECVRY,BEGIN                                                   
         PTYPE PBR,RPUTYPE,RECOVERY=YES          SET PAGE TYPE                  
         END                                                                    
         ELSE  BEGIN                                                            
         PTYPE PBR,RPUTYPE                                                      
         END                                                                    
         PMARK PBR                                                              
         DROP  PBR                                                              
*                                                                               
         COMMENT                   MAKE REQUIRED CHANGES TO NEW                 
         COMMENT                   MASTER PAGE. (@PAR)                          
         USING RPAGE,PAR                                                        
         MVC   RPNAME2(6),=CL6'MASTER  '                                        
         CLEAR RPDATA              SET PAGE TYPE                                
         SET   RPMASTER                                                         
         COMMENT                   SET UP MASTER HEADER INFO                    
         CLEAR RPLINK                  ZERO LINKS                               
         LH    R1,RPKEYLN              SET UP MASTER INDEX LENGTH               
         LA    R1,L'DATAPGNO(R1)                                                
         STH   R1,RPNTRYLN                                                      
         LA    R1,RPAREA               SET UP INDEX POINTERS                    
         SR    R1,PAR                                                           
         STH   R1,RPXSTART                                                      
         AH    R1,RPNTRYLN                                                      
         STH   R1,RPXEND                                                        
         CLEAR RPXFIRST                                                         
         CLEAR RPXLAST                                                          
         CLEAR RPDSTART                ZERO DATA POINTERS                       
         CLEAR RPDEND                                                           
         LA    R0,RPINFO           SET UP BINARY SEARCH INFO FOR                
         L     R1,=A(L'RPAREA)     MASTER PAGE                                  
         LH    R2,RPNTRYLN                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXEND                                                        
         SH    R4,RPXSTART                                                      
         ACALL BSINIT                                                           
         LH    R1,RPXSTART         R1 - ADDRESS OF FIRST MASTER NDX             
         AR    R1,PAR                                                           
         LR    R2,R1                                                            
         LH    R3,RPKEYLN                                                       
         SR    R5,R5                                                            
         MVCL  R2,R4               ZERO 1ST MASTER ENTRY KEY,,                  
         COMMENT                                                                
         L     R0,RPNUMB-RPAGE(PBR)                                             
         LH    R3,RPKEYLN                                                       
         ST    R0,DATAPGNO(R3,R1)  SET DATA PAGE POINTER IN 1ST NDX             
         PMARK PAR                                                              
         PFREE PAR                 FREE MASTER PAGE                             
         DROP  PAR                                                              
         PFLIP ,                   FLIP DATA PAGE BACK INTO PAR                 
         CLEAR R15                                                              
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  DELDPAGE - DELETE DATA PAGE                                                  
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*      PAR - PAGE TO DELETE                                                     
*                                                                               
*  ON EXIT:                                                                     
*       R15 - CC=ZERO                                                           
*       PAR - PREVIOUS PAGE                                                     
*                                                                               
*  NOTE: THIS ROUTINE MUST CLEAR QUICK GET/LOC INFO, SO                         
*        THAT WE WILL NOT TRY TO PGET THE DELETED PAGE LATER.                   
*  NOTE: WE UPDATE THE MASTER PAGE BEFORE WE DELETE THE PAGE,                   
*        THIS EXTRA WORK INSURES INDEX INTEGRITY. THOUGH IT                     
*        IS FOR NAUGHT, AS THERE IS NO WAY TO FORCE OUT THE                     
*        MASTER PAGE BEFORE THE PAGE DELETE. OH WELL.                           
*                                                                               
DLWA     RECORD BEGIN                                                           
DLPAGENO DS    F                   NUMBER OF PAGE TO DELETE                     
DLPREVPG DS    F                   NUMBER OF PREVIOUS PAGE                      
DLMASTPG DS    F                   NUMBER OF MASTER PAGE                        
DLXFIRST DS    XL(MXKEYLN)         FIRST ENTRY LIMIT ON PAGE                    
DLXLAST  DS    XL(MXKEYLN)         LAST ENTRY LIMIT ON PAGE                     
         END                                                                    
*                                                                               
*                                                                               
DELDPAGE PROC  DLWA                                                             
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         IF    ^RPDATA,' BOMB'                                                  
         L     R0,RPNUMB           SAVE PAGE NUMBER TO DELETE                   
         ST    R0,DLPAGENO                                                      
         L     R0,RPLINK           SAVE MASTER PAGE NUMBER                      
         ST    R0,DLMASTPG                                                      
         CLEAR RECQPG              CLEAR QUICK GET/LOC NUMBER                   
         CLEAR RECQOFF                                                          
         CLEAR RECPPG                                                           
         CLEAR RECPOFF                                                          
*                                                                               
         COMMENT                   SAVE FIRST, LAST ENTRY LIMITS                
         LA    R2,DLXFIRST                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXFIRST                                                      
         AR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         LA    R2,DLXLAST                                                       
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXLAST                                                       
         AR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   GET PREVIOUS PAGE                            
         LA    R15,RGROUP                                                       
         ACALL PREVPAGE                                                         
         IF    NZ,' BOMB '                                                      
         L     R0,RPNUMB                                                        
         ST    R0,DLPREVPG                                                      
*                                                                               
         COMMENT                   RESET LAST LIMIT ON PREVIOUS PAGE            
         LH    R2,RPXLAST                                                       
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         LA    R4,DLXLAST                                                       
         LR    R5,R3                                                            
         MVCL  R2,R4               RESET LAST LIMIT ON PREV PAGE                
         PMARK PAR                                                              
         PFREE PAR                                                              
*                                                                               
         COMMENT                   GET MASTER PAGE @PAR                         
         L     R0,DLMASTPG                                                      
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         IF    ^RPMASTER,' BOMB '                                               
*                                                                               
         COMMENT                   DELETE MASTER PAGE ENTRY FOR PAGE            
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,DLXFIRST                                                      
         ACALL BDELETE             DELETE MASTER PAGE ENTRY FOR PAGE            
         IF    NZ,' BOMB '                                                      
         SR    R0,PAR                                                           
         STH   R0,RPXEND                                                        
         PMARK PAR                                                              
         LH    R1,RPXSTART                                                      
         AH    R1,RPNTRYLN                                                      
         LH    R2,RPXEND                                                        
         IF    (R1,EQ,R2),BEGIN    IF MASTER PAGE EMPTY, DELETE IT              
         LA    R15,RGROUP                                                       
         ACALL AXMASTER                                                         
         L     R0,RPNUMB           AXMASTER SCRAMBLES PAGE NUMBERS              
         ST    R0,DLPREVPG         WE RESTORE THEM                              
         END                                                                    
*                                                                               
         COMMENT                   NOW DELETE PAGE                              
         L     R0,DLPAGENO                                                      
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         MVC   RPNAME(6),=C'FREED '                                             
         PFREE PAR,EMPTY                                                        
*                                                                               
         COMMENT                   NOW GET PREVIOUS PAGE                        
         L     R0,DLPREVPG                                                      
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
*                                                                               
         CLEAR R15                                                              
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  AXMASTER - AX MASTER PAGE, ROOT PAGE WILL BE DATA PAGE                       
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*      PAR - MASTER PAGE TO DELETE                                              
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO                                                            
*      PAR - ROOT PAGE, NOW A DATA PAGE                                         
*                                                                               
*                                                                               
*                                                                               
AXMASTER PROC                                                                   
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
*                                                                               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LH    R3,RPKEYLN                                                       
         L     R0,DATAPGNO(R3,R1)                                               
         DROP  PAR                                                              
         USING RPAGE,PBR                                                        
         PGET  PBR,(R0)            GET LAST DATA PAGE IN @PBR                   
         RPCHECK                                                                
         DROP  PBR                                                              
         USING RPAGE,PAR                                                        
         L     R0,RPNUMB                                                        
         LR    R2,PAR                                                           
         L     R3,=A(L'RPAGE)                                                   
         LR    R4,PBR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4               COPY DATA PAGE OVER MASTER PAGE              
         ST    R0,RPNUMB           SET CORRECT PAGE NUMBER                      
         CLEAR RPLINK              CLEAR MASTER LINK (NO MASTER NOW)            
         COMMENT                   ALL OTHER FIELDS CORRECT                     
         PMARK PAR                                                              
*                                                                               
         COMMENT                   DELETE OLD COPY OF DATA PAGE                 
         COMMENT                   NEW DATA PAGE IS AT ROOT PAGE NO.            
         PFLIP ,                   Flip PBR into PAR                            
         MVC   RPNAME(6),=C'FREED '                                             
         PFREE PAR,EMPTY           Junk PAR                                     
         PFLIP ,                   Flip back                                    
*                                                                               
         CLEAR R15                                                              
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'INDEX SEARCH ROUTINES'                                          
*box                                                                            
*                                                                               
*                                                                               
*  FRSTNDX - GET FIRST INDEX STARTING FROM SEARCH KEY.                          
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - SEARCH SET NUMBER                                                  
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R1 - LOCATION OF FIRST INDEX                                            
*      R15 - CC = ZERO, IF FIRST INDEX FOUND                                    
*            CC = NZ, IF NO FIRST INDEX                                         
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*                                                                               
*  NOTE: THIS IS A LOW LEVEL ROUTINE.  THE FIRST INDEX SEARCH IS                
*    DONE IRRESPECTIVE TO SET NUMBER. THE INDEX POINTED TO MAY                  
*    HAVE A DIFFERENT SET NUMBER.  QUICK GET/LOC INFO NOT AFFECTED.             
*                                                                               
*  WARNING: R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
FRSTNDX  PROC  SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R0,SRCHSET          SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
         IF    (RECGRP,EQ,0),BEGIN  IF NULL                                     
         LA    R15,4                                                            
         B     FRSTDONE                                                         
         END                                                                    
         IF    (R0,Z),BEGIN        ZERO SET IS INVISIBLE TO USER                
         LA    R2,1                START SEARCH AT SET 1 RECD 0                 
         ST    R2,SRCHSET                                                       
         LA    R2,SRCHNAME                                                      
         LA    R3,L'SRCHNAME                                                    
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         END                                                                    
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE            GET DATA PAGE INTO @PAR                      
         LA    R0,RPINFO           BSEARCH PAGE TO GET DATA INDEX               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BSEARCH             GET CURRENT DATA INDEX                       
         COMMENT                   RETURNS R1 - FIRST INDEX POINTER             
         LH    R3,RPXEND                                                        
         AR    R3,PAR                                                           
         IF    (R1,GE,R3),BEGIN    IF NEXT ENTRY ON NEXT PAGE,,                 
         LA    R15,RGROUP                                                       
         ACALL NEXTPAGE               GO GET NEXT PAGE                          
         IF    NZ,BEGIN                                                         
         LA    R15,4                                                            
         BNZ   FRSTDONE                                                         
         END                                                                    
         LH    R1,RPXSTART            POINT TO 1ST INDEX ON NEW PAGE            
         AR    R1,PAR                                                           
         END                                                                    
*                                                                               
         COMMENT                                                                
         CLEAR R15                 SET CC=ZERO, FOUND NEXT                      
*                                                                               
FRSTDONE LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  PAR                                                              
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  LASTNDX - GET LAST INDEX STARTING FROM SEARCH KEY                            
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - SEARCH SET NUMBER                                                  
*       R1 - NOT USED                                                           
*      @R2 - SEARCH NAME                                                        
*                                                                               
*  ON EXIT:                                                                     
*       R1 - LOCATION OF LAST INDEX                                             
*      R15 - CC = ZERO, IF LAST INDEX FOUND                                     
*            CC = NZ, IF NO LAST INDEX                                          
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  NOTE: THIS IS A LOW LEVEL ROUTINE.  THE LAST INDEX SEARCH IS                 
*    DONE IRRESPECTIVE TO SET NUMBER. THE INDEX POINTED TO MAY                  
*    HAVE A DIFFERENT SET NUMBER.  QUICK GET/LOC INFO NOT AFFECTED.             
*                                                                               
*  WARNING, R1 RETURNS POINTER INTO PAGED AREA, DATA MUST BE                    
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
LASTNDX  PROC  SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R0,SRCHSET          SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
         IF    ((RECGRP,EQ,0),OR,(R0,Z)),BEGIN  IF NULL                         
         LA    R15,4                                                            
         B     LASTDONE                                                         
         END                                                                    
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL GETDPAGE            GET DATA PAGE INTO @PAR                      
         LA    R0,RPINFO           BSEARCH PAGE TO GET DATA INDEX               
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,SRCHKEY                                                       
         ACALL BSEARCH             GET CURRENT DATA INDEX                       
         COMMENT                   RETURNS R1 - SAME OR NEXT ENTRY              
         IF    NZ,BEGIN            IF NOT SAME, (IE LAST)                       
         SH    R1,RPNTRYLN         POINT AT PREVIOUS ENTRY                      
         END                                                                    
         LH    R3,RPXSTART                                                      
         AR    R3,PAR                                                           
         IF    (R1,LT,R3),BEGIN    IF NEXT ENTRY ON PREV PAGE,,                 
         LA    R15,RGROUP                                                       
         ACALL PREVPAGE               GO GET PREVIOUS PAGE                      
         IF    NZ,BEGIN                                                         
         LA    R15,4                                                            
         B     LASTDONE                                                         
         END                                                                    
         LH    R1,RPXEND           POINT TO LAST INDEX ON NEW PAGE              
         AR    R1,PAR                                                           
         SH    R1,RPNTRYLN                                                      
         COMMENT                   R1 - PREVIOUS RECORD NDX ENTRY               
         END                                                                    
*                                                                               
         COMMENT                   IF R1 POINTS TO ZERO RECORD,,                
         CLC   0(L'NDXSET,R1),=F'0'  SET ZERO IS INVISIBLE TO USER              
         IF    E,BEGIN                                                          
         LA    R15,4                                                            
         B     LASTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                                                                
         CLEAR R15                 SET CC=ZERO, FOUND NEXT                      
*                                                                               
LASTDONE LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'MISCELLANEOUS ROUTINES'                                         
*box                                                                            
*                                                                               
*                                                                               
*  XSETSET - SET GROUP SET NUMBER, RETURN OLD SET NUMBER                        
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - SET NUMBER                                                         
*                                                                               
*  ON EXIT:                                                                     
*      R15 - PREVIOUS SET NUMBER                                                
*                                                                               
*                                                                               
XSETSET  XPROC                                                                  
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         L     R15,RECSET                                                       
         ST    R0,RECSET                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XSETSPLT - SET PAGE SPLIT FACTOR IN 128THS                                   
*                                                                               
*  SPLIT FACTOR IS USED WHENEVER A RECORD PAGE IS SPLIT.                        
*  IT DETERMINES THE AMOUNT OF DATA THAT GOES ON THE SPLIT                      
*  PAGES.  IT IS SPECIFIED IN 128THS.                                           
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - SPLIT FACTOR (1 TO 128)                                            
*            IF R0=0, JUST RETURNS OLD SPLIT FACTOR                             
*                                                                               
*  ON EXIT:                                                                     
*      R15 - PREVIOUS SPLIT FACTOR                                              
*                                                                               
*                                                                               
XSETSPLT XPROC                                                                  
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         LC    R15,RECSPLT                                                      
         IF    (R0,POS),BEGIN                                                   
         STC   R0,RECSPLT                                                       
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XCHKGRP - CHECK FOR EMPTY RECORD GROUP                                       
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO, NO RECORDS IN RECORD GROUP                                
*            CC=NZ, NON-EMPTY RECORD GROUP                                      
*                                                                               
*  NOTE: THE RECORD GROUP ROOT BLOCK ALWAYS EXISTS EVEN IF                      
*        THERE ARE NO RECORDS IN THE GROUP                                      
*                                                                               
*                                                                               
XCHKGRP  XPROC                                                                  
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
*                                                                               
         LR    R5,4                ASSUME NON EMPTY PAGE                        
*                                                                               
         IF    (RECGRP,NE,0),BEGIN IF ROOT PAGE, AND...                         
         L     R0,RECGRP                                                        
         PGET  PAR,(0)                                                          
         RPCHECK                                                                
         IF    ^RPDATA,BEGIN       AND IF ROOT PAGE, DATA PAGE                  
         LH    R1,RPXSTART                                                      
         AH    R1,RPNTRYLN                                                      
         CH    R1,RPXEND                                                        
         IF    E,BEGIN             AND IF ONLY ONE (ZERO) ENTRY                 
         CLEAR R5                  We have an empty record group                
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         LR    R15,R5                                                           
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XCHKSETS - CHECK A RANGE OF SETS,  DO THEY CONTAIN RECORDS ?                 
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - FIRST SET NUMBER                                                   
*       R1 - SECOND SET NUMBER                                                  
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=Z, THE SPECIFIED SETS ARE ALL EMPTY                             
*            CC=NZ, THE SPECIFIED SETS ARE NOT ALL EMPTY                        
*                                                                               
*                                                                               
XMISCWA  RECORD BEGIN                                                           
XMSET1   DS    F                                                                
XMNAME1  DS    XL(MXNAMELN)                                                     
XMKEY1   EQU   XMSET1                                                           
XMSET2   DS    F                                                                
XMNAME2  DS    XL(MXNAMELN)                                                     
XMKEY2   EQU   XMSET2                                                           
         END                                                                    
*                                                                               
*                                                                               
XCHKSETS XPROC XMISCWA                                                          
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         FLOOR R0,1                                                             
         ST    R0,XMSET1           SET FIRST LIMIT                              
         LA    R2,XMNAME1                                                       
         LA    R3,MXNAMELN                                                      
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         ST    R1,XMSET2           SET LAST LIMIT                               
         LA    R2,XMNAME2                                                       
         LA    R3,MXNAMELN                                                      
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         LA    R5,4                ASSUME SETS CONTAIN RECORDS                  
*                                                                               
         COMMENT                   FIND PAGES,,,                                
         LA    R15,RGROUP                                                       
         LA    R2,XMKEY1                                                        
         ACALL GETDPAGE                                                         
         L     R3,RPNUMB           R3 - PAGE OF FIRST SET                       
         LA    R15,RGROUP                                                       
         LA    R2,XMKEY2                                                        
         ACALL GETDPAGE                                                         
         L     R4,RPNUMB           R4 - PAGE OF SECOND SET                      
         COMMENT                                                                
         IF    (R3,EQ,R4),BEGIN    IF SETS ON SAME PAGE,                        
         LA    R0,RPINFO              SEE IF THEY ARE AT SAME OFFSET            
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,XMKEY1                                                        
         ACALL BSEARCH                                                          
         LR    R3,R1               R3 - OFFSET OF FIRST SET                     
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LA    R2,XMKEY1                                                        
         ACALL BSEARCH                                                          
         LR    R4,R1               R4 - OFFSET OF SECOND SET                    
         COMMENT                                                                
         IF    (R3,EQ,R4),BEGIN    IF PAGE, OFFSET SAME                         
         CLEAR R5                     THEN THERE ARE NO RECORDS                 
         END                                                                    
         END                                                                    
*                                                                               
         LR    R15,R5                                                           
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XCHKSET - CHECK SET, DOES IT CONTAIN ANY RECORDS ??                          
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - SET NUMBER                                                         
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO, NO RECORD IN THE SET                                      
*            CC=NZ, SET CONTAINS RECORDS                                        
*                                                                               
*                                                                               
XCHKSET  XPROC XMISCWA                                                          
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         IF    ((R6,EQ,0),OR,(RECGRP,EQ,0),OR,(RECSET,EQ,0)),BEGIN              
         CLEAR R15                 IF NULL RECORD GROUP, SET                    
         END                                                                    
*                                                                               
         COMMENT                   IF NON NULL GROUP SET, CHECK IT              
         ELSE  BEGIN                                                            
         LR    R6,R15                                                           
         MVC   XMSET1,RECSET       SAVE, THEN SET NEW SET NUMBER                
         ST    R0,RECSET                                                        
         LA    R2,XMNAME1          ZERO RECORD NAME                             
         LA    R3,MXNAMELN                                                      
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,XMNAME1                                                       
         ACALL XLOCFRST            LOOK FOR FIRST RECORD IN SET                 
         IF    Z,BEGIN                                                          
         LA    R15,4               FOUND FIRST                                  
         END                                                                    
         ELSE  BEGIN ,                                                          
         CLEAR R15                 NO FIRST                                     
         END                                                                    
*                                                                               
         MVC   RECSET,XMSET1       RESTORE SET NUMBER                           
         END   ,                   OF CHECK SET                                 
*                                                                               
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XSETFRST - GET FIRST NON-EMPTY SET NUMBER GREATER THAN OR EQUAL              
*             TO THE ONE SPECIFIED.                                             
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - STARTING SET NUMBER                                                
*                                                                               
*  ON EXIT:                                                                     
*       R0 - FIRST SET NUMBER                                                   
*      R15 - CC=ZERO, IF FOUND                                                  
*            CC=NZ, IF NO NON-EMPTY SETS FOUND                                  
*                                                                               
*                                                                               
XFSWA    RECORD BEGIN                                                           
XFSNAME  DS    XL(MXNAMELN)                                                     
         END                                                                    
*                                                                               
*                                                                               
XFRSTSET XPROC XFSWA                                                            
*                                                                               
         COMMENT                   CLEAR NAME                                   
         LA    R2,XFSNAME                                                       
         LA    R3,MXNAMELN                                                      
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   FIND FIRST INDEX (CONTAINS SET #)            
         COMMENT                   R15 - REC GROUP INFO                         
         COMMENT                   R0 - STARTING SET NUMBER                     
         LA    R2,XFSNAME          R2 - STARTING NAME                           
         ACALL FRSTNDX             GO GET FIRST INDEX                           
         COMMENT                   RETURNS R1 - NEXT INDEX POINTER              
         IF    Z,BEGIN                                                          
         L     R0,NDXSET(R1)       GET SET NUMBER OF INDEX                      
         END                                                                    
*                                                                               
         PRETURN R0                                                             
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XSETLAST - GET LAST NON-EMPTY SET NUMBER LESS THAN OR EQUAL                  
*             TO THE ONE SPECIFIED.                                             
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - ENDING SET NUMBER                                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LAST SET NUMBER                                                    
*      R15 - CC=ZERO, IF FOUND                                                  
*            CC=NZ, IF NO NON-EMPTY SETS FOUND                                  
*                                                                               
*                                                                               
XLSWA    RECORD BEGIN                                                           
XLSNAME  DS    XL(MXNAMELN)                                                     
         END                                                                    
*                                                                               
*                                                                               
XLASTSET XPROC XLSWA                                                            
*                                                                               
         COMMENT                   CLEAR NAME                                   
         LA    R2,XLSNAME                                                       
         LA    R3,MXNAMELN                                                      
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   FIND LAST INDEX (CONTAINS SET #)             
         COMMENT                   R15 - REC GROUP INFO                         
         COMMENT                   R0 - STARTING SET NUMBER                     
         LA    R2,XLSNAME          R2 - STARTING NAME                           
         ACALL LASTNDX             GO GET LAST INDEX                            
         COMMENT                   RETURNS R1 - NEXT INDEX POINTER              
         IF    Z,BEGIN                                                          
         L     R0,NDXSET(R1)       GET SET NUMBER OF INDEX                      
         END                                                                    
*                                                                               
         PRETURN R0                                                             
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XDELGRP - DELETE ALL RECORDS IN RECORD GROUP                                 
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO                                                            
*                                                                               
*  NOTE: THIS ROUTINE DELETES ALL RECORDS IN RECORD GROUP,                      
*        BUT DOES NOT DELETE RECORE ROOT PAGE.                                  
*                                                                               
*                                                                               
XDELGRP  XPROC XMISCWA                                                          
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         MVC   XMSET1,RECSET       SAVE SET NUMBER                              
*                                                                               
         MVC   RECSET,=F'1'        FIRST SET TO DELETE = 0001                   
         LA    R2,XMNAME1          FIRST REX TO DELETE = 000000...              
         LA    R3,MXNAMELN                                                      
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         LA    R2,XMKEY2           LAST SET TO DELETE = FFFF                    
         LA    R3,MXKEYLN          LAST REC TO DELETE = FFFFFFFF...             
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         LA    R15,RGROUP          DELETE ALL RECORDS                           
         LA    R0,XMNAME1                                                       
         LA    R1,XMNAME2                                                       
         L     R2,XMSET2                                                        
         ACALL XDELRECS            DELETE ALL RECORDS                           
*                                                                               
         MVC   RECSET,XMSET1       RESTORE SET NUMBER                           
         CLEAR R15                 RETURN CC=0                                  
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XDELSETS - DELETE ALL RECORDS IN SPECIFIED SETS                              
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - FIRST SET TO DELETE                                                
*       R1 - LAST SET TO DELETE                                                 
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO                                                            
*                                                                               
*                                                                               
XDELSETS XPROC XMISCWA                                                          
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         MVC   XMSET1,RECSET       SAVE SET NUMBER                              
*                                                                               
         ST    R0,RECSET           FIRST SET TO DELETE IN R0                    
         LA    R2,XMNAME1          FIRST REX TO DELETE = 000000...              
         LA    R3,MXNAMELN                                                      
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         ST    R1,XMSET2           LAST SET TO DELETE IN R1                     
         LA    R2,XMNAME2          LAST REC TO DELETE = FFFFFFFF...             
         LA    R3,MXNAMELN                                                      
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         LA    R15,RGROUP          DELETE ALL RECORDS IN SETS                   
         LA    R0,XMNAME1                                                       
         LA    R1,XMNAME2                                                       
         L     R2,XMSET2                                                        
         ACALL XDELRECS            DELETE ALL RECORDS IN SETS                   
*                                                                               
         MVC   RECSET,XMSET1       RESTORE SET NUMBER                           
         CLEAR R15                 RETURN CC=0                                  
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  XDELSET - DELETE ALL RECORDS IN SPECIFIED SET                                
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - SET TO DELETE                                                      
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO                                                            
*                                                                               
*                                                                               
XDELSET  XPROC XMISCWA                                                          
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         MVC   XMSET1,RECSET       SAVE SET NUMBER                              
*                                                                               
         ST    R0,RECSET           FIRST SET TO DELETE IN R0                    
         LA    R2,XMNAME1          FIRST REX TO DELETE = 000000...              
         LA    R3,MXNAMELN                                                      
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         LA    R2,XMNAME2          LAST REC TO DELETE = FFFFFFFF...             
         LA    R3,MXNAMELN                                                      
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         LA    R15,RGROUP          DELETE ALL RECORDS IN SET                    
         LA    R0,XMNAME1                                                       
         LA    R1,XMNAME2                                                       
         CLEAR R2                                                               
         ACALL XDELRECS            DELETE ALL RECORDS IN SET                    
*                                                                               
         MVC   RECSET,XMSET1       RESTORE SET NUMBER                           
         CLEAR R15                 RETURN CC=0                                  
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'BINARY SEARCH/INSERT ROUTINES'                                  
*box                                                                            
*                                                                               
*                                                                               
*  BSINIT - INITIALIZE BINARY SEARCH INFO                                       
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - BINARY SEARCH INFO AREA                                            
*       R1 - TOTAL LENGTH IN AREA FOR ENTRIES                                   
*       R2 - ENTRY LENGTH                                                       
*       R3 - SEARCH FIELD LENGTH ( < 255 )                                      
*       R4 - END OF LAST VALID ENTRY                                            
*                                                                               
*  ON EXIT:                                                                     
*       ALL BSINFO FIELDS SET.  (SEE BSINFO DSECT !!)                           
*                                                                               
*  THE BS (BINARY SEARCH) ROUTINES CONSIST OF BSINIT, BSEARCH,                  
*  AND BINSERT.  THEY ARE USED TO HANDLE GENERALIZED BINARY                     
*  SEARCHING AND INSERTING.                                                     
*                                                                               
*  NOTE THAT THE LENGTHS PASSED TO BSINIT MUST BE REASONABLE                    
*  NON-ZERO VALUES. DFJL DAFLK DALKJD. THE TOTAL LENGTH MUST                    
*  BE LARGE ENOUGH TO HOLD AT LEAST 4 ENTRIES.  IF YOU INTEND                   
*  DO INSERTS THE TOTAL LENGTH MUST BE LESS THAN ABOUT 12K AS                   
*  THE STACK IS USED FOR A TEMP AREA.                                           
*                                                                               
*                                                                               
BSINIT   XPROC ,                    SET UP BINARY SEARCH INFO FIELDS            
         USING BSINFO,R6                                                        
         LR    R6,R0                                                            
         CLEAR BSINFO                                                           
         ST    R1,BSTLEN           SAVE PASSED INFO                             
         ST    R2,BSELEN                                                        
         ST    R3,BSSLEN                                                        
         ST    R4,BSEND                                                         
*                                                                               
         COMMENT                                                                
*  WE CALCULATE THE NUMBER OF SEARCH ITERATIONS,, IN MATH JARGON                
*  WE CALCULATE  LOG(TOTAL LEN/ENTRY LEN) IN BASE 2  ROUNDED                    
*  UP TO THE NEAREST INTEGER. IN SIMPLE TERMS, WE COUNT HOW MANY                
*  TIMES WE MUST DOUBLE THE ENTRY LENGTH UNTIL WE REACH THE TOTAL               
*  LENGTH,,, THIS GIVES US THE SEARCH COUNT.   SEE BELOW.                       
         L     R1,BSTLEN           R1 - TOTAL LENGTH                            
         L     R2,BSELEN           R2 - DOUBLING ENTRY LENGTH                   
         SR    R3,R3               SEARCH COUNT                                 
         WHILE (R2,LE,R1),BEGIN                                                 
         SLL   R2,1                                                             
         LA    R3,1(R3)                                                         
         END                                                                    
         ST    R3,BSCNT            SAVE CALCULATED SEARCH COUNT                 
* WE CALCULATE LOCATION TO START SEARCH,, FORGET THE MATH JARGON.               
* IN SIMPLE TERMS, WE DOUBLE THE ENTRY LENGTH UNTIL WE REACH AT                 
* LEAST 1/2 THE TOTAL LENGTH.  (THAT IS WE TAKE 1/2 THE LENGTH                  
* THAT WE CALCULATED ABOVE.)  THINK ABOUT IT.  OR DON'T BOTHER.                 
         IF    (R3,POS),BEGIN                                                   
         SRL   R2,1                                                             
         ST    R2,BSSTART                                                       
         END                                                                    
         IF    (R3,ZERO),BEGIN                                                  
         ST    R3,BSSTART                                                       
         END                                                                    
* AN EXAMPLE                                                                    
* IF TOTAL LEN=512 AND ENTRY LEN=64, WE KNOW THAT 2*2*2*2*64=512                
* SO THE SEARCH COUNT IS 4. AND THE STARTING SEARCH OFFSET IS 256.              
* ANOTHER EXAMPLE                                                               
* IF TOTAL LEN=50 AND THE ENTRY IS 7, WE KNOW THAT 2*2*2*7=56                   
* SO THE SEARCH COUNT IS 3. AND  THE STARTING OFFSET IS 28.                     
         COMMENT                                                                
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  BSEARCH - BINARY SEARCH SORTED LIST                                          
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - ADDRESS OF BSINFO                                                  
*       R1 - ADDRESS OF BINARY SORTED LIST                                      
*       R2 - ADDRESS OF ENTRY NAME                                              
*                                                                               
*  ON EXIT:                                                                     
*       R0 - ENTRY LENGTH                                                       
*       R1 - ENTRY ADDRESS, OR ADDRESS OF PLACE TO INSERT ENTRY                 
*       R15 - CC=ZERO IF ENTRY FOUND, CC=NZ IF ENTRY NOT FOUND                  
*                                                                               
*                                                                               
*                                                                               
BSEARCH  XPROC ,                   BINARY SEARCH SORTED LIST                    
         USING BSINFO,R6                                                        
         LR    R6,R0                                                            
         L     R0,BSSTART          R0 - +/- ADDR CORRECTION AMOUNT              
         AR    R1,R0               R1 - ADDR OF ENTRY TO COMPARE                
         COMMENT                   R2 - ENTRY NAME TO COMPARE                   
         L     R3,BSEND            R3 - END OF LAST VALID ENTRY                 
         AR    R3,R1                                                            
         SR    R3,R0                                                            
         L     R4,BSCNT            R4 - NUMBER OF SEARCH INTERATIONS            
         L     R5,BSSLEN           R5 - COMPARE LENGTH (DECR FOR EX)            
         BCTR  R5,0                                                             
         WHILE (R4,GT,1),BEGIN     DO BINARY SEARCH                             
         BCTR  R4,0                                                             
         SRL   R0,1                                                             
         IF    (R1,GE,R3),BEGIN         MUST NOT POINT PAST VALID               
         SR    R1,R0                    ENTRIES                                 
         END                                                                    
         ELSE  BEGIN                                                            
         EX    R5,' CLC 0(0,R2),0(R1) ' COMPARE ENTRY TO SEARCH NAME            
         IF    LT,BEGIN                 AND MOVE UP OR DOWN                     
         SR    R1,R0                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         AR    R1,R0                                                            
         END                                                                    
         END                                                                    
         END                                                                    
         L     R0,BSELEN           MAKE FINAL ADJUSTMENTS                       
         SR    R1,R0                 BACK UP ONE ENTRY AND LOOK AT              
         LA    R4,2                  NEXT 2 ENTRIES,,,                          
         LA    R15,4                                                            
         WHILE ((R1,LT,R3),AND,(R4,POS)),BEGIN                                  
         BCTR  R4,0                                                             
         EX    R5,' CLC 0(0,R2),0(R1) '    DO COMPARE                           
         IF    EQ,' LA R15,0 '                                                  
         IF    GT,' AR R1,R0 '                                                  
         END                                                                    
         L     R0,BSELEN           RETURN R0 - ENTRY LENGTH                     
         COMMENT                   RETURN R1 - ENTRY ADDRESS                    
         COMMENT                   RETURN R15=CC, Z=FOUND, NZ=NOT F.            
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  BINSERT - INSERT OR REPLACE ENTRY IN BINARY SORTED LIST                      
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - ADDRESS OF BSINFO                                                  
*       R1 - ADDRESS OF BINARY SORTED LIST                                      
*       R2 - ADDRESS OF ENTRY TO INSERT OR REPLACE                              
*                                                                               
*  ON EXIT:                                                                     
*       R0 - NEW END OF BINARY SORTED LIST (ACTUAL ADDR)                        
*      R15 - CC=ZERO IF INSERTED OK                                             
*            CC=NZ, IF ENTRY WON'T FIT                                          
*   BSINFO - UPDATED                                                            
*                                                                               
*                                                                               
BNWA     RECORD BEGIN ,,,          BINSERT WORK AREA                            
BNENTRY  DS    A                   ADDR OF ENTRY TO INSERT                      
BNLIST   DS    A                   ADDR OF BINARY SORTED LIST                   
BNINSAD  DS    A                   ADDR OF PLACE TO INSERT                      
BNSPACE  DS    0X                  PAGE SIZED TEMP WORK AREA                    
*                                  AREA IS MANUALLY PUSHED, POPD                
         END                                                                    
*                                                                               
*                                                                               
BINSERT  XPROC BNWA                INSERT OR REPLACE ENTRY                      
         A     R13,=A(L'RPAGE)     XPUSH TEMP AREA                              
         USING BSINFO,R6                                                        
         LR    R6,R0                                                            
         ST    R1,BNLIST                                                        
         ST    R2,BNENTRY                                                       
*                                                                               
         ACALL BSEARCH             FIND PLACE TO INSERT OF REPLACE              
*                                                                               
         COMMENT                   REPLACE ENTRY                                
         IF    Z,BEGIN                                                          
         LR    R2,R1                                                            
         L     R3,BSELEN                                                        
         L     R4,BNENTRY                                                       
         L     R5,BSELEN                                                        
         MVCL  R2,R4               REPLACE ENTRY                                
         SR    R15,R15                                                          
         END                                                                    
*                                                                               
         COMMENT                   INSERT ENTRY                                 
         ELSE  BEGIN ,,                                                         
         ST    R1,BNINSAD                                                       
         L     R1,BSEND            SEE IF ROOM TO ADD ENTRY                     
         A     R1,BSELEN           WILL NEW END BE LARGER THAN TOTAL            
         L     R0,BSTLEN             TABLE LENGTH ??                            
         IF    (R1,GT,R0),BEGIN                                                 
         LA    R15,4               IF SO WE HAVE OVERFLOW                       
         END                                                                    
         IF    (R1,LE,R0),BEGIN    IF ENTRY WILL FIT, INSERT IT                 
         L     R1,BNINSAD          WE OPEN UP SPACE FOR INSERT                  
         S     R1,BNLIST                INSERT OFFSET                           
         L     R0,BSEND                                                         
         SR    R0,R1                    LENGTH OF LIST AFTER INSERT             
         IF    (R0,GT,L'RPAGE),BINSBOMB                                         
         L     R2,BNINSAD          MOVE END OF LIST TO TEMP AREA                
         LR    R3,R0                                                            
         LA    R4,BNSPACE                                                       
         LR    R5,R0                                                            
         MVCL  R4,R2                                                            
         L     R2,BNINSAD          MOVE END OF LIST BACK,                       
         A     R2,BSELEN             OPENING UP PLACE FOR NEW ENTRY             
         LR    R3,R0                                                            
         LA    R4,BNSPACE                                                       
         LR    R5,R0                                                            
         MVCL  R2,R4                                                            
         L     R2,BNINSAD          R1 - ADDR TO INSERT                          
         L     R3,BSELEN                                                        
         L     R4,BNENTRY          R2 - ADDR OF ENTRY TO INSERT                 
         L     R5,BSELEN                                                        
         MVCL  R2,R4               INSERT ENTRY                                 
         L     R0,BSEND                                                         
         A     R0,BSELEN                                                        
         ST    R0,BSEND                                                         
         SR    R15,R15             ENTRY INSERTED OK !!                         
         END                                                                    
         END                                                                    
*                                                                               
         L     R0,BNLIST           RETURN R0 - NEW END OF SORTED LIST           
         A     R0,BSEND                                                         
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
*                                                                               
         B     BINSDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BINSBOMB LABEL ,                   BOMB IF STACK TEMP SPACE TOO SMALL           
         BOMB                                                                   
*                                                                               
BINSDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN R0                                                             
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  BDELETE - DELETE ENTRY IN BINARY SORTED LIST                                 
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - ADDRESS OF BINARY SEARCH INFO                                      
*       R1 - START OF BINARY SORTED LIST                                        
*       R2 - ADDRESS OF ENTRY TO DELETE                                         
*                                                                               
*  ON EXIT:                                                                     
*       R0 - NEW END OF BINARY SORTED LIST (ACTUAL ADDR)                        
*      R15 - CC=ZERO, ENTRY DELETED                                             
*            CC=NZ, ENTRY NOT FOUND                                             
*                                                                               
*                                                                               
BDWA     RECORD BEGIN                                                           
BDLIST   DS    A                   ADDRESS OF SORTED LIST                       
BDTEMP   DS    0X                  PAGE SIZED TEMP WORK AREA                    
*                                  AREA IS MANUALLY PUSHED, POP'D               
         END                                                                    
*                                                                               
*                                                                               
BDELETE  XPROC BDWA                                                             
         USING BSINFO,R6                                                        
         A     R13,=A(L'RPAGE)     XPUSH TEMP AREA                              
         LR    R6,R0                                                            
         ST    R1,BDLIST                                                        
*                                                                               
         ACALL BSEARCH             FIND ENTRY TO DELETE                         
*                                                                               
         COMMENT                   IF ENTRY, DELETE IT                          
         IF    Z,BEGIN                                                          
         LA    R2,BDTEMP                                                        
         L     R3,BDLIST                                                        
         A     R3,BSEND                                                         
         SR    R3,R1                                                            
         S     R3,BSELEN                                                        
         LR    R4,R1                                                            
         A     R4,BSELEN                                                        
         LR    R5,R3                                                            
         XPUSH R2,R5                                                            
         MVCL  R2,R4               MOVE END OF LIST TO TEMP AREA                
         XPOP  R2,R5                                                            
         LR    R2,R1                                                            
         LA    R4,BDTEMP                                                        
         MVCL  R2,R4               MOVE END OF LIST BACK, DELETING              
         COMMENT                      REQUESTED ENTRY                           
         L     R0,BSEND                                                         
         S     R0,BSELEN                                                        
         ST    R0,BSEND                                                         
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         COMMENT                   IF NOT FOUND, CAN NOT DELETE                 
         ELSE  BEGIN ,                                                          
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         L     R0,BDLIST           RETURN R0 - NEW END OF LIST                  
         A     R0,BSEND                                                         
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
         PRETURN R0                                                             
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  ABSEARCH - BINARY SEARCH, ALLOWING ABREVIATIONS !                            
*                                                                               
*  THIS ROUTINE ALLOWS ABREVIATIONS TO MATCH.  SEE DETAILS BELOW.               
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - ADDRESS OF BSINFO                                                  
*       R1 - ADDRESS OF BINARY SORTED LIST                                      
*       R2 - ADDRESS OF ENTRY NAME                                              
*                                                                               
*  ON EXIT:                                                                     
*       R0 - ENTRY LENGTH                                                       
*       R1 - ENTRY ADDRESS, OR ADDRESS OF PLACE TO INSERT ENTRY                 
*       R15 - CC=ZERO IF ENTRY FOUND, CC=NZ IF ENTRY NOT FOUND                  
*                                                                               
*                                                                               
*  THIS ROUTINE IS SIMILAR TO BSEARCH.  THE DIFFERENCE IS THAT                  
*  BSEARCH FINDS ONLY EXACT MATCHES, WHEREAS THIS ROUTINE WILL                  
*  MATCH IF THE NON-BLANK PORTION OF THE SEARCH KEY MATCHES THE                 
*  ALL OR THE FIRST PART OF THE KEYWORD.  A MINIMUM OF 3 CHARS                  
*  MUST MATCH.  IF THERE ARE MULTIPLE MATCHES, THEN THE FIRST                   
*  MATCHING KEYWORD IN THE LIST WILL BE RETURNED.  USED TO                      
*  SEARCH THE SYSTEM VARIABLE/FUNCTION/PROCEDURE TABLE.                         
*                                                                               
*                                                                               
ABSEARCH XPROC ,                   BINARY SEARCH SORTED LIST                    
         USING BSINFO,R6                                                        
         LR    R6,R0                                                            
         L     R0,BSSTART          R0 - +/- ADDR CORRECTION AMOUNT              
         AR    R1,R0               R1 - ADDR OF ENTRY TO COMPARE                
         COMMENT                   R2 - ENTRY NAME TO COMPARE                   
         L     R3,BSEND            R3 - END OF LAST VALID ENTRY                 
         AR    R3,R1                                                            
         SR    R3,R0                                                            
         L     R4,BSCNT            R4 - NUMBER OF SEARCH INTERATIONS            
         COMMENT                   R5 - COMPARE LENGTH  (-1 FOR EX)             
         LR    R5,R2                                                            
         A     R5,BSSLEN           CALCULATE COMPARE LENGTH                     
         DECR  R5                                                               
         WHILE ((@R5,EQ,' '),AND,(R5,GT,R2)),BEGIN                              
         DECR  R5                                                               
         END                                                                    
         SR    R5,R2                                                            
         IF    (R5,LT,2),' LA R5,2 '                                            
         COMMENT                                                                
         WHILE (R4,GT,1),BEGIN     DO BINARY SEARCH                             
         BCTR  R4,0                                                             
         SRL   R0,1                                                             
         IF    (R1,GE,R3),BEGIN         MUST NOT POINT PAST VALID               
         SR    R1,R0                    ENTRIES                                 
         END                                                                    
         ELSE  BEGIN                                                            
* 'le' test below gives 1st match in list if multiple entries match             
         EX    R5,' CLC 0(0,R2),0(R1) ' COMPARE ENTRY TO SEARCH NAME            
         IF    LE,BEGIN                 AND MOVE UP OR DOWN                     
         SR    R1,R0                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         AR    R1,R0                                                            
         END                                                                    
         END                                                                    
         END                                                                    
         L     R0,BSELEN           MAKE FINAL ADJUSTMENTS                       
         SR    R1,R0                 BACK UP ONE ENTRY AND LOOK AT              
         LA    R4,3                  NEXT 3 ENTRIES,,,                          
         LA    R15,4                                                            
         WHILE ((R1,LT,R3),AND,(R4,POS)),BEGIN                                  
         BCTR  R4,0                                                             
         EX    R5,' CLC 0(0,R2),0(R1) '    DO COMPARE                           
         IF    EQ,' LA R15,0 '                                                  
         IF    GT,' AR R1,R0 '                                                  
         END                                                                    
         L     R0,BSELEN           RETURN R0 - ENTRY LENGTH                     
         COMMENT                   RETURN R1 - ENTRY ADDRESS                    
         COMMENT                   RETURN R15=CC, Z=FOUND, NZ=NOT F.            
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'SUPER OPTIMIZED ACTIVE LOCATE/PUT'                              
*box                                                                            
*                                                                               
*  XLOCLINE - HIGH PERFORMANCE LINE LOCATE ROUTINE                              
*                                                                               
*  THIS ROUTINE DOES FAST LOCATE OF FIRST LINE IN RANGE,,                       
*  SEE XLOCFRST ROUTINE.                                                        
*                                                                               
*  ON ENTRY:                                                                    
*       SAME AS XLOCFRST                                                        
*                                                                               
*  ON EXIT:                                                                     
*       SAME AS XLOCFRST                                                        
*                                                                               
*                                                                               
*  WARNING !!, THIS ROUTINE DIDDLES DIRECTLY SEVERAL DATA                       
*      STRUCTURES.  CHANGES IN OTHER ROUTINES MAY HAVE SIDE EFFECTS             
*      HERE.  ISN'T OPTIMIZATION FUN.                                           
*                                                                               
*  WARNING !!, CAN BE USED ONLY WITH RECORDS HAVING 4 BYTE LINE                 
*      NUMBERS (IE. ACTIVE FILE, EXEC FILES)                                    
*                                                                               
*                                                                               
LCLWA    RECORD BEGIN                                                           
LCLKEY   DS    XL(L'NDXSET+4)      LINE NUMBER KEY                              
LCLSET   EQU   LCLKEY,L'NDXSET                                                  
LCLLNO   EQU   LCLKEY+L'NDXSET,4                                                
LCLREGS  DS    4F                  ENTRY PARMS                                  
LCLREG2  EQU   LCLREGS+12                                                       
         END                                                                    
TEXTLN   EQU   L'LCLKEY+DATALN,L'DATALN                                         
TEXTPTR  EQU   L'LCLKEY+DATAPTR,L'DATAPTR                                       
*                                                                               
*                                                                               
XLOCLINE XPROC LCLWA                                                            
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         STM   R15,R2,LCLREGS                                                   
         MVC   LCLSET,RECSET       CREATE RECORD KEY                            
         MVC   LCLLNO,@R2                                                       
*                                                                               
         COMMENT                   ENTRANCE EXAM                                
         LH    R3,RECQOFF          R3 - QUICK OFFSET                            
         L     R4,RECQPG           R4 - QUICK PAGE                              
         IF    ((R4,Z),OR,(R3,Z)),USEXLOC                                       
         IF    (RECNLEN,NE,4),' BOMB '                                          
*                                                                               
         COMMENT                   GET PAGE                                     
         LR    R0,R4                                                            
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         IF    ^RPDATA,USEXLOC                                                  
*                                                                               
         COMMENT                   GET ENTRY OFFSETS                            
         LR    R1,R3               R1 - 1ST ENTRY OFFSET                        
         AR    R1,PAR                                                           
         LH    R2,RPNTRYLN         R2 - NEXT ENTRY OFFSET                       
         AR    R2,R1                                                            
         LH    R3,RPXEND           R3 - LAST ENTRY ON PAGE                      
         AR    R3,PAR                                                           
         LH    R4,RPXLAST          R4 - LAST VALID ENTRY LIMIT                  
         AR    R4,PAR                                                           
*                                                                               
* THE FOLLOWING CHECKS INSURE                                                   
*   1. THAT THE QUICK INDEX OFFSET POINTER IS GOOD                              
*   2. THAT THE RECORD BELONGS ON THIS PAGE                                     
         IF    (R1,GE,R3),USEXLOC                                               
         IF    ((LCLKEY,LT,@R1),OR,(LCLKEY,GE,@R4)),USEXLOC                     
         IF    ((LCLKEY,GT,@R2),AND,(R2,LT,R3)),USEXLOC                         
*                                                                               
         COMMENT                   IF FIRST ENTRY MATCH                         
         IF    (LCLKEY,EQ,@R1),BEGIN                                            
         LR    R2,R1                                                            
         LH    R0,TEXTLN(R2)       GET LENGTH, LOCATION                         
         LH    R1,TEXTPTR(R2)                                                   
         AR    R1,PAR                                                           
         LR    R4,R2               SET QUICK GET/LOC INFO                       
         SR    R4,PAR                                                           
         STH   R4,RECQOFF                                                       
         L     R4,RPNUMB                                                        
         ST    R4,RECQPG                                                        
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         COMMENT                   IF NEXT SET NOT SAME AS CURRENT,             
         COMMENT                   THEN WE HAVE NO MATCH                        
         ELSEIF (('CLC LCLSET,@R2',NE),AND,(R2,LT,R3)),BEGIN                    
         CLEAR R0                                                               
         CLEAR R1                                                               
         LA    R15,4                                                            
         B     XLCLDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF NEXT ENTRY MATCH                          
         ELSEIF ((LCLKEY,LE,@R2),AND,(R2,LT,R3)),BEGIN                          
         LH    R0,TEXTLN(R2)       GET LENGTH, LOCATION                         
         LH    R1,TEXTPTR(R2)                                                   
         AR    R1,PAR                                                           
         LR    R4,R2               SET QUICK GET/LOC INFO                       
         SR    R4,PAR                                                           
         STH   R4,RECQOFF                                                       
         L     R4,RPNUMB                                                        
         ST    R4,RECQPG                                                        
         L     R4,NDXNAME(R2)      RETURN LINENO (@ ENTRY R2)                   
         L     R5,LCLREG2                                                       
         ST    R4,0(R5)                                                         
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         COMMENT                   IF AT END OF ENTRIES,                        
         ELSEIF (R2,GE,R3),BEGIN                                                
         B     USEXLOC                                                          
         END                                                                    
*                                                                               
         ELSE  BEGIN               ALL OTHER CASES, IMPOSIBLE                   
         BOMB                                                                   
         END                                                                    
*                                                                               
*        ALL DONE,  EXIT BELOW                                                  
*                                                                               
         B     XLCLDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
         SPACE 1                                                                
*  OPTIMIZED XLOCLINE WILL NOT WORK,,, WE CALL STANDARD FORM OF                 
*  XLOCATE ROUTINE                                                              
USEXLOC  LABEL ,                                                                
         LM    R15,R2,LCLREGS      CALL LOCATE TO GET PREVIOUS                  
         ACALL XLOCFRST            BYTE COUNT                                   
         B     XLCLDONE                                                         
         SPACE 2                                                                
*                                                                               
*                                                                               
XLCLDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         SPACE 2                                                                
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  XPUTLINE - HIGH PERFORMANCE PUT LINE ROUTINE                                 
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*      SAME AS XPUT, WITH                                                       
*      @R3 - 4 CHARACTER FLAG BYTES                                             
*             IF C'I...'  INSERT ONLY                                           
*             IF C'R...'  REPLACE ONLY                                          
*             IF C'....'  DON'T CARE                                            
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH (DATA) OF RECORD REPLACED.  (-1 IF NONE)                    
*      R15 - CC=0  ALL OK                                                       
*            CC=4  NO ROOM FOR LINE (>200000 LINES SAVED !)                     
*            CC=8  INVALID SET, RECORD NUMBERS (CAN'T BE ZERO)                  
*            CC=12 ATTEMPTED VIOLATION OF INSERT/REPACE ONLY MODE               
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*                                                                               
*  WARNING !!, THIS ROUTINE DIDDLES DIRECTLY SEVERAL DATA                       
*      STRUCTURES.  CHANGES IN OTHER ROUTINES MAY HAVE SIDE EFFECTS             
*      HERE.  ISN'T OPTIMIZATION FUN.                                           
*                                                                               
*  WARNING !!, CAN BE USED ONLY WITH RECORDS HAVING 4 BYTE LINE                 
*      NUMBERS (IE. ACTIVE FILE, EXEC FILES)                                    
*                                                                               
*                                                                               
PTLWA    RECORD BEGIN                                                           
PTLKEY   DS    XL(L'NDXSET+4)      LINE NUMBER KEY                              
PTLSET   EQU   PTLKEY,L'NDXSET                                                  
PTLLNO   EQU   PTLKEY+L'NDXSET,4                                                
PTLFLAG  DS    4CL1                ENTRY PARM: FLAGS                            
PTLREGS  DS    4F                  ENTRY PARMS: REGISTERS                       
PTLLEN   EQU   PTLREGS+4                                                        
PTLLOC   EQU   PTLREGS+8                                                        
PTLTEMP  DS    0X                  PAGE SIZED TEMP AREA                         
*                                  AREA IS MANUALLY PUSHED, POP'D               
         END                                                                    
*                                                                               
*                                                                               
XPUTLINE XPROC PTLWA                                                            
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         STM   R15,R2,PTLREGS                                                   
         MVC   PTLFLAG(4),0(R3)                                                 
         MVC   PTLSET,RECSET       CREATE RECORD KEY                            
         MVC   PTLLNO,@R2                                                       
*                                                                               
         COMMENT                   ENTRANCE EXAM                                
         LH    R3,RECPOFF          R3 - QUICK OFFSET                            
         L     R4,RECPPG           R4 - QUICK PAGE                              
         IF    ((R4,Z),OR,(R3,Z)),USEXPUT                                       
         IF    (RECNLEN,NE,4),' BOMB '                                          
*                                                                               
         COMMENT                   GET PAGE                                     
         LR    R0,R4                                                            
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         IF    ^RPDATA,USEXPUT                                                  
*                                                                               
         COMMENT                   GET ENTRY OFFSETS                            
         LR    R1,R3               R1 - 1ST ENTRY OFFSET                        
         AR    R1,PAR                                                           
         LH    R2,RPNTRYLN         R2 - NEXT ENTRY OFFSET                       
         AR    R2,R1                                                            
         LH    R3,RPXEND           R3 - LAST ENTRY ON PAGE                      
         AR    R3,PAR                                                           
         LH    R4,RPXLAST          R4 - LAST VALID ENTRY LIMIT                  
         AR    R4,PAR                                                           
*                                                                               
* THE FOLLOWING CHECKS INSURE                                                   
*   1. THAT THE QUICK INDEX POINTER (R3 ON ENTRY) IS GOOD                       
*   2. THAT THE RECORD BELONGS ON THIS PAGE                                     
         IF    (R1,GE,R3),USEXPUT                                               
         IF    ((PTLKEY,LT,@R1),OR,(PTLKEY,GE,@R4)),USEXPUT                     
         IF    ((PTLKEY,GT,@R2),AND,(R2,LT,R3)),USEXPUT                         
*                                                                               
         COMMENT                   CHECK FOR ROOM, ON THIS PAGE                 
         L     R5,PTLLEN                                                        
         LA    R5,MXNTRYLN+16(R5)                                               
         LH    R4,RPDEND                                                        
         SH    R4,RPXEND                                                        
         IF    (R5,GT,R4),USEXPUT                                               
*                                                                               
*                                                                               
* THE FOLLOWING ROUTINES HANDLE DIFFERENT CASES:                                
*   1. INSERT AT END                                                            
*   2. INSERT IN MIDDLE                                                         
*   3. REPLACE CURRENT RECORD                                                   
*   4. REPLACE NEXT RECORD                                                      
* HEY BUD !! MUCH IN LINE CODE FOLLOWS.      STRAIGHT ARROWS!                   
*                                                                               
         SPACE 2                                                                
*-                                                                              
*-       INSERT AT END OF INDEX LIST                                            
*-                                                                              
         COMMENT                   INSERT ENTRY AT END                          
         IF    ((PTLKEY,GT,@R1),AND,(R2,EQ,R3)),BEGIN                           
         IF    (PTLFLAG,EQ,'R'),BADREP                                          
         COMMENT                   MOVE DATA                                    
         L     R5,PTLLEN                                                        
         LA    R5,15(R5)                                                        
         SRL   R5,4                                                             
         SLL   R5,4                                                             
         LH    R4,RPDEND                                                        
         SR    R4,R5                                                            
         STH   R4,RPDEND           (SAVE NEW DATA POINTER TOO)                  
         AR    R4,PAR                                                           
         L     R0,PTLLOC                                                        
         L     R1,PTLLEN                                                        
         MVCL  R4,R0                                                            
         COMMENT                   SET UP INDEX                                 
         MVC   NDXKEY(L'PTLKEY,R3),PTLKEY                                       
         L     R5,PTLLEN                                                        
         STH   R5,TEXTLN(R3)                                                    
         LH    R5,RPDEND                                                        
         STH   R5,TEXTPTR(R3)                                                   
         COMMENT                   RESET VARIOUS POINTERS                       
         LH    R4,RPXEND                                                        
         AH    R4,RPNTRYLN                                                      
         STH   R4,RPXEND           SAVE END OF INDEXES                          
         LR    R4,R3                                                            
         SR    R4,PAR                                                           
         STH   R4,RECPOFF          SAVE QUICK PUT INFORMATION                   
         L     R4,RPNUMB                                                        
         ST    R4,RECPPG                                                        
         LA    R4,RPINFO           UPDATE BSINFO END POINTER                    
         USING BSINFO,R4                                                        
         L     R1,BSEND                                                         
         A     R1,BSELEN                                                        
         ST    R1,BSEND                                                         
         DROP  R4                                                               
         PMARK PAR                                                              
         L     R0,=F'-1'           SET RETURNS                                  
         CLEAR R15                                                              
         END                                                                    
*-                                                                              
*-       INSERT AT MIDDLE OF INDEX LIST                                         
*-                                                                              
         COMMENT                   IF INSERT ENTRY AT MIDDLE                    
         ELSEIF ((PTLKEY,GT,@R1),AND,(PTLKEY,LT,@R2)),BEGIN                     
         IF    (PTLFLAG,EQ,'R'),BADREP                                          
         A     R13,=A(L'RPAGE)     XPUSH TEMP AREA                              
         LA    R4,PTLTEMP          OPEN PLACE IN INDEX LIST @R2                 
         LR    R5,R3                                                            
         SR    R5,R2                                                            
         LR    R14,R2                                                           
         LR    R15,R5                                                           
         MVCL  R4,R14                                                           
         LA    R4,PTLTEMP                                                       
         LR    R5,R3                                                            
         SR    R5,R2                                                            
         LR    R14,R2                                                           
         AH    R14,RPNTRYLN                                                     
         LR    R15,R5                                                           
         MVCL  R14,R4                                                           
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
         COMMENT                   MOVE DATA                                    
         L     R5,PTLLEN                                                        
         LA    R5,15(R5)                                                        
         SRL   R5,4                                                             
         SLL   R5,4                                                             
         LH    R4,RPDEND                                                        
         SR    R4,R5                                                            
         STH   R4,RPDEND           (SAVE NEW DATA POINTER TOO)                  
         AR    R4,PAR                                                           
         L     R0,PTLLOC                                                        
         L     R1,PTLLEN                                                        
         MVCL  R4,R0                                                            
         COMMENT                   SET UP INDEX                                 
         MVC   NDXKEY(L'PTLKEY,R2),PTLKEY                                       
         L     R5,PTLLEN                                                        
         STH   R5,TEXTLN(R2)                                                    
         LH    R5,RPDEND                                                        
         STH   R5,TEXTPTR(R2)                                                   
         COMMENT                   RESET VARIOUS POINTERS                       
         LH    R4,RPXEND                                                        
         AH    R4,RPNTRYLN                                                      
         STH   R4,RPXEND           SAVE END OF INDEXES                          
         LR    R4,R2                                                            
         SR    R4,PAR                                                           
         STH   R4,RECPOFF          SAVE QUICK PUT INFORMATION                   
         L     R4,RPNUMB                                                        
         ST    R4,RECPPG                                                        
         LA    R4,RPINFO           UPDATE BSINFO END POINTER                    
         USING BSINFO,R4                                                        
         L     R1,BSEND                                                         
         A     R1,BSELEN                                                        
         ST    R1,BSEND                                                         
         DROP  R4                                                               
         PMARK PAR                                                              
         L     R0,=F'-1'           SET RETURNS                                  
         CLEAR R15                                                              
         END                                                                    
*-                                                                              
*-       REPLACE CURRENT ENTRY                                                  
*-                                                                              
         COMMENT                   IF REPLACE 1ST ENTRY                         
         ELSEIF (PTLKEY,EQ,@R1),BEGIN                                           
         IF    (PTLFLAG,EQ,'I'),BADINS                                          
         LH    R0,TEXTLN(R1)       R0 - REPLACED TEXT LENGTH                    
         LH    R4,TEXTLN(R1)       R4 - OLD RECORD AREA SIZE                    
         LA    R4,15(R4)                                                        
         SRL   R4,4                                                             
         SLL   R4,4                                                             
         L     R5,PTLLEN           R5 - NEW RECORD AREA SIZE                    
         LA    R5,15(R5)                                                        
         SRL   R5,4                                                             
         SLL   R5,4                                                             
         IF    (R5,LE,R4),BEGIN    NEW RECORD FITS, REPLACE CURRENT             
         LH    R4,TEXTPTR(R1)      MOVE DATA                                    
         AR    R4,PAR                                                           
         L     R14,PTLLOC                                                       
         L     R15,PTLLEN                                                       
         MVCL  R4,R14                                                           
         L     R4,PTLLEN           SAVE NEW TEXT LENGTH IN INDEX                
         STH   R4,TEXTLN(R1)                                                    
         END                                                                    
         ELSE  BEGIN               NEW RECORD DOES NOT FIT, ADD IT              
         LH    R4,RPDEND           MOVE DATA                                    
         SR    R4,R5                                                            
         STH   R4,RPDEND           (SAVE NEW END OF DATA POINTER)               
         AR    R4,PAR                                                           
         L     R14,PTLLOC                                                       
         L     R15,PTLLEN                                                       
         MVCL  R4,R14                                                           
         L     R4,PTLLEN           SAVE NEW INDEX POINTERS                      
         STH   R4,TEXTLN(R1)       (LENGTH AND OFFSET)                          
         LH    R4,RPDEND                                                        
         STH   R4,TEXTPTR(R1)                                                   
         END                                                                    
         LR    R4,R1               SET QUIQK PUT POINTERS                       
         SR    R4,PAR                                                           
         STH   R4,RECPOFF                                                       
         L     R4,RPNUMB                                                        
         ST    R4,RECPPG                                                        
         PMARK PAR                 MARK PAGE CHANGED                            
         CLEAR R15                 SET RETURN                                   
         END                                                                    
*-                                                                              
*-       REPLACE NEXT ENTRY                                                     
*-                                                                              
         COMMENT                   IF REPLACE 2ND ENTRY                         
         ELSEIF (PTLKEY,EQ,@R2),BEGIN                                           
         IF    (PTLFLAG,EQ,'I'),BADINS                                          
         LH    R0,TEXTLN(R2)       R0 - REPLACED TEXT LENGTH                    
         LH    R4,TEXTLN(R2)       R4 - OLD RECORD AREA SIZE                    
         LA    R4,15(R4)                                                        
         SRL   R4,4                                                             
         SLL   R4,4                                                             
         L     R5,PTLLEN           R5 - NEW RECORD AREA SIZE                    
         LA    R5,15(R5)                                                        
         SRL   R5,4                                                             
         SLL   R5,4                                                             
         IF    (R5,LE,R4),BEGIN    NEW RECORD FITS, REPLACE CURRENT             
         LH    R4,TEXTPTR(R2)      MOVE DATA                                    
         AR    R4,PAR                                                           
         L     R14,PTLLOC                                                       
         L     R15,PTLLEN                                                       
         MVCL  R4,R14                                                           
         L     R4,PTLLEN           SAVE NEW TEXT LENGTH IN INDEX                
         STH   R4,TEXTLN(R2)                                                    
         END                                                                    
         ELSE  BEGIN               NEW RECORD DOES NOT FIT, ADD IT              
         LH    R4,RPDEND           MOVE DATA                                    
         SR    R4,R5                                                            
         STH   R4,RPDEND           (SAVE NEW END OF DATA POINTER)               
         AR    R4,PAR                                                           
         L     R14,PTLLOC                                                       
         L     R15,PTLLEN                                                       
         MVCL  R4,R14                                                           
         L     R4,PTLLEN           SAVE NEW INDEX POINTERS                      
         STH   R4,TEXTLN(R2)       (LENGTH AND OFFSET)                          
         LH    R4,RPDEND                                                        
         STH   R4,TEXTPTR(R2)                                                   
         END                                                                    
         LR    R4,R2               SET QUICK PUT POINTERS                       
         SR    R4,PAR                                                           
         STH   R4,RECPOFF                                                       
         L     R4,RPNUMB                                                        
         ST    R4,RECPPG                                                        
         PMARK PAR                 MARK PAGE AS CHANGED                         
         CLEAR R15                 SET RETURN                                   
         END                                                                    
*                                                                               
         ELSE  BEGIN               ALL OTHER CASES, IMPOSIBLE                   
         BOMB                                                                   
         END                                                                    
*                                                                               
*        ALL DONE,  EXIT BELOW                                                  
*                                                                               
         B     XPTLDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
         SPACE 1                                                                
*  OPTIMIZED XPUTLINE WILL NOT WORK,,, WE CALL STANDARD FORM OF                 
*  XPUT ROUTINE                                                                 
USEXPUT  LABEL ,                   DO LONG VERSION OF XPUT                      
*                                                                               
         COMMENT                   CHECK INSERT/REPLACE ONLY LOGIC              
         LM    R15,R2,PTLREGS      ALSO, GET PREV RECORD LEN, IF ANY            
         ACALL LLOCATE                                                          
         IF    Z,BEGIN             IF RECORD EXISTS,                            
         IF    (PTLFLAG,EQ,'I'),BADINS                                          
         LR    R4,R0                                                            
         END                                                                    
         ELSE  BEGIN               IF DOES NOT EXIST,                           
         IF    (PTLFLAG,EQ,'R'),BADREP                                          
         L     R4,=F'-1'                                                        
         END                                                                    
*                                                                               
         COMMENT                   DO LONG VERSION OF XPUT                      
         LM    R15,R2,PTLREGS                                                   
         ACALL XPUT                                                             
         IF    (R15,NEG),BEGIN     UNSCRAMBLE AND RESET CC                      
         LA    R15,4                                                            
         END                                                                    
         IF    (R15,POS),BEGIN                                                  
         LA    R15,8                                                            
         END                                                                    
         LR    R0,R4               RETURN R0 - PREVIOUS RECORD LEN              
         B     XPTLDONE                                                         
*                                                                               
*        IF INVALID INSERT OR REPLACE,,,                                        
*        WHEN ADDING IN REPLACE OR INSERT ONLY MODE.                            
*                                                                               
BADINS   LABEL ,                                                                
BADREP   LABEL                                                                  
         LA    R15,12                                                           
         B     XPTLDONE                                                         
         SPACE 1                                                                
*                                                                               
*        NORMAL EXIT                                                            
*                                                                               
XPTLDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN R0                                                             
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'LOW-LEVEL NUMBER ROUTINES'                                      
*box                                                                            
*                                                                               
*                                                                               
*  NNUMBER - NUMBER BY ROUTINE                                                  
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - START OF RANGE                                                     
*       R1 - END OF RANGE                                                       
*       R2 - DELTA FACTOR FOR THIS NUMBER                                       
*       R3 - NEW STARTING LINENO, (-1 IF NONE)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LAST LINE NUMBER IN RENUMBERED RANGE, IF CC=ZERO                   
*      R15 - CC=ZERO, SUCCESS                                                   
*            RC=4  - BAD DELTA                                                  
*            RC=8  - VOID RANGE                                                 
*            RC=12 - BAD RANGE                                                  
*            RC=16 - ROUNDING ERROR (NUMBER TIMES)                              
*                                                                               
*                                                                               
NMWA     RECORD BEGIN                                                           
NMPREV   DS    F                   LINENO PRIOR TO NUMBER RANGE                 
NMFIRST  DS    F                   FIRST LINENO IN NUMBER RANGE                 
NMLAST   DS    F                   LAST LINENO IN NUMBER RANGE                  
NMNEXT   DS    F                   NEXT LINENO AFTER NUMBER RANGE               
NMSTART  DS    F                   STARTING LINENO (NEW)                        
NMDELTA  DS    F                   DELTA, RENUMBERING FACTOR                    
NMTEMP   DS    F                   CURRENT WORKING LINE NUMBER                  
NMFLAGS  FLAG                                                                   
         FLAG  NMFROUND            GOT ROUNDING ERROR                           
         END                                                                    
*                                                                               
*                                                                               
NNUMBER  XPROC NMWA                                                             
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R0,NMFIRST                                                       
         ST    R1,NMLAST                                                        
         ST    R2,NMDELTA                                                       
         ST    R3,NMSTART                                                       
*                                                                               
         COMMENT                   WE CAN ONLY RENUMBER LINE #'S                
         IF    (RECNLEN,NE,4),' BOMB '                                          
*                                                                               
         MVC   NMTEMP,NMFIRST      FIND ACTUAL FIRST IN RANGE                   
         LA    R15,RGROUP                                                       
         LA    R2,NMTEMP                                                        
         ACALL XLOCFRST                                                         
         BNZ   VOIDRNG                                                          
         MVC   NMFIRST,NMTEMP                                                   
         LA    R15,RGROUP          FIND ACTUAL PREVOIUS TO RANGE                
         LA    R2,NMTEMP                                                        
         ACALL XLOCPREV                                                         
         IF    NZ,BEGIN                                                         
         MVC   NMTEMP,=F'-1'                                                    
         END                                                                    
         MVC   NMPREV,NMTEMP                                                    
         MVC   NMTEMP,NMLAST       FIND ACTUAL LAST IN RANGE                    
         LA    R15,RGROUP                                                       
         LA    R2,NMTEMP                                                        
         ACALL XLOCLAST                                                         
         BNZ   VOIDRNG                                                          
         MVC   NMLAST,NMTEMP                                                    
         LA    R15,RGROUP          FIND ACTUAL NEXT AFTER RANGE                 
         LA    R2,NMTEMP                                                        
         ACALL XLOCNEXT                                                         
         IF    NZ,BEGIN            IF NO NEXT, OR IF NEXT TOO BIG               
         MVC   NMTEMP,CVHILNO      SET TO HIGHEST LNO+1                         
         END                                                                    
         IF    (NMTEMP,LGT,CVHILNO),BEGIN                                       
         MVC   NMTEMP,CVHILNO                                                   
         END                                                                    
         MVC   NMNEXT,NMTEMP                                                    
         IF    (NMSTART,EQ,-1),BEGIN   FIND ACTUAL STARTING RANGE               
         MVC   NMSTART,NMFIRST                                                  
         END                                                                    
*                                                                               
         COMMENT                   VALIDITY CHECK RANGE                         
         IF    (NMFIRST,GT,NMLAST),VOIDRNG                                      
         IF    (NMPREV,NE,-1),BEGIN                                             
         IF    (NMPREV,GE,NMFIRST),BADRNG                                       
         IF    ((NMPREV,GE,NMSTART),AND,(NMSTART,NE,-1)),BADRNG                 
         END                                                                    
         IF    (NMNEXT,NE,-1),BEGIN  (NMNEXT NEVER SET -1) 4/86                 
         IF    (NMNEXT,LE,NMLAST),BADRNG                                        
         IF    ((NMNEXT,LE,NMSTART),AND,(NMSTART,NE,-1)),BADRNG                 
         END                                                                    
         USING RPAGE,PAR                                                        
         IF    (RPNAMELN,NE,4),' BOMB '     ALSO CHECK LINENO LEN               
         DROP  PAR                                                              
         IF    (NMDELTA,EQ,0),BADDELTA      ALSO CHECK DELTA                    
*                                                                               
         COMMENT                   TRIAL RUN THROUGH NUMBER                     
         MVC   NMTEMP,NMFIRST                                                   
         LA    R15,RGROUP                                                       
         LA    R2,NMTEMP                                                        
         ACALL XLOCFRST                                                         
         L     R4,NMSTART                                                       
         WHILE ((NMTEMP,LE,NMLAST),AND,(R15,Z)),BEGIN                           
         COMMENT                   LOOP THRU RANGE RENUMBERING                  
         COMMENT                   R4 IS NEW LINE NUMBER                        
         A     R4,NMDELTA          R4 IS NOW NEXT NEW LINE NUMBER               
         LA    R15,RGROUP                                                       
         LA    R2,NMTEMP                                                        
         ACALL XLOCNEXT            GET NEXT LINE                                
         END                                                                    
         S     R4,NMDELTA          R4 - LAST LINE RENUMBERED (NEW)              
         COMMENT                   CHECK RANGE                                  
         IF    ((R4,LGE,NMNEXT),AND,(NMNEXT,NE,-1)),BADDELTA                    
*                                                                               
         COMMENT                   NOW NUMBER FOR REAL !                        
         MVC   NMTEMP,NMFIRST                                                   
         LA    R15,RGROUP                                                       
         LA    R2,NMTEMP                                                        
         ACALL XLOCFRST                                                         
         L     R4,NMSTART                                                       
         WHILE ((NMTEMP,LE,NMLAST),AND,(R15,Z)),BEGIN                           
         COMMENT                   LOOP THRU RANGE RENUMBERING                  
         COMMENT                   R4 IS NEW LINE NUMBER                        
*                                                                               
         L     R0,NMTEMP           R0 = old line-number                         
         LR    R1,R4               R1 = new line-number                         
         ACALL NFIXNUM             Line-number has changed                      
*                                                                               
         ST    R4,NMTEMP                                                        
         LH    R1,RECQOFF          GET LOCATION OF LINE INDEX                   
         AR    R1,PAR                                                           
         ST    R4,NDXNAME(R1)      SAVE NEW LINE NUMBER                         
         PMARK PAR                                                              
         A     R4,NMDELTA          R4 IS NOW NEXT NEW LINE NUMBER               
         LA    R15,RGROUP                                                       
         LA    R2,NMTEMP                                                        
         ACALL NLOCNEXT            LOCATE NEXT LINE                             
         END                                                                    
         S     R4,NMDELTA          R4 - LAST LINE RENUMBERED (NEW)              
*                                                                               
         COMMENT                   FIX UP BLOCK POINTERS                        
         LA    R15,RGROUP                                                       
         L     R0,NMFIRST                                                       
         L     R1,NMLAST                                                        
         ACALL NFIXLINK                                                         
*                                                                               
         ACALL NFIXNCLR            We are finished with the renumber            
*                                                                               
         LR    R0,R4               R0 - LAST LINE, R15 - CC                     
         CLEAR R15                                                              
*                                                                               
         B     NUMBDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BADDELTA LABEL ,                                                                
         LA    R15,4                                                            
         B     NUMBDONE                                                         
*                                                                               
VOIDRNG  LABEL ,                                                                
         LA    R15,8                                                            
         B     NUMBDONE                                                         
*                                                                               
BADRNG   LABEL                                                                  
         LA    R15,12                                                           
         B     NUMBDONE                                                         
*                                                                               
NUMBDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN R0                                                             
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  NNUMFACT -  NUMBER TIMES/PLUS ROUTINE                                        
*                                                                               
*  NEW LINENO = (OLD LINENO*MULT FACTOR)+ADDITION FACTOR                        
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - START OF RANGE                                                     
*       R1 - END OF RANGE                                                       
*       R2 - SIGNED ADDITION FACTOR  (0 IF NONE)                                
*       R3 - POSITIVE MULTIPLICATION FACTOR (0 IF NONE)                         
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LAST LINE NUMBER IN RENUMBERED RANGE, IF CC=ZERO                   
*      R15 - CC=ZERO, SUCCESS                                                   
*            RC=4  - BAD FACTOR                                                 
*            RC=8  - VOID RANGE                                                 
*            RC=12 - BAD RANGE                                                  
*            RC=16 - ROUNDING ERROR (NUMBER TIMES)                              
*                                                                               
*                                                                               
NFWA     RECORD BEGIN                                                           
NFPREV   DS    F                   LINENO PRIOR TO NUMBER RANGE                 
NFFIRST  DS    F                   FIRST LINENO IN NUMBER RANGE                 
NFLAST   DS    F                   LAST LINENO IN NUMBER RANGE                  
NFNEXT   DS    F                   NEXT LINENO AFTER NUMBER RANGE               
NFADD    DS    F                   ADDITION FACTOR                              
NFMULT   DS    F                   MULTPLICATION FACTOR                         
NFSTART  DS    F                   FIRST NUMBERED LINENO (NEW)                  
NFEND    DS    F                   LAST NUMBERED LINENO (NEW)                   
NFROUND  DS    F                   LAST NEW LNO, USED FOR ROUNDING              
NFTEMP   DS    F                   CURRENT WORKING LINE NUMBER                  
NFFLAGS  FLAG                                                                   
         FLAG  NFFROUND            GOT ROUNDING ERROR                           
         END                                                                    
*                                                                               
*                                                                               
NNUMFACT XPROC NFWA                                                             
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R0,NFFIRST                                                       
         ST    R1,NFLAST                                                        
         ST    R2,NFADD                                                         
         ST    R3,NFMULT                                                        
         L     R14,CVHILNO         Highest possible lineno+1                    
         IF    (R2,GT,R14),BADFACTR                                             
         IF    (R3,GT,R14),BADFACTR                                             
         LNR   R14,R14             Max possible neg incr+1                      
         IF    (R2,LT,R14),BADFACTR                                             
         IF    (R3,NEG),BADFACTR                                                
         CLEAR NFFLAGS                                                          
*                                                                               
         COMMENT                   WE CAN ONLY RENUMBER LINE #'S                
         IF    (RECNLEN,NE,4),' BOMB '                                          
*                                                                               
         MVC   NFTEMP,NFFIRST      FIND ACTUAL FIRST IN RANGE                   
         LA    R15,RGROUP                                                       
         LA    R2,NFTEMP                                                        
         ACALL XLOCFRST                                                         
         BNZ   VOIDRNGE                                                         
         MVC   NFFIRST,NFTEMP                                                   
         LA    R15,RGROUP          FIND ACTUAL PREVOIUS TO RANGE                
         LA    R2,NFTEMP                                                        
         ACALL XLOCPREV                                                         
         IF    NZ,BEGIN                                                         
         MVC   NFTEMP,=F'-1'                                                    
         END                                                                    
         MVC   NFPREV,NFTEMP                                                    
         MVC   NFTEMP,NFLAST       FIND ACTUAL LAST IN RANGE                    
         LA    R15,RGROUP                                                       
         LA    R2,NFTEMP                                                        
         ACALL XLOCLAST                                                         
         BNZ   VOIDRNGE                                                         
         MVC   NFLAST,NFTEMP                                                    
         LA    R15,RGROUP          FIND ACTUAL NEXT AFTER RANGE                 
         LA    R2,NFTEMP                                                        
         ACALL XLOCNEXT                                                         
         IF    NZ,BEGIN            IF NO NEXT, OR IF NEXT TOO BIG               
         MVC   NFTEMP,CVHILNO      SET TO HIGHEST LNO+1                         
         END                                                                    
         IF    (NFTEMP,LGT,CVHILNO),BEGIN                                       
         MVC   NFTEMP,CVHILNO                                                   
         END                                                                    
         MVC   NFNEXT,NFTEMP                                                    
*                                                                               
         L     R1,NFFIRST              FIND ACTUAL NEW FIRST LINE               
         IF    (R1,NP),BADRNGE                                                  
         IF    (NFMULT,NE,0),BEGIN                                              
         M     R0,NFMULT                                                        
         IF    (R0,GT,256),BADFACTR                                             
         D     R0,=F'1000'                                                      
         IF    (R1,NEG),BADFACTR                                                
         IF    (R1,GT,CVMAXLNO),BADFACTR                                        
         END                                                                    
         A     R1,NFADD                                                         
         IF    (R1,NEG),BADFACTR                                                
         IF    (R1,GT,CVMAXLNO),BADFACTR                                        
         ST    R1,NFSTART                                                       
         L     R1,NFLAST               FIND ACTUAL NEW LAST LINE                
         IF    (R1,NEG),BADRNGE                                                 
         IF    (NFMULT,NE,0),BEGIN                                              
         M     R0,NFMULT                                                        
         IF    (R0,GT,256),BADFACTR                                             
         D     R0,=F'1000'                                                      
         IF    (R1,NEG),BADFACTR                                                
         IF    (R1,GT,CVMAXLNO),BADFACTR                                        
         END                                                                    
         A     R1,NFADD                                                         
         IF    (R1,NEG),BADFACTR                                                
         IF    (R1,GT,CVMAXLNO),BADFACTR                                        
         ST    R1,NFEND                                                         
         COMMENT                   IF NEW FIRST,LAST VALID LINENOS              
         COMMENT                   ALL IN BETWEEN WILL BE TOO !                 
*                                                                               
         COMMENT                   VALIDITY CHECK RANGE                         
         IF    (NFFIRST,GT,NFLAST),VOIDRNGE                                     
         IF    (NFPREV,NE,-1),BEGIN                                             
         IF    (NFPREV,GE,NFFIRST),' BOMB '                                     
         IF    (NFPREV,GE,NFSTART),BADRNGE                                      
         END                                                                    
         IF    (NFNEXT,NE,-1),BEGIN  (NFNEXT NEVER SET TO -1) 4/86              
         IF    (NFNEXT,LE,NFLAST),' BOMB '                                      
         IF    (NFNEXT,LE,NFEND),BADRNGE                                        
         END                                                                    
         IF    (NFSTART,GT,NFEND),' BOMB '                                      
         USING RPAGE,PAR                                                        
         IF    (RPNAMELN,NE,4),' BOMB '     ALSO CHECK LINENO LEN               
         DROP  PAR                                                              
*$ CAN REMOVE 3 'BOMB' INSTRUCTIONS, ON 3/3/86,, H.B. JHM                       
*$ THEY SHOULD BE LOGICALLY IMPOSSIBLE. (DUHH)                                  
*                                                                               
         COMMENT                   TRIAL RUN THROUGH NUMBER                     
         MVC   NFTEMP,NFFIRST                                                   
         MVC   NFROUND,NFPREV                                                   
         LA    R15,RGROUP                                                       
         LA    R2,NFTEMP                                                        
         ACALL XLOCFRST                                                         
         WHILE ((NFTEMP,LE,NFLAST),AND,(R15,Z)),BEGIN                           
         COMMENT                   LOOP THRU RANGE RENUMBERING                  
         COMMENT                   CALCULATE NEW LINE NO IN R5                  
         L     R5,NFTEMP                                                        
         IF    (NFMULT,NE,0),BEGIN                                              
         M     R4,NFMULT                                                        
         D     R4,=F'1000'                                                      
         END                                                                    
         A     R5,NFADD                                                         
         IF    (R5,LE,NFROUND),BEGIN                                            
         L     R5,NFROUND                                                       
         LA    R5,1(R5)                                                         
         SET   NFFROUND                                                         
         END                                                                    
         ST    R5,NFROUND                                                       
         LA    R15,RGROUP                                                       
         LA    R2,NFTEMP                                                        
         ACALL XLOCNEXT            GET NEXT LINE                                
         END                                                                    
         COMMENT                   CHECK RANGE                                  
         IF    (R5,NEG),BADFACTR                                                
         IF    (R5,GT,CVMAXLNO),BADFACTR                                        
         IF    ((R5,LGE,NFNEXT),AND,(NFNEXT,NE,-1)),BADFACTR                    
*                                                                               
         COMMENT                   NOW NUMBER FOR REAL !                        
         MVC   NFTEMP,NFFIRST                                                   
         MVC   NFROUND,NFPREV                                                   
         LA    R15,RGROUP                                                       
         LA    R2,NFTEMP                                                        
         ACALL XLOCFRST                                                         
         WHILE ((NFTEMP,LE,NFLAST),AND,(R15,Z)),BEGIN                           
         COMMENT                   LOOP THRU RANGE RENUMBERING                  
         COMMENT                   CALCULATE NEW LINENO IN R5                   
         L     R5,NFTEMP                                                        
         IF    (NFMULT,NE,0),BEGIN                                              
         M     R4,NFMULT                                                        
         D     R4,=F'1000'                                                      
         END                                                                    
         A     R5,NFADD                                                         
         IF    (R5,LE,NFROUND),BEGIN                                            
         L     R5,NFROUND                                                       
         LA    R5,1(R5)                                                         
         SET   NFFROUND                                                         
         END                                                                    
         ST    R5,NFROUND                                                       
*                                                                               
         L     R0,NFTEMP           R0 = old line-number                         
         LR    R1,R5               R1 = new line-number                         
         ACALL NFIXNUM             Line-number has changed                      
*                                                                               
         ST    R5,NFTEMP                                                        
         LH    R1,RECQOFF          GET LOCATION OF LINE INDEX                   
         AR    R1,PAR                                                           
         ST    R5,NDXNAME(R1)      SAVE NEW LINE NUMBER                         
         PMARK PAR                                                              
         LA    R15,RGROUP                                                       
         LA    R2,NFTEMP                                                        
         ACALL NLOCNEXT            LOCATE NEXT LINE                             
         END                                                                    
*                                                                               
         COMMENT                   FIX UP BLOCK POINTERS                        
         LA    R15,RGROUP                                                       
         L     R0,NFFIRST                                                       
         L     R1,NFLAST                                                        
         ACALL NFIXLINK                                                         
*                                                                               
         ACALL NFIXNCLR            We are finished with the renumber            
         IF    NFFROUND,ROUNDERR                                                
*                                                                               
         LR    R0,R5               R0 - LAST LINE, R15 - CC                     
         CLEAR R15                                                              
*                                                                               
         B     NUMFDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BADFACTR LABEL ,                                                                
         LA    R15,4                                                            
         B     NUMFDONE                                                         
*                                                                               
VOIDRNGE LABEL ,                                                                
         LA    R15,8                                                            
         B     NUMFDONE                                                         
*                                                                               
BADRNGE  LABEL                                                                  
         LA    R15,12                                                           
         B     NUMFDONE                                                         
*                                                                               
ROUNDERR LABEL ,                   ROUNDING WARNING,,, LINE NOS OK              
         LA    R15,16                                                           
         B     NUMFDONE                                                         
*                                                                               
NUMFDONE LABEL ,                   NORMAL EXIT                                  
         PRETURN R0                                                             
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  NLOCNEXT - LOCATE NEXT, USE QUICK GET/LOC INFO                               
*                                                                               
*  NOTE: THIS ROUTINE IS USED WITH NUMBER !! DATA PAGE NUMBERS                  
*        MAY WILL BE IN A STATE OF DISARRAY.  THIS ROUTINE OR                   
*        ANY IT CALLS MAY NOT DO A BSEARCH ON THE DATA PAGE INDEX.              
*        THE MASTER INDEX IF ANY IS STILL BASED ON OLD LINENOS.                 
*        WE BE CAREFUL !                                                        
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*            (CONTAINS QUICK INFO, MUST BE CORRECT !@!)                         
*       R0 - NOT USED                                                           
*       R1 - NOT USED                                                           
*      @R2 - NEWEST LINE NUMBER                                                 
*                                                                               
*  ON EXIT:                                                                     
*      @R2 - NEXT LINE NUMBER TO RENUMBER (OLD)                                 
*      @RGROUP - NEW QUICK INFO IS UPDATED, WITH POINTER TO                     
*            (OFFSET) TO NEXT LINE NUMBER IN RECQOFF !!                         
*      R15 - CC = ZERO, IF RECORD FOUND                                         
*            CC = NZ, IF RECORD NOT FOUND                                       
*      PAR - PAGE OBTAINED                                                      
*                                                                               
*  WARNING,  RETURNS POINTERS INTO PAGED AREA, DATA MUST BE                     
*    MUST BE REFERENCED OR MOVED BEFORE ADDITIONAL DISPATCHES !                 
*                                                                               
*                                                                               
NLOCNEXT PROC  SEARCHWA                                                         
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         ST    R2,SRCHPARM         SAVE ENTRY PARM ADDRESSES                    
         ST    R15,SRCHINFO                                                     
         MVC   SRCHSET,RECSET      SAVE SEARCH SET NUMBER                       
         LH    R3,RECNLEN                                                       
         LA    R4,SRCHNAME                                                      
         LR    R5,R3                                                            
         MVCL  R4,R2               SAVE SEARCH NAME                             
*                                                                               
         LA    R15,RGROUP                                                       
         LA    R2,SRCHKEY                                                       
         ACALL CHKQINFO            POINT TO INDEX QUICKLY                       
         IF    NZ,' BOMB '                                                      
         AH    R1,RPNTRYLN         POINT TO NEXT LINE                           
         LH    R3,RPXEND                                                        
         AR    R3,PAR                                                           
         IF    (R1,GE,R3),BEGIN    IF NOT ON THIS PAGE ,,,                      
         LA    R15,RGROUP                                                       
         ACALL NEXTPAGE            BE CAREFUL !! NUMBERS IN FLUX                
         BNZ   NNONEXT                                                          
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         END                                                                    
*                                                                               
         IF    (@R1,NE,RECSET),BEGIN  NO NEXT LINE IN THIS SEARCH SET           
         B     NNONEXT                                                          
         END                                                                    
*                                                                               
         MVC   RECQPG,RPNUMB       SET QUICK GET/PUT INFO                       
         LR    R3,R1                                                            
         SR    R3,PAR                                                           
         STH   R3,RECQOFF          SET QUICK GET/PUT INFO                       
         L     R2,SRCHPARM                                                      
         LH    R3,RPNAMELN                                                      
         LA    R4,NDXNAME(R1)                                                   
         LR    R5,R3                                                            
         MVCL  R2,R4               UPDATE SREACH NAME TO PREVIOUS               
         CLEAR R15                 SET CC=ZERO, FOUND NEXT                      
*                                                                               
         B     NNXTDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
NNONEXT  LABEL ,                   NO NEXT FOUND,,                              
         LA    R15,4                                                            
         B     NNXTDONE                                                         
*                                                                               
NNXTDONE LABEL ,                   NORMAL EXIT                                  
         PEND                                                                   
         DROP  PAR                                                              
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  NFIXLINK - FIX PAGE LINKS TO NEXT PAGE (IE. RESET RPLAST) AND                
*             FIX UP MASTER INDEXES (IF ANY)                                    
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - RECORD GROUP INFO BLOCK                                            
*       R0 - FIRST RECORD RENUMBERED (OLD VALUE)                                
*       R1 - LAST RECORD RENUMBERD (OLD VALUE)                                  
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=ZERO                                                            
*                                                                               
*  NOTE: WE GET THE MASTER INDEX PAGE @PBR,  WE THEN LOOP THRU                  
*  ALL THE PAGES THAT HAVE BEEN RENUMBERED. WE LOOP                             
*  BACKWARDS, FROM THE LAST (HIGHEST) PAGE RENUMBERED TO THE                    
*  LOWEST.  WE FIX THE FOLLOWING LINKS: 1) THE FIRST INDEX LIMIT                
*  ON THE PAGE, 2) THE INDEX RECORD NAME IN THE MASTER PAGE, AND                
*  3) THE LAST INDEX LIMIT ON THE PREVIOUS PAGE.  IN CASE 3)                    
*  WE ARE PUTTING THE FIRST ENTRY AS THE LAST LIMIT ON THE                      
*  PREVIOUS PAGE; THIS IS WHY WE LOOP BACKWARDS.  DIG IT !                      
*                                                                               
*                                                                               
NXWA     RECORD BEGIN                                                           
         DS    0F                  MUST HAVE FULLWORD ALIGNMENT                 
NXFKEY   DS    XL8                 SEARCH KEY OF..                              
NXFIRST  EQU   NXFKEY+4,4          FIRST RECORD RENUMBERED (OLD)                
NXLKEY   DS    XL8                 SEARCH KEY OF..                              
NXLAST   EQU   NXLKEY+4,4          LAST RECORD RENUMBERED (OLD)                 
         END                                                                    
         DS    0S(4-L'NDXSET)      SET LENGTH MUST BE FULLWORD                  
*                                                                               
*                                                                               
NFIXLINK PROC  NXWA                                                             
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15              SET UP ENTRY PARMS, WORK AREA                
         ST    R0,NXFIRST                                                       
         ST    R1,NXLAST                                                        
         L     R0,RECSET                                                        
         ST    R0,NXFKEY                                                        
         ST    R0,NXLKEY                                                        
*                                                                               
         COMMENT                   GET ROOT PAGE                                
         L     R0,RECGRP                                                        
         PGET  PAR,(R0)                                                         
         RPCHECK                                                                
         IF    (RPNAMELN,NE,4),BEGIN                                            
         BOMB                                                                   
         END                                                                    
*                                                                               
         COMMENT                   IF MASTER, FIX UP LINKS                      
         IF    RPMASTER,BEGIN      IF MASTER, FIX UP LINKS                      
         COMMENT                                                                
         PFLIP ,                   PUT MASTER PAGE @PBR !                       
         DROP  PAR                                                              
         USING RPAGE,PBR                                                        
*                                                                               
         COMMENT                   GET INDEX OF FIRST PAGE                      
         COMMENT                       RENUMBERED-1                             
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PBR                                                           
         LA    R2,NXFKEY                                                        
         ACALL BSEARCH             SEARCH FOR INDEX OF LAST                     
         LH    R3,RPKEYLN                 RENUMBERED PAGE                       
         DEX   R3,' CLC 0(0,R2),0(R1) '                                         
         IF    LT,BEGIN            IF REC IS LESS THAN MASTER ENTRY             
         SH    R1,RPNTRYLN         THEN SEARCH ON PREVIOUS PAGE                 
         END                                                                    
         SH    R1,RPNTRYLN         LAST PAGE+1                                  
         LR    R4,R1               R4 - INDEX OF FIRST PAGE TO FIX              
*                                                                               
         COMMENT                   GET INDEX OF LAST PAGE                       
         COMMENT                       RENUMBERED+1                             
         LA    R0,RPINFO                                                        
         LH    R1,RPXSTART                                                      
         AR    R1,PBR                                                           
         LA    R2,NXLKEY                                                        
         ACALL BSEARCH             SEARCH FOR INDEX OF LAST                     
         LH    R3,RPKEYLN                 RENUMBERED PAGE                       
         DEX   R3,' CLC 0(0,R2),0(R1) '                                         
         IF    LT,BEGIN            IF REC IS LESS THAN MASTER ENTRY             
         SH    R1,RPNTRYLN         THEN SEARCH ON PREVIOUS PAGE                 
         END                                                                    
         AH    R1,RPNTRYLN         LAST PAGE+1                                  
         LR    R2,R1               R2 - INDEX OF LAST PAGE TO FIX               
         COMMENT                                                                
*                                                                               
         COMMENT                   MAKE SURE FIRST/LAST INDEXS VALID            
         LH    R5,RPXSTART                                                      
         AR    R5,PBR              R5 - FIRST VALID MASTER INDEX                
         IF    (R2,LT,R5),BEGIN    MAKE INDEXES ARE VALID                       
         LR    R2,R5                                                            
         END                                                                    
         IF    (R4,LT,R5),BEGIN                                                 
         LR    R4,R5                                                            
         END                                                                    
         LH    R5,RPXEND                                                        
         AR    R5,PBR                                                           
         SH    R5,RPNTRYLN         R5 - LAST VALID MASTER INDEX                 
         IF    (R2,GE,R5),BEGIN                                                 
         LR    R2,R5                                                            
         END                                                                    
         IF    (R4,GE,R5),BEGIN                                                 
         LR    R4,R5                                                            
         END                                                                    
         LH    R5,RPXSTART         R5 - FIRST VALID MASTER INDEX                
         AR    R5,PBR                                                           
         LH    R3,RPKEYLN          R3 - MASTER INDEX KEY LENGTH                 
*                                                                               
         DROP  PBR                                                              
         USING RPAGE,PAR                                                        
*                                                                               
         COMMENT                   LOOP FIXING UP LINKS                         
         COMMENT                   R3 - MASTER KEY LENGTH                       
         COMMENT                   @R2 - INDEX OF LAST PAGE TO FIX              
         COMMENT                   @R4 - INDEX OF FIRST PAGE TO FIX             
         COMMENT                   @R5 - FIRST VALID MASTER INDEX               
         COMMENT                                                                
         WHILE (R2,GE,R4),BEGIN    LOOP THRU PAGES FIXING POINTERS              
         L     R0,DATAPGNO(R3,R2)                                               
         SR    R2,PBR                                                           
         SR    R4,PBR                                                           
         SR    R5,PBR                                                           
         PGET  PAR,(R0)            GET RENUMBERED PAGE                          
         RPCHECK                                                                
         AR    R2,PBR                                                           
         AR    R4,PBR                                                           
         AR    R5,PBR                                                           
         LH    R14,RPXFIRST        SET FIRST LIMIT ON PAGE                      
         AR    R14,PAR                                                          
         LH    R15,RPKEYLN                                                      
         LH    R0,RPXSTART                                                      
         AR    R0,PAR                                                           
         LR    R1,R15                                                           
         MVCL  R14,R0                                                           
         PMARK PAR                                                              
         LR    R14,R2              SET NEW MASTER INDEX LINENO VALUE            
         LH    R15,RPKEYLN                                                      
         LH    R0,RPXFIRST                                                      
         AR    R0,PAR                                                           
         LR    R1,R15                                                           
         MVCL  R14,R0                                                           
         PMARK PBR                                                              
         SH    R2,RPNTRYLN-RPAGE(PBR)  POINT TO PREV PAGE                       
         IF    (R2,GE,R5),BEGIN    IF PREVIOUS PAGE,,,                          
         L     R0,DATAPGNO(R3,R2)                                               
         SR    R2,PBR                                                           
         SR    R4,PBR                                                           
         SR    R5,PBR                                                           
         PGET  PAR,(R0)            GET PREVIOUS PAGE                            
         RPCHECK                                                                
         AR    R2,PBR                                                           
         AR    R4,PBR                                                           
         AR    R5,PBR                                                           
         LH    R14,RPXLAST         SET LAST INDEX LIMIT                         
         AR    R14,PAR                                                          
         LH    R15,RPKEYLN                                                      
         LR    R0,R2                                                            
         AH    R0,RPNTRYLN-RPAGE(PBR)                                           
         LR    R1,R15                                                           
         MVCL  R14,R0                                                           
         PMARK PAR                                                              
         END                                                                    
         END   , OF SETTING LINKS LOOP                                          
*                                                                               
         COMMENT                   FREE MASTER PAGE @PBR                        
         PMARK PBR                                                              
         PFREE PBR                                                              
         END   , END OF IF MASTER                                               
*                                                                               
         CLEAR R15                                                              
         PEND                                                                   
         DROP  PAR                                                              
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NFIXNUM -- Routine to update a line-number that has been                     
*    renumbered.  Line-numbers that are changed are marked so they              
*    do not get changed again during the renumber process.                      
*                                                                               
*    On entry:                                                                  
*      R0 - Old line-number                                                     
*      R1 - New line-number                                                     
*                                                                               
*    Note:  This routine is ONLY called by the lowest level                     
*      re-numbering routine in RECS (NNUMBER and NNUMFACT).                     
*                                                                               
NFIXNUM  PROC                                                                   
         IF    (R0,NE,R1),BEGIN    Line-number has changed...                   
*-                                                                              
*-       Check current line-number.                                             
*-                                                                              
         IF    ^CPACLNO.X'80',BEGIN  Check current lineno...                    
         IF    (CPACLNO,NE,R0),EXIT  No change, scram                           
         ST    R1,CPACLNO          Set new lineno                               
         SET   CPACLNO.X'80'       Mark it so it's not changed again            
         SET   CPVFREN                                                          
         END                                                                    
*-                                                                              
*-       Check working line-number.                                             
*-                                                                              
         IF    ^CPNUMLNO.X'80',BEGIN  Check number's lineno...                  
         IF    (CPNUMLNO,NE,R0),EXIT  No change, scram                          
         ST    R1,CPNUMLNO         Set new lineno                               
         SET   CPNUMLNO.X'80'      Mark it so it's not changed again            
         SET   CPVFREN                                                          
         END                                                                    
*-                                                                              
*-       PAGENUM expects R0=old lineno, R1=new lineno; same as us.              
*-                                                                              
         VCALL PAGENUM             Check line-numbers in page image             
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NFIXNCLR -- Routine to unmark the renumbered lines.  Lines                   
*    are marked as renumbered so they only get processed once                   
*    (see FIXNUM).  After the renumber is done then these marks                 
*    have to be cleared (by this routine).                                      
*                                                                               
*    Note:  This routine is ONLY called by the lowest level                     
*      re-numbering routine in RECS (NNUMBER and NNUMFACT).                     
*                                                                               
NFIXNCLR PROC                                                                   
         IF    CPVFREN,BEGIN       Lineno's have been renumbered...             
*-                                                                              
*-       Reset any marked line-numbers.                                         
*-                                                                              
         IF    CPACLNO.X'80',BEGIN  Marked or undefined lineno...               
         IF    (CPACLNO,NE,-1000),'CLEAR CPACLNO.X"80"'  Unmark it              
         END                                                                    
*                                                                               
         IF    CPNUMLNO.X'80',BEGIN  Marked or undefined lineno...              
         IF    (CPNUMLNO,NE,-1),'CLEAR CPNUMLNO.X"80"'  Unmark it               
         END                                                                    
*                                                                               
         VCALL PAGENCLR            Clear any marked lineno in page              
         END                                                                    
         PEND                                                                   
*                                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'RECORD GROUP RECOVERY / VALIDITY CHECK'                         
*box                                                                            
*                                                                               
*                                                                               
*   RGRCVY - RECORD GROUP RECOVERY                                              
*                                                                               
*   ON ENTRY:                                                                   
*     @R15 - DUMMY RECORD GROUP INFO BLOCK, (0 IF NONE)                         
*       R0 - ROOT PAGE NUMBER FOR RECORD GROUP                                  
*      @R1 - 4 CHARACTER TYPE NAME                                              
*            (EG. 'TEXT' 'EXEC',,,)                                             
*                                                                               
*   ON EXIT:                                                                    
*      R15 - CC=ZERO, RECORD GROUP RECOVERED,                                   
*               DUMMY RECORD GROUP INFO SET, IF REQUESTED                       
*            CC=NZ, RECORD GROUP NOT RECOVERED                                  
*               DUMMY RECORD GROUP INFO IS ZERO                                 
*                                                                               
*   THIS ROUTINE IN TURN CALLS:                                                 
*       PRCVYCHK - CHECK IF PAGE ALREADY RECOVERED                              
*       PRCVYSET - SET PAGE AS RECOVERED                                        
*                                                                               
*   WARNING !!!                                                                 
*       THIS ROUTINE USES STAND ALONE READS, CVEMBUFQ MUST POINT                
*       TO A UNUSED PCB (PAGE CONTROL BLOCK)!!  CALL ONLY DURING                
*       INIT !!  PAGES MUST NOT BE IN CORE !                                    
*                                                                               
*                                                                               
RGRCVY   XPROC                                                                  
         USING RPAGE,PAR                                                        
         USING RGROUP,R6                                                        
         LR    R6,R15                                                           
         LR    R3,R0                                                            
*                                                                               
         COMMENT                   CHECK RECORD GROUP                           
         LA    R2,=CL4'S...'                                                    
         ACALL RGCHECK                                                          
         BNZ   BADRCVY                                                          
*                                                                               
         COMMENT                   VALID GROUP, READ FIRST BLOCK                
         L     R15,CVEMBUFQ                                                     
         LR    R1,R3                                                            
         VCALL SAREAD                                                           
         BNZ   BADRCVY                                                          
         LR    PAR,R0                                                           
*                                                                               
         COMMENT                   TEST ALL PAGES                               
         L     R0,RPNUMB                                                        
         VCALL PRCVYCHK            CHECK FIRST PAGE                             
         BNZ   BADRCVY                                                          
         IF    RPMASTER,BEGIN      IF MASTER PAGE, CHECK DATA PAGES             
         LH    R2,RPKEYLN          KEY LENGTH                                   
         LH    R3,RPNTRYLN         ENTRY LENGTH                                 
         LH    R4,RPXSTART         FIRST THEN CURRENT ENTRY                     
         AR    R4,PAR                                                           
         LH    R5,RPXEND           LAST ENTRY                                   
         AR    R5,PAR                                                           
         WHILE (R4,LT,R5),BEGIN    LOOP THRU PAGES                              
         L     R0,DATAPGNO(R2,R4)                                               
         VCALL PRCVYCHK                                                         
         BNZ   BADRCVY                                                          
         AR    R4,R3                                                            
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   ALL PAGES TESTED, SET THEM ALL               
         L     R0,RPNUMB                                                        
         VCALL PRCVYSET            CHECK FIRST PAGE                             
         BNZ   BADRCVY                                                          
         IF    RPMASTER,BEGIN      IF MASTER PAGE, CHECK DATA PAGES             
         LH    R2,RPKEYLN          KEY LENGTH                                   
         LH    R3,RPNTRYLN         ENTRY LENGTH                                 
         LH    R4,RPXSTART         FIRST THEN CURRENT ENTRY                     
         AR    R4,PAR                                                           
         LH    R5,RPXEND           LAST ENTRY                                   
         AR    R5,PAR                                                           
         WHILE (R4,LT,R5),BEGIN    LOOP THRU PAGES                              
         L     R0,DATAPGNO(R2,R4)                                               
         VCALL PRCVYSET                                                         
         BNZ   BADRCVY                                                          
         AR    R4,R3                                                            
         END                                                                    
         END                                                                    
         CLEAR R15                                                              
*                                                                               
         B     RCVYDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BADRCVY  LABEL ,                                                                
         IF    (R6,NZ),BEGIN                                                    
         CLEAR RGROUP                                                           
         END                                                                    
         B     RCVYDONE                                                         
*                                                                               
RCVYDONE LABEL ,                                                                
         CLEAR PAR                 REQUIRED (WE DO NOT OWN CVEMBUFQ)            
         EXIT  RGRCVY                                                           
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  RGCHECK - RECORD GROUP VALIDITY CHECK                                        
*                                                                               
*  ON ENTRY:                                                                    
*     @R15 - DUMMY RECORD GROUP INFO BLOCK OR R15=0 IF NONE                     
*       R0 - ROOT PAGE NUMBER FOR RECORD GROUP                                  
*      @R1 - 4 CHARACTER TYPE NAME (EG. 'TEXT','EXEC',,,)                       
*      @R2 - 4 CHARACTER FLAG BYTE                                              
*            IF C'S...', USE STAND ALONE READ, DO NOT USE PGET                  
*                                                                               
*  ON EXIT:                                                                     
*      *** - RECORD GROUP INFO BLOCK SET UP FOR RECORD GROUP.                   
*            SET NUMBER AND SPLIT FACTOR ARE SET TO DEFAULTS.                   
*      R15 - CC=Z, PAGES ALL VALID                                              
*            CC=NZ, PAGES NOT VALID, (R15=ERR DETECTION ADDR)                   
*                                                                               
*  THIS ROUTINE CHECKS THE VALIDIY OF ALL PAGES IN THE                          
*  IN THE SPECIFIED RECORD GROUP.                                               
*                                                                               
*  WARNING: IF STAND ALONE READ SPECIFIED FOR PAGE READ, THEN                   
*           CVEMBUFQ MUST POINT TO A UNUSED PCB (PAGE CONTROL                   
*           BLOCK)!!  CALL ONLY DURING INIT !!  PAGES MUST NOT                  
*           BE IN CORE !                                                        
*                                                                               
*                                                                               
VCWA     RECORD BEGIN                                                           
VCROOT   DS    F                   ROOT PAGE NUMBER                             
VCRGROUP DS    A                   DUMMY RECORD GROUP INFO BLOCK ADDR           
VCTYPE   DS    CL4                 RECORD GROUP TYPE NAME                       
VCFLAGS  DS    4XL1                VALIDTY CHECK FLAGS                          
VCNAMELN DS    H                   RECORD GROUP NAME LENGTH                     
VCXFIRST DS    XL(MXKEYLN)         LIMIT FOR FIRST ENTRY                        
VCXLAST  DS    XL(MXKEYLN)         LIMIT FOR LAST ENTRY                         
VCBINFO  DS    XL(L'BSINFO)        BINARY INFO CHECK                            
VCTEMP   DS    8F                  TEMP REGISTER SAVE AREA                      
VCPAGE   EQU   *                   PAGED SIZED TEMP WORK AREA                   
*                                  AREA IS MANUALLY PIUSHED, POP'D              
         END                                                                    
*                                                                               
*                                                                               
RGCHECK  XPROC VCWA                                                             
         USING RPAGE,PAR                                                        
         ST    R0,VCROOT                                                        
         MVC   VCTYPE(4),0(R1)                                                  
         MVC   VCFLAGS(4),0(R2)                                                 
         ST    R15,VCRGROUP                                                     
*                                                                               
         COMMENT                   READ RECORD GROUP ROOT PAGE                  
         IF    (VCFLAGS,NE,C'S'),BEGIN                                          
         PCHK  (R0)                CHECK PAGE NUMBER                            
         XMARK R15                                                              
         BNZ   BADPAGE                                                          
         PGET  PAR,(R0)            GET PAGE INTO @PAR                           
         END                                                                    
         ELSE  BEGIN ,,            IF STAND ALONE READ REQUESTED,               
         L     R15,CVEMBUFQ        USE EMPTY BUFFER AS WORK AREA                
         LR    R1,R0                                                            
         VCALL SAREAD              STAND ALONE PAGE READ                        
         XMARK R15                                                              
         BNZ   BADPAGE                                                          
         LR    PAR,R0                                                           
         END                                                                    
*                                                                               
         MVC   VCNAMELN,RPNAMELN   Save RG name length (NIZ)                    
*                                                                               
         COMMENT                   IF ROOT PAGE, IS DATA PAGE                   
         IF    RPDATA,BEGIN        CHECK DATA PAGE                              
         L     R0,RPNUMB                                                        
         SR    R1,R1                                                            
         LA    R2,VCXFIRST                                                      
         LA    R3,MXKEYLN                                                       
         CLEAR R5                                                               
         MVCL  R2,R4                                                            
         LA    R2,VCXLAST                                                       
         LA    R3,MXKEYLN                                                       
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
         LA    R2,VCXFIRST                                                      
         LA    R3,VCXLAST                                                       
         LH    R4,RPNAMELN                                                      
         LA    R5,VCTYPE                                                        
         ACALL CHKDPAGE            VALIDITY CHECK DATA PAGE                     
         BNZ   BADPAGE                                                          
         END                                                                    
*                                                                               
         COMMENT                   IF ROOT PAGE IS MASTER PAGE,                 
         IF    RPMASTER,BEGIN         VALIDITY CHECK MASTER PAGE                
         COMMENT                                                                
         COMMENT                   CHECK HEADER FIELDS IN ORDER                 
         CLC   RPNAME(6),=C'RECS  '            (MORE OR LESS)                   
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         CLC   RPNAME2(6),=C'MASTER'                                            
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         CLC   RPUTYPE,VCTYPE                                                   
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         CLC   RPNUMB,VCROOT                                                    
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         CLC   RPLINK,=F'0'                                                     
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         IF    RPDATA,BEGIN                                                     
         XMARK R15                                                              
         B     BADPAGE                                                          
         END                                                                    
         LH    R1,RPNAMELN                                                      
         LA    R1,L'NDXSET(R1)                                                  
         CH    R1,RPKEYLN                                                       
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         LA    R1,L'DATAPGNO(R1)                                                
         CH    R1,RPNTRYLN                                                      
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         LA    R1,RPAREA                                                        
         SR    R1,PAR                                                           
         CH    R1,RPXSTART                                                      
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         AH    R1,RPNTRYLN                                                      
         CH    R1,RPXEND                                                        
         XMARK R15                                                              
         BNL   BADPAGE                                                          
         L     R1,=A(L'RPAGE)                                                   
         CH    R1,RPXEND                                                        
         XMARK R15                                                              
         BL    BADPAGE                                                          
         CLEAR R1                                                               
         CH    R1,RPXFIRST                                                      
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         CH    R1,RPXLAST                                                       
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         CH    R1,RPDSTART                                                      
         XMARK R15                                                              
         BNE   BADPAGE                                                          
         CH    R1,RPDEND                                                        
         XMARK R15                                                              
         BNE   BADPAGE                                                          
*                                                                               
         COMMENT                   CHECK INDEX ORDER                            
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LH    R0,RPXEND                                                        
         AR    R0,PAR                                                           
         LR    R2,R1                                                            
         AH    R1,RPNTRYLN                                                      
         WHILE (R1,LT,R0),BEGIN                                                 
         LH    R3,RPKEYLN                                                       
         LR    R4,R1                                                            
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         XMARK R15                                                              
         BNL   BADPAGE                                                          
         LR    R2,R1                                                            
         AH    R1,RPNTRYLN                                                      
         END                                                                    
*                                                                               
         COMMENT                   CHECK BSEARCH INFO                           
         LA    R0,VCBINFO          SET UP BINARY SEARCH INFO FOR                
         L     R1,=A(L'RPAREA)     MASTER PAGE                                  
         LH    R2,RPNTRYLN                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXEND                                                        
         SH    R4,RPXSTART                                                      
         ACALL BSINIT                                                           
         CLC   RPINFO(L'BSINFO),VCBINFO                                         
         XMARK R15                                                              
         BNE   BADPAGE                                                          
*                                                                               
         COMMENT                   NOW CHECK ALL DATA PAGES,,                   
         COMMENT                       POINTED TO BY MASTER INDEXES             
         A     R13,=A(L'RPAGE)     XPUSH TEMP PAGE                              
         LA    R2,VCPAGE           COPY MASTER PAGE TO STACK                    
         L     R3,=A(L'RPAGE)                                                   
         LR    R4,PAR                                                           
         LR    R5,R3                                                            
         MVCL  R2,R4                                                            
         LA    R6,VCPAGE           R6 - POINTS TO MASTER PAGE !!                
         DROP  PAR                                                              
         USING RPAGE,R6                                                         
         COMMENT                                                                
         LH    R4,RPXSTART         CHECK ALL DATA PAGES                         
         AR    R4,R6                                                            
         LH    R5,RPXEND                                                        
         AR    R5,R6                                                            
         LH    R3,RPKEYLN                                                       
         WHILE (R4,LT,R5),BEGIN                                                 
         STM   R3,R6,VCTEMP                                                     
         IF    (VCFLAGS,NE,C'S'),BEGIN                                          
         L     R0,DATAPGNO(R3,R4)                                               
         PCHK  (R0)                                                             
         XMARK R15                                                              
         BNZ   BADPAGE                                                          
         PGET  PAR,(R0)            GET DATA PAGE INTO @PAR                      
         END                                                                    
         ELSE  BEGIN ,,            STAND ALONE READ REQUESTED                   
         L     R15,CVEMBUFQ        USE EMPTY BUFFER AS WORK AREA                
         L     R1,DATAPGNO(R3,R4)  R1 - DATA PAGE NUMBER                        
         VCALL SAREAD              STAND ALONE READ DATA PAGE                   
         XMARK R15                                                              
         BNZ   BADPAGE                                                          
         LR    PAR,R0                                                           
         END                                                                    
*                                                                               
         COMMENT                   CHECK DATA PAGE                              
         L     R0,DATAPGNO(R3,R4)        PAGE NUMBER                            
         L     R1,RPNUMB-RPAGE(R6)       LINK TO MASTER                         
         LR    R2,R4                     FIRST ENTRY LIMIT                      
         LR    R3,R4                     LAST ENTRY LIMIT                       
         AH    R3,RPNTRYLN-RPAGE(R6)                                            
         IF    (R3,GE,R5),BEGIN                                                 
         LA    R3,MAXRECD                                                       
         END                                                                    
         LH    R4,RPNAMELN-RPAGE(R6)     NAME LENGTH                            
         LA    R5,VCTYPE                 USER TYPE FIELD                        
         ACALL CHKDPAGE            CHECK DATA PAGE VALIDITY                     
         BNZ   BADPAGE                                                          
*                                                                               
         LM    R3,R6,VCTEMP                                                     
         AH    R4,RPNTRYLN-RPAGE(R6)                                            
         END   ,,                  END OF CHECK DATA PAGES LOOP                 
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
         END   ,,                  END OF IF MASTER PAGE                        
         DROP  R6                                                               
         USING RPAGE,PAR                                                        
*                                                                               
         COMMENT                   SET UP RECORD GROUP INFO BLOCK               
         USING RGROUP,R6                                                        
         L     R6,VCRGROUP                                                      
         IF    (R6,NZ),BEGIN                                                    
         CLEAR RGROUP                                                           
         MVC   RECGRP,VCROOT                                                    
         MVC   RECSET,=F'1'                                                     
         MVC   RECNLEN,VCNAMELN                                                 
         MVI   RECSPLT,128-16                                                   
         MVC   RECTYPE,RPUTYPE                                                  
         END                                                                    
         DROP  R6                                                               
*                                                                               
         CLEAR R15                                                              
*                                                                               
         B     VCHKDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BADPAGE  LABEL ,                                                                
         COMMENT                   R15 - ERROR DETECTION ADDRESS                
         B     VCHKDONE                                                         
*                                                                               
VCHKDONE LABEL ,                                                                
         COMMENT                   IF STAND ALONE READ, ,,                      
         IF    (VCFLAGS,EQ,C'S'),BEGIN    WE CLEAR PAGE POINTER                 
         CLEAR PAR                 REQUIRED (WE DO NOT OWN CVEMBUFQ)            
         END                                                                    
         COMMENT                   R15 - ZERO OR ERR DETECTION ADDR             
         PEND                                                                   
         DROP  PAR                                                              
         SPACE 3                                                                
MAXRECD  DC    (MXKEYLN)X'FF'      MAXIMUM RECORD KEY                           
         DS    0F                  ALIGNMENT                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CHKDPAGE - VALIDITY CHECK DATA PAGE.                                         
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - PAGE NUMBER                                                        
*       R1 - MASTER PAGE LINK                                                   
*      @R2 - LIMIT OF FIRST INDEX ON PAGE                                       
*      @R3 - LIMIT OF LAST INDEX ON PAGE                                        
*       R4 - RECORD NAME LENGTH                                                 
*      @R5 - 4 CHARACTER TYPE NAME                                              
*      PAR - PAGE TO CHECK                                                      
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=Z, PAGE VALID                                                   
*            CC=NZ, PAGE INVALID, (R15 = ERROR DETECTION ADDR)                  
*                                                                               
*                                                                               
CKDWA    RECORD BEGIN                                                           
CKDFIRST DS    A                                                                
CKDLAST  DS    A                                                                
CKDNAMLN DS    A                                                                
CKDTYPE  DS    F                                                                
CKDBINFO DS    XL(L'BSINFO)                                                     
CKDTEMP  DS    0H                  PAGED SIZE TEMP AREA                         
*                                                                               
         END                                                                    
*                                                                               
*                                                                               
CHKDPAGE PROC  CKDWA                                                            
         A     R13,=A(L'RPAGE)     XPUSH TEMP AREA                              
         USING RPAGE,PAR                                                        
         ST    R2,CKDFIRST         SAVE INPUT PARMS                             
         ST    R3,CKDLAST                                                       
         ST    R4,CKDNAMLN                                                      
         MVC   CKDTYPE(4),0(R5)                                                 
*                                                                               
         COMMENT                   CHECK HEADER FIELDS,                         
         COMMENT                     IN APPOX. ORDER OF APPEARANCE              
         IF    ^RPDATA,BEGIN                                                    
         XMARK R15                                                              
         B     BADDPAGE                                                         
         END                                                                    
         IF    RPMASTER,BEGIN                                                   
         XMARK R15                                                              
         B     BADDPAGE                                                         
         END                                                                    
         C     R0,RPNUMB                                                        
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         C     R1,RPLINK                                                        
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         CLC   RPNAME(6),=CL6'RECS  '                                           
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         CLC   RPUTYPE(4),CKDTYPE                                               
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         CLC   RPNAME2(6),=CL6'DATA  '                                          
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         L     R1,CKDNAMLN                                                      
         CH    R1,RPNAMELN                                                      
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         LA    R1,L'NDXSET(R1)                                                  
         CH    R1,RPKEYLN                                                       
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         LA    R1,L'DATAPTR+L'DATALN(R1)                                        
         CH    R1,RPNTRYLN                                                      
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         LA    R1,RPAREA                                                        
         SR    R1,PAR                                                           
         CH    R1,RPXFIRST                                                      
         BNE   BADDPAGE                                                         
         AH    R1,RPKEYLN                                                       
         CH    R1,RPXLAST                                                       
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         AH    R1,RPKEYLN                                                       
         CH    R1,RPXSTART                                                      
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         AH    R1,RPNTRYLN                                                      
         CH    R1,RPXEND                                                        
         XMARK R15                                                              
         BH    BADDPAGE                                                         
         L     R1,=A(L'RPAGE)                                                   
         CH    R1,RPXEND                                                        
         XMARK R15                                                              
         BL    BADDPAGE                                                         
         CH    R1,RPDSTART                                                      
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         CH    R1,RPDEND                                                        
         XMARK R15                                                              
         BL    BADDPAGE                                                         
         LH    R1,RPXEND                                                        
         CH    R1,RPDEND                                                        
         XMARK R15                                                              
         BNL   BADDPAGE                                                         
         LH    R2,RPXFIRST         CHECK FIRST ENTRY LIMIT                      
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         L     R4,CKDFIRST                                                      
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         LH    R2,RPXLAST          CHECK SECOND ENTRY LIMIT                     
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         L     R4,CKDLAST                                                       
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         LH    R2,RPXSTART         CHECK FISRT ENTRY                            
         AR    R2,PAR                                                           
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXFIRST                                                      
         AR    R4,PAR                                                           
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         XMARK R15                                                              
         BL    BADDPAGE                                                         
         LH    R2,RPXEND                                                        
         AR    R2,PAR                                                           
         SH    R2,RPNTRYLN                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXLAST                                                       
         AR    R4,PAR                                                           
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         XMARK R15                                                              
         BNL   BADDPAGE                                                         
         LH    R1,RPXSTART         CHECK THAT INDEXS ARE SORTED                 
         AR    R1,PAR                                                           
         LH    R0,RPXEND                                                        
         AR    R0,PAR                                                           
         LR    R2,R1                                                            
         AH    R1,RPNTRYLN                                                      
         WHILE (R1,LT,R0),BEGIN                                                 
         LH    R3,RPNTRYLN                                                      
         LR    R4,R1                                                            
         LR    R5,R3                                                            
         CLCL  R2,R4                                                            
         XMARK R15                                                              
         BNL   BADDPAGE                                                         
         LR    R2,R1                                                            
         AH    R1,RPNTRYLN                                                      
         END                                                                    
         LH    R1,RPXSTART         CHECK INDEX DATA POINTERS                    
         AR    R1,PAR                                                           
         LH    R0,RPXEND                                                        
         AR    R0,PAR                                                           
         LH    R3,RPKEYLN                                                       
         WHILE (R1,LT,R0),BEGIN                                                 
         LH    R2,DATAPTR(R3,R1)   CHECK POINTER LIMITS                         
         LH    R4,DATALN(R3,R1)                                                 
         COMMENT ,                 (CHECK ONLY IF NON-ZERO RECORD)              
         IF    ((R2,NZ),OR,(R4,NZ)),BEGIN                                       
         CH    R2,RPDEND                                                        
         XMARK R15                                                              
         BL    BADDPAGE                                                         
         CH    R2,RPDSTART                                                      
         XMARK R15                                                              
         BH    BADDPAGE                                                         
         LH    R4,RPDSTART         CHECK POINTER ROUNDING                       
         SR    R4,R2                                                            
         LR    R2,R4                                                            
         SRL   R4,4                                                             
         SLL   R4,4                                                             
         CR    R2,R4                                                            
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         LH    R2,DATAPTR(R3,R1)                                                
         LH    R4,DATALN(R3,R1)    CHECK DATALEN LIMITS                         
         C     R4,=A(MXDATALN)                                                  
         XMARK R15                                                              
         BH    BADDPAGE                                                         
         AR    R2,R4                                                            
         CH    R2,RPDSTART                                                      
         XMARK R15                                                              
         BH    BADDPAGE                                                         
         END   ,                                                                
         AH    R1,RPNTRYLN                                                      
         END                                                                    
         COMMENT                   CHECK FOR OVERLAPPPING RECORD DATA           
         LA    R2,CKDTEMP                                                       
         L     R3,=A(L'RPAGE)                                                   
         SR    R5,R5                                                            
         MVCL  R2,R4                                                            
         LA    R6,CKDTEMP          R6 - ZEROED PAGE SIZED AREA                  
         LH    R1,RPXSTART                                                      
         AR    R1,PAR                                                           
         LH    R0,RPXEND                                                        
         AR    R0,PAR                                                           
         WHILE (R1,LT,R0),BEGIN    LOOP CHECKING/MARKING DATA AREAS             
         LH    R3,RPKEYLN                                                       
         LH    R2,DATAPTR(R3,R1)                                                
         AR    R2,R6                                                            
         LH    R3,DATALN(R3,R1)                                                 
         SR    R5,R5                                                            
         CLCL  R2,R4               CHECK DATA AREA                              
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         LH    R3,RPKEYLN                                                       
         LH    R2,DATAPTR(R3,R1)                                                
         AR    R2,R6               MARK DATA AREA                               
         LH    R3,DATALN(R3,R1)                                                 
         L     R5,=X'FF000000'                                                  
         MVCL  R2,R4                                                            
         AH    R1,RPNTRYLN                                                      
         END                                                                    
         COMMENT                   CHECK BSEARCH INFO                           
         LA    R0,CKDBINFO                                                      
         L     R1,=A(L'RPAREA)                                                  
         LH    R2,RPNTRYLN                                                      
         LH    R3,RPKEYLN                                                       
         LH    R4,RPXEND                                                        
         SH    R4,RPXSTART                                                      
         ACALL BSINIT                                                           
         CLC   RPINFO(L'BSINFO),CKDBINFO                                        
         XMARK R15                                                              
         BNE   BADDPAGE                                                         
         CLEAR R15                 ALL CHECKED, ALL OK !                        
*                                                                               
         B     CKDDONE                                                          
*                                                                               
*  EXITS                                                                        
*                                                                               
BADDPAGE LABEL ,                                                                
         COMMENT                   R15 - ERROR DETECTION ADDR                   
         B     CKDDONE                                                          
*                                                                               
CKDDONE  LABEL ,                                                                
         COMMENT                   R15 - ZERO OR ERR DETECTION ADDR             
         S     R13,=A(L'RPAGE)     XPOP TEMP AREA                               
         PEND                                                                   
         DROP  PAR                                                              
         EJECT                                                                  
*                                                                               
**                                                                              
**  CHECK FOR VALID EDIT FORMAT                                                 
**                                                                              
**  ON ENTRY                                                                    
**       R0 - LENGTH OF DATA                                                    
**       R1 - LOCATION OF DATE   (LINE NO. NOT INCLUDED)                        
**                                                                              
**  ON EXIT:                                                                    
**      R15 - CC=ZERO, VALID EDIT FORMAT                                        
**            CC=NZ, INVALID EDIT FORMAT                                        
**                                                                              
*$ MOVE THIS INTO ACT SOON !!!!                                                 
*$ MOVE THIS INTO ACT SOON !!!!                                                 
*$ MOVE THIS INTO ACT SOON !!!!                                                 
*                                                                               
EDITCHK  XPROC                                                                  
*                                                                               
         IF    (R0,GE,256),BADEDIT                                              
         LC    R2,0(R1)            R2 - EDIT LINE LENGTH -1                     
         DECR  R0                                                               
         IF    (R2,NE,R0),BADEDIT                                               
         LA    R2,1(R1)            R2 - LINE INDEX                              
         LR    R3,R0               R3 - END OF LINE                             
         LA    R3,1(R3,R0)                                                      
         SR    R4,R4               R4 - COUNT BYTE                              
         SR    R5,R5               R5 - UNPRESSED LINE LENGTH                   
         WHILE (R2,LT,R3),BEGIN                                                 
         IC    R4,0(R2)                                                         
         SRL   R4,4                # OF BLANKS                                  
         AR    R5,R4                                                            
         IC    R4,0(R2)                                                         
         SLL   R4,28                                                            
         SRL   R4,28               # OF CHARS                                   
         IF    (R4,Z),BADEDIT                                                   
         AR    R5,R4                                                            
         AR    R2,R4                                                            
         END                                                                    
         IF    (R2,NE,R3),BADEDIT                                               
         IF    (R4,GT,&LINESZ),BADEDIT                                          
         CLEAR R15                                                              
*                                                                               
         B     EDITDONE                                                         
*                                                                               
*  EXITS                                                                        
*                                                                               
BADEDIT  LABEL ,                                                                
         LA    R15,4                                                            
         B     EDITDONE                                                         
*                                                                               
EDITDONE LABEL ,                                                                
         PEND                                                                   
*                                                                               
         EJECT                                                                  
         QLTORG                                                                 
*                                                                               
         END   .                                                                
