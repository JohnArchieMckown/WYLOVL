SPELL    TITLE 'WYLBUR''s Spelling Commands'                                    
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class i - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
WYLSPELL CSECT                                                                  
         SPACE 2                                                                
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
         SYSDEFN ,                 Define installation params                   
*                                                                               
SPEL     IDENT 2025                11:49:32 01/25/02  (SLP)                     
*                                                                               
         PUSH  DSECTS                                                           
         EJECT                                                                  
         COPY  RTNCODES                                                         
*                                                                               
         COPY  SYSDSNS                                                          
*                                                                               
         COPY  CONTROL             Copy CV/CP                                   
         TITLE 'DSECTS'                                                         
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
*                                                                               
         POP   DSECTS                                                           
         TITLE 'WYLBUR''S Spelling Commands'                                    
*                                                                               
* LOCAL MACROS                                                                  
*                                                                               
         MACRO                                                                  
&L       COMMENT                                                                
         MEND                                                                   
*-                                                                              
*-       TOPWORD, LIST WORD TO PUT AT HEAD OF DICTIONARY INDEX                  
*-                                                                              
         MACRO                                                                  
&L       TOPWD &WORD                                                            
&L       DC    CL5'&WORD'                                                       
         MEND                                                                   
*-                                                                              
*-        LPCHECK MACRO, CHECK TO SEE IF PAGE OBTAINED IS LEARN PAGE            
*-                                                                              
         MACRO                                                                  
&L       LPCHECK                                                                
&L       CLC   LPHDR(8),=CL8'LEARN   '  IS LEARN HEADER CORRECT                 
         BE    LPCK&SYSNDX              YES, CONTINUE                           
         DC    H'0'                     NO, BOMB RIGHT HERE                     
LPCK&SYSNDX DS 0H                                                               
         MEND                                                                   
         TITLE 'SET WDICTIONARY Command'                                        
*box                                                                            
*                                                                               
*                                                                               
*  SETWDICT -- SET WDICTIONARY Command.  (Priv'd.)                              
*                                                                               
*                                                                               
*   WE MAKE A DICTIONARY                                                        
*                                                                               
*                                                                               
*                                                                               
*  Make a compressed dictionary and a index into it.                            
*                                                                               
*  We read in an alphabetized list of words and create an in core               
*  dictionary.  The dictionary is compressed using a simple scheeme.            
*  The words in the input file are in alphabetical order.  The                  
*  letters at the start of each word that are in common with the                
*  previous word are changed to blanks.  These blanks are then                  
*  compressed using the wylbur edit format compression scheem.                  
*  Additionally, each word is preceeded by a blank that acts as                 
*  a word separator.  The leading blank is compressed as are the                
*  other blanks in wylbur edit format fashion.  See example  !!!                
*                                                                               
*  Example:                                                                     
*                                                                               
*     list:           compressed list:       sample output:                     
*                                                                               
*       bat              bat                   x'13',c'bat'                     
*       batting             ting               x'44',c'ting'                    
*       battle               le                x'42',c'le'                      
*       butler            utler                x'25',c'utler'                   
*                                                                               
*  Can you dig it !                                                             
*                                                                               
*                                                                               
*  In addition to the dictionary, a 8192 entry index into the                   
*  dictionary is built.  The top (most used) two hundred words                  
*  are forced to be at the start of index entries.  this is a                   
*  random search optimization.  It is estimated that the 100 top                
*  words are used about 50% of the time. hot city.                              
*                                                                               
*  Finally, we getmain enough core for a 120,000 word dictionary.               
*  (appox 4 bytes per word entry). We freemain whatever core is                 
*  left over.  We set a use count byte on the dictionaries, so that             
*  we may build and switch while wylbur is running.                             
*                                                                               
****                                                                            
         SPACE 5                                                                
*-                                                                              
*-       DICTIONARY DSECT AND COMMON SPELL EQU'S                                
*-                                                                              
DICTNRY  RECORD BEGIN ,                                                         
DICTHDR  DS    0F                 DICTIONARY HEADER                             
DICTADDR DS    F                  DICT HEADR: ADDRESS OF DICT MEMORY            
DICTLEN  DS    F                  DICT HEADR: LENGTH OF DICT MEMORY             
DICTEND  DS    F                  DICT HEADR: END OF DICT ENTRIES               
DICTUCNT DS    H                  DICT HEADR: USE COUNT HALFWORD                
DICTFLGS FLAG  ,,                 DICT HEADR: DICTIONARY FLAGS                  
         FLAG  DICTOLD                        OLD COPY OF DICTIONARY            
DICTXTRA FLAG  ,                  DICT HEADR: EXTRA FLAGS                       
DICTWDCT DS    F                  DICT HEADR: COUNT OF WORDS IN DICT            
DICTRSVD DS    3F                 DICT HEADR: 12 BYTES, NOT USED                
*                                                                               
DICTNDX  EQU   *                  DICTIONARY INDEX: 8192*8 ENTRIES              
*                                                                               
HDRSIZE  EQU   32                 32     BYTE DICTIONARY HEADER                 
NDXSIZE  EQU   8192*8             8192   ENTRY DICTIONARY INDEX                 
DICTSTRT EQU   (8192*8)+20        500+K, DICTIONARY                             
DICTSIZE EQU   524288+(8192*8)    512K - AMOUNT OF MEM TO GETMAIN               
*                                        FOR DICTIONARY AND INDEX               
*                                                                               
WDTOTAL  EQU   120000             ASSUME 120,000 WORDS IN DICTNRY               
NDXFACTR EQU   (WDTOTAL/8192)-4   AVERAGE NUMBER OF WORDS PER INDEX             
*$ NDXFACTR EQU (WDTOTAL/(8192-TOP#/2))-5                                       
*                                                                               
NTRY     EQU   0                  GENERIC ENTRY                                 
NDX      EQU   0                  INDEX ENTRY: 1ST 5 LETTERS OF WORD            
NLINK    EQU   4                  INDEX ENTRY: DICTIONARY POINTER               
NLEN     EQU   8                  INDEX ENTRY: LENGTH OF INDEX ENTRY            
         COMMENT ***              5TH LETTER OF NDX IS HOB OF NLINK             
         END                                                                    
*-                                                                              
*-       SET WDICTIONARY - Work Area                                            
*-                                                                              
DTWA     RECORD BEGIN                                                           
DTMEMADR DS    F                  Start of dictionary memory                    
DTMEMLEN DS    F                  Length of dictionary memory                   
DTHDR    DS    F                  Addr of dict header (32 bytes)                
DTNDXADR DS    F                  Addr of dict index (8k bytes)                 
DTNDXPTR DS    F                  Addr of index entry                           
DTNDXEND DS    F                  Addr of end of index list                     
DTPTR    DS    F                  Pointer into dictionary                       
DTEND    DS    F                  Addr of end of dict (=mem end)                
*                                                                               
DTWORDLN DS    F                  Word length                                   
DTWORD   DS    CL64  *' '         Word to add to dictnry                        
DTPREV   DS    CL64  *' '         Previous word added to dictionary             
DTBLANKS DS    CL64  *' '         Some blanks                                   
*                                                                               
DTWORDCT DS    F                  Words in dictnry                              
DTTOPPTR DS    F                  Pointer in to top (most used) words           
*                                                                               
DTNEXTDX DS    F                  Number of next index                          
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SETWDICT -- SET WDICTIONARY Command.  (Priv'd.)                              
*                                                                               
*    Note:  This routine is also called after a successful save                 
*           of "WORDS ACCOUNT GS.WYL".                                          
*                                                                               
SETWDICT XPROC DTWA                                                             
         CLEAR DTWA                                                             
         LA    R6,DTWA                                                          
         ST    R6,CPCWA                                                         
         USING DTWA,R6                                                          
         L     R1,=A(BLANKS)                                                    
         MVC   DTBLANKS(64),0(R1)                                               
         MVC   DTWORD(64),0(R1)                                                 
         MVC   DTPREV(64),0(R1)                                                 
         MVC   DTTOPPTR(4),=A(TOPHITS)                                          
*                                                                               
         IF    (CPCMNM,NE,'W'),BEGIN  entered after SAVE...                     
         TCCR  ,                                                                
         TSEG  'Type SET WDICT to reload spelling dictionary.'                  
         B     CVNEXT                                                           
*        COMMENT                   we do not reload, that is uug                
*        VCALL INITCMD             Initialize                                   
         END                                                                    
*                                                                               
         IF    ^CPSFSPR,CVNVALID   Sorry pal                                    
*                                                                               
         LA    R0,SDSNWORD                                                      
         VCALL EXIT0               LOCAL exit - Format system dsname            
         SCINIT (R1),(R0)                                                       
         VCALL DOFNAME                                                          
         VCALL FNAMOPTS                                                         
         VCALL FNAMEFIN                                                         
*                                                                               
         SET   CPLFLG1.CPFALL                                                   
         SET   CPFRDEXT                                                         
         VCALL NDETRNG                                                          
*                                                                               
         L     R1,=AL4(DICTSIZE)  Getmain 512k for dictionary                   
         ST    R1,DTMEMLEN                                                      
         LR    R0,R1              R0 - MEMORY SIZE                              
         GETMAIN R,LV=(0)                                                       
         ST    R1,DTMEMADR                                                      
*$       GETMAIN TYPE=R DOES NOT ALLOW FOR CONDITIONAL,,, NOT SO HOT            
*$       ABORT 'Not enough memory to create spell dictionary.'                  
*                                                                               
*                                 Set dictionary addresses                      
         L     R1,DTMEMADR             r1 - start of dictionary                 
         ST    R1,DTHDR                32 bytes dictionary header               
         XC    0(HDRSIZE,R1),0(R1)        zero header                           
         LA    R1,HDRSIZE(R1)          8k dictionary index                      
         ST    R1,DTNDXADR                                                      
         ST    R1,DTNDXPTR                                                      
         A     R1,=AL4(NDXSIZE)        500k dictionary                          
         ST    R1,DTNDXEND                                                      
         ST    R1,DTPTR                                                         
         L     R1,DTMEMADR                                                      
         A     R1,DTMEMLEN             r1 - end of memory                       
         ST    R1,DTEND                   end of dictionary                     
*                                                                               
*                                 Set up first index pointer                    
         L     R1,DTNDXPTR                                                      
         L     R2,DTPTR                                                         
         MVC   NDX(4,R1),=F'0'    First index is zeros,                         
         ST    R2,NLINK(R1)       First link is start of dictnry                
         LA    R1,NLEN(R1)        Bump index pointer                            
         ST    R1,DTNDXPTR                                                      
         L     R1,DTWORDCT        Set word number for next index                
         A     R1,=AL4(NDXFACTR)                                                
         ST    R1,DTNEXTDX                                                      
         SPACE                                                                  
**                                                                              
**       Open file and set up to input dictionary file                          
**                                                                              
         VCALL EXTOPEN             Open the file                                
         IF    (R15,NZ),CVNEXT                                                  
         TCCR                                                                   
*                                                                               
         RDRNG DICTLOOP,(DESRTRN+LXCATRTN+UNPRST)                               
*                                                                               
         VCALL EXTCLOSE            All done                                     
         SPACE                                                                  
**                                                                              
**  Now do post-processing.                                                     
**                                                                              
**  Dictionary entries complete, we set up dictionary header,                   
**  fix up extra indexes, free extra memory, and mark old dictionary            
**  as old.                                                                     
**                                                                              
*                                                                               
*                                 IF ANY PROBLEMS, ABORT COMMAND                
         CLC   DTWORDCT(4),=F'0'  IF NO WORDS,,,                                
         COMMENT HEY              ARE THERE ANY OTHERS ???                      
         BE    SETWERR                                                          
*                                 MARK END OF DICTIONARY                        
*                                                                               
         L     R1,DTPTR           R1 - PLACE FOR NEXT DICTNRY WORD              
         LA    R1,16(R1)                                                        
         IF    (R1,GE,DTEND),BEGIN  IF NO ROOM FOR FINAL ENTRIES                
         TSEG  'Spelling dictionary overflow.',,CR                              
         B     SETWERR                                                          
         END                                                                    
         L     R1,DTPTR           R1 - PLACE FOR NEXT DICTNRY WORD              
         MVC   0(8,R1),=X'17FFFFFFFFFFFFFF'  MARK END OF DICTIONARY             
         MVC   8(8,R1),=X'17FFFFFFFFFFFFFF'                                     
         LA    R1,16(R1)                                                        
         ST    R1,DTPTR                                                         
*                                 SET UP DICTIONARY HEADER                      
*                                                                               
         L     R1,DTMEMADR        R1 - START OF DICTIONARY MEMORY               
         USING DICTNRY,R1                                                       
         L     R2,DTPTR           R2 - END OF DICTIONARY MEMORY                 
         LR    R3,R2              R3 - LENGTH OF DICTIONARY MEMORY              
         SR    R3,R1                   ROUNDED OFF TO DOUBLE WORDS              
         LA    R3,7(R3)                                                         
         SRL   R3,3                                                             
         SLL   R3,3                                                             
         ST    R1,DICTADDR        SAVE START OF DICTIONAY MEMORY                
         ST    R2,DICTEND         SAVE END OF DICTIONARY ENTRIES                
         ST    R3,DICTLEN         SAVE LENGTH OF DICTIONARY MEMORY              
         SR    R0,R0              ZERO DICTIONARY USER COUNT AND                
         STH   R0,DICTUCNT          AND FLAGS                                   
         STH   R0,DICTFLGS                                                      
         MVC   DICTWDCT(4),DTWORDCT     SAVE TOTAL WORD COUNT                   
*                                                                               
*                                 FIX UP REMAININD DICTIONARY INDEXES           
         L     R2,DTNDXPTR        R2 - REMAINING INDEXES                        
         L     R3,DTNDXEND        R3 - END OF REMINAING INDEXES                 
         LR    R4,R2              R4 - LAST INDEX SET                           
         S     R4,=F'8'                                                         
         WHILE (R2,LT,R3),BEGIN   RIPPLE MOVE LAST INDEX TO ALL                 
         MVC   NDX(8,R2),NDX(R4)     REMAINING INDEXES                          
         LA    R2,8(R2)                                                         
         END                                                                    
*                                                                               
*                                 FREE MEMORY NOT NEEDED,,,                     
         L     R2,DICTLEN         R2 - LENGTH OF DICTIONARY MEMORY              
         LA    R3,0(R2,R1)        R3 - START OF EXTRA MEMORY                    
         L     R4,=AL4(DICTSIZE)  R4 - LENGTH OF EXTRA MEMORY                   
         SR    R4,R2                                                            
         DROP  R1                                                               
         LR    R1,R3              R1,R0 - ADDR, LEN OF EXTRA MEMORY             
         LR    R0,R4                                                            
         MVC   0(4,R1),=C'FREE'                                                 
         ST    R0,4(R1)                                                         
         FREEMAIN R,LV=(0),A=(1)                                                
*                                                                               
*                                 MARK OLD DICTIONARY AS OLD                    
         L     R1,CVDICPTR        GET OLD DICTIONARY ADDRESS                    
         IF    (R1,NE,0),BEGIN    IF OLD DICTIONARY, WE DO IT TO IT             
         USING DICTNRY,R1                                                       
         SET   DICTOLD            MARK DICTIONARY AS OLD                        
         LH    R0,DICTUCNT        GET USER COUNT FOR OLD DICTNRY                
         IF    (R0,EQ,0),BEGIN    IF ZERO, WE FREE UP OLD DICTNRY               
         L     R0,DICTLEN            R1,R0 - DICTNRY MEMORY ADDR, LEN           
         DROP  R1                                                               
         MVC   0(4,R1),=C'FREE'                                                 
         ST    R0,4(R1)                                                         
         FREEMAIN R,LV=(0),A=(1)                                                
         END                                                                    
         END                                                                    
         L     R1,DTMEMADR        R1 - NEW DICTIONARY MEMORY ADDRESS            
         ST    R1,CVDICPTR             SAVE NEW DICTIONARY POINTER              
         B     SETWEXIT           EXIT                                          
         SPACE 2                                                                
*        COMMAND BOMBED, RETURN MEMORY AND EXIT                                 
*                                                                               
SETWERR  LABEL ,                                                                
         L     R1,DTMEMADR        R1 - LOC, LEN OF MEMORY                       
         L     R0,DTMEMLEN                                                      
         MVC   0(4,R1),=C'FREE'                                                 
         ST    R0,4(R1)                                                         
         FREEMAIN R,LV=(0),A=(1) ,                                              
         ABORT 'Dictionary not loaded.'                                         
         SPACE 2                                                                
*-                                                                              
*-       EXIT SET WDICTIONARY                                                   
*-                                                                              
SETWEXIT LABEL ,                  SET WDICTIONARY COMMAND PROCESSED             
         B     CVNEXT             WE EXIT                                       
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DICTLOOP -- Co-routine to process lines from the WORDS file.                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - line loc, len                                                    
*                                                                               
DICTLOOP PROC  ,                                                                
         L     R6,CPCWA                                                         
         USING DTWA,R6                                                          
*                                                                               
         ACALL SCANTOKN           SCAN FOR NEXT DICTNRY TOKEN (WORD)            
         ACALL CHKTOKEN           CHECK TOKEN (WORD) FOR VALIDITY               
         IF    (R15,Z),BEGIN      IF TOKEN OK ,,,                               
         ACALL ADDNDX             CREATE INDEX IF NEEDED                        
         ACALL ADDTOKEN           ADD TOKEN (WORD) TO DICTIONARY                
         L     R1,DTWORDCT                                                      
         LA    R1,1(R1)           BUMP WORD COUNT                               
         ST    R1,DTWORDCT                                                      
         END                                                                    
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SCAN FIRST WORD ON LINE                                                      
*                                                                               
*   R1,R0 - line loc, len                                                       
*                                                                               
*   ON EXIT, DTWORD CONTAINS THIS WORD,, DTPREV CONTAINS                        
*       FORMER WORD.                                                            
*                                                                               
*   NOTE: WYLBUR SCANNER MAY NOT BE USED AS WE MUST BE ABLE TO                  
*         SCAN WEIRD PUCTUATION WITHIN WORDS, (E.G. BOB'S)                      
*                                                                               
*                                                                               
SCANTOKN PROC  ,                  SCAN WORD FROM LINE                           
*$ ADD LRTRIM CALL TO PRUNE OFF BLANKS !!!                                      
         MVC   DTPREV(64),DTWORD                                                
         MVC   DTWORD(64),DTBLANKS                                              
         LR    R2,R1              R2,R3 - ADDR, END OF INPUT LINE               
         LR    R3,R0                                                            
         CEIL  R3,64                                                            
         MOVE  R3,DTWORD,@R2      MOVE WORD INTO DTWORD                         
         ST    R0,DTWORDLN                                                      
         L     R1,=AL4(LOWERTAB)                                                
         TR    DTWORD(64),0(R1)   CHANGE WORD TO LOWER CASE                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CHECK FOR VALID DICTIONARY INPUT                                             
*                                                                               
*  R15 - RETURN CODE,, 0 IS OK, NZ - IS NON FATAL ERROR (IGNORE)                
*                      ALL FATAL ERRORS, PURGE DICTIONARY                       
*                                                                               
*                                                                               
*   WORDS MUST BE ,,,                                                           
*       1. ALPHABETIZED                                                         
*       2. ALL WORDS MUST START IN COLUMN 1                                     
*       3. A ';' IN COLUMN 1, IS ACCEPTED AS A COMMENT                          
*       4. ONLY ONE WORD IS ALLOWED ON A LINE                                   
*       5. ALL WORDS CONVERTED TO LOWER CASE                                    
*       6. LENGTH MAY NOT BE OVER 64 CHARACTERS                                 
*       7. ALL PUCTUATION IS TREATED AS PART OF WORD                            
*       8. WORD MUST BE CORRECTLY SPELLED                                       
*                                                                               
*  NOTE: WE CHECK FOR ALL BUT NUMBER 8, SO GET IT RIGHT GUYS.                   
*                                                                               
*                                                                               
CHKTOKEN PROC  ,     ,,           CHECK DICTIONARY INPUT                        
         SR    R15,R15            R15 - RETURN CODE                             
         LTR   R0,R0              IF NULL WORD, WE IGNORE                       
         BE    IGNORE                                                           
         CLI   0(R1),C';'         IF ';'1, THEN COMMENT, WE IGNORE              
         BE    IGNORE                                                           
         CLI   0(R1),C' '         WORD MUST START IN COL 1.                     
         BE    BLANKERR                                                         
         IF    (R0,GT,64),LENERR                                                
         CLC   DTPREV(64),DTWORD  IF EQUAL, IGONRE                              
         BE    IGNORE                                                           
         CLC   DTPREV(64),DTWORD  IF NOT ALPHABETIZED, ERROR                    
         BNL   ALPHAERR                                                         
         LR    R2,R1              R2,R3 - ADDR, END OF INPUT LINE               
         LR    R3,R0                                                            
         AR    R3,R2                                                            
         SR    R4,R4              R4 - BLANK COUNT                              
         WHILE (R2,LT,R3),BEGIN                                                 
         IF    (@R2,EQ,' '),' LA R4,1'  MULTIPLE WORDS NOT ALLOWED              
         IF    (@R2,EQ,','),' LA R4,1'  ON LINE                                 
         IF    (@R2,EQ,';'),' LA R4,1'                                          
         LA    R2,1(R2)                                                         
         END                                                                    
         IF    (R4,GT,0),MULTERR                                                
*                                                                               
         CLEAR R15                                                              
         B     CHKEXIT                                                          
*                                                                               
*  ERROR EXITS,,,   ALL ARE FATAL EXCEPT FOR IGNORED LINES                      
*                                                                               
IGNORE   LABEL ,                                                                
         MVC   DTWORD(64),DTPREV  RESTORE WORD FROM PREVIOUS WORD               
         LA    R15,4                                                            
         B     CHKEXIT                                                          
*                                                                               
BLANKERR LABEL ,                                                                
   TSEG  'Error in dictionary file, word must start in column 1.',,CR           
         ACALL DICTERR             EXITS VIA CVERROR                            
*                                                                               
LENERR   LABEL ,                                                                
   TSEG  'Error in dictionary file, word is to long. (>64)',,CR                 
         ACALL DICTERR             EXITS VIA CVERROR                            
*                                                                               
MULTERR  LABEL ,                                                                
   TSEG  'Error in dictionary file, only one word per line.',,CR                
         ACALL DICTERR             EXITS VIA CVERROR                            
*                                                                               
ALPHAERR LABEL ,                                                                
  TSEG  'Error in dictionary file, words must be alpahbetized.',,CR             
         ACALL DICTERR             EXITS VIA CVERROR                            
*                                                                               
*  EXIT                                                                         
*                                                                               
CHKEXIT  LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       MAKE INDEX ENTRY INTO DICTIONARY                                        
*                                                                               
*  WE MAKE ONE ENTRY INTO THE DICTIONARY FOR EVERY 120+- WORDS.                 
*  TOTAL WORDS IN DICTNRY/TOTAL NUMBER OF INDEXES= WORDS PER INDEX.             
*  SO WE MAKE AN INDEX APPROXIMATELY EVERY 120+- WORDS,,, SPECIAL               
*  CONDITIONS ARE,                                                              
*   1. WE ALWAYS PUT IN AN INDEX INTO THE DICTIONARY FOR THE MOST               
*      USED WORDS.                                                              
*   2. WHEN WE PUT AN INDEX WE MAKE SURE THAT IT IS THE FIRST                   
*      OCCURANCE OF THOSE FIRST 4 LETTERS IN THE DICTIONARY.                    
*  DIG IT.                                                                      
*                                                                               
*  COMMENT: DTNEXTDX - PUT IN INDEX WHEN WORD COUNT .GT. DTNEXTDX               
*                                                                               
*                                                                               
*                                                                               
ADDNDX   PROC  ,     ,,           MAKE INDEX IF REQUIRED                        
         IF    (DTNDXPTR,LT,DTNDXEND),BEGIN                                     
         L     R2,DTTOPPTR        GET POINTER TO MOST USED WORDS                
         COMMENT                  IF WORD > MOST USED WORD,,                    
         WHILE (' CLC DTWORD(5),0(R2)',GT),' LA R2,5(R2)'                       
         ST    R2,DTTOPPTR        GET NEXT TOP HIT (MOST USED) WORD             
*                                                                               
*                                 IF WORD = TOP HIT WORD, MAKE INDEX            
         CLC   DTWORD(5),0(R2)                                                  
         IF    E,BEGIN            IF WORD = TOP HIT WORD, MAKE INDEX            
         L     R3,DTNDXPTR            R3 - INDEX POINTER                        
         MVC   NDX(5,R3),DTWORD       SAVE INDEX VALUE                          
         MVC   NLINK+1(3,R3),DTPTR+1  SAVE ADDRESS OF DICTNRY TOKEN             
         LA    R3,NLEN(R3)            BUMP INDEX POINTER                        
         ST    R3,DTNDXPTR                                                      
         IF    (DTNDXPTR,GE,DTNDXEND),BEGIN                                     
         TSEG  'Spelling dictionary index overflow.',,CR                        
         END                                                                    
         COMMENT                    SKIP TO NEXT TOP HIT WORD                   
         WHILE (' CLC DTWORD(5),0(R2)',EQ),' LA R2,5(R2)'                       
         ST    R2,DTTOPPTR                                                      
         L     R2,DTWORDCT          RESET COUNT TILL NEXT INDEX                 
         A     R2,=AL4(NDXFACTR)                                                
         ST    R2,DTNEXTDX                                                      
         MVC   DTPREV(64),DTBLANKS  CAUSE ENTIRE WORD TO BE IN DICTNY           
         END                                                                    
*                                                                               
*                                 IF WORD COUNT SUFFICIENT, ADD INDEX           
         IF    (DTWORDCT,GE,DTNEXTDX),BEGIN   ADD INDEX TO LIST                 
         CLC   DTPREV(5),DTWORD   WE TAG ENTRIES ONLY IF 1ST 5                  
         IF    NE,BEGIN             LETTERS ARE 1ST IN DICTNRY                  
         L     R3,DTNDXPTR            R3 - INDEX POINTER                        
         MVC   NDX(5,R3),DTWORD       SAVE INDEX VALUE                          
         MVC   NLINK+1(3,R3),DTPTR+1  SAVE ADDRESS OF DICTNRY TOKEN             
         LA    R3,NLEN(R3)            BUMP INDEX POINTER                        
         ST    R3,DTNDXPTR                                                      
         IF    (DTNDXPTR,GE,DTNDXEND),BEGIN                                     
         TSEG  'Spelling dictionary index overflow.',,CR                        
         END                                                                    
         L     R2,DTWORDCT        RESET COUNT TILL NEXT INDEX                   
         A     R2,=AL4(NDXFACTR)                                                
         ST    R2,DTNEXTDX                                                      
         MVC   DTPREV(64),DTBLANKS  CAUSE ENTIRE WORD TO BE IN DICTNY           
         END                                                                    
         END                                                                    
         END                                                                    
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  ADD WORD TO DICTIONARY                                                       
*                                                                               
*  WE JUST ADD WORD IN WORD TO END OF DICTIONARY IN WYLBUR PRESSED              
*  FORMAT.                                                                      
*                                                                               
*                                                                               
ADDTOKEN PROC  ,     ,,           ADD TOKEN TO DICTIONARY                       
         XPUSH ,,&LINESZ,PTR=R1   R1 - PLACE TO COMPRESS WORD                   
         MVI   0(R1),C' '              SEPARATE WORDS WITH BLANK                
         MVC   1(64,R1),DTWORD         MOVE IN WORD                             
         LA    R2,1(R1)           R2 - CURRENT WORD                             
         LA    R3,DTPREV          R3 - PREVIOUS WORD                            
         WHILE ('CLC @R2(1),@R3',EQ),BEGIN REMOVE PREFIX COMMON CHARS           
         MVI   0(R2),C' '           NOTE (PREVIOUS,NE,WORD) !!!                 
         LA    R2,1(R2)                                                         
         LA    R3,1(R3)                                                         
         END                                                                    
         L     R3,DTWORDLN                                                      
         LA    R3,1(R3)           WORD LENGTH +1 FOR LEADING BLANK              
         LR    R0,R3                                                            
         COMMENT                  R1,R0 - TEXT ADDR, LEN                        
         VCALL PRESS              PRESS DICTIONARY TOKEN                        
         L     R2,DTPTR           R2 - PLACE TO PUT THIS TOKEN                  
         LA    R1,5(R1)           SKIP LINENO, LINELEN HEADER                   
         LR    R3,R0              R1,R3 - PRESSED TEXT ADDR, LENGTH             
         LA    R4,0(R2,R3)        R4 - WHERE END OF ENTRY WILL BE               
         ST    R4,DTPTR                                                         
         IF    (R4,GE,DTEND),BEGIN                                              
         TSEG  'Spelling dictionary overflow.',,CR                              
         ACALL DICTERR                                                          
         END                                                                    
         MOVE  R3,@R2,@R1         MOVE PRESSED WORD INTO DICTIONARY             
         XPOP  ,,&LINESZ                                                        
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  RETURN FROM DICTIONARY LINE-BY-LINE PROCESSING                               
*                                                                               
*                                                                               
DICTERR  PROC  ,                  SEVERE ERROR, ABORT COMMAND !!                
         L     R1,DTMEMADR        FREE UP GETMAINED MEMORY                      
         L     R0,DTMEMLEN                                                      
         MVC   0(4,R1),=C'FREE'                                                 
         ST    R0,4(R1)                                                         
         FREEMAIN R,LV=(0),A=(1)                                                
         ERROR 'Dictionary not loaded.',,BADDICT                                
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TOP 200 WORDS, THE 100 MOST USED WORDS ACCOUNT FOR 50 % OF THE               
*  WORDS IN RANDOM TEXT.  OH YEAH.                                              
*                                                                               
*  NOTE: WORDS MUST BE IN ALPHABETICAL ORDER AND IN LOWER CASE                  
*                                                                               
*                                                                               
TOPHITS  LABEL ,                  TOP 100+ WORDS                                
         TOPWD about                                                            
         TOPWD above                                                            
         TOPWD across                                                           
         TOPWD act                                                              
         TOPWD action                                                           
         TOPWD after                                                            
         TOPWD again                                                            
         TOPWD against                                                          
         TOPWD all                                                              
         TOPWD almost                                                           
         TOPWD along                                                            
         TOPWD also                                                             
         TOPWD although                                                         
         TOPWD always                                                           
         TOPWD american                                                         
         TOPWD among                                                            
         TOPWD and                                                              
         TOPWD another                                                          
         TOPWD any                                                              
         TOPWD are                                                              
         TOPWD area                                                             
         TOPWD around                                                           
         TOPWD asked                                                            
         TOPWD away                                                             
         TOPWD back                                                             
         TOPWD because                                                          
         TOPWD become                                                           
         TOPWD been                                                             
         TOPWD before                                                           
         TOPWD begun                                                            
         TOPWD being                                                            
         TOPWD best                                                             
         TOPWD better                                                           
         TOPWD between                                                          
         TOPWD big                                                              
         TOPWD both                                                             
         TOPWD buisness                                                         
         TOPWD but                                                              
         TOPWD called                                                           
         TOPWD came                                                             
         TOPWD can                                                              
         TOPWD case                                                             
         TOPWD certain                                                          
         TOPWD children                                                         
         TOPWD church                                                           
         TOPWD city                                                             
         TOPWD come                                                             
         TOPWD company                                                          
         TOPWD could                                                            
         TOPWD country                                                          
         TOPWD course                                                           
         TOPWD day                                                              
         TOPWD days                                                             
         TOPWD development                                                      
         TOPWD did                                                              
         TOPWD didn''t                                                          
         TOPWD different                                                        
         TOPWD does                                                             
         TOPWD don''t                                                           
         TOPWD done                                                             
         TOPWD door                                                             
         TOPWD down                                                             
         TOPWD during                                                           
         TOPWD each                                                             
         TOPWD early                                                            
         TOPWD either                                                           
         TOPWD end                                                              
         TOPWD enough                                                           
         TOPWD even                                                             
         TOPWD ever                                                             
         TOPWD every                                                            
         TOPWD example                                                          
         TOPWD eyes                                                             
         TOPWD face                                                             
         TOPWD fact                                                             
         TOPWD family                                                           
         TOPWD far                                                              
         TOPWD feet                                                             
         TOPWD felt                                                             
         TOPWD few                                                              
         TOPWD find                                                             
         TOPWD first                                                            
         TOPWD five                                                             
         TOPWD for                                                              
         TOPWD form                                                             
         TOPWD found                                                            
         TOPWD four                                                             
         TOPWD from                                                             
         TOPWD gave                                                             
         TOPWD general                                                          
         TOPWD get                                                              
         TOPWD give                                                             
         TOPWD given                                                            
         TOPWD god                                                              
         TOPWD going                                                            
         TOPWD good                                                             
         TOPWD got                                                              
         TOPWD government                                                       
         TOPWD great                                                            
         TOPWD group                                                            
         TOPWD had                                                              
         TOPWD hand                                                             
         TOPWD hands                                                            
         TOPWD has                                                              
         TOPWD have                                                             
         TOPWD head                                                             
         TOPWD help                                                             
         TOPWD her                                                              
         TOPWD here                                                             
         TOPWD high                                                             
         TOPWD him                                                              
         TOPWD himself                                                          
         TOPWD his                                                              
         TOPWD history                                                          
         TOPWD home                                                             
         TOPWD house                                                            
         TOPWD how                                                              
         TOPWD however                                                          
         TOPWD human                                                            
         TOPWD important                                                        
         TOPWD interest                                                         
         TOPWD into                                                             
         TOPWD it''s                                                            
         TOPWD its                                                              
         TOPWD itself                                                           
         TOPWD john                                                             
         TOPWD just                                                             
         TOPWD kind                                                             
         TOPWD knew                                                             
         TOPWD know                                                             
         TOPWD large                                                            
         TOPWD last                                                             
         TOPWD later                                                            
         TOPWD law                                                              
         TOPWD least                                                            
         TOPWD left                                                             
         TOPWD less                                                             
         TOPWD let                                                              
         TOPWD life                                                             
         TOPWD light                                                            
         TOPWD like                                                             
         TOPWD line                                                             
         TOPWD little                                                           
         TOPWD local                                                            
         TOPWD long                                                             
         TOPWD look                                                             
         TOPWD looked                                                           
         TOPWD made                                                             
         TOPWD make                                                             
         TOPWD man                                                              
         TOPWD many                                                             
         TOPWD may                                                              
         TOPWD means                                                            
         TOPWD members                                                          
         TOPWD men                                                              
         TOPWD might                                                            
         TOPWD mind                                                             
         TOPWD more                                                             
         TOPWD most                                                             
         TOPWD mrs                                                              
         TOPWD much                                                             
         TOPWD must                                                             
         TOPWD name                                                             
         TOPWD national                                                         
         TOPWD need                                                             
         TOPWD never                                                            
         TOPWD new                                                              
         TOPWD next                                                             
         TOPWD night                                                            
         TOPWD not                                                              
         TOPWD nothing                                                          
         TOPWD now                                                              
         TOPWD number                                                           
         TOPWD off                                                              
         TOPWD often                                                            
         TOPWD old                                                              
         TOPWD once                                                             
         TOPWD one                                                              
         TOPWD only                                                             
         TOPWD open                                                             
         TOPWD order                                                            
         TOPWD other                                                            
         TOPWD others                                                           
         TOPWD our                                                              
         TOPWD out                                                              
         TOPWD over                                                             
         TOPWD own                                                              
         TOPWD part                                                             
         TOPWD past                                                             
         TOPWD people                                                           
         TOPWD per                                                              
         TOPWD perhaps                                                          
         TOPWD place                                                            
         TOPWD possible                                                         
         TOPWD power                                                            
         TOPWD present                                                          
         TOPWD president                                                        
         TOPWD problem                                                          
         TOPWD program                                                          
         TOPWD public                                                           
         TOPWD put                                                              
         TOPWD quite                                                            
         TOPWD rather                                                           
         TOPWD right                                                            
         TOPWD room                                                             
         TOPWD said                                                             
         TOPWD same                                                             
         TOPWD saw                                                              
         TOPWD say                                                              
         TOPWD school                                                           
         TOPWD second                                                           
         TOPWD see                                                              
         TOPWD seemed                                                           
         TOPWD sense                                                            
         TOPWD service                                                          
         TOPWD set                                                              
         TOPWD several                                                          
         TOPWD she                                                              
         TOPWD should                                                           
         TOPWD show                                                             
         TOPWD side                                                             
         TOPWD since                                                            
         TOPWD small                                                            
         TOPWD social                                                           
         TOPWD some                                                             
         TOPWD something                                                        
         TOPWD state                                                            
         TOPWD states                                                           
         TOPWD still                                                            
         TOPWD such                                                             
         TOPWD system                                                           
         TOPWD take                                                             
         TOPWD taken                                                            
         TOPWD than                                                             
         TOPWD that                                                             
         TOPWD the                                                              
         TOPWD their                                                            
         TOPWD them                                                             
         TOPWD then                                                             
         TOPWD there                                                            
         TOPWD these                                                            
         TOPWD they                                                             
         TOPWD thing                                                            
         TOPWD things                                                           
         TOPWD think                                                            
         TOPWD this                                                             
         TOPWD those                                                            
         TOPWD though                                                           
         TOPWD thought                                                          
         TOPWD three                                                            
         TOPWD through                                                          
         TOPWD thus                                                             
         TOPWD time                                                             
         TOPWD times                                                            
         TOPWD today                                                            
         TOPWD told                                                             
         TOPWD too                                                              
         TOPWD took                                                             
         TOPWD toward                                                           
         TOPWD turned                                                           
         TOPWD two                                                              
         TOPWD under                                                            
         TOPWD united                                                           
         TOPWD until                                                            
         TOPWD upon                                                             
         TOPWD use                                                              
         TOPWD used                                                             
         TOPWD very                                                             
         TOPWD want                                                             
         TOPWD war                                                              
         TOPWD was                                                              
         TOPWD water                                                            
         TOPWD way                                                              
         TOPWD well                                                             
         TOPWD went                                                             
         TOPWD were                                                             
         TOPWD what                                                             
         TOPWD when                                                             
         TOPWD where                                                            
         TOPWD whether                                                          
         TOPWD which                                                            
         TOPWD while                                                            
         TOPWD white                                                            
         TOPWD who                                                              
         TOPWD whole                                                            
         TOPWD why                                                              
         TOPWD will                                                             
         TOPWD with                                                             
         TOPWD within                                                           
         TOPWD without                                                          
         TOPWD work                                                             
         TOPWD world                                                            
         TOPWD would                                                            
         TOPWD year                                                             
         TOPWD years                                                            
         TOPWD yet                                                              
         TOPWD york                                                             
         TOPWD you                                                              
         TOPWD young                                                            
         TOPWD your                                                             
         TOPWD 99999              9999 MARKS END OF LIST                        
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'SPELL - check spelling of active file'                          
*box                                                                            
*                                                                               
*                                                                               
*       SPELL command, Check spelling of active file range.                     
*                                                                               
*                                                                               
SPWA     RECORD BEGIN ,,          SPELLING CHECK WORK AREA                      
SPPARMS  DS    0F                 * PARAMETER BLOCK PASSED TO SCAN              
SPFLAGS  FLAG  ,                  * SCAN FLAGS                                  
         FLAG  SPSPECL            * SCAN SPECIAL,, DEFAULT NO SPECIAL           
         FLAG  SPNOUPP            * DON'T SCAN UPPER, DEFAULT IS SCAN           
SPSTART  DS    F                  * START OF STRING TO SCAN                     
SPPTR    DS    F                  * PLACE TO START SCANNING, UPDATED            
SPEND    DS    F                  * END OF SCAN STRING                          
SPWLEN   DS    F                  * LENGTH OF WORD SCANNED                      
SPWPTR   DS    F                  * POINTER TO WORD IN SCANNED STRING           
SPWORD   DS    CL64               * WORD SCANNED (IN ORIGINAL CASE)             
         COMMENT                                                                
SPDICPTR DS    F                  ADDRESS OF DICTIONARY MEMORY                  
SPFLGS   FLAG  ,                                                                
         FLAG  SPPSPELL           PAGE MODE VERION OF SPELL COMMAND             
SPLINENO DS    F                  CURRENT LINE NUMBER                           
SPUCNT   DS    F                  UNKNOWN WORD COUNT                            
SPUEND   DS    F                  END OF UNKNOWN WORD LIST                      
SPULIST  DS    800C               UNKNOWN WORD LIST                             
         END                                                                    
ULEN     EQU   0                  UNKNOWN WORD LIST CONSISTS OF                 
UWORD    EQU   1                  1 BYTE LEN, N BYTES WORD, ETC.                
         SPACE 3                                                                
*box                                                                            
*                                                                               
*                                                                               
*       SPELL - SPELL command                                                   
*                                                                               
*  We check spelling of active file.  Unknown words that are found              
*  are kept in a sorted list (SPULIST).  Each entry consists of                 
*  a length byte followed by the word.  Note that the same word                 
*  in different cases will be listed for each case.                             
*                                                                               
*  If in page mode, command causes all pages containing unknown                 
*  words to be displayed.                                                       
*                                                                               
*                                                                               
SPELL    XPROC SPWA                                                             
         LA    R6,SPWA                                                          
         USING SPWA,R6                                                          
*-                                                                              
*-       INITIALIZE WORK AREA                                                   
*-                                                                              
         ST    R6,CPCWA            Save work area pointer                       
         CLEAR SPWA                Initialize work area                         
         LA    R1,SPULIST                                                       
         ST    R1,SPUEND                                                        
*-                                                                              
*-       SET UP RANGE PROCESSOR,                                                
*-                                                                              
         COMMENT                  OBTAIN WORK AREA AFTER CALL TO                
         COMMENT                  RANGE PROCESSOR (DETRNG)                      
         COMMENT                  UGLY BUT NECESSARY FOR NOW.                   
*                                                                               
         VCALL SCNEXFR            ALLOW ACTIVE/EXEC/FROM DSNAME                 
         SET   CPLFLG1.CPFALL     DEFAULT IS ALL                                
         VCALL NDETRNG            DETERMINE RANGE                               
*-                                                                              
*-       LOCK SPELL DICTIONARY                                                  
*-                                                                              
         ACALL GETDICT            GET SPELLING DICTIONARY                       
         ST    R1,SPDICPTR        R1 - DICTIONARY AREA ADDRESS                  
         IF    Z,BEGIN            IF NO DICTIONARY, ABORT COMMAND               
         ABORT 'No spelling dictionary available.  Command ignored.'            
         END                                                                    
*$       SET   CPRFDICT           FREE DICTNRY USE COUNT IF ABORT               
*-                                                                              
*-       SCAN REST OF SPELL COMMAND                                             
*-                                                                              
         IF    CPFRDEXT,BEGIN                                                   
         VCALL MKFFINFO                                                         
         SCAN  SPLPRTX                                                          
         SCANCHK                                                                
         END                                                                    
         ELSE  BEGIN                                                            
         SCAN  SPLPRT                                                           
         SCANCHK                                                                
         END                                                                    
*                                                                               
*   PROCESS LINES IN RANGE,, AS PER EXEC, EXTERN, ACTIVE                        
*                                                                               
*                                                                               
         IF    CPVFPAGE,BEGIN     IF IN PAGE MODE,                              
         SET   SPPSPELL              DO PAGE MODE SPELL COMMAND                 
         SET   CPLFSPEL              ONE SHOT VIEW SPELL FLAG                   
         END                                                                    
*                                                                               
         COMMENT                         IF EXEC,                               
         IF    CPFRDEXE,BEGIN                                                   
         CLEAR SPPSPELL                   DOES NOT WORK FOR PAGE MODE           
         CLEAR CPLFSPEL                                                         
         RDRNG SPELLRTN,(DESRTRN+LEXATRTN+UNPRST+DESABORT)                      
         END                                                                    
*                                                                               
         COMMENT                         IF EXTERNAL (SPELL FROM ..)            
         ELSEIF CPFRDEXT,BEGIN                                                  
         CLEAR SPPSPELL                   DOES NOT WORK FOR PAGE MODE           
         CLEAR CPLFSPEL                                                         
         VCALL FNAMEFIN                   GET FILE NAME                         
         VCALL EXTOPEN                    OPEN                                  
         IF    (R15,NZ),CVNEXT                                                  
         RDRNG SPELLRTN,(DESRTRN+LXCATRTN+UNPRST+DESABORT)                      
         END                                                                    
*                                                                               
         ELSE  BEGIN               IF RANGE FROM ACTIVE                         
         RDRNG SPELLRTN,(DESRTRN+LOCATRTN+UNPRST+DESABORT)                      
         END                                                                    
*-                                                                              
*-       POST PROCESS PAGE MODE                                                 
*-                                                                              
         IF    SPPSPELL,BEGIN     IF PAGE MODE SPELL,,                          
         IF    (SPUCNT,EQ,0),BEGIN   IF NO ERRORS,                              
         TSEG  'No misspelled words found.',,CR                                 
         END                                                                    
         IF    (SPUCNT,NE,0),BEGIN   IF ERRORS, FORCE OUT LAST PAGE             
         MVC   CPVMSG,CVBLANKS                                                  
         SET   CPVFREWR                                                         
         VCALL PAGEMOD            WRITE OUT LAST PAGE,                          
         END                                                                    
         CLEAR CPLFSPEL           DONE WITH PAGE MODE SPELL COMMAND             
         B     SPELLRET                                                         
         END                                                                    
*-                                                                              
*-       POST PROCESS LINE MODE SPELL COMMAND                                   
*-                                                                              
*-       PRINT OUT UNKNOWN WORD LIST AND EXIT                                   
*-                                                                              
         L     R4,SPUCNT          R4 NUMBER OF UNKNOWN WORDS FOUND              
         IF    (R4,EQ,0),BEGIN                                                  
         TSEG  'No misspelled words found.',,CR                                 
         END                                                                    
         ELSE  BEGIN ,,,          MISPELLED WORDS FOUND,, WE LIST               
         TNUM  (R4)                                                             
         TSEG  ' unknown words found.',,CR                                      
         LA    R1,SPULIST         R1 - UNKNOWN WORD LIST                        
         SR    R0,R0                                                            
         WHILE (R4,GT,0),BEGIN    PRINT ALL UNKNOWN WORDS                       
         IC    R0,ULEN(R1)        R1, R0 - UNKNOWN WORD ADDR, LEN               
         LA    R1,UWORD(R1)                                                     
         ACALL TLIST              LIST OUT EACH WORD                            
         AR    R1,R0                                                            
         BCTR  R4,0                                                             
         END                                                                    
         SR    R0,R0              FORCE OUT LAST LINE OF UNKNOWNS               
         ACALL TLIST                                                            
         END                                                                    
*-                                                                              
*-       EXIT FROM SPELL COMMAND                                                
*-                                                                              
SPELLRET LABEL ,                  RETURN FROM CHECK COMMAND                     
         L     R1,SPDICPTR        FREE LOCKED DICTIONARY                        
         ACALL FREEDICT                                                         
         CLEAR CPRFDICT           DICTNRY IS FREED                              
         B     CVNEXT                                                           
         PEND  ,                                                                
*                                                                               
SPLPRTX  SCKW  FROM,V(FNAMESCN),A                                               
         SCKW  ,V(FNAMPSHF),PUSH                                                
         SCKW  EXECUTE,V(SCNNOOP),A                                             
         SCKW  ACTIVE,V(SCNNOOP),A                                              
         SCKW  ,V(LTNPSH),PUSH     Allow NOLIST                                 
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,INVSPELL                                                        
*                                                                               
SPLPRT   SCKW  EXECUTE,V(SCNNOOP),A                                             
         SCKW  ACTIVE,V(SCNNOOP),A                                              
         SCKW  ,V(LTNPSH),PUSH     Allow NOLIST                                 
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,INVSPELL                                                        
*                                                                               
INVSPELL PROC  ,                                                                
         TSEG  (R1),(R0)                                                        
         TSEG  ': invalid line range.',,CR                                      
         TSEG  '(The command "GUESS word" can be used to '                      
         ERROR 'check the spelling of a word.)'                                 
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       SPELL CO-ROUTINE                                                        
*                                                                               
*  ON ENTRY: R1,R0 - LOC, LEN OF LINE TEXT                                      
*                                                                               
*  WE CHECK THE SPELLING OF EACH WORD IN LINE, IF WORD IS                       
*  UNKOWN WE ADD IT TO THE UNKOWN WORD LIST.  OH YEAH !                         
*                                                                               
*  IF IN PAGE MODE, WE DISPLAY THOSE PAGES CONTAINING UNKNOWN                   
*  WORDS.                                                                       
*                                                                               
*                                                                               
SPELLRTN PROC  ,                                                                
         L     R6,CPCWA           GET CHECK WORK AREA                           
         USING SPWA,R6                                                          
         L     R2,CPLCNO          SAVE CURRENT LINE NUMBER                      
         ST    R2,SPLINENO                                                      
*                                                                               
         ST    R1,SPSTART         R1 - START OF LINE TO SCAN                    
         ST    R1,SPPTR           R1 - SCAN POINTER,, UPDATED EACH              
         AR    R0,R1                   ON EACH CALL TO SCAN                     
         ST    R0,SPEND  ,        R0 - END TO LINE TO SCAN                      
         LA    R1,SPPARMS         R1 - SCAN PARM BLOCK                          
         ACALL SCANTEXT           SCAN TEXT LINE                                
         WHILE Z,BEGIN            LOOP SCANNING EACH TEXT WORD                  
         LA    R1,SPWORD                                                        
         L     R0,SPWLEN          R1,R0 - TEXT WORD ADDR, LENGTH                
         ACALL CHECKWD            SEE IF WORD IS IN DICTIONARY                  
*-                                                                              
*-       IF WORD NOT FOUND IN DICTIONARY   --- REGULAR SPELL                    
*-                                                                              
         IF    NZ,BEGIN                                                         
         IF    ^SPPSPELL,BEGIN    IF NOT PAGE MODE AND IF ...                   
         ACALL ADDUN              IF NOT IN DICTIONARY, ADD WORD TO             
         COMMENT                     UNKOWN WORD LIST                           
         END                                                                    
*-                                                                              
*-       IF WORD NOT FOUND IN DICTIONARY  --- VIEW MODE SPELL                   
*-                                                                              
         IF    SPPSPELL,BEGIN                                                   
         MVI   SPUCNT,X'01'       MARK THAT WE HAVE UNKOWN WORDS                
         L     R15,SPLINENO                                                     
         VCALL PAGELINE           MARK LINE FOR PAGE OUTPUT                     
         IF    NZ,BEGIN           IF LINE NOT ON CURRENT PAGE                   
         MVC   CPVMSG,CVBLANKS                                                  
         MVC   CPVMSG(L'SPLLMSG),SPLLMSG                                        
         SET   CPVFREWR                                                         
         VCALL PAGEMOD            WRITE CURRENT,                                
         IF    NZ,BEGIN              IF PAGE MODE BREAK,                        
         CLEAR CPLFSPEL              NO MORE PAGE MODE SPELL                    
         VCALL RNGABORT              ABORT RANGE,,                              
         B     CVABORT               ABORT COMMAND                              
         END                                                                    
         L     R15,SPLINENO       START NEW CURRENT PAGE W/LAST LINE            
         VCALL PAGELINE                                                         
         END                                                                    
         END                                                                    
         END   ,, ,               END OF WORD NOT IN DICTIONARY                 
*                                                                               
*                                 LOOP THRU ALL LINES IN RANGE                  
         LA    R1,SPPARMS         R1 - SCAN PARM BLOCK                          
         ACALL SCANTEXT           SCAN NEXT TEXT WORD, AND LOOP                 
         END                                                                    
*-                                                                              
*-       DONE. EXIT.                                                            
*-                                                                              
         PEND  ,                                                                
         SPACE 5                                                                
SPLLMSGX DC    C'Press CONTINUE [ESC RETURN] '                                  
         DC    C'for next page containing unknown words.'                       
SPLLMSG  EQU   SPLLMSGX,*-SPLLMSGX,C'X'                                         
         EJECT                                                                  
ADWA     RECORD BEGIN ,,          ADD UNKNOWN WORD WORK AREA                    
ADWORD   DS    64C                WORD TO ADD (IN LOWER CASE)                   
ADENTRY  DS    64C                WORD IN LIST (IN LOWER CASE)                  
ADBLANKS DS    64C                BLANKS                                        
ADSPACE  DS    800C               SPACE                                         
         END   ,,,                                                              
*box                                                                            
*                                                                               
*                                                                               
*       ADDUN - ADD WORD TO UNKNOWN WORD LIST                                   
*                                                                               
*       WORD TO INSERT INTO SPULIST IS IN SPWORD                                
*                                                                               
*                                                                               
ADDUN    PROC  ,                                                                
*-                                                                              
*-       SEE IF WORD IN LIST                                                    
*-                                                                              
         SR    R3,R3                                                            
         LA    R4,SPULIST         R4 - ADDR OF UNKOWN WORD ENTRY                
         L     R5,SPUEND          R5 - END OF UNKNOWN LIST                      
         COMMENT                                                                
         WHILE (R4,LT,R5),BEGIN   SEARCH THRU LIST                              
         IC    R3,ULEN(R4)        R3 - UNKNOWN WORD LENGTH                      
         C     R3,SPWLEN          IF WORD LENGTHS EQUAL, COMPARE                
         IF    E,BEGIN                                                          
         DEX   R3,' CLC SPWORD(0),UWORD(R4)'                                    
         LA    R3,1(R3)                                                         
         BE    ADDEXIT            IF IN LIST, NO NEED TO ADD WORD               
         END                                                                    
         LA    R4,UWORD(R3,R4)    BUMP TO NEXT WORD IN LIST                     
         END                                                                    
*-                                                                              
*-       IF WORD NOT IN LIST, ADD IT                                            
*-                                                                              
         LA    R4,SPULIST+800     R4 - MAXIMUM END OF LIST                      
         L     R5,SPUEND          R5 - CURRENT LIST END                         
         A     R5,SPWLEN          R5 - LIST END AFTER ADDITION                  
         LA    R5,UWORD(R5)                                                     
         CR    R5,R4              IF ADDITION CAUSES OVERFLOW,                  
         BH    ADDOVERF               GIVE ERR AND THE RESULTS SO               
         COMMENT                                                                
         COMMENT                  IF NO OVERFLOW, ADD TO LIST                   
         XPUSH ,,L'ADWA,PTR=R2                                                  
         USING ADWA,R2                                                          
         L     R1,=A(BLANKS)                                                    
         MVC   ADBLANKS(64),0(R1) INITIALIZE ADD WORK AREA                      
         MVC   ADWORD(64),SPWORD  WORD TO ADD (IN LOWER CASE)                   
         L     R1,=A(LOWERTAB)                                                  
         TR    ADWORD(64),0(R1)                                                 
         LA    R4,SPULIST         R4 - UNKOWN WORD LIST ENTRY                   
         L     R5,SPUEND          R5 - END OF UNKNOWN LIST                      
         WHILE (R4,LT,R5),BEGIN                                                 
         IC    R3,0(R4)           R3 - UNKOWN WORD LENGTH                       
         MVC   ADENTRY(64),ADBLANKS                                             
         DEX   R3,' MVC ADENTRY(0),UWORD(R4) '  GET UNKNOWN ENTRY               
         LA    R3,1(R3)                                                         
         TR    ADENTRY(64),0(R1)  UNKNOWN WORD ENTRY IN LOWER CASE              
         CLC   ADWORD(64),ADENTRY COMPARE NEW WORD TO ENTRY WORD                
         BL    INSERTWD           IF PLACE TO INSERT NEW,                       
         LA    R4,UWORD(R3,R4)              DO IT TO IT                         
         END                                                                    
         B     INSERTWD                                                         
*-                                                                              
*-       INSERT WORD AT R4                                                      
*-                                                                              
INSERTWD LABEL ,                  MOVE TEXT TO OPEN PLACE FOR NEW               
         COMMENT                     ENTRY IN UNKNOWN WORD LIST                 
         COMMENT                                                                
         LR    R3,R4              R4 - PLACE TO INSERT WORD                     
         SR    R5,R4              R5 - LENGTH OF STUFF TO MOVE                  
         LA    R0,ADSPACE         RIPPLE MOVE BY MOVING TO STACK                
         LR    R1,R5                                                            
         MVCL  R0,R4                                                            
         LR    R4,R3              R4 - PLACE TO INSERT WORD                     
         L     R3,SPWLEN          R3 - WORD LENGTH                              
         STC   R3,ULEN(R4)        SAVE WORD LENGTH, SAVE WORD                   
         DEX   R3,' MVC UWORD(0,R4),SPWORD '                                    
         LA    R3,1(R3)                                                         
         L     R5,SPUEND                                                        
         SR    R5,R4              R5 - LENGTH OF STUFF TO MOVE                  
         LA    R4,UWORD(R3,R4)    R4 - PLACE TO MOVE STUFF                      
         LA    R0,ADSPACE         RESTORE END OF LIST FROM STACK                
         LR    R1,R5                                                            
         MVCL  R4,R0              MOVE BACK ENDING ENTRIES                      
         L     R5,SPUEND                                                        
         A     R5,SPWLEN          UPDATE END OF UNKNOWN LIST PTR                
         LA    R5,UWORD(R5)          AND BUMP UNKNOWN WORD COUNT                
         ST    R5,SPUEND                                                        
         L     R1,SPUCNT                                                        
         LA    R1,1(R1)                                                         
         ST    R1,SPUCNT                                                        
         XPOP  ,,L'ADWA                                                         
         B     ADDEXIT            BYE FOR NOW                                   
         SPACE 3                                                                
*-                                                                              
*-       IF OVER FLOW, PRINT ERROR AND PARTIAL UNKNOWN WORD LIST                
*-                                                                              
ADDOVERF LABEL ,                                                                
         L     R4,SPUCNT          R4 - NUMBER OF UNKOWN WORDS                   
         TNUM  (R4)                                                             
         TSEG  ' unknown words found.',,CR                                      
         LA    R1,SPULIST         R1 - UNKNOWN WORD LIST                        
         SR    R0,R0                                                            
         WHILE (R4,GT,0),BEGIN    PRINT ALL UNKNOWN WORDS                       
         IC    R0,ULEN(R1)        R1,R0 - UNKNOWN WORD ADDR, LEN                
         LA    R1,UWORD(R1)                                                     
         ACALL TLIST              LIST OUT EACH WORD                            
         AR    R1,R0                                                            
         BCTR  R4,0                                                             
         END                                                                    
         SR    R0,R0              FORCE OUT LAST LINE OF UNKNOWNS               
         ACALL TLIST                                                            
         TSEG  ' ',,CR                                                          
  TSEG  'Unknown word list is too long; this is a partial list.',,CR            
         VCALL RNGABORT           ABORT SPELL COMMAND                           
         B     CVABORT                                                          
         SPACE 3                                                                
*-                                                                              
*-       UNKOWN WORD ADDED, WE EXIT                                             
*-                                                                              
ADDEXIT  LABEL ,                                                                
         PEND  ,                                                                
         DROP  R2,R6                                                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  DICTCLS - DECREMENT DICTIONARY USE COUNT, CALLED ONLY IF SPELL               
*            COMMAND IS ABORTED,                                                
*                                                                               
*                                                                               
DICTCLS  XPROC  ,                                                               
*$                                                                              
*$ TEMP ZAP TO FIX IGNORE USE COUNT STUFF                                       
*$                                                                              
         PEND  ,                                                                
*        L     R6,CPCWA           CHECK WORK AREA STILL VALID                   
*        USING SPWA,R6                                                          
*        L     R1,SPDICPTR        R1 - DICTNRY ADDRESS                          
*        ACALL FREEDICT           DECREMENT DICTNRY USE COUNT                   
*        CLEAR CPRFDICT           DICTNRY USE COUNT DECRMTED                    
*        PEND  ,                                                                
*        DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'SPELLINE - check spelling of a line for view'                   
*box                                                                            
*                                                                               
*  SPELLINE -- Routine to check the spelling of every word in                   
*    the line passed to it.  This routine is called by the page                 
*    manager for the VIEW command if the user wants automatic                   
*    spelling checking.                                                         
*                                                                               
*    On entry:                                                                  
*      R1,R0 - Line loc, len                                                    
*      R2 - Rendition line buffer  (may be zero)                                
*      R15 - column number                                                      
*                                                                               
*     On exit, R15 (and cc):                                                    
*       0 - no misspelled words in line after column specified                  
*       pos - column number of next mispelled word.                             
*                                                                               
*     On exit, redition buffer:                                                 
*       The X'01' bit is set in the rendition line buffer                       
*       for every position where there is a character of a                      
*       misspelled word.                                                        
*                                                                               
*                                                                               
*                                                                               
SLWA     RECORD BEGIN ,           SPELL LINE WORK AREA                          
SLBUF    DS    F                  REDITION BUFFER ADDR                          
SLCOL    DS    F                  COLUMN NUMBER AT ENTRY (IN R15)               
SLCOLRET DS    F                  COLUMN NUMBER TO RETURN                       
         COMMENT                                                                
         COMMENT                  COPY OF SCAN PARM BLOCK                       
SLPARMS  DS    0F                 * PARAMETER BLOCK PASSED TO SCAN              
SLFLAGS  FLAG  ,                  * SCAN FLAGS                                  
         FLAG  SLSPECL            * SCAN SPECIAL,, DEFAULT NO SPECIAL           
         FLAG  SLNOUPP            * DON'T SCAN UPPER, DEFAULT IS SCAN           
SLSTART  DS    F                  * START OF STRING TO SCAN                     
SLPTR    DS    F                  * PLACE TO START SCANNING, UPDATED            
SLEND    DS    F                  * END OF SCAN STRING                          
SLWLEN   DS    F                  * LENGTH OF WORD SCANNED                      
SLWPTR   DS    F                  * POINTER TO WORD IN SCANNED STRING           
SLWORD   DS    CL64               * WORD SCANNED (IN ORIGINAL CASE)             
         END                                                                    
         SPACE 3                                                                
*-                                                                              
*-       SCAN TEXT                                                              
*-                                                                              
SPELLINE XPROC SLWA                                                             
         CLEAR SLWA               INITIALIZE WORK AREA,,,                       
         COMMENT                       RET COL #, SET TO ZERO                   
         ST    R1,SLSTART              START OF LINE TO SCAN                    
         ST    R1,SLPTR                SCAN POINTER,, UPDATED EACH              
         AR    R0,R1                                                            
         ST    R0,SLEND                END OF LINE TO SCAN                      
         ST    R2,SLBUF                REDITION BUFFER                          
         ST    R15,SLCOL               COLUMN NUMBER                            
*-                                                                              
*-       SCAN EACH LINE, CHECK EACH WORD                                        
*-                                                                              
         LA    R1,SLPARMS         R1 - SCAN PARM BLOCK                          
         ACALL SCANTEXT           SCAN TEXT LINE                                
         WHILE Z,BEGIN            LOOP SCANNING EACH TEXT WORD                  
         LA    R1,SLWORD                                                        
         L     R0,SLWLEN          R1,R0 - TEXT WORD ADDR, LENGTH                
         ACALL CHECKWD            SEE IF WORD IS IN DICTIONARY                  
*-                                                                              
*-       IF WORD NOT IN DICTIONARY, GET COLUMN, MARK SHADOW BUFFER              
*-                                                                              
         IF    NZ,BEGIN           IF WORD NOT IN DICTIONARY,,,                  
         L     R1,SLWPTR                                                        
         S     R1,SLSTART         R1 - OFFSET OF WORD                           
         LA    R2,1(R1)           R2 - COL # OF WORD                            
         IF    (SLBUF,NE,0),BEGIN IF RENDITION BUFFER MARK IT                   
         L     R4,SLBUF                                                         
         AR    R4,R1              R4 - ADDR OF WORD IN SHADOW BUFFER            
         L     R3,SLWLEN          R3 - WORD LENGTH                              
         IF    (R3,POS),BEGIN                                                   
         DEX   R3,'OC @R4(0),SPELMASK'    MARK SHADOW BUFFER                    
         END                                                                    
         END                                                                    
         IF    ((R2,GT,SLCOL),AND,(SLCOLRET,LE,SLCOL)),BEGIN                    
         ST    R2,SLCOLRET        SET RETURN COLUMN                             
         END                                                                    
         END                                                                    
         LA    R1,SLPARMS         R1 - SCAN PARM BLOCK                          
         ACALL SCANTEXT           SCAN NEXT TEXT WORD, AND LOOP                 
         END                                                                    
*                                                                               
         L     R15,SLCOLRET       SET RETURN COLUNM, CODE                       
         PEND  ,                                                                
         SPACE 3                                                                
SPELMASK DC    64X'01'            SPELL MASK FOR SHADOW BUFFER                  
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'LEARN/UNLEARN commands'                                         
*                                                                               
*                                                                               
*       WORK AREA FOR LEARN/UNLEARN SPELLING COMMANDS                           
*                                                                               
*                                                                               
LWWA     RECORD BEGIN ,,          LEARN WORD WORK AREA                          
LWWORDLN DS    F                  LENGTH OF LEARN WORD                          
LWWORD   DS    CL64               LEARN WORD (IN LOWER CASE)                    
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       LEARN -- LEARN COMMAND                                                  
*                                                                               
*                                                                               
*  WE ADD A WORD TO THE USERS DICTIONARY, GOOD FOR THIS SESSION                 
*                                                                               
*                                                                               
*                                                                               
LXWA     RECORD BEGIN ,           LEARN WORK AREA                               
         COMMENT                  REST OF WORK AREA IS ESSENTIALLY A            
         COMMENT                  COPY OF THE SCAN PARAMETER BLOCK              
LXPARMS  DS    0F                 * PARAMETER BLOCK PASSED TO SCAN              
LXFLAGS  FLAG  ,                  * SCAN FLAGS                                  
         FLAG  LXSPECL            * SCAN SPECIAL,, DEFAULT NO SPECIAL           
         FLAG  LXNOUPP            * DON'T SCAN UPPER, DEFAULT IS SCAN           
LXSTART  DS    F                  * START OF STRING TO SCAN                     
LXPTR    DS    F                  * PLACE TO START SCANNING, UPDATED            
LXEND    DS    F                  * END OF SCAN STRING                          
LXWLEN   DS    F                  * LENGTH OF WORD SCANNED                      
LXWPTR   DS    F                  * POINTER TO WORD IN SCANNED STRING           
LXWORD   DS    CL64               * WORD SCANNED (IN ORIGINAL CASE)             
         END                                                                    
         SPACE 3                                                                
*-                                                                              
*-       LEARN - LEARN COMMAND                                                  
*-                                                                              
LEARN    XPROC LXWA            LEARN WORD                                       
         CLEAR LXWA            INITIALIZE WORK AREA TO ZEROS                    
*                                                                               
         IF    (CVDICPTR,E,0),BEGIN   IF NO DICTNRY, NO SPELL CHECKN            
         ABORT 'No spelling dictionary available.  Command ignored.'            
         END                                                                    
*-                                                                              
*-       SCAN FOR WORD                                                          
*-                                                                              
         SCINFO ,                 RETURNS R1,R0 LOC, LEN OF CMD STR             
         ST    R1,LXSTART         R1 - START OF LINE TO SCAN                    
         ST    R1,LXPTR           R1 - SCAN POINTER,, UPDATED BY                
         AR    R0,R1                   EACH SCAN                                
         ST    R0,LXEND           R0 - END OF LINE TO SCAN                      
         LA    R1,LXPARMS         R1 - SCAN PARAMETER BLOCK                     
         ACALL SCANWORD           SCAN COMMAND FOR WORD TO LEARN                
         IF    NZ,BEGIN           IF NO WORD, BAD REQUEST                       
*$ IN LEARNWD, CHECK FOR MAX LENGTH                                             
         ABORT 'Missing LEARN word.'                                            
         END                                                                    
*                                                                               
*                                 SCAN REST OF COMMAND                          
         L     R1,LXPTR           R1,R0 - LOC, LEN OF REST OF CMD               
         L     R0,LXEND                                                         
         SR    R0,R1                                                            
         IF    P,BEGIN            IF MORE TO COMMAND, SCAN IT ,,,               
         SCINIT (R1),(R0)                                                       
         SCAN ,,,                 SCAN REMAINDER OF COMMAND                     
         SCANCHK                                                                
         IF    (R0,NZ),BEGIN      NO FURTHER OPTIONS SUPORTED                   
         TSEG  (R1),(R0)                                                        
         TSEG  ': unrecognized LEARN option.',,CR                               
         ABORT                                                                  
         END                                                                    
         END                                                                    
         SPACE 2                                                                
*-                                                                              
*-       CALL LEARNWD ROUTINE TO LEARN WORD                                     
*-                                                                              
         LA    R1,LXWORD          R1,R0 - WORD LOC, LEN                         
         L     R0,LXWLEN                                                        
         ACALL LEARNWD                                                          
         IF    (R15,EQ,4),BEGIN                                                 
         SETMSG 'Word already in system dictionary.'                            
         B     CVNEXT                                                           
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         SETMSG 'Word already in user''s dictionary.'                           
         B     CVNEXT                                                           
         END                                                                    
*-                                                                              
*-       DONE. EXIT.                                                            
*-                                                                              
         B     CVNEXT                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       LEARNWD - ADD WORD TO USER'S SPELLING DICTIONARY                        
*                                                                               
*       R1,R0 - ADDRESS, LENGTH OF WORD TO ADD                                  
*                                                                               
*       RETURNS R15=CC,  0 - SUCESSFUL LEARN                                    
*                        4 - WORD IN SYSTEM DICTIONARY                          
*                        8 - WORD IN USER'S DICTIONARY                          
*                                                                               
*                                                                               
LEARNWD  XPROC LWWA                                                             
         IF    ((R0,LE,0),OR,(R0,GE,64)),BEGIN    CHECK WORD LENGTH             
         CLEAR R15                                                              
         B     LEARNED                                                          
         END                                                                    
         ACALL CHECKLRN           SEE IF WORD IN USER'S DICTNRY,                
         IF    Z,BEGIN            IF ALREADY KNOWN, DON'T LEARN IT              
         LA    R15,8                                                            
         B     LEARNED                                                          
         END                                                                    
         ACALL CHECKWD            SEE IF WORD IN SYSTEM DICTNRY                 
         IF    Z,BEGIN            IF ALREADY KNOWN, DON'T LEARN IT              
         LA    R15,4                                                            
         B     LEARNED                                                          
         END                                                                    
*                                                                               
         COMMENT                  SAVE WORD, BLANK PADDED,                      
         ST    R0,LWWORDLN        IN LOWER CASE                                 
         L     R2,=A(BLANKS)                                                    
         MVC   LWWORD(64),0(R2)                                                 
         LR    R3,R0                                                            
         DEX   R3,' MVC LWWORD(0),0(R1) '     MOVE WORD                         
         L     R2,=A(LOWERTAB)                                                  
         TR    LWWORD(64),0(R2)                                                 
*                                                                               
*  ADD LEARED WORD TO RECORD GROUP                                              
*                                                                               
         COMMENT                   ADD LEARN WORD                               
         LR    R3,R0 R3-WORD LEN                                                
         SET   CPFLEARN                                                         
         LA    R15,CPRG16                                                       
         IF    (R3,GT,16),' LA R15,CPRG64'                                      
         LA    R0,CP#LRN                                                        
         VCALL XSETSET             SELECT RG16 OR RG64                          
         LA    R15,CPRG16                                                       
         IF    (R3,GT,16),' LA R15,CPRG64'                                      
         CLEAR R0                                                               
         LA    R1,CVBLANKS                                                      
         LA    R2,LWWORD                                                        
         VCALL XPUT                PUT WORD AS KEY/ NULL DATA                   
         IF    (R15,NZ),BEGIN                                                   
         ERROR 'Word not added; user dictionary is full.'                       
         END                                                                    
*-                                                                              
*-       IF IN PAGE MODE WITH SPELL, UPDATE SCREEN                              
*-                                                                              
         IF    CPVFPAGE,BEGIN     IF IN VIEW,                                   
         SET   CPVFREWR           UPDATE LEARNED WORDS ON SCREEN                
         END                                                                    
         SPACE 1                                                                
*box                                                                            
*                                                                               
*                                                                               
*       RETURN FROM LEARN WORD ROUTINE,,,,    BYE. BYE.                         
*                                                                               
*                                                                               
         CLEAR R15                SUCCESSFUL LEARN FALLS THRU,                  
LEARNED  LABEL ,                  WE RETURN                                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       SHOWLRN - SHOW LEARN COMMAND                                            
*                                                                               
*  LIST THE WORDS THAT HAVE BEEN ADDED (LEARNED) TO THE                         
*  USERS SPELLING DICTIONARY, THE DICTIONARY LAST ONLY FOR                      
*  THE DURATION OF THE LOGON SESSION.                                           
*                                                                               
*                                                                               
SHOWLRN  XPROC LWWA               SHOW LEARNED WORDS                            
         SCAN  SHOWLSCN           SCAN SHOW LEARNED OPTIONS                     
         SCANCHK ,                                                              
         IF    ^CPFLEARN,BEGIN   IF NO WORDS                                    
         TSEG  'No words in user''s LEARN dictionary.',,CR                      
         B     SHOWDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF WORDS, LIST 'EM                           
         TSEG  'Words in user''s LEARN dictionary:',,CR                         
*                                                                               
         COMMENT                   SET LEARN SET..                              
         LA    R15,CPRG16                                                       
         LA    R0,CP#LRN                                                        
         VCALL XSETSET                                                          
         LA    R15,CPRG64                                                       
         LA    R0,CP#LRN                                                        
         VCALL XSETSET                                                          
*                                                                               
         COMMENT                   LIST RG 16                                   
         CLEAR LWWA                                                             
         CLEAR R15                                                              
         WHILE (R15,Z),BEGIN                                                    
         LA    R15,CPRG16                                                       
         LA    R1,LWWORD                                                        
         CLEAR R0                                                               
         LA    R2,LWWORD                                                        
         VCALL XLOCNEXT                                                         
         IF    (R15,Z),BEGIN                                                    
         TSEG  LWWORD,CPRG16NL,TB                                               
         TCR                                                                    
         CLEAR R15                                                              
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   LIST RG 64                                   
         CLEAR LWWA                                                             
         CLEAR R15                                                              
         WHILE (R15,Z),BEGIN                                                    
         LA    R15,CPRG64                                                       
         LA    R1,LWWORD                                                        
         CLEAR R0                                                               
         LA    R2,LWWORD                                                        
         VCALL XLOCNEXT                                                         
         IF    (R15,Z),BEGIN                                                    
         TSEG  LWWORD,L'LWWORD,TB                                               
         TCR                                                                    
         CLEAR R15                                                              
         END                                                                    
         END                                                                    
*                                                                               
* DONE. RETURN                                                                  
*                                                                               
SHOWDONE LABEL ,                                                                
         B     CVNEXT                                                           
         PEND  ,                                                                
         SPACE 5                                                                
* SHOW LEARNED SCAN OPTIONS                                                     
SHOWLSCN SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       CLEAR LEARN - delete user's learned dictionary                          
*                                                                               
*                                                                               
*  This command unlearns all words previously learned by user.                  
*                                                                               
*                                                                               
CLRLRN   XPROC ,                                                                
         SCAN  ,                                                                
         SCANCHK ,                                                              
         IF    (R0,NZ),BEGIN      ANY OPTION IS INVALID                         
         TSEG  (R1),(R0)                                                        
         TSEG  ': unrecognized CLEAR LEARNED option.',,CR                       
         ABORT                                                                  
         END                                                                    
         LA    R15,CPRG64                                                       
         LA    R0,CP#LRN                                                        
         VCALL XDELSET                                                          
         LA    R15,CPRG16                                                       
         LA    R0,CP#LRN                                                        
         VCALL XDELSET                                                          
         CLEAR CPFLEARN                                                         
         B     CVNEXT                                                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       UNLEARN -- UNLEARN COMMAND                                              
*                                                                               
*                                                                               
*  DELETE A WORD FROM THE USERS SESSION SPELL DICTIONARY                        
*                                                                               
*                                                                               
*                                                                               
UNLEARN  XPROC LXWA            UNLEARN WORD                                     
         CLEAR LXWA               INITIALIZE WORK AREA TO ZEROS                 
*-                                                                              
*-       SCAN FOR WORD                                                          
*-                                                                              
         SCINFO ,                 RETURNS R1,R0 LOC, LEN OF CMD STR             
         ST    R1,LXSTART         R1 - START OF LINE TO SCAN                    
         ST    R1,LXPTR           R1 - SCAN POINTER,, UPDATED BY                
         AR    R0,R1                   EACH SCAN                                
         ST    R0,LXEND           R0 - END OF LINE TO SCAN                      
         LA    R1,LXPARMS         R1 - SCAN PARAMETER BLOCK                     
         ACALL SCANWORD           SCAN COMMAND FOR WORD TO LEARN                
         IF    NZ,BEGIN           IF NO WORD, BAD REQUEST                       
         ABORT 'Missing UNLEARN word.'                                          
         END                                                                    
*                                                                               
*                                 SCAN REST OF COMMAND                          
         L     R1,LXPTR           R1,R0 - LOC, LEN OF REST OF CMD               
         L     R0,LXEND                                                         
         SR    R0,R1                                                            
         IF    P,BEGIN            IF MORE TO COMMAND, SCAN IT ,,,               
         SCINIT (R1),(R0)                                                       
         SCAN ,,,                 SCAN REMAINDER OF COMMAND                     
         SCANCHK                                                                
         IF    (R0,NZ),BEGIN      NO FURTHER OPTIONS SUPORTED                   
         TSEG  (R1),(R0)                                                        
         TSEG  ': unrecognized UNLEARN option.',,CR                             
         ABORT                                                                  
         END                                                                    
         END                                                                    
         SPACE 2                                                                
*-                                                                              
*-       CALL UNLRNWD ROUTINE TO UNLEARN WORD                                   
*-                                                                              
         LA    R1,LXWORD          R1,R0 - WORD LOC, LEN                         
         L     R0,LXWLEN                                                        
         ACALL UNLRNWD            REMOVE WORD FROM SESSION DICTNRY              
*-                                                                              
*-       DONE. EXIT.                                                            
*-                                                                              
         B     CVNEXT                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       UNLRNWD - UNLEARN WORD                                                  
*                                                                               
*       R1,R0 - WORD ADDRESS, LENGTH                                            
*                                                                               
*                                                                               
*                                                                               
UNLRNWD  XPROC LWWA                                                             
         IF    ((R0,GT,64),OR,(R0,LE,0)),UNLEARND   CHECK WORD LEN              
         ACALL CHECKLRN           IF WORD LEARNED ??                            
         IF    NZ,BEGIN           IF NOT LEARNED, NO NEED TO UNLEARN            
         TSEG 'Word not in user''s dictionary.  Command ignored.',,CR           
         B     UNLEARND                                                         
         END                                                                    
*                                                                               
         COMMENT                  SAVE WORD, BLANK PADDED,                      
         ST    R0,LWWORDLN        AND IN LOWER CASE                             
         L     R2,=A(BLANKS)                                                    
         MVC   LWWORD(64),0(R2)                                                 
         LR    R3,R0                                                            
         DEX   R3,' MVC LWWORD(0),0(R1) '     MOVE WORD                         
         L     R2,=A(LOWERTAB)                                                  
         TR    LWWORD(64),0(R2)                                                 
*                                                                               
*  DELETE WORD FROM RECORD GROUP                                                
*                                                                               
         COMMENT                   DELETE LEARN WORD                            
         LR    R3,R0 R3-WORD LEN                                                
         LA    R15,CPRG16                                                       
         IF    (R3,GT,16),' LA R15,CPRG64'                                      
         LA    R0,CP#LRN                                                        
         VCALL XSETSET             SELECT RG16 OR RG64                          
         LA    R15,CPRG16                                                       
         IF    (R3,GT,16),' LA R15,CPRG64'                                      
         CLEAR R0                                                               
         LA    R1,CVBLANKS                                                      
         LA    R2,LWWORD                                                        
         VCALL XDELETE             PUT WORD AS KEY/ NULL DATA                   
*-                                                                              
*-       IF IN PAGE MODE WITH SPELL, UPDATE SCREEN                              
*-                                                                              
         IF    CPVFPAGE,BEGIN     IF IN PAGE MODE,                              
         SET   CPVFREWR           UPDATE UNLEARNED WORDS ON SCREEN              
         END                                                                    
         B     UNLEARND           BRANCH TO UNLEARN EXIT                        
*                                                                               
*                                                                               
*  DONE. EXIT.                                                                  
UNLEARND LABEL ,                  WORD UNLEARNED, EXIT                          
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'GUESS command'                                                  
*box                                                                            
*                                                                               
*                                                                               
*       GUESS <query word>                                                      
*                                                                               
*                                                                               
*       QUERY SPELLING DICTIONARY,,                                             
*                                                                               
*       THIS ROUTINE CHECKS THE QUERY WORD TO SEE IF IT IS SPELLED              
*       CORRECTLY, IF NOT ALL SIMILAR WORDS ARE LISTED. ALL THE                 
*       WORK IS DONE BY THE GUESSWD ROUTINE.                                    
*                                                                               
*                                                                               
*                                                                               
GGWA     RECORD BEGIN ,           GUESS WORK AREA                               
GGDICPTR DS    F                  DICTIONARY MEMORY ADDRESS                     
         COMMENT                                                                
         COMMENT                  REST OF WORK AREA IS ESSENTIALLY A            
         COMMENT                  COPY OF THE SCAN PARAMETER BLOCK              
GGPARMS  DS    0F                 * PARAMETER BLOCK PASSED TO SCAN              
GGFLAGS  FLAG  ,                  * SCAN FLAGS                                  
         FLAG  GGSPECL            * SCAN SPECIAL,, DEFAULT NO SPECIAL           
         FLAG  GGNOUPP            * DON'T SCAN UPPER, DEFAULT IS SCAN           
GGSTART  DS    F                  * START OF STRING TO SCAN                     
GGPTR    DS    F                  * PLACE TO START SCANNING, UPDATED            
GGEND    DS    F                  * END OF SCAN STRING                          
GGWLEN   DS    F                  * LENGTH OF WORD SCANNED                      
GGWPTR   DS    F                  * POINTER TO WORD IN SCANNED STRING           
GGWORD   DS    CL64               * WORD SCANNED (IN ORIGINAL CASE)             
         END                                                                    
         SPACE 3                                                                
*-                                                                              
*-       GUESS - GUESS command                                                  
*-                                                                              
GUESS    XPROC GGWA                                                             
         CLEAR GGWA               INITIALIZE WORK AREA,,,  ,IT IS               
         ACALL GETDICT            GET DICTIONARY ADDRESS                        
         ST    R1,GGDICPTR        R1 - DICTIONARY ADDR                          
         IF    Z,BEGIN            IF NO DICTIONARY,, ABORT                      
         ABORT 'No spelling dictionary available.  Command ignored.'            
         END                                                                    
*                                                                               
*                                 SCAN QUERY WORD                               
         SCINFO ,                 RETURNS R1,R0 LOC, LEN OF CMD STR             
         ST    R1,GGSTART         R1 - START OF LINE TO SCAN                    
         ST    R1,GGPTR           R1 - SCAN POINTER,, UPDATED EACH              
         AR    R0,R1                                                            
         ST    R0,GGEND           R0 - END OF LINE TO SCAN                      
         LA    R1,GGPARMS         R1 - SCAN PARM BLOCK                          
         ACALL SCANWORD           SCAN TEXT LINE FOR QUERY                      
         IF    NZ,BEGIN           IF NO QUERY, BAD REQUEST                      
         ABORT 'Missing GUESS query.'                                           
         END                                                                    
*                                                                               
*                                 SCAN REST OF COMMAND                          
         L     R1,GGPTR           R1,R0 - LOC, LEN OF REST OF                   
         L     R0,GGEND                   SPELL COMMAND                         
         SR    R0,R1                                                            
         IF    P,BEGIN            IF MORE TO COMMAND SCAN IT,,                  
         SCINIT (R1),(R0)                                                       
         SCAN  GUESSSCN           SCAN REMAINDER OF SPELL COMMAND               
         SCANCHK                                                                
         END                                                                    
*-                                                                              
*-       CALL GUESSWD ROUTINE TO FIND SIMILAR WORDS                             
*-                                                                              
         LA    R1,GGWORD                                                        
         L     R0,GGWLEN          R1,R0 - TEXT WORD ADDR, LENGTH                
         SR    R15,R15            PRINT GUESSES AT TERMINAL                     
         ACALL GUESSWD            SEE IF WORD IS IN DICTIONARY                  
*                                                                               
*                                 FREE DICTNRY LOCK AND EXIT                    
         L     R1,GGDICPTR        R1 - CURRENT DICTIONARY ADDR                  
         ACALL FREEDICT                                                         
         B     CVNEXT                                                           
         PEND  ,                                                                
*  GUESS SCAN OPTIONS                                                           
GUESSSCN SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(SCNINVAL)                                                     
         TITLE 'GUESSWD - find all similar words'                               
*box                                                                            
*                                                                               
*                                                                               
*    GUESSWD - GUESS CORRECT SPELLING, (IE, FIND SIMILAR WORDS)                 
*                                                                               
*       INPUTS:  R1,R0 - WORD LOCATION, LENGTH                                  
*                R15   - 0, OR RETURN AREA FOR GUESS WORDS.                     
*                        AREA SIZE IS ASSUMED TO BE 128 BYTES.                  
*                                                                               
*       OUTPUTS: IF R15=0, SIMILAR WORDS ARE LISTED TO TERMINAL.                
*                IF R15=RETURN AREA, WORDS ARE RETURNED IN AREA                 
*                EACH WORD IS 1 BYTE LENGTH FOLLOWED BY WORD, LIST              
*                IS TERMINATED BY A ZERO LENGTH.                                
*                                                                               
*       RETURN CODES:                                                           
*                R15=0,  RETURN AREA CONTAINS GUESSES                           
*                R15=4,  WORD IS SPELLED CORRECTLY                              
*                R15=8,  NO (GUESSES) SIMILAR WORDS FOUND                       
*                R15=12, GUESSES OVERFLOW 128 BYTE AREA                         
*                R16=16, NO SPELLING DICTIONARY AVAILABLE                       
*                R15=20, INVALID GUESS QUERY, ('*'1 OR '?'1)                    
*                                                                               
*                                                                               
*       THERE ARE THREE MODES OF OPERATION,                                     
*          IF '*' IN WORD, USE UNLIMITED SUBSTITUTION FOR '*'                   
*          IF '?' IN WORD, USE 1-1 LETTER SUBSTITUTIOTION FOR '?'               
*          IF PLAIN WORD, IF CORRECT WE SAY SO, IF NOT CORRECT                  
*               WE GUESS CORRECT (IE. LIST SIMILAR) WORDS                       
*                                                                               
*                                                                               
*                                                                               
GSWA     RECORD BEGIN             GUESS WORK AREA                               
GSRET    DS    F                  RETURN AREA FOR GUESSES                       
GSRETPTR DS    F                  PLACE FOR NEXT GUESS TO RETURN                
GSRETEND DS    F                  END OF RETURN AREA (GSRET+128)                
GSFLAGS  FLAG  ,                                                                
         FLAG  GSPRINT ,,,        GUESSES ARE TO BE PRINTED OUT                 
         FLAG  GSNOFIX ,,,        NO SIMILAR WORDS FOUND                        
GSDADDR  DS    F                  ADDRESS OF DICTNRY MEMORY AREA                
GSDNDX   DS    F                  ADDRESS OF DICTNRY INDEX                      
GSPARMS  DS    0F                 * KEEP * STUFF TOGETHER, PARMS                
GSDPTR   DS    F                  * POINTER TO CURRENT DICTNRY WORD             
GSDEND   DS    F                  * END OF DICTNRY WORD LIST                    
GSDWLEN  DS    F                  * CURRENT DICTNRY WORD LENGTH                 
GSDWORD  DS    CL64               * CURRENT DICTNRY WORD (+4 EXTRA)             
GSWORDLN DS    F                  WORD LENGTH                                   
GSWORD   DS    CL64               WORD TO LOOK UP (IN LOWER CASE)               
GSOCWORD DS    CL64               WORD TO LOOK UP (IN ORIGINAL CASE)            
GSTEMP   DS    CL64               TEMPORARY WORD STORAGE                        
GSBLANKS DS    CL64               BLANKS                                        
GSTEST   DS    CL4                LOOP TEST                                     
         END                                                                    
         SPACE 3                                                                
*box                                                                            
*                                                                               
*                                                                               
*       GUESSWD - FIND SIMILAR WORDS TO ONE GIVEN                               
*                                                                               
*                                                                               
GUESSWD  XPROC GSWA                                                             
*-                                                                              
*-       INITIALIZE WORK AREA MEMORY                                            
*-                                                                              
         LA    R6,GSWA                                                          
         USING GSWA,R6                                                          
         CLEAR GSWA               CLEAR WORK AREA,, AND INITIALIZE IT           
         XPUSH R0,R1              PUSH INPUT PARMS                              
*                                                                               
         IF    (R15,EQ,0),BEGIN   SET UP RETURN AREA,,,                         
         SET   GSPRINT            IF NO RETURN AREA, PRINT RESULTS              
         END   ,                       AT THE TERMINAL                          
         ELSE  BEGIN ,            IF RETURN AREA, WE SET IT UP                  
         ST    R15,GSRET          R15 - RETURN AREA POINTER                     
         ST    R15,GSRETPTR       PLACE FOR NEXT GUESS                          
         MVI   0(R15),X'00'       ZERO MARKS END OF LIST                        
         LA    R15,128(R15)       SAVE END ON RETURN AREA                       
         ST    R15,GSRETEND                                                     
         END                                                                    
*                                                                               
         ACALL GETDICT            GET DICTIONARY ADDRESS                        
         BZ    NODICT             IF NO DICTIONARY, THEN NO GUESS               
         ST    R1,GSDADDR         SAVE DICTIONARY POINTERS                      
         USING DICTNRY,R1                                                       
         LA    R2,DICTNDX         SAVE DICTIONARY INDEX ADDRESS                 
         ST    R2,GSDNDX                                                        
         L     R2,DICTEND         SAVE END OF DICTIONARY                        
         ST    R2,GSDEND                                                        
         DROP  R1                                                               
*                                                                               
         MVI   GSBLANKS,C' '      BLANK ALL WORD STORAGE LOCATIONS              
         MVC   GSBLANKS+1(63),GSBLANKS                                          
         MVC   GSOCWORD(64),GSBLANKS                                            
         MVC   GSWORD(64),GSBLANKS                                              
         MVC   GSDWORD(64),GSBLANKS                                             
         MVC   GSTEMP(64),GSBLANKS                                              
         MVC   GSTEST(4),GSBLANKS                                               
         SET   GSNOFIX            SO FAR NO GUESSES                             
*                                                                               
         XPOP  R0,R1              R1,R0 - WORD ADDRESS, LENGTH                  
         ST    R0,GSWORDLN        SAVE LENGTH                                   
         LR    R5,R0                                                            
         MOVE  R5,GSOCWORD,@R1    SAVE WORD                                     
         MVC   GSWORD(64),GSOCWORD  GET WORD IN LOWER CASE                      
         L     R1,=A(LOWERTAB)                                                  
         TR    GSWORD(64),0(R1)   TRANSLATE WORD TO LOWER CASE                  
         TCCR  ,,,                FORCE OUT ANY OUTSTANDING MESSAGES            
*-                                                                              
*-       SEE IF WORD IS CORRECT, (IE IN DICTIONARY)                             
*-                                                                              
         LTR   R0,R0              IF NO WORD, NO GUESS                          
         BZ    NOGUESS                                                          
         LA    R1,GSWORD          R1 - WORD IN LOWER CASE                       
         L     R0,GSWORDLN        R0 - WORD LENGTH                              
         ACALL CHECKWD            IS WORD IN DICTIONARY ???                     
         BZ    CORRECT            IF WORD IN DICTNRY, ASSUME CORRECT            
         COMMENT                  IF '?' OR '*' IS 1ST CHAR IN WORD,,           
         IF (('CLI GSWORD,C"?"',E),OR,('CLI GSWORD,C"*"',E)),BEGIN              
         B     BADQUERY           '?'1 OR '*'1 IS ILLEGAL IN QUERY              
         END                                                                    
*-                                                                              
*-       BRANCH TO APPROPRIATE GUESS ROUTINE                                    
*-                                                                              
         LA    R1,GSWORD                                                        
         L     R0,GSWORDLN        R1,R0 - WORD ADDRESS, LENGTH                  
         AR    R0,R1                                                            
         LR    R2,R1                                                            
         WHILE (R1,LT,R0),BEGIN                                                 
         CLI   0(R1),C'*'                                                       
         IF    E,BEGIN            IF WORD CONTAINS '*' ,,,,                     
         ACALL GUESSXXX              CHECK USING ANY SUBSTITUTIONS              
         B     GUESSRET                                                         
         END                                                                    
         LA    R1,1(R1)                                                         
         END                                                                    
         LR    R1,R2                                                            
         WHILE (R1,LT,R0),BEGIN                                                 
         CLI   0(R1),C'?'                                                       
         IF    E,BEGIN            IF WORD CONTAINS '?' ,,,,                     
         ACALL GUESSQQQ              CHECK USING ONE CHARACTER PER              
         B     GUESSRET              '?' AS A SUBSTITUTION                      
         END                                                                    
         LA    R1,1(R1)                                                         
         END                                                                    
         COMMENT                  IF NO '?' OR '*' IMBEDDED IN WORD,,           
         ACALL GSIMILAR             FIND ALL SIMILAR WORDS,                     
         B     GUESSRET                                                         
         SPACE 5                                                                
*box                                                                            
*                                                                               
*                                                                               
*       PROCESS VARIOUS GUESS WORD RETURNS                                      
*                                                                               
*                                                                               
CORRECT  LABEL ,                  WORD IS SPELLED CORECTLY                      
         IF    GSPRINT,BEGIN                                                    
         LA    R1,GSOCWORD            SO WE SAY SO                              
         L     R0,GSWORDLN            AND SET CC (R15=4)                        
         TSEG  (R1),(R0)                                                        
         TSEG  ' is spelled correctly.',,CR                                     
         END                                                                    
         LA    R15,4                                                            
         B     GUESSRET                                                         
         SPACE 2                                                                
*                                                                               
NOGUESS  LABEL ,                  NO GUESSES,  GOOD OR BAD                      
         IF    GSPRINT,BEGIN      RETURN CC (R15=8)                             
         TSEG  'No simliar words found in dictionary.'                          
         END                                                                    
         LA    R15,8                                                            
         B     GUESSRET                                                         
         SPACE 2                                                                
*                                                                               
NODICT   LABEL ,                  NO DICTIONARY AVAILABLE                       
         IF    GSPRINT,BEGIN      GIVE MESSAGE AND SET CC (R15=16)              
   TSEG  'No spelling dictionary available. No similar words found.'            
         END                                                                    
         LA    R15,16                                                           
         B     GUESSRET                                                         
         SPACE 2                                                                
*                                                                               
BADQUERY LABEL ,                  ILLEGAL QUERY OF DICTIONARY                   
         IF    GSPRINT,BEGIN      SET CC (R15=20)                               
         TSEG  '"?" and "*" are not accepted as first letter '                  
         TSEG  'in spelling query.',,CR                                         
         END                                                                    
         LA    R15,20                                                           
         B     GUESSRET                                                         
         SPACE 2                                                                
*                                                                               
*        RETURN TO CALLER                                                       
*                                 **************** EXIT >>>>>                   
GUESSRET LABEL ,                                                                
         XPUSH R15                PUSH RETURN CODE                              
         L     R1,GSDADDR         R1 - CURRENT DICTNRY MEMORY ADDR              
         ACALL FREEDICT           FREE DICTNRY USE LOCK, AND RETURN             
         XPOP  R15                                                              
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       GUESSQQQ                                                                
*                                                                               
*       FIND WORDS SIMILAR TO ONE WITH QUESTION MARKS,                          
*            VALID LETTERS ARE USED TO REPLACE QUESTION MARKS.                  
*                                                                               
*       ON INPUT:                                                               
*              GSWORD - CONTAINS WORD WITH QUESTION MARKS FOR                   
*                         UNSURE LETTERS.   (LOWER CASE)                        
*                                                                               
* FOR EXAMPLE, A QUERY OF: CH?MP                                                
* WILL FIND WORDS, ,,,,        CHAMP CHIMP CHOMP CHUMP                          
*                                                                               
*                                                                               
GUESSQQQ PROC  ,                  CHECK FOR SIMILAR WORDS                       
*-                                                                              
*-       WE SEARCH THRU ALL WORDS WITH SAME FIRST 3 LETTERS,                    
*-       GET 1ST 3 LETTERS, OR LESS IF ONE IS '?' OR '*'                        
*-                                                                              
         MVC   GSTEMP(64),GSWORD                                                
         MVC   GSWORD+3(64-3),GSBLANKS    MOVE IN 1ST 3 LETTERS                 
         MVC   GSTEST(4),GSWORD                                                 
         CLI   GSWORD+1,C'?'              IF 2ND LETTER IS '?'                  
         IF    E,BEGIN                      USE ONLY 1ST LETTER                 
         MVC   GSWORD+1(2),=C'  '                                               
         MVC   GSTEST+1(2),=X'FFFF'                                             
         END                                                                    
         CLI   GSWORD+2,C'?'              IF 3RD LETTER IS '?'                  
         IF    E,BEGIN                      USE ONLY 1ST 2 LETTERS              
         MVI   GSWORD+2,C' '                                                    
         MVI   GSTEST+2,X'FF'                                                   
         END                                                                    
         L     R1,GSDNDX          R1 - INDEX ADDRESS                            
         LA    R0,GSWORD          R0 - 1ST 4 CHARS OF GUESS WORD                
         ACALL DSEARCH            INDEX INTO DICTIONARY,,,                      
         ST    R1,GSDPTR          R1 - RETURNS POINTER INTO DICTNRY             
         MVC   GSWORD(64),GSTEMP  RESET WORD                                    
         SET   GSNOFIX            SO FAR, NO SIMILAR WORDS FOUND                
         COMMENT                                                                
         COMMENT                                                                
GSQQLOOP LABEL ,                  LOOP LOOKING FOR SIMILAR WORDS                
         COMMENT                                                                
         COMMENT                                                                
         LA    R1,GSPARMS         R1 - PARMS TO PASS TO NEXTDICT                
         ACALL NEXTDICT           GET NEXT WORD FROM DICTIONARY                 
         BNZ   GSQQDONE           IF END OF DICTIONARY, WE ARE DONE             
         CLC   GSDWORD(3),GSTEST  ARE THE FIRST LETTERS STILL                   
         BH    GSQQDONE               THE SAME AS IN QUERY WORD                 
         COMMENT                      IF NOT, WE ARE DONE                       
         L     R0,GSDWLEN         R0 - DICTIONARY WORD LENGTH                   
         C     R0,GSWORDLN        IF WORD NOT SAME LENGTH, LOOP                 
         BNE   GSQQLOOP                                                         
         BEGIN ,                  IF WORD LENGTHS ARE THE SAME,                 
         LA    R1,GSWORD              CHECK TO SEE IF SIMILAR WORDS             
         LA    R2,GSDWORD             R1 - WORD, R2 - DICTNRY WORD              
         LR    R3,R1                  R3 - END OF WORD                          
         AR    R3,R0                                                            
         WHILE (R1,LT,R3),BEGIN   COMPARE ALL NON '?' LETTERS                   
         CLI   0(R1),C'?'                                                       
         IF    NE,BEGIN               FOR MATCH, ALL MUST MATCH                 
         CLC   0(1,R1),0(R2)                                                    
         BNE   GSQQLOOP               IF NO MATCH, LOOP TO NEXT                 
         END   ,                            WORD                                
         LA    R1,1(R1)                                                         
         LA    R2,1(R2)                                                         
         END                                                                    
         COMMENT                                                                
GSQQYES  LABEL ,                  SIMILAR WORDS, FALL THRU TO HERE              
         LA    R1,GSDWORD         R1,R0 - WORD ADDRESS, LENGTH                  
         L     R0,GSDWLEN         WE OUTPUT OR RETURN GUESS TO                  
         ACALL GSLIST               IN PROPER FORMAT                            
         B     GSQQLOOP           GO LOOK FOR NEXT SIMILAR WORD                 
         END                                                                    
         SPACE                                                                  
GSQQDONE LABEL ,                  END OF SIMILAR WORD SEARCH,                   
         SR    R0,R0              IF FOUND SIMILAR WORDS,                       
         ACALL GSLIST               FORCE OUT LAST LINE OF THEM                 
         COMMENT                    IF ANY                                      
         PEND  ,                  RESTORE AND RETURN                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       GUESSXXX                                                                
*                                                                               
*       FIND WORDS SIMILAR TO ONE CONTAINING '*' CHARACTERS.                    
*          VALID LETTERS ARE USED TO REPLACE THE '*' CHARACTERS.                
*                                                                               
*       ON INPUT:                                                               
*          GSWORD   - CONTAINS WORD WITH '*' CHARACTERS FOR                     
*                     UNSURE LETTERS.   (IN LOWER CASE)                         
*                                                                               
* FOR EXAMPLE, A QUERY OF: OR*ATION                                             
* WILL FIND WORDS, ,,,,     ORATION, ORGANIZATION, ORIENTATION, ....            
*                                                                               
*                                                                               
* THE BIG DIFFERENCE BETWEEN '?' AND '*' IN A QUERY WORD IS THAT                
* '?' IS REPLACED BY LETTERS IN A ONE TO ONE FASHION, WHILE '*'                 
* IS REPLACED BY SUBSTITUTIONS OF ANY NUMBER OF LETTERS. SEE                    
* ABOVE EXAMPLE.                                                                
*                                                                               
*                                                                               
GUESSXXX PROC  ,                  CHECK FOR SIMILAR WORDS                       
*-                                                                              
*-       WE SEARCH THRU ALL WORDS WITH SAME FIRST 3 LETTERS,                    
*-       GET 1ST 3 LETTERS, OR LESS IF ONE IS '?' OR '*'                        
*-                                                                              
         MVC   GSTEMP(64),GSWORD                                                
         MVC   GSWORD+3(64-3),GSBLANKS    MOVE IN 1ST 3 LETTERS                 
         MVC   GSTEST(4),GSWORD                                                 
         CLI   GSWORD+1,C'?'              IF 2ND LETTER IS '?'                  
         IF    E,BEGIN                      USE ONLY 1ST LETTER                 
         MVC   GSWORD+1(2),=C'  '                                               
         MVC   GSTEST+1(2),=X'FFFF'                                             
         END                                                                    
         CLI   GSWORD+2,C'?'              IF 3RD LETTER IS '?'                  
         IF    E,BEGIN                      USE ONLY 1ST 2 LETTERS              
         MVI   GSWORD+2,C' '                                                    
         MVI   GSTEST+2,X'FF'                                                   
         END                                                                    
         CLI   GSWORD+1,C'*'              IF 2ND LETTER IS '*'                  
         IF    E,BEGIN                      USE ONLY 1ST LETTER                 
         MVC   GSWORD+1(2),=C'  '                                               
         MVC   GSTEST+1(2),=X'FFFF'                                             
         END                                                                    
         CLI   GSWORD+2,C'*'              IF 3RD LETTER IS '*'                  
         IF    E,BEGIN                      USE ONLY 1ST 2 LETTERS              
         MVI   GSWORD+2,C' '                                                    
         MVI   GSTEST+2,X'FF'                                                   
         END                                                                    
*                                                                               
*                                 SEARCH FOR SIMILAR WORDS,,,                   
         L     R1,GSDNDX          R1 - INDEX ADDRESS                            
         LA    R0,GSWORD          R0 - 1ST 4 CHARS OF GUESS WORD                
         ACALL DSEARCH            INDEX INTO DICTIONARY,,,                      
         ST    R1,GSDPTR          R1 - RETURNS POINTER INTO DICTNRY             
         MVC   GSWORD(64),GSTEMP  RESET WORD                                    
         SET   GSNOFIX            SO FAR, NO SIMILAR WORDS FOUND                
         COMMENT                                                                
         COMMENT                                                                
GSXXLOOP LOOP  BEGIN  ,           LOOP LOOKING FOR SIMILAR WORDS                
         COMMENT                                                                
         COMMENT                                                                
         LA    R1,GSPARMS         R1 - PARMS TO PASS TO NEXTDICT                
         ACALL NEXTDICT           GET NEXT WORD FROM DICTIONARY                 
         BNZ   GSXXDONE           IF END OF DICTIONARY, WE ARE DONE             
         L     R0,GSDWLEN         R0 - DICTIONARY WORD LENGTH                   
         CLC   GSDWORD(3),GSTEST  ARE THE FIRST LETTERS STILL THE               
         BH    GSXXDONE               THE SAME AS IN QUERY WORD                 
         COMMENT                      IF NOT, WE ARE DONE                       
*                                                                               
*  WE SEARCH ALL WORDS,  REGISTER USAGE IS AS FOLLOWS                           
*                                                                               
*  R0 - DICTIONARY WORD LENGTH                                                  
*  R1 - WORD INDEX                                                              
*  R2 - DICTIONARY WORD INDEX                                                   
*  R4 - END OF DICTIONARY WORD INDEX   (1ST MATCH ENDING CHAR)                  
* R14 - END OF WORD INDEX              (1ST NON MATCH ENDING CHAR)              
*                                                                               
*      OR*N*ATION               ORGANIZATION                                    
*        | |                      |    |                                        
*       R1 R14                   R2    R4                                       
*                                                                               
*  NOTE:  ABOVE REGISTERS ARE INDEXS. THEY CHANGE, THE EXAMPLE                  
*         REPRESENTS ONLY ONE POINT IN TIME.  DIG IT.                           
*                                                                               
*  COMPARE ENDS OF WORDS                                                        
         LA    R14,GSWORD         R14 - END OF WORD                             
         A     R14,GSWORDLN                                                     
         LA    R4,GSDWORD         R4 - END OF DICTNRY WORD                      
         AR    R4,R0                                                            
         LOOP  BEGIN ,            COMPARE THE END OF THE WORDS                  
         BCTR  R4,0                                                             
         BCTR  R14,0                                                            
         CLI   0(R14),C'?'          '?' MATCHES WITH ANY LETTER                 
         IF    NE,BEGIN             IF NOT '?', CHECK FOR MATCH                 
         CLC   0(1,R4),0(R14)                                                   
         END                                                                    
         UNTIL NE                 LOOP UNTIL ENDINGS DO NOT MATCH               
         END   ,                                                                
         LA    R4,1(R4)           R4 - LAST ENDING CHAR TO MATCH                
         CLI   0(R14),C'*'        IF MATCH DID NOT BOMB ON '*'                  
         BNE   GSXXLOOP             THEN NO MATCH, SO WE LOOP TO NEXT           
         COMMENT                                                                
*  COMPARE START OF WORDS                                                       
         LA    R1,GSWORD-1        R1 - WORD INDEX                               
         LA    R2,GSDWORD-1       R2 - DICTIONARY WORD INDEX                    
         LOOP  BEGIN ,                                                          
         LA    R1,1(R1)           CHECK TO SEE IF BEGINNING OF WORDS            
         LA    R2,1(R2)                       ARE SIMILAR                       
         CLI   0(R1),C'?'           '?' MATCHES WITH ANY LETTER                 
         IF    NE,BEGIN             IF NOT '?', CHECK FOR MATCH                 
         CLC   0(1,R2),0(R1)                                                    
         END                                                                    
         UNTIL NE                 LOOP UNTIL BEGINNINGS DO NOT MATCH            
         END   ,                                                                
         CLI   0(R1),C'*'         IF MATCH DID NOT BOMB ON '*'                  
         BNE   GSXXLOOP             THEN NO MATCH, SO WE LOOP TO NEXT           
         CR    R2,R4              IF START MATCHED INTO END,,                   
         BH    GSXXLOOP             THEN NO MATCH                               
         CR    R1,R14             IF WE MET IN MIDDLE OF WORD,                  
         BE    GSXXYES               WE HAVE VALID MATCH !!!! ****              
         LA    R1,1(R1)              ELSE WE BUMP R1 PAST '*'                   
         COMMENT                                                                
*  RIPPLE TEST MIDDLE OF DICT WORD COMPARING TO MIDDLE OF WORD.                 
         COMMENT                  NOW WE CHECK MIDDLE LETTERS FOR               
         COMMENT                     TO SEE IF THEY MATCH                       
         COMMENT                                                                
         COMMENT                  LOOK MOM NO HANDS,  FEW COMMENTS !            
         LOOP  BEGIN ,            OH YEAH                                       
         LR    R3,R1              R3 - PART TO TEST AGAINST DICTNRY             
         BCTR  R1,0                                                             
         BCTR  R2,0                                                             
         LOOP  BEGIN ,            COMPARE WORD MIDDLE TO                        
         LA    R1,1(R1)                TO DICTNRY WORD MIDDLE                   
         LA    R2,1(R2)                                                         
         CLI   0(R1),C'?'              '?' MATCHES ALL                          
         IF    NE,BEGIN                IF NOT '?', CHECK FOR MATCH              
         CLC   0(1,R1),0(R2)                                                    
         END                                                                    
         UNTIL NE                                                               
         END                                                                    
         CR    R2,R4              IF MIDDLE MATCHED INTO END,,                  
         BH    GSXXLOOP             THEN NO MATCH                               
         CR    R1,R14             IF FRONT MATCH UNTIL END MATCH,,              
         BE    GSXXYES              THEN WE HAVE VALID MATCH                    
         CLI   0(R1),C'*'         IF MATCHED UP TO NEXT '*'                     
         IF    E,BEGIN              THEN WE CONTINUE TO CHECK NEXT              
         LA    R1,1(R1)             PART OF MIDDLE.  THIS HAPPENS               
         COMMENT                    ON MULTIPLE '*'S                            
         END                                                                    
         ELSE  BEGIN ,            IF NO MATCH, RIPPLE THROUGH                   
         SR    R1,R3                MIDDLE OF DICTNRY WORD                      
         SR    R2,R1                BACK UP BOTH WORD INDEXES                   
         LA    R2,1(R2)             ADVANCE DICTNRY INDEX BY ONE                
         LR    R1,R3                                                            
         END                                                                    
         END   ,                  LOOP, WE KEEP LOOPING                         
         COMMENT                                                                
         SPACE                                                                  
         COMMENT                                                                
GSXXYES  LABEL ,                  SIMILAR WORDS, FALL THRU TO HERE              
         LA    R1,GSDWORD         R1,R0 - WORD ADDRESS, LENGTH                  
         L     R0,GSDWLEN         WE OUTPUT OR RETURN GUESSES IN                
         ACALL GSLIST                PROPER FORMAT                              
         B     GSXXLOOP           GO LOOK FOR NEXT SIMILAR WORD                 
         END   ,                  OF CKXXLOOP                                   
         SPACE                                                                  
GSXXDONE LABEL ,                  END OF SIMILAR WORD SEARCH,                   
         SR    R0,R0              IF FOUND SIMILAR WORDS,                       
         ACALL GSLIST               FORCE OUT LAST LINE OF THEM                 
         COMMENT                    IF ANY                                      
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       GSIMILAR                                                                
*                                                                               
*                                                                               
*                                                                               
* GET SIMILAR WORDS TO MISSPELLED WORD                                          
*                                                                               
* ON ENTRY:                                                                     
*       MISPELLED WORD IS IN VARIABLE: WORD,                                    
* ON EXIT:                                                                      
*       PRINTS SIMILAR, BUT CORRECTLY SPELLED WORDS PRINTED AT                  
*       TERMINAL                                                                
*                                                                               
*   WE FIND SIMILAR WORDS BY ASSUMMING THAT THE ERROR IS ONE                    
* OF THE FOLLOWING:                                                             
*       1. ONE LETTER IS MISSING                                                
*       2. ONE LETTER IS ADDED                                                  
*       3. ONE LETTER IS WRONG                                                  
*       4. TWO LETTERS ARE EXCHANGED                                            
* TO IMPLEMENT CHECK FOR THESE ERRORS, WE COMPARE THE BEGINING                  
* AND THE ENDING OF THE WORDS, IF THEY MATCH ALL THE WAY TO                     
* SOMEPLACE IN THE MIDDLE, AND THEY MATCH TO WITHIN ONE CHARACTER               
* THEN WE HAVE A SIMILAR WORD.  THINK ABOUT IT.  DOES IT WORK OUT ??            
*                                                                               
* FURTHERMORE TO INCREASE EFFICIENCY, WE ASSUME THAT THE FIRST TWO              
* LETTERS ARE CORRECT, THIS LIMITS THE NUMBER OF WORDS WE MUST                  
* SURVEY.  IF NO SIMILAR WORDS ARE FOUND, THEN WE ASSUME ONLY THE               
* FIRST LETTER IS CORRECT.  IF STILL NO SIMILAR WORDS ARE FOUND,                
* WE GIVE UP.                                                                   
*                                                                               
*       THEREFORE      BREECH     REMIMD    RECEIVE                             
*       THERFORE       BRECH      REMIND    RECIEVE                             
*   CHECK OUT FIX FINDING,, DOES ALGORITHM REALLY WORK ??                       
*                                                                               
*                                                                               
GSIMILAR PROC  ,     , ,,          GET SIMILAR WORDS                            
         COMMENT                                                                
         MVC   GSTEMP(64),GSWORD                                                
         MVC   GSWORD+2(64-2),GSBLANKS ASSUME 1ST 2 CHARS ARE OK                
         L     R1,GSDNDX          R1 - INDEX ADDRESS                            
         LA    R0,GSWORD          R0 - 1ST 4 CHARS OF GUESS WORD                
         ACALL DSEARCH            INDEX INTO DICTIONARY,,,                      
         ST    R1,GSDPTR          R1 - RETURNS POINTER INTO DICTNRY             
         MVC   GSWORD(64),GSTEMP  RESET WORD                                    
         MVC   GSTEST(2),GSWORD   SET LOOP TEST                                 
         CLC   GSWORDLN(4),=F'3'                                                
         BL    GSSSDONE           IF WORD LENGTH < 3, NOOP REQUEST              
         SET   GSNOFIX            SO FAR, NO SIMILAR WORDS FOUND...             
         COMMENT                                                                
         COMMENT                                                                
*                                                                               
*                                                                               
FINDLOOP LOOP  BEGIN ,            LOOP THRU WORDS IN ALPHABETICAL               
         COMMENT                    ORDER SEARCHING FOR A SIMILAR ONE           
         COMMENT                                                                
         LA    R1,GSPARMS                                                       
         ACALL NEXTDICT           GET NEXT WORD FROM DICTIONARY                 
         BNZ   GSSSDONE           IF END OF DICTIONARY, WE ARE DONE             
         L     R0,GSDWLEN            R0 - DICTNRY WORD LENGTH                   
         LR    R3,R0                 R3 - DICTNRY WORD LENGTH,,                 
         COMMENT                     MUST BE +/-1 OF WORD LENGTH,,              
         L     R15,GSWORDLN                                                     
         LR    R14,R15               R15 - MISPELLED WORD LENGTH +1             
         LA    R15,1(R15)            R14 - MISPELLED WORD LENGTH -1             
         BCTR  R14,0                                                            
         IF    ((R3,GE,R14),AND,(R3,LE,R15)),BEGIN  CHECK LENGTH OUT            
*-                                                                              
*-       WE HAVE ONE EXTRA LETTER IN MISSPELLED WORD                            
*-                                                                              
         IF    (R3,EQ,R14),BEGIN  *** WE HAVE ONE LETTER EXTRA ***              
         LA    R1,GSWORD-1                                                      
         LA    R2,GSDWORD-1                                                     
         LOOP  BEGIN              COMPARE BEGINING OF WORD                      
         LA    R1,1(R1)                                                         
         LA    R2,1(R2)                                                         
         CLC   0(1,R1),0(R2)                                                    
         UNTIL NE                                                               
         END                                                                    
         LA    R4,GSWORD+1(R3)              (ONE EXTRA LETTER)                  
         LA    R5,GSDWORD(R3)                                                   
         LOOP  BEGIN              COMPARE ENDING OF WORD                        
         BCTR  R4,0                                                             
         BCTR  R5,0                                                             
         CLC   0(1,R4),0(R5)                                                    
         UNTIL NE                                                               
         END                                                                    
         CR    R1,R4              DID WE ERROR AT ONE LETTER IN                 
         BNL   GOTAFIX             IN MIDDLE OF WORD?  YES, GOT FIX             
         END                                                                    
*-                                                                              
*-       WE HAVE ON MISSING LETTER IN MISSPELLED WORD                           
*-                                                                              
         IF    (R3,EQ,R15),BEGIN  *** WE HAVE ONE MISSING LETTER ***            
         LA    R1,GSWORD-1                                                      
         LA    R2,GSDWORD-1                                                     
         LOOP  BEGIN              COMPARE BEGINING OF WORD                      
         LA    R1,1(R1)                                                         
         LA    R2,1(R2)                                                         
         CLC   0(1,R1),0(R2)                                                    
         UNTIL NE                                                               
         END                                                                    
         LA    R4,GSWORD-1(R3)            (ONE MISSING LETTER)                  
         LA    R5,GSDWORD(R3)                                                   
         LOOP  BEGIN              COMPARE ENDING OF WORD                        
         BCTR  R4,0                                                             
         BCTR  R5,0                                                             
         CLC   0(1,R4),0(R5)                                                    
         UNTIL NE                                                               
         END                                                                    
         CR    R2,R5              DID COMPARES MEET IN MIDDLE OF WORD           
         BNL   GOTAFIX             IF SO, WE GOT A SIMILAR WORD                 
         END                                                                    
*-                                                                              
*-       WORDS OF EQUAL LENGTH                                                  
*-                                                                              
         IF    (R3,EQ,GSWORDLN),BEGIN   *** WORDS EQUAL IN LENGTH ***           
         LA    R1,GSWORD-1                                                      
         LA    R2,GSDWORD-1                                                     
         LOOP  BEGIN              COMPARE BEGINING OF WORD                      
         LA    R1,1(R1)                                                         
         LA    R2,1(R2)                                                         
         CLC   0(1,R1),0(R2)                                                    
         UNTIL NE                                                               
         END                                                                    
         LA    R4,GSWORD(R3)                                                    
         LA    R5,GSDWORD(R3)                                                   
         LOOP  BEGIN              COMPARE ENDINGS OF WORDS                      
         BCTR  R4,0                                                             
         BCTR  R5,0                                                             
         CLC   0(1,R4),0(R5)                                                    
         UNTIL NE                                                               
         END                                                                    
         CR    R1,R4              IF ONLY ONE LETTER IN ERROR,                  
         BE    GOTAFIX              WE GOT A SIMILAR WORD                       
         LA    R1,1(R1)                                                         
         CR    R1,R4              IF TWO LETTER ERROR,,                         
         IF    E,BEGIN            SEE IF WE HAVE EXCHANGED LETTERS              
         BCTR  R1,0                                                             
         CLC   0(1,R1),1(R2)                                                    
         IF    E,BEGIN                                                          
         CLC   1(1,R1),0(R2)             COMPARE FOR EXCHANGED LCHARS           
         BE    GOTAFIX                                                          
         END                                                                    
         END                                                                    
         END   ,, END OF = LENGTHS                                              
*                                                                               
*                                                                               
         END   ,, END OF THIS WORD CHECK                                        
         COMMENT                                                                
         COMMENT                  LOOP THRU ALL WORDS IN DICTIONARY             
         COMMENT                   THAT START WITH SAME TWO CHARS               
         CLC   GSDWORD(2),GSTEST                                                
         UNTIL GT                                                               
         END                                                                    
*                                                                               
*                                                                               
         COMMENT                  DONE WITH GUESS SEARCH !!                     
         B     GSSSDONE                                                         
         SPACE 4                                                                
GOTAFIX  LABEL ,                  WE HAVE A SIMILAR WORD PRINT, IT              
         LA    R1,GSDWORD         R1,R0 - WORD ADDRESS AND LENGTH               
         L     R0,GSDWLEN                                                       
         ACALL GSLIST             OUTPUT OR RETURN WORD TO CALLER               
         B     FINDLOOP           LOOP LOOKING FOR MORE WORDS                   
         SPACE 2                                                                
GSSSDONE LABEL ,                  WE HAVE FOUND AND PRINTED ALL                 
         COMMENT                    ALL SIMILAR WORDS, WE RETURN                
         IF    GSNOFIX,BEGIN                                                    
         CLI   GSTEST+1,X'FF'     IF NO FIXES ON FIRST TWO LETTERS,             
         IF    NE,BEGIN             ASSUME ONLY THE FIRST LETTER IS             
         MVI   GSTEST+1,X'FF'       IS CORRECT   (WILL LOOP THRU ALL)           
         MVC   GSTEMP(64),GSWORD    WE RESET DICTIONARY POINTER                 
         MVC   GSWORD+1(64-1),GSBLANKS USING ONLY 1ST LETTER                    
         L     R1,GSDNDX          R1 - INDEX ADDRESS                            
         LA    R0,GSWORD          R0 - 1ST 5 CHARS OF GUESS WORD                
         ACALL DSEARCH            INDEX INTO DICTIONARY,,,                      
         ST    R1,GSDPTR          R1 - RETURNS POINTER INTO DICTNRY             
         MVC   GSWORD(64),GSTEMP  RESET WORD                                    
         B     FINDLOOP                                                         
         END                                                                    
         END                                                                    
         COMMENT                  IF WE ARE DONE SEARCHING, FINISH              
         SR    R0,R0                ALL END PROCESSING OF SIMILAR               
         ACALL GSLIST               WORD LIST                                   
         PEND  ,                  FINALLY, WE RETURN                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       GSLIST - FORMAT OUTPUT OF GUESSED WRODS,,,,                             
*                                                                               
*       R1, R0 - LOC, LENGTH OF GUESS                                           
*                                                                               
*  IF R0=0, FORCE OUT ALL BUFFERS,                                              
*  IF GSPRINT FLAG IS OFF, DO NOT PRINT RESULTS, PLACE IN RETURN                
*     AREA. IF GSPRINT ON, WE PRINT.                                            
*                                                                               
*                                                                               
GSLIST   PROC  ,     ,,,          PRINT OR RETURN GUESSES                       
*-                                                                              
*-       IF PRINT, PRINT GUESSES AT TERMINAL                                    
*-                                                                              
         IF    GSPRINT,BEGIN      IF PRINT, TYPE GUESSES TO TERMINAL            
         IF    (R0,NE,0),BEGIN    IF ELEMENT, TYPE IT                           
         IF    GSNOFIX,BEGIN      IF FIRST GUESS, TYPE HEADER                   
         XPUSH R0,R1                                                            
         TSEG  'Similar Words: '                                                
         CLEAR GSNOFIX                                                          
         XPOP  R0,R1                                                            
         END                                                                    
         ACALL TLIST              LIST GUESS AT TERMINAL                        
         END                                                                    
         ELSE  BEGIN ,,,          IF R0=0, END OF LIST PROCESSING               
         IF    GSNOFIX,BEGIN      IF NO GUESSES                                 
         TSEG  'No similar words found in dictionary.'                          
         END                                                                    
         ELSE  BEGIN ,,,          IF ^GSNOFIX AND R0=0                          
         ACALL TLIST              FORCE OUT REMAINING GUESSES                   
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       IF NO PRINT, JUST RETURN GUESSES TO CALLER                             
*-                                                                              
         IF    ^GSPRINT,BEGIN     IF NO PRINT, WE RETURN GUESS LIST             
         IF    (R0,NE,0),BEGIN    IF GUESS TO RETURN,,,                         
         CLEAR GSNOFIX            SET WE HAVE GUESSES FLAG                      
         L     R2,GSRETPTR        R2 - POINTER TO GUESS LIST                    
         L     R3,GSRETEND        R3 - END OF GUESS LIST                        
         LR    R4,R0              R4 - LENGTH OF GUESS                          
         LA    R5,1(R4,R2)        R5 - END OF GUESS IN LIST                     
         ST    R5,GSRETPTR                                                      
         CR    R5,R3                                                            
         IF    L,BEGIN            IF WORD WILL FIT IN LIST, ,,,                 
         STC   R0,0(R2)                 SAVE GUESS LENGTH                       
         DEX   R4,' MVC 1(0,R2),0(R1)'  SAVE GUESS                              
         LA    R2,2(R4,R2)        BUMP AND SAVE RETURN LIST POINTER             
         SR    R4,R4                                                            
         STC   R4,0(R2)           MARK END OF LIST                              
         END                                                                    
         END                                                                    
         ELSE  BEGIN ,,,          IF R0=0, WE ARE DONE GUESSING,,,              
         SR    R15,R15            WE SET CC, ASSUME CC IS ZERO,                 
         IF    (GSRETPTR,EQ,GSRET),' LA R15,8 '     NO GUESSES                  
         IF    (GSRETPTR,GT,GSRETEND),' LA R15,12 ' GUESS OVERFLOW              
         END                                                                    
         END                                                                    
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'CHECKWD - See if word is in spelling dictionary'                
*box                                                                            
*                                                                               
*                                                                               
*    CHECKWD - SEE IF WORD IS IN DICTIONARY                                     
*                                                                               
*       INPUTS:  R1,R0 - WORD LOCATION, LENGTH                                  
*                                                                               
*       OUTPUTS:  R15 - 0=FOUND, NZ=NOT FOUND, CC SET ON RETURN                 
*                                                                               
*                                                                               
*       WE FIRST DO A BINARY SEARCH OF THE DICTIONARY INDEX,                    
*       WE LINEARLY SEARCH FOR WORD FROM THERE.                                 
*                                                                               
*                                                                               
*                                                                               
*    THIS ROUTINE MUST BE OPTIMIZED, IT IS CRITICAL FOR TO THE                  
*    PERFORMANCE OF ALL WYLBUR SPELL COMMANDS !!!!!!!!!!!!!!!!!                 
*                                                                               
CXWA     RECORD BEGIN                                                           
CXDADDR  DS    F                  ADDRESS OF DICTNRY MEMORY AREA                
CXDNDX   DS    F                  ADDRESS OF DICTNRY INDEX                      
CXPARMS  DS    0H                 * KEEP * STUFF TOGETHER, PARMS                
CXDPTR   DS    F                  * POINTER TO CURRENT DICTNRY WORD             
CXDEND   DS    F                  * END OF DICTNRY WORD LIST                    
CXDWLEN  DS    F                  * CURRENT DICTNRY WORD LENGTH                 
CXDWORD  DS    CL64               * CURRENT DICTNRY WORD                        
CXWORDLN DS    F                  LENGTH OF WORD TO LOOK UP                     
CXWORD   DS    CL64               WORD TO LOOK UP (IN LOWER CASE)               
         END                                                                    
         SPACE 3                                                                
*box                                                                            
*                                                                               
*                                                                               
*       CHECKWD - SEE IF WORD IS IN DICTIONARY                                  
*                                                                               
*                                                                               
CHECKWD  XPROC CXWA                                                             
*                                 INITIALIZE WORK AREA MEMORY                   
*                                                                               
         CLEAR CXWA               CLEAR WORK AREA,, AND INITIALIZE IT           
         LR    R4,R1              R4,R5 - WORD ADDRESS, LENGTH                  
         LR    R5,R0                                                            
         ACALL GETDICT            GET DICTIONARY ADDRESS                        
         IF    Z,BEGIN            IF NO DICTIONARY, EXIT CC=0                   
         SR    R15,R15                                                          
         B     CXUPEXIT                                                         
         END                                                                    
         ST    R1,CXDADDR         SAVE DICTIONARY POINTERS                      
         USING DICTNRY,R1                                                       
         LA    R2,DICTNDX         SAVE DICTIONARY INDEX ADDRESS                 
         ST    R2,CXDNDX                                                        
         L     R2,DICTEND         SAVE END OF DICTIONARY                        
         ST    R2,CXDEND                                                        
         DROP  R1                                                               
         L     R1,=A(BLANKS)      BLANK ALL WORD STORAGE LOCATIONS              
         MVC   CXWORD(64),0(R1)                                                 
         MVC   CXDWORD(64),0(R1)                                                
         LR    R1,R4                                                            
         LR    R0,R5              R1,R0 - WORD ADDRESS, LENGTH                  
         ST    R0,CXWORDLN        SAVE LENGTH                                   
         MOVE  R5,CXWORD,@R1      SAVE WORD                                     
         L     R1,=A(LOWERTAB)                                                  
         TR    CXWORD(64),0(R1)   TRANSLATE WORD TO LOWER CASE                  
*-                                                                              
*-       BINARY SEARCH INDEX, THEN LINEAR SEARCH DICTIONARY                     
*-                                                                              
         L     R1,CXDNDX          R1 - INDEX ADDRESS                            
         LA    R0,CXWORD          R0 - 1ST 4 CHARS OF LOOK UP WORD              
         ACALL DSEARCH            INDEX INTO DICTIONARY                         
         ST    R1,CXDPTR          R1 - RETURNS PTR INTO DICTNRY                 
         LOOP  BEGIN              LINEAR SEARCH LOOP                            
         LA    R1,CXPARMS         R1 - ADDRESS OF PARMS FOR NEXTDICT            
         ACALL NEXTDICT           GET NEXT DICTNRY WORD                         
         BNZ   NOMATCH            IF END OF DICTNRY, NO MATCH FOUND             
         CLC   CXWORD(64),CXDWORD  COMPARE WORDS,,,                             
         BE    MATCH              FOUND                                         
         BL    NOMATCH            NOT FOUND                                     
         COMMENT                  OR KEEP LOOKING                               
         END   , OF LOOP                                                        
         SPACE 3                                                                
MATCH    LABEL ,                  IF WORD FOUND IN DICTIONARY,,,                
         SR    R15,R15            SET CC=0                                      
         B     CXUPEXIT                                                         
         SPACE                                                                  
NOMATCH  LABEL ,                                                                
         LA    R1,CXWORD                                                        
         L     R0,CXWORDLN        IF WORD NOT FOUND IN DICTIONARY,,             
         ACALL CHECKLRN           CHECK USER LEARNED WORDS FOR A                
         COMMENT ,                   A MATCH, ROUTINE SETS CC,                  
         COMMENT ,                   CC=0 IF MATCH, CC=NZ IF NOT                
         B     CXUPEXIT                                                         
         SPACE                                                                  
CXUPEXIT LABEL ,                                                                
         XPUSH R15                PUSH RETURN CODE                              
         L     R1,CXDADDR         R1 - CURRENT DICTNRY MEMORY ADDR              
         ACALL FREEDICT           FREE DICTNRY USE LOCK, AND RETURN             
         XPOP  R15                                                              
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*   BINARY SEARCH DICTIONARY INDEX                                              
*                                                                               
*       INPUT:    R1 - DICTIONARY INDEX ADDRESS                                 
*                 R0 - ADDR OF FIRST 5 CHARS IN WORD TO LOOK UP                 
*                                                                               
*       OUTPUT:   R1 - DICTIONARY POINTER                                       
*                                                                               
*                                                                               
DSEARCH  PROC  ,     R2 THRU R8                                                 
         LR    R2,R0              R2 - 1ST 5 CHARS OF WORD                      
         LR    R3,R1              R3 - POINTER TO NDX ENTRY                     
         L     R4,=AL4(8192*8/2)  R4 - LENGTH OF INDEX/2                        
         LA    R5,12              R5 - NUMBER OF SEARCH ITERATIONS              
         AR    R3,R4              START BINARY SEARCH W/MIDDLE ENTRY            
         WHILE (R5,GT,0),BEGIN    DO BINARY SEARCH                              
         SRL   R4,1                                                             
         CLC   0(5,R2),NDX(R3)    COMPARE WORD TO NDX ENTRY                     
         IF    GT,BEGIN           AND MOVE UP OR DOWN APPROPRIATELY             
         AR    R3,R4                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         SR    R3,R4                                                            
         END                                                                    
         BCTR  R5,0                                                             
         END                                                                    
         COMMENT                  MAKE FINAL ADJUSTMENT,,,                      
         CLC   0(5,R2),NDX(R3)    COMPARE WORD TO INDEX ENTRY                   
         IF    LT,' S R3,=F'8' '  IF STILL <,, BACK UP ONE ENTRY                
         COMMENT                  R3 - INDEX ENTRY FOR WORD                     
         L     R1,NLINK(R3)       R1 - POINTER INTO DICTIONARY                  
         CLRHI R1                 CLEAR 5TH LETER OUT OF HOB.                   
         PRETURN (R0,R1)                                                        
         PEND  ,              RETURN                                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*    NEXTDICT - GET NEXT DICTIONARY WORD IN LIST                                
*                                                                               
*       INPUT:  R1 - PARMS POINTER, SEE ND WORK AREA                            
*                                                                               
*       OUTPUT: R15=0 - OK,, R15=NZ - END OF DICTIONARY                         
*               PARM AREA VALUES UPDATED. SEE WORK AREA                         
*                                                                               
*                                                                               
*                                                                               
*    THIS ROUTINE MUST BE OPTIMIZED, IT IS CRITICAL FOR TO THE                  
*    PERFORMANCE OF ALL WYLBUR SPELL COMMANDS !!!!!!!!!!!!!!!!!                 
*                                                                               
*                                                                               
*                                                                               
*    EACH WORD MUST BE UNPRESSED, THE LEADING BLANK AXED, AND THE               
*    COMMON STARTING CHARACTERS ARE LEFT FROM THE PREVIOUS WORD                 
*    (FOUND IN NDDWORD ON ENTRY)                                                
*                                                                               
NDWA     RECORD BEGIN ,,,                                                       
NDPARMS  DS    0F                 * PARMS PASSED TO ROUTINE                     
NDDPTR   DS    F                  * POINTER TO CURRENT DICTNRY WORD             
NDDEND   DS    F                  * END OF DICTNRY WORD LIST                    
NDDWLEN  DS    F                  * LENGTH OF CURRENT DICTNRY WORD              
NDDWORD  DS    CL64               * CURRENT DICTNRY WORD                        
NDPARMLN EQU   *-NDPARMS          * END OF PARMS PASSED                         
         END                                                                    
*                                                                               
*                                                                               
NEXTDICT PROC  ,  READ LINEARLY THROUGH DICTIONARY                              
         LR    R6,R1                    R1 - PARM AREA POINTER                  
         USING NDWA,R6                                                          
         L     R4,NDDPTR                                                        
         C     R4,NDDEND          R4 - NEXT WORD POINTER                        
         BNL   NEXTEOF            IF END OF DICTNARY, GO EXIT                   
*-                                                                              
*-       UNPRESS WORD,  (CAN'T USE UNPRESS, DON'T KNOW LENGTH)                  
*-                                                                              
         COMMENT                  R4 - PRESSED WORD INDEX                       
         LA    R1,NDDWORD         R1 - UNPRESSED WORD INDEX                     
         SR    R2,R2              R2 - PRESSED CONTROL BYTE                     
         IC    R2,0(R4)                R2 - BLANK COUNT                         
         SRDL  R2,4                    R3 - CHARACTER COUNT                     
         SRL   R3,28                                                            
         BCTR  R2,0               GET RID OF LEADING SEPARATOR                  
         LTR   R3,R3              IF ZERO CHAR COUNT, DO BLANKS                 
         WHILE Z,BEGIN                                                          
         AR    R1,R2              SKIP PAST COMMON CHARACTERS                   
         LA    R4,1(R4)           BUMP WORD INDECIES                            
         IC    R2,0(R4)                                                         
         SRDL  R2,4               GET NEXT PRESSED CONTROL BYTE                 
         SRL   R3,28                                                            
         LTR   R3,R3                                                            
         END                                                                    
         AR    R1,R2              SKIP PAST REMAINING COMMON CHARS              
         DEX   R3,' MVC 0(0,R1),1(R4) '   MOVE IN FIRST ACTUAL CHARS            
         LA    R1,1(R3,R1)                UPDATE OUTPUT POINTER                 
         LA    R4,2(R3,R4)                UPDATE PRESSED POINTER                
         IC    R2,0(R4)           GET NEXT PRESSED CONTROL BYTE                 
         SRDL  R2,4                                                             
         SRL   R3,28                                                            
         COMMENT              WHILE BLANK COUNT=0, KEPP UNPRESSING              
         WHILE ((R2,EQ,0),AND,(R4,LT,NDDEND)),BEGIN                             
         DEX   R3,' MVC 0(0,R1),1(R4)'    MOVE IN CHARACTERS                    
         LA    R1,1(R3,R1)                UPDATE OUTPUT POINTER                 
         LA    R4,2(R3,R4)                UPDATE PRESSED POINTER                
         IC    R2,0(R4)           GET NEXT PRESSED CONTROL BYTE                 
         SRDL  R2,4                                                             
         SRL   R3,28                                                            
         LTR   R2,R2                                                            
         END                                                                    
*                                                                               
*                                                                               
*                                 DONE WITH UNPRESS                             
         ST    R4,NDDPTR          R4 - DICTNRY WORD PTR (UPDATED)               
         LR    R2,R1              R1 - END OF UNPRESSED DICTNRY WORD            
         LA    R3,NDDWORD         R3 - START OF UNPRESSED WORD                  
         LA    R4,NDDWORD+64      R4 - END OF UNPRESSED WORD BUFFER             
         L     R5,=A(BLANKS)      R5 - SOME BLANKS                              
         SR    R2,R3              SAVE WORD LENGTH                              
         ST    R2,NDDWLEN                                                       
         SR    R4,R1              BLANK OUT END OF WORD                         
         IF    H,BEGIN                                                          
         DEX   R4,' MVC 0(0,R1),0(R5) '                                         
         END                                                                    
         SR    R15,R15            ZERO RETRUN CODE                              
         B     NEXTDONE                                                         
*                                                                               
NEXTEOF  LABEL ,                  END OF FILE ON DICTIONARY                     
         LA    R15,4              NON ZERO RETRUN CODE                          
         B     NEXTDONE                                                         
*                                                                               
NEXTDONE LABEL ,                                                                
         PEND  ,         RETURN                                                 
         TITLE 'CHECKLRN - See if word in user learned dictionary'              
*box                                                                            
*                                                                               
*                                                                               
*       CHECKLRN - check user's dictionary                                      
*                                                                               
*       R1,R0 - LOC, LEN OF WORD TO CHECK                                       
*                                                                               
*       ON RETURN: R15=0, WORD FOUND.   R15=NZ, WORD NOT FOUND.                 
*                                                                               
*                                                                               
*  WE SEARCH FOR WORD IN USERS PAGES OF LEARNED WORDS.  THE                     
*  LEARN PAGES ARE LINKED AND THE ENTRIES ON THOSE PAGES ARE                    
*  IN ALPHABETICAL ORDER.  WE FIND THE RIGHT PAGE AND SEARCH                    
*  LINEARLY.  HOPE THAT IS FAST ENOUGH.                                         
*                                                                               
*                                                                               
CHECKLRN XPROC LWWA                                                             
         IF    ^CPFLEARN,NOLEARN  NO USER DICTIONARY ,,,                        
         IF    ((R0,GT,64),OR,(R0,LE,0)),NOLEARN    CHECK WORD LEN              
         ST    R0,LWWORDLN        SAVE WORD LENGTH, WORD                        
         L     R2,=A(BLANKS)      WORD IS SAVED IN LOWER CASE                   
         MVC   LWWORD(64),0(R2)                                                 
         LR    R3,R0                                                            
         DEX   R3,' MVC LWWORD(0),0(R1) '     MOVE WORD                         
         L     R2,=A(LOWERTAB)                                                  
         TR    LWWORD(64),0(R2)                                                 
*                                                                               
*  SEARCH FOR WORD IN RECORD GROUP                                              
*                                                                               
         COMMENT                   ADD LEARN WORD                               
         LR    R3,R0 R3-WORD LEN                                                
         LA    R15,CPRG16                                                       
         IF    (R3,GT,16),' LA R15,CPRG64'                                      
         LA    R0,CP#LRN                                                        
         VCALL XSETSET             SELECT RG16 OR RG64                          
         LA    R15,CPRG16                                                       
         IF    (R3,GT,16),' LA R15,CPRG64'                                      
         CLEAR R0                                                               
         LA    R1,CVBLANKS                                                      
         LA    R2,LWWORD                                                        
         VCALL XLOCATE             PUT WORD AS KEY/ NULL DATA                   
         IF    (R15,NZ),NOLEARN                                                 
         B     YESLEARN                                                         
*                                                                               
*-                                                                              
*-       RETURN FROM SEARCH                                                     
*-                                                                              
YESLEARN LABEL ,                  WORD IN USER DICTIONARY                       
         SR    R15,R15            CC=0                                          
         B     CHKLEXIT                                                         
*                                                                               
NOLEARN  LABEL ,                  WORD NOT IN USER DICTIONARY                   
         LA    R15,4              CC=NZ                                         
         B     CHKLEXIT                                                         
*-                                                                              
*-       EXIT                                                                   
*-                                                                              
CHKLEXIT LABEL ,                  RETURN TO CALLER                              
         XPUSH R15                PUSH RETURN CODE,,,                           
         PFREE PAR                DONE WITH LEARN PAGE FOR NOW                  
         DROP  PAR                                                              
         XPOP  R15                                                              
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'GETWD - find word in buffer'                                    
*box                                                                            
*                                                                               
*                                                                               
*  GETWD - Routine to find word in buffer.  This routine is                     
*       called by page mode to find which word the cursor points                
*       at.  A specialized routine is required because SPELL                    
*       uses special scanning routines to determine what is a                   
*       word and what is not.  This routine uses SPELL scan tables              
*       determine what the word is.  See code below.                            
*                                                                               
*  on entry:  r1,r0 - location, length of line buffer                           
*             r15   - column number of cursor location                          
*                                                                               
*  on exit:   r1,r0 - location, length of word                                  
*             r15   - start of word offset                                      
*             r0=0  - if r0=0, word not found                                   
*                                                                               
*                                                                               
GETWD    XPROC  ,                                                               
*                                                                               
* REGISTER USAGE                                                                
*                                                                               
         AR    R15,R1             R15 - ADDR OF CURSOR IN BUFFER                
         DECR  R15                                                              
         AR    R0,R1              R0 - END OF LINE                              
         COMMENT                  R1 - START OF LINE                            
         SR    R2,R2              R2 - CHAR/TABLE VALUE FOR CHAR                
         SR    R3,R3              R3 - WORK REGISTER                            
         LR    R4,R15             R4 - START OF WROD INDEX                      
         LR    R5,R15             R5 - END OF WORD INDEX                        
         COMMENT                  R6 - SCAN TABLE                               
*-                                                                              
*-       find starting separator                                                
*-                                                                              
         L     R6,=A(SEPTBL)      R6 - SEPARATOR TABLE                          
         LA    R4,1(R4)                                                         
         LOOP  BEGIN ,                                                          
         BCTR  R4,0                                                             
         IC    R2,0(R4)                                                         
         IC    R2,0(R6,R2)                                                      
         IF    (@R4,EQ,'*'),' SR R2,R2'                                         
         IF    (@R4,EQ,'?'),' SR R2,R2'                                         
         UNTIL ((R4,LE,R1),OR,(R2,NZ))         LOOP TOWARDS START               
         END                                                                    
*-                                                                              
*-       get first alpha of word                                                
*-                                                                              
         L     R6,=A(ALPHATBL)                                                  
         BCTR  R4,0                                                             
         LOOP  BEGIN                                                            
         LA    R4,1(R4)                                                         
         IC    R2,0(R4)                                                         
         IC    R2,0(R6,R2)                                                      
         UNTIL ((R4,GE,R0),OR,(R2,NZ))                                          
         END                                                                    
         IF    (R4,GT,R15),NOGOT  IF NO ALPHA, NO WORD                          
*-                                                                              
*-       get start of word                                                      
*-                                                                              
         L     R6,=A(STARTTBL)                                                  
         LA    R4,1(R4)                                                         
         LOOP  BEGIN                                                            
         BCTR  R4,0                                                             
         IC    R2,0(R4)                                                         
         IC    R2,0(R6,R2)                                                      
         IF    (@R4,EQ,'*'),' SR R2,R2'                                         
         IF    (@R4,EQ,'?'),' SR R2,R2'                                         
         UNTIL ((R4,LT,R1),OR,(R2,NZ))         LOOP TOWARDS START               
         END                                                                    
         LA    R4,1(R4)           ****** R4 IS START OF WORD *****              
*-                                                                              
*-       find separator at end of word                                          
*-                                                                              
         LR    R5,R4                                                            
         L     R6,=A(SEPTBL)                                                    
         BCTR  R5,0                                                             
         LOOP  BEGIN                                                            
         LA    R5,1(R5)                                                         
         IC    R2,0(R5)                                                         
         IC    R2,0(R6,R2)                                                      
         IF    (@R5,EQ,'*'),' SR R2,R2'                                         
         IF    (@R5,EQ,'?'),' SR R2,R2'                                         
         UNTIL ((R5,GE,R0),OR,(R2,NZ))                                          
         END                                                                    
         IF    (R5,EQ,R0),' BCTR R5,0 '                                         
*-                                                                              
*-       back up to valid ending chars                                          
*-                                                                              
         L     R6,=A(ENDTBL)                                                    
         LA    R5,1(R5)                                                         
         LOOP  BEGIN                                                            
         BCTR  R5,0                                                             
         IC    R2,0(R5)                                                         
         IC    R2,0(R6,R2)                                                      
         IF    (@R5,EQ,'*'),' LA R2,4 '                                         
         IF    (@R5,EQ,'?'),' LA R2,4 '                                         
         UNTIL ((R5,LE,R1),OR,(R2,Z))                                           
         END                                                                    
         LA    R5,1(R5)           R5 IS END OF WORD (+1)                        
*-                                                                              
*-       check if pointer points to word                                        
*-                                                                              
         IF    ((R15,LT,R4),OR,(R15,GE,R5)),NOGOT                               
         LR    R15,R4             R15 - COL # OF START OF WORD                  
         SR    R15,R1                                                           
         LA    R15,1(R15)                                                       
         LR    R0,R5                                                            
         LR    R1,R4              R1,R0 - RETURN WORD LOC, LEN                  
         SR    R0,R1                                                            
         B     GETWEXIT                                                         
*-                                                                              
*-       exits                                                                  
*-                                                                              
NOGOT    LABEL ,                  no word found                                 
         SR    R0,R0                                                            
         B     GETWEXIT                                                         
*                                                                               
GETWEXIT LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         SPACE 5                                                                
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'MISC - miscelleneous spell routines'                            
*box                                                                            
*                                                                               
*  TLIST - LIST MULTIPLE ELEMENTS ON ONE LINE,,,                                
*                                                                               
*                                                                               
*  ON INPUT:                                                                    
*       R1 - LIST ELEMENT ADDRESS                                               
*       R0 - LIST ELEMENT LENGTH                                                
*                                                                               
*  THIS ROUTINE COLLECTS ELEMENTS UNTIL THEY WILL MAKE A LINE                   
*  OF LENGTH 48 OR LONGER. IT THEN FORCES OUT THE LINE.  IF                     
*  A <ATTN> OCCURRES, ALL SUBSEQUENT LINES ARE NOT WRITTEN.                     
*                                                                               
*  IF R0 IS ZERO IT IS A CALL TO FORCE OUT THE LINE COLLECTED                   
*  SO FAR EVEN IF IT IS LESS THAN 48 CHARS.                                     
*                                                                               
*                                                                               
TLIST    PROC  ,                                                                
         IF    (R0,GT,0),BEGIN    WE HAVE LIST ELEMENT                          
         XPUSH R0,R1                   PUT OUT LEADING BLANK                    
         TSEG  ' '                                                              
         XPOP  R0,R1                                                            
         TSEG  (R1),(R0)               ADD ELEMENT TO LINE                      
         L     R2,CPSEGLENF                                                     
         S     R2,CPSEGMRKF                                                     
         IF    (R2,GT,48),BEGIN        IF LINE LENGTH > 48                      
         TCR                           WRITE OUT LINE                           
         END                                                                    
         END                                                                    
         ELSE  BEGIN ,            IF R0=0, FORCE OUT LAST LINE                  
         TCCR                                                                   
         END                                                                    
         PEND  ,                  BYE                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       GETDICT, FREEDICT - get and free dictionary                             
*                                                                               
*       Dictionary address is found in CVDICPTR, when in use the                
*       current dictionary is locked in memory via a use count.                 
*       The dictionary used is changed via the SET WDICTIONARY                  
*       command.  See code for details                                          
*                                                                               
*                                                                               
*                                                                               
         SPACE 3                                                                
*box                                                                            
*                                                                               
*                                                                               
*       GETDICT                                                                 
*                                                                               
*       returns r1  - dictionary address, cc is set                             
*               r15 - cc is set, =0 if no dictionary, =nz otherwise             
*                                                                               
*                                                                               
GETDICT  XPROC  ,                                                               
         L     R1,CVDICPTR        R1 - DICTIONARY ADDRESS                       
         IF    (R1,NE,0),BEGIN    IF DICTIONARY, SET USE COUNT                  
         USING DICTNRY,R1                                                       
         LH    R2,DICTUCNT        BUMP USE COUNT                                
         LA    R2,1(R2)                                                         
         STH   R2,DICTUCNT                                                      
         DROP  R1                                                               
         END                                                                    
         LR    R15,R1             R15 SETS RETURN CODE                          
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       GETDICT, FREEDICT - get and free dictionary                             
*                                                                               
*       Dictionary address is found in CVDICPTR, when in use the                
*       current dictionary is locked in memory via a use count.                 
*       The dictionary used is changed via the SET WDICTIONARY                  
*       command.  See code for details                                          
*                                                                               
*                                                                               
*                                                                               
         SPACE 3                                                                
*box                                                                            
*                                                                               
*                                                                               
*       FREEDICT -                                                              
*                                                                               
*       input: r1 - dictionary address used by caller                           
*                                                                               
*       if dictionary address is zero, routine is a noop                        
*                                                                               
*                                                                               
FREEDICT XPROC  ,                                                               
*$                                                                              
*$  ZAP TO IGNORE USE COUNT STUFF, UNTIL BUG FIXED                              
*$                                                                              
         B     FREERETN            *** ZAP !!                                   
         USING DICTNRY,R1         R1 - DICTIONARY ADDRESS                       
         LTR   R1,R1              IF NO DICTIONARY NO UNLOCK,,                  
         BZ    FREERETN                                                         
         LH    R2,DICTUCNT        DECREMENT USE COUNT                           
         BCTR  R2,0                                                             
         STH   R2,DICTUCNT                                                      
         COMMENT                  IF OLD AND ZERO USE COUNT,,,                  
         IF    ((R2,EQ,0),AND,DICTOLD),BEGIN     FREE UP OLD DICTNRY            
         L     R0,DICTLEN                                                       
         L     R1,DICTADDR        R1,R0 - DICTNRY MEMORY ADDR, LEN              
         DROP  R1                                                               
         MVC   0(4,R1),=C'FREE'                                                 
         ST    R0,4(R1)                                                         
         FREEMAIN R,LV=(0),A=(1)                                                
         END                                                                    
FREERETN LABEL ,,                 RETURN                                        
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         TITLE 'SPELL SCANNER ROUTINES'                                         
*box                                                                            
*                                                                               
*                                                                               
*       SCANTEXT - SCAN WORDS FORM INPUT TEXT,,,                                
*                                                                               
*                                                                               
*                                                                               
*       ON ENTRY:                                                               
*             R1 - SCAN PARAMETER BLOCK.                                        
*                     SCPTR,SCEND: START AND END OF STRING TO                   
*                     SCAN, MUST BE INITIALIZED IN PARM BLOCK                   
*                                                                               
*       ON EXIT:                                                                
*             SCAN PARAMETER BLOCK FIELD UPDATED.                               
*             R15 - CC, R15=0 WORD SCANNED, R15=NZ NULL SCAN                    
*                                                                               
*  NOTE, WE SCAN WORDS OF UP TO 64 CHARACTERS.  THIS ROUTINE IS                 
*  MOSTLY BASED ON THE TRT INSTRUCTION.  ACCEPTABLE CHARACTERS                  
*  IN WORDS ARE BASED ON TRT TABLES.  A PERIOD ('.'), FOR EXAMPLE,              
*  IS OK IN THE MIDDLE OF A NAME, (IE. WYL.GG.USR.DSN) BUT NOT AT               
*  THE BEGINING OR END OF A WORD.  WE USE 4 TRT TABLES:                         
*       1. ALPHATBL - SCAN FOR ALPHABETIC CHARACTERS.                           
*       2. SEPTBL   - TABLE OF CHARACTERS USED AS SEPARATORS                    
*       3. STARTTBL - VALID STARTING CHARACTERS                                 
*       4. ENDTBL   - INVALID ENDING CHARACTERS                                 
*  IN SHORT, WE SCAN UNTIL A ALPHA. THEN WE BACK UP OVER VALID                  
*  STARTING CHARACTERS THAT MAY HAVE BEEN SKIPPED. THUS WE FIND                 
*  THE START OF WORD.  FOR THE END OF WORD, WE SCAN OVER WORD                   
*  LOOKING FOR END.  WE FIND THE END WHEN WE HIT A SEPARATOR.                   
*  THEN WE BACK UP OVER INVALID ENDING CHARACTERS.  THUS WE FIND                
*  THE END OF THE WORD.                                                         
*       IN OTHER WORDS, WE DO A SCAN THAT IS A BIT COMPLICATED IN               
*  THAT THERE ARE THREE PLACES IN WHICH WE CHECK A CHARACTERS                   
*  VALIDITY WITHIN A WORD, DEPENDING ON WHETHER THE CHARACTER IS AT             
*  THE START, MIDDLE OR END OF THE WORD.  SEE THE CODE AND TRT                  
*  TABLES FOR PARTICULARS.                                                      
*                                                                               
*                                                                               
SCWA     RECORD BEGIN ,           SCAN WORK AREA                                
SCPARMS  DS    0F                 PARAMETER BLOCK PASSED TO SCAN                
SCFLAGS  FLAG  ,                  SCAN FLAGS                                    
         FLAG  SCSPECL            SCAN SPECIAL,, DEFAULT NO SPECIAL             
         FLAG  SCNOUPP            DON'T SCAN UPPER, DEFAULT IS SCAN             
SCSTART  DS    F                  START OF STRING TO SCAN                       
SCPTR    DS    F                  PLACE TO START SCANNING, UPDATED              
SCEND    DS    F                  END OF SCAN STRING                            
SCWLEN   DS    F                  LENGTH OF WORD SCANNED                        
SCWPTR   DS    F                  POINTER TO WORD IN SCANNED STRING             
SCWORD   DS    CL64               WORD SCANNED (IN ORIGINAL CASE)               
         END                                                                    
         SPACE 3                                                                
*-                                                                              
*-       SCAN TEXT                                                              
*-                                                                              
SCANTEXT PROC  ,                                                                
         LR    R6,R1              WAR POINTS TO INPUT PARM BLOCK                
         USING SCWA,R6                                                          
RESCAN   LABEL ,                                                                
         L     R1,=A(BLANKS)                                                    
         MVC   SCWORD(64),0(R1)   BLANK OUT WORD                                
         MVC   SCWLEN(4),=F'0'    ZERO WORD LENGTH, POINTER                     
         MVC   SCWPTR(4),=F'0'                                                  
         SR    R1,R1              R1 - RETURNS NON-ZERO TRT ADDRESS             
         SR    R2,R2              R2 - RETURNS NON ZERO TRT FUNC BYTE           
         L     R3,SCPTR           R3 - PLACE TO START TRT SCAN                  
         L     R4,SCEND           R4 - LENGTH TO SCAN                           
         SR    R4,R3                                                            
         BZ    NULLSCAN           IF NULL STRING, NULL SCAN                     
         IF    (R4,GT,256),' LA R4,256'       256 IS MAX SCAN                   
         DEX   R4,' TRT 0(0,R3),ALPHATBL '    SCAN FOR ALPHA CHAR               
         BNZ   SCANNAME           IF GOOD SCAN, WE HAVE A WORD !!               
         COMMENT                                                                
         BEGIN ,                  IF NULL SCAN, ,,,                             
         LA    R1,1(R4,R3)          FIND THE LAST CHAR SCANNED                  
         ST    R1,SCPTR             UPDATE THE SCAN POINTER                     
         CLC   SCPTR(4),SCEND     IF NULL SCAN OF LONG STRING                   
         BL    RESCAN               THEN WE GO SCAN REST OF STRING              
         B     NULLSCAN             ELSE, WE HAVE A TRUE NULL SCAN              
         END                                                                    
         EJECT                                                                  
SCANNAME LABEL ,                  R1 - FIRST ALPHA CHAR OF NAME                 
         C     R1,SCPTR                                                         
         IF    H,BEGIN            START A LOOP TO LOOK FOR NON-ALPHA            
         SR    R3,R3                BUT VALID STARTING CHARACTERS               
         WHILE (Z,AND,(R1,GT,SCPTR)),BEGIN                                      
         BCTR  R1,0                 R1 - BACK UP WORD POINTER                   
         IC    R3,0(R1)             R3 - CHARACTER                              
         IC    R3,STARTTBL(R3)      R3 - CHARACTER VALIDITY CODE                
         LTR   R3,R3                R3 - IF ZERO, VALID                         
         END                                                                    
         IF    (R3,NZ),BEGIN                                                    
         LA    R1,1(R1)               START OF WORD                             
         END                                                                    
         END                                                                    
         LR    R5,R1              R5 - START OF WORD                            
         SR    R1,R1                                                            
         SR    R2,R2              R1, R2 - CLEARED FOR TRT RETURNS              
         LR    R3,R5              R3 - START OF WORD                            
         L     R4,SCEND           R4 - LENGTH, R3 TO END OF STRING              
         SR    R4,R3                                                            
         BZ    NULLSCAN                                                         
         IF    (R4,GT,256),' LA R4,256 '    MAXIMUM SCAN IS 256 CHARS           
         DEX   R4,' TRT 0(0,R3),SEPTBL '    SCAN TILL END OF WORD               
         IF    Z,BEGIN                                                          
         LA    R1,1(R4,R3)        R1 - LAST CHARACTER SCANNED+1                 
         END                                                                    
         SR    R3,R3                                                            
         LTR   RAR,RAR            SET CC=NZ                                     
         WHILE NZ,BEGIN           START LOOP TO LOOK FOR VALID LAST             
         BCTR  R1,0                  CHARACTER                                  
         IC    R3,0(R1)              R3 - CHARACTER                             
         IC    R3,ENDTBL(R3)         R3 - CHARACTER VALIDITY CODE               
         LTR   R3,R3                 R3 - ZERO=VALID                            
         END                                                                    
         LA    R1,1(R1)           R1 - END OF STRING (LAST CHAR+1)              
         COMMENT IT                  R1,R5 - END, START OF WORD                 
         COMMENT OH YEAH                                                        
         LR    R3,R5                 R3 - START OF SCANNED STRING               
         LR    R4,R1                 R4 - LENGTH OF SCANNED STRING              
         SR    R4,R3 (NEVER=0)                                                  
         IF    (R4,GT,64),' LA R4,64 '     MAXIMUM WORD LENGTH IS 64            
         ST    R4,SCWLEN                   SAVE WORD LENGTH                     
         DEX   R4,' MVC SCWORD(0),0(R3)'      SAVE WORD !!                      
         ST    R1,SCPTR           UPDATE SCPTR, SCEND STAYS SAME                
         ST    R5,SCWPTR          SAVE START OF SCANNED WORD                    
         EJECT                                                                  
SCANCHK  LABEL ,                  CHECK WORD SCANED,                            
         COMMENT                                                                
*$       ACALL CHKHYPN            CHECK IF HYPHENATED WORD-                     
         COMMENT ,,               (NEVER SAY NEVER)                             
         CLC   SCWLEN(4),=F'2'                                                  
         BNH   RESCAN             WORD MUST BE LONGER THAN 2 CHARS              
         EX    R4,' TRT SCWORD(0),NONALPHA '                                    
         IF    NZ,BEGIN           IF NON-ALPHA CHARACTERS IN WORD,,             
         IF    ^SCSPECL,BEGIN        IF NOT CHECKING SPECIAL CHAR               
         B     RESCAN                  WORDS, THEN WE GO RESCAN                 
         END   ,,                                                               
         END                                                                    
         EX    R4,' TRT SCWORD(0),NONUPPER '                                    
         IF    Z,BEGIN            IF ALL UPPER CASE WORD ,,,,                   
         IF    SCNOUPP,BEGIN         IF NOT CHECKING ALL UPPER CASE             
         B     RESCAN                  WORDS, THEN WE GO RESCAN                 
         END ,,                                                                 
         END                                                                    
*                                                                               
         SR    R15,R15            GOOD SCANS FALL THROUGH TO HERE               
         B     SCANDONE                                                         
*                                                                               
NULLSCAN LABEL ,                  NULL SCAN (NO WORD RETURNED)                  
         LA    R15,4              SET NON-ZERO RETURN CODE                      
         B     SCANDONE                                                         
*                                                                               
SCANDONE LABEL ,                  SCAN FINISHED, RETURN TO CALLER               
         PEND  ,         WE RETURN                                              
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SCAN ANY WORD, WITHOUT RESTRICTION                                           
*                                                                               
*       INPUT: R1 - SCAN PARM BLOCK                                             
*                                                                               
*       RETURNS: SCAN PARM BLOCK, R15=CC, NZ IF NOTHING TO SCAN                 
*                                                                               
*                                                                               
*  THIS ROUTINE SCANS ANY TOKEN,, BETWEEN BLANKS OR COMMAS, ALL                 
*  WIERD PUNCTUATION MARKS (*?' ETC) ARE CONSIDERED PART OF WORD                
*                                                                               
*                                                                               
SCANWORD PROC  ,     SCAN WORD FROM COMMAND                                     
         LR    R6,R1              POINT TO SCAN PARM BLOCK                      
         USING SCWA,R6                                                          
         L     R1,=A(BLANKS)      INITIALIZE WORD TO BLANKS                     
         MVC   SCWORD(64),0(R1)                                                 
         MVC   SCWLEN(4),=F'0'    ZERO WORD LENGTH, POINTER                     
         MVC   SCWPTR(4),=F'0'                                                  
         L     R1,SCPTR           R1,R0 - START, END OF STRING                  
         L     R0,SCEND                                                         
         LOOP  BEGIN ,            SKIP LEADING BLANKS, COMMAS                   
         CR    R1,R0                                                            
         BNL   WRDSTART                                                         
         CLI   0(R1),C' '                 TEST FOR ' ' OR ','                   
         IF    NE,BEGIN                                                         
         CLI   0(R1),C','                                                       
         END                                                                    
         BNE   WRDSTART                                                         
         LA    R1,1(R1)                                                         
         END                                                                    
WRDSTART LABEL ,                  R1 - START OF WORD                            
         LR    R4,R1              R4 - START OF WORD                            
         ST    R4,SCWPTR               SAVE START OF WORD                       
         LOOP  BEGIN ,            SKIP UNTIL A BLANK, COMMA                     
         CR    R1,R0                                                            
         BNL   WRDEND                                                           
         CLI   0(R1),C' '                                                       
         BE    WRDEND                                                           
         CLI   0(R1),C','                                                       
         BE    WRDEND                                                           
         CLI   0(R1),C';'                                                       
         BE    WRDEND                                                           
         LA    R1,1(R1)                                                         
         END                                                                    
WRDEND   LABEL ,                                                                
         ST    R1,SCPTR           R1 - END OF SCANNED WORD                      
         SR    R1,R4              R4,R1 - WORD ADDR, LENGTH                     
         ST    R1,SCWLEN                                                        
         IF    NZ,BEGIN           SAVE WORD AND LENGTH                          
         IF    (R1,GT,64),'LA R1,64'   MAX WORD LENGTH IS 64                    
         DEX   R1,' MVC SCWORD(0),0(R4) '                                       
         END                                                                    
         SR    R15,R15            SET RETURN CODE, CC=NZ IF NULL SCAN           
         IF    (SCWLEN,EQ,0),' LA R15,4 '                                       
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       TRT TABLES FOR SCAN                                                     
*                                                                               
*                                                                               
* TRT SCAN TABLES,                                                              
*                                                                               
*                                                                               
* NOTE: STARTING AND ENDING VALID CHARACTER TABLES ARE THE SAME.                
*                                                                               
* NOTE: VALID STARTING AND ENDING CHARACTERS MUST ALSO BE VALID                 
*  INTERMEDIATE CHARACTERS.  DIG IT AND GET THESE TABLES RIGHT !!               
*                                                                               
*                                                                               
ALPHATBL LABEL ,                  TABLE OF ALL A-Z, a-z                         
         DC    256XL1'0'          ALPHAS SET AS 4                               
         ORG   ALPHATBL+C'A'                                                    
         DC    9XL1'04'                                                         
         ORG   ALPHATBL+C'J'                                                    
         DC    9XL1'04'                                                         
         ORG   ALPHATBL+C'S'                                                    
         DC    8XL1'04'                                                         
         ORG   ALPHATBL+C'a'                                                    
         DC    9XL1'04'                                                         
         ORG   ALPHATBL+C'j'                                                    
         DC    9XL1'04'                                                         
         ORG   ALPHATBL+C's'                                                    
         DC    8XL1'04'                                                         
         ORG   ALPHATBL+256                                                     
*-                                                                              
*-                                                                              
*-                                                                              
STARTTBL LABEL ,                  TABLE OF VALID STARTING CHARS                 
         DC    256XL1'04'                                                       
         ORG   STARTTBL+C'A'      THE ALPHABET                                  
         DC    9XL1'00'                                                         
         ORG   STARTTBL+C'J'                                                    
         DC    9XL1'00'                                                         
         ORG   STARTTBL+C'S'                                                    
         DC    8XL1'00'                                                         
         ORG   STARTTBL+C'a'                                                    
         DC    9XL1'00'                                                         
         ORG   STARTTBL+C'j'                                                    
         DC    9XL1'00'                                                         
         ORG   STARTTBL+C's'                                                    
         DC    8XL1'00'                                                         
         ORG   STARTTBL+C'0'      THE NUMBERS                                   
         DC    10XL1'00'                                                        
         ORG   STARTTBL+C'$'      AND $,&,@,#                                   
         DC    X'00'                                                            
         ORG   STARTTBL+C'@'                                                    
         DC    X'00'                                                            
         ORG   STARTTBL+C'&&'                                                   
         DC    X'00'                                                            
         ORG   STARTTBL+C'#'                                                    
         DC    X'00'                                                            
         ORG   STARTTBL+256                                                     
         ORG   STARTTBL           START AND END TABLES ARE THE SAME             
*-                                                                              
*-                                                                              
*-                                                                              
ENDTBL   LABEL ,                  TABLE OF VALID ENDING CHARS                   
         DC    256XL1'04'                                                       
         ORG   ENDTBL+C'A'       THE ALPHABET                                   
         DC    9XL1'00'                                                         
         ORG   ENDTBL+C'J'                                                      
         DC    9XL1'00'                                                         
         ORG   ENDTBL+C'S'                                                      
         DC    8XL1'00'                                                         
         ORG   ENDTBL+C'a'                                                      
         DC    9XL1'00'                                                         
         ORG   ENDTBL+C'j'                                                      
         DC    9XL1'00'                                                         
         ORG   ENDTBL+C's'                                                      
         DC    8XL1'00'                                                         
         ORG   ENDTBL+C'0'       THE NUMBERS                                    
         DC    10XL1'00'                                                        
         ORG   ENDTBL+C'$'       AND $,&,@,#                                    
         DC    X'00'                                                            
         ORG   ENDTBL+C'@'                                                      
         DC    X'00'                                                            
         ORG   ENDTBL+C'&&'                                                     
         DC    X'00'                                                            
         ORG   ENDTBL+C'#'                                                      
         DC    X'00'                                                            
         ORG   ENDTBL+256                                                       
*-                                                                              
*-                                                                              
*-                                                                              
SEPTBL   LABEL ,                  TABLE OF VALID INTERMEDIATE CHARS             
         DC    256XL1'04'                                                       
         ORG   SEPTBL+C'A'       THE ALPHABET                                   
         DC    9XL1'00'                                                         
         ORG   SEPTBL+C'J'                                                      
         DC    9XL1'00'                                                         
         ORG   SEPTBL+C'S'                                                      
         DC    8XL1'00'                                                         
         ORG   SEPTBL+C'a'                                                      
         DC    9XL1'00'                                                         
         ORG   SEPTBL+C'j'                                                      
         DC    9XL1'00'                                                         
         ORG   SEPTBL+C's'                                                      
         DC    8XL1'00'                                                         
         ORG   SEPTBL+C'0'       THE NUMBERS                                    
         DC    10XL1'00'                                                        
         ORG   SEPTBL+C'$'       AND $,&,@,#,',.                                
         DC    X'00'                                                            
         ORG   SEPTBL+C'@'                                                      
         DC    X'00'                                                            
         ORG   SEPTBL+C'&&'                                                     
         DC    X'00'                                                            
         ORG   SEPTBL+C'#'                                                      
         DC    X'00'                                                            
         ORG   SEPTBL+C''''        *** DO NOT CHECK "'s"                        
         DC    X'00'               *** -- THESE LINES 1/1/86                    
         ORG   SEPTBL+C'.'                                                      
         DC    X'00'                                                            
         ORG   SEPTBL+256                                                       
*-                                                                              
*-                                                                              
*-                                                                              
NONALPHA LABEL ,                  NON ALPHA TRT TABLE                           
         DC    256XL1'04'         NON ALPHA'S SET TO 4                          
         ORG   NONALPHA+C''''      *** SPELL TREATS C"'" AS ALPHA !             
         DC    1XL1'00'            (IE. CHECK WORDS LIKE "BUD'S")               
         COMMENT OH YEAH           *** NO LONGER, -- LINES 1/1/86               
         ORG   NONALPHA+C'A'                                                    
         DC    9XL1'00'                                                         
         ORG   NONALPHA+C'J'                                                    
         DC    9XL1'00'                                                         
         ORG   NONALPHA+C'S'                                                    
         DC    8XL1'00'                                                         
         ORG   NONALPHA+C'a'                                                    
         DC    9XL1'00'                                                         
         ORG   NONALPHA+C'j'                                                    
         DC    9XL1'00'                                                         
         ORG   NONALPHA+C's'                                                    
         DC    8XL1'00'                                                         
         ORG   NONALPHA+256                                                     
*-                                                                              
*-                                                                              
*-                                                                              
NONUPPER LABEL ,                  NON UPPER TRT TABLE                           
         DC    256XL1'04'         NON UPPER'S SET TO 4                          
         ORG   NONUPPER+C'A'                                                    
         DC    9XL1'00'                                                         
         ORG   NONUPPER+C'J'                                                    
         DC    9XL1'00'                                                         
         ORG   NONUPPER+C'S'                                                    
         DC    8XL1'00'                                                         
         ORG   NONUPPER+256                                                     
*-                                                                              
*-                                                                              
*-                                                                              
UPPTABLE LABEL ,                  UPPER CASE TRANSLATE TABLE                    
         DC    X'000102030405060708090A0B0C0D0E0F'                              
         DC    X'101112131415161718191A1B1C1D1E1F'                              
         DC    X'202122232425262728292A2B2C2D2E2F'                              
         DC    X'303132333435363738393A3B3C3D3E3F'                              
         DC    X'404142434445464748494A4B4C4D4E4F'                              
         DC    X'505152535455565758595A5B5C5D5E5F'                              
         DC    X'606162636465666768696A6B6C6D6E6F'                              
         DC    X'707172737475767778797A7B7C7D7E7F'                              
         DC    X'808182838485868788898A8B8C8D8E8F'                              
         DC    X'909192939495969798999A9B9C9D9E9F'                              
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'                              
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'                              
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'                              
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'                              
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'                              
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'                              
         ORG   UPPTABLE+C'a'                                                    
         DC    C'ABCDEFGHI'                                                     
         ORG   UPPTABLE+C'j'                                                    
         DC    C'JKLMNOPQR'                                                     
         ORG   UPPTABLE+C's'                                                    
         DC    C'STUVWXYZ'                                                      
         ORG   UPPTABLE+256                                                     
*-                                                                              
*-                                                                              
*-                                                                              
LOWTABLE LABEL ,                  LOWER CASE TRANSLATE TABLE                    
         DC    X'000102030405060708090A0B0C0D0E0F'                              
         DC    X'101112131415161718191A1B1C1D1E1F'                              
         DC    X'202122232425262728292A2B2C2D2E2F'                              
         DC    X'303132333435363738393A3B3C3D3E3F'                              
         DC    X'404142434445464748494A4B4C4D4E4F'                              
         DC    X'505152535455565758595A5B5C5D5E5F'                              
         DC    X'606162636465666768696A6B6C6D6E6F'                              
         DC    X'707172737475767778797A7B7C7D7E7F'                              
         DC    X'808182838485868788898A8B8C8D8E8F'                              
         DC    X'909192939495969798999A9B9C9D9E9F'                              
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'                              
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'                              
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'                              
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'                              
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'                              
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'                              
         ORG   LOWTABLE+C'A'                                                    
         DC    C'abcdefghi'                                                     
         ORG   LOWTABLE+C'J'                                                    
         DC    C'jklmnopqr'                                                     
         ORG   LOWTABLE+C'S'                                                    
         DC    C'stuvwxyz'                                                      
         ORG   LOWTABLE+256                                                     
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*-                                                                              
*-       SPELL COMMON CONSTANT DATA                                             
*-                                                                              
         SPACE 2                                                                
*-                                                                              
*-       LOWER CASE CONVERSION TABLE                                            
*-                                                                              
LOWERTAB LABEL ,                  LOWER CASE TRANSLATE TABLE                    
         DC    X'000102030405060708090A0B0C0D0E0F'                              
         DC    X'101112131415161718191A1B1C1D1E1F'                              
         DC    X'202122232425262728292A2B2C2D2E2F'                              
         DC    X'303132333435363738393A3B3C3D3E3F'                              
         DC    X'404142434445464748494A4B4C4D4E4F'                              
         DC    X'505152535455565758595A5B5C5D5E5F'                              
         DC    X'606162636465666768696A6B6C6D6E6F'                              
         DC    X'707172737475767778797A7B7C7D7E7F'                              
         DC    X'808182838485868788898A8B8C8D8E8F'                              
         DC    X'909192939495969798999A9B9C9D9E9F'                              
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'                              
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'                              
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'                              
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'                              
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'                              
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'                              
         ORG   LOWERTAB+C'A'                                                    
         DC    C'abcdefghi'                                                     
         ORG   LOWERTAB+C'J'                                                    
         DC    C'jklmnopqr'                                                     
         ORG   LOWERTAB+C'S'                                                    
         DC    C'stuvwxyz'                                                      
         ORG   LOWERTAB+256                                                     
*                                                                               
*                                                                               
BLANKS   DC    128C' '                                                          
         QLTORG                                                                 
*                                                                               
         VLTORG                                                                 
         END   .                                                                
