LINE     TITLE 'WYLBUR''s Line Oriented Editing Commands'                       
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
WYLLINE  CSECT                                                                  
LINE     IDENT 2193                15:11:45 07/12/02  (SLP)                     
*                                                                               
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
         SYSDEFN ,                 Define installation params                   
         PUSH  DSECTS                                                           
         EJECT                                                                  
         COPY  RTNCODES                                                         
*                                                                               
         COPY  CONTROL             Copy cv/cp                                   
         TITLE 'DSECTS'                                                         
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
*                                                                               
         POP   DSECTS                                                           
*                                                                               
         QLTORG                                                                 
         TITLE 'MODIFY/EDIT Commands'                                           
*box                                                                            
*                                                                               
*  MODIFY -- MODIFY COMMAND.                                                    
*  EDIT   -- EDIT COMMAND.                                                      
*                                                                               
*                                                                               
MODWA    RECORD BEGIN              Line size work area                          
MODOPTS  FLAG  ,                   Flag definitions                             
         FLAG  MODFLFST            - At least 1 line size ok                    
         FLAG  MODFLEQ             - Equal                                      
         FLAG  MODFLOV             - Over                                       
         FLAG  MODFLUN             - Under                                      
MODTEMPF FLAG  ,                   Work copy of flags                           
MODUN    DS    H                   Under length                                 
MODOV    DS    H                   Over length                                  
         END                                                                    
*                                                                               
*                                                                               
*                                                                               
MODIFY   XPROC ,                   Modify/Edit commands                         
         SET   CPFMODCD            Set for modify                               
         ACALL EDIT                modify and edit use same code                
         PEND  ,                                                                
*                                                                               
*                                                                               
*                                                                               
EDIT     XPROC MODWA               Modify/Edit commands                         
         LA    R6,MODWA                                                         
         WITH  (MODWA,R6)                                                       
         CLEAR MODWA               Clear work area                              
         ST    R6,CPWK4            Save MODWA ptr for subroutines               
*                                                                               
         SET   CPFMODXP+CPFNUMXP+CPFLISXP  MODIFY/EDIT is explicit              
*                                                                               
         VCALL PAGERES             Reset page mode                              
*                                                                               
         SET   CPFUFMT             List lines in unformatted mode               
         SET   CPLFLG1.CPFALL      All is the default range                     
         VCALL NDETRNG             Scan range                                   
*-                                                                              
*-       Scan Modify/Edit options.                                              
*-                                                                              
MODSCAN  SCAN  MODPRT              Scan for command options                     
         SCANCHK                                                                
*-                                                                              
*-       Make sure options are correct.                                         
*-                                                                              
         IF    MODFLOV*MODFLUN,BEGIN  Over and under specified...               
         LH    R2,MODUN            R2 = size under                              
         DECR  R2                  Subtract 1                                   
         IF    (R2,LE,MODOV),BEGIN Guy's all messed up ...                      
         TSEG  'It is not possible to have lines '                              
         B     MODSZMSG                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Process lines.                                                         
*-                                                                              
         RDRNG MODRTN,(DESRTRN+LOCATRTN+UNPRST+DESABORT)                        
         BP    CVERROR             End if attention                             
*                                                                               
         IF    ^CPFSOME,CVNEXT     No lines found                               
         IF    MODFLFST,CVNEXT     Got at least one line                        
*                                                                               
         TSEG  'No lines '         Start of null message                        
MODSZMSG IF    MODFLOV+MODFLUN,BEGIN                                            
         IF    MODFLOV,BEGIN       No lines over                                
         TSEG  'over '                                                          
         TNUM  LH:MODOV                                                         
         IF    MODFLUN,BEGIN       No lines over and under                      
         TSEG  ' and under '                                                    
         TNUM  LH:MODUN                                                         
         END                                                                    
         END   ELSE,BEGIN          No lines under                               
         TSEG  'under '                                                         
         TNUM  LH:MODUN                                                         
         END                                                                    
         END   ELSE,BEGIN          No lines equal to                            
         TSEG  'equal to '                                                      
         TNUM  LH:MODUN                                                         
         END                                                                    
         TWRITE ,                  Write out message                            
*                                                                               
         B     CVNEXT                                                           
         PEND                                                                   
*-                                                                              
*-       Modify/Edit command options.                                           
*-                                                                              
MODPRT   SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(CASEPSH),PUSH                                                 
         SCKW  ,V(COLSPSH),PUSH                                                 
         SCKW  SINGLE,MODSING,A                                                 
         SCKW  S,MODSING                                                        
         SCKW  OVER,MODOVER,(A,P,PI),&LINESZ                                    
         SCKW  UNDER,MODUNDER,(A,P,PI),&LINESZ                                  
         SCKW  EQUAL,MODEQUAL,(A,P,PI),&LINESZ                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
MODSING  PROC                                                                   
         SET   CPLFLG5.CPFSING     Set single                                   
         PEND                                                                   
*                                                                               
MODOVER  PROC                                                                   
         WITH  (MODWA,R6)                                                       
         IF    MODFLOV+MODFLEQ,'VCALL NOTVALID'                                 
         SET   MODFLOV             Set "OVER" flag                              
         STH   R0,MODOV            Save OVER length                             
         PEND                                                                   
*                                                                               
MODUNDER PROC                                                                   
         WITH  (MODWA,R6)                                                       
         IF    MODFLUN+MODFLEQ,'VCALL NOTVALID'                                 
         SET   MODFLUN             Set "UNDER" flag                             
         STH   R0,MODUN            Save UNDER length                            
         PEND                                                                   
*                                                                               
MODEQUAL PROC                                                                   
         WITH  (MODWA,R6)                                                       
         IF    MODFLUN+MODFLOV+MODFLEQ,'VCALL NOTVALID'                         
         SET   MODFLEQ             Set "EQUAL" flag                             
         STH   R0,MODUN            Save EQUAL length                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  MODRTN -- Modify/Edit command range processing co-routine.                   
*                                                                               
*    On entry:                                                                  
*      R1,R0 - line loc, len                                                    
*                                                                               
MODRTN   PROC                                                                   
         L     R6,CPWK4            Load pointer to size work area               
         WITH  (MODWA,R6)                                                       
*                                                                               
         IF    (MODFLOV+MODFLUN+MODFLEQ,Z),NOSIZE                               
         IF    (R0,GT,MODOV),'SET MODTEMPF.MODFLOV'                             
         IF    (R0,LT,MODUN),'SET MODTEMPF.MODFLUN'                             
         IF    (R0,EQ,MODUN),'SET MODTEMPF.MODFLEQ'                             
         NC    MODTEMPF,MODOPTS    See if size conditions hold                  
         XC    MODTEMPF,MODOPTS                                                 
         IF    (MODTEMPF.MODFLOV+MODFLUN+MODFLEQ,NZ),SIZEBAD                    
NOSIZE   SET   MODFLFST            Had at least one line                        
         ACALL LINEMOD             Perform alterations                          
         BP    CVERROR             ATTN means abort command                     
         BM    CVNEXT              Stop request                                 
         MVC   CPNWLN,CPLCNO       Kick past any splits                         
SIZEBAD  CLEAR MODTEMPF            Reset size flags                             
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         TITLE 'MODIFY/EDIT line modification work area'                        
         EJECT                                                                  
*-                                                                              
*-       Split info.    (this must come before METWA)                           
*-                                                                              
METSPLIT RECORD BEGIN                                                           
METSOFFS DS    H                   Offset to split place                        
         DS    H                   Reserved                                     
METSNEXT DS    0F                  (Next starts here...)                        
         END                                                                    
*-                                                                              
*-       Get/put info.                                                          
*-                                                                              
METPDATA RECORD BEGIN              Put data                                     
METPOFFS DS    H                   Put offset                                   
METPUTLN DS    H                   Put length                                   
METPNEXT DS    0F                  (Next starts here...)                        
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*        Line modification work area.                                           
*                                                                               
METWA    RECORD BEGIN                                                           
METLINER DS    F                   Current line no. (for range)                 
METOLPTR DS    2A                  Original line len, addr                      
METLINE# DS    F                   Original line no.                            
METNLINE DS    F                   Next line no. (used by join)                 
METFLINE DS    F                   Future line to modify                        
METCDELT DS    F                   Delta for collecting                         
METCFLIN DS    F                   Original lineno before collect               
METCLLIN DS    F                   Last possible lineno for collect             
METCNUM  DS    H                   No. of lines collected                       
METPLEN  DS    H                   Previous line len                            
METPLINE DS    XL(&LINESZ)         Previous line                                
         DS    XL(&PRESSZ-&LINESZ) Needed when metpline is press bfr            
*                                                                               
METLEN   DS    H                   Line len                                     
METLINE  DS    XL(&LINESZ*2)       Line                                         
*                                                                               
METPUTL  DS    H                   PUT data length                              
METPUT   DS    10F                 PUT data                                     
METPUTMX EQU   *-METPUT                                                         
*                                                                               
METPRMPT DS    A                   Starting addr of prompt                      
METFCOL  DS    H                   Starting column (-1)                         
METLCOL  DS    H                   Last column                                  
METPTRS  DS    2A                  Mod char ptr (loc,len)                       
METNUM   DS    H                   Digit value                                  
*                                                                               
METFLAGS FLAG                                                                   
         FLAG  METFNEW             - New line being modified                    
         FLAG  METFINS             - Insert (not collect)                       
         FLAG  METFMOD             - Modify (off means edit)                    
         FLAG  METFSTOP            - End command ($attn)                        
         FLAG  METFATTN            - Attn hit                                   
         FLAG  METFREN             - Renumber pending                           
         FLAG  METFPFX             - Numeric/word prefix                        
         FLAG  METFWORD            - Word mode                                  
METFLG2  FLAG  ,                                                                
         FLAG  METFNEXT            - .line next                                 
*                                                                               
METLF4   DS    X                   Saved copy of CPLFLG4                        
METLF5   DS    X                   ... and CPLFLG5                              
*                                                                               
METNSPLT DS    H                   No. of splits                                
METWSPLT DS    H                   Working no. of splits                        
METSAREA DS    20XL(L'METSPLIT)    Split work areas                             
         END                                                                    
*                                                                               
*                                                                               
*  routine returns for modify/function calls                                    
*                                                                               
*  these return codes are used to take the proper                               
*  branches after to routines that do the work for                              
*  modify and edit.  note there used to be direct                               
*  branching between routines, this needed to be                                
*  eliminated when we procedurized everything, but                              
*  the logic was not completely reworked, so these                              
*  ugly indirect branches remain.                                               
*                                                                               
*                                                                               
RNORMAL  EQU   0                   NORMAL, OK                                   
RNORMAL2 EQU   4                   NORMAL, OK (STOP SCAN)                       
RERROR   EQU   8                   ERROR, RESTORE LINE                          
RLINDONE EQU   12                  LINDONE LABEL                                
RLINRET  EQU   16                  LINRET LABEL                                 
RLINRETD EQU   20                  LINRETDJ LABEL                               
          TITLE 'MODIFY/EDIT line Modification Routine'                         
*box                                                                            
*                                                                               
*  LINEMOD -- Routine to do modify/edit processing on a line.                   
*                                                                               
*   On entry:                                                                   
*     CPLCNO - lineno of line to modify                                         
*     R1,R0 - line loc, len                                                     
*                                                                               
*   On exit:                                                                    
*     CPLCNO - lineno (past splits, etc.)                                       
*     R1,R0 - modified line loc, len                                            
*     R15 (and CC):                                                             
*        0 - modificiation completed                                            
*        4 - modification aborted (attn)                                        
*       -4 - terminate command ($attn)                                          
*                                                                               
*   Notes:  CPMODNEX is set by the caller to tell LINEMOD the                   
*     lineno of the next line (although, it does not exist                      
*     when the routine is called).  Then if a split, collect, etc.              
*     is done LINEMOD won't go past that lineno.  If "CPMODNEX"                 
*     is zero, LINEMOD will use the next existing lineno.                       
*                                                                               
*     METLINER is the lineno of the original line being modified                
*     or the last split/collect lineno.  It is not updated when                 
*     the user uses the ".line x" function to modify a different                
*     line.  CPLCNO is set to METLINER just before exiting to                   
*     allow the caller to continue any range after that line.                   
*                                                                               
LINEMOD  XPROC (R2,LSR),METWA                                                   
         LA    R6,METWA                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         MVC   METLINER,CPLCNO                                                  
         CLEAR METFLAGS                                                         
*-                                                                              
*-       Initialize options in our work area.                                   
*-                                                                              
LINSTART CLEAR METNSPLT,METNLINE                                                
         CLEAR METPUTL             Clear put values                             
         MVC   METFLINE,=F'-1'                                                  
         CLEAR METCDELT                                                         
         LR    R15,R1                                                           
         AR    R15,R0                                                           
         DECR  R15                                                              
         WHILE ((R15,GE,R1),AND,(@R15,EQ,' ')),'DECR R15; DECR R0'              
         IF    (R0,GT,&LINESZ),'LA R0,&LINESZ'                                  
         STM   R0,R1,METOLPTR      Save original line ptr                       
         MVC   METLINE#,CPLCNO     Save lineno                                  
         IF    ^CPFCMDMD,'MVC CPACLNO,CPLCNO'  Adjust cur line ptr              
         IF    ('LTR R15,R0',POS),'DEX R15,"MVC METLINE(0),@R1"'                
         MVC   METLF4(2),CPLFLG4   Save number/stow options, etc.               
         CLEAR CPLFLG4             Set good stow options                        
         CLEAR CPLFLG5.CPFNLST+CPFSING   Reset for first time                   
         IF    ^CPGFLG3.CPFCMDED,'SET METFMOD'  Defaults                        
         IF    CPFMODXP,BEGIN      Modify/edit was explicit...                  
         CLEAR METFMOD                                                          
         IF    CPFMODCD,'SET METFMOD'                                           
         END                                                                    
         MVC   METFCOL(4),CPFCOL   Set columns to modify                        
         IF    ^CPFNUMXP,'CLEAR CPLFLG5'  Reset number options                  
         IF    (^CPLFLG5.CPFNONUM,AND,CPLFLG5.CPFUNUM),BEGIN                    
         SET   CPLFLG5.CPFNONUM    Change unnumber to nonumber                  
         END                                                                    
         IF    (R0,GT,METLCOL),'LH R0,METLCOL'                                  
         B     LINLOOPA            Join up                                      
*-                                                                              
*-       Undo current line modifications                                        
*-         and then join main modification loop.                                
*-                                                                              
LINBACK  LABEL ,                                                                
         TWRITE                                                                 
         MVC   METLEN(2+&LINESZ),METPLEN  backup                                
         CLEAR METNSPLT            Reset any splits                             
         CLEAR METPUTL             Clear put values                             
         MVC   METFLINE,=F'-1'                                                  
         CLEAR METCDELT                                                         
         CLEAR CPLFLG5.CPFSING,METFSTOP                                         
*-                                                                              
*-       Finish pending modifications                                           
*-         and then join main modification loop.                                
*-                                                                              
LINLOOP  CLEAR R0,R5               Zero work regs                               
         WHILE ((R5,LT,METPUTL),AND,(CPGETLN,NZ)),BEGIN                         
         LA    R3,METPUT(R5)       Point to put table entry                     
         WITH  (METPDATA,R3),BEGIN                                              
         LH    R4,METPOFFS         Insertion point offset                       
         AR    R4,R0               Adjust for other puts                        
         LH    R15,METPUTLN        Number of chars to put                       
         END                                                                    
         IF    (R15,NEG),BEGIN     Value is a word spec ...                     
         LCR   R15,R15             Get back a positive value                    
         CLEAR R14                 Clear stack deletion count                   
         L     R2,CPGETSTK         Load pointer to GETSTACK                     
         LH    R3,CPGETLN          Chars left in get-stack                      
         LA    R3,0(R3,R2)         Point to end of get-stack                    
         WHILE ((@R2,EQ,' '),AND,(R2,LT,R3)),'INCR R2; INCR R14'                
         LH    R1,CPGETLN          Load old get count                           
         SR    R1,R14              Adjust for this skip                         
         STH   R1,CPGETLN          Update get count left                        
         IF    (R2,GE,R3),'CLEAR R14; B PUTWSTOP'                               
         XPUSH R5                                                               
         LR    R5,R1               Copy length to keep in GETSTACK              
         L     R2,CPGETSTK         Load pointer to GETSTACK                     
         LA    R14,0(R14,R2)       Point to new start of GETSTACK               
         TDEX  R5,'MVC @R2(0),@R14'   Shift GETSTACK over                       
         XPOP  R5                                                               
         CLEAR R14                 Clear word character count                   
PUTWLOOP WHILE ((@R2,EQ,' '),AND,(R2,LT,R3)),'INCR R2; INCR R14'                
         IF    (R2,GE,R3),PUTWSTOP                                              
         WHILE ((@R2,NE,' '),AND,(R2,LT,R3)),'INCR R2; INCR R14'                
         IF    (R2,GE,R3),PUTWSTOP                                              
         BCT   R15,PUTWLOOP                                                     
         INCR  R14                 Take the blank after the last word           
PUTWSTOP LR    R15,R14             Load put character count                     
         END                                                                    
         IF    (R15,GT,CPGETLN),'LH R15,CPGETLN' Only what we have              
         LH    R3,METLEN           Load work line length                        
         IF    (R3,LT,R4),BEGIN    Insert after line end...                     
         LR    R2,R4               Copy put offset                              
         SR    R2,R3               Compute added length                         
         LA    R3,METLINE(R3)      Point to end of work line                    
         DEX   R2,'MVC @R3(0),CVBLANKS'  Pad end with blanks                    
         LR    R3,R4               Padded len is put offset                     
         END                                                                    
         AR    R3,R15              New line len after insertion                 
         LH    R2,METLEN           Load old line len                            
         STH   R3,METLEN           Save new line len                            
         SR    R2,R4               Len of text following insert                 
         LA    R4,METLINE(R4)      Insertion addr                               
         IF    ('LTR R3,R2',POS),'DEX R3,"MVC @R13(0),@R4"' Save text           
         LR    R2,R15              Copy insert count                            
         L     R1,CPGETSTK         Load pointer to GETSTACK                     
         DTEX  R2,'MVC @R4(0),@R1'    Insert get text                           
         LA    R4,@R2+1(R4)        Insert point for rest of line                
         TEX   R3,'MVC @R4(0),@R13'   Move in rest of line                      
*-                                                                              
*-       Go in and adjust the split offsets since we mucked                     
*-         with the line.                                                       
*-                                                                              
         IF    ('LTH R3,METNSPLT',NZ),BEGIN                                     
         LA    R2,METPUT(R5)       Point to insert offset                       
         USING (METPDATA,R2)                                                    
         LA    R4,METSAREA         Point to start of splits                     
         USING (METSPLIT,R4)                                                    
SPLITFIX IF    (METSOFFS,GE,METPOFFS),BEGIN  (Split is after insert)            
         LH    R1,METSOFFS         Load old offset                              
         AR    R1,R15              Adjust up by our insert length               
         STH   R1,METSOFFS         Update split offset                          
         END                                                                    
         LA    R4,METSNEXT         Skip to next split entry                     
         BCT   R3,SPLITFIX         Loop for all entries                         
         DROP  R4,R2                                                            
         END                                                                    
*                                                                               
         AR    R0,R15              Add this put into accumulation               
         LA    R5,L'METPDATA(R5)   Skip to next "put" entry                     
         LH    R2,CPGETLN          Load old "get" count                         
         SR    R2,R15              Decrease by what we just "put"               
         STH   R2,CPGETLN          Update "get" count                           
         LH    R14,CPGETLN         Load get stack length                        
         L     R2,CPGETSTK         Point R2 to GETSTACK                         
         LA    R3,0(R15,R2)        Point to new start of GETSTACK               
         DTEX  R14,'MVC @R2(0),@R3'  Shift GETSTACK over                        
         END                                                                    
*                                                                               
         LH    R0,METLEN           Line len                                     
         LA    R1,METLINE                                                       
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         DECR  R2                  Last char in line                            
         WHILE ((R2,GE,R1),AND,(@R2,EQ,' ')),'DECR R2; DECR R0'                 
         IF    (METNSPLT,Z),LINNSPL  Br if no splits                            
         MVC   METWSPLT,METNSPLT   Save number of splits remaining              
         LH    R5,METLCOL          Max line len                                 
         LR    R3,R1                                                            
         AR    R3,R0               End of modified line                         
         LA    R4,@R1(R5)          Modified line at max col                     
         IF    (METLCOL,LT,&LINESZ),BEGIN                                       
         IF    (R0,GT,R5),BEGIN    Text will get chopped...                     
         TSEG  'characters lost at column '                                     
         BTD   CPDOUB,0,(R5)                                                    
         TSEG  (R1),(R0),CR                                                     
         LR    R0,R5               Set max allowed len                          
         END                                                                    
         L     R2,METOLPTR         Original line len                            
         IF    ('SR R2,R5',POS),BEGIN  need to append stuff to line...          
         LR    R15,R5                                                           
         IF    ('SR R15,R0',POS),BEGIN                                          
         DEX   R15,'MVC @R3(0),CVBLANKS'  pad with blanks                       
         END                                                                    
         A     R5,METOLPTR+4       Ptr to original text                         
         DEX   R2,'MVC @R4(0),@R5'                                              
         L     R0,METOLPTR         Set good len                                 
         END                                                                    
         STH   R0,METLEN           Save new line len                            
         END                                                                    
         LA    R5,METSAREA         First METSPLIT                               
         WITH  (METSPLIT,R5),BEGIN                                              
         IF    (METWSPLT,GT,1),BEGIN  Sort multiple splits...                   
LINSSORT LA    R5,METSAREA         Start of METSPLIT's                          
         LH    R0,METWSPLT         Number of splits remaining                   
         DECR  R0                                                               
LINSSLP  IF    (METSOFFS,GT,.METSNEXT+(METSOFFS-METSPLIT)),BEGIN                
         FLIP  (METSPLIT,METSNEXT) Reverse entry order                          
         B     LINSSORT                                                         
         END                                                                    
         IF    (METSOFFS,GT,METLEN),'MVC METSOFFS,METLEN'                       
         LA    R5,METSNEXT                                                      
         BCT   R0,LINSSLP          Keep going                                   
         END                                                                    
         IF    (METSOFFS,GT,METLEN),'MVC METSOFFS,METLEN'                       
         END                                                                    
         LH    R4,METNSPLT         Get, dummy last split entry                  
         MH    R4,=AL2(L'METSPLIT)                                              
         LA    R4,METSAREA(R4)                                                  
         WITH  (METSPLIT,R4),'CLEAR METSPLIT; MVC METSOFFS,METLEN'              
         IF    ('LT R1,CPMODNEX',Z),BEGIN                                       
         L     R1,METLINE#         Original lineno                              
         A     R1,CVONE                                                         
         ST    R1,CPLCNO                                                        
         LA    R1,CPLCNO                                                        
         IF    (METNLINE,NZ),'LA R1,METNLINE'  Line after last join             
         VCALL LOCATE              Find next lineno                             
         L     R1,CPLCNO                                                        
         IF    (CPDRPT.CPFNTYT+CPFHIGH,NZ),'L R1,CVHILNO'                       
         END                                                                    
         DECR  R1                                                               
         S     R1,METLINE#         Distance between two lines                   
         CLEAR R0                                                               
         LH    R14,METWSPLT                                                     
         DR    R0,R14              Lines equally spaced                         
         IF    (R1,Z),BEGIN                                                     
         TSEG  'No line-numbers available, '                                    
         TSEG  'split(s) not possible.',,CR                                     
         B     LINBACK                                                          
         END                                                                    
         VCALL SELDELTA            Choose a nice delta                          
         LR    R5,R1               Save it                                      
*                                                                               
         LA    R4,METSAREA                                                      
         INCR  R14,METWSPLT        (include dummy metsplit)                     
         WITH  (METSPLIT,R4),BEGIN                                              
         L     R3,METLINE#         Original lineno                              
         CLEAR R2                                                               
LINSLIST ST    R3,CPLCNO           Lineno                                       
         LA    R1,METLINE(R2)                                                   
         LH    R0,METSOFFS         Offset for split                             
         SR    R0,R2                                                            
         L     R15,CPLCNO                                                       
         VCALL LENCHKM             Length warnings, etc.                        
         IF    ((^CPLFLG5.CPFNLST,AND,^METFATTN),OR,                   *        
               (METWSPLT,EQ,1)),BEGIN                                           
         VCALL LISTLINE                                                         
         IF    ('TWRITE',NZ),'SET METFATTN'                                     
         END                                                                    
         AR    R3,R5               Next lineno                                  
         LH    R2,METSOFFS                                                      
         LA    R4,METSNEXT                                                      
         DECR  R14,METWSPLT        One less split now                           
         IF    (R14,POS),LINSLIST  Loop back                                    
         END                                                                    
         CLEAR METFATTN                                                         
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'CLEAR JCBFATTN'                                       
*                                                                               
         IF    CPLFLG5.CPFSING,LINSPLIT  Finish up without prompt               
         ACALL MODREAD             Do prompt (before finishing split)           
         IF    POS,BEGIN           Undo if attn...                              
         L     R1,CVCURJCB                                                      
         WITH  (JCB,R1),'CLEAR JCBFATTN'  Reset attn                            
         TSEG  'Previous split(s) aborted.',,CR                                 
         CLEAR CPLFLG5.CPFNLST                                                  
         B     LINBACK                                                          
         END                                                                    
*                                                                               
         XPUSH R15,R1                                                           
*-                                                                              
*-       Now actually do the split(s).                                          
*-                                                                              
LINSPLIT ACALL DELJOIND            Delete any joined lines                      
         MVC   METFCOL(4),=Y(0,&LINESZ)  Reset columns                          
         LH    R14,METNSPLT        No. of splits                                
         LA    R14,@R14+1          (Include dummy METSPLIT)                     
         STH   R14,METWSPLT        Save working count                           
         LA    R4,METSAREA         Start of METSPLIT's                          
         WITH  (METSPLIT,R4),BEGIN                                              
         L     R3,METLINE#                                                      
         CLEAR R2                                                               
LINSSTOW ST    R3,CPLCNO           Save lineno                                  
         LA    R1,METLINE(R2)                                                   
         LH    R0,METSOFFS                                                      
         SR    R0,R2               Line len                                     
         MVC   METPLINE,@R1        Work buffer for PRESS                        
         XPUSH R0,R1                                                            
         LA    R1,METPLINE                                                      
         L     R15,CPLCNO                                                       
         ST    R15,CPACLNO         Update current line ptr                      
         VCALL PRESS                                                            
         VCALL STOW                Put line in ACTIVE file                      
         INCR  R0,CPACHCT          Change count                                 
         XPOP  R0,R1                                                            
         AR    R3,R5               Kick lineno                                  
         LH    R2,METSOFFS         Save current offset for loop                 
         LA    R4,METSNEXT         Next METSPLIT                                
         DECR  R14,METWSPLT        One less now                                 
         IF    (R14,POS),LINSSTOW  Loop back                                    
         END                                                                    
*                                                                               
         CEIL  R0,&LINESZ                                                       
         STH   R0,METLEN           Save line len                                
         MVC   METLINE(&LINESZ),@R1                                             
         MVC   METLINE#,CPLCNO     Update lineno                                
         IF    ^METFNEW,'MVC METLINER,CPLCNO'                                   
         L     R2,METOLPTR+4       Original line ptr                            
         IF    ('LTR R15,R0',POS),'DEX R15,"MVC @R2(0),METLINE"'                
         ST    R0,METOLPTR         Update len                                   
         IF    CPLFLG5.CPFSING,LINDONE  all done                                
         XPOP  R15,R1              Restore regs from MODREAD                    
         B     LINLOOPB                                                         
LINNSPL  IF    (CPFCMDMD,OR,(METLCOL,LT,&LINESZ)),BEGIN                         
         IF    (R0,LE,METLCOL),EXIT                                             
         TSEG  'characters past column '                                        
         TNUM  LH:METLCOL          Column no.                                   
         TSEG  ' lost',,CR                                                      
         LH    R0,METLCOL                                                       
         LA    R1,METLINE                                                       
         END                                                                    
         IF    ^CPFCMDMD,BEGIN     No len chk if retry                          
         IF    (CPLFLG5.CPFNLST,AND,(R0,LE,&LINESZ)),EXIT                       
         L     R15,METLINE#        Lineno for lenchk                            
         VCALL LENCHKM             Give length warning                          
         END                                                                    
*-                                                                              
*-       Main line modification loop.                                           
*-                                                                              
LINLOOPA STH   R0,METLEN                                                        
         SH    R0,METFCOL                                                       
         AH    R1,METFCOL                                                       
         MVC   CPLCNO,METLINE#                                                  
         IF    ^CPLFLG5.CPFNLST,'VCALL LISTLINE; TWRITE'                        
         CLEAR CPLFLG5.CPFNLST     Reset nolist                                 
         IF    CPLFLG5.CPFSING,LINDONE  all done                                
         ACALL MODREAD             Do mods/edit prompt                          
         BP    LINATTN             Attn only                                    
LINLOOPB CLEAR METNSPLT            Reset any prev splits                        
         CLEAR METPUTL             Clear put values                             
         IF    (R0,Z),BEGIN        Zero len reply                               
         IF    (R15,NEG),LINLOOP   Attn char ending                             
         B     LINDONE             Carriage return only                         
         END                                                                    
         MVC   METPLEN(2+L'METPLINE),METLEN                                     
*                                                                               
         IF    METFMOD,BEGIN       Modify...                                    
         ACALL MODS                Do modify                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Edit...                                      
         ACALL EDITS               Do edit                                      
         END                                                                    
*                                                                               
         COMMENT                   Process returns                              
         COMMENT ,                 Normal return is LOOP for more               
         COMMENT ,                 Mods/Edits                                   
         IF    (R15,Z),LINLOOP                                                  
         IF    (R15,EQ,RNORMAL2),LINLOOP                                        
         COMMENT                   Error return, restore orig line              
         IF    (R15,EQ,RERROR),BEGIN                                            
         SET   CPLFLG5.CPFNLST                                                  
         CLEAR METFINS                                                          
         B     LINBACK                                                          
         END                                                                    
         COMMENT                   Special returns..                            
         IF    (R15,EQ,RLINDONE),LINDONE                                        
         IF    (R15,EQ,RLINRET),LINRET                                          
         IF    (R15,EQ,RLINRETD),LINRETDJ                                       
         BOMB  ,                   If unrecognized return, bomb                 
         EJECT                                                                  
*-                                                                              
*-       Handle attention response to line modification.                        
*-                                                                              
LINATTN  IF    CPFCMDMD,LINABORT   No msg if command retry                      
         IF    (METNLINE,NZ),LINCH  joins were done, force msg                  
         LM    R0,R1,METOLPTR      Get original line len, loc                   
         CEIL  R0,METLCOL                                                       
         LH    R15,METLEN                                                       
         IF    (R0,LE,R15),BEGIN                                                
         IF    (R15,^POS),LINABORT  no message if null line                     
         CMPR  R15,@R1,METLINE     Has the line changed?                        
         BE    LINABORT            no, don't give any message                   
         END                                                                    
LINCH    TSEG  'Line was not changed.',,WR                                      
*                                                                               
LINABORT LA    R15,4               Ended by attn                                
         CLEAR R0                  Zot len                                      
         B     LINEXIT                                                          
*                                                                               
LINDONE  LH    R0,METLEN                                                        
         LA    R1,METLINE                                                       
         LM    R2,R3,METOLPTR      Get original line len, loc                   
         IF    (R2,GT,METLCOL),BEGIN  append ending col text...                 
         LR    R4,R1                                                            
         AR    R4,R0                                                            
         LH    R2,METLCOL                                                       
         IF    ('SR R2,R0',POS),BEGIN                                           
         DEX   R2,'MVC @R4(0),CVBLANKS'                                         
         LA    R4,@R2+1(R4)                                                     
         END                                                                    
         LR    R5,R3                                                            
         AH    R5,METLCOL                                                       
         L     R2,METOLPTR                                                      
         STH   R2,METLEN           Update new len                               
         LR    R0,R2                                                            
         SH    R2,METLCOL                                                       
         DEX   R2,'MVC @R4(0),@R5'    Move in text past last col                
         END                                                                    
*                                                                               
         IF    CPFCMDMD,BEGIN      Retry...                                     
         IF    ('LTR R15,R0',POS),'DEX R15,"MVC @R3(0),@R1"' upd orig           
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         LM    R2,R3,METOLPTR      Get original line loc, len                   
         LH    R15,METLEN                                                       
         IF    (R2,LE,R15),BEGIN                                                
         CMPR  R15,@R3,METLINE     Has the line changed?                        
         IF    (EQ,AND,(METNLINE,Z)),LINDLC  No changes, scram                  
         IF    ('LTR R15,R0',POS),'DEX R15,"MVC @R3(0),@R1"'                    
         END                                                                    
         INCR  R14,CPACHCT         Kick change count                            
LINDLC   ACALL DELJOIND            Delete any joined lines                      
         L     R15,METLINE#                                                     
         VCALL PRESS                                                            
         VCALL STOW                Replace line in ACTIVE file                  
         END                                                                    
         L     R1,METOLPTR+4       Line addr                                    
         LH    R0,METLEN           And len                                      
LINRETDJ ACALL DELJOIND            Last chance to delete joined lines           
LINRET   IF    (METFLINE,NE,-1),BEGIN  New line to modify...                    
         LA    R1,METFLINE                                                      
         VCALL LOCATE                                                           
         L     R1,METOLPTR+4       Unpress into orig. line bufr                 
         VCALL UNPRESS                                                          
         MVC   CPLFLG4(2),METLF4   Restore                                      
         CLEAR CPMODNEX            No longer applies                            
         CLEAR METFLAGS            Reset stuff                                  
         SET   METFNEW             Line has no relation to range                
         B     LINSTART                                                         
         END                                                                    
*                                                                               
LINCOLL  IF    (METCDELT,NZ),BEGIN  Collecting some new lines...                
         MVC   METFCOL(4),=Y(0,&LINESZ)  Reset columns                          
         CLEAR CPLFLG5.CPFSING+CPFNLST  Reset options                           
         L     R2,METLINE#         Current lineno                               
         L     R1,METCDELT         Current delta                                
         AR    R2,R1               Next lineno                                  
         IF    (R2,GT,METCLLIN),BEGIN  Collect ovfl, renumber...                
         SRL   R1,1                Halve delta                                  
         IF    (R1,Z),BEGIN        Not enough linenos...                        
         TSEG  'No more line-numbers available, collect aborted.',,CR           
         EXIT  LINCOLL                                                          
         END                                                                    
         VCALL SELDELTA            Choose a nice delta                          
         ST    R1,METCDELT         Save new delta                               
         ST    R1,CPWKDL           Save (for NUMRANGE)                          
         MVC   CPWKPS,METCLLIN     Last possible line                           
         TSEG  'Renumbered by '                                                 
         L     R0,METCDELT                                                      
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),WR                                                     
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'CLEAR JCBFATTN'                                       
         SET   METFREN             Renumber is pending                          
         L     R2,METCDELT                                                      
         MH    R2,METCNUM                                                       
         A     R2,METCFLIN         New last line-number                         
         A     R2,METCDELT         New next line-number                         
         END                                                                    
         LR    R0,R2                                                            
         ACALL LINERD              Get input                                    
         IF    POS,BEGIN           Attn only...                                 
         IF    METFREN,'TSEG "Original numbering kept.",,WR'                    
         EXIT  LINCOLL                                                          
         END                                                                    
         MVC   METLINE(&LINESZ),@R1                                             
         LA    R1,METLINE                                                       
         IF    METFREN,BEGIN       Do renumbering now...                        
         XPUSH R15,R3                                                           
         L     R0,METCFLIN         R0 = First lineno                            
         L     R1,CPWKPS           R1 = Last lineno                             
         L     R2,CPWKDL           R2 = Delta                                   
         LR    R3,R0               R3 = Starting lineno                         
         VCALL NUMRANGE            Re-number                                    
         CLEAR METFREN                                                          
         XPOP  R15,R3                                                           
         END                                                                    
         ST    R2,CPACLNO          Update current line ptr                      
         ST    R2,METLINE#         Save new line-number                         
         IF    ^METFNEW,'ST R2,METLINER'                                        
         IF    ('LTR R2,R15',Z),'L R15,METLINE#; VCALL LENCHKM'                 
         STH   R0,METLEN                                                        
         IF    METFINS,'CLEAR METFINS,METCDELT'                                 
         INCR  R15,METCNUM         Kick collect line count                      
         IF    (R2,Z),LINDONE      Add line to file                             
         CLEAR METCDELT            Turn off collecting                          
         B     LINLOOP             @attn... go modify this line                 
         END                                                                    
*                                                                               
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'CLEAR JCBFATTN'                                       
*                                                                               
         CLEAR R15                 Rtn code                                     
         IF    METFSTOP,'LA R15,4; LCR R15,R15'                                 
LINEXIT  MVC   CPLCNO,METLINER     Last modify lineno (in range)                
         MVC   CPLFLG4(2),METLF4   Restore local flags                          
         CLEAR CPMODNEX                                                         
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*-                                                                              
*-       Routine to delete any previously joined lines.                         
*-                                                                              
DELJOIND PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (METNLINE,NZ),BEGIN There are lines to delete...                 
         L     R0,METLINE#                                                      
         A     R0,=F'1'                                                         
         L     R1,METNLINE                                                      
         DECR  R1                                                               
         VCALL DELRANGE            Delete lines R0/R1                           
         CLEAR METNLINE            Reset                                        
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  MODREAD -- Routine to do terminal read for mods/edits prompt.                
*                                                                               
*    On exit:                                                                   
*      R1,R0 -- read line loc & len                                             
*      R15 (and cc):                                                            
*         0 - normal read completion                                            
*        pos- abort line                                                        
*                                                                               
MODREAD  PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    CPFLISXP,BEGIN      List options explicit...                     
         IF    METLF5.CPFNLST,'SET CPLFLG5.CPFNLST'                             
         IF    METLF5.CPFSING,'SET CPLFLG5.CPFSING'                             
         END                                                                    
         SETMSG '  Edits '                                                      
         IF    METFMOD,'SETMSG "   Mods  "'                                     
         TSEG  (R1),(R0)                                                        
         SETMSG '> '                                                            
         IF    CPFUPPER,'SETMSG "? "'                                           
         TREAD (R1),(R0)                                                        
         BM    CVABORT             Logging off, scram                           
*                                                                               
         IF    (R15,EQ,3),BEGIN    @break...                                    
         FLIP  CPLFLG5.CPFSING     Toggle single                                
         IF    ^CPLFLG5.CPFSING,'CLEAR CPLFLG5.CPFNLST'  list!                  
         CLEAR R15                 Looks like normal completion                 
         END                                                                    
*                                                                               
         IF    (R15,Z),BEGIN       Normal completion...                         
         CEIL  R0,&LINESZ          Keep within bounds                           
         LR    R5,R1                                                            
         SH    R5,METFCOL          Adjust ptr for starting col                  
         ST    R5,METPRMPT                                                      
         END                                                                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  EDITS -- EDIT processing routine.                                            
*                                                                               
*    On entry:                                                                  
*      R1,R0 - input line location, length                                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      RERROR - error of some sort occurred                                     
*                                                                               
EDWA     RECORD BEGIN                                                           
EDCHAR   DS    C                   Working character                            
         END                                                                    
*-                                                                              
EDITS    PROC  EDWA                                                             
         WITH  (METWA,R6)                                                       
*-                                                                              
*-       Save and upper case the first character of the EDITS?                  
*-         response (it is an edit option).                                     
*-                                                                              
         MVC   EDCHAR,@R1          Save special first edit char                 
         IF    ((EDCHAR,GE,'a'),AND,(EDCHAR,LE,'z')),'OI EDCHAR,C" "'           
*-                                                                              
*-       Set up for processing routine.                                         
*-                                                                              
         INCR  R15,METPRMPT                                                     
         LA    R1,@R1+1            Update prompt start ptr                      
         DECR  R0                                                               
         CLEAR R15                                                              
*                                                                               
         IF    (EDCHAR,EQ,'.'),'ACALL FUNCTION'                                 
         ELSEIF (EDCHAR,EQ,'?'),'ACALL HELPLMOD'                                
         ELSEIF (EDCHAR,EQ,' '),'ACALL E'                                       
         ELSEIF (EDCHAR,EQ,'E'),'ACALL E'                                       
         ELSEIF (EDCHAR,EQ,'M'),'ACALL MODS'   Treat as mods line               
         ELSEIF (EDCHAR,EQ,'L'),'CLEAR CPLFLG5.CPFNLST; ACALL E'                
         ELSEIF (EDCHAR,EQ,'N'),'SET CPLFLG5.CPFNLST; ACALL E'                  
         ELSE  BEGIN               Bad character...                             
         DECR  R1                  Point to char                                
         TSEG  (R1),1              First char                                   
         TSEG  ': invalid first edit char.  Retype line.',,CR                   
         LA    R15,RERROR          Error                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  MODS -- MODIFY processing routine.                                           
*                                                                               
*    On entry:                                                                  
*      R1,R0 - input line location, length                                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0,4 - ok                                                                 
*      8,... - error                                                            
*                                                                               
MODS     PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         CLEAR METFPFX,METNUM,METFWORD                                          
*                                                                               
         WHILE (R0,POS),BEGIN      Go through chars...                          
         LR    R4,R1                                                            
         CLEAR R2                  (for trt)                                    
         L     R3,=A(MCHAR)                                                     
         LR    R15,R0                                                           
         DEX   R15,'TRT @R1(0),@R3'   Find a modify char                        
         IF    Z,EXIT              Nothing (all blanks)                         
         GEN   'SR R4,R1; AR R0,R4'  Adjust len                                 
         IF    ('LTH R15,METNUM',Z),'STM R0,R1,METPTRS'                         
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         IF     (R2,EQ,C'B'),'ACALL B; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'C'),'ACALL C; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'D'),'ACALL D; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'E'),'ACALL E; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'G'),'ACALL G; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'I'),'ACALL I; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'L'),'ACALL L; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'N'),'ACALL N; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'P'),'ACALL P; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'R'),'ACALL R; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'S'),'ACALL S; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'T'),'ACALL T; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'X'),'ACALL X; BNZ MODSEXIT'                            
         ELSEIF (R2,EQ,C'?'),'ACALL HELPLMOD; BNZ MODSEXIT'                     
         COMMENT , NOTE ALL FUNCTION CALLS EXIT                                 
         ELSEIF (R2,EQ,X'4B'),'ACALL FUNCTION; B MODSEXIT'                      
         ELSEIF (R2,EQ,C'*'),'ACALL REMAINDR; BNZ MODSEXIT'                     
         ELSEIF (R2,EQ,C'W'),'ACALL WORD; BNZ MODSEXIT'                         
         ELSEIF ((R2,GE,C'0'),AND,(R2,LE,C'9')),                       X        
               'ACALL DIGIT; BNZ MODSEXIT'                                      
         ELSE  'ACALL BADCHAR; LA R15,RERROR; B MODSEXIT'                       
*                                                                               
         COMMENT                   IF NOT NUM PREFIX, CLEAR PREFIX              
         IF    ^METFPFX,'CLEAR METNUM,METFWORD '                                
         CLEAR METFPFX                                                          
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
MODSEXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*        MCHAR macro to make building MODIFY char stop table a                  
*          little easier.                                                       
*                                                                               
         MACRO                                                                  
         MCHAR &CH                                                              
         ORG   MCHAR+C'&CH'                                                     
         DC    C'&CH'                                                           
         AIF   ('&CH' LT 'A' OR '&CH' GT 'Z').EXIT                              
         ORG   MCHAR+C'&CH'-X'40'  Lower case                                   
         DC    C'&CH'                                                           
.EXIT    MEND                                                                   
*box                                                                            
*                                                                               
*        MODIFY character TRT table.                                            
*                                                                               
MCHAR    DC    256X'FF'          MCHAR TRT table                                
*                                                                               
         ORG   MCHAR+C' '                                                       
         DC    X'00'               Skip blanks                                  
         MCHAR L                   List                                         
         MCHAR N                   Nolist                                       
         MCHAR E                   Edits                                        
         MCHAR X                   Expel (multi-delete)                         
         MCHAR D                   Delete                                       
         MCHAR G                   Get                                          
         MCHAR R                   Replace                                      
         MCHAR I                   Insert                                       
         MCHAR P                   Put                                          
         MCHAR B                   Blank                                        
         MCHAR C                   Case change                                  
         MCHAR T                   Tab                                          
         MCHAR S                   Split                                        
         MCHAR ?                   Help                                         
         MCHAR .                   Line oriented function                       
         MCHAR *                   (acts as digit spec)                         
         MCHAR W                   Word (acts as implicit digit spec)           
         MCHAR 0                   Numerics                                     
         MCHAR 1                                                                
         MCHAR 2                                                                
         MCHAR 3                                                                
         MCHAR 4                                                                
         MCHAR 5                                                                
         MCHAR 6                                                                
         MCHAR 7                                                                
         MCHAR 8                                                                
         MCHAR 9                                                                
         ORG                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DIGIT -- Process numeric characters.                                         
*                                                                               
*    On entry:                                                                  
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
DIGIT    PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         SET   METFPFX             Numeric prefix                               
         IF    (R0,NP),'ACALL DIGERR; B DIGEXIT'                                
         LR    R3,R1                                                            
         LR    R2,R0                                                            
         DECR  R1                  First digit                                  
         LA    R0,1                No. of digits                                
DIGLOOP  IF    ((@R3,GE,'0'),AND,(@R3,LE,'9')),BEGIN                            
         A     R0,CVONE                                                         
         LA    R3,@R3+1            Next digit                                   
         BCT   R2,DIGLOOP                                                       
         ACALL DIGERR                                                           
         B     DIGEXIT                                                          
         END                                                                    
         IF    (@R3,EQ,' '),'ACALL DIGERR; B DIGEXIT'                           
*                                                                               
         VCALL DTB                                                              
         IF    (R15,NP),BEGIN                                                   
         TSEG  'Number must be positive.',,CR                                   
         LA    R15,RERROR          Error                                        
         B     DIGEXIT                                                          
         END                                                                    
         IF    (R15,GT,&LINESZ),BEGIN                                           
         TSEG  'Number is too big.',,CR                                         
         LA    R15,RERROR          Error                                        
         B     DIGEXIT                                                          
         END                                                                    
*                                                                               
         STH   R15,METNUM                                                       
         LR    R1,R3                                                            
         LR    R0,R2                                                            
         CLEAR R15                 A-ok                                         
*                                                                               
DIGEXIT  PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  REMAINDR -- Process "*" (remainder) character.                               
*                                                                               
*    On entry:                                                                  
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
REMAINDR PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,NZ),'ACALL BADNUM; B REMERR'                                
*                                                                               
         IF    (R0,NP),'ACALL DIGERR; B REMERR'                                 
*                                                                               
         SET   METFPFX             Numeric prefix                               
         L     R4,METPRMPT                                                      
         CLEAR R15                 Assume +0                                    
         IF    ((@R1,EQ,'+'),OR,(@R1,EQ,'-')),BEGIN                             
         LR    R3,R1                                                            
REMLOOP  LA    R1,@R1+1                                                         
         BCT   R0,REMNEXT                                                       
         ACALL DIGERR                                                           
         B     REMERR                                                           
*                                                                               
REMNEXT  IF    ((@R1,GE,'0'),AND,(@R1,LE,'9')),BEGIN                            
         IC    R2,@R1                                                           
         N     R2,=A(X'F')                                                      
         MH    R15,=Y(10)                                                       
         AR    R15,R2                                                           
         B     REMLOOP                                                          
         END                                                                    
*                                                                               
         IF    (@R3,EQ,'-'),'LCR R15,R15'                                       
         END                                                                    
*                                                                               
         IF    ((@R1,EQ,'P'),OR,(@R1,EQ,'p')),BEGIN                             
         IF    (R15,NZ),BEGIN      Can't have "*+NP" OR "*-NP"                  
         TSEG  '*+N or *-N invalid with "P"',,CR                                
         B     REMERR              Down the tubes, fella                        
         END                                                                    
*                                                                               
         LA    R15,&LINESZ         Plop it all out here                         
         STH   R15,METNUM          Save value                                   
         CLEAR R15                 A-ok                                         
         B     REMEXIT                                                          
         END                                                                    
*                                                                               
         AH    R15,METLEN                                                       
         IF    NEG,BEGIN                                                        
         TSEG  'Number must be positive.',,CR                                   
         B     REMERR                                                           
         END                                                                    
         IF    (R15,GT,&LINESZ),BEGIN                                           
         TSEG  'Number is too big.',,CR                                         
         B     REMERR                                                           
         END                                                                    
         IF    ((@R1,EQ,'T'),OR,(@R1,EQ,'t')),BEGIN                             
         LA    R15,@R15+1          Position to ending column                    
         STH   R15,METNUM                                                       
         CLEAR R15                                                              
         B     REMEXIT                                                          
         END                                                                    
*                                                                               
         AR    R15,R4                                                           
         S     R15,METPTRS+4       Remaining line len                           
         IF    ^POS,'LA R4,@R4+1; ST R4,METPRMPT'  nothing left                 
         ELSE  BEGIN                                                            
         IF    ((@R1,EQ,'R'),OR,(@R1,EQ,'r')),'LA R15,&LINESZ'                  
         STH   R15,METNUM                                                       
         END                                                                    
         IF    (@R1,EQ,' '),'ACALL DIGERR; B REMERR'                            
         IF    ((@R1,EQ,'*'),OR,((@R1,GE,'0'),AND,                     X        
               (@R1,LE,'9'))),'ACALL DIGERR; B REMERR'                          
*                                                                               
         CLEAR R15                 OK                                           
         B     REMEXIT                                                          
*                                                                               
REMERR   LABEL ,                                                                
         LA    R15,RERROR          Error                                        
REMEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WORD -- Implicit digit specification generated by words.                     
*                                                                               
*    On entry:                                                                  
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
WORD     PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,Z),'LA R15,1'        Default to one word                    
         SET   METFPFX             Set numeric prefix                           
         SET   METFWORD            Set word mode                                
         IF    (R0,Z),BEGIN        Nothing left                                 
         CLEAR R15                                                              
         B     WORDEXIT                                                         
         END                                                                    
         IF    ((@R1,EQ,'P'),OR,(@R1,EQ,'p')),BEGIN                             
         STH   R15,METNUM          Don't futz with a put word count             
         CLEAR R15                 OK                                           
         B     WORDEXIT                                                         
         END                                                                    
*                                                                               
         LR    R2,R15              Save the word count for later                
         L     R5,METPTRS+4        Load mod-char addr                           
         S     R5,METPRMPT         Compute mod-char offset                      
*-                                                                              
*-       Find the beginning of the current word.                                
*-                                                                              
         LA    R5,METLINE(R5)      Point to word in line                        
         IF    (@R5,EQ,' '),BEGIN                                               
         TSEG  'Word term positioned under a blank',,CR                         
         B     WORDERR                                                          
         END                                                                    
         CLEAR R4                  Clear starting point adjustment              
         LA    R3,METLINE-1        Point to start of line - 1                   
         WHILE ((R5,GT,R3),AND,(@R5,NE,' ')),'DECR R5; INCR R4'                 
         INCR  R5                  Move up to 1st character in word             
         DECR  R4                  Re-adjust starting point adjustment          
         IF    (R4,NZ),BEGIN       Fake out where we found "W" stuff            
         L     R3,METPTRS          Load old length                              
         AR    R3,R4               Back up                                      
         ST    R3,METPTRS          Update line length                           
         L     R3,METPTRS+4        Load old start                               
         SR    R3,R4               Back up                                      
         ST    R3,METPTRS+4        Update line start                            
         END                                                                    
*-                                                                              
*-       Skip over number of words specified.                                   
*-                                                                              
         LR    R15,R5              Copy word start location                     
         LH    R3,METLEN           Load line length                             
         LA    R3,METLINE(R3)      Point to end of line                         
WORDLOOP WHILE ((@R15,EQ,' '),AND,(R15,LT,R3)),'INCR R15'                       
         IF    (R15,GE,R3),WORDSTOP Not enough words ...                        
         WHILE ((@R15,NE,' '),AND,(R15,LT,R3)),'INCR R15'                       
         IF    (R15,GE,R3),WORDSTOP Not enough words ...                        
         BCT   R2,WORDLOOP         Skip over multiple blanks                    
*-                                                                              
*-       Compute required skip count and return.                                
*-                                                                              
WORDSTOP SR    R15,R5              Compute character skip count                 
         INCR  R15                 Also blank at end of last word               
         STH   R15,METNUM          Save for later                               
         CLEAR R15                 OK                                           
         B     WORDEXIT                                                         
*                                                                               
WORDERR  LABEL ,                                                                
         LA    R15,RERROR          Error                                        
WORDEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LIST -- Process L modify character.                                          
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
L        PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,NZ),'ACALL BADNUM'   Not expecting length spec              
         ELSE  BEGIN                                                            
         CLEAR CPLFLG5.CPFNLST+CPFSING                                          
         CLEAR R15                 OK                                           
         END                                                                    
         PEND                                                                   
*box                                                                            
*                                                                               
*  NOLIST -- Process N modify character.                                        
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
N        PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,NZ),'ACALL BADNUM'   Not expecting length spec              
         ELSE  BEGIN                                                            
         SET   CPLFLG5.CPFNLST                                                  
         CLEAR R15                 OK                                           
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  EDIT -- Process E modify character.                                          
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
E        PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,Z),'LR R15,R0' No explicit len, use remaining               
         IF    (R15,GT,R0),'LR R15,R0'  Only use up to line end                 
         IF    (R15,Z),'CLEAR R15; EXIT E'                                      
*                                                                               
         LR    R5,R1                                                            
         S     R5,METPRMPT         Offset in line                               
         LR    R4,R5                                                            
         AR    R4,R15              Ending pos                                   
         LH    R2,METLEN                                                        
*                                                                               
         IF    (R4,GT,R2),BEGIN    Extending line...                            
         STH   R4,METLEN           Update line len                              
         SR    R4,R2                                                            
         LA    R2,METLINE(R2)                                                   
         DEX   R4,'MVC @R2(0),CVBLANKS'  pad with blanks                        
         END                                                                    
*-                                                                              
*-       Do character at a time replacement.                                    
*-                                                                              
         LA    R5,METLINE(R5)                                                   
         WHILE (R15,POS),BEGIN                                                  
         IF    (@R1,NE,' '),BEGIN                                               
         IF    ((@R1,EQ,'|'),AND,(@R5,NE,' ')),'MVI @R1,C" "'                   
         MVC   @R5(1),@R1                                                       
         END                                                                    
         LA    R5,@R5+1                                                         
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         DECR  R15                                                              
         END                                                                    
*                                                                               
         CLEAR R15                 OK                                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INSERT -- Process I modify character.                                        
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
I        PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,Z),'LR R15,R0' No explicit len, use remaining               
         IF    (R15,Z),'CLEAR R15; EXIT I'                                      
*                                                                               
         L     R4,METPTRS+4        Addr of mod char                             
         S     R4,METPRMPT         Insertion point offset                       
         LH    R3,METLEN                                                        
         IF    (R3,LT,R4),BEGIN    Insert after line end...                     
         LR    R2,R4                                                            
         SR    R2,R3                                                            
         LA    R3,METLINE(R3)                                                   
         DEX   R2,'MVC @R3(0),CVBLANKS'  pad with blanks                        
         LR    R3,R4                                                            
         END                                                                    
*                                                                               
         AR    R3,R15              New line len                                 
         IF    (R3,GT,L'METLINE),BEGIN  Insert will cause ovfl...               
         SH    R3,=AL2(L'METLINE)  Amount of excess                             
         IF    ('SR R15,R3',NP),'CLEAR R0; CLEAR R15; B IEXIT'                  
         LA    R3,L'METLINE        Set for max                                  
         END                                                                    
*                                                                               
         LH    R2,METLEN                                                        
         STH   R3,METLEN           Save new line len                            
         SR    R2,R4               Len of text following insert                 
         LA    R4,METLINE(R4)      Insertion addr                               
         IF    ('LTR R3,R2',POS),'DEX R3,"MVC @R13(0),@R4"' Save text           
         L     R2,METPRMPT                                                      
         SR    R2,R15                                                           
         ST    R2,METPRMPT         Update line "start" ptr                      
         LR    R2,R15                                                           
         IF    (R2,GT,R0),'LR R2,R0'                                            
         DTEX  R2,'MVC @R4(0),@R1'    Insert from modify line                   
         LA    R4,@R2+1(R4)                                                     
         LR    R2,R15                                                           
         IF    ('SR R2,R0',POS),BEGIN  Fill rest with blanks...                 
         DEX   R2,'MVC @R4(0),CVBLANKS'                                         
         LA    R4,@R2+1(R4)                                                     
         END                                                                    
         TEX   R3,'MVC @R4(0),@R13'   Rest of line                              
*                                                                               
         AR    R1,R15              Update remaining input...                    
         SR    R0,R15              ...ptrs                                      
*                                                                               
         CLEAR R15                 OK                                           
*                                                                               
IEXIT    PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PUT -- Process P modify character.                                           
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
P        PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*-                                                                              
*-       Figure out implied length if none given.                               
*-                                                                              
         IF    (R15,Z),BEGIN       No length spec...                            
         LA    R15,1                                                            
         IF    (R0,Z),EXIT                                                      
PSCAN    IF    ((@R1,EQ,'P'),OR,(@R1,EQ,'p')),BEGIN                             
         LA    R15,@R15+1          No. of p-chars                               
         LA    R1,@R1+1                                                         
         BCT   R0,PSCAN                                                         
         END                                                                    
         END                                                                    
*                                                                               
         LH    R4,METPUTL          Load current offset                          
         IF    (R4,GE,METPUTMX),BEGIN                                           
         TSEG  'Too many PUT operations',,CR                                    
         LA    R15,RERROR                                                       
         B     PEXIT                                                            
         END                                                                    
*                                                                               
         LA    R3,METPUT(R4)       Point to new entry                           
         WITH  (METPDATA,R3),BEGIN                                              
         CLEAR METPDATA            Clear up area                                
         L     R2,METPTRS+4                                                     
         S     R2,METPRMPT         Calc offset                                  
         STH   R2,METPOFFS         Save it                                      
         IF    METFWORD,'LCR R15,R15'  Flag as a word count                     
         STH   R15,METPUTLN        Save length                                  
         LA    R4,L'METPDATA(R4)   Compute next offset                          
         STH   R4,METPUTL          Save for next time                           
         END                                                                    
*                                                                               
         CLEAR R15                 OK                                           
*                                                                               
PEXIT    LABEL ,                                                                
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BLANK -- Process B modify character.                                         
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
B        PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,NZ),'DECR R15'                                              
         L     R4,METPTRS+4                                                     
         S     R4,METPRMPT         Offset to text to blank                      
         LA    R3,@R15+1(R4)                                                    
*                                                                               
         IF    (R3,GT,L'METLINE),BEGIN  Too many chars...                       
         SH    R3,=Y(L'METLINE)                                                 
         SR    R15,R3                                                           
         IF    NEG,'CLEAR R0; CLEAR R15; B BEXIT'                               
         END                                                                    
*                                                                               
         LA    R4,METLINE(R4)                                                   
         EX    R15,'MVC @R4(0),CVBLANKS'  blank out text                        
*                                                                               
         CLEAR R15                 OK                                           
BEXIT    PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CASE -- Process C modify character.                                          
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
C        PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,NZ),'DECR R15'                                              
         L     R4,METPTRS+4                                                     
         S     R4,METPRMPT         Offset to case change text                   
         LA    R3,@R15+1(R4)                                                    
*                                                                               
         IF    (R3,GT,L'METLINE),BEGIN  Too many chars...                       
         SH    R3,=Y(L'METLINE)                                                 
         SR    R15,R3                                                           
         IF    NEG,'CLEAR R0; CLEAR R15; B CEXIT'                               
         END                                                                    
*                                                                               
         LA    R4,METLINE(R4)                                                   
         L     R3,=A(UPLOWTBL)                                                  
         EX    R15,'TR @R4(0),@R3'    Flip case                                 
*                                                                               
CEXIT    CLEAR R15                 OK                                           
         PEND                                                                   
*-                                                                              
*-       Case flip translate table.                                             
*-                                                                              
UPLOWTBL DC    256AL1(*-UPLOWTBL)                                               
         ORG   UPLOWTBL+C'a'       LOWER CASE                                   
         DC    C'ABCDEFGHI'                                                     
         ORG   UPLOWTBL+C'j'       LOWER CASE                                   
         DC    C'JKLMNOPQR'                                                     
         ORG   UPLOWTBL+C's'       LOWER CASE                                   
         DC    C'STUVWXYZ'                                                      
         ORG   UPLOWTBL+C'A'                                                    
         DC    C'abcdefghi'        LOWER CASE                                   
         ORG   UPLOWTBL+C'J'                                                    
         DC    C'jklmnopqr'        LOWER CASE                                   
         ORG   UPLOWTBL+C'S'                                                    
         DC    C'stuvwxyz'         LOWER CASE                                   
         ORG                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TAB -- Process T modify character.                                           
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
T        PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,Z),BEGIN                                                    
   TSEG 'Missing modify char (column expected before tab char).',,CR            
         LA    R15,RERROR                                                       
         B     TEXIT                                                            
         END                                                                    
*                                                                               
         DECR  R15                                                              
         L     R4,METPTRS+4                                                     
         L     R3,METPRMPT                                                      
         SR    R4,R3               Current position                             
         SR    R15,R4              Rel offset from current                      
         SR    R3,R15              Adjust to new pos                            
         LR    R2,R1                                                            
         S     R2,METPTRS+4        Tab char, etc.                               
         AR    R3,R2               Noise                                        
         ST    R3,METPRMPT         Update ptr                                   
*                                                                               
         CLEAR R15                 OK                                           
TEXIT    PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  EXPEL -- Process X modify character.                                         
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
X        PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*-                                                                              
*-       Figure out how many characters to delete.                              
*-                                                                              
         IF    (R15,Z),BEGIN       No length specification...                   
         LA    R15,1                                                            
         IF    (R0,Z),EXIT                                                      
         WHILE (((@R1,EQ,'X'),OR,(@R1,EQ,'x')),AND,                    X        
               (R0,POS)),BEGIN                                                  
         LA    R15,@R15+1          No. of x-chars                               
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*-                                                                              
*-       Check out length specification.                                        
*-                                                                              
         ELSE  BEGIN               Check out len specification...               
         LR    R2,R15              No. of chars to delete                       
         LR    R4,R1                                                            
         S     R4,METPTRS+4        No. of noise chars                           
         IF    ('SR R2,R4',NP),EXIT                                             
         LR    R3,R2                                                            
         LR    R4,R1                                                            
         IF    (R0,Z),EXIT                                                      
         IF    (R0,LT,R2),'LR R2,R0'                                            
*                                                                               
XLP      IF    (@R4,EQ,'.'),EXIT                                                
         IF    (@R4,NE,' '),BEGIN  Don't accept this...                         
         TSEG  'Modify characters invalid in deletion range.',,CR               
         LA    R15,RERROR                                                       
         B     XEXIT                                                            
         END                                                                    
         LA    R4,@R4+1            Next char                                    
         BCT   R2,XLP                                                           
         END                                                                    
*-                                                                              
*-       Delete the characters.                                                 
*-                                                                              
         L     R4,METPTRS+4                                                     
         L     R2,METPRMPT                                                      
         SR    R4,R2               Offset for delete                            
         AR    R2,R15                                                           
         ST    R2,METPRMPT         Save adjusted line start ptr                 
         LH    R2,METLEN                                                        
         LR    R5,R2                                                            
         COMMENT                   If delete starts past line end,              
         IF    ('SR R5,R4',NP),'CLEAR R15; B XEXIT'  exit                       
         IF    (R15,GT,R5),'LR R15,R5'  Only delete up to end                   
         SR    R2,R15              Reduce line len                              
         STH   R2,METLEN           Save new line len                            
         SR    R5,R15              Len of text after deleted stuff              
         LA    R4,METLINE(R4)      Start of deletion                            
         LA    R3,@R15(R4)         Text after deletion                          
         TDEX  R5,'MVC @R4(0),@R3' Move text over                               
*                                                                               
         CLEAR R15                 OK                                           
*                                                                               
XEXIT    PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DELETE -- Process D modify character.                                        
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
D        PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*-                                                                              
*-       Figure out how many characters to delete.                              
*-                                                                              
         IF    (R15,Z),BEGIN       No length specification...                   
         LA    R15,1                                                            
         IF    (R0,Z),EXIT                                                      
         WHILE (((@R1,EQ,'D'),OR,(@R1,EQ,'d'),OR,(@R1,EQ,' ')),AND,    X        
               (R0,POS)),BEGIN                                                  
         LA    R15,@R15+1          No. of d-chars                               
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*-                                                                              
*-       Check out length specification.                                        
*-                                                                              
         ELSE  BEGIN               Check out len specification...               
         LR    R2,R15              No. of chars to delete                       
         LR    R4,R1                                                            
         S     R4,METPTRS+4        No. of noise chars                           
         IF    ('SR R2,R4',NP),EXIT                                             
         LR    R3,R2                                                            
         LR    R4,R1                                                            
         IF    (R0,Z),EXIT                                                      
         IF    (R0,LT,R2),'LR R2,R0'                                            
*                                                                               
DLP      IF    (@R4,EQ,'.'),EXIT                                                
         IF    (@R4,NE,' '),BEGIN  Don't accept this...                         
         TSEG  'Modify characters invalid in deletion range.',,CR               
         LA    R15,RERROR                                                       
         B     DEXIT                                                            
         END                                                                    
         LA    R4,@R4+1            Next char                                    
         BCT   R2,DLP                                                           
         END                                                                    
*-                                                                              
*-       Delete the characters.                                                 
*-                                                                              
         L     R4,METPTRS+4                                                     
         L     R2,METPRMPT                                                      
         SR    R4,R2               Offset for delete                            
         AR    R2,R15                                                           
         ST    R2,METPRMPT         Save adjusted line start ptr                 
         LH    R2,METLEN                                                        
         LR    R5,R2                                                            
         COMMENT                   If delete starts past line end,              
         IF    ('SR R5,R4',NP),'CLEAR R15; B DEXIT'  exit                       
         IF    (R15,GT,R5),'LR R15,R5'  Only delete up to end                   
         SR    R2,R15              Reduce line len                              
         STH   R2,METLEN           Save new line len                            
         SR    R5,R15              Len of text after deleted stuff              
         LA    R4,METLINE(R4)      Start of deletion                            
         LA    R3,@R15(R4)         Text after deletion                          
         TDEX  R5,'MVC @R4(0),@R3' Move text over                               
*                                                                               
         CLEAR R15                 OK                                           
*                                                                               
DEXIT    PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GET -- Process G modify character.                                           
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
G        PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,NZ),GTL        Length spec, go do checking                  
         LA    R15,1                                                            
         IF    (R0,Z),GT                                                        
GSCAN    IF    ((@R1,EQ,'G'),OR,(@R1,EQ,X'87')),BEGIN                           
         LA    R15,@R15+1          No. of g-chars                               
         LA    R1,@R1+1                                                         
         BCT   R0,GSCAN                                                         
         END                                                                    
         B     GT                                                               
*                                                                               
GTL      LR    R2,R15              No. of chars to get (delete)                 
         LR    R4,R1                                                            
         S     R4,METPTRS+4        No. of noise chars                           
         IF    ('SR R2,R4',^POS),GT                                             
         LR    R3,R2                                                            
         LR    R4,R1                                                            
         IF    (R0,Z),GT                                                        
         IF    (R0,LT,R2),'LR R2,R0'                                            
GTLP     IF    (@R4,EQ,'.'),GT                                                  
         IF    (@R4,NE,' '),BEGIN  Temporary... don't accept this               
         TSEG  'Modify chars invalid in GET range',,CR                          
         LA    R15,RERROR                                                       
         B     GEXIT                                                            
         END                                                                    
         LA    R4,@R4+1            Next char                                    
         BCT   R2,GTLP                                                          
*                                                                               
GT       LH    R2,CPGETLN          Load length of getstack                      
         AR    R2,R15              Add in length of new gets                    
         IF    (R2,GT,&LINESZ),BEGIN                                            
         TSEG  'New GETs will not fit in GET stack',,CR                         
         LA    R15,RERROR                                                       
         B     GEXIT                                                            
         END                                                                    
         L     R4,METPTRS+4                                                     
         L     R2,METPRMPT         Load old line start ptr                      
         SR    R4,R2               Offset for get                               
         AR    R2,R15              Length of get                                
         ST    R2,METPRMPT         Save adjusted line start ptr                 
*-                                                                              
*-       Pad work line with blanks if gets extend beyound the end.              
*-                                                                              
         LH    R2,METLEN           Load line length                             
         LR    R5,R2               Copy into new reg                            
         LR    R3,R4               Copy get offset                              
         AR    R3,R15              Compute end of get                           
         IF    (R3,GT,R2),BEGIN    Get beyound end of line                      
         STH   R3,METLEN           Save new length                              
         SR    R3,R2               Compute number of pad-blanks                 
         AR    R5,R3               Adjust length by pad                         
         LA    R2,METLINE(R2)      Pad blanks on end of line                    
         DEX   R3,'MVC @R2(0),CVBLANKS'                                         
         END                                                                    
         SR    R5,R4               Length left (1st get onward)                 
*-                                                                              
*-       Adjust mods line length for characters we are processing.              
*-                                                                              
         LH    R2,METLEN           Load mods len                                
         SR    R2,R15              Reduce len by mod-chars processed            
         STH   R2,METLEN           Save new line len                            
*-                                                                              
*-       Pick up the text and save it in get buffer.                            
*-                                                                              
         LA    R4,METLINE(R4)      Start of get                                 
         LH    R3,CPGETLN          Load current GETSTACK length                 
         L     R2,CPGETSTK         Load pointer to GETSTACK                     
         LA    R2,0(R3,R2)         Point to end of GETSTACK                     
         LR    R3,R15              Copy get length                              
         TDEX  R3,'MVC @R2(0),@R4' Save get text in get stack                   
         LH    R2,CPGETLN          Load old get text size                       
         AR    R2,R15              Account for what we just got                 
         STH   R2,CPGETLN          Update it                                    
*-                                                                              
*-       Shift over remaining text to perform deletion.                         
*-                                                                              
         SR    R5,R15              Len of text after get stuff                  
         LA    R3,@R15(R4)         Text after get                               
         TDEX  R5,'MVC @R4(0),@R3' Move text over                               
*                                                                               
         CLEAR R15                 OK                                           
*                                                                               
GEXIT    PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  REPLACE -- Process R modify character.                                       
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
R        PROC  (R2,LSR)                                                         
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,Z),BEGIN       No explicit len...                           
         IF    ('LTR R15,R0',Z),'CLEAR R15; B REXIT'                            
         END                                                                    
*                                                                               
         L     R4,METPTRS+4        Addr of mod char                             
         S     R4,METPRMPT         Replacement point offset                     
         LH    R3,METLEN                                                        
         IF    (R3,LT,R4),BEGIN    Replace after line end...                    
         LR    R2,R4                                                            
         SR    R2,R3                                                            
         LA    R3,METLINE(R3)                                                   
         DEX   R2,'MVC @R3(0),CVBLANKS'  Pad with blanks                        
         END                                                                    
         LA    R3,@R4(R15)                                                      
         IF    (R3,GT,L'METLINE),BEGIN  Too much...                             
         SH    R3,=Y(L'METLINE)    Amount of excess                             
         IF    ('SR R15,R3',^POS),'CLEAR R0; CLEAR R15; B REXIT'                
         LA    R3,L'METLINE        Set for max                                  
         END                                                                    
         IF    (R3,GT,METLEN),'STH R3,METLEN'  Line is extended                 
         LA    R4,METLINE(R4)      Start replacement here                       
         LR    R2,R15                                                           
         IF    (R15,GT,R0),'LR R2,R0'                                           
         DTEX  R2,'MVC @R4(0),@R1'    Replacement from modify line              
         LA    R4,@R2+1(R4)                                                     
         LR    R2,R15                                                           
         IF    ('SR R2,R0',POS),'DEX R2,"MVC @R4(0),CVBLANKS"' fill             
         AR    R1,R15                                                           
         SR    R0,R15                                                           
*                                                                               
         CLEAR R15                 OK                                           
*                                                                               
REXIT    PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SPLIT -- Process S modify character.                                         
*                                                                               
*    On entry:                                                                  
*      R15   - numeric prefix value (0=none)                                    
*      R1,R0 - remaining text location, length                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK;    R1,R0 - updated remaining ptrs                                
*      RERROR - error                                                           
*                                                                               
S        PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         COMMENT                   Number prefix is error                       
         IF    (R15,NZ),'ACALL BADNUM; B SEXIT'                                 
*                                                                               
         IF    CPFCMDMD,BEGIN      Cmd retry...                                 
         TSEG  'Split not valid in command retry.',,CR                          
         LA    R15,RERROR                                                       
         B     SEXIT                                                            
         END                                                                    
*                                                                               
         COMMENT                   Get new split work area                      
         IF    (METNSPLT,GT,16),BEGIN                                           
         TSEG  'Too many line splits specified (>16)',,CR                       
         LA    R15,RERROR                                                       
         B     SEXIT                                                            
         END                                                                    
         LH    R4,METNSPLT                                                      
         MH    R4,=AL2(L'METSPLIT)                                              
         LA    R4,METSAREA(R4)                                                  
         WITH  (METSPLIT,R4),BEGIN                                              
         CLEAR METSPLIT            Tidy up                                      
         L     R15,METPTRS+4                                                    
         S     R15,METPRMPT        Calc offset                                  
         STH   R15,METSOFFS        Save it                                      
         END                                                                    
         INCR  R2,METNSPLT                                                      
*                                                                               
         CLEAR R15                 OK                                           
SEXIT    PEND                                                                   
         EJECT                                                                  
*-                                                                              
*-       ? (help)                                                               
*-                                                                              
HELPLMOD PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         COMMENT                   Number prefix is error                       
         IF    (R15,NZ),'ACALL BADNUM; B HEXIT'                                 
*                                                                               
         CLEAR CPLFLG5.CPFNLST+CPFSING  Reset single & nolist                   
*-                                                                              
*-       Command retry version of help.                                         
*-                                                                              
         IF    CPFCMDMD,BEGIN      Command Retry...                             
         TSEG  '(You are in Command Retry -- press BREAK to exit.)'             
         TSEG  X'15',,WR                                                        
         IF    (CPERRID,NZ),BEGIN  Give help on current...                      
         MVC   CPOERRID,CPERRID    Make current previous                        
         CLEAR CPERRID             Zot current                                  
         SET   CPFRETRY            Force retry                                  
         LA    R1,=C'?  '                                                       
         MVC   CPCMNM,@R1                                                       
         SETMSG @R1,1                                                           
         VCALL HELP                Go give help (no return)                     
         END                                                                    
         END                                                                    
*-                                                                              
*-       Modify/Edit version of help.                                           
*-                                                                              
         ELSE  BEGIN               Modify or Edit...                            
         L     R2,=A(HELPEDIT)     Edit help                                    
         IF    METFMOD,'L R2,=A(HELPMOD)'  Modify help                          
         WHILE (@R2,NE,X'FF'),BEGIN                                             
         TSEG  @R2,HELPMSGL,CR                                                  
         LA    R2,@R2+HELPMSGL                                                  
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                 OK                                           
*                                                                               
HEXIT    PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BADNUM -- Number given when none allowed.                                    
*                                                                               
DIGERR   PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         TSEG  'Missing modify char.',,CR                                       
         SET   CPLFLG5.CPFNLST                                                  
         CLEAR METFINS             Reset flag                                   
*                                                                               
         LA    R15,RERROR          Set bad return code                          
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BADNUM -- Number given when none allowed.                                    
*                                                                               
BADNUM   PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         DECR  R1                                                               
         TSEG  (R1),1              Modify char                                  
         TSEG  ': Invalid with length specification',,CR                        
         SET   CPLFLG5.CPFNLST                                                  
         CLEAR METFINS             Reset flag                                   
*                                                                               
         LA    R15,RERROR          Set bad return code                          
         PEND                                                                   
*box                                                                            
*                                                                               
*  BADCHAR -- invalid edit/modify char                                          
*                                                                               
*                                                                               
BADCHAR  PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         DECR  R1,                                                              
         TSEG  (R1),1                                                           
         TSEG  ': invalid modify character. Retype line.',,CR                   
         SET   CPLFLG5.CPFNLST                                                  
         CLEAR METFINS             Reset flag                                   
*                                                                               
         LA    R15,RERROR          Set bad return code                          
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FUNCTION -- Routine to process the line oriented function                    
*    passed to it.                                                              
*                                                                               
*      On entry:                                                                
*        R15   - numeric prefix value (zero = none specified)                   
*        R1,R0 - line location, length                                          
*                                                                               
*      On exit, R15 (and cc):                                                   
*        0 - ok                                                                 
*        RERROR - error                                                         
*                                                                               
FUNCTION PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    (R15,NZ),'LA R15,4; EXIT FUNCTION'  Don't allow num              
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  FUNCPRT             Scan/process function                        
         IF    (R15,NEG),BEGIN     Scanning error...                            
*        TSEG  (R1),(R0)                                                        
*        TSEG  ': invalid',,CR                                                  
         LA    R15,RERROR                                                       
         END                                                                    
*                                                                               
         IF    (R15,EQ,RNORMAL2),'CLEAR R15' CLEAR R15 IF NOT ERR               
*                                                                               
         PEND                                                                   
*-                                                                              
*-       Line oriented functions.                                               
*-                                                                              
FUNCPRT  SCKW  ,FUNCNULL,NULL                                                   
         SCKW  STOP,FSTOP,A                                                     
         SCKW  TERMINATE,FSTOP,A                                                
         SCKW  SKIP,FSKIP,A                                                     
         SCKW  REVERT,FREVERT,A                                                 
         SCKW  MODIFY,FMODIFY,A1                                                
         SCKW  EDIT,FEDIT,A1                                                    
         SCKW  REPLACE,FREPLACE,A1                                              
         SCKW  DELETE,FDELETE,A1                                                
         SCKW  INSERT,FINSERT,A1                                                
         SCKW  COLLECT,FCOLLECT,A1                                              
         SCKW  JOIN,FJOIN,A1                                                    
         SCKW  PREVIOUS,FPRNX,A                                                 
         SCKW  NEXT,FPRNX,A                                                     
         SCKW  LINE,FLINE,A                                                     
         SCKW  ,BADFUNC                                                         
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FSTOP -- .STOP Sub-command.                                                  
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FSTOP    PROC  ,                                                                
         WITH  (METWA,R6)                                                       
         SET   METFSTOP                                                         
         LM    R0,R1,METOLPTR                                                   
         LA    R15,RLINRET         RETURN TO LINRET                             
         PEND                                                                   
*box                                                                            
*                                                                               
*  FSKIP -- .SKIP Sub-command.                                                  
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FSKIP    PROC                                                                   
         WITH  (METWA,R6)                                                       
         LM    R0,R1,METOLPTR                                                   
         LA    R15,RLINRET         RETURN TO LINRET                             
         PEND                                                                   
*box                                                                            
*                                                                               
*  FMODIFY -- .MODIFY Sub-command.                                              
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FMODIFY  PROC                                                                   
         WITH  (METWA,R6)                                                       
         SET   METFMOD             Set MODIFY mode                              
         CLEAR CPLFLG5.CPFSING                                                  
         LA    R15,RNORMAL2                                                     
         PEND                                                                   
*box                                                                            
*                                                                               
*  FEDIT -- .EDIT Sub-command.                                                  
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FEDIT    PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         CLEAR METFMOD             Reset MODIFY mode for EDIT                   
         CLEAR CPLFLG5.CPFSING                                                  
         LA    R15,RNORMAL2                                                     
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREVERT -- .REVERT Sub-command.                                              
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FREVERT  PROC  ,                                                                
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    CPFCMDMD,FREVNL     Can't do locate if cmd retry                 
         LA    R1,METLINE#                                                      
         VCALL LOCATE                                                           
         IF    CPDRPT.CPFMTCH,BEGIN  Use line in file, if it exists...          
         LA    R1,METLINE                                                       
         VCALL UNPRESS                                                          
         STH   R0,METLEN                                                        
         END                                                                    
         ELSE  BEGIN               Otherwise, use line on entry...              
FREVNL   LM    R0,R1,METOLPTR      Original line                                
         STH   R0,METLEN                                                        
         IF    ('LTR R15,R0',POS),'DEX R15,"MVC METLINE(0),@R1"'                
         END                                                                    
         CLEAR METNLINE            Undo any joins                               
         CLEAR CPLFLG5.CPFNLST,METFSTOP                                         
*                                                                               
         LA    R15,RNORMAL2                                                     
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREPLACE -- .REPLACE Sub-command.                                            
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FREPLACE PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         L     R0,METLINE#         Lineno                                       
         ACALL LINERD              Get input                                    
         IF    POS,BEGIN           Ended by attn only                           
         CLEAR R0                                                               
         LA    R15,RERROR                                                       
         B     FREPEXIT                                                         
         END                                                                    
         IF    (NEG,AND,(R0,Z)),BEGIN    Ended by just @ATTN                    
         LA    R15,RNORMAL2                                                     
         B     FREPEXIT                                                         
         END                                                                    
         MVC   METFCOL(4),=Y(0,&LINESZ)  Reset columns                          
         MVC   METLINE(&LINESZ),@R1                                             
         LA    R1,METLINE                                                       
         IF    ('LTR R2,R15',Z),'L R15,METLINE#; VCALL LENCHKM'                 
         STH   R0,METLEN                                                        
         IF    (R2,NEG),BEGIN                                                   
         LA    R15,RNORMAL2                                                     
         B     FREPEXIT                                                         
         END                                                                    
*                                                                               
         LA    R15,RLINDONE                                                     
*                                                                               
FREPEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FDELETE -- .DELETE Sub-command.                                              
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FDELETE  PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    CPFCMDMD,'ACALL BADFUNC; B FDELEXIT'  Can't                      
*                                                                               
         L     R0,METLINE#                                                      
         LR    R1,R0                                                            
         VCALL DELRANGE            Delete line                                  
         LH    R0,=H'-1'           Line len is -1                               
         LA    R15,RLINRETD        Go to LINRETDJ                               
FDELEXIT PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FINSERT -- .INSERT Sub-command.                                              
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FINSERT  PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         SET   METFINS             Only "collect" one line                      
         ACALL FCOLLECT                                                         
         PEND                                                                   
*box                                                                            
*                                                                               
*  FCOLLECT -- .COLLECT Sub-command.                                            
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FCOLLECT PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    CPFCMDMD,'ACALL BADFUNC; B FCOLEXIT'  Cmd retry                  
*                                                                               
         L     R2,METLINE#         Original lineno                              
         ST    R2,METCFLIN         Save (for later)                             
         IF    ('LT R1,CPMODNEX',Z),BEGIN                                       
         LR    R1,R2                                                            
         A     R1,CVONE                                                         
         ST    R1,CPLCNO                                                        
         LA    R1,CPLCNO                                                        
         IF    (METNLINE,NZ),'LA R1,METNLINE'  Line after last join             
         VCALL LOCATE                                                           
         L     R1,CPLCNO           Next lineno                                  
         IF    (CPDRPT.CPFNTYT+CPFHIGH,NZ),'L R1,CVHILNO'                       
         END                                                                    
         DECR  R1                  Last possible lineno                         
         ST    R1,METCLLIN         Save                                         
         SR    R1,R2               Distance between two lines                   
         IF    Z,BEGIN                                                          
         TSEG  'No line-number available, '                                     
         IF    METFINS,BEGIN                                                    
         TSEG  'INSERT not possible.',,CR                                       
         END                                                                    
         ELSE  BEGIN                                                            
         TSEG  'COLLECT not possible.',,CR                                      
         END                                                                    
         LA    R15,RERROR                                                       
         B     FCOLEXIT                                                         
         END                                                                    
         IF    ^METFINS,'CLEAR R0; D R0,=A(5)'  Enough for five lines           
         VCALL SELDELTA            Choose a nice delta                          
         ST    R1,METCDELT         Save it                                      
         CLEAR METCNUM                                                          
*                                                                               
         SET   CPLFLG5.CPFSING                                                  
         LH    R15,METLEN                                                       
         IF    (R15,EQ,METPLEN),BEGIN                                           
         IF ((R15,Z),OR,('DEX R15,"CLC METLINE(0),METPLINE"',EQ)),BEGIN         
         SET   CPLFLG5.CPFNLST     Nolist if nothing changed                    
         END                                                                    
         END                                                                    
*                                                                               
         LA    R15,RNORMAL2                                                     
FCOLEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FJOIN -- .JOIN Sub-command.                                                  
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FJOIN    PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    CPFCMDMD,'ACALL BADFUNC; B FJEXIT'  Cmd retry                    
*                                                                               
         IF    (METNLINE,Z),'L R1,METLINE#;A R1,CVONE;ST R1,METNLINE'           
FJOINLOC LA    R1,METNLINE         Next line                                    
         VCALL LOCATE                                                           
         IF    (CPDRPT.CPFNTYT+CPFHIGH,NZ),BEGIN                                
         TSEG  'No next line, JOIN not possible.',,CR                           
         LA    R15,RERROR                                                       
         B     FJEXIT                                                           
         END                                                                    
*                                                                               
         L     R1,CPLCNO                                                        
         A     R1,CVONE                                                         
         ST    R1,METNLINE         Keep a next line ptr                         
         LH    R3,METLEN                                                        
         IF    (R3,GE,&LINESZ),BEGIN  Line too long already...                  
         TSEG  'Line is already '                                               
         TNUM  (R3)                                                             
         TSEG  ' characters long, JOIN not possible.',,CR                       
         LA    R15,RERROR                                                       
         B     FJEXIT                                                           
         END                                                                    
*                                                                               
         LA    R1,METLINE(R3)      Append new line here                         
         IF    (R3,NZ),'MVI @R1,C" "; LA R1,@R1+1; LA R3,@R3+1'                 
         VCALL UNPRESS                                                          
         LR    R2,R1                                                            
         IF    (R0,NZ),BEGIN       Trim leading blanks...                       
FJOINTRM IF    (@R1,NE,' '),EXIT                                                
         MVC   @R2(&LINESZ-1),@R1+1                                             
         BCT   R0,FJOINTRM                                                      
         END                                                                    
         AR    R0,R3               New line len                                 
         STH   R0,METLEN                                                        
*                                                                               
         LA    R15,RNORMAL2        All done                                     
FJEXIT   PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FLINE -- .LINE Sub-command.                                                  
*                                                                               
*    On exit:  R15 = 4 (stop scanning return code)                              
*                                                                               
FPRNX    PROC  ,                   NEXT/PREVIOUS                                
         SCINIT (R1),(R0)                                                       
         ACALL FLINE                                                            
         PEND  ,                                                                
*                                                                               
FLINE    PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         IF    CPFCMDMD,'ACALL BADFUNC; B FLINEXIT'  Cmd retry                  
*                                                                               
         CLEAR METFNEXT                                                         
         SCAN  FLNPRT                                                           
         IF    (R15,NEG),BEGIN                                                  
*        SEG   NSCNMSG,NSCNMSGL                                                 
         LA    R15,RERROR                                                       
         B     FLINEXIT                                                         
         END                                                                    
         IF    (R15,EQ,RERROR),FLINEXIT                                         
*                                                                               
         LR    R0,R3                                                            
         ST    R0,METFLINE         Save line-number                             
         IF    ((R0,GT,METLINE#),AND,(R0,LT,METNLINE)),BEGIN                    
         TSEG  'Line '                                                          
         L     R0,METFLINE                                                      
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),B                                                      
         TSEG  'has already been joined.',,CR                                   
         LA    R15,RERROR                                                       
         B     FLINEXIT                                                         
         END                                                                    
*                                                                               
         LA    R1,METFLINE                                                      
         VCALL LOCATE                                                           
         IF    METFNEXT,BEGIN    Next is special...                             
         IF    (CPDRPT.CPFNTYT+CPFHIGH,NZ),BEGIN                                
         TSEG  'NEXT line does not exist.',,CR                                  
         LA    R15,RERROR                                                       
         B     FLINEXIT                                                         
         END                                                                    
*                                                                               
         MVC   METFLINE,CPLCNO     Save next line no.                           
         END                                                                    
         ELSEIF ^CPDRPT.CPFMTCH,BEGIN  Line isn't there...                      
         TSEG  'Line '                                                          
         L     R0,METFLINE                                                      
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         TSEG  ' does not exist.',,CR                                           
         LA    R15,RERROR                                                       
         B     FLINEXIT                                                         
         END                                                                    
*                                                                               
         SET   CPLFLG5.CPFSING                                                  
         LH    R15,METLEN                                                       
         IF    (R15,EQ,METPLEN),BEGIN                                           
         IF ((R15,Z),OR,('DEX R15,"CLC METLINE(0),METPLINE"',EQ)),BEGIN         
         SET   CPLFLG5.CPFNLST     Nolist if nothing changed                    
         END                                                                    
         END                                                                    
*                                                                               
         LA    R15,RNORMAL2                                                     
*                                                                               
FLINEXIT PEND                                                                   
*                                                                               
FLNPRT   SCKW  NEXT,FNEXT,A        (Next is special because of join)            
         SCKW  ,FLINENO,SYMLN                                                   
         SCKW  ,FLMISS,NULL                                                     
         SCKW  ,FLINV                                                           
*                                                                               
FLINENO  PROC  ,                                                                
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,RNORMAL2                                                     
         PEND  ,                                                                
*                                                                               
FNEXT    PROC  ,                                                                
         WITH  (METWA,R6)                                                       
*                                                                               
         L     R0,METLINE#                                                      
         A     R0,CVONE            Next possible line                           
         IF    ('LT R15,METNLINE',NZ),'LR R0,R15'  past joins                   
         SET   METFNEXT                                                         
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,RNORMAL2                                                     
         PEND                                                                   
*                                                                               
FLMISS   PROC                                                                   
         TSEG  'Missing line-number.',,CR                                       
         LA    R15,RERROR                                                       
         PEND                                                                   
*                                                                               
FLINV    PROC                                                                   
         TSEG  (R1),(R0)                                                        
         TSEG  ': invalid line-number',,CR                                      
         LA    R15,RERROR                                                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FUNCNULL -- Missing line oriented function name.                             
*                                                                               
FUNCNULL PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         TSEG  'Function name missing.',,CR                                     
         LA    R15,RERROR                                                       
         PEND                                                                   
*box                                                                            
*                                                                               
*  BADFUNC -- Unknown line oriented function.                                   
*                                                                               
BADFUNC  PROC                                                                   
         WITH  (METWA,R6)                                                       
*                                                                               
         TSEG  (R1),(R0)                                                        
         TSEG  ': invalid line oriented function.',,CR                          
         LA    R15,RERROR          All done                                     
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
HELPMSGL EQU   80                  Length of a help text line                   
*-                                                                              
*-       MODIFY command help.                                                   
*-                                                                              
HELPMOD  DC    CL40'Press BREAK to abort the MODIFY command,'                   
         DC    CL40' or press RETURN if finished.           '                   
         DC    CL40'                                        '                   
         DC    CL40'                                        '                   
         DC    CL40'MODIFY Options are:                     '                   
         DC    CL40'                                        '                   
         DC    CL40'[n]B      Change to blank.              '                   
         DC    CL40'                                        '                   
         DC    CL40'[n]C      Change case.                  '                   
         DC    CL40'                                        '                   
         DC    CL40'[n]D      Delete text (typing subsequent'                   
         DC    CL40' blanks DOES continue deletion).        '                   
         DC    CL40'[n]E      Treat rest of line as EDIT cha'                   
         DC    CL40'racters.                                '                   
         DC    CL40'[n]I      Insert text.                  '                   
         DC    CL40'                                        '                   
         DC    CL40'   L      List line.                    '                   
         DC    CL40'                                        '                   
         DC    CL40'   N      Don''t list line.              '                  
         DC    CL40'                                        '                   
         DC    CL40'[n]R      Replace text.                 '                   
         DC    CL40'                                        '                   
         DC    CL40'   S      Split line.                   '                   
         DC    CL40'                                        '                   
         DC    CL40'  cT      Tab to specified column.      '                   
         DC    CL40'                                        '                   
         DC    CL40'[n]X      Delete text (typing subsequent'                   
         DC    CL40' blanks DOES NOT continue deletion).    '                   
         DC    CL40'[n]G      Delete text and append charact'                   
         DC    CL40'ers on GET stack.                       '                   
         DC    CL40'[n]P      Insert text from GET stack (te'                   
         DC    CL40'xt is deleted from the stack).          '                   
         DC    CL40'[n]       is a length of modify to allow'                   
         DC    CL40' multiple modifications.                '                   
         DC    CL40'                                        '                   
         DC    CL40'                                        '                   
         DC    CL40'.COLLECT  Collect lines           .LINE '                   
         DC    CL40'line  Change line; go to new line       '                   
         DC    CL40'.DELETE   Delete line             .NEXT '                   
         DC    CL40'      Change line; go to next line      '                   
         DC    CL40'.INSERT   Insert line             .PREVI'                   
         DC    CL40'OUS   Change line; go to previous line  '                   
         DC    CL40'.JOIN     Append next line        .REPLA'                   
         DC    CL40'CE    Prompt for replacement line       '                   
         DC    CL40'.REVERT   Undo changes to line    .SKIP '                   
         DC    CL40'      Don''t change line, but continue   '                  
         DC    CL40'.EDIT     Switch to Edits? prompt .STOP '                   
         DC    CL40'      Terminate command                 '                   
         DC    X'FF'                                                            
         EJECT                                                                  
*-                                                                              
*-       EDIT command help.                                                     
*-                                                                              
HELPEDIT DC    CL40'Press BREAK to abort the EDIT command, o'                   
         DC    CL40'r press RETURN if finished.             '                   
         DC    CL40'                                        '                   
         DC    CL40'                                        '                   
         DC    CL40'Characters typed in response to the EDIT'                   
         DC    CL40' prompt are "moved up" into the line    '                   
         DC    CL40'being edited.  However, the first charac'                   
         DC    CL40'ter after the prompt (which starts just '                   
         DC    CL40'before column 1 on the line being edited'                   
         DC    CL40') will accept the following characters: '                   
         DC    CL40'                                        '                   
         DC    CL40'                                        '                   
         DC    CL40'   L      List line.                    '                   
         DC    CL40'                                        '                   
         DC    CL40'   M      Treat rest of line as MODIFY c'                   
         DC    CL40'haracters.                              '                   
         DC    CL40'   N      Don''t list line.              '                  
         DC    CL40'                                        '                   
         DC    CL40'                                        '                   
         DC    CL40'                                        '                   
         DC    CL40'.COLLECT  Collect lines           .LINE '                   
         DC    CL40'line  Change line; go to new line       '                   
         DC    CL40'.DELETE   Delete line             .NEXT '                   
         DC    CL40'      Change line; go to next line      '                   
         DC    CL40'.INSERT   Insert line             .PREVI'                   
         DC    CL40'OUS   Change line; go to previous line  '                   
         DC    CL40'.JOIN     Append next line        .REPLA'                   
         DC    CL40'CE    Prompt for replacement line       '                   
         DC    CL40'.REVERT   Undo changes to line    .SKIP '                   
         DC    CL40'      Don''t change line, but continue   '                  
         DC    CL40'.MODIFY   Switch to Mods? prompt  .STOP '                   
         DC    CL40'      Terminate command                 '                   
         DC    X'FF'                                                            
         TITLE 'COLLECT Command'                                                
*box                                                                            
*                                                                               
*  WBREAK -- Command to simulate a BREAK being pressed at the                   
*    command prompt.  It either defaults to entering COLLECT mode               
*    or doing nothing, as determined by user preference.                        
*                                                                               
WBREAK   XPROC                                                                  
         VCALL NOOPTS              No options allowed                           
*                                                                               
         IF    CPGFNATN,CVNEXT     NOATTN means take no action                  
         ACALL COLLECT             Join the collect command                     
         B     CVNEXT                                                           
*                                                                               
         PEND                                                                   
         EJECT                                                                  
COLWA    RECORD BEGIN                                                           
COLFLAG  FLAG                                                                   
         FLAG  COLFSPEC            - Specific lineno given                      
         FLAG  COLFAFT             - Collect AFTER lineno                       
         FLAG  COLFBEF             - Collect BEFORE lineno                      
         FLAG  COLFLIST            - List previous line                         
         FLAG  COLFVIEW            - Collect in VIEW mode                       
*                                                                               
COLSPCOL DS    H                   Split column number                          
*                                                                               
COLNEXLN DS    F                   Next existing lineno                         
COLCURLN DS    F                   Current lineno                               
COLNWEND DS    F                   New end line-number (after re-numb)          
*-                                                                              
*-       COLINFO below is a copy of CPACINFO in the AINFO.                      
*-                                                                              
COL      COLINFO                                                                
*                                                                               
COLLINE  DS    XL(&PRESSZ)                                                      
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  COLLECT -- COLLECT command.                                                  
*                                                                               
*                                                                               
*                                                                               
COLLECT  XPROC COLWA                                                            
         LA    R6,COLWA                                                         
         USING COLWA,R6                                                         
         CLEAR COLWA                                                            
*                                                                               
         COMMENT                   SCAN LINE NO, IF ANY                         
         SCPUSH                                                                 
         SCAN  COLLNPRT                                                         
         SCANCHK                                                                
         IF    (R15,EQ,4),BEGIN    IF LNO SPECIFIED                             
         B     COLCONT                                                          
         END                                                                    
         IF    (R15,EQ,8),BEGIN    IF NO LNO SPECIFIED,                         
         SCPOP ,                                                                
         END                                                                    
*                                                                               
         COMMENT                   Look ahead for CLEAR                         
         SCPUSH ,                                                               
         SCAN  COLCLPRT                                                         
         SCANCHK                                                                
         SCPOP ,                                                                
*                                                                               
         IF    CPFCLEAR+CPFKEEP,'VCALL CLRTEXT'  Clear/keep                     
*                                                                               
         MVC   COLINFO,CPACINFO    Use previous values                          
*                                                                               
         IF    (COLINFO,Z),BEGIN   New collect...                               
         MVC   COLFLN,=F'-1'       No first line yet                            
         MVC   COLNLN,=F'-1'       Collect at end                               
         IF    (CPGFNLST,OR,^CPFTYPED),'SET COLFG5.CPFNLST'                     
         END                                                                    
*                                                                               
COLCONT  MVC   CPLFLG5,COLFG5      List options                                 
         MVC   CPLLEN,COLLEN       Line length                                  
         IF    COLFCS,BEGIN        Explicit case...                             
         SET   CPFCASE+CPFUPPER                                                 
         IF    ^COLFUP,'CLEAR CPFUPPER'                                         
         END                                                                    
*                                                                               
         COMMENT                   SCAN COLLECT OPTIONS                         
         SCAN  COLPRT                                                           
         SCANCHK                                                                
         MVC   COLFG5,CPLFLG5      Save list options                            
         MVC   COLLEN,CPLLEN       Save line length                             
         IF    CPFCASE,BEGIN       Save case override...                        
         SET   COLFCS+COLFUP                                                    
         IF    ^CPFUPPER,'CLEAR COLFUP'                                         
         END                                                                    
*                                                                               
         IF    ((CPALNCT,NZ),AND,^CPLFLG5.CPFNLST),BEGIN                        
         SET   COLFLIST                                                         
         END                                                                    
*-                                                                              
*-       Initial page mode collect processing.                                  
*-                                                                              
         IF    COLFVIEW,BEGIN      Collect view...                              
         IF    CPVFPAGE,EXIT       Already in page mode, scram                  
         VCALL PAGETCHK            Make sure terminal is ok                     
         VCALL PAGECLR             Forget the previous screen                   
         SET   CPVFPAGE,CPVFCLR    It's page mode now                           
         END                                                                    
*                                                                               
         IF    CPVFPAGE,BEGIN      Page mode collect...                         
         IF    (COLCNT,Z),BEGIN    Figure out no. of lines...                   
         IF    COLFMR,EXIT         Can't calc lines if merge                    
         LA    R2,4+1              Assume 4 lines                               
         STH   R2,COLCNT           Set collect line count                       
         END                                                                    
         END                                                                    
*-                                                                              
*-       Initial collect processing.                                            
*-                                                                              
         MVC   COLCURLN,COLNLN     Set line to start to collect                 
         MVC   COLNEXLN,CVHILNO    No next line (effectively)                   
         MVC   CPACLNO,=F'-1000'   No current lineno yet                        
*-                                                                              
*-       Process collect end.                                                   
*-                                                                              
         IF    (COLNLN,EQ,-1),BEGIN  Collect end...                             
         L     R0,CPALLNO          Highest lineno (or zero)                     
         LT    R1,COLDEL           Delta                                        
         IF    Z,'L R1,CPDELTA'                                                 
         VCALL LOWMULT                                                          
         VCALL ADDER                                                            
         BM    COLFIX                                                           
         ST    R0,COLCURLN                                                      
         B     COLLOOP                                                          
         END                                                                    
*-                                                                              
*-       Calculate the initial delta.                                           
*-                                                                              
         IF    (COLFLN,EQ,-1),BEGIN  Save lineno before start...                
         L     R15,COLCURLN                                                     
         VCALL GETLNO              Find lineno                                  
         IF    NZ,'CLEAR COLSPCOL,COLFBEF+COLFAFT'  Lineno not there            
         IF    (R15,^NEG),BEGIN    Not past end of file...                      
         IF    (POS,OR,COLFBEF),'VCALL PREVLNO'  Backup                         
         MVC   COLFLN,CPLCNO       Save first lineno (for renum)                
         IF    (COLCURLN,LT,CPAFLNO),'MVC COLFLN,COLCURLN'  First               
         END                                                                    
*                                                                               
         IF    COLFMR,EXIT         Merge is simple, scram                       
*-                                                                              
*-    Choose an appropriate initial delta (if one is not specified).            
*-                                                                              
         IF    (COLDEL,Z),BEGIN    Choose a delta...                            
         LA    R15,1                                                            
         A     R15,COLCURLN                                                     
         VCALL GETLNO              Get next existing lineno                     
         L     R15,CPLCNO                                                       
         S     R15,COLFLN                                                       
         DECR  R15                 Space between linenos                        
*                                                                               
         LTH   R3,COLCNT           Number of lines to collect                   
         IF    Z,'LA R3,1'         At least one line                            
         IF    (COLSPCOL,NZ),'LA R3,@R3+1'  Account for split                   
*                                                                               
         CLEAR R14                                                              
         DR    R14,R3              Increment per line                           
         LR    R1,R15                                                           
         VCALL SELDELTA            Pick a nice delta                            
         ST    R1,COLDEL           Set delta                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Process resuming a page mode collect.                                  
*-                                                                              
         IF    COLFPG,BEGIN        Page mode collect...                         
         CLEAR COLFPG              Reset page mode collect                      
*                                                                               
         L     R15,COLNLN                                                       
         LA    R1,COLLINE                                                       
         VCALL GETLINE             Get current collect line                     
         IF    NZ,EXIT             It doesn't exist, scram                      
*                                                                               
         IF    (R0,Z),BEGIN        Blank line...                                
         L     R0,COLNLN                                                        
         LR    R1,R0                                                            
         VCALL DELRANGE            Delete line                                  
         END                                                                    
         ELSE  BEGIN               Text on current line...                      
         L     R15,COLNLN                                                       
         A     R15,COLDEL                                                       
         ST    R15,COLNLN          Go on to next line                           
         ST    R15,COLCURLN                                                     
         END                                                                    
         END                                                                    
*-                                                                              
*-       Process collect with pending renumber.                                 
*-                                                                              
         IF    COLFRN,BEGIN        Renumber is pending...                       
         L     R1,COLNLN           Last line collected                          
         A     R1,CVONE                                                         
         ST    R1,CPLCNO                                                        
         LA    R1,CPLCNO                                                        
         VCALL LOCATE                                                           
         IF    ^CPDRPT.CPFNTYT*CPFHIGH,'MVC COLNEXLN,CPLCNO'                    
         LT    R15,COLDEL                                                       
         IF    Z,'L R15,CPDELTA'                                                
         IF    (COLNLN,EQ,-1),BEGIN                                             
         L     R1,CPALLNO          Get LAST line-number                         
         AR    R15,R1              END line-number                              
         END                                                                    
         ELSE  'A R15,COLNLN'                                                   
         IF    (R15,GE,COLNEXLN),COLFIX  No room, renumber                      
         ST    R15,COLCURLN                                                     
         CLEAR COLFRN              There's room now                             
         B     COLLOOP                                                          
         END                                                                    
*-                                                                              
*-       Save next line-number in case of a renumber.                           
*-                                                                              
         LA    R1,COLCURLN                                                      
         VCALL LOCATE                                                           
         IF    CPDRPT.CPFMTCH,COLEXIST  Line already exists                     
         IF    ^CPDRPT.CPFNTYT*CPFHIGH,'MVC COLNEXLN,CPLCNO'                    
         EJECT                                                                  
**                                                                              
**  Main collect loop                                                           
**                                                                              
         SPACE 2                                                                
COLLOOP  IF    (COLNLN,NE,-1),'MVC COLNLN,COLCURLN'                             
         IF    CPFTYPED,'MVC CPACINFO,COLINFO'  Save options                    
COLLOOPA IF    COLFLIST,BEGIN      List prev line...                            
         IF    CPVFPAGE,EXIT       Page mode, don't bother                      
         IF    COLFRN,BEGIN        Must fake lineno...                          
         L     R15,COLNEXLN                                                     
         ST    R15,CPLCNO                                                       
         VCALL PREVLNO             Get previous lineno                          
         LT    R15,CPLCNO                                                       
         IF    NEG,EXIT                                                         
         SETMSG COLLINE            Line text area                               
         VCALL GETLINE             Get line                                     
         IF    NZ,EXIT             (Shouldn't happen)                           
         MVC   CPLCNO,COLNWEND     Use "renumbered" lineno                      
         VCALL LISTLINE                                                         
         END                                                                    
         ELSE  'LA R1,COLCURLN; VCALL LOCLIST'                                  
         CLEAR COLFLIST                                                         
         END                                                                    
*                                                                               
         L     R0,COLCURLN         Next lineno to collect                       
         IF    COLFRN,'L R0,COLNWEND; A R0,CPWKDL'                              
         ST    R0,CPLCNO           Save for inner mod/edit                      
*                                                                               
         LTH   R15,COLCNT          No. of lines remaining                       
         IF    NZ,BEGIN            There is a limit...                          
         DECR  R15                                                              
         STH   R15,COLCNT          One less line                                
         IF    (R15,NZ),EXIT                                                    
         IF    CPFTYPED,'MVC CPACINFO,COLINFO'  Save options                    
         B     CVNEXT                                                           
         END                                                                    
         EJECT                                                                  
*-                                                                              
*-       Page mode collect.                                                     
*-                                                                              
         IF    CPVFPAGE,BEGIN      Page mode...                                 
         IF    COLFRN,BEGIN        Do renumber now...                           
         L     R2,CPLCNO           Lineno of line just collected                
*                                                                               
         XPUSH R15,R3                                                           
         L     R0,COLFLN           R0 = First lineno                            
         L     R1,CPWKPS           R1 = Last lineno                             
         L     R2,CPWKDL           R2 = Delta                                   
         LR    R3,R0               R3 = Starting lineno                         
         VCALL NUMRANGE            Re-number                                    
         XPOP  R15,R3                                                           
*                                                                               
         ST    R2,CPLCNO           Set lineno                                   
         ST    R2,COLCURLN         Ditto                                        
         MVC   COLDEL,CPWKDL       Set new delta                                
         CLEAR COLFRN              Reset renumber pending                       
         END                                                                    
*                                                                               
         L     R15,CPLCNO                                                       
         SETMSG COLLINE,0                                                       
         VCALL PUTLINE             Add a blank line                             
         INCR  R0,CPACHCT          Count the change                             
*                                                                               
         L     R15,CPLCNO                                                       
         ST    R15,COLNLN          Set current collect lineno                   
         ST    R15,CPACLNO         Set current lineno                           
         ST    R15,CPVLNO          Set cursor lineno                            
         MVC   CPVCOL,=H'1'        ...and column 1                              
*                                                                               
         VCALL PAGELINE            Make sure line is displayed                  
*                                                                               
         SET   COLFPG              Page mode collect in progress                
         MVC   CPACINFO,COLINFO    Save collect options                         
         B     CVNEXT                                                           
         END                                                                    
         EJECT                                                                  
*-                                                                              
*-       Line mode collect.                                                     
*-                                                                              
         ACALL LINERD              Get input                                    
         IF    POS,BEGIN           Attn only, end of command...                 
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15)                                                        
         CLEAR JCBFATTN                                                         
         IF    (CPALNCT,Z),CVNEXT  ACTIVE is clear                              
         IF    COLFRN,'SETMSG "Original numbering kept."; B CVNXTMSG'           
         B     CVNEXT                                                           
         END                                                                    
         MVC   COLLINE(&LINESZ),@R1  Save copy of line                          
         XPUSH R15,R0              Save rc & len                                
*                                                                               
         IF    (CPALNCT,Z),BEGIN   Set Active file title...                     
         IF    (CPATITL,NZ),EXIT   Already set, forget it                       
         MVC   CPATITL,=CL(L'CPATITL)'Newly collected text'                     
         END                                                                    
*                                                                               
         IF    COLFRN,BEGIN        Do renumber now...                           
         L     R2,CPLCNO           Lineno of line just collected                
*                                                                               
         XPUSH R15,R3                                                           
         L     R0,COLFLN           R0 = First lineno                            
         L     R1,CPWKPS           R1 = Last lineno                             
         L     R2,CPWKDL           R2 = Delta                                   
         LR    R3,R0               R3 = Starting lineno                         
         VCALL NUMRANGE            Re-number                                    
         ST    R2,CPWKDL           Save delta actually used                     
         XPOP  R15,R3                                                           
*                                                                               
         ST    R2,CPLCNO           Set lineno                                   
         ST    R2,COLCURLN         Ditto                                        
         MVC   COLDEL,CPWKDL       Set new delta                                
         CLEAR COLFRN              Reset renumber pending                       
         END                                                                    
         XPOP  R15,R0                                                           
         MVC   CPACLNO,CPLCNO      Set current lineno                           
         LA    R1,COLLINE                                                       
*-                                                                              
*-       Collect line ending with @BREAK means invoke command retry.            
*-                                                                              
         IF    (R15,NEG),BEGIN     @break ending...                             
*-                                                                              
*-       Modify previous line.                                                  
*-                                                                              
         IF    (R0,Z),BEGIN        Just @break, mod prev line...                
         L     R15,COLCURLN                                                     
         ST    R15,CPLCNO                                                       
         VCALL PREVLNO             Get previous lineno                          
         IF    NEG,BEGIN           No previous line...                          
         TSEG  'No previous line.',,CR                                          
         B     COLLOOP                                                          
         END                                                                    
         L     R15,CPLCNO                                                       
         SETMSG COLLINE                                                         
         VCALL GETLINE             Get previous line text                       
*                                                                               
         LA    R1,COLLINE                                                       
         MVC   CPMODNEX,COLCURLN   Tell modify this is next                     
         ACALL LINEMOD             Do line mods                                 
         BM    CVNEXT              Abort command                                
         B     COLLOOP                                                          
         END                                                                    
*-                                                                              
*-       Modify current line.                                                   
*-                                                                              
         LT    R15,COLDEL                                                       
         IF    Z,'L R15,CPDELTA'                                                
         A     R15,COLCURLN        Next line                                    
         IF    (R15,GT,COLNEXLN),'L R15,COLNEXLN'                               
         ST    R15,CPMODNEX        Tell modify about next line                  
         ACALL LINEMOD             Do line mods                                 
         BM    CVNEXT              Abort command                                
         BP    COLLOOP             Abort mods                                   
         END                                                                    
*-                                                                              
*-       Normal collected line.                                                 
*-                                                                              
         ELSE  BEGIN               Normal ending...                             
         L     R15,COLCURLN        Lineno                                       
         VCALL LENCHKM                                                          
         VCALL PRESS                                                            
         SET   CPLFLG4.CPFSTINS    Stow options                                 
         VCALL STOW                                                             
         BM    COLEXIST            Can't replace line                           
         INCR  R15,CPACHCT         Kick change count                            
         END                                                                    
         EJECT                                                                  
*-                                                                              
*-       Figure out the next line-number to collect.                            
*-                                                                              
COLMORE  IF    (COLCURLN,GE,CPALLNO),'MVC COLNLN,=F"-1"'                        
*                                                                               
         L     R0,COLCURLN         Current lineno                               
         IF    (COLFLN,EQ,-1),'ST R0,COLFLN'  Remember first lineno             
         LT    R1,COLDEL           Delta                                        
         IF    Z,'L R1,CPDELTA'                                                 
         IF    ('VCALL ADDER',M),COLFIX  Go renumber                            
         IF    (R0,LT,COLNEXLN),'ST R0,COLCURLN; B COLLOOP'                     
         IF    COLFMR,BEGIN        Merge...                                     
         ST    R0,COLCURLN                                                      
         LA    R1,COLCURLN                                                      
         VCALL LOCATE                                                           
         IF    CPDRPT.CPFMTCH,BEGIN                                             
COLEXIST TSEG  'Line '                                                          
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         ERROR ' already in file.'                                              
         END                                                                    
         MVC   COLNEXLN,CVHILNO                                                 
         IF    CPDRPT.CPFNTYT+CPFHIGH,COLLOOP                                   
         MVC   COLNEXLN,CPLCNO                                                  
         IF    ^CPLFLG5.CPFNLST,'SET COLFLIST'                                  
         B     COLLOOP                                                          
         END                                                                    
*                                                                               
COLFIX   LT    R0,COLFLN           First line                                   
         IF    NEG,BEGIN           Nothing yet, so just change delta...         
         L     R2,CPALLNO          Save LAST line-number value                  
         L     R1,CVMAXLNO                                                      
         SR    R1,R2               Distance before last lineno                  
         IF    NP,'ABORT "Can''t go past line &MAXLNO"'                         
         CLEAR R0                                                               
         D     R0,=F'5'            Allow at least five lines                    
         VCALL SELDELTA            Pick a good number                           
         ST    R1,COLDEL           Save new delta                               
         AR    R1,R2               Next lineo to use                            
         ST    R1,COLCURLN         Save it                                      
         B     COLLOOP             Try it again                                 
         END                                                                    
         L     R1,COLNEXLN                                                      
         DECR  R1                  Last available line                          
         ST    R1,CPWKPS           Save for logic below                         
         VCALL CNTRANGE            Get no. of lines                             
         L     R0,COLFLN                                                        
         IF    Z,BEGIN             No lines in range...                         
         MVC   COLCURLN,COLFLN     Just start prompt over again                 
         CLEAR COLFRN              don't actually try renumbering               
         END   ELSE,BEGIN          Do renumber calculations...                  
         LR    R2,R15              Save no. of lines                            
         L     R1,CPWKPS                                                        
         S     R1,COLFLN           Distance between lines                       
         LA    R0,@R1+1            Max no of line-numbers possible              
         IF    (R15,GE,R0),BEGIN   No more line-numbers...                      
         TSEG  'Collect aborted '                                               
         IF    (COLNEXLN,GE,CVHILNO),CVABORT                                    
         TSEG  'by line',,B                                                     
         L     R0,COLNEXLN                                                      
         VCALL CVEXNO                                                           
         B     CVABTMSG                                                         
         END                                                                    
         LA    R15,@R15+5          Allow at least five more lines               
         CLEAR R0                                                               
         DR    R0,R15              Average distance between lines               
         VCALL SELDELTA            Make it a nice number                        
         ST    R1,CPWKDL           Save for NUMRNG                              
         SET   COLFRN              Flag renumber pending                        
         DECR  R2                                                               
         CLEAR R0                                                               
         MR    R0,R2                                                            
         LR    R0,R1                                                            
         A     R0,COLFLN           Calc. new ending lineno                      
         ST    R0,COLNWEND         Save it (for later)                          
         END                                                                    
*                                                                               
         IF    ^CPVFPAGE,BEGIN     Write msg if in line mode...                 
         TSEG  'Renumbered by '                                                 
         L     R0,CPWKDL                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),WR                                                     
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'CLEAR JCBFATTN'                                       
         END                                                                    
         B     COLLOOP                                                          
         PEND  ,                   WE EXIT SOMEWHERE ABOVE                      
         EJECT                                                                  
*                                                                               
*                                                                               
*  COLLECT SCKWS AND SCKW ROUTINES                                              
*                                                                               
*                                                                               
COLLNPRT SCKW  ,COLLNO,SYMLN                                                    
         SCKW  ,COLNOLNO                                                        
*                                                                               
COLCLPRT SCKW  ,V(CLRPSH),PUSH                                                  
         SCKW  ,V(SCNNOOP)                                                      
*                                                                               
COLPRT   SCKW  BY,COLBY,(P,LN)                                                  
         SCKW  MERGE,COLMERGE,A                                                 
         SCKW  NOMERGE,COLNMER,A                                                
         SCKW  VIEW,COLVIEW,A                                                   
         SCKW  V,COLVIEW                                                        
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(CLRPSH),PUSH                                                  
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(CASEPSH),PUSH                                                 
         SCKW  ,COLCCHK                                                         
*                                                                               
COLLNO   PROC  ,                   SCANED LINE NUMBER                           
         SET   COLFSPEC            Specific lineno specified                    
         MVC   COLFLN,=F'-1'       No first line collected yet                  
         IF    (CPGFNLST,OR,^CPFTYPED),'SET COLFG5.CPFNLST'                     
*        IF    (R15,EQ,16),'L R0,=F"-1"'  end specified                         
         IF    (R1,EQ,CPDELTA),'CLEAR R1'                                       
         ST    R0,COLNLN           SAVE LINE NUMBER                             
         ST    R1,COLDEL           SAVE DELTA                                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
COLNOLNO PROC  ,                   NO LINE NUMBER SPECIFIED                     
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
COLBY    PROC                                                                   
         IF    (R0,Z),'VCALL NOTVALID'                                          
         ST    R0,COLDEL                                                        
         PEND                                                                   
*                                                                               
COLMERGE PROC                                                                   
         SET   COLFMR                                                           
         PEND                                                                   
*                                                                               
COLNMER  PROC                                                                   
         CLEAR COLFMR                                                           
         PEND                                                                   
*                                                                               
COLVIEW  PROC                                                                   
         SET   COLFVIEW                                                         
         PEND                                                                   
*                                                                               
*                                                                               
COLCCHK  PROC                                                                   
         IF    (@R1,NE,'('),'VCALL NOTVALID'                                    
         SH    R0,=H'2'            Account for parens                           
         IF    M,'VCALL NOTVALID'                                               
         DTB   @R1+1,(R0)                                                       
         IF    NZ,'VCALL NOTVALID'                                              
         LA    R15,@R15+1          Save no. of lines+1                          
         STH   R15,COLCNT          Number of lines to collect                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
         DROP  R6                                                               
*                                                                               
*                                                                               
COLVMSGX DC    C'Position cursor to where you want to start '                   
         DC    C'collecting text and press RETURN.'                             
COLVMSG  EQU   COLVMSGX,*-COLVMSGX,C'X'                                         
*                                                                               
         QLTORG                                                                 
*                                                                               
         TITLE 'Implied Editing Commands'                                       
*                                                                               
*  END ....                                                                     
*  AS AN IMPLIED COMMAND.                                                       
*                                                                               
*  WE LET IMPLIED ROUTINE DO IT TO IT, SEE BELOW                                
*                                                                               
IMPLYEND XPROC ,                                                                
*                                                                               
         SCBKUP ,                  BACKUP TO 'END'                              
         SCAN  IMENDPRT            RESCAN WHOLE THING                           
         SCANCHK                                                                
         B     CVNEXT                                                           
         PEND                                                                   
*                                                                               
*                                                                               
IMENDPRT SCKW  ,IMPLIED,V(MIMPLIED)                                             
         SCKW  ,V(NOTVALID)                                                     
*box                                                                            
*                                                                               
*  IMPLIED -- Entry for the implied editing (line-number) commands.             
*    On entry, R0 = line-number                                                 
*                                                                               
IMWA     RECORD BEGIN                                                           
IMFLAGS  FLAG  ,                                                                
         FLAG  IMDELETE                                                         
         FLAG  IMINSERT                                                         
IMLINENO DS    F                                                                
IMTEXTPT DS    F                                                                
IMTEXTLN DS    F                                                                
IMTEXT   DS    CL(&PRESSZ)                                                      
         END                                                                    
*                                                                               
IMPLIED  XPROC IMWA                                                             
         CLEAR IMWA                                                             
         ST    R0,IMLINENO         Save internal line number                    
         SET   CPLFLG5.CPFNLST     Nolist default                               
         SCINFO ,                  Get remaining text                           
         IF    (R0,POS),'SET IMINSERT'                                          
         ELSE  'SET IMDELETE'                                                   
         ST    R1,IMTEXTPT                                                      
         INCR  R1                  Skip blank                                   
         DECR  R0                                                               
         IF    (R0,NEG),'CLEAR R0'                                              
         CEIL  R0,L'IMTEXT         Not too long                                 
         ST    R0,IMTEXTLN                                                      
         LR    R3,R0                                                            
         MOVE  R3,IMTEXT,@R1                                                    
*-                                                                              
*-       Delete line.                                                           
*-                                                                              
         IF    IMDELETE,BEGIN       Delete                                      
         IF    (^CPGFLG3.CPF3IMED,AND,CPFTYPED),BEGIN                           
         LA    R1,IMLINENO            Point at line                             
         VCALL LOCATE              Go find line                                 
         IF    ^CPDRPT.CPFMTCH,BEGIN                                            
         VCALL ACTCHK              No Active file                               
*                                                                               
         TSEG  'Line '                                                          
         L     R0,IMLINENO                                                      
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         ABORT ' not in file.',,NOLINESX                                        
         END                                                                    
*                                                                               
         TSEG  'Delete line '                                                   
         L     R0,IMLINENO         Lineno                                       
         VCALL CVEXNO                                                           
         VCALL YESREQ              Must have YES to continue                    
         END                                                                    
         COMMENT                   EXECUTE DELETE COMMAND                       
         MVC   CPCMD(4),=C'DEL '                                                
         L     R0,IMLINENO         Get line number                              
         VCALL CVEXNO              Format line                                  
         MVC   CPCMD+4(9),CPDOUB   Move in line                                 
         LA    R0,4+9                                                           
         STH   R0,CPCMDLEN                                                      
         LA    R1,CPCMD                                                         
         VCALL EDTCOMNH            go execute delete cmd, no return             
         BOMB                      never, we exit above                         
         END                                                                    
*-                                                                              
*-       Insert line.                                                           
*-                                                                              
         ELSE  BEGIN               INSERT                                       
         L     R2,IMTEXTPT                                                      
         IF    ((@R2,NE,' '),AND,(@R2,NE,','),AND,(@R2,NE,'=')),BEGIN           
         VCALL CMDFIN                                                           
         END                                                                    
         IF    (^CPGFLG3.CPF3IMED,AND,CPFTYPED),BEGIN                           
         LA    R1,IMLINENO         Point at internal line no                    
         VCALL LOCATE              Is it in file?                               
         IF    CPDRPT.CPFMTCH,BEGIN  replace                                    
         LR    R3,R15                                                           
         TSEG  'Replace line '                                                  
         L     R0,IMLINENO         Lineno                                       
         VCALL CVEXNO                                                           
         VCALL YESREQ              Must have YES to continue                    
         LA    R15,R3              Line addr                                    
         IF    ^CPLFLG5.CPFNLST,BEGIN  List old line                            
         XPUSH ,,&LINESZ,PTR=R1                                                 
         VCALL UNPRESS                                                          
         VCALL LISTLINE                                                         
         XPOP  ,,&LINESZ                                                        
         END                                                                    
         END                                                                    
         ELSE  BEGIN               Insert                                       
         TSEG  'Insert line '                                                   
         L     R0,IMLINENO         Lineno                                       
         VCALL CVEXNO                                                           
         VCALL YESREQ              Must have YES to continue                    
         LA    R1,IMLINENO         Addr of lineno for locate                    
         IF    ^CPLFLG5.CPFNLST,'VCALL LOCLIST'                                 
         END                                                                    
         END                                                                    
         L     R0,IMTEXTLN         Restore count                                
         LA    R1,IMTEXT           Point at text                                
         L     R15,IMLINENO        Get internal line no                         
         ST    R15,CPACLNO                                                      
         VCALL LENCHK                                                           
         VCALL PRESS                                                            
         VCALL STOW                                                             
         IF    CPFTYPED,'INCR R0,CPACHCT'                                       
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
         PEND                                                                   
         TITLE 'PUTLINE Command'                                                
*box                                                                            
*                                                                               
*  PUTLCMD -- PUTLINE Command.                                                  
*                                                                               
*  NOTE:                                                                        
*  WE GO THRU A LITTLE EXTRA RIGAMOROLL, SO THAT                                
*  'NEXT +.1' IS SCANNED DIFFERENTLY THAT 'NEXT+.1'                             
*  THIS IS REQUIRED FOR PUTLINE!                                                
*                                                                               
PUTLWA   RECORD BEGIN                                                           
PUTLLNO  DS    F                                                                
         END                                                                    
*                                                                               
*                                                                               
PUTLCMD  XPROC PUTLWA                                                           
         LA    R6,PUTLWA                                                        
         USING PUTLWA,R6                                                        
*                                                                               
         COMMENT                   NOW SCAN LINENO FOR VALUE                    
         SCAN  PUTLPRT                                                          
         SCANCHK ,                                                              
         CLEAR R15                                                              
*                                                                               
         COMMENT                   PUT LINE                                     
         SCINFO ,                                                               
         INCR  R1                  Skip blank                                   
         DECR  R0                                                               
         IF    (R0,NEG),'CLEAR R0'                                              
         L     R15,PUTLLNO         Line-number                                  
         VCALL PUTLINE             Save line in file                            
         L     R2,PUTLLNO                                                       
         ST    R2,CPACLNO          Set current lineno                           
         IF    CPFTYPED,'INCR R15,CPACHCT'  Count typed changes                 
         B     CVNEXT                                                           
         PEND                                                                   
*                                                                               
*                                                                               
PUTLPRT  SCKW  ,PUTLNULL,NULL                                                   
         SCKW  ,PUTLLINE,V(MIMPLIED)                                            
         SCKW  ,PUTLERR                                                         
*                                                                               
PUTLNULL PROC                                                                   
         ERROR 'Missing line-number on PUTLINE command.'                        
         PEND                                                                   
*                                                                               
PUTLLINE PROC                                                                   
         ST    R0,PUTLLNO                                                       
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
PUTLERR  PROC                                                                   
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid line number for PUTLINE.'                             
         PEND                                                                   
*                                                                               
         DROP  R6                                                               
         TITLE 'PUTEND Command'                                                 
*box                                                                            
*                                                                               
*  PUTEND -- PUTEND Command.                                                    
*                                                                               
PUTEND   XPROC                                                                  
*                                                                               
         COMMENT                   Get END line number                          
         VCALL ENDLNO                                                           
         IF    NEG,BEGIN                                                        
         ABORT 'PUTEND not possible, no more line-numbers.'                     
         END                                                                    
*                                                                               
         COMMENT                   Put line                                     
         LR    R2,R0               Save line-number                             
         SCINFO ,                  Remainder of line                            
         INCR  R1                  Skip blank                                   
         DECR  R0                                                               
         IF    (R0,NEG),'CLEAR R0'                                              
         LR    R15,R2              Line-number                                  
         VCALL PUTLINE             Save line in file                            
         ST    R2,CPACLNO          Set current lineno                           
         IF    CPFTYPED,'INCR R15,CPACHCT'  Count typed changes                 
         B     CVNEXT                                                           
         PEND                                                                   
         TITLE 'PUTLINET Command'                                               
*box                                                                            
*                                                                               
*  PUTLCMDT -- PUTLINET Command (varient of PUTLINE command).                   
*                                                                               
*  NOTE:                                                                        
*  WE GO THRU A LITTLE EXTRA RIGAMOROLL, SO THAT                                
*  'NEXT +.1' IS SCANNED DIFFERENTLY THAT 'NEXT+.1'                             
*  THIS IS REQUIRED FOR PUTLINE!                                                
*                                                                               
TABLWA   RECORD BEGIN                                                           
TABLLNO  DS    F                                                                
TABLLEN  DS    F           [Order] Saved line length                            
TABLLOC  DS    A           [Order] Saved line location                          
TABLSAVE DS    XL(&LINESZ)         Saved copy of a line                         
         END                                                                    
*-                                                                              
PUTLCMDT XPROC TABLWA                                                           
         LA    R6,TABLWA                                                        
         USING TABLWA,R6                                                        
*                                                                               
         COMMENT                   NOW SCAN LINENO FOR VALUE                    
         SCAN  TABLPRT                                                          
         SCANCHK ,                                                              
         CLEAR R15                                                              
*                                                                               
         COMMENT                   PUT LINE                                     
         SCINFO ,                                                               
         INCR  R1                  Skip blank                                   
         DECR  R0                                                               
         IF    (R0,NEG),'CLEAR R0'                                              
*-                                                                              
*-       Change vertical bars to EBCDIC tab characters.                         
*-                                                                              
         STM   R0,R1,TABLLEN       Save line length, loc                        
         WHILE (R0,POS),BEGIN      Go through line...                           
*-                                                                              
*-       Check for "\\" or "\|" escaped character sequences.                    
*-                                                                              
         IF    (@R1,EQ,'\'),BEGIN  Escape sequence...                           
         IF    (R0,LE,1),EXIT      Last character, scram                        
         IF    ((@R1+1,EQ,'\'),OR,(@R1+1,EQ,'|')),BEGIN                         
         LR    R15,R0                                                           
         MOVE  R15,TABLSAVE,@R1                                                 
         MOVE  R15,@R1,TABLSAVE+1                                               
         DECR  R15,TABLLEN         Reduce actual data length                    
         DECR  R0                  One less character                           
         END                                                                    
*                                                                               
         ELSE  BEGIN               Bad sequence...                              
         TSEG  @R1,2                                                            
         TSEG  ': invalid TAB sequence '                                        
         ERROR '(backslashes are treated specially).'                           
         END                                                                    
         END                                                                    
*-                                                                              
*-       Change a vertical bar to an EBCDIC TAB character.                      
*-                                                                              
         ELSEIF (@R1,EQ,'|'),BEGIN  Change vertical bar to tab...               
         MVI   @R1,X'05'           Change to TAB                                
         END                                                                    
*                                                                               
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
         LM    R0,R1,TABLLEN       Restore line length, loc                     
*                                                                               
         L     R15,TABLLNO         Line-number                                  
         VCALL PUTLINE             Save line in file                            
         L     R2,TABLLNO                                                       
         ST    R2,CPACLNO          Set current lineno                           
         IF    CPFTYPED,'INCR R15,CPACHCT'  Count typed changes                 
         B     CVNEXT                                                           
         PEND                                                                   
*-                                                                              
*-       PUTLINET options.                                                      
*-                                                                              
TABLPRT  SCKW  ,TABLNULL,NULL                                                   
         SCKW  ,TABLLINE,V(MIMPLIED)                                            
         SCKW  ,TABLERR                                                         
*-                                                                              
TABLNULL PROC                                                                   
         ERROR 'Missing line-number on PUTLINET command.'                       
         PEND                                                                   
*                                                                               
TABLLINE PROC                                                                   
         ST    R0,TABLLNO                                                       
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
TABLERR  PROC                                                                   
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid line number for PUTLINET.'                            
         PEND                                                                   
*                                                                               
         DROP  R6                                                               
         TITLE 'INSERT Command'                                                 
INSWA    RECORD BEGIN                                                           
INSFLAG  FLAG                                                                   
         FLAG  INSFDIT             - Ditto                                      
         FLAG  INSFGOTL            - Got line (for ditto)                       
INSCNT   DS    F                   insert line count                            
*                                                                               
INSLINE  DS    CL(&LINESZ)                                                      
         DS    CL(&PRESSZ-&LINESZ)                                              
*                                                                               
         DS    0F                  Start of linenos                             
INSLINS  DS    32XL12              Lineno(4)+delta(4)+no.lines(4)               
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  INSERT -- INSERT command.                                                    
*                                                                               
*                                                                               
*                                                                               
INSERT   XPROC INSWA                                                            
         LA    R6,INSWA                                                         
         USING INSWA,R6                                                         
         CLEAR INSWA                                                            
         IF    (CPGFNLST,OR,^CPFTYPED),'SET CPLFLG5.CPFNLST'                    
         SCAN  INSPRT                                                           
         SCANCHK                                                                
         L     R5,INSCNT           COUNT OF LINE NOS. (R5)                      
         IF    (R5,Z),BEGIN                                                     
         ERROR 'Missing line-number(s) for INSERT command.'                     
         END                                                                    
*                                                                               
         MH    R5,=Y(L'INSLINS)                                                 
         LA    R5,INSLINS(R5)      Last+1 lineno                                
         LA    R4,INSLINS          First lineno starts here                     
*                                                                               
         WHILE (R4,LT,R5),BEGIN    Go through insert lines...                   
         IF    ^CPVFPAGE,BEGIN     Line mode...                                 
         IF    ^CPLFLG5.CPFNLST,'LR R1,R4; VCALL LOCLIST; TWRITE'               
         END                                                                    
*                                                                               
         L     R3,@R4+8            No. of lines to insert                       
*                                                                               
         WHILE (R3,POS),BEGIN                                                   
*-                                                                              
*-       Page mode insert.                                                      
*-                                                                              
         IF    CPVFPAGE,BEGIN      Page mode...                                 
         L     R15,@R4                                                          
         SETMSG INSLINE,0                                                       
         VCALL PUTLINE             Add a null line                              
         INCR  R0,CPACHCT          Count the change                             
*                                                                               
INSPRTRY L     R15,@R4                                                          
         VCALL PAGELINE            Add line to page                             
         IF    NZ,BEGIN            The page is full...                          
         MVC   CPVMSG,CVBLANKS                                                  
         MVC   CPVMSG(L'INSMSG),INSMSG  Press CONTINUE                          
         VCALL PAGEMOD             Display the page                             
         BNZ   CVNOACTN                                                         
         B     INSPRTRY            Try it again                                 
         END                                                                    
         B     INSNEXT                                                          
         END                                                                    
*-                                                                              
*-       Line mode insert.                                                      
*-                                                                              
INSREPR  SET   CPLFLG4.CPFSTINS    For stow: insert only mode                   
         IF    ^INSFGOTL,BEGIN     Prompt for line...                           
         L     R0,@R4              Lineno                                       
         ST    R0,CPLCNO           Save lineno (for inner mod/edit)             
         ACALL LINERD                                                           
         BP    CVABORT             Just attn, abort command                     
*                                                                               
         IF    NEG,BEGIN           Do if @attn...                               
         IF    (R0,Z),BEGIN        Just @attn, mod prev line...                 
         VCALL PREVLNO             Get previous lineno                          
         IF    NEG,BEGIN                                                        
         TSEG  'No previous line.',,CR                                          
         B     INSREPR                                                          
         END                                                                    
         MVC   CPMODNEX,@R4        Tell modify about "next" line                
         L     R15,CPLCNO                                                       
         SETMSG INSLINE                                                         
         VCALL GETLINE             Get line text                                
         ACALL LINEMOD             Do line mods                                 
         BM    CVNEXT              Abort command                                
         B     INSREPR                                                          
         END                                                                    
*                                                                               
         MVC   INSLINE,@R1         Save line text                               
         LA    R1,INSLINE          Point to saved line                          
         IF    (R3,GT,1),'L R15,@R4; A R15,@R4+4; ST R15,CPMODNEX'              
         ACALL LINEMOD             Do line mods                                 
         BM    CVNEXT              Abort command                                
         BP    INSREPR             Abort mods                                   
         IF    ^INSFDIT,INSNEXT                                                 
         MVC   CPLCNO,@R4          Original lineno                              
         LA    R1,CPLCNO                                                        
         VCALL LOCATE                                                           
         IF    (CPDRPT.CPFNTYT+CPFHIGH,NZ),INSREPR                              
         MVC   INSLINE(&PRESSZ),@R1                                             
         B     INSNEXT                                                          
         END                                                                    
*                                                                               
         MVC   INSLINE,@R1         Save line text                               
         LA    R1,INSLINE          Point to saved line                          
         L     R15,@R4             Lineno                                       
         VCALL LENCHKM             Check for excessive length                   
         VCALL PRESS                                                            
         INCR  R0,CPACHCT          Kick change count                            
         END                                                                    
         MVC   INSLINE(4),@R4      Set lineno                                   
         LA    R1,INSLINE          Pressed line loc                             
         LC    R0,INSLINE+4        ... and len                                  
         VCALL STOW                                                             
         IF    M,BEGIN             Line already exists                          
         TSEG  'Line',,B                                                        
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),B                                                      
         ERROR 'already in file.'                                               
         END                                                                    
INSNEXT  LM    R0,R1,@R4           Lineno & delta                               
         ST    R0,CPACLNO          Set current line ptr                         
         AR    R0,R1                                                            
         ST    R0,@R4              Next lineno                                  
         DECR  R3                                                               
         IF    INSFDIT,'SET INSFGOTL'  Ditto this line                          
         END                                                                    
*                                                                               
         LA    R4,@R4+L'INSLINS    Next lineno                                  
         END                                                                    
         B     CVNEXT                                                           
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  INSERT SCKWS AND SCKWS ROUTINES                                              
*                                                                               
*                                                                               
INSPRT   SCKW  ,INSLNO,SYMLN                                                    
         SCKW  DITTO,IDITTO,A                                                   
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(CASEPSH),PUSH                                                 
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
IDITTO   PROC                                                                   
         SET   INSFDIT                                                          
         PEND                                                                   
*                                                                               
*                                                                               
*  SAVE AND CHECK INSERT LINE NUMBERS                                           
*                                                                               
*                                                                               
INSLNO   PROC                                                                   
*                                                                               
         COMMENT                   GET INSERT INFO AREA (R4)                    
         L     R4,INSCNT                                                        
         INCR  R4                                                               
         ST    R4,INSCNT                                                        
         IF    (R4,GT,30),BEGIN                                                 
         ERROR 'Too many insert line numbers specified.'                        
         END                                                                    
         DECR  R4                                                               
         MH    R4,=AL2(L'INSLINS)                                               
         LA    R4,INSLINS(R4)                                                   
*                                                                               
         COMMENT                   SAVE LINE NUMBER AND DELTA                   
         STM   R0,R1,@R4                                                        
         ST    R0,CPLCNO                                                        
*                                                                               
         COMMENT                   SCAN FOR (nnn) INSERT COUNT                  
         SCAN                                                                   
         SCANCHK                                                                
         IF    ((R0,POS),AND,(@R1,EQ,'(')),BEGIN   IF COUNT                     
         SH    R0,=Y(2)                                                         
         IF    M,'VCALL NOTVALID'                                               
         DTB   @R1+1,(R0)                                                       
         IF    NZ,'VCALL NOTVALID'                                              
         IF    (R15,GT,X'7FFF'),'VCALL NOTVALID'                                
         LR    R3,R15              No. of lines to insert                       
         END                                                                    
         ELSE  BEGIN               NO COUNT, USE DEFAULT                        
         SCBKUP                                                                 
         LA    R3,1                No. of lines to insert                       
         END                                                                    
         ST    R3,@R4+8            Save no. of lines to insert                  
*                                                                               
         COMMENT                   CHECK INSERT LINE NUMBER, COUNT              
         LA    R1,CPLCNO                                                        
         VCALL LOCATE                                                           
         IF    CPDRPT.CPFMTCH,BEGIN  Line already exists...                     
         TSEG  'Line',,B                                                        
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),B                                                      
         ERROR 'already in file.'                                               
         END                                                                    
         IF    (R3,GT,1),BEGIN                                                  
         L     R1,CPLCNO                                                        
         IF    (CPDRPT.CPFNTYT+CPFHIGH,NZ),'L R1,CVHILNO'                       
         S     R1,@R4              Amount of room before next line              
         LR    R2,R1                                                            
         CLEAR R0                                                               
         DR    R0,R3               Distance between each line                   
         IF    ('C R1,@R4+4',GE),EXIT  Implied delta is fine                    
         IF    (R1,Z),BEGIN                                                     
         TSEG  'Only '                                                          
         TNUM  (R2)                                                             
         TSEG  ' lines will fit at line '                                       
         L     R0,@R4                                                           
         VCALL CVEXNO                                                           
         B     CVERRMSG                                                         
         END                                                                    
         VCALL SELDELTA            Choose a nice delta                          
         ST    R1,@R4+4            Save it                                      
         END                                                                    
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
         DROP  R6                                                               
*                                                                               
INSMSG   DC    C'Press CONTINUE [ESC RETURN] to continue INSERT.'               
*                                                                               
         QLTORG                                                                 
         TITLE 'REPLACE Command'                                                
*box                                                                            
*                                                                               
*                                                                               
*  REPLACE -- REPLACE command.                                                  
*                                                                               
*                                                                               
*                                                                               
REPWA    RECORD BEGIN                                                           
REPLINWA DS    CL(&PRESSZ)                                                      
         END                                                                    
*                                                                               
*                                                                               
REPLACE  XPROC REPWA                                                            
         CLEAR REPWA                                                            
         LA    R2,REPWA                                                         
         ST    R2,CPCWA                                                         
*                                                                               
         VCALL NDETRNG                                                          
         IF    (CPGFNLST,OR,^CPFTYPED),'SET CPLFLG5.CPFNLST'                    
*                                                                               
         SCAN  REPPRT                                                           
         SCANCHK                                                                
*                                                                               
         RDRNG REPRTN,(DESNRTN+LOCATRTN+UNPRST+DESABORT)                        
         BOMB                      No return                                    
*                                                                               
         PEND                                                                   
*                                                                               
REPPRT   SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  DITTO,RDITTO,A                                                   
         SCKW  ,V(CASEPSH),PUSH                                                 
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
RDITTO   PROC                                                                   
         SET   CPLFLG2.CPFDITTO                                                 
         PEND                                                                   
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  REPRTN -- Entered from the range processor with old line loc                 
*    in R1 and len in R0.                                                       
*                                                                               
REPRTN   PROC                                                                   
*-                                                                              
*-       Page mode replace.                                                     
*-                                                                              
         IF    CPVFPAGE,BEGIN      Page mode...                                 
         L     R6,CPLCNO                                                        
REPPRTRY LR    R15,R6                                                           
         VCALL PAGELINE            Put line on the page                         
         IF    NZ,BEGIN            The page is full...                          
         MVC   CPVMSG,CVBLANKS                                                  
         MVC   CPVMSG(L'REPMSG),REPMSG  Press CONTINUE                          
         VCALL PAGEMOD                                                          
         IF    NZ,'VCALL RNGABORT; B CVABORT'  abort command                    
         B     REPPRTRY            Try it again                                 
         END                                                                    
*                                                                               
         B     REPEXIT                                                          
         END                                                                    
*-                                                                              
*-       Line mode replace.                                                     
*-                                                                              
         IF    ^CPLFLG5.CPFNLST,'VCALL LISTLINE'  list old line                 
         LR    R5,R1               Save line                                    
         LR    R4,R0               ...ptrs                                      
         TM    CPLFLG2,CPFREP1     Have a repl line for ditto                   
         BZ    FIRST               No                                           
         TM    CPLFLG2,CPFDITTO    Ditto option                                 
         BO    SAMEREP             Yes, go do replace                           
FIRST    L     R0,CPLCNO           Get located no                               
         ACALL LINERD              Get input                                    
         IF    POS,BEGIN           Break...                                     
         TSEG  'Line '                                                          
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         ABORT ' was not replaced.'                                             
         END                                                                    
         IF    NEG,BEGIN           Ended with @attn...                          
         IF    (R0,Z),'LR R1,R5; LR R0,R4'  use old line                        
         L     R2,CPCWA                                                         
         MVC   @R2(&LINESZ),@R1    Save the line                                
         ACALL LINEMOD             Do line modification                         
         BM    CVNEXT              Stop command                                 
         BZ    REPEXIT             All was ok                                   
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'CLEAR JCBFATTN'  Reset attn                           
         B     FIRST               Abort line, re-prompt                        
         END                                                                    
         L     R15,CPLCNO          Line no to 15                                
         IF    (R0,Z),'SETMSG CVBLANKS,1'  null line                            
         OI    CPLFLG2,CPFREP1     Set have repl line                           
         L     R2,CPCWA                                                         
         MVC   @R2(&LINESZ),@R1    Move text                                    
         LR    R1,R2                                                            
         VCALL LENCHKM             Compare to current length option             
         VCALL PRESS               Prest text                                   
         VCALL STOW                Go do the replace                            
         INCR  R0,CPACHCT          Count typed changes                          
         B     REPEXIT                                                          
*                                                                               
SAMEREP  L     R1,CPCWA            Point R1 to replacing line                   
         MVC   @R1(4),CPLCNO       Set new line no.                             
         LC    R0,@R1+4            Prest count to zero                          
         VCALL STOW                Replace the line                             
         TM    CPLFLG5,CPFNLST     Anything to list                             
         BO    REPEXIT             No                                           
         TWRITE ,                  Write out line                               
         BP    CVERROR             Abort if attn                                
         B     REPEXIT             Normal exit                                  
*                                                                               
REPEXIT  PEND                                                                   
         DROP  BR                                                               
*                                                                               
REPMSG   DC    C'Press CONTINUE [ESC RETURN] to continue REPLACE.'              
*                                                                               
         QLTORG                                                                 
         TITLE 'CHANGE Command'                                                 
*box                                                                            
*                                                                               
*                                                                               
*  CHANGE -- CHANGE command.                                                    
*                                                                               
*  REDONE 9/90 ,,, UUGH!                                                        
*                                                                               
*                                                                               
         SPACE                                                                  
*                                                                               
*                                                                               
*  LOCAL CHANGE WORK AREA                                                       
*                                                                               
*                                                                               
CHWA     RECORD BEGIN                                                           
CHFLAG1  FLAG  ,                                                                
         FLAG  CHFCHSTR            REPLACE STRING                               
         FLAG  CHFCHCOL            REPLACE COLUMNS                              
         FLAG  CHFCTEXT            C'TEXT'                                      
         FLAG  CHFTO               CHANGE .. TO ..                              
         FLAG  CHFUSING            CHANGE .. USING ..                           
         FLAG  CHFALL              CHANGE ALL ....                              
CHFLAG2  FLAG  ,                                                                
         FLAG  CHFUPPER                                                         
         FLAG  CHFLOWER                                                         
         FLAG  CHFUPLOW                                                         
         FLAG  CHFMOD                                                           
         FLAG  CHFEDIT                                                          
         FLAG  CHFLINE                                                          
         FLAG  CHFREP                                                           
         FLAG  CHFIN                                                            
CHFLAG3  FLAG  ,                                                                
         FLAG  CHFCQUIT            QUIT CHANGE COMMAND,                         
         FLAG  CHFINCR             CHANGE W/INCREMENT                           
         FLAG  CHFBLNKS            STRING TO REPLACE ENDS IN BLANKS             
CHFLAG4  FLAG  ,                                                                
         FLAG  CHFCHNGD            CHANGE(S) MADE                               
         FLAG  CHFLCHNG            CHANGE(S) MADE TO CURRENT LINE               
         FLAG  CHFCHCT             WYLBUR CHANGE COUNT BUMPED                   
CHCOL1   DS    F                   COL 1                                        
CHCOL2   DS    F                   COL 2                                        
CHFENCE  DS    F                   FENCE COL                                    
CHCFENCE DS    F                   COMPUTATIONAL FENCE COL (=FENCE-1)           
CHOCCUR  DS    F                   OCCURANCE TO CHANGE                          
CHOCCCNT DS    F                   CHANGE COUNT TO CURRENT LINE                 
CHINCR   DS    F                   INCREMENT VALUE                              
CHITOTAL DS    F                   TOTAL VALUE                                  
CHIOFF   DS    F                   OFFSET OF NUMBER FIELD IN STRING             
CHILEN   DS    F                   LENGTH OF NUMBER FIELD IN STRING             
CHISIGN  DS    C                   INCREMENT CHAR (-,+,#,$, OR '')              
CHIPAT   DS    CL12                INCREMENT EDMK PATTERN                       
CHUFIRST DS    F                   USING FIRST LINE NO                          
CHULAST  DS    F                   USING LAST LINE NO                           
CHUCOL1  DS    F                   USING COL1-1                                 
CHUCOL2  DS    F                   USING COL RANGE LEN                          
CHUXFIR  DS    F                   USING FIRST (FOR REPEAT USING)               
CHUXLAST DS    F                   USING LAST (FOR REPEAT USING)                
CHSTR1LN DS    F                   STRING TO CHANGE                             
CHSTR1   DS    CL(&LINESZ)                                                      
CHSTR2LN DS    F                   STRING TO USE AS REPLACEMENT                 
CHSTR2   DS    CL(&LINESZ)                                                      
CHNDX    DS    F                   LINE INDEX                                   
CHNDXLIM DS    F                   LINE INDEX UPPER LIMIT                       
CHMVNDX1 DS    F                   PART OF LINE TO COPY                         
CHMVNDX2 DS    F                   START AND END                                
CHLNO    DS    F                   LINE NUMBER                                  
CHLINELN DS    F                                                                
CHLINE   DS    CL(&LINESZ)         LINE TO CHANGE                               
CHUPLNLN DS    F                                                                
CHUPLINE DS    CL(&LINESZ)         LINE (IN UPPER CASE)                         
CHSUBADR DS    F                   SUBSTITUTE STRING ADDR                       
CHSUBLN  DS    F                   SUBSTITUTE STRING LENGTH                     
CHSUBBUF DS    CL(&LINESZ)         SUBSTITUTE STRING BUFFER                     
CHNEWNDX DS    F                   NEW LINE INDEX                               
CHNEWBUF DS    CL(4*&LINESZ)       NEW LINE BUFFER  (MAY OVERFLOW)              
         END                                                                    
         EJECT                                                                  
*                                                                               
*                                                                               
*   CHANGE COMMAND                                                              
*                                                                               
*                                                                               
*   THE CODE IS DIVIDED INTO BASICALLY 2 PARTS:                                 
*     1. WE SCAN ALL THE VARIOUS OPTIONS.  VERY MINIMAL PROCESSING              
*        IS DONE ON THESE OPTIONS. MOSTLY THEY ARE JUST STORED AWAY             
*        IN THE LOCAL CHANGE WORK AREA.  WE THEN CALL THE RANGE                 
*        PROCESSOR.                                                             
*     2. THE RANGE PROCESSOR CO-ROUTINE. THIS ROUTINE (AND                      
*        SUBROUTINES) DO ALL THE ACTUAL LINE CHANGEING. THESE                   
*        ROUTINES ALSO USE THE LOCAL CHANGE WORK AREA. FOR                      
*        CHANGE ALGORITHMS SEE THE CO-ROUTINE CODE AND                          
*        SUBROUTINES.                                                           
*                                                                               
*                                                                               
CHANGE   XPROC CHWA                                                             
*                                                                               
         COMMENT                   EMERGENCY ZAP LOCATION **                    
         IF    (R0,NE,R0),BEGIN                                                 
         ACALL CHANGE                                                           
         END                                                                    
*                                                                               
         LA    R6,CHWA                                                          
         USING CHWA,R6                                                          
         CLEAR CHWA                                                             
         ST    R6,CPCWA                                                         
*                                                                               
         SET   CPLFLG1.CPFALL      Allow default all                            
         SCAN  SCHPRT1             Scan 1st string or posit                     
         SCANCHK                                                                
         SCAN  TOUSPRT             Scan TO, USING ...                           
         SCANCHK                                                                
*                                                                               
         COMMENT                   SCAN CHANGE ... USING                        
         IF    CHFUSING,BEGIN                                                   
         SCAN  SCHUSPRT                                                         
         SCANCHK                                                                
         SCAN  SCHUSOPT                                                         
         SCANCHK                                                                
         END                                                                    
*                                                                               
         COMMENT                   SCAN CHANGE ... TO                           
         IF    CHFTO,BEGIN                                                      
         SCAN  SCHTOPRT                                                         
         SCANCHK                                                                
         SCAN  SCHTOOPT                                                         
         SCANCHK                                                                
         END                                                                    
*                                                                               
         COMMENT                   PROCESS SOME SCANNED OPTIONS                 
         IF    CHFCHSTR,BEGIN      SEE IF BLANKS IN SEARCH STR                  
         LA    R1,CHSTR1                                                        
         A     R1,CHSTR1LN                                                      
         DECR  R1                                                               
         IF    (@R1,EQ,' '),'SET CHFBLNKS'                                      
         END                                                                    
*                                                                               
         COMMENT                   SET UP RANGE PROCESSOR                       
         IF    ^CHFIN,BEGIN        IF NO RANGE GIVEN,                           
         VCALL NDETRNG             GO SET UP DEFAULT RANGE                      
         END                                                                    
*                                                                               
         COMMENT                   PROCESS RANGE                                
         SET   CPFNCUR             Set no current line update                   
         MVC   CPACLNO,=F'-1000'   Set current line invalid                     
         COMMENT                   PROCESS RANGE                                
         RDRNG CHNGRTN,(DESRTRN+LOCATRTN+UNPRST+DESABORT)                       
         COMMENT                   RANGE PROCESSED                              
         BNZ   CVERROR             Br if range aborted by attn                  
         IF    ^CPFSOME,CVNEXT     IF NO LINES IN RANGE, ALL DONE               
         IF    ^CHFCHNGD,BEGIN     IF NO CHANGES, GIVE ERR MSG                  
         IF    ^CPFTYPED,CVNEXT                                                 
         ERROR 'Nothing found to change.',,NOCHANGE                             
         END                                                                    
         B     CVNEXT                                                           
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*  CHANGE COMMAND SCANNING ROUTINES                                             
*                                                                               
*                                                                               
SCHPRT1  SCKW  ,SCHNULL,NULL                                                    
         SCKW  X,SCHHEX,P                                                       
         SCKW  C,SCHCSTR,P                                                      
         SCKW  ,SCHNUM,PI                                                       
         SCKW  /,SCHSLASH                                                       
         SCKW  ALL,SCHALL                                                       
         SCKW  ,SCHSTR                                                          
*                                                                               
TOUSPRT  SCKW  ,MISSTOU,NULL                                                    
         SCKW  TO,SCHTO                                                         
         SCKW  USING,SCHUSING,A                                                 
         SCKW  IN,SCHIN            ** YUCK, THIS SCKW ALLOWS                    
         COMMENT                   BACKWARDS COMPATATBILITY, IE.                
         COMMENT                   CH 'XXX' IN <ZZZZ> TO 'MMM'                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
         COMMENT                   CHANGE ... TO ...                            
SCHTOPRT SCKW  ,SCHMISS,NULL                                                    
         SCKW  +,SCHTPNUM,(P,I)                                                 
         SCKW  -,SCHTMNUM,(P,I)                                                 
         SCKW  ,SCHTNUM,I                                                       
         SCKW  UPPER,SCHTUPP,A                                                  
         SCKW  LOWER,SCHTLOW,A                                                  
         SCKW  UPLOW,SCHTUPLO,A                                                 
         SCKW  X,SCHTHEX,P                                                      
         SCKW  ,SCHTSTR                                                         
*                                                                               
         COMMENT                   CHANGE ... USING ...                         
SCHUSPRT SCKW  ,SCHMISS,NULL                                                    
         SCKW  ALL,USALL                                                        
         SCKW  ,USLNO,SYMLN                                                     
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
         COMMENT                   TO ... OPTIONS                               
SCHTOOPT SCKW  MODIFY,SCHMOD,A                                                  
         SCKW  M,SCHMOD                                                         
         SCKW  EDIT,SCHEDIT,A                                                   
         SCKW  E,SCHEDIT                                                        
         SCKW  LINE,SCHLINE,A                                                   
         SCKW  REPEAT,SCHREP,A                                                  
         SCKW  IN,SCHIN                                                         
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
         COMMENT                   USING ... OPTIONS                            
SCHUSOPT SCKW  COLUMNS,SCHCOLS,(A,V(MPCOLS))                                    
         SCKW  COLS,SCHCOLS,V(MPCOLS)                                           
         SCKW  MODIFY,SCHMOD,A                                                  
         SCKW  M,SCHMOD                                                         
         SCKW  EDIT,SCHEDIT,A                                                   
         SCKW  E,SCHEDIT                                                        
         SCKW  LINE,SCHLINE,A                                                   
         SCKW  REPEAT,SCHREP,A                                                  
         SCKW  IN,SCHIN                                                         
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*                                                                               
*  SCAN FOR THING TO CHANGE                                                     
*                                                                               
*                                                                               
SCHNULL  PROC                                                                   
         ERROR 'Missing CHANGE command options.'                                
         PEND                                                                   
*                                                                               
SCHHEX   PROC                                                                   
         SET   CHFCHSTR                                                         
         VCALL CKQUOTES                                                         
         LA    R15,CHSTR1                                                       
         VCALL HEXSTR                                                           
         IF    NEG,'TSEG (R1),(R0); ERROR ": invalid hex digits."'              
         IF    NP,'VCALL NOTVALID'  Null string is invalid                      
         ST    R0,CHSTR1LN                                                      
         ACALL SCHSCOLS                                                         
         ACALL CHKCOLS                                                          
         ACALL SCHOCCUR                                                         
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SCHCSTR  PROC                                                                   
         SET   CHFCHSTR                                                         
         SET   CHFCTEXT                                                         
         VCALL CKQUOTES                                                         
         LA    R15,CHSTR1                                                       
         VCALL DEQSTR                                                           
         IF    NP,'VCALL NOTVALID' Null string is ng                            
         L     R14,CVUPPTBL                                                     
         LR    R15,R0                                                           
         DEX   R15,'TR @R1(0),@R14'   Xlate to upper                            
         ST    R0,CHSTR1LN                                                      
         ACALL SCHSCOLS                                                         
         ACALL CHKCOLS                                                          
         ACALL SCHOCCUR                                                         
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SCHSTR   PROC                                                                   
         SET   CHFCHSTR                                                         
         VCALL CKQUOTES                                                         
         LA    R15,CHSTR1                                                       
         VCALL DEQSTR                                                           
         IF    NP,'VCALL NOTVALID' Null string is invalid                       
         ST    R0,CHSTR1LN                                                      
         ACALL SCHSCOLS                                                         
         ACALL CHKCOLS                                                          
         ACALL SCHOCCUR                                                         
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SCHNUM   PROC                                                                   
         SCBKUP ,                                                               
         SET   CHFCHCOL                                                         
         ACALL SCHSCOLS                                                         
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SCHSLASH PROC                                                                   
         SCBKUP ,                                                               
         SET   CHFCHCOL                                                         
         ACALL SCHSCOLS                                                         
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SCHALL   PROC                                                                   
         SET   CHFCHCOL                                                         
         SET   CHFALL                                                           
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
         EJECT                                                                  
*                                                                               
*                                                                               
*  SCAN FOR 'TO' OR 'USING'                                                     
*                                                                               
*                                                                               
MISSTOU  PROC                                                                   
         ERROR 'Missing TO or USING for the CHANGE command. '                   
         PEND                                                                   
*                                                                               
SCHTO    PROC                                                                   
         SET   CHFTO                                                            
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SCHUSING PROC                                                                   
         SET   CHFUSING                                                         
         LA    R15,4                                                            
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  ROUTINES TO SCAN THE  <xxxx> PART OF A                                       
*     CHANGE ... TO <xxxxx> <OPTIONS> COMMAND.                                  
*                                                                               
*                                                                               
*                                                                               
SCHMISS  PROC                                                                   
         ERROR 'Missing operand. '                                              
         PEND                                                                   
*                                                                               
*                                                                               
SCHTSTR  PROC  ,                   SCAN STRING, MUST BE QUOTED                  
         VCALL CKQUOTES                                                         
         SCDQUOTE CHSTR2                                                        
         ST    R0,CHSTR2LN                                                      
         ACALL SCHINCR             SCAN FOR OPTIONAL INCREMENT                  
         IF    (R15,NZ),BEGIN                                                   
         ACALL SETINCR                                                          
         END                                                                    
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SCHTHEX  PROC  ,                   HEX STRING,                                  
         VCALL CKQUOTES                                                         
         LA    R15,CHSTR2                                                       
         VCALL HEXSTR                                                           
         IF    NEG,BEGIN                                                        
         TSEG  (R1),(R0)                                                        
         ERROR ': INVALID HEX'                                                  
         END                                                                    
         ST    R0,CHSTR2LN                                                      
         ACALL SCHINCR             SCAN FOR OPTIONAL INCREMENT                  
         IF    (R15,NZ),BEGIN                                                   
         ACALL SETINCR                                                          
         END                                                                    
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SCHTNUM  PROC  ,                   NUMBER                                       
         SCTOK                                                                  
         LR    R3,R0                                                            
         MOVE  R3,CHSTR2,@R1                                                    
         ST    R0,CHSTR2LN                                                      
         ACALL SCHINCR             SCAN FOR INCREMENT                           
         ACALL SETINCR             SET INCREMENT PATTERN, ETC                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SCHTPNUM PROC  ,                   +NUMBER                                      
         MVC   CHSTR2(1),=CL1'+'                                                
         SCTOK ,                                                                
         LR    R3,R0                                                            
         MOVE  R3,CHSTR2+1,@R1                                                  
         INCR  R0                                                               
         ST    R0,CHSTR2LN                                                      
         ACALL SCHINCR             SCAN FOR INCREMENT                           
         ACALL SETINCR             SET INCREMENT PATTERN, ETC                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SCHTMNUM PROC  ,                   -NUMBER                                      
         MVC   CHSTR2(1),=CL1'-'                                                
         SCTOK                                                                  
         LR    R3,R0                                                            
         MOVE  R3,CHSTR2+1,@R1                                                  
         INCR  R0                                                               
         ST    R0,CHSTR2LN                                                      
         ACALL SCHINCR             SCAN FOR INCREMENT                           
         ACALL SETINCR             SET INCREMENT PATTERN, ETC                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SCHTUPP  PROC  ,                   UPPER                                        
         SET   CHFUPPER                                                         
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SCHTLOW  PROC                                                                   
         SET   CHFLOWER                                                         
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SCHTUPLO PROC                                                                   
         ERROR 'CHANGE ... TO UPLOW is not available.',,CR                      
         SET   CHFUPLOW                                                         
         LA    R15,4                                                            
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  SCAN ROUTINES FOR USING ...                                                  
*                                                                               
MISSUSE  PROC                                                                   
         ERROR 'Missing operand.'                                               
         PEND                                                                   
*                                                                               
USALL    PROC                                                                   
         L     R0,CPAFLNO          FIRST,LAST LINENO                            
         L     R1,CPALLNO                                                       
         ST    R0,CHUFIRST                                                      
         ST    R1,CHULAST                                                       
         ST    R0,CHUXFIR                                                       
         ST    R1,CHUXLAST                                                      
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
USLNO    PROC  ,                   USING <nnn> [/<mmm>]                         
         ST    R0,CHUFIRST                                                      
         ST    R0,CHULAST                                                       
         ST    R0,CHUXFIR                                                       
         ST    R0,CHUXLAST                                                      
         SCAN  ,                                                                
         SCANCHK                                                                
         COMMENT                   IF '/', SCAN FOR <mmm>                       
         IF    ((@R1,EQ,'/'),AND,(R0,EQ,1)),BEGIN                               
         SCAN  NEEDNUM                                                          
         SCANCHK                                                                
         ST    R3,CHULAST                                                       
         ST    R3,CHUXLAST                                                      
         END                                                                    
         ELSE  BEGIN               IF NOT '/', UNSCAN LAST TOKEN                
         SCBKUP                                                                 
         END                                                                    
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
NEEDNUM  SCKW  ,MISSNUM,NULL                                                    
         SCKW  ,GOTNUM,SYMLN                                                    
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
MISSNUM  PROC                                                                   
         ERROR 'Missing operand. '                                              
         PEND                                                                   
*                                                                               
GOTNUM   PROC                                                                   
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,4                                                            
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  ROUTINES TO SCAN MISC CHANGE COMMAND OPTIONS                                 
*                                                                               
*                                                                               
SCHLINE  PROC                                                                   
         SET   CHFLINE                                                          
         PEND                                                                   
*                                                                               
SCHREP   PROC                                                                   
         SET   CHFREP              Set "repeat" option                          
         PEND                                                                   
*                                                                               
SCHMOD   PROC                                                                   
         SET   CHFMOD                                                           
         SET   CPFMODXP*CPFMODCD   Modify line after changes                    
         PEND                                                                   
*                                                                               
SCHEDIT  PROC                                                                   
         SET   CHFEDIT                                                          
         SET   CPFMODXP,(CPFMODCD,OFF)  edit line after changes                 
         PEND                                                                   
*                                                                               
SCHCOLS  PROC                                                                   
         ST    R0,CHUCOL1                                                       
         ST    R1,CHUCOL2                                                       
         PEND                                                                   
*                                                                               
*                                                                               
SCHIN    PROC                                                                   
         IF    CHFIN,BEGIN         Dont allow 2nd 'in'                          
         ERROR 'in: invalid.  (2 range specifications not allowed.)'            
         END   ,                                                                
         SET   CHFIN                                                            
         VCALL NDETRNG             Get range defined                            
         TM    CPLFLG1,CPFALL      Was a range given                            
         IF    Z,BEGIN                                                          
         ERROR 'in: invalid.  Missing range. '                                  
         END                                                                    
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*                                                                               
*  SCAN COLUMNS TO CHANGE TYPE OPTION                                           
*                                                                               
*  ON ENTRY:                                                                    
*    SCAN CONTROL BLOCK POINTS TO:                                              
*      'X' OR 'X/Y' OR 'X/Y/Z' OR 'X//Z' OR '//Z'                               
*  ON EXIT:                                                                     
*    CHCOL1, CHCOL2, CHFENCE ARE SET. ZERO IF NONE.                             
*    SCANNER POINTS BY ANY 'X//Y' CONSTRUCTS.                                   
*    IF NO 'X//Z' CONSTRUCTS, ROUTINES DOES NOT ADVANCE                         
*    SCANNER.  R15 IS ALWAYS RETURNED AS ZERO.                                  
*                                                                               
*  COL1/COL2/FENCE,,, MAY TAKE FORMAT                                           
*  OF   X ; X/Y ; X/Y/Z ; X//Z ; //Z                                            
*                                                                               
*  NOTE:                                                                        
*  CALL TO 'SCAN COLSPRT ' RETURNS                                              
*    R15 - 4 IF NOT NUMBER OR SLASH                                             
*          8 IF NUMBER SCANNED (R3=VALUE OF NUMBER SCANNED)                     
*         12 IF SLASH SCANNED                                                   
*                                                                               
*                                                                               
SCHSCOLS PROC ,                                                                 
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   CLEAR VALUES                                 
         CLEAR CHCOL1                                                           
         CLEAR CHCOL2                                                           
         CLEAR CHFENCE                                                          
*                                                                               
         COMMENT                   SCAN FOR STARTING COL                        
         SCAN  COLSPRT                                                          
         SCANCHK                                                                
         COMMENT                   NO MATCH                                     
         IF    (R15,EQ,4),BEGIN                                                 
         B     COLSDONE                                                         
         END                                                                    
         COMMENT                   NUMBER                                       
         ELSEIF (R15,EQ,8),BEGIN                                                
         IF    ((R3,NEG),OR,(R3,GT,&LINESZ)),BEGIN                              
         VCALL NOTVALID                                                         
         END                                                                    
         ST    R3,CHCOL1           SAVE COL1                                    
         SCAN  COLSPRT             CONTINUE IF SLASH, SKIP SLASH                
         SCANCHK ,                 IF NOT SLASH, WE ARE DONE                    
         IF    (R15,EQ,4),BEGIN                                                 
         B     COLSDONE                                                         
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         SCBKUP                                                                 
         B     COLSDONE                                                         
         END                                                                    
         END                                                                    
         COMMENT                   SLASH,                                       
         ELSEIF (R15,EQ,12),BEGIN                                               
         END                                                                    
*                                                                               
         COMMENT                   SCAN FOR ENDING COL,                         
         COMMENT                   CHANGE LENGTH                                
         SCAN  COLSPRT                                                          
         SCANCHK                                                                
         COMMENT                   NO MATCH                                     
         IF    (R15,EQ,4),BEGIN                                                 
         B     COLSDONE                                                         
         END                                                                    
         COMMENT                   NUMBER                                       
         ELSEIF (R15,EQ,8),BEGIN                                                
         IF    ((R3,LT,CHCOL1),OR,(R3,GT,&LINESZ)),BEGIN                        
         VCALL NOTVALID                                                         
         END                                                                    
         ST    R3,CHCOL2           SAVE COL2                                    
         SCAN  COLSPRT             CONTINUE IF SLASH, SKIP SLASH                
         SCANCHK ,                 IF NOT SLASH, WE ARE DONE                    
         IF    (R15,EQ,4),BEGIN                                                 
         B     COLSDONE                                                         
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         SCBKUP                                                                 
         B     COLSDONE                                                         
         END                                                                    
         END                                                                    
         COMMENT                   SLASH,                                       
         ELSEIF (R15,EQ,12),BEGIN                                               
         END                                                                    
*                                                                               
         COMMENT                   SCAN FOR FENCE COL,                          
         COMMENT                   CHANGE LENGTH                                
         SCAN  COLSPRT                                                          
         SCANCHK                                                                
         COMMENT                   NO MATCH                                     
         IF    (R15,EQ,4),BEGIN                                                 
         B     COLSDONE                                                         
         END                                                                    
         COMMENT                   NUMBER                                       
         ELSEIF (R15,EQ,8),BEGIN                                                
         IF    ((R3,LT,CHCOL1),OR,(R3,LT,CHCOL2),OR,                   X        
               (R3,GT,&LINESZ)),BEGIN                                           
         VCALL NOTVALID                                                         
         END                                                                    
         IF    (R3,NEG),'CLEAR R3'                                              
         ST    R3,CHFENCE          SAVE FENCE                                   
         DECR  R3                                                               
         ST    R3,CHCFENCE         SAVE FENCE COL - 1                           
         END                                                                    
         COMMENT                   SLASH, THIRD SLASH !  NO GOOD                
         ELSEIF (R15,EQ,12),BEGIN                                               
         VCALL NOTVALID                                                         
         END                                                                    
*                                                                               
COLSDONE LABEL ,                                                                
         PEND                                                                   
*                                                                               
* SCAN NUMBER, SLASH, OR OTHER.  SET RETURN CODE                                
*                                                                               
COLSPRT  SCKW  ,COLSNULL,NULL                                                   
         SCKW  ,COLSNUM,PI                                                      
         SCKW  /,COLSSLSH                                                       
         SCKW  ,COLSJUNK                                                        
*                                                                               
COLSNULL PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
COLSJUNK PROC                                                                   
         SCBKUP                                                                 
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
COLSNUM  PROC                                                                   
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
COLSSLSH PROC                                                                   
         LA    R15,12                                                           
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  CHECK COLUMNS                                                                
*                                                                               
*  VALIDITY CHECH COLS FOR 'XXXXX'N/M SPECIFICATION.                            
*                                                                               
*                                                                               
CHKCOLS  PROC                                                                   
*                                                                               
         COMMENT                   CHECK TO SEE SEARCH WILL FIT                 
         L     R2,CHCOL2                                                        
         IF    (R2,POS),BEGIN                                                   
         L     R1,CHCOL1                                                        
         DECR  R1                                                               
         SR    R2,R1               COLUNMS TO CHECK                             
         IF    (R2,LT,CHSTR1LN),BEGIN                                           
         ERROR 'String is longer than columns given.'                           
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*                                                                               
*  SCAN CHANGE OCCURANCE NUMBER                                                 
*                                                                               
*  ON ENTRY:                                                                    
*    SCAN CONTROL BLOCK MAY POINT TO:                                           
*      '(nnn)'                                                                  
*  ON EXIT:                                                                     
*    CHOCCUR SET TO NNNN OR ZERO IF NONE.                                       
*    SCANNER POINTS PAST ANY '(nnn)' CONSTRUCTS                                 
*    IF NO '(nnn)' CONSTRUCTS, ROUTINES DOES NOT ADVANCE                        
*    SCANNER.  R15 IS ALWAYS RETURNED AS ZERO.                                  
*                                                                               
*                                                                               
SCHOCCUR PROC ,                                                                 
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   SET DEFAULTS                                 
         CLEAR CHOCCUR             NOT SPECIFIED                                
*                                                                               
         COMMENT                   SCAN FOR STARTING COL                        
         SCAN  OCCURPRT                                                         
         SCANCHK                                                                
*                                                                               
         PEND                                                                   
*                                                                               
*                                                                               
*                                                                               
OCCURPRT SCKW  ,OCCNULL,NULL                                                    
         SCKW  ,OCCSCAN,V(MPAREN)                                               
         SCKW  ,OCCJUNK                                                         
*                                                                               
OCCNULL  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
OCCJUNK  PROC                                                                   
         SCBKUP                                                                 
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*  IF (nnn), SCAN 'nnn'                                                         
*                                                                               
OCCSCAN  PROC                                                                   
         IF    (R0,LT,3),BEGIN                                                  
         VCALL NOTVALID                                                         
         END                                                                    
         SCPUSH                                                                 
         INCR  R1                                                               
         DECR  R0                                                               
         DECR  R0                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  OCCNTPRT                                                         
         SCANCHK                                                                
         ST    R3,CHOCCUR                                                       
         SCPOP                                                                  
         PEND                                                                   
*                                                                               
OCCNTPRT SCKW  ,OCCMISS,NULL                                                    
         SCKW  ,OCCVAL,PI                                                       
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
OCCMISS  PROC                                                                   
         ERROR 'Missing occurance specification.'                               
         PEND                                                                   
*                                                                               
OCCVAL   PROC                                                                   
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*  SCAN INCREMENT, IF ANY                                                       
*                                                                               
*  ON ENTRY:                                                                    
*    SCANNER POINTS TO INCREMENT, IF ANY                                        
*                                                                               
*  ON EXIT:                                                                     
*    IF INCREMENT SCANNED:                                                      
*      R15 - NZ                                                                 
*      R0 - INCREMENT VALUE (MAY BE ZERO, NEGATIVE)                             
*    IF NO INCREMENT:                                                           
*      R15 - ZERO                                                               
*      R0 - DEFAULT INCREMENT VALUE (IE. R0=1)                                  
*                                                                               
SCHINCR  PROC                                                                   
         SCAN  INCRPRT                                                          
         SCANCHK                                                                
         IF    (R15,EQ,4),BEGIN    NO INCREMENT FOUND                           
         CLEAR R15                                                              
         LA    R0,1                                                             
         END                                                                    
         IF    (R15,EQ,8),BEGIN                                                 
         LA    R15,4                                                            
         LR    R0,R3                                                            
         END                                                                    
         PRETURN (R0)                                                           
         PEND                                                                   
*                                                                               
*                                                                               
*                                                                               
INCRPRT  SCKW ,INCRNULL,NULL                                                    
         SCKW +,INCRPLUS,(P,I)                                                  
         SCKW -,INCRMIN,(P,I)                                                   
         SCKW ,INCRNONE                                                         
*                                                                               
INCRNULL PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
INCRNONE PROC                                                                   
         SCBKUP                                                                 
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
INCRPLUS PROC                                                                   
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
INCRMIN  PROC                                                                   
         LCR   R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,8                                                            
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*                                                                               
*  SET UP STUFF TO DO INCREMENTS,,,                                             
*                                                                               
*  THIS IS A BIT COMPLICATED WE SET UP AN EDMK PATTERN                          
*  FOR CONVERTING THE NUMBER INTO A PRINTABLE STRING                            
*  AND OTHER NON OBVIOUS YUCK.                                                  
*                                                                               
*  GETINCR IS SETINCR COMPANION ROUTINE, CHECK IT OUT.                          
*                                                                               
*  NOTES:                                                                       
*  WE SET UP PATTERN FOR EDMK: NOTE THAT SIGNIFICANCE BYTE                      
*  STARTS THE NUMBER PRINTING ON THE *NEXT* BYTE EXAMINED.                      
*  WE LOVE EDMK COMMAND.                                                        
*                                                                               
SETIWA   RECORD BEGIN                                                           
SETIFLD  DS    F                   START OF NUMBER FIELD                        
SETISIGN DS    F                   SIGN BYTE OR START OF NUMBER                 
SETINUM  DS    F                   START OF NUMBER IN FIELD                     
SETIEND  DS    F                   END OF NUMBER IN FIELD                       
         END                                                                    
*                                                                               
SETINCR  PROC  SETIWA                                                           
*                                                                               
         COMMENT                   SET INCREMENT                                
         SET   CHFINCR                                                          
         ST    R0,CHINCR                                                        
         CLEAR CHISIGN                                                          
*                                                                               
         COMMENT                   FIND END, START AND SIGN OF                  
         COMMENT                   NUMBER IN STRING TO INCREMENT                
         LA    R2,CHSTR2           R2 - STRING START                            
         LA    R3,CHSTR2           R3 - STRING END                              
         A     R3,CHSTR2LN                                                      
         DECR  R3                                                               
         COMMENT                   FIND END OF NUMBER IN STRING                 
         WHILE ((R3,GE,R2),AND,((@R3,LT,'0'),OR,(@R3,GT,'9'))),BEGIN            
         DECR  R3                                                               
         END                                                                    
         IF    (R3,LT,R2),BEGIN    IF NO NUMBER, FORGET INCREMENT               
         CLEAR CHFINCR                                                          
         B     SETIEXIT                                                         
         END                                                                    
         ST    R3,SETIEND                                                       
         COMMENT                   FIND START OF NUMBER                         
         WHILE ((R3,GE,R2),AND,(@R3,GE,'0'),AND,(@R3,LE,'9')),BEGIN             
         DECR  R3                                                               
         END                                                                    
         INCR  R3                                                               
         ST    R3,SETINUM                                                       
         ST    R3,SETISIGN                                                      
         COMMENT                   FIND SIGN, IF ANY                            
         DECR  R3                                                               
         IF    (R3,GE,R2),BEGIN                                                 
         IF    ((@R3,EQ,'+'),OR,(@R3,EQ,'-'),                          X        
               OR,(@R3,EQ,'#'),OR,(@R3,EQ,'$')),BEGIN                           
         ST    R3,SETISIGN                                                      
         MVC   CHISIGN,@R3                                                      
         DECR  R3                                                               
         END                                                                    
         END                                                                    
         COMMENT                   FIND START OF FIELD                          
         COMMENT                   FIELD MAY CONTAIN STARTIN BLANKS             
         WHILE ((R3,GE,R2),AND,(@R3,EQ,' ')),BEGIN                              
         DECR  R3                                                               
         END                                                                    
         INCR  R3                                                               
         ST    R3,SETIFLD                                                       
*                                                                               
         COMMENT                   GET NUMBER OFFSET, LENGTH                    
         LA    R2,CHSTR2                                                        
         L     R3,SETIFLD                                                       
         SR    R3,R2                                                            
         ST    R3,CHIOFF                                                        
         L     R2,SETIFLD                                                       
         L     R3,SETIEND                                                       
         SR    R3,R2                                                            
         INCR  R3                                                               
         ST    R3,CHILEN                                                        
*                                                                               
         COMMENT                   CHECK, GET NUMBER VALUE                      
         L     R3,SETIEND                                                       
         L     R2,SETINUM                                                       
         SR    R3,R2                                                            
         INCR  R3                                                               
         IF    (R3,GT,9),BEGIN                                                  
         ERROR 'Numeric overflow in CHANGE command. '                           
         END                                                                    
         L     R2,SETINUM          GET NUMBER VALUE                             
         L     R3,SETIEND                                                       
         CLEAR R4                                                               
         CLEAR R5                                                               
         WHILE (R2,LE,R3),BEGIN                                                 
         MH    R4,=H'10'                                                        
         IC    R5,@R2                                                           
         N     R5,=X'0000000F'                                                  
         AR    R4,R5                                                            
         INCR  R2                                                               
         END                                                                    
         IF    (CHISIGN,EQ,'-'),BEGIN                                           
         LNR   R4,R4                                                            
         END                                                                    
         S     R4,CHINCR           PRE SUBTRACT ONE INCREMENT                   
         ST    R4,CHITOTAL         SAVE TOTAL TO INCREMENT                      
*                                                                               
         COMMENT                   SET UP PATTERN,                              
         COMMENT                   NEED TO MARK SIGNIFICANCE BYTE               
         MVC   CHIPAT,=X'402020202020202020202020202020202020'                  
         L     R2,SETINUM                                                       
         IF    (@R2,EQ,'0'),BEGIN  IF NUMBER STARTS W/ZERO                      
         L     R2,SETIEND          MARK AT NUMBER WIDTH                         
         S     R2,SETINUM                                                       
         INCR  R2                                                               
         LA    R3,CHIPAT+L'CHIPAT                                               
         SR    R3,R2                                                            
         DECR  R3                  SET SIGNIFICANCE ON PREVIOUS BYTE            
         MVI   @R3,X'21'           SIGNIFICANCE BYTE                            
         END                                                                    
         ELSE  BEGIN               OTHERWISE LAST BYTE IS SIGNIFICANT           
         LA    R3,CHIPAT+L'CHIPAT                                               
         DECR  R3                                                               
         DECR  R3                  SET SIGNIFICANCE ON PREVIOUS BYTE            
         MVI   @R3,X'21'           SIGNIFICANCE BYTE                            
         END                                                                    
*                                                                               
SETIEXIT LABEL ,                                                                
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*   CHANGE CO-ROUTINE                                                           
*                                                                               
*   ON ENTRY:                                                                   
*     R1 - LINE LOCATION                                                        
*     R0 - LINE LENGTH                                                          
*     CPLCNO - LINE NUMBER                                                      
*                                                                               
*                                                                               
*                                                                               
CHNGRTN  PROC                                                                   
*                                                                               
         COMMENT                   GET GLOBAL CHANGE WORK AREA                  
         USING CHWA,R6                                                          
         L     R6,CPCWA                                                         
*                                                                               
         COMMENT                   INIT WORKAREA,PTRS FOR CHANGES               
         MVC   CHLNO,CPLCNO                                                     
         ACALL INITCHNG                                                         
*                                                                               
         COMMENT                   LOOP MAKING CHANGES IN LINE                  
         ACALL GETCHLOC            FIND CHANGE LOCATION                         
         WHILE (R15,Z),BEGIN       WHILE SOMETHING TO CHANGE                    
         ACALL GETCHSTR            GET REPLACEMENT STRING                       
         ACALL DOCHANGE            SUBSTITUTE REPLACEMENT                       
         ACALL GETCHLOC            FIND NEXT CHANGE LOCATION                    
         END                                                                    
*                                                                               
         COMMENT                   IF LINE NOT CHANGED, WE ARE DONE             
         IF    ^CHFLCHNG,CHNGEXIT                                               
*                                                                               
         COMMENT                   ADD UNCHANGED TEXT TO END OF LINE            
         ACALL DOEND                                                            
*                                                                               
         COMMENT                   WE CHANGED LINE                              
         COMMENT                   DO END PROCESSING, WRITE OUT LINE,           
         ACALL ENDPROC             AND MISC. JUNK (EDIT,VERIFY,ETC)             
*                                                                               
CHNGEXIT LABEL ,                                                                
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  CHANGE INITIALIZATION                                                        
*                                                                               
*                                                                               
*                                                                               
INITCHNG PROC ,                                                                 
*                                                                               
         COMMENT                   CLEAR A FEW FIELDS                           
         CLEAR CHFLCHNG            LINE NOT YET CHANGED                         
         CLEAR CHOCCCNT            OCCURANCE COUNT                              
*                                                                               
         COMMENT                   MOVE INPUT STRING                            
         LA    R2,CHLINE           BLANK LINE                                   
         LA    R3,L'CHLINE                                                      
         L     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
         ST    R0,CHLINELN         MOVE STRING                                  
         LR    R3,R0                                                            
         IF    (R3,POS),BEGIN                                                   
         DEX   R3,' MVC CHLINE(0),@R1 '                                         
         END                                                                    
*                                                                               
         COMMENT                   IF C'TEXT' COPY NEW STRING                   
         IF    CHFCTEXT,BEGIN                                                   
         LA    R2,CHUPLINE         BLANK LINE                                   
         LA    R3,L'CHUPLINE                                                    
         L     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
         ST    R0,CHUPLNLN         MOVE STRING                                  
         LR    R3,R0                                                            
         IF    (R3,POS),BEGIN                                                   
         DEX   R3,' MVC CHUPLINE(0),@R1 '                                       
         L     R4,CVUPPTBL                                                      
         EX    R3,' TR CHUPLINE(0),@R4'  UPPER CASE STRING                      
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF ALL COLUMNS, SET COLUNMS                  
         IF    CHFALL,BEGIN                                                     
         LA    R2,1                                                             
         ST    R2,CHCOL1           COL1 = 1                                     
         FLOOR R0,1                                                             
         ST    R0,CHCOL2           COL2 = LINE LENGTH                           
         END                                                                    
*                                                                               
         COMMENT                   SET NEW LINE POINTER                         
         LA    R2,CHNEWBUF                                                      
         ST    R2,CHNEWNDX                                                      
*                                                                               
         COMMENT                   SET SEARCH, MOVE INDEXES                     
         LA    R2,CHLINE                                                        
         ST    R2,CHMVNDX1                                                      
         ST    R2,CHMVNDX2                                                      
         ST    R2,CHNDX                                                         
*                                                                               
         COMMENT                   FIND SEARCH INDEX LIMIT                      
         IF    CHFCHSTR,BEGIN                                                   
         IF    (CHCOL1,EQ,0),BEGIN IF NO X/Y COLS, USE ALL                      
         LA    R2,CHLINE                                                        
         A     R2,CHLINELN                                                      
         INCR  R2                  COMPARE ENTIRE STRING + A BLANK              
         IF    ^CHFBLNKS,BEGIN                                                  
         S     R2,CHSTR1LN                                                      
         END                                                                    
         ST    R2,CHNDXLIM                                                      
         END                                                                    
*                                                                               
         ELSE  BEGIN               X/Y COLS, SET LIMITS                         
         LA    R2,CHLINE                                                        
         A     R2,CHCOL1           SET CHNDX                                    
         DECR  R2                                                               
         ST    R2,CHNDX                                                         
         IF    (CHCOL2,EQ,0),BEGIN NO COL2                                      
         LA    R2,CHLINE                                                        
         A     R2,CHCOL1                                                        
         ST    R2,CHNDXLIM                                                      
         END                                                                    
         ELSE  BEGIN               GOT COL2                                     
         LA    R2,CHLINE                                                        
         A     R2,CHCOL2                                                        
         IF    ^CHFBLNKS,BEGIN                                                  
         INCR  R2                                                               
         S     R2,CHSTR1LN                                                      
         END                                                                    
         ST    R2,CHNDXLIM                                                      
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   CHECK SEARCH LIMIT                           
         LA    R2,CHNDXLIM                                                      
         LA    R3,CHLINE                                                        
         SR    R2,R3                                                            
         DECR  R2                  LAST COL TO SEARCH                           
         A     R2,CHSTR1LN                                                      
         IF    (R2,GE,&LINESZ),BEGIN IF SEARCH PAST END OF LINE,                
         LA    R2,CHLINE+&LINESZ     SHORTEN SEARCH LIMITS                      
         S     R2,CHSTR1LN                                                      
         ST    R2,CHNDXLIM                                                      
         END                                                                    
         END   , END OF FIND SEARCH LIMIT                                       
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*                                                                               
*  FIND PLACE FOR REPLACE                                                       
*                                                                               
*  ON EXIT:                                                                     
*   UPDATES MOVE INDEX 1 AND, BUMPS SEARCH INDEX                                
*   R15 - ZERO, CHANGE NEEDED                                                   
*         NZ, NO CHANGE NEEDED                                                  
*                                                                               
*                                                                               
*  NOTE:                                                                        
*  WE HANDLE OCCURANCE COUNT WITH RECURSION. YUCK IT UP!                        
*                                                                               
*                                                                               
GETCHLOC PROC                                                                   
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   IF COLUMN CHANGE,                            
         IF    (CHFCHCOL),BEGIN                                                 
         IF    (CHFLCHNG),GOTNOLOC IF ALREADY CHANGED, DONE                     
         LA    R1,CHLINE           SET PLACE TO CHANGE,,                        
         A     R1,CHCOL1                                                        
         DECR  R1                                                               
         ST    R1,CHMVNDX2                                                      
         ST    R1,CHNDX                                                         
         IF    (CHCOL2,GT,0),BEGIN                                              
         LA    R1,CHLINE                                                        
         A     R1,CHCOL2                                                        
         ST    R1,CHNDX                                                         
         END                                                                    
         B     GOTCHLOC                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF STRING CHANGE, SEARCH FOR STR             
         ELSEIF (CHFCHSTR),BEGIN                                                
         L     R1,CHNDX            R1 - CH SEARCH INDEX                         
         L     R2,CHSTR1LN         R2 - COMPARE LENGTH                          
         DECR  R2 (FOR EX)         R3 - LIMIT FOR SEARCH INDEX                  
         L     R3,CHNDXLIM         R4 - ACTUAL COMPARE ADDR                     
         WHILE (R1,LT,R3),BEGIN                                                 
         LR    R4,R1                                                            
         IF    CHFCTEXT,BEGIN      IF C'TEXT' COMPARE AGAIST UPPER              
         LA    R4,CHUPLINE-CHLINE(R4)                                           
         END                                                                    
         EX    R2,' CLC @R4(0),CHSTR1 '                                         
         IF    E,BEGIN             STRING MATCH                                 
         ST    R1,CHMVNDX2                                                      
         A     R1,CHSTR1LN                                                      
         ST    R1,CHNDX                                                         
         IF    (CHOCCUR,NE,0),BEGIN  SOME RECURSIVE OCCUR CNT LOGIC             
         INCR  R15,CHOCCCNT                                                     
         IF    (CHOCCCNT,EQ,CHOCCUR),GOTCHLOC                                   
         IF    (CHOCCCNT,GT,CHOCCUR),GOTNOLOC                                   
         ACALL GETCHLOC RECURSE                                                 
         B     GOTCDONE                                                         
         END   , END RECURSE LOGIC                                              
         B     GOTCHLOC                                                         
         END   , GOT STRING MATCH                                               
         LA    R1,1(R1)                                                         
         END   , STRING SEARCH LOOP                                             
         B     GOTNOLOC                                                         
         END                                                                    
*                                                                               
GOTCHLOC LABEL ,                   MATCH                                        
         CLEAR R15                                                              
         B     GOTCDONE                                                         
*                                                                               
GOTNOLOC LABEL ,                   NO-MATCH                                     
         LA    R15,4                                                            
         B     GOTCDONE                                                         
*                                                                               
GOTCDONE LABEL ,                                                                
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*                                                                               
*  GET REPLACEMENT STRING ...                                                   
*                                                                               
*                                                                               
*                                                                               
GETCHSTR PROC                                                                   
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   IF ONE CHANGE TEXT PER LINE, AND             
         COMMENT                   WE ALREADY HAVE IT, WE DONE                  
         IF    (CHFLINE,AND,CHFLCHNG),BEGIN                                     
         END                                                                    
*                                                                               
         ELSEIF CHFUPPER,BEGIN     UPPER                                        
         ACALL GETUPPER                                                         
         END                                                                    
*                                                                               
         ELSEIF CHFLOWER,BEGIN     LOWER                                        
         ACALL GETLOWER                                                         
         END                                                                    
*                                                                               
         ELSEIF CHFUPLOW,BEGIN     UPLOW                                        
         ACALL GETUPLOW                                                         
         END                                                                    
*                                                                               
         ELSEIF CHFINCR,BEGIN      INCREMENT                                    
         ACALL GETINCR                                                          
         END                                                                    
*                                                                               
         ELSEIF CHFUSING,BEGIN     USING                                        
         ACALL  GETUSING                                                        
         END                                                                    
*                                                                               
         ELSE  BEGIN               SIMPLE STRING SUBSTITUTION                   
         LA    R1,CHSTR2                                                        
         ST    R1,CHSUBADR                                                      
         L     R1,CHSTR2LN                                                      
         ST    R1,CHSUBLN                                                       
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  GET UPPER REPLACEMENT STRING                                                 
*                                                                               
*                                                                               
GETUPPER PROC                                                                   
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   IF REPLACE COLUMNS                           
         IF    CHFCHCOL,BEGIN      R1 - COLUMN LOC                              
         LA    R1,CHLINE                                                        
         A     R1,CHCOL1                                                        
         DECR  R1                                                               
         L     R2,CHCOL2           R2 - COLUMN LEN                              
         L     R3,CHCOL1                                                        
         DECR  R3                                                               
         SR    R2,R3                                                            
         IF    (R2,NP),BEGIN                                                    
         ERROR 'Ending column must be specified when using UPPER.'              
         END                                                                    
         DEX   R2,' MVC CHSUBBUF(0),@R1 '  MOVE STRING                          
         L     R4,CVUPPTBL                                                      
         EX    R2,' TR CHSUBBUF(0),@R4 '   UPPER CASE STRING                    
         INCR  R2                                                               
         ST    R2,CHSUBLN                                                       
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
         END                                                                    
*                                                                               
         COMMENT                   IF REPLACE STRING                            
         IF    (CHFCHSTR,AND,^CHFCHNGD),BEGIN                                   
         LA    R1,CHSTR1                                                        
         L     R2,CHSTR1LN                                                      
         DEX   R2,' MVC CHSUBBUF(0),@R1 '  MOVE STRING                          
         L     R4,CVUPPTBL                                                      
         EX    R2,' TR CHSUBBUF(0),@R4 '   UPPER CASE STRING                    
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
         L     R1,CHSTR1LN                                                      
         ST    R1,CHSUBLN                                                       
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  GET LOWER REPLACEMENT STRING                                                 
*                                                                               
*                                                                               
GETLOWER PROC                                                                   
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   IF REPLACE COLUMNS                           
         IF    CHFCHCOL,BEGIN      R1 - COLUMN LOC                              
         LA    R1,CHLINE                                                        
         A     R1,CHCOL1                                                        
         DECR  R1                                                               
         L     R2,CHCOL2           R2 - COLUMN LEN                              
         L     R3,CHCOL1                                                        
         DECR  R3                                                               
         SR    R2,R3                                                            
         IF    (R2,NP),BEGIN                                                    
         ERROR 'Ending column must be specified when using LOWER.'              
         END                                                                    
         DEX   R2,' MVC CHSUBBUF(0),@R1 '  MOVE STRING                          
         L     R4,CVLOWTBL                                                      
         EX    R2,' TR CHSUBBUF(0),@R4 '   LOWER CASE STRING                    
         INCR  R2                                                               
         ST    R2,CHSUBLN                                                       
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
         END                                                                    
*                                                                               
         COMMENT                   IF REPLACE STRING                            
         IF    (CHFCHSTR,AND,^CHFCHNGD),BEGIN                                   
         LA    R1,CHSTR1                                                        
         L     R2,CHSTR1LN                                                      
         DEX   R2,' MVC CHSUBBUF(0),@R1 '  MOVE STRING                          
         L     R4,CVLOWTBL                                                      
         EX    R2,' TR CHSUBBUF(0),@R4 '   LOWER CASE STRING                    
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
         L     R1,CHSTR1LN                                                      
         ST    R1,CHSUBLN                                                       
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  GET UPLOW REPLACEMENT STRING                                                 
*                                                                               
*                                                                               
GETUPLOW PROC                                                                   
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   IF REPLACE COLUMNS                           
         IF    CHFCHCOL,BEGIN      R1 - COLUMN LOC                              
         LA    R1,CHLINE                                                        
         A     R1,CHCOL1                                                        
         DECR  R1                                                               
         L     R2,CHCOL2           R2 - COLUMN LEN                              
         L     R3,CHCOL1                                                        
         DECR  R3                                                               
         SR    R2,R3                                                            
         IF    (R2,NP),BEGIN                                                    
         ERROR 'Ending column must be specified when using UPLOW.'              
         END                                                                    
         END                                                                    
         DEX   R2,' MVC CHSUBBUF(0),@R1 '       MOVE STRING                     
         INCR  R2                                                               
         ST    R2,CHSUBLN                                                       
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
*                                                                               
         COMMENT                   IF REPLACE STRING                            
         IF    (CHFCHSTR,AND,^CHFCHNGD),BEGIN                                   
         LA    R1,CHSTR1                                                        
         L     R2,CHSTR1LN                                                      
         DEX   R2,' MVC CHSUBBUF(0),@R1 '       MOVE STRING                     
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
         L     R1,CHSTR1LN                                                      
         ST    R1,CHSUBLN                                                       
         END                                                                    
*                                                                               
         COMMENT                   UPLOW STRING                                 
         L     R0,CHSUBLN                                                       
         L     R1,CHSUBADR                                                      
         ACALL UPLOW                                                            
*                                                                               
         PEND                                                                   
*                                                                               
*   R1,R0 - STRING TO UPLOW !                                                   
UPLOW    PROC                                                                   
         PEND                                                                   
*                                                                               
         EJECT                                                                  
*                                                                               
*  GET USING REPLACEMENT STRING FROM ACTIVE FILE                                
*                                                                               
GETUSING PROC                                                                   
*                                                                               
         COMMENT                   IF 1ST TIME, VALIDITY CHECK RANGE            
         IF    ^CHFCHNGD,BEGIN                                                  
         L     R0,CHUFIRST                                                      
         CLEAR R1                                                               
         VCALL GTFRSTLN                                                         
         IF    NZ,BEGIN                                                         
         ERROR 'No lines in USING range. '                                      
         END                                                                    
         IF    (R0,GT,CHULAST),BEGIN                                            
         ERROR 'No lines in USING range. '                                      
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   BLANK BUFFER                                 
         LA    R2,CHSUBBUF                                                      
         LA    R3,L'CHSUBBUF                                                    
         L     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   GET USING LINE                               
         LA    R1,CHSUBBUF                                                      
         LA    R2,CHUFIRST                                                      
         CLEAR R3                                                               
         VCALL GTFRST                                                           
*                                                                               
         COMMENT                   NO MORE LINES IN RANGE,                      
         COMMENT                   REPEAT RANGE, OR ** EXIT **                  
         IF    (NZ,OR,(CHUFIRST,GT,CHULAST)),BEGIN  NO MORE LINES               
         IF    ^CHFREP,BEGIN                                                    
         TSEG  'Not enough lines for using.',,CR                                
         SETMSG 'Repeat'                                                        
         VCALL YESRTN                                                           
         IF    NZ,BEGIN                                                         
         TSEG  'No repeating done.'                                             
         B     CVNEXT              ****** EXIT CHANGE COMMAND *****             
         END   ,                   *** IF NO REPEAT OF USING ******             
         SET   CHFREP                                                           
         END                                                                    
         L     R1,CHUXFIR          RESET RANGE FOR REPEAT                       
         ST    R1,CHUFIRST                                                      
         LA    R1,CHSUBBUF                                                      
         LA    R2,CHUFIRST                                                      
         CLEAR R3                                                               
         VCALL GTFRST              REPEAT AT START OF RANGE                     
         IF    (NZ,OR,(CHUFIRST,GT,CHULAST)),BEGIN  NO MORE LINES               
         ERROR 'No lines in USING range.' SHOULD NEVER HAPPEN                   
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   SET POINTERS TO LINE USED                    
         ST    R0,CHSUBLN                                                       
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
*                                                                               
         COMMENT                   BUMP LINE NUMBER FOR NEXT USING              
         L     R0,CHUFIRST                                                      
         LA    R1,1                                                             
         VCALL ADDER                                                            
         ST    R0,CHUFIRST                                                      
*                                                                               
         COMMENT                   IF USING ... COL=X/Y                         
         IF    (CHUCOL1,GT,0),BEGIN                                             
         L     R1,CHSUBADR         R1 - LOC                                     
         A     R1,CHUCOL1                                                       
         DECR  R1                                                               
         ST    R1,CHSUBADR                                                      
         L     R2,CHUCOL2          R2 - LEN                                     
         IF    (R2,Z),' L R2,CHSUBLN'                                           
         L     R1,CHUCOL1                                                       
         DECR  R1                                                               
         SR    R2,R1                                                            
         IF    (R2,NEG),' CLEAR R2 '                                            
         ST    R2,CHSUBLN                                                       
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  GET INCREMENT STRING                                                         
*                                                                               
*                                                                               
*                                                                               
GETIWA   RECORD BEGIN                                                           
GETIPACK DS    2F                  TOTAL VALUE IN PACKED FORMAT                 
GETIPAT  DS    CL12                PATTERN                                      
GETIMINL DS    F                   MINIMAL NUMBER LENGTH                        
GETINLEN DS    F                   NUMBER MOVE LENGTH                           
         END                                                                    
*                                                                               
*                                                                               
GETINCR  PROC  GETIWA                                                           
*                                                                               
         COMMENT                   INITIALIZE PATTERN                           
         MVC   GETIPAT,CHIPAT                                                   
*                                                                               
         COMMENT                   INCREMENT VALUE                              
         L     R2,CHITOTAL                                                      
         A     R2,CHINCR                                                        
         IF    ((R2,GT,999999999),OR,(R2,LT,-999999999)),BEGIN                  
         ERROR 'Numeric overflow in CHANGE command.'                            
         END                                                                    
         ST    R2,CHITOTAL                                                      
*                                                                               
         COMMENT                   DEFAULT R1 FOR EDMK                          
         COMMENT                   SET R1 TO FIRST BYTE FORCED OUT              
         LA    R1,GETIPAT+L'GETIPAT                                             
         DECR  R1                                                               
         WHILE (@R1,NE,X'21'),' DECR R1 '                                       
         INCR  R1                                                               
*                                                                               
         COMMENT                   FORMAT VALUE                                 
         CVD   R2,GETIPACK                                                      
         EDMK  GETIPAT,GETIPACK+2                                               
         DECR  R1                                                               
         IF    (R2,NEG),BEGIN                                                   
         MVI   @R1,C'-'                                                         
         DECR  R1                                                               
         END                                                                    
         ELSEIF    (CHISIGN,EQ,'+'),BEGIN                                       
         MVI   @R1,C'+'                                                         
         DECR  R1                                                               
         END                                                                    
         ELSEIF    (CHISIGN,EQ,'#'),BEGIN                                       
         MVI   @R1,C'#'                                                         
         DECR  R1                                                               
         END                                                                    
         ELSEIF    (CHISIGN,EQ,'$'),BEGIN                                       
         MVI   @R1,C'$'                                                         
         DECR  R1                                                               
         END                                                                    
*                                                                               
         COMMENT                   CALCULATE MINIMUM LENGTH                     
         COMMENT                   AND CALCULATE NUMBER MOVE LENGTH             
         LA    R2,GETIPAT+L'GETIPAT    R2 - ACTUAL NUMBER LENGTH                
         SR    R2,R1                                                            
         DECR  R2                                                               
         ST    R2,GETIMINL                                                      
         IF    (R2,GT,CHILEN),BEGIN   MOVE LENGTH IS MAX ( MINAMAL              
         ST    R2,GETINLEN            NUMBER LENGTH, NUMBER FIELD               
         END   ,                      SIZE )                                    
         ELSE  BEGIN                                                            
         L     R2,CHILEN                                                        
         ST    R2,GETINLEN                                                      
         END                                                                    
*                                                                               
         COMMENT                   PUT STRING BACK TOGETHER                     
         COMMENT                   FIRST PART, IF ANY                           
         LA    R1,CHSTR2                                                        
         L     R2,CHIOFF                                                        
         LA    R3,CHSUBBUF                                                      
         IF    (R2,POS),BEGIN                                                   
         DEX   R2,' MVC @R3(0),@R1 '                                            
         END                                                                    
         COMMENT                   NUMBER PART                                  
         LA    R1,GETIPAT+L'GETIPAT                                             
         S     R1,GETINLEN                                                      
         L     R2,GETINLEN                                                      
         LA    R3,CHSUBBUF                                                      
         A     R3,CHIOFF                                                        
         IF    (R2,POS),BEGIN                                                   
         DEX   R2,' MVC @R3(0),@R1 '                                            
         END                                                                    
         COMMENT                   FINAL PART, IF ANY                           
         LA    R1,CHSTR2                                                        
         A     R1,CHIOFF                                                        
         A     R1,CHILEN                                                        
         L     R2,CHSTR2LN                                                      
         S     R2,CHIOFF                                                        
         S     R2,CHILEN                                                        
         LA    R3,CHSUBBUF                                                      
         A     R3,CHIOFF                                                        
         A     R3,GETINLEN                                                      
         IF    (R2,POS),BEGIN                                                   
         DEX   R2,' MVC @R3(0),@R1 '                                            
         END                                                                    
         COMMENT                   SAVE INCR STRING ADDR, LEN                   
         LA    R1,CHSUBBUF                                                      
         ST    R1,CHSUBADR                                                      
         L     R2,CHSTR2LN                                                      
         S     R2,CHILEN                                                        
         A     R2,GETINLEN                                                      
         ST    R2,CHSUBLN                                                       
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*                                                                               
*  DO CHANGE SUBSTITUTION                                                       
*                                                                               
*                                                                               
*                                                                               
DOCHANGE PROC                                                                   
         USING CHWA,R6                                                          
*                                                                               
         COMMENT                   MOVE PREVIOUS TEXT, IF NEEDED                
         L     R1,CHMVNDX1                                                      
         L     R2,CHMVNDX2                                                      
         SR    R2,R1                                                            
         L     R3,CHNEWNDX                                                      
         IF    (R2,NZ),BEGIN                                                    
         DEX   R2,' MVC @R3(0),@R1 '                                            
         LA    R3,1(R3,R2)                                                      
         ST    R3,CHNEWNDX                                                      
         END                                                                    
         L     R1,CHNDX            UPDATE PREVIOUS TEXT POINTERS                
         ST    R1,CHMVNDX1                                                      
         ST    R1,CHMVNDX2                                                      
*                                                                               
         COMMENT                   MOVE REPLACEMENT TEXT                        
         L     R1,CHSUBADR                                                      
         L     R2,CHSUBLN                                                       
         L     R3,CHNEWNDX                                                      
         IF    (R2,NZ),BEGIN                                                    
         DEX   R2,' MVC @R3(0),@R1 '                                            
         LA    R3,1(R2,R3)                                                      
         ST    R3,CHNEWNDX                                                      
         END                                                                    
*                                                                               
         COMMENT                   CHECK FOR CHANGES OVERFLOW                   
         LA    R1,CHNEWBUF                                                      
         A     R1,=AL4(&LINESZ)                                                 
         L     R2,CHNEWNDX                                                      
         IF    (R2,GT,R1),BEGIN    RESET NDX IF TOO BIG                         
         ST    R1,CHNEWNDX                                                      
         END                                                                    
*                                                                               
         SET   CHFCHNGD            CHANGED                                      
         SET   CHFLCHNG            THIS LINE CHANGED                            
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*                                                                               
*  DO END ,,, ADD TRAILING TEXT AFTER LAST SUBSTITUTION                         
*                                                                               
*                                                                               
DOEND    PROC                                                                   
*                                                                               
         COMMENT                   IF FENCE COL, DO SPECIAL CODE                
         IF    (CHFENCE,NE,0),BEGIN                                             
         ACALL DOFENCE                                                          
         END                                                                    
*                                                                               
         COMMENT                   IF NO FENCE COL, STANDARD CODE               
         ELSE  BEGIN                                                            
         LA    R2,CHLINE                                                        
         A     R2,CHLINELN                                                      
         ST    R2,CHMVNDX2         R2 - END OF STRING                           
         ST    R2,CHNDX                                                         
         L     R1,CHMVNDX1         R1 - SOURCE                                  
         SR    R2,R1               R2 - LENGTH                                  
         L     R3,CHNEWNDX         R3 - DESTINATION                             
         IF    (R2,POS),BEGIN                                                   
         DEX   R2,' MVC @R3(0),@R1 '                                            
         LA    R3,1(R2,R3)                                                      
         ST    R3,CHNEWNDX                                                      
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  DO FENCE PROCESSING                                                          
*                                                                               
*  ADD TRAILING TEXT AFTER LAST SUBSTITUTUTION                                  
*  TAKING INTO CONSIDERATION THE FENCE COLUMN AND ITS RAMIFICATIONS             
*                                                                               
*  NOTE:                                                                        
*  IN THIS ROUTINE WE USE THE COMPUTATIONAL FENCE COLUMN VALUE                  
*  (= FENCE COL-1) FOR ALL TESTS AND CALCULATIONS.  THE                         
*  COMPUTATIONAL VALUE MARKS THE LENGTH (AND CALCULATES THE END)                
*  OF THE FIRST PART OF THE LINE BEFORE THE FENCE.                              
*  WHATEVER WORKS. AND IT DOES.                                                 
*                                                                               
*                                                                               
DOFENCE  PROC                                                                   
*                                                                               
*                                                                               
*  IF SMALL LINE                                                                
*                                                                               
*                                                                               
         COMMENT                   IF LINE LESS THAN FENCE,,                    
         COMMENT                   MOVE TRAILING TEXT                           
         IF    (CHLINELN,LE,CHCFENCE),BEGIN                                     
         LA    R2,CHLINE                                                        
         A     R2,CHLINELN                                                      
         ST    R2,CHMVNDX2                                                      
         ST    R2,CHNDX                                                         
         L     R1,CHMVNDX1         R1 - SOURCE                                  
         SR    R2,R1               R2 - LENGTH                                  
         L     R3,CHNEWNDX         R3 - DESTINATION                             
         IF    (R2,POS),BEGIN                                                   
         DEX   R2,' MVC @R3(0),@R1 '                                            
         LA    R3,1(R2,R3)                                                      
         ST    R3,CHNEWNDX                                                      
         END                                                                    
         COMMENT ,                 TRIM TRAILING BLANKS                         
         LA    R1,CHNEWBUF                                                      
         L     R0,CHNEWNDX                                                      
         SR    R0,R1                                                            
         VCALL RTRIM                                                            
         LR    R4,R0                                                            
         LA    R1,CHNEWBUF                                                      
         AR    R0,R1                                                            
         ST    R0,CHNEWNDX                                                      
         COMMENT                   MAY NEED TO TRUCATE TO FENCE COL             
         IF    (R4,GT,CHCFENCE),BEGIN                                           
         LA    R1,CHNEWBUF         TRUNCATE BY POINTER SUBTRACTION              
         A     R1,CHCFENCE                                                      
         ST    R1,CHNEWNDX                                                      
         TSEG  'Characters lost in line '                                       
         L     R0,CHLNO                                                         
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),WR                                                     
         IF    P,' SET CHFCQUIT'   IF ATTN , QUIT                               
         END                                                                    
         END   , OF SMALL LINE                                                  
*                                                                               
*                                                                               
*  LINE LARGER THAN FENCE COLUMN                                                
*                                                                               
*                                                                               
         ELSE  BEGIN                                                            
         COMMENT                   MOVE TRAILING TEXT                           
         LA    R2,CHLINE                                                        
         A     R2,CHCFENCE                                                      
         ST    R2,CHMVNDX2         R2 - END OF LINE (W/FENCE)                   
         ST    R2,CHNDX                                                         
         L     R1,CHMVNDX1         R1 - SOURCE                                  
         SR    R2,R1               R2 - LENGTH                                  
         L     R3,CHNEWNDX         R3 - DESTINATION                             
         IF    (R2,POS),BEGIN                                                   
         DEX   R2,' MVC @R3(0),@R1 '                                            
         LA    R3,1(R2,R3)                                                      
         ST    R3,CHNEWNDX                                                      
         END                                                                    
*                                                                               
         COMMENT ,                 TRIM TRAILING BLANKS                         
         LA    R1,CHNEWBUF                                                      
         L     R0,CHNEWNDX                                                      
         SR    R0,R1                                                            
         VCALL RTRIM                                                            
         LR    R4,R0                                                            
         LA    R1,CHNEWBUF                                                      
         AR    R0,R1                                                            
         ST    R0,CHNEWNDX                                                      
*                                                                               
         COMMENT                   PAD/TRUNCATE TO FENCE COL                    
         IF    (R4,GT,CHCFENCE),BEGIN   TRUNCATE                                
         TSEG  'Characters lost in line '                                       
         L     R0,CHLNO                                                         
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),WR                                                     
         IF    P,' SET CHFCQUIT'   IF ATTN , QUIT                               
         END                                                                    
         ELSEIF (R4,LT,CHCFENCE),BEGIN  PAD W/BLANKS                            
         LA    R3,CHNEWBUF                                                      
         A     R3,CHCFENCE                                                      
         L     R2,CHNEWNDX                                                      
         SR    R3,R2                                                            
         L     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
         END                                                                    
*                                                                               
         COMMENT                   MOVE TEXT TRAILING FENCE                     
         LA    R2,CHLINE                                                        
         A     R2,CHLINELN                                                      
         ST    R2,CHMVNDX2         R2 - END OF LINE (W/FENCE)                   
         ST    R2,CHNDX                                                         
         LA    R1,CHLINE           R1 - SOURCE                                  
         A     R1,CHCFENCE                                                      
         SR    R2,R1               R2 - LENGTH                                  
         LA    R3,CHNEWBUF         R3 - DESTINATION                             
         A     R3,CHCFENCE         FORCE DESTINATION TO FENCE COL               
         ST    R3,CHNEWNDX                                                      
         IF    (R2,POS),BEGIN                                                   
         DEX   R2,' MVC @R3(0),@R1 '                                            
         LA    R3,1(R2,R3)                                                      
         ST    R3,CHNEWNDX                                                      
         END                                                                    
         END   , END OF LONG LINE                                               
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*                                                                               
*  DO FINAL PROCESSING OF CHANGED LINE,,,                                       
*   AND WRITE CHANGED LINE.                                                     
*                                                                               
*  THE MAIN JOB OF THIS ROUTINE IS TO WRITE OUT THE                             
*  CHANGED LINE TO THE ACTIVE FILE.                                             
*                                                                               
*  THIS CODE COPIED FROM OLD VERSION OF CHANGE COMMAND.                         
*  THERE ARE MANY ODDS AND ENDS ADDED TO MAKE THE USER                          
*  INTERFACE NICE. (AND THE CODE A BIT COMPLICATED.)                            
*  IN ADDITION TO WRITING THE LINE OUT, WE HANDLE LINE                          
*  LISTING, LINE LENGTH CHECKS, MODIFY AND EDIT OPTIONS,                        
*  PAGE MODE INTERFACE, VERIFY, ETC... SO THIS IS MORE OR                       
*  LESS THE WAY THE OLD CODE LOOKED !   (excuses,excuses)                       
*                                                                               
*                                                                               
ENDPROC  PROC                                                                   
*                                                                               
         LA    R1,CHNEWBUF         R1,R0 - NEW LINE LOC, LEN                    
         L     R0,CHNEWNDX                                                      
         SR    R0,R1                                                            
         LR    R3,R0                                                            
         L     R15,CHLNO                                                        
         ST    R15,CPLCNO          insurance, (using may change)                
         VCALL LENCHK              Check length (and update count)              
*                                                                               
*  COMMENT, PROCESS EDIT/MODIFY REQUESTS                                        
*                                                                               
         IF    CPFMODXP,BEGIN      Change.... modify/edit                       
         XPUSH R0,R1                                                            
         VCALL LMSGCHK             Do any length warnings now                   
         XPOP  R0,R1                                                            
         CLEAR CHFCQUIT                                                         
         VCALL LINEMOD             Do modify/edit of this line                  
         BM    CVNEXT              Stop command                                 
         BP    CVERROR             Abort command                                
         INCR  R15,CPACHCT         Kick change count                            
         MVC   CPNWLN,CPLCNO                                                    
         B     SKIPPUT             edit/mod did write   (?)                     
         END                                                                    
         LR    R3,R0               Save count                                   
*                                                                               
*  COMMENT, FOLLOWING ODD LOGIC HANDLES LIST, AND VERIFY                        
*  OPTIONS, AND VARIOUS EXCEPTIONS TO THEM...                                   
*                                                                               
         IF    CPFVER,LISTCHNG     Change verify, must do list                  
         IF    CPLFLG5.CPFNLST,DONLIST  Don't list the line                     
         IF    CPVFPAGE,DONLIST    Page mode, scram                             
LISTCHNG VCALL LISTLINE            Make desired listing                         
         COMMENT                   IF VERIFY, DO VERIFY                         
         IF    CPFVER,BEGIN        IF verify, do verify                         
         STM   R0,R1,CPWK8         Save line ptrs                               
         VCALL LMSGCHK             Do any line warnings now                     
         SETMSG 'Change'                                                        
         ACALL YESMOD              Allow ok or mod                              
         BM    ENDPDONE            don't change                                 
         BP    SKIPPUT             Already changed (mod/edit)                   
         INCR  R15,CPACHCT         Kick change count                            
         B     DONLIST             Do change                                    
         END   ,                   END VERIFY                                   
         TWRITE ,                  Put it out                                   
         BNP   DONLIST             Continue (no attn)                           
         SET   CHFCQUIT            Set to terminate change                      
DONLIST  L     R15,CHLNO           Line no. to R15                              
         ST    R15,CPACLNO         Save current line pointer                    
*                                                                               
*  COMMENT WRITE LINE                                                           
*                                                                               
         COMMENT                   WRITE CHANGED LINE TO ACTIVE                 
         LA    R1,CHNEWBUF         R1,R0 - NEW LINE LOC, LEN                    
         L     R0,CHNEWNDX                                                      
         SR    R0,R1                                                            
         L     R15,CHLNO           Line no. to R15                              
         VCALL PUTLINE                                                          
*                                                                               
*                                                                               
         COMMENT                   CHANGE COUNT STUFF                           
SKIPPUT  IF    ^CHFCHCT,BEGIN      have we bumped change count                  
         SET   CHFCHCT             now we have (see below)                      
         IF    (CPFVER,OR,CPFMODXP),EXIT                                        
         IF    CPFTYPED,'INCR R0,CPACHCT'  Kick change count                    
         END                                                                    
         IF    CHFCQUIT,CVABORT    stop                                         
*                                                                               
*                                                                               
         COMMENT                   DO PAGE MODE STUFF                           
         IF    CPVFPAGE,BEGIN      Page mode...                                 
         IF    CPLFLG5.CPFNLST,EXIT  Nolist, scram                              
         L     R2,CPACLNO                                                       
CHNXP    LR    R15,R2              Line-number just changed                     
         VCALL PAGELINE            Add line to current page                     
         IF    NZ,BEGIN                                                         
         MVC   CPVMSG(L'CHMSG),CHMSG  Press CONTINUE                            
         VCALL PAGEMOD             Display the current page                     
         IF    NZ,'VCALL RNGABORT; B CVABORT'                                   
         B     CHNXP                                                            
         END                                                                    
         END                                                                    
*                                                                               
ENDPDONE LABEL ,                                                                
         PEND                                                                   
*                                                                               
CHMSG    DC    C'Press CONTINUE [ESC RETURN] to continue CHANGE.'               
         QLTORG                                                                 
         TITLE 'DELETE Command'                                                 
*box                                                                            
*                                                                               
*                                                                               
*  DELETE  -- DELETE command.                                                   
*                                                                               
*                                                                               
*                                                                               
DELETE   XPROC ,                                                                
         IF    ^CPFTYPED,'SET CPLFLG5.CPFNLST'                                  
         IF    CPGFNLST,BEGIN      Nolist is the default...                     
         IF    (CPFTYPED,AND,CPVFPAGE),EXIT                                     
         SET   CPLFLG5.CPFNLST     Nolist                                       
         END                                                                    
         VCALL NDETRNG             Define range                                 
         SCAN  DELPRT              Delete options                               
         SCANCHK                                                                
         IF    (CPLFLG5.CPFFOPT,OR,CPFVER),'CLEAR CPLFLG5.CPFNLST'              
         ACALL DELSUB              Delete the range                             
         B     CVNEXT                                                           
         PEND                                                                   
*                                                                               
*                                                                               
*                                                                               
DELPRT   SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DELSUB -- Routine to delete lines from the ACTIVE file.                      
*                                                                               
*    On entry:                                                                  
*      range for delete set up                                                  
*                                                                               
DELSUB   XPROC                                                                  
*-                                                                              
*-       Delete lines in range.                                                 
*-                                                                              
         MVC   CPWK1,=F'-1'        First line in range to delete                
         MVC   CPWK2,=F'-1'        Last line in range                           
         MVC   CPWK3,=F'-1'        Working next line to delete                  
*                                                                               
         COMMENT                   CALL CO-ROUTINE TO DO DELETE                 
         RDRNG DELRTN,(DESRTRN+LOCATRTN+UNPRST+DESABORT)                        
         LR    R2,R15              Save return code                             
*                                                                               
         IF    (CPWK1,NE,-1),BEGIN  Finish up last delete...                    
         L     R0,CPWK1            First lineno                                 
         L     R1,CPWK2            Last lineno                                  
         VCALL DELRANGE            Delete lines                                 
         END                                                                    
*                                                                               
         IF    (R2,NZ),CVABORT     Aborted by attn                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DELRTN -- Entered from the range processor to delete a line.                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - line text loc, len                                               
*                                                                               
DELRTN   PROC                                                                   
         L     R4,CPLCNO           Get line-number                              
*                                                                               
         IF    ^CPLFLG5.CPFNLST,BEGIN  List line...                             
         IF    CPVFPAGE,EXIT       Page mode, scram                             
         VCALL LISTLINE            Display the line                             
*                                                                               
         IF    CPFVER,BEGIN        Verify...                                    
         SETMSG 'Delete'                                                        
         VCALL YESRTN              Allow OK                                     
         IF    NZ,EXIT,DELRTN      Don't delete, scram                          
*                                                                               
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'CLEAR JCBFATTN'  Reset any ATTN                       
*                                                                               
         INCR  R15,CPACHCT         Kick ACTIVE file change count                
         END                                                                    
         END                                                                    
*-                                                                              
*-      Collect line-numbers for delete so that we can delete ranges            
*-       of contiguous lines whereever possible (instead of deleting            
*-         one line at a time).                                                 
*-                                                                              
         IF    (CPWK1,EQ,-1),BEGIN  First line to delete...                     
         ST    R4,CPWK1            Save first lineno...                         
         ST    R4,CPWK2            ...and last lineno                           
         MVC   CPWK3,=F'-1'        (Neatness)                                   
         END                                                                    
*                                                                               
         ELSE  BEGIN               More lines to delete...                      
         IF    (R4,EQ,CPWK3),'ST R4,CPWK2'  Extend explicit range               
*                                                                               
         ELSE  BEGIN               Start new explicit range...                  
         L     R0,CPWK1            First lineno                                 
         L     R1,CPWK2            Last lineno                                  
         VCALL DELRANGE            Delete line range                            
*                                                                               
         ST    R4,CPWK1            Start new range                              
         ST    R4,CPWK2            Ditto                                        
         MVC   CPWK3,=F'-1'        (Neatness)                                   
         END                                                                    
         END                                                                    
*                                                                               
         IF    (^CPFFIRST,AND,^CPFVER),BEGIN                                    
         SET   CPFFIRST            Set first line processed                     
         IF    CPFTYPED,'INCR R15,CPACHCT'                                      
         END                                                                    
*-                                                                              
*-       Get next existing line-number for the next time we enter               
*-         this routine so that we can determine if a contiguous                
*-         range of lines is being deleted.                                     
*-                                                                              
         L     R15,CPWK2           Last line in range                           
         A     R15,CVONE           Next line-number                             
         VCALL GETLNO                                                           
         IF    NEG,'L R15,=F"-1"'  No next lineno                               
*                                                                               
         ELSE  BEGIN               We have a next lineno...                     
         L     R15,CPLCNO                                                       
         ST    R15,CPNWLN          Save it for range processor                  
         SET   CPLFLG4.CPFDESET    Flag that lineno is set                      
         END                                                                    
*                                                                               
         ST    R15,CPWK3           Save next existing lineno                    
*-                                                                              
*-       This little gimmick forces the "Range aborted before..."               
*-         message to occur if the user presses BREAK on a write.               
*-                                                                              
         IF    CPFIATTN,BEGIN      Write attn...                                
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'SET JCBFATTN'  Attn!                                  
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         TITLE 'SPLIT Command'                                                  
SPLITWA  RECORD BEGIN                                                           
SPLFLAG  FLAG                                                                   
         FLAG  SPLFJOIN            - JOIN to the next line                      
         FLAG  SPLFWORD            - Split at a word                            
*                                                                               
         FLAG                                                                   
*                                                                               
SPLCOL   DS    H                   Split line(s) at this column                 
SPLWCOL  DS    H                   Working split column                         
SPLBLCNT DS    H                   Working trimmed blank count                  
SPLLEN2  DS    H                   Length of second line                        
*                                                                               
SPLLNO1  DS    F                   First lineno                                 
SPLLNO2  DS    F                   Second lineno                                
*                                                                               
SPLLINE1 DS    CL(&LINESZ)         First line                                   
         DS    CL(&PRESSZ-&LINESZ)                                              
*                                                                               
SPLLINE2 DS    CL(&LINESZ)         Second line                                  
         DS    CL(&PRESSZ-&LINESZ)                                              
*                                                                               
SPLLINE3 DS    CL(&LINESZ)         Third line                                   
         DS    CL(&PRESSZ-&LINESZ)                                              
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  SPLIT -- SPLIT Command.                                                      
*                                                                               
*                                                                               
*                                                                               
SPLIT    XPROC SPLITWA                                                          
         LA    R6,SPLITWA                                                       
         USING SPLITWA,R6                                                       
         CLEAR SPLITWA                                                          
         ST    R6,CPCWA                                                         
*                                                                               
         IF    CPVFPAGE,BEGIN      Page mode...                                 
         SCPUSH ,                                                               
         SCAN                                                                   
         SCANCHK                                                                
         SCPOP  ,                                                               
         IF    (R0,Z),BEGIN        If nothing ,,                                
         SCINIT '* COLUMN 0'                                                    
         END                                                                    
         END                                                                    
*                                                                               
         VCALL NDETRNG                                                          
         IF    (CPGFNLST,OR,^CPFTYPED),'SET CPLFLG5.CPFNLST'                    
*                                                                               
         SCAN  SPLITPRT                                                         
         SCANCHK                                                                
         IF    (CPLFLG5.CPFFOPT,OR,CPFVER),'CLEAR CPLFLG5.CPFNLST'              
*                                                                               
         RDRNG SPLITRTN,(DESNRTN+LOCATRTN+UNPRST+DESABORT)                      
         BOMB  ,                   (no return)                                  
*                                                                               
         PEND                                                                   
         EJECT                                                                  
SPLITPRT SCKW  COLUMN,SCOL,(A,P,I),&LINESZ                                      
         SCKW  JOIN,SJOIN,A                                                     
         SCKW  WORD,SWORD,A                                                     
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
SCOL     PROC                                                                   
         IF    (R0,Z),BEGIN                                                     
         IF    CPVFPAGE,'LH R0,CPVCOL'                                          
         END                                                                    
         IF    (R0,Z),'LA R0,1'                                                 
         STH   R0,SPLCOL                                                        
         PEND                                                                   
*                                                                               
SJOIN    PROC                                                                   
         SET   SPLFJOIN                                                         
         PEND                                                                   
*                                                                               
SWORD    PROC                                                                   
         SET   SPLFWORD                                                         
         PEND                                                                   
*                                                                               
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SPLITRTN -- Entered from the range processor with line loc in                
*    R1 and line len in R0.                                                     
*                                                                               
SPLITRTN PROC                                                                   
         L     R6,CPCWA                                                         
         USING SPLITWA,R6                                                       
*                                                                               
         LH    R4,SPLCOL           Split column                                 
*-                                                                              
*-       Split at a blank if WORD was specified.                                
*-                                                                              
         IF    SPLFWORD,BEGIN      Split at a word...                           
         LA    R5,@R1(R4)                                                       
         DECR  R5                  Current text ptr                             
*-                                                                              
*-       Search past the column for a blank.                                    
*-                                                                              
         WHILE (R4,LE,R0),BEGIN                                                 
         IF    (@R5,EQ,' '),SPLCOM  Found a blank, scram                        
         LA    R5,@R5+1                                                         
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Search before the column for a blank.                                  
*-                                                                              
         LH    R4,SPLCOL                                                        
         LA    R5,@R1(R4)                                                       
         DECR  R5                                                               
*                                                                               
         WHILE (R4,POS),BEGIN                                                   
         IF    (@R5,EQ,' '),SPLCOM  Found a blank, scram                        
         DECR  R5                                                               
         DECR  R4                                                               
         END                                                                    
         LA    R4,999              No blanks, just add a new line               
         END                                                                    
*                                                                               
*                                                                               
SPLCOM   IF    (R4,GT,R0),'LA R4,1; AR R4,R0'  Keep entire line                 
*                                                                               
         STH   R4,SPLWCOL          Save working split column                    
         MVC   SPLLNO1,CPLCNO                                                   
         MVC   SPLLINE1,CVBLANKS                                                
         DECR  R4                  Rel to zero, not one                         
         LR    R15,R4                                                           
         MOVE  R15,SPLLINE1,@R1    Save first line                              
*                                                                               
         MVC   SPLLINE2,CVBLANKS                                                
         LR    R3,R0                                                            
         SR    R3,R4                                                            
         LA    R1,@R1(R4)                                                       
         LR    R15,R3                                                           
         MOVE  R15,SPLLINE2,@R1    Save second line                             
*                                                                               
         CLEAR R2                                                               
         WHILE (R3,POS),BEGIN      Trim leading blanks...                       
         IF    (SPLLINE2,NE,' '),EXIT                                           
         LA    R2,@R2+1                                                         
         LR    R15,R3                                                           
         DEX   R15,'MVC SPLLINE2(0),SPLLINE2+1'  Move over                      
         DECR  R3                                                               
         END                                                                    
         STH   R2,SPLBLCNT         Save trimmed blank count                     
*                                                                               
         STH   R3,SPLLEN2          Save second line length                      
*-                                                                              
*-       Join the text onto the next line if possible.                          
*-                                                                              
         IF    SPLFJOIN,BEGIN      Join...                                      
         LA    R15,1                                                            
         A     R15,SPLLNO1         First line-number                            
         LA    R1,SPLLINE3                                                      
         VCALL GETLINE             Get next line                                
         IF    NEG,EXIT                                                         
*                                                                               
         IF    ((R0,Z),OR,(@R1,EQ,' ')),EXIT  Can't join                        
*                                                                               
         LTH   R3,CPLLEN           Line length                                  
         IF    Z,'LH R3,CPLENGTH'                                               
*                                                                               
         LH    R2,SPLLEN2          Our second line's length                     
         LR    R15,R0                                                           
         LA    R15,@R15+1(R2)                                                   
         IF    (R15,GT,R3),EXIT    Too long, can't join                         
*                                                                               
         MVC   SPLLNO2,CPLCNO      Set second line-number                       
         LA    R2,SPLLINE2+1(R2)                                                
         MOVE  R15,@R2,@R1         Append original second line                  
         B     SPLLIST                                                          
         END                                                                    
*-                                                                              
*-       Calculate a line-number for the new line.                              
*-                                                                              
         L     R15,SPLLNO1         First lineno                                 
         INCR  R15                                                              
         VCALL GETLNO              Find next existing lineno                    
         L     R15,CPLCNO                                                       
         DECR  R15                                                              
         S     R15,SPLLNO1         Amount of space between lines                
         IF    ^POS,BEGIN                                                       
         TSEG  'Can''t split line '                                             
         L     R0,SPLLNO1                                                       
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         TSEG  ', no line-numbers available.',,CR                               
         B     SPLEXIT                                                          
         END                                                                    
*                                                                               
         SRL   R15,1                                                            
         LR    R1,R15                                                           
         VCALL SELDELTA            Choose a good delta                          
         A     R1,SPLLNO1                                                       
         ST    R1,SPLLNO2          Save second lineno                           
*-                                                                              
*-       List the lines.                                                        
*-                                                                              
SPLLIST  MVC   CPLCNO,SPLLNO1                                                   
         MVC   CPSTLNO,SPLLNO1                                                  
         SETMSG SPLLINE1                                                        
         VCALL LENCHK              Check for excessive length                   
         IF    ^CPLFLG5.CPFNLST,'VCALL LISTLINE'                                
*                                                                               
         MVC   CPLCNO,SPLLNO2                                                   
         MVC   CPSTLNO,SPLLNO2                                                  
         SETMSG SPLLINE2           Second line                                  
         VCALL LENCHK              Check for excessive length                   
         STM   R0,R1,CPWK8         Save line loc, len                           
         IF    ^CPLFLG5.CPFNLST,'VCALL LISTLINE'                                
*-                                                                              
*-       Prompt for verification.                                               
*-                                                                              
         IF    CPFVER,BEGIN        Verify...                                    
         SETMSG 'Split'                                                         
         ACALL YESMOD              Ask if ok                                    
         BP    SPLEXIT                                                          
         BM    CVNEXT                                                           
         END                                                                    
*-                                                                              
*-       Add the lines to the ACTIVE file.                                      
*-                                                                              
         L     R15,SPLLNO2                                                      
         SETMSG SPLLINE2                                                        
         VCALL PUTLINE             Add second line first                        
         INCR  R0,CPACHCT          Count the change                             
*                                                                               
         L     R15,SPLLNO1                                                      
         SETMSG SPLLINE1                                                        
         VCALL PUTLINE             Now replace the first line                   
         INCR  R0,CPACHCT          Count the change                             
*-                                                                              
*-       Adjust page cursor if neccessary.                                      
*-                                                                              
         IF    (CPVLNO,EQ,SPLLNO1),BEGIN  Cursor needs to move...               
         LH    R15,CPVCOL          Move cursor to the next column               
         SH    R15,SPLWCOL         Calc new column                              
         IF    NEG,EXIT            Still on the old line                        
*                                                                               
         MVC   CPVLNO,SPLLNO2      Set new lineno                               
         SH    R15,SPLBLCNT        Adjust for trimmed blanks                    
         IF    (SPLLINE2+4,EQ,X'00'),'CLEAR R15'  Force column                  
         IF    (R15,NP),'CLEAR R15'  Just in case                               
         LA    R15,@R15+1          Column is relative to one                    
         STH   R15,CPVCOL          Set new column                               
         END                                                                    
*                                                                               
SPLEXIT  PEND                                                                   
         DROP  R6                                                               
         TITLE 'JOIN Command'                                                   
JOINWA   RECORD BEGIN                                                           
JOINFLAG FLAG                                                                   
         FLAG  JOINFDEL            - Delete joined lines                        
         FLAG  JOINNOTR            - Don't trim leading blanks                  
*                                                                               
JOINSLEN DS    X                   Length of separator                          
JOINSEP  DS    CL(&LINESZ)         Separator chars                              
*                                                                               
JOINLEN  DS    X                   Length of line                               
JOINLINE DS    CL(&PRESSZ)         New line area                                
*                                                                               
JOINNLIN DS    H                   No. of lineno's                              
JOINLIN# EQU   50                  Max no. of lines                             
JOINLINS DS    (JOINLIN#)F         Line no. area                                
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  JOIN -- JOIN command.                                                        
*                                                                               
*                                                                               
*                                                                               
JOIN     XPROC JOINWA                                                           
         LA    R6,JOINWA                                                        
         USING JOINWA,R6                                                        
         ST    R6,CPCWA                                                         
         CLEAR JOINWA                                                           
         SET   JOINFDEL            Default is delete                            
         MVI   JOINSLEN,1                                                       
         MVI   JOINSEP,C' '        default is sep=' '                           
*                                                                               
         VCALL NDETRNG                                                          
         IF    (CPGFNLST,OR,^CPFTYPED),'SET CPLFLG5.CPFNLST'                    
*                                                                               
*                                                                               
         SCAN  JOINPRT                                                          
         SCANCHK                                                                
         IF    (CPLFLG5.CPFFOPT,OR,CPFVER),'CLEAR CPLFLG5.CPFNLST'              
         RDRNG JOINRTN,(DESRTRN+LOCATRTN+UNPRST+DESABORT)                       
         IF    NZ,'TCLEAR; B CVNOACTN'                                          
         IF    (JOINNLIN,Z),CVNEXT  No lines found, scram                       
         IF    (JOINNLIN,EQ,1),BEGIN                                            
         ERROR 'Must have at least two lines to join.'                          
         END                                                                    
*                                                                               
         L     R15,JOINLINS                                                     
         ST    R15,CPLCNO          For listline routine                         
         ST    R15,CPACLNO         Set current line ptr                         
         LA    R1,JOINLINE                                                      
         LC    R0,JOINLEN                                                       
         VCALL LENCHK              Check for excessive length                   
         STM   R0,R1,CPWK8         Save line loc, len                           
         IF    ^CPLFLG5.CPFNLST,'VCALL LISTLINE; TWRITE'                        
         IF    CPFVER,BEGIN                                                     
         SETMSG 'Join'                                                          
         ACALL YESMOD                                                           
         BP JOIND                                                               
         BM CVNEXT                                                              
         END   ,                                                                
         L     R15,CPLCNO          Lineno                                       
         LM    R0,R1,CPWK8         Line ptrs                                    
         VCALL PRESS                                                            
         VCALL STOW                                                             
         IF    CPFTYPED,'INCR R0,CPACHCT'                                       
*                                                                               
JOIND    IF    JOINFDEL,BEGIN      Delete joined lines...                       
         LA    R5,JOINLINS+4       Second/last linenos                          
         LH    R4,JOINNLIN                                                      
         DECR  R4                                                               
*                                                                               
JOINDLP  L     R0,@R5              Line-number to delete                        
         LR    R1,R0                                                            
         IF    (R15,NE,JOINLINS),'VCALL DELRANGE'  Delete line                  
         LA    R5,@R5+4            Next line                                    
         BCT   R4,JOINDLP                                                       
         END                                                                    
         B     CVNEXT                                                           
*                                                                               
         PEND                                                                   
         EJECT                                                                  
JOINPRT  SCKW  SEPARATOR,JSEP,(A,P)                                             
         SCKW  NOSEPARATOR,JNOSEP,A                                             
         SCKW  DELETE,JDEL,A                                                    
         SCKW  NODELETE,JNODEL,A                                                
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(LENPSH),PUSH                                                  
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  TRIM,JTRIM,A                                                     
         SCKW  NOTRIM,JNOTRIM,A                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
JSEP     PROC                                                                   
         SCDQUOTE JOINSEP                                                       
         STC   R0,JOINSLEN                                                      
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
JNOSEP   PROC                                                                   
         CLEAR JOINSLEN                                                         
         PEND                                                                   
*                                                                               
JDEL     PROC                                                                   
         SET   JOINFDEL                                                         
         PEND                                                                   
*                                                                               
JNODEL   PROC                                                                   
         CLEAR JOINFDEL                                                         
         PEND                                                                   
*                                                                               
JTRIM    PROC  ,                                                                
         CLEAR JOINNOTR            Trim leading blanks                          
         PEND                                                                   
*                                                                               
JNOTRIM  PROC                                                                   
         SET   JOINNOTR            Leave leading blanks                         
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  JOINRTN -- Entered from the range processor with line loc in R1              
*    and line len in R0.                                                        
*                                                                               
JOINRTN  PROC                                                                   
         L     R6,CPCWA            JOINWA ptr                                   
         USING JOINWA,R6                                                        
         LH    R2,JOINNLIN         No. of lines so far                          
         LA    R15,@R2+1           Plus this one                                
         IF    (R15,GT,JOINLIN#),BEGIN                                          
         TSEG  'JOIN not done, too many lines -- at line',,B                    
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         B     CVERRMSG                                                         
         END                                                                    
         STH   R15,JOINNLIN        Update count                                 
         SLL   R2,2                Times 4 for word offset                      
         LA    R2,JOINLINS(R2)                                                  
         MVC   @R2(4),CPLCNO       Save this lineno                             
*                                                                               
         LC    R15,JOINLEN         Accumulated line len                         
         LC    R2,JOINSLEN         Separator len                                
         IF    (JOINNLIN,EQ,1),'CLEAR R2'  First line has no sep                
         ELSEIF ^JOINNOTR,'VCALL LRTRIM'                                        
         LA    R5,@R2(R15)         Length not including the new line            
*                                                                               
         LR    R3,R5                                                            
         AR    R3,R0               Plus this line len                           
         IF    (R3,GT,&LINESZ),BEGIN                                            
         TSEG  'Join not done, '                                                
         TSEG  'Joined line would be too long -- at line',,B                    
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         B     CVERRMSG                                                         
         END                                                                    
         STC   R3,JOINLEN          Save new length                              
*                                                                               
         LA    R15,JOINLINE(R15)   Start of separator                           
         MOVE  R2,@R15,JOINSEP     Move in separator                            
*                                                                               
         LR    R2,R0                                                            
         LA    R15,JOINLINE(R5)    New line starts here                         
         MOVE  R2,@R15,@R1         Move in the new line                         
*-                                                                              
*-       Alter page cursor if neccessary.                                       
*-                                                                              
         IF    (CPLCNO,EQ,CPVLNO),BEGIN  Cursor needs to move...                
         MVC   CPVLNO,JOINLINS     Set new cursor lineno                        
         LH    R15,CPVCOL                                                       
         AR    R15,R5                                                           
         STH   R15,CPVCOL          New column location                          
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R6                                                               
*                                                                               
         QLTORG                                                                 
         TITLE 'EXCHANGE Command'                                               
EXCHWA   RECORD BEGIN                                                           
EXCHLIN1 DS    CL(&PRESSZ)         Line #1 (pressed)                            
EXCHLIN2 DS    CL(&PRESSZ)         Line #2 (pressed)                            
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  EXCHANGE -- EXCHANGE command.                                                
*                                                                               
EXCHANGE XPROC EXCHWA                                                           
         LA    R6,EXCHWA                                                        
         USING EXCHWA,R6                                                        
         CLEAR EXCHWA                                                           
*                                                                               
         IF    (CPGFNLST,OR,^CPFTYPED),'SET CPLFLG5.CPFNLST'                    
         VCALL ACTCHK              Make sure there is an Active                 
*                                                                               
         COMMENT                   SCAN LINE #1                                 
         SCAN  EXLN1PRT                                                         
         SCANCHK                                                                
         COMMENT                   SCAN LINE #2                                 
         SCAN  EXLN2PRT                                                         
         SCANCHK                                                                
         COMMENT                   SCAN OTHER OPTIONS                           
         SCAN  EXCHPRT                                                          
         IF    (CPLFLG5.CPFFOPT,OR,CPFVER),'CLEAR CPLFLG5.CPFNLST'              
         MVC   CPACLNO,=F'-1000'   Current line not set                         
*                                                                               
         FLIP  (EXCHLIN1,EXCHLIN2,4)  Exchange lineno's                         
*                                                                               
         IF    ^CPLFLG5.CPFNLST,BEGIN                                           
         XPUSH ,,&LINESZ,PTR=R2                                                 
         LA    R15,EXCHLIN2        Second line (with first lineno)              
         MVC   CPLCNO,EXCHLIN2     Set lineno for listline                      
         LR    R1,R2               Unpress area                                 
         VCALL UNPRESS                                                          
         VCALL LISTLINE                                                         
         TWRITE                                                                 
         LA    R15,EXCHLIN1        First line (with second lineno)              
         MVC   CPLCNO,EXCHLIN1     Set lineno for listline                      
         LR    R1,R2               Unpress area                                 
         VCALL UNPRESS                                                          
         VCALL LISTLINE                                                         
         TWRITE                                                                 
         XPOP  ,,&LINESZ                                                        
         END                                                                    
         IF    CPFVER,'SETMSG "Exchange"; VCALL YESRTN; BNZ CVNEXT'             
         LC    R0,EXCHLIN1+4                                                    
         LA    R1,EXCHLIN1                                                      
         VCALL STOW                                                             
         LC    R0,EXCHLIN2+4                                                    
         LA    R1,EXCHLIN2                                                      
         VCALL STOW                                                             
         MVC   CPACLNO,EXCHLIN2    Set current lineno                           
         IF    CPFTYPED,'INCR R0,CPACHCT'                                       
         B     CVNEXT                                                           
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  EXCHANGE SCKWS AND SCKW ROUTINES                                             
*                                                                               
EXLN1PRT SCKW  ,EXL1NULL,NULL                                                   
         SCKW  ,EXL1,SYMLN                                                      
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
EXLN2PRT SCKW  ,EXL2NULL,NULL                                                   
         SCKW  ,EXL2,SYMLN                                                      
         SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
EXCHPRT  SCKW  ,V(LTNPSH),PUSH                                                  
         SCKW  ,V(VERPSH),PUSH                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
EXL1NULL PROC                                                                   
         ERROR 'Missing line-number pair for EXCHANGE command.'                 
         PEND                                                                   
*                                                                               
EXL2NULL PROC                                                                   
         ERROR 'Missing second line-number for EXCHANGE command.'               
         PEND                                                                   
*                                                                               
EXL1     PROC                                                                   
         ST    R0,EXCHLIN1                                                      
         ST    R0,CPLCNO                                                        
         LR    R2,R0               (for "exvoid")                               
         LA    R1,CPLCNO                                                        
         VCALL LOCATE              Find line                                    
         IF    ^CPDRPT.CPFMTCH,'ACALL EXVOID'                                   
         MVC   EXCHLIN1,@R15       MOVE LINE NO, LINE TEXT                      
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
EXL2     PROC                                                                   
         IF    ('C R0,EXCHLIN1',EQ),BEGIN                                       
         ERROR 'Exchange line-numbers can''t be the same.'                      
         END                                                                    
         ST    R0,EXCHLIN2                                                      
         ST    R0,CPLCNO                                                        
         LR    R2,R0                                                            
         LA    R1,CPLCNO                                                        
         VCALL LOCATE              Find line                                    
         IF    ^CPDRPT.CPFMTCH,'ACALL EXVOID'                                   
         MVC   EXCHLIN2,@R15       MOVE LINE NO, LINE TEXT                      
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
EXVOID   PROC                                                                   
         TSEG  'Line '                                                          
         LR    R0,R2                                                            
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         ERROR ' not in file.'                                                  
         PEND                                                                   
         DROP  R6                                                               
*                                                                               
         QLTORG                                                                 
         TITLE 'Miscelanous Routines'                                           
*box                                                                            
*                                                                               
*  LINERD -- Routine to prompt for text line input.                             
*                                                                               
*    On entry:                                                                  
*      R0 - line-number of line to be entered                                   
*                                                                               
*    On exit:                                                                   
*      R1,R0 - read text loc, len                                               
*      R15 (and cc):                                                            
*       -4 - Input ended with RETRY (@break)                                    
*        0 - Input ended normally (return)                                      
*        4 - break/logging off                                                  
*                                                                               
LINERD   PROC                                                                   
         IF    (CPLFLG5.CPFNONUM,ONES),BEGIN  Nonumber...                       
         SETMSG CVBLANKS,11                                                     
         END                                                                    
*                                                                               
         ELSEIF CPLFLG5.CPFUNUM,BEGIN  unnumbered...                            
         CLEAR R1,R0               No prompt                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Regular...                                   
         VCALL CVEXNO              Convert line-number                          
         TSEG  CPDOUB,9                                                         
         SETMSG '> '                                                            
         IF    CPFUPPER,'SETMSG "? "'                                           
         END                                                                    
*                                                                               
         TREAD (R1),(R0)           Get input                                    
         IF    NZ,BEGIN            Special ending status...                     
         IF    (R15,EQ,3),'LH R15,=H"-4"'  @break                               
         ELSE  'LA R15,4'          Regular break                                
         END                                                                    
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  YESMOD -- Routine to get permission to update a line.  The                   
*    routine also accepts an answer of "MODIFY" or "EDIT" and                   
*    calls the line modification routine to modify the line.                    
*                                                                               
*    On entry:                                                                  
*     R1,R0 - prompt loc, len                                                   
*     CPWK8,CPWK9 - unpressed line len, loc                                     
*     CPLCNO - lineno                                                           
*                                                                               
*    On exit, R15 (and CC):                                                     
*        -4 - don't update (user said "no")                                     
*         0 - it's ok to update the line                                        
*         4 - already updated by LINEMOD (user said modify/edit)                
*                                                                               
YESMOD   PROC                                                                   
         SCPUSH ,                  SAVE SCANNER INFO                            
*                                                                               
         LR    R6,R1                                                            
         LR    R5,R0                                                            
*                                                                               
         TWRITE                                                                 
*                                                                               
YESMLOOP TSEG  (R6),(R5)                                                        
         TREAD ' (Yes/No/Modify/Edit)',,Q                                       
         BNZ   CVNOACTN            Abort cmd if just attn                       
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  YESMPRT                                                          
*                                                                               
         COMMENT                   IF ERROR ,,,                                 
         IF    (R15,NEG),BEGIN                                                  
         TSEG  'Answer Yes, No, Modify or Edit.',,CR                            
         B     YESMLOOP                                                         
         END                                                                    
*                                                                               
         COMMENT                   YES ,,,                                      
         IF    (R15,EQ,4),BEGIN                                                 
         CLEAR R15                                                              
         B     YESMEXIT                                                         
         END                                                                    
*                                                                               
         COMMENT                   NO ,,,,                                      
         IF    (R15,EQ,8),BEGIN                                                 
         LH    R15,=H'-4'          NO return code                               
         B     YESMEXIT                                                         
         END                                                                    
*                                                                               
         COMMENT                   MODIFY ,,,                                   
         IF    (R15,EQ,12),BEGIN                                                
         SET   CPFMODXP+CPFMODCD                                                
         LM    R0,R1,CPWK8         Get line ptrs                                
         ACALL LINEMOD             Do modify/edit                               
         BNZ   CVNEXT              Stop                                         
         INCR  R15,CPACHCT         Kick change count                            
         MVC   CPNWLN,CPLCNO       Update for range processor                   
         CLEAR CPFMODXP+CPFMODCD   Reset                                        
         LA    R15,4               Rc                                           
         B     YESMEXIT                                                         
         END                                                                    
*                                                                               
         COMMENT                   EDIT ,,,                                     
         IF    (R15,EQ,16),BEGIN                                                
         SET   CPFMODXP,(CPFMODCD,OFF)                                          
         LM    R0,R1,CPWK8         Get line ptrs                                
         ACALL LINEMOD             Do modify/edit                               
         BNZ   CVNEXT              Stop                                         
         INCR  R15,CPACHCT         Kick change count                            
         MVC   CPNWLN,CPLCNO       Update for range processor                   
         CLEAR CPFMODXP+CPFMODCD   Reset                                        
         LA    R15,4               Rc                                           
         B     YESMEXIT                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF UNRECOGNIZED                              
         IF    (R15,EQ,20),BEGIN                                                
         TSEG  'Answer Yes, No, Modify or Edit.',,CR                            
         B     YESMLOOP                                                         
         END                                                                    
*                                                                               
*                                                                               
YESMEXIT SCPOP ,                                                                
         PEND                                                                   
***                                                                             
***  YESMOD prompt options.                                                     
***                                                                             
YESMPRT  SCKW  ,YSMERR,NULL                                                     
         SCKW  YES,YSMYES                                                       
         SCKW  OK,YSMYES                                                        
         SCKW  Y,YSMYES                                                         
         SCKW  NO,YSMNO                                                         
         SCKW  N,YSMNO                                                          
         SCKW  MODIFY,YSMMOD,A                                                  
         SCKW  M,YSMMOD                                                         
         SCKW  EDIT,YSMEDIT,A                                                   
         SCKW  E,YSMEDIT                                                        
         SCKW  ,YSMERR                                                          
*                                                                               
YSMYES   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
YSMNO    PROC                                                                   
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
YSMMOD   PROC                                                                   
         LA    R15,12                                                           
         PEND                                                                   
*                                                                               
YSMEDIT  PROC                                                                   
         LA    R15,16                                                           
         PEND                                                                   
*                                                                               
YSMERR   PROC                                                                   
         LA    R15,20                                                           
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
         VLTORG                                                                 
         END   .                                                                
