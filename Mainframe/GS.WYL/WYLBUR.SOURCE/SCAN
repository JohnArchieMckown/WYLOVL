SCAN     TITLE 'WYLBUR''s Scanner'                                              
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
         SYSDEFN                                                                
*                                                                               
WYLSCAN  CSECT                                                                  
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
SCAN     IDENT 2025                11:49:31 01/25/02  (SLP)                     
         SPACE 2                                                                
         USING CV                                                               
         PUSH  DSECTS                                                           
         COPY  CONTROL             Copy cv/cp                                   
         POP   DSECTS                                                           
WYLSCAN  CSECT                                                                  
         TITLE 'WYLBUR SCAN ROUTINES'                                           
*                                                                               
**                                                                              
**  WYLBUR SCANNER DOCUMENTATION                                                
**                                                                              
**  AS OF 11/89 WYLBURS OLD SCANNER IS BEING REPLACED BY A                      
**  NEW SCANNER.  THE FOLLOWING COMMENTS REFER TO THE NEW                       
**  SCANNER.  THIS DOCUMENTATION IS NOT COMPLETE, BUT REMEMBER !                
**                                                                              
**  "SOME IS BETTER THAN NONE."                                                 
**                                                                              
**  HISTORICAL NOTE (11/89):                                                    
**  THE NSCAN AND NKW PREFIX REFER TO 'NEW' SCAN AND 'NEW'                      
**  KEYWORD ENTRY DSECT.  AS TIME GOES ON 'NEW' WILL BECOME                     
**  THE REGULAR.  CHANCES ARE THAT THE 'N' PART OF MANY                         
**  NAMES (IE. NSCAN) WILL REMAIN. OH WELL.                                     
**                                                                              
**  -------------------------------------------------                           
**                                                                              
**  DOCUMENTATION OUTLINE                                                       
**                                                                              
**  1. MACRO INTERFACE                                                          
**  2. SCAN CONTROL BLOCK                                                       
**  3. ROUTINES INTERFACES                                                      
**     (FOR SCAN ROUTINE, MATCH ROUTINE, PROCESSING ROUTINE)                    
**                                                                              
**  -------------------------------------------------                           
**                                                                              
**                                                                              
**  MACRO INTERFACE:                                                            
**                                                                              
**  THESE MACROS ARE NOT FULLY DOCUMENTED.  SEE WYLBUR CODE                     
**  FOR EXAMPLES, AND ACTUAL MACROS FOR DETAILS.                                
**                                                                              
**  SET UP SCAN CONTROL BLOCK ..                                                
**    SCINIT - SET UP STRING LOC,LEN TO SCAN                                    
**    SETSKIP - SET UP SCAN SKIP TABLE                                          
**    SETSTOP - SET UP SCAN STOP TABLE                                          
**    SETSCKWS - SET UP SCAN SCKWS TABLE ADDRESS                                
**                                                                              
**  CALL SCAN ..                                                                
**    SCAN - CALL SCANNER                                                       
**    SCANCHK - CHECK/WRITE ANY SCAN ERRORS                                     
**                                                                              
**  TO PROCESS SCANNED TOKEN(S) ..                                              
**    SCTOK - RETURN LOC,LEN OF CURRENT TOKEN                                   
**    SCUPTOK - POINT RX TO UPPER CASE BLANK PADDED TOKEN                       
**    SCULTOK - POINT RX TO UPLOW CASE BLANK PADDED TOKEN                       
**    SCDQUOTE - DEQUOTE TOKEN INTO SPECIFIED AREA B/PADDED                     
**    SCUPCASE - UPPER CASE TOKEN INTO SPECIFIED AREA B/PADDED                  
**                                                                              
**  SET KEYWORD TABLE ENTRY                                                     
**    SCKW <KEYWORD STRING>,<ROUTINE>,<MATCH INFO,FLAGS>,PARM1,PARM2            
**                                                                              
**  TO SAVE/RESTOR SCAN CONTROL BLOCKS OR PORTIONS..                            
**    SCPUSH - SAVE COPY OF SCAN CB ON STACK                                    
**    SCPOP - RESTORE SAVED SCAN CB                                             
**    SCCLR - CLEAR CURRENT SCAN CB                                             
**    SCSAVE - SAVE COPY OF SCAN CB IN SPECIFIC AREA                            
**    SCRSTR - RESTOR COPY OF SCAN CB FROM SPECIFIC AREA                        
**                                                                              
**                                                                              
**  TO GET SCAN CONTROL BLOCK ADDRESSABILITY ...                                
**    SCCBADR <RX> - PUT ADDR OF SCAN CB IN RX                                  
**                                                                              
**                                                                              
**  MISC SCAN MACROS ...                                                        
**    SCANSTR - SAME AS SCAN BUT W/SKIP=' ' STOP=' ,;='                         
**    SCINFO - RETURN CURRENT REMAINDER TO SCAN LOC AND LEN                     
**    SCBKUP - BACKUP BY LAST TOKEN                                             
**        (CAN ONLY BE USED FOR LAST TOKEN SCANNED)                             
**    SCSEG - SEG AN ERROR TO SCAN CB                                           
**    SCSEGCLR - CLEAR ERR MSG IN SCAN CB                                       
**                                                                              
**  PUSH ROUTINE MACRO ..                                                       
**    PUSHRTN - USED FOR PUSHED SCKWS(RECURSIVE KW LOOKUP)                      
**    XPUSHRTN -USED FOR PUSHED SCKWS (RECURSIVE KW LOOKUP)                     
**                                                                              
**  MORE DETAILED COMMENTS:                                                     
**                                                                              
**                                                                              
**  SET UP SCAN CONTROL BLOCK ..                                                
**    SCINIT - SET UP STRING LOC,LEN TO SCAN                                    
**    SETSKIP - SET UP SCAN SKIP TABLE                                          
**    SETSTOP - SET UP SCAN STOP TABLE                                          
**    SETSCKWS - SET UP SCAN SCKWS TABLE ADDRESS                                
**  THESE MACROS SET UP THE SCAN ENVIRONMENT. ONLY SCINIT                       
**  IS REQUIRED. SETSKIP AND SETSTOP CAN BE USED TO RESET                       
**  THE SKIP AND STOP TABLES USED WHEN SCANNING.  TO SEE                        
**  HOW SKIP/STOP CHARS ARE SPECIFIED LOOK IN 'EXTENDED                         
**  EXEC' DOCUMENT UNDER 'SYSCALL SCAN'. THE CALLS WORK IN                      
**  THE SAME MANNER. SETSCKWS WILL SET THE ADDRESS OF THE                       
**  SCAN TABLES USED.  THE DEFAULTS FOR SET/SKIP ARE TO                         
**  USE WYLBURS WIERD CONVENTIONS. THE DEFAULT SCKWS ARE NONE.                  
**                                                                              
**                                                                              
**  CALL SCAN ..                                                                
**    SCAN - CALL SCANNER                                                       
**    SCANCHK - CHECK/WRITE ANY SCAN ERRORS                                     
**  THE SCAN MACRO CALLS THE SCAN ROUTINE, SEE DOCUMENTATION ON                 
**  THE SCAN ROUTINE INTERFACE BELOW.  ALL INPUTS TO SCAN ARE                   
**  PASSED IN THE SCAN CONTROL BLOCK.  THESE ARE SET UP WITH                    
**  THE SCINIT, SETSKIP, SETSTOP, AND SETSCKW MACROS.  TYPICALLY                
**  THE SETSKIP, SETSTOP AND SETSCKW MACROS ARE NOT USED AND                    
**  ARE DEFAULTED.  AN SCINIT MUST BE DONE. BUT IS USUALLY DONE                 
**  ONCE AT THE START OF EACH COMMAND IN THE COMM MODULE.                       
**  THE TYPICAL USE OF THE 'SCAN' MACRO WILL DEFAULT THE SKIP                   
**  START TABLES.  MORE UNUSUAL WAYS TO HANDLE THE SCANNING                     
**  INPUT PARAMETERS ARE COMMENTED ON IN THE ACTUAL 'SCAN'                      
**  MACRO.                                                                      
**  THE SCANCHK MACRO, WILL DETECT AND PROCESS ANY SCAN ERRORS                  
**  FOUND.  IF THERE IS AN ERROR, CONTROL WILL NOT RETURN AFTER                 
**  A SCANCHK MACRO IS ISSUED.                                                  
**                                                                              
**                                                                              
**  TO PROCESS SCANNED TOKEN(S) ..                                              
**    SCTOK - RETURN LOC,LEN OF CURRENT TOKEN                                   
**    SCUPTOK - POINT RX TO UPPER CASE BLANK PADDED TOKEN                       
**    SCULTOK - POINT RX TO UPLOW CASE BLANK PADDED TOKEN                       
**    SCDQUOTE - DEQUOTE TOKEN INTO SPECIFIED AREA B/PADDED                     
**    SCUPCASE - UPPER CASE TOKEN INTO SPECIFIED AREA B/PADDED                  
**  SCUPTOK, SCULTOK POINT A REGISTER TO A 16 BYTE AREA, SO BE                  
**  CAREFUL IF TOKEN SCANNED IS LARGER.  SCDQUOTE DOES DEQUOTE                  
**  STRING INTO AN AREA. IF STRING IS NOT QUOTED IT WILL UPPER                  
**  CASE STRING INTO AREA.  R1,R0 ARE DEQUOTED STRING LOC,LEN.                  
**  SCUPCASE WILL UPPER CASE STRING INTO AREA. R1,R0 ARE UPPER                  
**  CASED STRING LOCATION AND LENGTH.                                           
**                                                                              
**  SET KEYWORD TABLE ENTRY                                                     
**    SCKW <KEYWORD STRING>,<ROUTINE>,<MATCH INFO,FLAGS>,PARM1,PARM2            
**  SEE MANY EXAMPLES OF SCKW IN CODE.  THIS MACRO GENERATES A                  
**  PROPERLY FILLED OUT NKW (NEW KEYWORD CONTROL BLOCK). SO CHECK               
**  OUT THE NKW DESECT FOR MORE INFO.                                           
**                                                                              
**  TO SAVE/RESTOR SCAN CONTROL BLOCKS OR PORTIONS..                            
**    SCPUSH - SAVE COPY OF SCAN CB ON STACK                                    
**    SCPOP - RESTORE SAVED SCAN CB                                             
**    SCCLR - CLEAR CURRENT SCAN CB                                             
**    SCSAVE - SAVE COPY OF SCAN CB IN SPECIFIC AREA                            
**    SCRSTR - RESTOR COPY OF SCAN CB FROM SPECIFIC AREA                        
**  SCPUSH, SCPOP MUST USE STANDARD STACK DISCIPLINE.                           
**  SCSAVE AND SCRSTR CAN BE POINTED TO ANY AREA.                               
**                                                                              
**  TO GET SCAN CONTROL BLOCK ADDRESSABILITY ...                                
**    SCCBADR <RX> - PUT ADDR OF SCAN CB IN RX                                  
**  THE SCAN CONTROL BLOCK IS IN THE CP AND IS POINTED TO                       
**  BY CPSCANP.  MACROS ASSUME THIS IS TRUE.  THE SCCBADR                       
**  LOADS THE ADDRESS FROM CPSCANP.  IF YOU WANT TO USE THE                     
**  SCANNER IN A NOT-CP ENVIRONMENT, IT IS POSSIBLE IF YOU                      
**  CHANGE THE LOCATION AND THE WAY THAT THE CONTROL BLOCK                      
**  LOCATION IS FOUND.  (IE. CHANGE THE SCCBADDR MACRO!.)                       
**  THE SCAN CODE ITSELF DOES NOT USE THE CP. (VERIFY !!)                       
**  NOR DOES IT HAVE ANY KNOWLEDGE OF CPSCANP. (VERIFY !!)                      
**                                                                              
**                                                                              
**  MISC SCAN MACROS ...                                                        
**    SCANSTR - SAME AS SCAN BUT W/SKIP=' ' STOP=' ,;='                         
**    SCINFO - RETURN CURRENT REMAINDER TO SCAN LOC AND LEN                     
**    SCBKUP - BACKUP BY LAST TOKEN                                             
**        (CAN ONLY BE USED FOR LAST TOKEN SCANNED)                             
**    SCSEG - SEG AN ERROR TO SCAN CB                                           
**    SCSEGCLR - CLEAR ERR MSG IN SCAN CB                                       
**  SCANSTR IS IDENTICAL TO SCAN MACRO EXCEPT THAT IT USES                      
**  DIFFERENT SKIP/STOP TABLES.  SKIP=' ' STOP=' ,;='.                          
**  SCSEG, SCSEGCLR ARE USED TO RETURN SCAN ERRORS BY THE                       
**  TOKEN PROCESSING ROUTINES.  (IN ACTUALITY, MOST JUST                        
**  EXIT DIRECTLY TO CVERROR)                                                   
**                                                                              
**  PUSH ROUTINE MACRO ..                                                       
**    PUSHRTN - USED FOR PUSHED SCKWS(RECURSIVE KW LOOKUP)                      
**    XPUSHRTN -USED FOR PUSHED SCKWS (RECURSIVE KW LOOKUP)                     
**  THESE MACROS IMPLEMENT RECURSIVE KW LOOKUP OF PUSHED                        
**  KEYWORD TABLES.  YOU HAVE TO LOOK AT SCAN CODE TO SEE                       
**  WHAT IS GOING ON. OR JUST USE THE MACRO BLINDLY BY                          
**  EXAMPLE.                                                                    
**                                                                              
**  OTHER COMMENTS:                                                             
**                                                                              
**  ALL FIELDS IN THE CONTROL BLOCK MAY BE MODIFIED BY THE                      
**  KNOWLEDGEABLE PROGRAMMER.  TO INITIALIZE THE CONTROL BLOCK                  
**  THE MACROS: SCINIT, SETSKIP, SETSTOP MACROS ARE PROVIEDED.                  
**  THEY ALL EXPECT A STRING LOCATION AND LENGTH AS ARGUMENTS.                  
**                                                                              
**  THE SCAN MACRO CALLS THE SCAN ROUTINE. A KEYWORD TABLE IS                   
**  OPTIONAL.   TO SPECIFY A KEWORD TABLE, THE NAME MUST BE                     
**  SPECIFIED ON THE NSCAN MACRO.  ALSO SPECIFY ONLY THE NAME                   
**  NOT HOW IT IS TO BE LOADED (EG. LA: L: LH:). THIS IS FOR                    
**  *-CODE COMPATIBILITY.                                                       
**                                                                              
**  NOTE: ALL MACROS ASSUME THAT CPNSCANP POINTS TO VALID                       
**  SCAN CONTROL BLOCK.  TO USE IT IN NON-CP ADDRESSABLE STATE                  
**  MOST MACROS WILL HAVE TO BE BYPASSED.  THE SCAN MACRO                       
**  WILL CHANGE R14-R2.                                                         
**                                                                              
**                                                                              
**  -----------------------------------------------------------                 
**                                                                              
**  SCAN CONTROL BLOCK                                                          
**                                                                              
**  TO FULLY UNDERSTAND THE SCAN ROUTINES, YOU NEED TO LOOK AT                  
**  THE SCAN CONTROL BLOCK.  ALSO TO FIGURE OUT THE NKW MACRO                   
**  FOR CODING KEYWORD TABLE ENTRIES, CHECK OUT THE 'NKW' DSECT.                
**                                                                              
**                                                                              
** ------------------------------------------------------------                 
**                                                                              
**  ROUTINE INTERFACES (VERIFY W/COMMENTS IN ACTUAL CODE !!)                    
**                                                                              
**                                                                              
**  SCAN ROUTINE:                                                               
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - POINTS TO SCAN CONTROL BLOCK                                         
**    THE SCAN CONTROL BLOCK INPUT PARAMETERS ARE:                              
**      STRING LOCATION, LENGTH; THESE ARE UPDATED TO REFLECT                   
**         REMAINING STRING TO SCAN.                                            
**      ADDRESS OF SKIP AND STOP TRT TABLES (ZERO TO USE DEFAULT).              
**      ADDRESS OF KEYWORD TABLE (ZERO IF NONE).                                
**      SCAN CONTROL FLAGS. (ONLY BLANK TOKEN FLAG ALLOWED SO FAR).             
**                                                                              
**  ON EXIT:                                                                    
**    R1,R0 - LOC, LEN OF LAST TOKEN/PARM SCANNED                               
**    R15 - ZERO IF NO ERROR                                                    
**    R15 - NZ, IF ERROR                                                        
**                                                                              
**    THE SCAN CONTROL BLOCK IS UPDATED AS FOLLOWS:                             
**    THE STRING LOC, LEN POINTERS ARE UPDATED TO POINT TO THE                  
**      REMAINDER OF THE STRING                                                 
**    THE TOKEN LOC, LEN POINTERS POINT TO THE LAST TOKEN OR                    
**      PARAMETER SCANNED.                                                      
**    THE TOKEN TYPE FLAGS ARE SET, AND IF NUMBER OR LINENUMBER TYPE            
**      THEN THE TOKEN VALUE IS SET.                                            
**    THE TOKEN (IF NO ERROR) ALSO PLACED LEFT JUSTIFIED BLANK                  
**      PADDED IN BOTH UPPER AND UPLOW CASE WITHIN THE SCAN CB.                 
**                                                                              
**  REGISTER USAGE:                                                             
**    R2 - SCAN CB                                                              
**                                                                              
**    R2 IS USED INTERNALLY WITHIN THIS MODULE TO POINT AT THE                  
**    SCAN CONTROL BLOCK.  IT IS ALSO PASSED (IN R2) TO THE                     
**    MATCH AND PROCESSING ROUTINES.                                            
**                                                                              
**                                                                              
**  COMMENTS:                                                                   
**  IF NO KEYWORD TABLE IS SPECIFIED:                                           
**  ONLY ONE TOKEN IS SCANNED, IT'S TYPE IS DETERMINED.  IF IT'S                
**  TYPE IS NUMBER (INTEGER) OR LINE NO, THEN ITS VALUE IS RETURNED             
**  IN THE SCAN CONTROL BLOCK.  THE TOKEN IS PLACED LEFT JUSTIFIED              
**  BLANK PADDED IN UPPER AND UPLOW CASE WITHIN THE SCAN CB.                    
**  THE ONLY ERROR THAT CAN OCCUR IS 'MISMATCHED QUOTE OR                       
**  PARENTHESIS'                                                                
**                                                                              
**  IF A KEYWORD TABLE IS SPECIFIED:                                            
**  A TOKEN IS SCANNED AS ABOVE.  THIS TOKEN IS COMPARED AGAINST ALL            
**  THE ENTRIES IN THE KEYWORD TABLE.  IF A MATCH IS FOUND THE                  
**  KEYWORD ROUTINE IS CALLED.  UPON RETURN FROM THE KEYWORD ROUTINE            
**  ANOTHER TOKEN IS SCANNED.  THIS TOKEN IS COMPARED AGAINST ALL               
**  ENTRIES IN THE KEYWORD TABLE.  IF A MATCH IS FOUND, THE MATCHING            
**  KEYWORD ROUTINE IS CALLED.  ... AND SO ON ...                               
**  THIS CONTINUES UNTIL:  (A) ALL TOKENS IN THE STRING ARE SCANNED             
**  (B) NO MATCH IS FOUND, (C) THE KEYWORD ROUTINE RETURNS A NON-ZERO           
**  RETURN CODE, OR (D) AN ERROR OCCURS DURING THE SCAN.                        
**                                                                              
**  WE EXAMINE EACH CASE:                                                       
**    (A) ALL TOKENS IN STRING ARE SCANNED:  THE NORMAL CASE.                   
**    (B) NO MATCH IS FOUND:  THIS IS NOT AN ERROR CONDITION.                   
**          TYPICALLY THIS DOES NOT HAPPEN AS THERE IS A CATCH-ALL              
**          KEYWORD ENTRY, THAT WILL GENERATE AN ERROR.                         
**    (C) IF THE KEYWORD ROUTINE RETURNS A NON-ZERO IN R15, THE                 
**        SCAN WILL BE STOPPED, AND R15 WILL BE RETURNED TO THE                 
**        SCAN CALLER.                                                          
**    (D) THE ONLY ERRORS ENCOUNTERED DURING THE SCAN ARE                       
**        (1) MISMATCHED QUOTES OR PARENTHESIS, OR                              
**        (2) THE MATCH ROUTINE DETECTS AN ERROR, EG.                           
**            THE MATCH ROUTINE EXPECTS A PARM, BUT THERE IS NOT                
**            ONE OR THE PARM IS INVALID TYPE OR VALUE                          
**                                                                              
**  ------                                                                      
**                                                                              
**  EACH MATCH ROUTINE IS CALLED AS FOLLOWS:                                    
**  ON ENTRY:                                                                   
**     R15 - ZERO                                                               
**     R0 - NOT USED                                                            
**     R1 - NKW (KEYWORD (SCKW) INFO BLOCK)                                     
**     R2 - SCAN CONTROL BLOCK                                                  
**     R3-R6 SAME AS ON ENTRY TO NSCAN ROUTINE                                  
**                                                                              
**  ON EXIT:                                                                    
**     R15 - NEGATIVE, ERROR (PLACE ERROR MSG IN NSCNCB)                        
**     R15 - ZERO, MATCH FOUND                                                  
**     R15 - POSITIVE, MATCH NOT FOUND                                          
**     R0-R1 - VALUE TO PASS TO KEYWORD ROUTINE (IF R15 ZERO)                   
**             (PRETURN MUST BE USED TO CHANGE THESE VALUES.)                   
**     R2-R6 - DO NOT CHANGE                                                    
**                                                                              
**  NOTE: IF YOU WANT A MATCH ROUTINE TO DO A LOT OF RESCANNING                 
**  ETC, YOU MUST BE AWARE THAT YOU WILL BE MAKING CHANGES TO                   
**  THE SCAN CONTROL BLOCK (NSCNCB).  AND YOU MUST BE SURE THAT                 
**  THE CHANGES ARE COOL VIS-A-VIS THE SCAN CALLS THAT FOLLOW.                  
**  BE COOL                                                                     
**                                                                              
**  ------                                                                      
**                                                                              
**  EACH KEYWORD ROUTINE IS CALLED AS FOLLOWS:                                  
**  ON ENTRY:                                                                   
**     R15 - ZERO                                                               
**     R1,R0 - AS SUPPLIED BY THE MATCH ROUTINE, TYPICALLY ..                   
**             R1,R0 - LOC, LEN OF KEYWORD/PARM FOR STRINGS                     
**             R0 - VALUE FOR INTEGERS VALUEx1000 FOR LINE NUMBERS              
**             SEE COMMENTS AT SPECIFIC MATCH ROUTINE                           
**     R2 - SCAN CONTROL BLOCK                                                  
**     R3-R6 SAME AS ON ENTRY TO NSCAN ROUTINE                                  
**                                                                              
**  ON EXIT:                                                                    
**     R15 - ZERO, CONTINUE SCAN                                                
**     R15 - NON-ZERO, STOP SCAN  (R15 VAL RETURNED TO NSCAN CALLER)            
**     R0-R2 - DO NOT CHANGE                                                    
**     R3-R6 - PASSED BACK TO CALLER OF SCAN ROUTINE.                           
**             (PRETURN MUST BE USED TO CHANGE THESE VALUES.)                   
**                                                                              
**  NOTE:                                                                       
**  ALL KEYWORD ROUTINES SHOULD USE THE STANDARD XPROC/PROC/PEND                
**  INTERFACE. THEY ARE RESPONSIBLE FOR RESTORING ALL REGISTERS                 
**  USED.  THEY SHOULD ALWAYS RETURN TO THE CALLER.  THIS GIVES                 
**  THE NSCAN CALLER CONTROL!                                                   
**                                                                              
**  -----                                                                       
**                                                                              
**  KEYWORD ENTRIES AND MATCHES:                                                
**                                                                              
**  MATCH ROUTINES CAN DO WHAT THEY WANT, BUT IN GENERAL:                       
**  KEYWORD ENTRIES CAN MATCH TOKENS, NUMBERS, LINE NUMBERS, OR                 
**  ANYTHING.  THE FIRST KEYWORD ENTRY THAT MATCHES WILL BE CALLED.             
**  KEYWORD ENTRIES CAN SPECIFY THAT A CERTAIN TYPE OF PARAMETER                
**  BE SCANNED.  IF A PARAMETER IS SCANNED, IT (AND NOT THE TOKEN)              
**  WILL BE CONTAINED IN THE SCAN CONTROL BLOCK.  IF A PARAMETER                
**  SCAN IS REQUESTED AND THE PARM IS MISSING OR NOT OF THE                     
**  SPECIFIED TYPE AN ERROR OCCURS.                                             
**                                                                              
**                                                                              
**  -----                                                                       
**                                                                              
**  ERRORS:                                                                     
**  ERRORS RETURN NON-ZERO RETURN CODE IN R15.  ALSO FOR SCANNER                
**  GENERATED ERRORS (NEG RETURN CODE) AN ERROR MESSAGE IS                      
**  PLACED IN THE SCAN CONTROL BLOCK.  IF A KEYWORD ROUTINE                     
**  GENERATES A NON-ZERO RETURN CODE, THAT ROUTINE IS RESPONSIBLE               
**  FOR EITHER SEG'ING AN ERROR MSG, PUTTING AN ERROR MSG IN THE                
**  SCAN CONTROL BLOCK, OR DOING NOTHING.                                       
**                                                                              
**  TYPICALLY, A CATCH-ALL KEYWORD ENTRY IS SPECIFIED AT THE END                
**  OF THE KEYWORD LIST TO CATCH INVALID KEYWORDS.  MOST ERROR                  
**  RETURNED BY THE SCANNER ARE DUE TO MISSING OR BAD PARMS.                    
**  IF YOU NEED MORE CONTROL OVER THE DETECTION AND PROCESSING                  
**  OF ERRORS, YOU MAY WANT TO SCAN THE PARMS YOURSELF. IT IS                   
**  NOT DIFFICULT, BUT RARELY NECESSARY.                                        
**                                                                              
**  ------                                                                      
**                                                                              
*                                                                               
         TITLE 'NEW WYLBUR SCANNER'                                             
         EJECT                                                                  
*                                                                               
*  NKW - KEYWORD TABLE ENTRY                                                    
*                                                                               
NKW      RECORD BEGIN                                                           
NKWTOK   DS    CL16                TOKEN, BLANK PADDED                          
NKWTOKL  DS    H                   TOKEN LENGTH                                 
NKWFLG1  FLAG  ,                   FIELD FLAGS                                  
         FLAG  NKWFP1              PARM1                                        
         FLAG  NKWFP2              PARM2                                        
         FLAG  NKWFMAT             MATCH ROUTINE                                
         FLAG  NKWFRTN             PROCESSING ROUTINE                           
NKWFLG2  FLAG  ,                   MISC FLAGS                                   
         FLAG  NKWFPUSH            PUSH                                         
         FLAG  NKWFEND             LAST KEYWORD ENTRY IN LIST                   
NKWFLG3  FLAG  ,                   MATCH SPECS,SPECIAL ACTIONS                  
         FLAG  NKWFABBV            ABBREVIATE  (3 CHAR MIN)                     
         FLAG  NKWFAB1             ABBREVIATE  (1 CHAR MIN)                     
         FLAG  NKWFSET             SAVE KEYWORD IN CP                           
         FLAG  NKWFNOBK            DO NOT BLANK                                 
NKWFLG4  FLAG  ,                   INTEGER MATCH SPECS                          
         FLAG  NKWFPI              POSITIVE INT ONLY                            
         FLAG  NKWFSI              SIGNED INT (MAY BE NEG)                      
NKWFLG5  FLAG  ,                                                                
NKWFLG6  FLAG  ,                                                                
NKWPARM1 DS    F                   MATCH PARM 1                                 
NKWPARM2 DS    F                   MATCH PARM 2                                 
NKWMAT   DS    A                   MATCH ROUTINE ADDRESS                        
NKWRTN   DS    A                   PROCESSING ROUTINE ADDRESS                   
         END                                                                    
         EJECT                                                                  
*                                                                               
*        LOCAL MACROS, EQU'S                                                    
*                                                                               
*                                                                               
*  CALL SCKW PROCESSING ROUTINE,,, R14 POINTS TO KEYWORD ENTRY                  
*                                                                               
         MACRO                                                                  
&L       RTNCALL  &DUMMY                                                        
         GBLB  &$PCODE                                                          
         AIF   (&$PCODE).CGEN                                                   
&L       L     R14,NKWRTN-NKW(R14)                                              
         BASR  R14,R14                                                          
         AGO   .RTDONE                                                          
.CGEN    ANOP                                                                   
&L       NOOP                                                                   
         MNOTE *,'C-CODE  (*(((struct sckw *)(r14))->nkwrtn))();'               
.RTDONE  ANOP                                                                   
         MEND                                                                   
*                                                                               
*  CALL SCKW MATCH ROUTINE,,, R14 POINTS TO KEYWORD ENTRY                       
*                                                                               
         MACRO                                                                  
&L       MATCALL  &DUMMY                                                        
         GBLB  &$PCODE                                                          
         AIF   (&$PCODE).CGEN                                                   
&L       L     R14,NKWMAT-NKW(R14)                                              
         BASR  R14,R14                                                          
         AGO   .RTDONE                                                          
.CGEN    ANOP                                                                   
&L       NOOP                                                                   
         MNOTE *,'C-CODE  (*(((struct sckw *)(r14))->nkwmat))();'               
.RTDONE  ANOP                                                                   
         MEND                                                                   
*                                                                               
*                                                                               
*                                                                               
*  GET NEXT KEYWORD TABLE ENTRY                                                 
*                                                                               
         MACRO                                                                  
&L       NEXTNKW  &DUMMY                                                        
         GBLB  &$PCODE                                                          
         AIF   (&$PCODE).NXCCODE                                                
&L       LA    R3,L'NKW(R3)                                                     
         AGO   .NXDONE                                                          
.NXCCODE ANOP                                                                   
&L       NOOP                                                                   
         MNOTE *,'C-CODE  R3 = R3 + sizeof(struct sckw);'                       
.NXDONE  ANOP                                                                   
         MEND                                                                   
*                                                                               
*  THESE NEED TO BE RELATIVE TO CV EQU'S                                        
*                                                                               
SMAXLNO  EQU   99999999            MAX LINE NUMBER                              
SMAXILNO EQU   99999               MAX LINE NUMBER (INTEGER PART)               
         TITLE 'NEW WYLBUR SCANNER'                                             
*                                                                               
**                                                                              
**  SCAN                                                                        
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - SCAN CONTROL BLOCK                                                   
**                                                                              
**  ON EXIT:                                                                    
**    R1,R0 - LOC LENGTH OF LAST SCANNED ITEM/PARM                              
**    R15 - ZERO, IF SCAN OK                                                    
**    R15 - MINUS, IF SCAN ERROR, ERR MSG PLACED IN SCAN CB                     
**    R15 - POSITIVE, USER RETURN, SET BY KEYWORD ROUTINE.                      
**    R2 - SCAN CB,  ALL TOKEN, STRING STUFF UPDATED.                           
**                                                                              
**                                                                              
**  REGISTER USAGE:                                                             
**    R2 - SCAN CB        (INTERNAL TO SCAN MODULE)                             
**                                                                              
**  NOTE:                                                                       
**  IF KW TABLE IS SUPPLIED, ,,, WE LOOP THRU EACH TOKEN                        
**  CALLING THE APROPRIATE KEYWORD ROUTINES.                                    
**                                                                              
**  NOTE2: !!!                                                                  
**  WHEN CALLING THE MATCH/PROCESSING ROUTINES,  REGISTERS                      
**  ARE SET BY POINTING DIRECTLY INTO THE STACK. THIS IS                        
**  HIGHLY NON-STANDARD !!                                                      
**                                                                              
**  IMPLEMENTATION NOTE:                                                        
**  MOST ROUTINE PARAMETERS ARE PASSED IN THE SCAN CONTROL                      
**  BLOCK.  CHECK IT OUT.                                                       
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**  SEE COMMENTS AT START OF MODULE.  !!!!                                      
**                                                                              
*                                                                               
NSWA     RECORD BEGIN                                                           
NSTLOC   DS    A                   TOKEN LOC  (NOT PARM)                        
NSTLEN   DS    F                   TOKEN LEN                                    
NSFLAG   FLAG  ,                                                                
         FLAG  NSFFIRST            FIRST TOKEN SCAN FLAG                        
         END                                                                    
*                                                                               
*                                                                               
NSCAN    XPROC NSWA                                                             
         USING NSCNCB,R2                                                        
         LR    R2,R1                                                            
         USING NKW,R1                                                           
*                                                                               
         COMMENT                   SET SCAN DEFAULTS IF NEEDED                  
         IF    (NSCNSKIP,EQ,0),BEGIN                                            
         L     R1,=A(TBLWSKIP)                                                  
         ST    R1,NSCNSKIP                                                      
         END                                                                    
         IF    (NSCNSTOP,EQ,0),BEGIN                                            
         L     R1,=A(TBLWSTOP)                                                  
         ST    R1,NSCNSTOP                                                      
         END                                                                    
         CLEAR NSCNMSGL                                                         
*                                                                               
*        SCAN  /NO KEY WORD TABLE                                               
*                                                                               
         COMMENT                   IF NO KW TABLE,,, JUST SCAN                  
         IF    (NSCNKWS,EQ,0),BEGIN                                             
         COMMENT                   SCAN TOKEN,,,  GET TOKEN TYPE                
         ACALL SCNTOKEN                                                         
         ACALL SETTOKEN                                                         
         ACALL SETTYPE                                                          
         B     NSCNDONE                                                         
         END                                                                    
*                                                                               
*        SCAN  /WITH KEYWORD TABLE,  LOOP,,LOOP,,LOOP                           
*                                                                               
         COMMENT                   IF SCAN KW TABLE, LOOP SCANNING              
         CLEAR R15                                                              
         SET   NSFFIRST                                                         
         WHILE (R15,Z),BEGIN       LOOP WHILE KW ROUTINES SUCCESSFUL            
*                                                                               
         COMMENT                   SCAN TOKEN,,,  GET TOKEN TYPE                
         ACALL SCNTOKEN            RETURNS R1,R0 - TOKEN LOC,LEN                
         ACALL SETTOKEN                                                         
         ACALL SETTYPE                                                          
*                                                                               
         MVC   NSTLOC,NSCNTLOC                                                  
         MVC   NSTLEN,NSCNTLEN                                                  
*                                                                               
         COMMENT                   IF ERROR, RETURN ,,,                         
         IF    (R15,NZ),BEGIN                                                   
         B     NSCNDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF NULL, RETURN,,,                           
         COMMENT                   IF TOTAL SCAN EMPTY, CHECK KW TAB            
         IF    (NSCNFNUL,AND,^NSFFIRST),BEGIN                                   
         B     NSCNDONE                                                         
         END                                                                    
         CLEAR NSFFIRST                                                         
*                                                                               
         COMMENT                   FIND/PROCESS KW TABLE MATCH                  
         L     R1,NSCNKWS                                                       
         COMMENT R2 IS NSCNCB                                                   
         LR    R3,WAR                                                           
         VCALL RLOOKUP                                                          
*                                                                               
         COMMENT                   IF NO MATCH, RETURN                          
         IF    (R0,NZ),BEGIN                                                    
         CLEAR R15                                                              
         B     NSCNDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF MATCH, AND ERROR, RETURN                  
         IF    (R15,NZ),BEGIN                                                   
         B     NSCNDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   PROCESS ANY SPECIAL ACTIONS                  
         L     R3,NSTLOC           (IE. SET, BLANK)                             
         L     R4,NSTLEN                                                        
         ACALL DOSPECL                                                          
*                                                                               
         END   ,,                  LOOP SCANNING KEYWORDS                       
*                                                                               
NSCNDONE LABEL ,                                                                
         L     R0,NSCNTLEN         *** RESET OR NO ???                          
         L     R1,NSCNTLOC         *** SHOULD WE ALLOW USER PRETURN?            
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R1                                                               
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCANSTR - SCAN STRING DELIMITED BY ' ,=' AND ' ,=;'                         
**                                                                              
**  THIS ROUTINE IS THE SAME AS SCAN EXCEPT THAT THE                            
**  SKIP/STOP CHARS ARE SET AS SHOWN ABOVE.                                     
**  (IE. NO STOP ON /,+,",(,),...ETC.. )                                        
**                                                                              
**  ON ENTRY: SAME AS NSCAN                                                     
**  ON EXIT: SAME AS NSCAN                                                      
**                                                                              
*                                                                               
NSTWA    RECORD BEGIN                                                           
NSNSKIP  DS    XL256                                                            
NSNSTOP  DS    XL256                                                            
         END                                                                    
*                                                                               
*                                                                               
NSCANSTR XPROC NSTWA                                                            
         XPUSH R1                  SAVE R1 ENTRY FOR CALL TO SCAN               
*                                                                               
         COMMENT                   SET NEW SKIP/STOP TABLES                     
         SETSKIP NSNSKIP,' ,='                                                  
         SETSTOP NSNSTOP,' ,=;'                                                 
*                                                                               
         COMMENT                   ALL SET, CALL SCAN                           
         CLEAR R0                                                               
         XPOP  R1                                                               
         VCALL NSCAN                                                            
*                                                                               
         COMMENT                   SET SCAN RETURNS                             
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  RLOOKUP -  FIND/PROCESS SCAN KEYWORDS                                       
**                                                                              
**  LOOK FOR MATCH. IF FOUND, CALL PROCESSING ROUTINE.                          
**                                                                              
**  THIS ROUTINE IS USED RECURSIVELY.  IF MULTIPLE MATCHES IT                   
**  WILL ONLY FIND THE FIRST MATCH.                                             
**                                                                              
**  ON ENTRY:                                                                   
**       R1 - KEYWORD TABLE ENTRIES POINTER                                     
**       R2 - SCAN CONTROL BLOCK (CONTAINS TOKEN/KEYWORD INFO)                  
**       R3 - ORIGINAL REGISTER SAVE AREA                                       
**                                                                              
**  ON EXIT                                                                     
**       R0 - ZERO, MATCH FOUND                                                 
**       R0 - NZ, NO MATCH FOUND                                                
**       R1 - IF MATCH, MATCHING KW ENTRY                                       
**       R15 - IF MATCH, PROCESSING ROUTINE RETURN CODE                         
**                                                                              
**  NOTE:                                                                       
**  SEE COMMENTS AT START OF MODULE FOR MATCH AND PROCESSING                    
**  ROUTINE INTERFACE.                                                          
**                                                                              
**  NOTE:                                                                       
**  THIS ROUTINE IS USED RECURSIVELY TO IMPLEMENT SCAN TABLE                    
**  PUSH AND POP.                                                               
*                                                                               
RLKWA    RECORD BEGIN                                                           
RLKLIST  DS    A                                                                
         END                                                                    
*                                                                               
*                                                                               
RLOOKUP  XPROC RLKWA                                                            
*                                                                               
         USING NSCNCB,R2                                                        
         USING NKW,R1                                                           
*                                                                               
         COMMENT                   IF NO SCAN TABLE, EXIT                       
         IF    (R1,Z),BEGIN                                                     
         LA    R0,4                                                             
         B     RLKDONE                                                          
         END                                                                    
*                                                                               
         COMMENT                   LOOP LOOKING FOR MATCH                       
         WHILE (R1,NZ),BEGIN                                                    
         ST    R1,RLKLIST                                                       
*                                                                               
         COMMENT                   IF PUSH, RECURSE                             
         IF    NKWFPUSH,BEGIN                                                   
         LA    R14,NKW                                                          
         RTNCALL ,                 THIS CALL WILL RECURSE                       
         IF    (R0,Z),BEGIN        IF MATCH FOUND AND PROCESSED, DONE           
         B     RLKDONE                                                          
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   CALL MATCH ROUTINE                           
         ACALL CALLMAT                                                          
*                                                                               
         COMMENT                   IF ERROR,,,                                  
         IF    (R15,NEG),BEGIN                                                  
         CLEAR R0                                                               
         B     RLKDONE                                                          
         END                                                                    
*                                                                               
         COMMENT                   IF MATCH, CALL PROCESS ROUTINE               
         IF    (R15,Z),BEGIN                                                    
         L     R15,RLKLIST                                                      
         ACALL CALLRTN                                                          
         CLEAR R0                                                               
         B     RLKDONE                                                          
         END                                                                    
*                                                                               
         COMMENT                   LOOP THRU KEYWORDS                           
         L     R1,RLKLIST                                                       
         IF    (NKWFEND),BEGIN                                                  
         CLEAR R1                                                               
         END                                                                    
         ELSE  BEGIN                                                            
*        NEXTNKW                                                                
         LA    R1,L'NKW(R1)                                                     
         END                                                                    
         END , LOOP LOOKING FOR MATCHES ,,,                                     
*                                                                               
         COMMENT                   DROP THRU IMPLIES NO MATCH                   
         LA    R0,4                                                             
*                                                                               
RLKDONE  LABEL ,                                                                
         L     R1,RLKLIST                                                       
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R1                                                               
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  CALLMAT                                                                     
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - KEYWORD TABLE ENTRY FOR THIS KEYWORD                                 
**    R2 - SCAN CB                                                              
**    R3 - STACK POINTER AT SCAN ROUTINE ENTRY                                  
**                                                                              
**  ON EXIT:                                                                    
**    R0 - USER PARM, IF MATCH                                                  
**    R1 - USER PARM, IF MATCH                                                  
**    R15 - ZERO IF MATCH                                                       
**    R15 - NON ZERO, IF NO MATCH                                               
**                                                                              
**                                                                              
**  NOTE:                                                                       
**  WE SET UP PARMS TO CALL USERS MATCH ROUTINE.                                
**                                                                              
**  NOTE:                                                                       
**  SEE COMMENTS AT START OF MODULE ON MATCH ROUTINE                            
**  USER INTERFACE.                                                             
**                                                                              
**  NOTE2: !!!!                                                                 
**  THERE ARE SOME (MANY) DIFFICULTIES SETTING UP THE REGISTERS                 
**  FOR THE CALL TO USERS ROUTINE.  THERE IS MUCH REGISTER                      
**  JUGGLING... THE BIGGEST TRICKS ARE: (A.) THAT R14 MUST POINT                
**  TO THE KEYWORD TABLE ENTRY... SO WE CAN USE IT TO GET THE                   
**  ROUTINE ADDRESS AFTER ALL THE OTHER REGS ARE SET UP.                        
**  AND (B.) THAT WE MUST POINT INTO THE STACK TO RECOVER                       
**  REGS AT THE TIME OF THE CALL TO SCAN.  AND ALSO TO POINT                    
**  TO USERS WORK AREA AT THE TIME OF THE CALL TO SCAN.                         
**  HOLD ONTO YOUR HATS !!                                                      
*                                                                               
CALLMAT  PROC  CALLWA                                                           
         USING NSCNCB,R2                                                        
         USING NKW,R1                                                           
*                                                                               
         COMMENT                   IF ROUTINE IS NOOP, DO NOT CALL              
         IF    (^NKWFMAT,OR,(NKWMAT,EQ,0)),BEGIN                                
         LA    R15,4                                                            
         B     CALMDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   R14 IS NOW NKW TOO !                         
         LA    R14,NKW                                                          
*                                                                               
         COMMENT                   SET R0,R1,R2 FOR CALL                        
         CLEAR R15                                                              
         CLEAR R0                                                               
         COMMENT R1 IS NKW                                                      
         COMMENT R2 IS NSCNCB                                                   
*                                                                               
         COMMENT                                                                
         ST    R3,CALLSTKP         STACK POINTER FOR NSCAN                      
         LM    R3,R6,16(R3)        *** HIGHLY NON-STANDARD !                    
         MATCALL                                                                
*                                                                               
CALMDONE LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R1                                                               
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  CALLRTN                                                                     
**                                                                              
**  ON ENTRY:                                                                   
**    R0 - MATCH ROUTINE PARM1                                                  
**    R1 - MATCH ROUTINE PARM2                                                  
**    R2 - SCAN CB                                                              
**    R3 - STACK POINTER AT SCAN ROUTINE ENTRY                                  
**    R15 - MATCH NKW ADDRESS                                                   
**                                                                              
**  ON EXIT:                                                                    
**    R15 - RETURNS R15 VALUE PASSED BY USER                                    
**                                                                              
**                                                                              
**  NOTE:                                                                       
**  WE SET UP PARMS TO CALL USERS KEYWORD PROCESSING ROUTINE.                   
**                                                                              
**  NOTE:                                                                       
**  SEE COMMENT AT START OF MODULE FOR PROCESSING ROUTINE                       
**  INTERFACE DOCUMENTATION.                                                    
**                                                                              
**  NOTE: !!!!                                                                  
**  THERE ARE SOME (MANY) DIFFICULTIES SETTING UP THE REGISTERS                 
**  FOR THE CALL TO USERS ROUTINE.  THERE IS MUCH REGISTER                      
**  JUGGLING... THE BIGGEST TRICKS ARE: (A.) THAT R14 MUST POINT                
**  TO THE KEYWORD TABLE ENTRY... SO WE CAN USE IT TO GET THE                   
**  ROUTINE ADDRESS AFTER ALL THE OTHER REGS ARE SET UP.                        
**  AND (B.) THAT WE MUST POINT INTO THE STACK TO RECOVER                       
**  REGS AT THE TIME OF THE CALL TO SCAN.  AND ALSO TO POINT                    
**  TO USERS WORK AREA AT THE TIME OF THE CALL TO SCAN.                         
**  HOLD ONTO YOUR HATS !!                                                      
*                                                                               
CALLWA   RECORD BEGIN                                                           
CALLSTKP DS    F                                                                
         END                                                                    
*                                                                               
*                                                                               
CALLRTN  PROC  CALLWA                                                           
         USING NSCNCB,R2                                                        
         USING NKW,R15                                                          
*                                                                               
         COMMENT                   SAVE TOKEN IF SET SPECIFED                   
         IF    NKWFSET,BEGIN                                                    
         MVC   CPCMNM,NKWTOK                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF ROUTINE IS NOOP, DO NOT CALL              
         IF    (^NKWFRTN,OR,(NKWRTN,EQ,0)),BEGIN                                
         CLEAR R15                                                              
         B     CALLDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   R14 IS NOW NKW TOO !                         
         LA    R14,NKW                                                          
*                                                                               
         COMMENT                   SET ALL REGS FOR CALL                        
         CLEAR R15                                                              
         COMMENT R0 IS USER PARM                                                
         COMMENT R1 IS USER PARM                                                
         COMMENT R2 IS NSCNCB                                                   
         ST    R3,CALLSTKP         STACK POINTER FOR NSCAN                      
         LM    R3,R6,16(R3)        *** HIGHLY NON-STANDARD !                    
         RTNCALL                                                                
         L     R1,CALLSTKP                                                      
         STM   R3,R6,16(R1)        *** HIGHLY NON-STANDARD !                    
*                                                                               
CALLDONE LABEL ,                                                                
         PEND                                                                   
         DROP  R15                                                              
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  DO SPECIAL ACTIONS                                                          
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - KEYWORD TABLE ENTRY                                                  
**    R2 - SCAN CONTROL BLOCK                                                   
**    R3 - TOKEN LOC                                                            
**    R4 - TOKEN LEN                                                            
**                                                                              
**  ON EXIT:                                                                    
**    R15 - SAME AS ENTRY (DO NOT CHANGE !!)                                    
**                                                                              
**  SET AND BLANK OPTIONS PROCESSED BELOW.                                      
**                                                                              
*                                                                               
DOSPECL  PROC                                                                   
         USING NKW,R1                                                           
         USING NSCNCB,R2                                                        
         XPUSH R15                                                              
*                                                                               
         COMMENT                   SAVE TOKEN IF SET SPECIFED                   
         IF    NKWFSET,BEGIN                                                    
         MVC   CPCMNM,NKWTOK                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF BLANK, BLANK TOKEN/PARM                   
         COMMENT                     UNLESS NOBLANK ON KW ENTRY                 
         IF    (NSCNFBLK,AND,^NKWFNOBK,AND,^NKWFPUSH),BEGIN                     
         L     R4,NSCNTLOC         GET TOKEN, TOKEN/PARM LOC LEN                
         A     R4,NSCNTLEN                                                      
         SR    R4,R3                                                            
         L     R5,=A(TBLBLANK)                                                  
         IF    (R4,POS),BEGIN                                                   
         DEX   R4,' MVC @R3(0),@R5 '                                            
         END                                                                    
         END                                                                    
*                                                                               
         XPOP  R15                                                              
         PEND                                                                   
         DROP  R1                                                               
         DROP  R2                                                               
         TITLE 'NEW SCAN ROUTINES'                                              
*                                                                               
**                                                                              
**  SCNTOKEN - SCAN TOKEN                                                       
**                                                                              
**  ON ENTRY:                                                                   
**    @R2 - SCAN CB                                                             
**    NSCNLOC - STRING LOC                                                      
**    NSCNLEN - STRING LEN                                                      
**    NSCNSKIP - SKIP TRT TABLE                                                 
**    NSCNSTOP - STOP TRT TABLE                                                 
**                                                                              
**  ON EXIT:                                                                    
**    @R2 - SCAN CB                                                             
**    TOKEN LOC,LEN; STRING (REMAINING) LOC,LEN UPDATED IN SCAN CB              
**    R15 - 0, IF NO ERROR                                                      
**    R15 - NEG, IF ERROR, ERROR MSG PLACED IN SCAN CB                          
**      (ONLY ERROR DETECTED IS MISMATCHED QUOTES, PARENTHESIS)                 
**                                                                              
**  NOTE:                                                                       
**  THIS ROUTINE USES SKIP/STOP TRT TABLES.  IF TOKEN STARTS WITH               
**  PARENTHESIS OR QUOTE.  THE MATCHING PARENTHESIS OR QUOTE WILL               
**  CONSTITUTES THE END OF THE TOKEN.  ALSO, A SCAN OF A ';'                    
**  TOKEN WILL BE TREATED AS AN END OF STRING.                                  
**                                                                              
*                                                                               
SCNTOKEN PROC                                                                   
         USING NSCNCB,R6                                                        
         LR    R6,R2                                                            
*                                                                               
         COMMENT                   SET DEFAULT RETURNS                          
         L     R1,NSCNLOC                                                       
         ST    R1,NSCNTLOC                                                      
         CLEAR NSCNTLEN                                                         
         CLEAR NSCNTOKL                                                         
         CLEAR R15                                                              
*                                                                               
         COMMENT                   SCAN TOKEN                                   
         L     R0,NSCNLEN                                                       
         L     R1,NSCNLOC                                                       
         L     R2,NSCNSKIP                                                      
         ACALL TRTSCAN                                                          
         ST    R1,NSCNTLOC                                                      
         L     R2,NSCNSTOP                                                      
         ACALL TRTSCAN                                                          
         IF    ((R0,POS),AND,(R1,EQ,NSCNTLOC)),BEGIN                            
         LA    R1,1(R1)            IF START/STOP OF TOKEN ARE SAME              
         DECR  R0                  CHAR, THEN STOP IS REALLY +1                 
         END                                                                    
         ST    R1,NSCNLOC                                                       
         ST    R0,NSCNLEN                                                       
         L     R1,NSCNLOC                                                       
         S     R1,NSCNTLOC                                                      
         ST    R1,NSCNTLEN                                                      
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
*                                                                               
         COMMENT                   IF NULL SCAN, EXIT                           
         IF    (R0,Z),BEGIN                                                     
         B     SCNTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   SPECIAL PROCESS QUOTES, PARENS               
         IF    ^NSCNFNOQ,BEGIN                                                  
         IF    ((@R1,EQ,'('),OR,(@R1,EQ,'"'),OR,(@R1,EQ,'''')),BEGIN            
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         L     R2,NSCNLOC                                                       
         L     R3,NSCNLEN                                                       
         IF    (@R1,EQ,'('),BEGIN                                               
         ACALL SCNPAREN                                                         
         END                                                                    
         ELSE  BEGIN                                                            
         ACALL SCNQUOTE                                                         
         END                                                                    
         ST    R0,NSCNTLEN                                                      
         ST    R1,NSCNTLOC                                                      
         ST    R2,NSCNLOC                                                       
         ST    R3,NSCNLEN                                                       
         IF    (R15,NZ),BEGIN                                                   
         LA    R2,NSCNCB                                                        
         ACALL BADPAREN                                                         
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                                                                
         IF    (@R1,EQ,';'),BEGIN  SPECIAL PROCESS ';', NULL SCAN               
         CLEAR NSCNTLEN            CLEAR TOKEN LENGTH                           
         CLEAR NSCNTOKL                                                         
         L     R1,NSCNTLOC         RESET REMAINING STRING LOC,LEN               
         L     R2,NSCNLOC                                                       
         A     R2,NSCNLEN                                                       
         SR    R2,R1                                                            
         ST    R1,NSCNLOC                                                       
         ST    R2,NSCNLEN                                                       
         END                                                                    
*                                                                               
SCNTDONE LABEL ,                                                                
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  SETTOKEN - SET TOKEN FIELDS IN SCAN CB                                      
**                                                                              
**  ON ENTRY:                                                                   
**    R2 - SCAN CB                                                              
**    NSCNTLOC - TOKEN LOC                                                      
**    NSCNTLEN - TOKEN LEN                                                      
**    R15 - ZERO, IF SCAN OK;  NEG, IF SCAN ERROR                               
**                                                                              
**  ON EXIT:                                                                    
**    R15 - SAME AS ON ENTRY                                                    
**    NSCNTOK - TOKEN UPPER CASE AND BLANK PADDED IN 16 CHAR FIELD              
**    NSCNCTOK - TOKEN UPLOW AND BLANK PADDED IN 16 CHAR FIELD                  
**    NSCNTOKL - MIN(TOKEN LEN, 16)                                             
**    BLANK SCAN OPTION PROCESSED HERE                                          
**                                                                              
*                                                                               
SETTOKEN PROC                                                                   
         USING NSCNCB,R6                                                        
         LR    R6,R2                                                            
         XPUSH R15                                                              
*                                                                               
         COMMENT                   BLANK TOKEN FIELDS                           
         L     R4,=A(TBLBLANK)                                                  
         MVC   NSCNTOK,@R4                                                      
         MVC   NSCNCTOK,@R4                                                     
         CLEAR NSCNTOKL                                                         
*                                                                               
         IF    ((R15,Z),AND,(NSCNTLEN,GT,0)),BEGIN                              
         L     R1,NSCNTLOC                                                      
         L     R3,NSCNTLEN                                                      
         CEIL  R3,16                                                            
         ST    R3,NSCNTOKL                                                      
         DECR  R3                                                               
         EX    R3,' MVC NSCNTOK(0),0(R1) '                                      
         EX    R3,' MVC NSCNCTOK(0),0(R1) '                                     
         L     R4,=A(TBLUPPER)                                                  
         EX    R3,' TR  NSCNTOK(0),0(R4) '                                      
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         END                                                                    
*                                                                               
         XPOP  R15                                                              
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  SETTYPE - DETERMINE TYPE                                                    
**                                                                              
**  ON ENTRY:                                                                   
**    R15 - ZERO, IF SCAN OK;  NEG, IF SCAN ERROR                               
**    SCAN CB - TOKEN LOC, LEN;                                                 
**                                                                              
**  ON EXIT:                                                                    
**    R15 - SAME AS ENTRY VALUE, ALSO                                           
**    SET TYPE FLAGS AS FOLLOWS, (VALUE SET FOR NUM, LNO TYPES):                
**       NULL - TOKEN LEN 0                                                     
**       LNO - LINE NUMBER (CONTAINS DECIMAL, VAL IS x1000)                     
**             (EG. 123.2  12. .123 12.2222222)                                 
**             (NOTE: LONG DECIMALS TRUNCATED TO 3 PLACES)                      
**       NUM - INTEGER NUMBER (MAY BE NEG)                                      
**             (EG. -123 +123 12)                                               
**       ERR - IF R15 NEG ON ENTRY                                              
**       TOKEN - ANY OTHER                                                      
**                                                                              
**                                                                              
**  NOTE:                                                                       
**  NO ERRORS ARE DETECTED BY THIS ROUTINE.  NUMBERS ARE CHECKED                
**  ONLY FOR MAX SIZE.  IF NUMBERS ARE INVALID, THEY WILL BE                    
**  TREATED AS TOKENS.  IF R15 IS NZ, THEN THE TYPE FLAG IS SET                 
**  TO ERROR.  THAT IS IT.                                                      
**                                                                              
*                                                                               
SETTWA   RECORD BEGIN                                                           
SETTFLG  FLAG                                                                   
         FLAG  SETTNEG             NEG NUMBER                                   
         FLAG  SETTDEC             DECIMAL ENCOUNTERED                          
         END                                                                    
*                                                                               
*                                                                               
SETTYPE  PROC  SETTWA                                                           
         USING NSCNCB,R6                                                        
         LR    R6,R2                                                            
         XPUSH R15                                                              
*                                                                               
         CLEAR SETTWA                                                           
*                                                                               
         COMMENT                   IF ERROR                                     
         IF    (R15,NZ),BEGIN                                                   
         CLEAR NSCNTYPE                                                         
         SET   NSCNFERR                                                         
         CLEAR NSCNTVAL                                                         
         B     SETTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF NULL                                      
         L     R0,NSCNTLEN                                                      
         IF    (R0,Z),BEGIN                                                     
         CLEAR NSCNTYPE                                                         
         SET   NSCNFNUL                                                         
         CLEAR NSCNTVAL                                                         
         B     SETTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   DETERMINE IF NUM,                            
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         LR    R5,R0                                                            
         L     R4,=A(SNUMBERX)                                                  
         DEX   R5,' TRT @R1(0),@R4 '                                            
         IF    Z,BEGIN                                                          
         IF    ((@R1,EQ,'+'),OR,(@R1,EQ,'-')),BEGIN                             
         INCR  R1                                                               
         DECR  R0                                                               
         IF    (@R1,EQ,'-'),BEGIN                                               
         SET   SETTNEG                                                          
         END                                                                    
         END                                                                    
         IF    ((R0,POS),AND,(R0,LE,9)),BEGIN                                   
         LR    R5,R0                                                            
         L     R4,=A(SNUMBER)                                                   
         DEX   R5,' TRT @R1(0),@R4 '                                            
         IF    Z,BEGIN             FOUND INTEGER, ,,,                           
         CLEAR NSCNTYPE            SET FLAG, GET INTEGER VALUE                  
         SET   NSCNFINT                                                         
         CLEAR R4                                                               
         CLEAR R5                                                               
         WHILE (R0,GT,0),BEGIN                                                  
         MH    R5,=H'10'                                                        
         IC    R4,@R1                                                           
         N     R4,=F'15' IE. X'0F'                                              
         AR    R5,R4                                                            
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
         IF    SETTNEG,' LNR R5,R5 '                                            
         ST    R5,NSCNTVAL                                                      
         B     SETTDONE                                                         
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   DETERMINE IF LNO,                            
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         LR    R5,R0                                                            
         L     R4,=A(SLINENOX)                                                  
         DEX   R5,' TRT @R1(0),@R4 '                                            
         IF    Z,BEGIN                                                          
         IF    ((@R1,EQ,'+'),OR,(@R1,EQ,'-')),BEGIN                             
         INCR  R1                                                               
         DECR  R0                                                               
         IF    (@R1,EQ,'-'),BEGIN                                               
         SET   SETTNEG                                                          
         END                                                                    
         END                                                                    
         IF    (R0,GE,2),BEGIN     (AT LEAST 1 NUM AND A DECIMAL)               
         LR    R5,R0                                                            
         L     R4,=A(SLINENO)                                                   
         DEX   R5,' TRT @R1(0),@R4 '                                            
         IF    Z,BEGIN                                                          
         LR    R4,R1               COUNT DECIMAL POINTS IN R3                   
         LR    R5,R0                                                            
         CLEAR R3                                                               
         WHILE (R5,GT,0),BEGIN                                                  
         IF    (@R4,EQ,'.'),' LA R3,1(R3) '                                     
         INCR  R4                                                               
         DECR  R5                                                               
         END                                                                    
         IF    (R3,EQ,1),BEGIN                                                  
         LR    R4,R1               COUNT DIGITS BEFORE DECIMAL                  
         CLEAR R3                                                               
         WHILE (@R4,NE,'.'),BEGIN                                               
         INCR  R3                                                               
         INCR  R4                                                               
         END                                                                    
         IF    (R3,LE,6),BEGIN     GOT LINE NUMBER, WHEW!                       
         CLEAR NSCNTYPE            SET FLAG, GET LNO VALUE  (x1000)             
         SET   NSCNFLNO                                                         
         CLEAR R4                                                               
         CLEAR R5                                                               
         CLEAR R3                                                               
         WHILE ((R0,GT,0),AND,(R3,LT,3)),BEGIN                                  
         IF    (@R1,EQ,'.'),BEGIN                                               
         SET   SETTDEC                                                          
         END                                                                    
         ELSE  BEGIN                                                            
         MH    R5,=H'10'                                                        
         IC    R4,@R1                                                           
         N     R4,=F'15' IE. X'0F'                                              
         AR    R5,R4                                                            
         IF    SETTDEC,' LA R3,1(R3) '                                          
         END                                                                    
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
         IF    (R3,Z),BEGIN                                                     
         MH  R5,=H'1000'                                                        
         END                                                                    
         ELSEIF (R3,EQ,1),BEGIN                                                 
         MH  R5,=H'100'                                                         
         END                                                                    
         ELSEIF (R3,EQ,2),BEGIN                                                 
         MH  R5,=H'10'                                                          
         END                                                                    
         IF    SETTNEG,' LNR R5,R5 '                                            
         ST    R5,NSCNTVAL                                                      
         IF    ((R5,NL),AND,(R5,LE,=A(SMAXLNO))),BEGIN                          
         B     SETTDONE                                                         
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   ALL OTHERS TREAT AS TOKEN                    
         CLEAR NSCNTYPE                                                         
         SET   NSCNFTOK                                                         
         CLEAR NSCNTVAL                                                         
*                                                                               
SETTDONE LABEL ,                                                                
         XPOP  R15                                                              
         PEND                                                                   
         DROP  R6                                                               
         SPACE 4                                                                
*                                                                               
*                                                                               
*  TYPE TRT TABLES                                                              
*                                                                               
*                                                                               
SNUMBER  LABEL ,                   VALID NUMBER                                 
         DC    256X'FF'                                                         
         ORG   SNUMBER+C'0'                                                     
         DC    10X'00'                                                          
         ORG                                                                    
*                                                                               
SNUMBERX LABEL ,                   VALID NUMBER  AND '+' '-'                    
         DC    256X'FF'                                                         
         ORG   SNUMBERX+C'0'                                                    
         DC    10X'00'                                                          
         ORG   SNUMBERX+C'+'                                                    
         DC    X'00'                                                            
         ORG   SNUMBERX+C'-'                                                    
         DC    X'00'                                                            
         ORG                                                                    
*                                                                               
SLINENO  LABEL ,                   VALID LINE NUMBER                            
         DC    256X'FF'                                                         
         ORG   SLINENO+C'0'                                                     
         DC    10X'00'                                                          
         ORG   SLINENO+C'.'                                                     
         DC    X'00'                                                            
         ORG                                                                    
*                                                                               
SLINENOX LABEL ,                   VALID LINE NO AND '+' '-'                    
         DC    256X'FF'                                                         
         ORG   SLINENOX+C'0'                                                    
         DC    10X'00'                                                          
         ORG   SLINENOX+C'.'                                                    
         DC    X'00'                                                            
         ORG   SLINENOX+C'+'                                                    
         DC    X'00'                                                            
         ORG   SLINENOX+C'-'                                                    
         DC    X'00'                                                            
         ORG                                                                    
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SCNPAREN - SCAN FOR PARM IN PARENTHESIS                                      
*                                                                               
*  RETURNS PARM/UNREC TYPES.  ENTRY CHARACTER MUST BE '('.                      
*  IF PARM PARENTHESIS MATCH WE GET PARM, ELSE WE GET UNREC.                    
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - TOKEN LENGTH                                                       
*       R1 - TOKEN LOCATION                                                     
*       R2 - REMAINDER LOCATION                                                 
*       R3 - REMAINDER LENGTH                                                   
*                                                                               
*  ON EXIT:                                                                     
*       R0 - TOKEN LENGTH                                                       
*       R1 - TOKEN LOCATION                                                     
*       R2 - REMAINDER LOCATION                                                 
*       R3 - REMAINDER LENGTH                                                   
*       R15 - ZERO, MATCHING PARENTHESIS FOUND                                  
*             NON-ZERO, NO MATCHING PARENTHESIS FOUND                           
*                                                                               
*  NOTES:  TOKEN CONCATENATED WITH THE REMAINDER EQUALS                         
*       THE ORIGINAL STRING STARTING AT THE TOKEN.  THAT IS                     
*       THE REMAINDER STRING IS NOT SCANNED TO GET RID OF                       
*       LEADING BLANKS, ETC.                                                    
*                                                                               
*                                                                               
*                                                                               
SCNPAREN PROC                                                                   
*                                                                               
         COMMENT                   1ST CHAR MUST BE '('                         
         IF    (@R1,NE,'('),BEGIN                                               
         BOMB                                                                   
         END                                                                    
*                                                                               
         COMMENT                   REMEBER START OF TOKEN                       
         LR    R6,R1               R6 - START OF TOKEN                          
*                                                                               
         COMMENT                   REJOIN TOKEN AND REMAINDER                   
         AR    R0,R3                                                            
*                                                                               
         COMMENT                   SKIP LEADING '('                             
         INCR  R1                                                               
         DECR  R0                                                               
*                                                                               
         COMMENT                   FIND CLOSE PARENTHESIS                       
         ACALL FINDPREN                                                         
*                                                                               
         COMMENT                   RETURN TOKEN, REMAINDER                      
         LR    R2,R1                                                            
         LR    R3,R0                                                            
         LR    R1,R6                                                            
         LR    R0,R2                                                            
         SR    R0,R1                                                            
*                                                                               
         PRETURN (R0,R3)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SCNQUOTE - SCAN FOR PARM IN QUOTES                                           
*                                                                               
*  RETURNS QUOTE/UNREC TYPES.  ENTRY CHARACTER MUST BE '"'                      
*  OR "'".  IF QUOTES MATCH WE GET PARM, ELSE WE GET UNREC.                     
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - TOKEN LENGTH                                                       
*       R1 - TOKEN LOCATION                                                     
*       R2 - REMAINDER LOCATION                                                 
*       R3 - REMAINDER LENGTH                                                   
*                                                                               
*  ON EXIT:                                                                     
*       R0 - TOKEN LENGTH                                                       
*       R1 - TOKEN LOCATION                                                     
*       R2 - REMAINDER LOCATION                                                 
*       R3 - REMAINDER LENGTH                                                   
*       R15 - ZERO, MATCHING PARENTHESIS FOUND                                  
*             NON-ZERO, NO MATCHING PARENTHESIS FOUND                           
*                                                                               
*  NOTES:  TOKEN CONCATENATED WITH THE REMAINDER EQUALS                         
*       THE ORIGINAL STRING STARTING AT THE TOKEN.  THAT IS                     
*       THE REMAINDER STRING IS NOT SCANNED TO GET RID OF                       
*       LEADING BLANKS, ETC.                                                    
*                                                                               
*                                                                               
*                                                                               
SCNQUOTE PROC                                                                   
*                                                                               
         COMMENT                   1ST CHAR MUST BE '('                         
         IF    ((@R1,NE,''''),AND,(@R1,NE,'"')),BEGIN                           
         BOMB                                                                   
         END                                                                    
*                                                                               
         COMMENT                   REMEBER START OF TOKEN                       
         LR    R6,R1               R6 - START OF TOKEN                          
*                                                                               
         COMMENT                   REJOIN TOKEN AND REMAINDER                   
         AR    R0,R3                                                            
*                                                                               
         COMMENT                   SKIP LEADING QUOTE                           
         INCR  R1                                                               
         DECR  R0                                                               
*                                                                               
         COMMENT                   FIND MATCHING QUOTE                          
         IF    (@R6,EQ,''''),BEGIN FIND SINGLE QUOTE, OR                        
         ACALL FINDSQUO                                                         
         END                                                                    
         IF    (@R6,EQ,'"'),BEGIN  FIND DOUBLE QUOTE                            
         ACALL FINDDQUO                                                         
         END                                                                    
*                                                                               
         COMMENT                   RETURN TOKEN, REMAINDER                      
         LR    R2,R1                                                            
         LR    R3,R0                                                            
         LR    R1,R6                                                            
         LR    R0,R2                                                            
         SR    R0,R1                                                            
*                                                                               
         PRETURN (R0,R3)                                                        
         PEND                                                                   
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  FIND CLOSE PARENTHESIS                                                       
*                                                                               
*  ON ENTRY:                                                                    
*       R0,R1 - TEXT LOC, LENGTH  (JUST PAST '(')                               
*                                                                               
*  ON EXIT:                                                                     
*       R0,R1 - TEXT LOC, LENGTH  (JUST PAST ')')                               
*       R15 - CC=ZERO, ')' FOUND                                                
*             CC=NZ, ')' NOT FOUND                                              
*                                                                               
*                                                                               
*                                                                               
FINDPREN PROC  ,                                                                
*                                                                               
         COMMENT                   LOOK FOR ')'                                 
         COMMENT                   R0,R1 - LOC, LEN OF STING                    
         L     R2,=A(FTBLPREN)     R2 - SCAN TABLE                              
         ACALL TRTSCAN             SCAN FOR ')' OR '''' OR '"'                  
*                                                                               
         COMMENT                   IF SCANNED OFF END OF STRING,                
         IF    (R0,NP),BEGIN                                                    
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   IF SCANNED CHAR, PROCESS IT                  
         ELSE  BEGIN               (GOT '(' ')' '''' OR '"')                    
*                                                                               
         COMMENT                   PROCESS SINGLE QUOTE                         
         IF    (@R1,EQ,''''),BEGIN                                              
         INCR  R1                                                               
         DECR  R0                                                               
         ACALL FINDSQUO                                                         
         IF    Z,BEGIN                                                          
         ACALL FINDPREN                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   PROCESS DOUBLE QUOTE                         
         ELSEIF (@R1,EQ,'"'),BEGIN                                              
         INCR  R1                                                               
         DECR  R0                                                               
         ACALL FINDDQUO                                                         
         IF    Z,BEGIN                                                          
         ACALL FINDPREN                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   PROCESS PARENTHESIS PAIR                     
         ELSEIF (@R1,EQ,'('),BEGIN                                              
         INCR  R1                                                               
         DECR  R0                                                               
         ACALL FINDPREN                                                         
         IF    Z,BEGIN                                                          
         ACALL FINDPREN                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   GOT IT !!, SKIP IT, AND EXIT                 
         ELSEIF (@R1,EQ,')'),BEGIN                                              
         INCR  R1                                                               
         DECR  R0                                                               
         CLEAR R15                 GOT IT !! CC=ZERO                            
         END                                                                    
*                                                                               
         COMMENT                    IF NONE OF THE ABOVE, BOMB                  
         ELSE  BEGIN                                                            
         BOMB                                                                   
         END                                                                    
         END , OF FOUND CHAR                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  FIND SINGLE QUOTE                                                            
*                                                                               
*  ON ENTRY:                                                                    
*       R0,R1 - TEXT LOC, LENGTH  (JUST PAST '''')                              
*                                                                               
*  ON EXIT:                                                                     
*       R0,R1 - TEXT LOC, LENGTH  (JUST PAST '''')                              
*       R15 - CC=ZERO, MATCHING QUOTE FOUND                                     
*             CC=NZ, MATCHING QUOTE NOT FOUND                                   
*                                                                               
*                                                                               
*                                                                               
FINDSQUO PROC  ,                                                                
*                                                                               
         COMMENT                   LOOK FOR ')'                                 
         COMMENT                   R0,R1 - LOC, LEN OF STING                    
         L     R2,=A(FTBLSQUO)     R2 - SCAN TABLE                              
         ACALL TRTSCAN             SCAN FOR ')' OR '''' OR '"'                  
*                                                                               
         COMMENT                   IF SCANNED OFF END OF STRING,                
         IF    (R0,NP),BEGIN                                                    
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   PROCESS SINGLE QUOTE                         
         COMMENT                   GOT IT, SKIP IT, EXIT                        
         ELSEIF (@R1,EQ,''''),BEGIN                                             
         INCR  R1                                                               
         DECR  R0                                                               
         CLEAR R15                 FOUND QUOTE, CC=ZERO                         
         COMMENT                                                                
         COMMENT                   IF TWO QUOTES, KEEP SCANNING                 
         IF    ((R0,POS),AND,(@R1,EQ,'''')),BEGIN                               
         INCR  R1                                                               
         DECR  R0                                                               
         ACALL FINDSQUO                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                    IF NONE OF THE ABOVE, BOMB                  
         ELSE  BEGIN                                                            
         BOMB                                                                   
         END                                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  FIND DOUBLE QUOTE                                                            
*                                                                               
*  ON ENTRY:                                                                    
*       R0,R1 - TEXT LOC, LENGTH  (JUST PAST '"')                               
*                                                                               
*  ON EXIT:                                                                     
*       R0,R1 - TEXT LOC, LENGTH  (JUST PAST '"')                               
*       R15 - CC=ZERO, MATCHING QUOTE FOUND                                     
*             CC=NZ, MATCHING QUOTE NOT FOUND                                   
*                                                                               
*                                                                               
FINDDQUO PROC  ,                                                                
*                                                                               
         COMMENT                   LOOK FOR ')'                                 
         COMMENT                   R0,R1 - LOC, LEN OF STING                    
         L     R2,=A(FTBLDQUO)     R2 - SCAN TABLE                              
         ACALL TRTSCAN             SCAN FOR ')' OR '''' OR '"'                  
*                                                                               
         COMMENT                   IF SCANNED OFF END OF STRING,                
         IF    (R0,NP),BEGIN                                                    
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   PROCESS DOUBLE QUOTE                         
         COMMENT                   GOT IT, SKIP IT, EXIT                        
         ELSEIF (@R1,EQ,'"'),BEGIN                                              
         INCR  R1                                                               
         DECR  R0                                                               
         CLEAR R15                 FOUND QUOTE, CC=ZERO                         
         COMMENT                                                                
         COMMENT                   IF TWO QUOTES, KEEP SCANNING                 
         IF    ((R0,POS),AND,(@R1,EQ,'"')),BEGIN                                
         INCR  R1                                                               
         DECR  R0                                                               
         ACALL FINDDQUO                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                    IF NONE OF THE ABOVE, BOMB                  
         ELSE  BEGIN                                                            
         BOMB                                                                   
         END                                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
*-                                                                              
*-       FIND TABLES - USED FOR FINDING AND MATCHING QUOTES AND                 
*-               PARENTHESIS PAIRS.                                             
*-                                                                              
*-                                                                              
FTBLPREN LABEL ,                   FIND PARENTHESIS TABLE                       
         DC    256X'0'                                                          
         ORG   FTBLPREN+C'('                                                    
         DC    X'4'                                                             
         ORG   FTBLPREN+C')'                                                    
         DC    X'4'                                                             
         ORG   FTBLPREN+C'"'                                                    
         DC    X'4'                                                             
         ORG   FTBLPREN+C''''                                                   
         DC    X'4'                                                             
         ORG                                                                    
         SPACE 4                                                                
FTBLSQUO LABEL ,                   FIND SINGLE QUOTE TABLE                      
         DC    256X'0'                                                          
         ORG   FTBLSQUO+C''''                                                   
         DC    X'4'                                                             
         ORG                                                                    
         SPACE 4                                                                
FTBLDQUO LABEL ,                   FIND DOUBLE QUOTE TABLE                      
         DC    256X'0'                                                          
         ORG   FTBLDQUO+C'"'                                                    
         DC    X'4'                                                             
         ORG                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TRTSCAN - SCAN WITH TRT COMMAND                                              
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - LENGTH OF STRING TO SCAN                                           
*       R1 - LOCATION OF STRING TO SCAN                                         
*       R2 - TRT TABLE                                                          
*            (SCAN STOPS AT FIRST CORRESPONDING NZ TRT CHAR)                    
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF REMAINING STRING                                         
*       R1 - LOCATION OF REMAINING STRING                                       
*            (STARTING AT FIRST NZ TRT CHAR)                                    
*      R15 - ZERO                                                               
*                                                                               
*                                                                               
TRTSCAN  PROC                                                                   
         IF    (R0,POS),BEGIN                                                   
         LR    R3,R0               R3 - LENGTH TO SCAN                          
         COMMENT                   R2 - TRT TABLE                               
         COMMENT                   R1 - START OF SCAN STRING                    
         AR    R0,R1               R0 - END OF SCAN STRING                      
         WHILE (R3,NZ),BEGIN                                                    
         LR    R4,R3                                                            
         CEIL  R4,256                                                           
         SR    R3,R4               Amount remaining next time                   
         DEX   R4,' TRT 0(0,R1),0(R2) ' SCAN WITH TRT                           
         IF    NZ,'B TRTSCEX'                                                   
         ELSE  'LA R1,1(R4,R1)'    Point at next part to do                     
         END                                                                    
*                                                                               
         LR    R1,R0                                                            
*                                                                               
TRTSCEX  LABEL ,                                                                
         SR    R0,R1                                                            
         END                                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         PEND                                                                   
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'STANDARD MATCH ROUTINES'                                        
*                                                                               
**                                                                              
**  NULL MATCH ROUTINE                                                          
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**                                                                              
*                                                                               
MNULL    XPROC ,                                                                
         USING NSCNCB,R2                                                        
*                                                                               
         IF    NSCNFNUL,BEGIN                                                   
         CLEAR R15                                                              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  MATCH ALL ROUTINE                                                           
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT:                                                                    
**       R1,R0 - TOKEN LOC,LEN                                                  
**                                                                              
**  NOTE !!                                                                     
**  WE DO NOT MATCH ALL, IF NULL TOKEN !                                        
**                                                                              
*                                                                               
MALL     XPROC ,                                                                
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   MATCH ALL EXCEPT NULL TOKEN                  
         IF    ^NSCNFNUL,BEGIN                                                  
         CLEAR R15                                                              
         L     R0,NSCNTLEN                                                      
         L     R1,NSCNTLOC                                                      
         PRETURN (R0,R1)                                                        
         END                                                                    
         ELSE  BEGIN               IF NULL, NO MATCH                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  MATCH NONE ROUTINE                                                          
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**                                                                              
*                                                                               
MNONE    XPROC ,                                                                
*                                                                               
         LA    R15,4                                                            
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  TOKEN MATCH ROUTINE                                                         
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON ENTRY, EXIT:                                                             
**  R1,R0 - LOC LEN OF TOKEN IN STRING                                          
**                                                                              
*                                                                               
MTOKEN   XPROC ,                                                                
         USING NSCNCB,R2                                                        
         USING NKW,R1                                                           
*                                                                               
         COMMENT                   COMPARE TOKEN                                
         IF    NSCNFTOK,BEGIN                                                   
         LA    R4,NKWTOK           R4,R5 - KEYWORD LOC,LEN                      
         LH    R5,NKWTOKL                                                       
         LA    R14,NSCNTOK         R14,R15 - TOKEN LOC,LEN                      
         L     R15,NSCNTOKL                                                     
         IF    (R5,GT,R15),BEGIN                                                
         IF    NKWFABBV,BEGIN      IF ABBREVIATE (3 CHAR MIN)                   
         LR    R5,R15                                                           
         FLOOR R15,3                                                            
         END                                                                    
         IF    NKWFAB1,BEGIN       IF ABBREVIATE (1 CHAR MIN)                   
         LR    R5,R15                                                           
         END                                                                    
         END                                                                    
         IF    (R15,EQ,R5),BEGIN   COMPARE                                      
         CLCL  R4,R14                                                           
         IF    EQ,BEGIN            FOUND                                        
         L     R0,NSCNTLEN         RETURN R1,R0 - TOKEN LOC LEN                 
         L     R1,NSCNTLOC                                                      
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         B     MTOKDONE                                                         
         END                                                                    
         END                                                                    
         END                                                                    
         LA    R15,4               NOT FOUND                                    
*                                                                               
MTOKDONE LABEL ,                                                                
         PEND                                                                   
         DROP  R2                                                               
         DROP  R1                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  OPTION TOKEN MATCH ROUTINE                                                  
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON ENTRY                                                                    
**    R1 - CONTAINS A POINTER TO THE KEYWORD ENTRY                              
**    R2 - CONTAINS POINTER TO SCAN CONTROL BLOCK                               
**                                                                              
**  ON EXIT:                                                                    
**    R1 - CONTAINS A POINTER TO THE KEYWORD ENTRY                              
*                                                                               
MOPTION  XPROC ,                                                                
         LR    R3,R1               Save pointer to SCKW                         
         ACALL MTOKEN              Match the token                              
         IF    (R15,Z),BEGIN                                                    
         LR    R1,R3                                                            
         PRETURN (R0,R1)                                                        
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCAN ROUTINE FOR OPTION MACRO                                               
**                                                                              
**  This routine performs the actual flag setting/                              
**  clearing for flags defined by the OPTION scan                               
**  macro.                                                                      
**                                                                              
**  ON ENTRY                                                                    
**    R1 - CONTAINS A POINTER TO THE KEYWORD ENTRY                              
**                                                                              
*                                                                               
SCNSCFLG XPROC ,                                                                
         USING NKW,R1                                                           
*                                                                               
* NKWPARM1 and NKWPARM2 are actually instructions which                         
* perform the proper operations. We only need to                                
* execute them. The instructions should refer only                              
* to flags that are addressable by registers 3-6                                
* or the CP and CV since those are the registers                                
* available to a SCAN routine on entry.                                         
*                                                                               
         EX    R0,NKWPARM2            Perform any reset                         
         EX    R0,NKWPARM1            Do the SET/CLEAR                          
         PEND                                                                   
         DROP  R1                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  INTEGER MATCH ROUTINE                                                       
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT:                                                                    
**    R0 - VALUE                                                                
**                                                                              
*                                                                               
MINT     XPROC ,                                                                
         USING NSCNCB,R2                                                        
         USING NKW,R1                                                           
*                                                                               
         IF    NSCNFINT,BEGIN      IF INTEGER                                   
         L     R0,NSCNTVAL                                                      
         COMMENT                   CHECK UPPER LIMIT                            
         IF    (NKWFP1,AND,(R0,GT,NKWPARM1)),BEGIN                              
         ACALL BADINT                                                           
         B     MINTDONE                                                         
         END                                                                    
         COMMENT                   CHECK LOWER LIMITS                           
         IF    (^NKWFSI,AND,(R0,NEG)),BEGIN                                     
         ACALL BADINT                                                           
         B     MINTDONE                                                         
         END                                                                    
         IF    (NKWFPI,AND,(R0,NP)),BEGIN                                       
         ACALL BADINT                                                           
         B     MINTDONE                                                         
         END                                                                    
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         ELSE  BEGIN               IF NOT INTEGER                               
         LA    R15,4                                                            
         END                                                                    
*                                                                               
MINTDONE LABEL ,                                                                
         CLEAR R1                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R2                                                               
         DROP  R1                                                               
MLNO     XPROC ,                                                                
         USING NSCNCB,R2                                                        
         USING NKW,R1                                                           
*                                                                               
         COMMENT                   IF INTEGER, CANNGE TO LNO                    
         IF    NSCNFINT,BEGIN                                                   
         L     R0,NSCNTVAL                                                      
         IF    ((R0,NEG),OR,(R0,GT,=A(SMAXLNO))),BEGIN                          
         ACALL BADLNO                                                           
         B     GOTLNO                                                           
         END                                                                    
         MH    R0,=H'1000'                                                      
         ST    R0,NSCNTVAL                                                      
         CLEAR NSCNTYPE                                                         
         SET   NSCNFLNO                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF LINE NUMBER ,,                            
         IF    NSCNFLNO,BEGIN                                                   
         L     R0,NSCNTVAL                                                      
         IF    ((R0,NEG),OR,(R0,GT,=A(SMAXLNO))),BEGIN                          
         ACALL BADLNO                                                           
         B     GOTLNO                                                           
         END                                                                    
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         ELSE  BEGIN               IF NOT LINE NUMBER                           
         LA    R15,4                                                            
         END                                                                    
*                                                                               
GOTLNO   LABEL ,                                                                
         CLEAR R1                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R2                                                               
         DROP  R1                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  QUOTED STRING MATCH ROUTINE                                                 
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT:                                                                    
**    R1,R0 - LOC,LENGTH OF QUOTED STRING                                       
**                                                                              
**  NOTE:                                                                       
**  WE ONLY CHECK FOR '"' OR '''' AS FIRST CHAR.                                
**  NO ERRORS ARE DETECTED OR RETURNED.                                         
**  STRING IS _NOT_ DEQUOTED.                                                   
**                                                                              
*                                                                               
MQUOTE   XPROC  ,                                                               
         USING NSCNCB,R2                                                        
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         IF    ((R0,POS),AND,((@R1,EQ,''''),OR,(@R1,EQ,'"'))),BEGIN             
         CLEAR R15                                                              
         PRETURN (R0,R1)                                                        
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  PARENTHESIZED TOKEN MATCH ROUTINE                                           
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT:                                                                    
**    R1,R0 - LOC,LENGTH OF PARENTHESIZED STRING                                
**                                                                              
**  NOTE:                                                                       
**  WE ONLY CHECK FOR '(' AS FIRST CHAR.                                        
**  NO ERRORS ARE DETECTED OR RETURNED.                                         
**  STRING IS _NOT_ DE-PARENTHESISZED.                                          
**                                                                              
*                                                                               
MPAREN   XPROC  ,                                                               
         USING NSCNCB,R2                                                        
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         IF    ((R0,POS),AND,(@R1,EQ,'(')),BEGIN                                
         CLEAR R15                                                              
         PRETURN (R0,R1)                                                        
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  N-CHAR MATCH ROUTINE                                                        
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT:                                                                    
**    R1,R0 - LOC,LENGTH OF _ENTIRE_ STRING                                     
**                                                                              
**  NOTE:                                                                       
**  ROUTINE DOES A ROOT STRING MATCH.  THAT IS,                                 
**  WE ONLY CHECK N CHARS FOR A MATCH, WE DO NOT CARE IF                        
**  STRING IS LONGER THAN THE MATCHING CHARS.  NO ERRORS                        
**  ARE DETECTED OR RETURNED.                                                   
**                                                                              
**  NOT DEBUGED !  REMOVE WHEN USED !                                           
*                                                                               
MNCHAR   XPROC  ,                                                               
         USING NKW,R1                                                           
         USING NSCNCB,R2                                                        
         LA    R4,NKWTOK                                                        
         LH    R5,NKWTOKL                                                       
         LA    R14,NSCNTOK                                                      
         L     R15,NSCNTOKL                                                     
         IF    (R5,LE,R15),BEGIN                                                
         LR    R15,R5                                                           
         CLCL  R4,R14                                                           
         IF    EQ,BEGIN                                                         
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
         PEND                                                                   
         DROP  R1                                                               
         DROP  R2                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'PARM MATCH ROUTINES'                                            
*                                                                               
**                                                                              
**  TOKEN W/PARM MATCH ROUTINE                                                  
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT, IF MATCH:                                                          
**  R1,R0 - LOC LEN OF PARM STRING                                              
**                                                                              
*                                                                               
*                                                                               
MPARM    XPROC                                                                  
*                                                                               
         COMMENT                   CHECK PARM KEYWORD                           
         XPUSH R0,R1                                                            
         ACALL MTOKEN                                                           
         XPOP  R0,R1                                                            
*                                                                               
         COMMENT                   IF CORRECT KEYWORD, GET PARM                 
         IF    (R15,Z),BEGIN                                                    
         ACALL DOPARM                                                           
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  DO PARM                                                                     
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - KEYWORD TABLE ENTRY                                                  
**    R2 - SCAN CONTROL BLOCK                                                   
**                                                                              
**                                                                              
**  ON EXIT:                                                                    
**    R1,R0 - PARM STRING LOC LEN                                               
**    R2 - SCAN CB, SCAN CB IS UPDATED TO CONTAIN SCANNED PARM                  
**    R15 - ZERO, IF NO ERROR IN SCANNING PARM                                  
**    R15 - NEG, IF ERROR IN SCANNING PARM                                      
**         NSCNFERR FLAG SET, NSCNMSG,NSCNMSGL - ERROR MSG !                    
**                                                                              
**  NOTE:                                                                       
**    SCAN PARM USES SAME OPTIONS AS PARENT SCAN, IE. THE                       
**    PARM SCAN USES THE SAME SKIP/STOP TABLE AND SCAN PARMS.                   
**    IF YOU DO NOT WANT THIS, YOU MUST SCAN YOUR OWN PARM.                     
**                                                                              
*                                                                               
PARMWA   RECORD BEGIN                                                           
PARMKW   DS    CL(L'NSCNTOK)                                                    
PARMKWL  DS    F                                                                
         END                                                                    
*                                                                               
*                                                                               
DOPARM   PROC  PARMWA                                                           
         USING NKW,R1                                                           
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   SAVE SCANNED KEYWORD                         
         MVC   PARMKW,NSCNCTOK                                                  
         L     R4,NSCNTOKL                                                      
         ST    R4,PARMKWL                                                       
*                                                                               
         COMMENT                   SCAN PARM                                    
         ACALL SCNTOKEN                                                         
         ACALL SETTOKEN                                                         
         ACALL SETTYPE                                                          
*                                                                               
*  HANDLE SCAN ERRORS                                                           
*                                                                               
         COMMENT                   IF ERROR,, RETURN ERROR                      
         IF    (R15,NZ),BEGIN                                                   
         END                                                                    
*                                                                               
         COMMENT                   IF NULL,, NULL PARM IS ERROR                 
         ELSEIF NSCNFNUL,BEGIN                                                  
         LA    R4,PARMKW                                                        
         L     R5,PARMKWL                                                       
         ACALL MISSPARM            SET MISSING PARM MESSAGE                     
         END                                                                    
*                                                                               
         COMMENT                   IF PARM OK                                   
         ELSE  BEGIN                                                            
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         L     R0,NSCNTLEN                                                      
         L     R1,NSCNTLOC                                                      
         PRETURN (R0,R1)                                                        
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
         DROP  R1                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  TOKEN W/INTEGER PARM MATCH ROUTINE                                          
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT, IF FOUND:                                                          
**  R0 - VALUE                                                                  
**                                                                              
*                                                                               
*                                                                               
MPINT XPROC                                                                     
*                                                                               
         COMMENT                   CHECK PARM KEYWORD                           
         XPUSH R0,R1                                                            
         ACALL MTOKEN                                                           
         XPOP  R0,R1                                                            
*                                                                               
         COMMENT                   IF CORRECT KEYWORD, GET PARM                 
         IF    (R15,Z),BEGIN                                                    
         ACALL DOPINT                                                           
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  DO INTEGER PARM                                                             
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - KEYWORD TABLE ENTRY                                                  
**    R2 - SCAN CONTROL BLOCK                                                   
**                                                                              
**                                                                              
**  ON EXIT:                                                                    
**    R0 - INTEGER VALUE                                                        
**    R2 - SCAN CB, SCAN CB IS UPDATED TO CONTAIN SCANNED PARM                  
**    R15 - ZERO, IF NO ERROR IN SCANNING PARM                                  
**    R15 - NEG, IF ERROR IN SCANNING PARM                                      
**         NSCNFERR FLAG SET, NSCNMSG,NSCNMSGL - ERROR MSG !                    
**                                                                              
**  NOTE:                                                                       
**    SCAN PARM USES SAME OPTIONS AS PARENT SCAN, IE. THE                       
**    PARM SCAN USES THE SAME SKIP/STOP TABLE AND SCAN PARMS.                   
**    IF YOU DO NOT WANT THIS, YOU MUST SCAN YOUR OWN PARM.                     
**                                                                              
*                                                                               
DOPINT   PROC  PARMWA                                                           
         USING NKW,R1                                                           
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   SAVE SCANNED KEYWORD                         
         MVC   PARMKW,NSCNCTOK                                                  
         L     R4,NSCNTOKL                                                      
         ST    R4,PARMKWL                                                       
*                                                                               
         COMMENT                   SCAN PARM                                    
         ACALL SCNTOKEN                                                         
         ACALL SETTOKEN                                                         
         ACALL SETTYPE                                                          
*                                                                               
*  HANDLE SCAN ERRORS                                                           
*                                                                               
         COMMENT                   IF ERROR,, RETURN ERROR                      
         IF    (R15,NZ),BEGIN                                                   
         B     PINTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF NULL,, NULL PARM IS ERROR                 
         IF    NSCNFNUL,BEGIN                                                   
         LA    R4,PARMKW                                                        
         L     R5,PARMKWL                                                       
         ACALL MISSPARM            SET MISSING PARM MESSAGE                     
         B     PINTDONE                                                         
         END                                                                    
*                                                                               
         IF    ^NSCNFINT,BEGIN     CHECK FOR VALID INT TYPE, RANGE              
         ACALL BADINT                                                           
         B     PINTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   CHECK UPPER LIMIT                            
         L     R0,NSCNTVAL                                                      
         IF    (NKWFP1,AND,(R0,GT,NKWPARM1)),BEGIN                              
         ACALL BADINT                                                           
         B     PINTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   CHECK LOWER LIMITS                           
         IF    (^NKWFSI,AND,(R0,NEG)),BEGIN                                     
         ACALL BADINT                                                           
         B     PINTDONE                                                         
         END                                                                    
         IF    (NKWFPI,AND,(R0,NP)),BEGIN                                       
         ACALL BADINT                                                           
         B     PINTDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   VALUE OK                                     
         CLEAR R1                                                               
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
*                                                                               
PINTDONE LABEL ,                                                                
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
         DROP  R1                                                               
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
**                                                                              
**  TOKEN W/LINE NUMBER PARM MATCH ROUTINE                                      
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT, IF MATCH:                                                          
**  R0 - VALUE                                                                  
**                                                                              
*                                                                               
*                                                                               
MPLNO    XPROC                                                                  
*                                                                               
         COMMENT                   CHECK PARM KEYWORD                           
         XPUSH R0,R1                                                            
         ACALL MTOKEN                                                           
         XPOP  R0,R1                                                            
*                                                                               
         COMMENT                   IF CORRECT KEYWORD, GET PARM                 
         IF    (R15,Z),BEGIN                                                    
         ACALL DOPLNO                                                           
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  DO LINE NUMBER PARM                                                         
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - NKW                                                                  
**    R2 - SCAN CONTROL BLOCK                                                   
**                                                                              
**                                                                              
**  ON EXIT:                                                                    
**    R0 - LINE NUMBER VALUE                                                    
**    R2 - SCAN CB, SCAN CB IS UPDATED TO CONTAIN SCANNED PARM                  
**    R15 - ZERO, IF NO ERROR IN SCANNING PARM                                  
**    R15 - NEG, IF ERROR IN SCANNING PARM                                      
**         NSCNFERR FLAG SET, NSCNMSG,NSCNMSGL - ERROR MSG !                    
**                                                                              
**  NOTE:                                                                       
**    PARM SCAN USES DEFAULT SKIP/STOP TABLE ON OPTION SCAN.                    
**    IF YOU DO NOT WANT THIS, YOU MUST SCAN YOUR OWN PARM.                     
**                                                                              
*                                                                               
DOPLNO   PROC  PARMWA                                                           
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   GET KEYWORD LOC,LEN                          
         MVC   PARMKW,NSCNCTOK                                                  
         LA    R4,PARMKW                                                        
         L     R5,NSCNTLEN                                                      
*                                                                               
         COMMENT                   SCAN FOR LNO                                 
         SCAN  PLNOPRT                                                          
         IF    (R15,NEG),BEGIN                                                  
         END                                                                    
         ELSEIF (R15,EQ,4),BEGIN                                                
         LR    R0,R4                                                            
         LR    R1,R5                                                            
         CLEAR R15                                                              
         PRETURN (R0,R1)                                                        
         END                                                                    
         ELSE  BEGIN                                                            
         BOMB                                                                   
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
*                                                                               
*  PARM SCKWS AND ROUTINES                                                      
*                                                                               
PLNOPRT  SCKW  ,PLNONULL,NULL                                                   
         SCKW  ,PLNOOK,LN                                                       
         SCKW  ,PLNOBAD                                                         
*                                                                               
PLNONULL PROC  ,                                                                
         ACALL MISSPARM                                                         
         PEND                                                                   
*                                                                               
PLNOOK   PROC  ,                                                                
         LR    R4,R0                                                            
         LR    R5,R1                                                            
         LA    R15,4                                                            
         PRETURN (R4,R5)                                                        
         PEND                                                                   
*                                                                               
PLNOBAD  PROC  ,                                                                
         ACALL BADLNO                                                           
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  TOKEN W/SYMBOLIC LINE NUMBER PARM MATCH ROUTINE                             
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT, IF MATCH:                                                          
**  R0 - VALUE                                                                  
**  R1 - DELTA                                                                  
**                                                                              
*                                                                               
*                                                                               
MPSYMLN  XPROC                                                                  
*                                                                               
         COMMENT                   CHECK PARM KEYWORD                           
         XPUSH R0,R1                                                            
         ACALL MTOKEN                                                           
         XPOP  R0,R1                                                            
*                                                                               
         COMMENT                   IF CORRECT KEYWORD, GET PARM                 
         IF    (R15,Z),BEGIN                                                    
         ACALL DOPSYMLN                                                         
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  DO SYMBOLIC LINE NUMBER PARM                                                
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - NKW                                                                  
**    R2 - SCAN CONTROL BLOCK                                                   
**                                                                              
**                                                                              
**  ON EXIT:                                                                    
**    R0 - LINE NUMBER VALUE                                                    
**    R1 - DELTA                                                                
**    R2 - SCAN CB, SCAN CB IS UPDATED TO CONTAIN SCANNED PARM                  
**    R15 - ZERO, IF NO ERROR IN SCANNING PARM                                  
**    R15 - NEG, IF ERROR IN SCANNING PARM                                      
**         NSCNFERR FLAG SET, NSCNMSG,NSCNMSGL - ERROR MSG !                    
**                                                                              
**  NOTE:                                                                       
**    PARM SCAN USES DEFAULT SKIP/STOP TABLE ON OPTION SCAN.                    
**    IF YOU DO NOT WANT THIS, YOU MUST SCAN YOUR OWN PARM.                     
**                                                                              
*                                                                               
DOPSYMLN PROC  PARMWA                                                           
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   GET KEYWORD LOC,LEN                          
         MVC   PARMKW,NSCNCTOK                                                  
         LA    R4,PARMKW                                                        
         L     R5,NSCNTLEN                                                      
*                                                                               
         COMMENT                   SCAN FOR SYMLNO                              
         SCAN  PSYMPRT                                                          
         IF    (R15,NEG),BEGIN                                                  
         END                                                                    
         ELSEIF (R15,EQ,4),BEGIN                                                
         LR    R0,R4                                                            
         LR    R1,R5                                                            
         CLEAR R15                                                              
         PRETURN (R0,R1)                                                        
         END                                                                    
         ELSE  BEGIN                                                            
         BOMB                                                                   
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
*                                                                               
*  PARM SCKWS AND ROUTINES                                                      
*                                                                               
PSYMPRT  SCKW  ,PSYMNULL,NULL                                                   
         SCKW  ,PSYMOK,SYMLN                                                    
         SCKW  ,PSYMBAD                                                         
*                                                                               
PSYMNULL PROC  ,                                                                
         ACALL MISSPARM                                                         
         PEND                                                                   
*                                                                               
PSYMOK   PROC  ,                                                                
         LR     R4,R0                                                           
         LR     R5,R1                                                           
         LA    R15,4                                                            
         PRETURN (R4,R5)                                                        
         PEND                                                                   
*                                                                               
PSYMBAD  PROC  ,                                                                
         ACALL BADLNO                                                           
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  TOKEN W/COLUMN PARM MATCH ROUTINE                                           
**                                                                              
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT, IF MATCH:                                                          
**  R0 - FIRST COL                                                              
**  R1 - SECOND COL (0 IF NONE)                                                 
**                                                                              
*                                                                               
*                                                                               
MPCOLS   XPROC                                                                  
*                                                                               
         COMMENT                   CHECK PARM KEYWORD                           
         XPUSH R0,R1                                                            
         ACALL MTOKEN                                                           
         XPOP  R0,R1                                                            
*                                                                               
         COMMENT                   IF CORRECT KEYWORD, GET PARM                 
         IF    (R15,Z),BEGIN                                                    
         ACALL DOPCOLS                                                          
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  DO COLS PARM                                                                
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - NKW                                                                  
**    R2 - SCAN CONTROL BLOCK                                                   
**                                                                              
**                                                                              
**  ON EXIT:                                                                    
**    R0 - STARTING COL                                                         
**    R1 - FIELD LEN                                                            
**    R2 - SCAN CB, SCAN CB IS UPDATED TO CONTAIN SCANNED PARM                  
**    R15 - ZERO, IF NO ERROR IN SCANNING PARM                                  
**    R15 - NEG, IF ERROR IN SCANNING PARM                                      
**         NSCNFERR FLAG SET, NSCNMSG,NSCNMSGL - ERROR MSG !                    
**                                                                              
**  NOTE:                                                                       
**    PARM SCAN USES DEFAULT SKIP/STOP TABLE ON OPTION SCAN.                    
**    IF YOU DO NOT WANT THIS, YOU MUST SCAN YOUR OWN PARM.                     
**                                                                              
*                                                                               
DOPCOLS  PROC  PARMWA                                                           
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   GET KEYWORD LOC,LEN                          
         MVC   PARMKW,NSCNCTOK                                                  
         LA    R4,PARMKW                                                        
         L     R5,NSCNTLEN                                                      
*                                                                               
         COMMENT                   SCAN FOR SYMLNO                              
         SCAN  PCOLPRT                                                          
         IF    (R15,NEG),BEGIN                                                  
         END                                                                    
         ELSEIF (R15,EQ,4),BEGIN                                                
         LR    R0,R4                                                            
         LR    R1,R5                                                            
         CLEAR R15                                                              
         PRETURN (R0,R1)                                                        
         END                                                                    
         ELSE  BEGIN                                                            
         BOMB                                                                   
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
*                                                                               
*  PARM SCKWS AND ROUTINES                                                      
*                                                                               
PCOLPRT  SCKW  ,PCOLNULL,NULL                                                   
         SCKW  ,PCOLOK,A(MCOLS)                                                 
         SCKW  ,PCOLBAD                                                         
*                                                                               
PCOLNULL PROC  ,                                                                
         ACALL MISSPARM                                                         
         PEND                                                                   
*                                                                               
PCOLOK   PROC  ,                                                                
         LR     R4,R0                                                           
         LR     R5,R1                                                           
         LA    R15,4                                                            
         PRETURN (R4,R5)                                                        
         PEND                                                                   
*                                                                               
PCOLBAD  PROC  ,                                                                
         ACALL BADTOKEN                                                         
         PEND                                                                   
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'COMPLEX MATCH ROUTINES'                                         
*                                                                               
**                                                                              
**  MSYMLN - MATCH SYMBOLIC LINE NUMBER                                         
**                                                                              
**  E.G.  FIRST+1, 123.012, NEXT+.001                                           
**  FOR MORE DETAILS TYPE 'HELP LINE NUMBER'                                    
**                                                                              
**  STANDARD MATCH ROUTINE PARMAMETERS PASSED.                                  
**  SEE COMMENTS AT START OF MODULE.                                            
**                                                                              
**  ON EXIT:                                                                    
**    R0 - LINE NUMBER VALUE                                                    
**    R1 - DELTA VALUE                                                          
**                                                                              
**                                                                              
*                                                                               
MSLWA    RECORD BEGIN                                                           
MSLLNO   DS    F                                                                
MSLDELTA DS    F                                                                
MSLINCR  DS    F                                                                
MSLSTART DS    A                   START OF SYMBOLIC TOKEN(S)                   
MSLFLAGS FLAG  ,                                                                
         FLAG  MSLACT              SELECT FROM ACTIVE                           
         FLAG  MSLEXTRN            SELECT FROM EXTERNAL                         
         FLAG  MSLEXEC             SELECT FROM EXEC                             
         FLAG  MSLNOCUR            OK NOT TO HAVE CURRENT                       
         END                                                                    
*                                                                               
*                                                                               
MSYMLN   XPROC MSLWA                                                            
         USING NSCNCB,R2                                                        
         LA    R6,MSLWA                                                         
         USING MSLWA,R6                                                         
*                                                                               
         COMMENT                   INIT WORK AREA                               
         CLEAR MSLWA                                                            
         IF    (CPFRDACT,OR,(CPFRDSRC,Z)),BEGIN   IF ACTIVE,,                   
         SET   MSLACT                                                           
         END                                                                    
         ELSEIF CPFRDEXE,BEGIN                                                  
         SET   MSLEXEC                                                          
         END                                                                    
         ELSEIF CPFRDEXT,BEGIN                                                  
         SET   MSLEXTRN                                                         
         END                                                                    
         ELSE  BEGIN                                                            
         SET   MSLACT AS DEFAULT                                                
         END                                                                    
         IF    ('TM CPLFLG4,CPFNOCUR',O),BEGIN                                  
         SET   MSLNOCUR                                                         
         END                                                                    
         L     R0,CPDELTA          SET DEFAULT DELTA                            
         ST    R0,MSLDELTA                                                      
*                                                                               
         COMMENT                   SAVE SCAN STATE                              
         SCPUSH ,                                                               
         L     R0,NSCNTLOC                                                      
         ST    R0,MSLSTART                                                      
         SCBKUP                                                                 
*                                                                               
         COMMENT                   SCAN                                         
         SCAN  MSMPRT                                                           
         IF    (R15,Z),' BOMB '    R15 MUST BE SET ON ALL RETURNS               
         IF    (R15,EQ,4),BEGIN    NORMAL TERMINATION W/MATCH                   
         CLEAR R15                                                              
         END                                                                    
         IF    (R15,EQ,8),BEGIN    NORMAL TERMINATION NO/MATCH                  
         SCPOP ,                                                                
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   IF MATCH, RETURN R0,R1                       
         IF    (R15,Z),BEGIN                                                    
         L     R0,MSLLNO                                                        
         L     R1,MSLDELTA                                                      
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  SYMBOLIC LINE NO SCKWS                                                       
*                                                                               
MSMPRT   SCKW  ,MSMLNO,LN                                                       
         SCKW  F,MSMFRST                                                        
         SCKW  L,MSMLAST                                                        
         SCKW  FIRST,MSMFRST,A                                                  
         SCKW  LAST,MSMLAST,A                                                   
         SCKW  CURRENT,MSMCURR,A                                                
         SCKW  NEXT,MSMNEXT,A                                                   
         SCKW  PREVIOUS,MSMPREV,A                                               
         SCKW  END,MSMEND                                                       
         SCKW  FBLOCK,MSMFBLK,A                                                 
         SCKW  LBLOCK,MSMLBLK,A                                                 
         SCKW  RETURN,MSMRETN,A                                                 
         SCKW  *,MSMCURR                                                        
*IOWA*   SCKW  ATTN,MSMATTN,A                                                   
*IOWA*   SCKW  ATTENTION,MSMATTN,A                                              
*IOWA*   SCKW  ABORT,MSMABRT,A                                                  
         SCKW  ,MSMNOMAT,NULL                                                   
         SCKW  ,MSMNOMAT,END                                                    
*                                                                               
*                                                                               
MSMLNO   PROC  ,                                                                
         ST    R0,MSLLNO                                                        
         ACALL DODELTA                                                          
         ST    R0,MSLDELTA                                                      
         ACALL DOINCR                                                           
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMFRST  PROC  ,                                                                
         IF    MSLACT,BEGIN                                                     
         L     R0,CPAFLNO                                                       
         END                                                                    
         ELSEIF MSLEXTRN,BEGIN                                                  
         CLEAR R0                                                               
         END                                                                    
         ELSEIF MSLEXEC,BEGIN                                                   
         VCALL EXFRSTLN                                                         
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMLAST  PROC  ,                                                                
         IF    MSLACT,BEGIN                                                     
         L     R0,CPALLNO                                                       
         END                                                                    
         ELSEIF MSLEXTRN,BEGIN                                                  
         L     R0,CVMAXLNO                                                      
         END                                                                    
         ELSEIF MSLEXEC,BEGIN                                                   
         VCALL EXLASTLN                                                         
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMCURR  PROC  ,                                                                
         IF    MSLACT,BEGIN                                                     
         L     R0,CPACLNO                                                       
         END                                                                    
         ELSEIF MSLEXTRN,BEGIN                                                  
         ACALL BADTOKEN                                                         
         B     MSMCDONE                                                         
         END                                                                    
         ELSEIF MSLEXEC,BEGIN                                                   
         L     R0,CPEXLINE                                                      
         IF    (R0,NEG),BEGIN                                                   
         L     R0,=F'-1000'                                                     
         END                                                                    
         END                                                                    
         IF    ((R0,NEG),AND,^MSLNOCUR),BEGIN                                   
         SCSEG 'Current line not set. '                                         
         B     MSMCDONE                                                         
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
MSMCDONE LABEL ,                                                                
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMNEXT  PROC  ,                                                                
         IF    MSLACT,BEGIN                                                     
         L     R0,CPACLNO                                                       
         CLEAR R1                                                               
         VCALL GTNEXTLN                                                         
         IF    NZ,BEGIN                                                         
         L     R0,=F'-1000'                                                     
         END                                                                    
         END                                                                    
         ELSEIF MSLEXTRN,BEGIN                                                  
         ACALL BADTOKEN                                                         
         B     MSMNDONE                                                         
         END                                                                    
         ELSEIF MSLEXEC,BEGIN                                                   
         L     R0,CPEXLINE                                                      
         VCALL EXNEXTLN                                                         
         IF    NZ,BEGIN                                                         
         L     R0,=F'-1000'                                                     
         END                                                                    
         END                                                                    
         IF    ((R0,NEG),AND,^MSLNOCUR),BEGIN                                   
         SCSEG 'Next line not set. '                                            
         B     MSMNDONE                                                         
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
MSMNDONE LABEL ,                                                                
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMPREV  PROC  ,                                                                
         IF    MSLACT,BEGIN                                                     
         L     R0,CPACLNO                                                       
         CLEAR R1                                                               
         VCALL GTPREVLN                                                         
         IF    NZ,BEGIN                                                         
         L     R0,=F'-1000'                                                     
         END                                                                    
         END                                                                    
         ELSEIF MSLEXTRN,BEGIN                                                  
         ACALL BADTOKEN                                                         
         B     MSMPDONE                                                         
         END                                                                    
         ELSEIF MSLEXEC,BEGIN                                                   
         L     R0,CPEXLINE                                                      
         VCALL EXPREVLN                                                         
         IF    NZ,BEGIN                                                         
         L     R0,=F'-1000'                                                     
         END                                                                    
         END                                                                    
         IF    ((R0,NEG),AND,^MSLNOCUR),BEGIN                                   
         SCSEG 'Previous line not set. '                                        
         B     MSMPDONE                                                         
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
MSMPDONE LABEL ,                                                                
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMEND   PROC  ,                                                                
         IF    MSLACT,BEGIN                                                     
         VCALL ENDLNO                                                           
         IF    M,BEGIN                                                          
         ACALL BADTOKEN                                                         
         B     MSMEDONE                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         ACALL BADTOKEN                                                         
         B     MSMEDONE                                                         
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
MSMEDONE LABEL ,                                                                
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMFBLK  PROC  ,                                                                
         L     R0,CPFBKLNO                                                      
         IF    ((CPBLKACT,Z),OR,(CPVFHIDE)),BEGIN                               
         L     R0,=F'-1000'                                                     
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMLBLK  PROC  ,                                                                
         L     R0,CPLBKLNO                                                      
         IF    ((CPBLKACT,Z),OR,(CPVFHIDE)),BEGIN                               
         L     R0,=F'-1000'                                                     
         END                                                                    
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMRETN  PROC  ,                                                                
         L     R0,CPRETURN                                                      
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMATTN  PROC  ,                                                                
         L     R0,CPEXATTN                                                      
         IF    (R0,Z),BEGIN                                                     
         SCSEG 'ATTN line number not set.'                                      
         END                                                                    
         ELSE  BEGIN                                                            
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
         END                                                                    
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMABRT  PROC  ,                                                                
         L     R0,CPEXABRT                                                      
         IF    (R0,Z),BEGIN                                                     
         SCSEG 'ABORT line number not set.'                                     
         END                                                                    
         ELSE  BEGIN                                                            
         ST    R0,MSLLNO                                                        
         ACALL DOINCR                                                           
         END                                                                    
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMNOMAT PROC  ,                   NO MATCH                                     
         LA    R15,8               SET SCAN RESTORE FLAG                        
         PEND  ,                   QUIT SCAN                                    
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
**                                                                              
**  DO INCR                                                                     
**                                                                              
**  ALLOW ONE INCREMENT (DECREMENT) FOR SYMBOLIC LINE NUMBER                    
**                                                                              
**  ON EXIT:                                                                    
**    R15 - 4 IF ALL OK, NEG - IF ERROR                                         
**                                                                              
**  NOTE!                                                                       
**  SET R15 TO 4 IF ALL OK (IF GOOD INCR OR NO INCR)                            
**                                                                              
*                                                                               
DOINCR   PROC ,                                                                 
*                                                                               
         COMMENT                   SAVE SCAN                                    
         SCPUSH ,                                                               
*                                                                               
         COMMENT                   SCAN FOR INCRMENT/DECREMENT                  
         SCAN  INCRPRT                                                          
         IF    (R15,EQ,8),BEGIN                                                 
         SCPOP ,                                                                
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PEND  ,                                                                
*                                                                               
*  INCR SCKWS                                                                   
*                                                                               
INCRPRT  SCKW +,MSMINCR                                                         
         SCKW -,MSMDECR                                                         
         SCKW ,MSMNOINC,NULL                                                    
         SCKW ,MSMNOINC                                                         
*                                                                               
IVALPRT  SCKW ,MSMIVAL,LN                                                       
         SCKW DELTA,MSMDELTA,A                                                  
         SCKW ,MSMBADVL,NULL                                                    
         SCKW ,MSMBADVL                                                         
*                                                                               
*                                                                               
MSMINCR  PROC  ,                                                                
         SCAN  IVALPRT                                                          
         IF    (R15,EQ,4),BEGIN                                                 
         L     R0,MSLLNO                                                        
         A     R0,MSLINCR                                                       
         ST    R0,MSLLNO                                                        
         IF    ((R0,NEG),OR,(R0,GT,CVMAXLNO)),BEGIN                             
         ACALL MSBADVAL                                                         
         END                                                                    
         END                                                                    
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMDECR  PROC  ,                                                                
         SCAN  IVALPRT                                                          
         IF    (R15,EQ,4),BEGIN                                                 
         L     R0,MSLLNO                                                        
         S     R0,MSLINCR                                                       
         ST    R0,MSLLNO                                                        
         IF    ((R0,NEG),OR,(R0,GT,CVMAXLNO)),BEGIN                             
         ACALL MSBADVAL                                                         
         END                                                                    
         END                                                                    
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMNOINC PROC  ,                                                                
         LA    R15,8                                                            
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMDELTA PROC  ,                                                                
         L     R0,CPDELTA                                                       
         ST    R0,MSLINCR                                                       
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMIVAL  PROC  ,                                                                
         ST    R0,MSLINCR                                                       
         ACALL DODELTA                                                          
         ST    R0,MSLDELTA                                                      
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
*                                                                               
MSMBADVL PROC  ,                                                                
         ACALL MSBADVAL                                                         
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  DODELTA                                                                     
**                                                                              
**  INSPECT SCANNED NUMBER AND FIGURE DELTA ...                                 
**  (EG. 123.1 => DELTA = .1;  2.003 => DELTA = .001;                           
**       12 => DELTA = CPDELTA )                                                
**                                                                              
**  ON ENTRY:                                                                   
**    R2 - SCAN CONTROL BLOCK                                                   
**  ON EXIT:                                                                    
**    R0 - DELTA                                                                
**                                                                              
**                                                                              
*                                                                               
DODELTA  PROC ,                                                                 
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   SCAN NUMBER UNTIL '.'                        
         L     R0,NSCNTLEN                                                      
         L     R1,NSCNTLOC                                                      
         WHILE ((R0,POS),AND,(@R1,NE,'.')),BEGIN                                
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         COMMENT                   SKIP '.'                                     
         INCR  R1                                                               
         DECR  R0                  R0 = # OF TRAILING CHARS                     
         COMMENT ,                 (ASSUME THEY ARE ALL NUMBERS !)              
*                                                                               
         COMMENT                   FIGURE DELTA                                 
         IF    (R0,GE,3),BEGIN                                                  
         LA    R0,1                                                             
         END                                                                    
         ELSEIF (R0,EQ,2),BEGIN                                                 
         LA    R0,10                                                            
         END                                                                    
         ELSEIF (R0,EQ,1),BEGIN                                                 
         LA    R0,100                                                           
         END                                                                    
         ELSE  BEGIN                                                            
         L     R0,CPDELTA                                                       
         END                                                                    
*                                                                               
         PRETURN (R0)                                                           
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*  MIMPLIED - MATCH IMPLIED LINE NUMBER                                         
*                                                                               
*  THIS IS THE SAME AS MATCHING A SYMBOLIC LINE NUMBER WITH                     
*  THE EXCEPTION THAT NO BLANKS ARE ALLOWED IN THE NUMBER.                      
*  TO SEE WHY, CONSIDER:                                                        
*    PUTLINE NEXT +.01                                                          
*  THIS WILL PUT '+.01' IN THE NEXT LINE.                                       
*                                                                               
*  ON ENTRY:                                                                    
*        STANDARD SCAN MATCH ROUTINE ENTRY/EXIT CONVENTIONS                     
*        (SEE SCAN MODULE COMMENTS)                                             
*  ON EXIT:                                                                     
*        R0 - LINE NUMBER, IF MATCH                                             
*                                                                               
MIMWA    RECORD BEGIN                                                           
MIMLNO   DS    F                                                                
MIMFLOC  DS    F                   LINE FIELD LOC                               
MIMFLEN  DS    F                   LINE FIELD LEN                               
MIMSKIP  DS    256X                                                             
MIMSTOP  DS    256X                                                             
MIMMSG   DS    256C                                                             
MIMMSGL  DS    F                                                                
MIMNOMAT DS    XL(L'NSCNCB)        SCAN CB STATE IF NO MATCH                    
MIMMAT   DS    XL(L'NSCNCB)        SCAN CB STATE IF MATCH                       
         END                                                                    
*                                                                               
*                                                                               
MIMPLIED XPROC MIMWA                                                            
         USING NSCNCB,R2                                                        
         LA    R6,MIMWA                                                         
         USING MIMWA,R6                                                         
         SCSAVE AREA=MIMNOMAT      SAVE SCAN STUFF                              
*                                                                               
         COMMENT                   SCAN LINE NUMBER FIELD                       
         SCBKUP                                                                 
         SCANSTR ,                 ALLOW ODD CHARS IN SCAN                      
         IF    (R15,NZ),BEGIN      IF ERR, NO MATCH                             
         SCRSTR AREA=MIMNOMAT                                                   
         LA    R15,4                                                            
         EXIT MIMPLIED                                                          
         END                                                                    
         SCSAVE AREA=MIMMAT                                                     
         ST    R1,MIMFLOC                                                       
         ST    R0,MIMFLEN                                                       
*                                                                               
         COMMENT                   SCAN LNO FIELD FOR LNO VALUE                 
         SCINIT (R1),(R0)                                                       
         SCAN  MIMPRT                                                           
         IF    (R15,NEG),BEGIN     IF ERROR,                                    
         L     R3,NSCNMSGL         DO NOT CLOBBER ERROR MSG                     
         ST    R3,MIMNOMAT+(NSCNMSGL-NSCNCB)                                    
         MOVE  R3,MIMNOMAT+(NSCNMSG-NSCNCB),NSCNMSG                             
         SCRSTR AREA=MIMNOMAT                                                   
         END                                                                    
         ELSEIF (R15,POS),BEGIN    IF NO MATCH                                  
         SCRSTR AREA=MIMNOMAT                                                   
         END                                                                    
         ELSEIF (R15,Z),BEGIN       GOT MATCH                                   
         SCRSTR AREA=MIMMAT                                                     
         L     R0,MIMLNO                                                        
         CLEAR R1                                                               
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         END                                                                    
         PEND  ,                                                                
         DROP  R2                                                               
*                                                                               
*                                                                               
*                                                                               
MIMPRT   SCKW ,MIMNOTLN,NULL                                                    
         SCKW ,MIMSYMLN,SYMLN                                                   
         SCKW ,MIMNOTLN                                                         
*                                                                               
MIMNOTLN PROC  ,                                                                
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
MIMSYMLN PROC  ,                                                                
         ST    R0,MIMLNO                                                        
         COMMENT                   CHECK FOR JUNK AFTER LNO                     
         SCAN ,                                                                 
         IF    ((R15,NZ),OR,(R0,NZ)),BEGIN                                      
         SCSEGCLR                                                               
         L     R1,MIMFLOC                                                       
         L     R0,MIMFLEN                                                       
         SCSEG (R1),(R0)                                                        
         SCSEG ': invalid line number. Unable to evaluate.'                     
         L     R15,=F'-1'                                                       
         END                                                                    
         ELSE  BEGIN                                                            
         CLEAR R15                                                              
         END                                                                    
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  MCOLS - MATCH NNN[/NNN] COLUMN SPECIFICATION                                
**                                                                              
**  STANDARD MATCH INPUT OUTPUT CONVENTIONS.                                    
**                                                                              
**  ON EXIT:                                                                    
**    R0 - FIRST COL                                                            
**    R1 - SECOND COL (0 IF NONE)                                               
**                                                                              
**                                                                              
**                                                                              
*                                                                               
MCOLWA   RECORD BEGIN                                                           
MCOLCOL1 DS    F                                                                
MCOLCOL2 DS    F                                                                
         END                                                                    
*                                                                               
*                                                                               
MCOLS    XPROC MCOLWA                                                           
         USING NSCNCB,R2                                                        
         LA    R6,MCOLWA                                                        
         USING MCOLWA,R6                                                        
         CLEAR MCOLWA                                                           
*                                                                               
         COMMENT                   IF NOT NUMBER, NO MATCH                      
         IF    (^NSCNFINT),BEGIN                                                
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   IF NUMBER, SCAN FOR COL 2                    
         IF    NSCNFINT,BEGIN                                                   
         MVC   MCOLCOL1,NSCNTVAL                                                
         SCPUSH                                                                 
         SCAN  MCOLPRT                                                          
         IF    (R15,NEG),BEGIN                                                  
         B     MCOLDONE                                                         
         END                                                                    
         IF    (R15,Z),' BOMB '                                                 
         IF    (R15,EQ,4),BEGIN       NOT FOUND/ FOUND                          
         CLEAR R15                                                              
         END                                                                    
         IF    (R15,EQ,8),BEGIN    RESTORE                                      
         SCPOP                                                                  
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         COMMENT                   VALIDITY CHECK COLS                          
         L     R0,MCOLCOL1                                                      
         L     R1,MCOLCOL2                                                      
         IF    ((R0,NP),OR,(R0,GT,&LINESZ)),BEGIN                               
         SCSEG 'Invalid column specification. (too large or small)'             
         B     MCOLDONE                                                         
         END                                                                    
         IF    ((R1,NEG),OR,(R1,GT,&LINESZ)),BEGIN                              
         SCSEG 'Invalid column specification. (too large or small)'             
         B     MCOLDONE                                                         
         END                                                                    
         IF    ((R1,NZ),AND,(R1,LT,R0)),BEGIN                                   
         SCSEG 'Invalid column specification. '                                 
         B     MCOLDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   ALL OK, RETURN COLS                          
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
MCOLDONE LABEL ,                                                                
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  MATCH COL SCKWS/ROUTINES                                                     
*                                                                               
MCOLPRT  SCKW  ,MCNULL,NULL                                                     
         SCKW  /,MCSLASH                                                        
         SCKW  ,MCOTHER                                                         
*                                                                               
MCNULL   DPROC ,                                                                
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
MCOTHER  DPROC ,                                                                
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
MCSLASH  PROC  ,                                                                
         SCAN                                                                   
         IF    (R15,Z),BEGIN                                                    
         IF    NSCNFNUL,BEGIN                                                   
         SCSEG '/: invalid.  Missing column2 specification. '                   
         END                                                                    
         ELSEIF    ^NSCNFINT,BEGIN                                              
         ACALL BADTOKEN                                                         
         END                                                                    
         ELSE  BEGIN                                                            
         MVC   MCOLCOL2,NSCNTVAL                                                
         LA    R15,4                                                            
         END                                                                    
         END                                                                    
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
**                                                                              
**  BUILD MISMATCHED PARENTHISIS OR QUOTES MESSAGE                              
**                                                                              
**  ON ENTRY:                                                                   
**    R2 - SCAN CB                                                              
**                                                                              
**  ON EXIT                                                                     
**    ERROR MSG PLACED INTO SCAN CB                                             
**    R15 - NEG CC                                                              
**                                                                              
*                                                                               
BADPAREN PROC                                                                   
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   BUILD MSG                                    
         L     R1,NSCNTLOC         BAD INT STRING                               
         L     R0,NSCNTLEN         BAD INT STRING LEN                           
         CEIL  R0,32               Not too long now                             
         SCSEG (R1),(R0)                                                        
         L     R1,NSCNTLOC                                                      
         IF    (@R1,EQ,'('),BEGIN                                               
         SCSEG ': invalid.  Mismatched parenthesis.'                            
         END                                                                    
         ELSE  BEGIN                                                            
         SCSEG ': invalid.  Mismatched quotes.     '                            
         END                                                                    
*                                                                               
         L     R15,=F'-4'                                                       
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  BADTOKEN - ADD '<TOKEN>: invalid.' MSG TO SCANCB                            
**    MESSAGE BUFFER.                                                           
**                                                                              
**  PLACE MSG IN SCAN CB AND RETURN R15 = -4                                    
**                                                                              
**                                                                              
*                                                                               
BADTOKEN PROC ,                                                                 
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   R1,R3 - TOKEN LOC,LEN                        
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         SCSEG (R1),(R0)                                                        
         SCSEG ': invalid.'                                                     
*                                                                               
         L     R15,=F'-4'                                                       
         PEND  ,                                                                
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  BUILD MISSING PARM ERR MSG                                                  
**  FIND ERROR KW ENTRY, IF ANY                                                 
**                                                                              
**  ON ENTRY:                                                                   
**    R2 - SCAN CB                                                              
**    R4 - PARM KEYWORD                                                         
**    R5 - PARM KEYWORD LENGTH                                                  
**                                                                              
**  ON EXIT                                                                     
**    ERROR MSG PLACED INTO SCAN CB                                             
**    R15 - NEG CC                                                              
**                                                                              
*                                                                               
MISSPARM PROC                                                                   
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   BUILD MSG                                    
         LR    R1,R4                                                            
         LR    R0,R5                                                            
         SCSEG (R1),(R0)                                                        
         SCSEG ': Missing operand.  '                                           
*                                                                               
         L     R15,=F'-4'                                                       
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  BUILD BAD LINE NUMBER PARM ERR MSG                                          
**                                                                              
**  ON ENTRY:                                                                   
**    R2 - SCAN CB                                                              
**                                                                              
**  ON EXIT                                                                     
**    ERROR MSG PLACED INTO SCAN CB                                             
**    R15 - NEG CC                                                              
**                                                                              
*                                                                               
BADLNO   PROC                                                                   
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   BUILD MSG                                    
         LA    R1,NSCNCTOK         BAD LNO STRING                               
         L     R0,NSCNTOKL         BAD LNO STRING LEN                           
         SCSEG (R1),(R0)                                                        
         SCSEG ': invalid operand.  Expecting line number.  '                   
*                                                                               
         L     R15,=F'-4'                                                       
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  BUILD BAD INTEGER PARM ERR MSG                                              
**  FIND ERROR KW ENTRY, IF ANY                                                 
**                                                                              
**  ON ENTRY:                                                                   
**    R2 - SCAN CB                                                              
**                                                                              
**  ON EXIT                                                                     
**    ERROR MSG PLACED INTO SCAN CB                                             
**    R15 - NEG CC                                                              
**                                                                              
*                                                                               
BADINT   PROC                                                                   
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   BUILD MSG                                    
         LA    R1,NSCNCTOK         BAD INT STRING                               
         L     R0,NSCNTOKL         BAD INT STRING LEN                           
         SCSEG (R1),(R0)                                                        
         SCSEG ': invalid operand.  '                                           
         SCSEG 'Expecting reasonable integer value. '                           
*                                                                               
         L     R15,=F'-4'                                                       
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  MSBADVAL - BAD SYMBOLIC LINE NUMBER                                         
**                                                                              
**  PLACE MSG IN SCAN CB AND RETURN R15 = -4                                    
**                                                                              
**                                                                              
*                                                                               
MSBADVAL PROC ,                                                                 
         USING NSCNCB,R2                                                        
         USING MSLWA,R6                                                         
*                                                                               
         COMMENT                   R1,R0 - SYMBOLIC LN LOC, LEN                 
         L     R1,MSLSTART                                                      
         L     R0,NSCNTLOC                                                      
         A     R0,NSCNTLEN                                                      
         SR    R0,R1                                                            
         SCSEG (R1),(R0)                                                        
         SCSEG ': invalid value.'  APPEND 'INVALID VALUE'                       
*                                                                               
         L     R15,=F'-4'                                                       
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'EXEC SYSCALL SCANSTR INTERFACE'                                 
*box                                                                            
*                                                                               
*  SCANSTR - SCAN STRING                                                        
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - LENGTH OF STRING TO SCAN                                           
*       R1 - LOCATION OF STRING TO SCAN                                         
*       R2 - LOCATION OF SKIP STRING                                            
*       R3 - LENGTH OF SKIP STRING                                              
*       R4 - LOCATION OF STOP STRING                                            
*       R5 - LENGTH OF STOP STRING                                              
*                                                                               
*  ON EXIT:                                                                     
*       R0 - TOKEN LENGTH                                                       
*       R1 - TOKEN LOCATION                                                     
*       R2 - REMAINING STRING LOCATION                                          
*       R3 - REMAINING STRING LENGTH                                            
*       R4 - TYPE STRING LOCATION                                               
*       R5 - TYPE STRING LENGTH                                                 
*      R15 - CC=ZERO                                                            
*                                                                               
*  SEE SYSCALL SCAN DOCUMENTATION FOR DETAILS.                                  
*  SEE SYSCALL SCAN_PARM DOCUMENTATION FOR DETAILS.                             
*                                                                               
*                                                                               
XSSWA    RECORD BEGIN                                                           
XSSLOC   DS    F                   LOC OF STR TO SCAN                           
XSSLEN   DS    F                   LEN OF STR TO SCAN                           
XSSTOK   DS    F                   LOC OF TOKEN SCANNED                         
XSSTOKL  DS    F                   LEN OF TOKEN SCANNED                         
XSSREM   DS    F                   LOC OF REMAINDER OF STR                      
XSSREML  DS    F                   LEN OF REMAINDER OF STR                      
XSSTYPE  DS    F                   LOC OF TYPE STR                              
XSSTYPEL DS    F                   LEN OF TYPE STR                              
XSSSKIPS DS    F                   LOC OF SKIP CONTROL STR                      
XSSSKIPL DS    F                   LEN OF SKIP CONTROL STR                      
XSSSKIPT DS    XL256               TRT TABLE FOR SKIP                           
XSSSTOPS DS    F                   LOC OF STOP CONTROL STR                      
XSSSTOPL DS    F                   LEN OF STOP CONTROL STR                      
XSSSTOPT DS    XL256               TRT TABLE FOR STOP                           
         END                                                                    
*                                                                               
*                                                                               
SCANSTR  XPROC XSSWA                                                            
*                                                                               
         COMMENT                   SAVE ENTRY PARMS                             
         ST    R0,XSSLEN                                                        
         ST    R1,XSSLOC                                                        
         ST    R2,XSSSKIPS                                                      
         ST    R3,XSSSKIPL                                                      
         ST    R4,XSSSTOPS                                                      
         ST    R5,XSSSTOPL                                                      
*                                                                               
         COMMENT                   SET UP SKIP TABLE                            
         L     R1,XSSSKIPS                                                      
         L     R0,XSSSKIPL                                                      
         LA    R2,XSSSKIPT                                                      
         ACALL SETSKIP                                                          
*                                                                               
         COMMENT                   SET UP STOP TABLE                            
         L     R1,XSSSTOPS                                                      
         L     R0,XSSSTOPL                                                      
         LA    R2,XSSSTOPT                                                      
         ACALL SETSTOP                                                          
*                                                                               
         COMMENT                   SCAN TOKEN                                   
         L     R0,XSSLEN                                                        
         L     R1,XSSLOC                                                        
         LA    R2,XSSSKIPT                                                      
         ACALL TRTSCAN             SCAN PAST SKIP CHARS                         
         ST    R1,XSSTOK           SAVE START OF TOKEN                          
         LA    R2,XSSSTOPT                                                      
         ACALL TRTSCAN             SCAN TO END OF TOKEN                         
         IF    ((R0,POS),AND,(R1,EQ,XSSTOK)),BEGIN                              
         LA    R1,1(R1)            IF START/STOP OF TOKEN ARE SAME              
         DECR  R0                  CHAR, THEN STOP IS REALLY +1                 
         END                                                                    
         ST    R1,XSSREM           SAVE REMAINING STRING                        
         ST    R0,XSSREML          SAVE REMAINING STRING LENGTH                 
         L     R1,XSSREM                                                        
         S     R1,XSSTOK           CALCULATE TOKEN LENGTH                       
         ST    R1,XSSTOKL          SAVE TOKEN LENGTH                            
*                                                                               
         COMMENT                   PROCESS (SCAN) TOKEN TYPES                   
         L     R1,XSSTOK                                                        
         L     R0,XSSTOKL                                                       
         ACALL XSCNTYPE                                                         
         ST    R0,XSSTYPEL                                                      
         ST    R1,XSSTYPE                                                       
*                                                                               
         COMMENT                   RETURN TOKEN,REMAINDER,TYPE                  
         L     R0,XSSTOKL          R1,R0 - TOKEN LOC, LEN                       
         L     R1,XSSTOK                                                        
         L     R2,XSSREM           R2,R3 - REMAINDER LOC, LEN                   
         L     R3,XSSREML                                                       
         L     R4,XSSTYPE          R4,R5 - TYPE LOC,LEN                         
         L     R5,XSSTYPEL                                                      
*                                                                               
         PRETURN (R0,R5)                                                        
         CLEAR R15                                                              
         PEND                                                                   
         EJECT                                                                  
         TITLE 'EXEC SYSCALL XSCANSTR INTERFACE'                                
*box                                                                            
*                                                                               
*  XSCANSTR - SCAN STRING                                                       
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - LENGTH OF STRING TO SCAN                                           
*       R1 - LOCATION OF STRING TO SCAN                                         
*       R2 - LOCATION OF SKIP STRING                                            
*       R3 - LENGTH OF SKIP STRING                                              
*       R4 - LOCATION OF STOP STRING                                            
*       R5 - LENGTH OF STOP STRING                                              
*                                                                               
*  ON EXIT:                                                                     
*       R0 - TOKEN LENGTH                                                       
*       R1 - TOKEN LOCATION                                                     
*       R2 - REMAINING STRING LOCATION                                          
*       R3 - REMAINING STRING LENGTH                                            
*       R4 - TYPE STRING LOCATION                                               
*       R5 - TYPE STRING LENGTH                                                 
*      R15 - CC=ZERO                                                            
*                                                                               
*  SEE SYSCALL SCAN DOCUMENTATION FOR DETAILS.                                  
*  SEE SYSCALL SCAN_PARM DOCUMENTATION FOR DETAILS.                             
*                                                                               
*  Note: This routine differs from the SCANSTR routine                          
*        above (which in my opinion has a bug). If you                          
*        scan a string whose very first character is                            
*        in fact the stop character, then by the                                
*        definition of the SYSCALL SCAN interfaces,                             
*        you should get a NULL token. That doesn't                              
*        happen with SCANSTR above, but too many people                         
*        have probably coded around that to change the                          
*        function of that routine. Thus, we introduce                           
*        this routine, and additional SYSCALL XSCAN                             
*        routines.                                                              
*                                                                               
*                                                                               
*                                                                               
*                                                                               
XSCANSTR XPROC XSSWA                                                            
*                                                                               
         COMMENT                   SAVE ENTRY PARMS                             
         ST    R0,XSSLEN                                                        
         ST    R1,XSSLOC                                                        
         ST    R2,XSSSKIPS                                                      
         ST    R3,XSSSKIPL                                                      
         ST    R4,XSSSTOPS                                                      
         ST    R5,XSSSTOPL                                                      
*                                                                               
         COMMENT                   SET UP SKIP TABLE                            
         L     R1,XSSSKIPS                                                      
         L     R0,XSSSKIPL                                                      
         LA    R2,XSSSKIPT                                                      
         ACALL SETSKIP                                                          
*                                                                               
         COMMENT                   SET UP STOP TABLE                            
         L     R1,XSSSTOPS                                                      
         L     R0,XSSSTOPL                                                      
         LA    R2,XSSSTOPT                                                      
         ACALL SETSTOP                                                          
*                                                                               
         COMMENT                   SCAN TOKEN                                   
         L     R0,XSSLEN                                                        
         L     R1,XSSLOC                                                        
         LA    R2,XSSSKIPT                                                      
         ACALL TRTSCAN             SCAN PAST SKIP CHARS                         
         ST    R1,XSSTOK           SAVE START OF TOKEN                          
         LA    R2,XSSSTOPT                                                      
         ACALL TRTSCAN             SCAN TO END OF TOKEN                         
         ST    R1,XSSREM           SAVE REMAINING STRING                        
         ST    R0,XSSREML          SAVE REMAINING STRING LENGTH                 
         L     R1,XSSREM                                                        
         S     R1,XSSTOK           CALCULATE TOKEN LENGTH                       
         ST    R1,XSSTOKL          SAVE TOKEN LENGTH                            
*                                                                               
         COMMENT                   PROCESS (SCAN) TOKEN TYPES                   
         L     R1,XSSTOK                                                        
         L     R0,XSSTOKL                                                       
         ACALL XSCNTYPE                                                         
         ST    R0,XSSTYPEL                                                      
         ST    R1,XSSTYPE                                                       
*                                                                               
         COMMENT                   RETURN TOKEN,REMAINDER,TYPE                  
         L     R0,XSSTOKL          R1,R0 - TOKEN LOC, LEN                       
         L     R1,XSSTOK                                                        
         L     R2,XSSREM           R2,R3 - REMAINDER LOC, LEN                   
         L     R3,XSSREML                                                       
         L     R4,XSSTYPE          R4,R5 - TYPE LOC,LEN                         
         L     R5,XSSTYPEL                                                      
*                                                                               
         PRETURN (R0,R5)                                                        
         CLEAR R15                                                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  XSCNPARM - EXEC SCAN_PARM SYSCALL INTERFACE                                  
*  SCANPARM - SCAN STRING OR PARM                                               
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - LENGTH OF STRING TO SCAN                                           
*       R1 - LOCATION OF STRING TO SCAN                                         
*       R2 - LOCATION OF SKIP STRING                                            
*       R3 - LENGTH OF SKIP STRING                                              
*       R4 - LOCATION OF STOP STRING                                            
*       R5 - LENGTH OF STOP STRING                                              
*                                                                               
*  ON EXIT:                                                                     
*       R0 - TOKEN LENGTH                                                       
*       R1 - TOKEN LOCATION                                                     
*       R2 - REMAINING STRING LOCATION                                          
*       R3 - REMAINING STRING LENGTH                                            
*       R4 - TYPE STRING LOCATION                                               
*       R5 - TYPE STRING LENGTH                                                 
*      R15 - CC=ZERO                                                            
*                                                                               
*  SEE SYSCALL SCAN DOCUMENTATION FOR DETAILS.                                  
*  SEE SYSCALL SCAN_PARM DOCUMENTATION FOR DETAILS.                             
*                                                                               
*                                                                               
SCANPARM XPROC XSSWA                                                            
*                                                                               
         COMMENT                   SAVE ENTRY PARMS                             
         ST    R0,XSSLEN                                                        
         ST    R1,XSSLOC                                                        
         ST    R2,XSSSKIPS                                                      
         ST    R3,XSSSKIPL                                                      
         ST    R4,XSSSTOPS                                                      
         ST    R5,XSSSTOPL                                                      
*                                                                               
         COMMENT                   SET UP SKIP TABLE                            
         L     R1,XSSSKIPS                                                      
         L     R0,XSSSKIPL                                                      
         LA    R2,XSSSKIPT                                                      
         ACALL SETSKIP                                                          
*                                                                               
         COMMENT                   SET UP STOP TABLE                            
         L     R1,XSSSTOPS                                                      
         L     R0,XSSSTOPL                                                      
         LA    R2,XSSSTOPT                                                      
         ACALL SETSTOP                                                          
*                                                                               
         COMMENT                   SCAN TOKEN                                   
         L     R0,XSSLEN                                                        
         L     R1,XSSLOC                                                        
         LA    R2,XSSSKIPT                                                      
         ACALL TRTSCAN             SCAN PAST SKIP CHARS                         
         ST    R1,XSSTOK           SAVE START OF TOKEN                          
         LA    R2,XSSSTOPT                                                      
         ACALL TRTSCAN             SCAN TO END OF TOKEN                         
         IF    ((R0,POS),AND,(R1,EQ,XSSTOK)),BEGIN                              
         LA    R1,1(R1)            IF START/STOP OF TOKEN ARE SAME              
         DECR  R0                  CHAR, THEN STOP IS REALLY +1                 
         END                                                                    
         ST    R1,XSSREM           SAVE REMAINING STRING                        
         ST    R0,XSSREML          SAVE REMAINING STRING LENGTH                 
         L     R1,XSSREM                                                        
         S     R1,XSSTOK           CALCULATE TOKEN LENGTH                       
         ST    R1,XSSTOKL          SAVE TOKEN LENGTH                            
*                                                                               
         COMMENT                   SPECIAL PROCESS QUOTES, PARENS               
         L     R1,XSSTOK                                                        
         IF    ((@R1,EQ,'('),OR,(@R1,EQ,'"'),OR,(@R1,EQ,'''')),BEGIN            
         L     R0,XSSTOKL                                                       
         L     R2,XSSREM                                                        
         L     R3,XSSREML                                                       
         IF    (@R1,EQ,'('),BEGIN                                               
         ACALL SCNPAREN                                                         
         END                                                                    
         ELSE  BEGIN                                                            
         ACALL SCNQUOTE                                                         
         END                                                                    
         ST    R0,XSSTOKL                                                       
         ST    R1,XSSTOK                                                        
         ST    R2,XSSREM                                                        
         ST    R3,XSSREML                                                       
         END                                                                    
*                                                                               
*                                                                               
         COMMENT                   PROCESS (SCAN) TOKEN TYPES                   
         L     R1,XSSTOK                                                        
         L     R0,XSSTOKL                                                       
         ACALL XSCNTYPE                                                         
         ST    R0,XSSTYPEL                                                      
         ST    R1,XSSTYPE                                                       
*                                                                               
         COMMENT                   RETURN TOKEN,REMAINDER,TYPE                  
         L     R0,XSSTOKL          R1,R0 - TOKEN LOC, LEN                       
         L     R1,XSSTOK                                                        
         L     R2,XSSREM           R2,R3 - REMAINDER LOC, LEN                   
         L     R3,XSSREML                                                       
         L     R4,XSSTYPE          R4,R5 - TYPE LOC,LEN                         
         L     R5,XSSTYPEL                                                      
*                                                                               
         PRETURN (R0,R5)                                                        
         CLEAR R15                                                              
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  XSCNTYPE - RETURN TYPE OF TOKEN, EXEC FILE VERSION.                          
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*    R1,R0 - TOKEN LOC, LEN                                                     
*  ON EXIT:                                                                     
*    R1,R0 - TYPE LOC, LEN                                                      
*                                                                               
*  NOTE:                                                                        
*  THE ONLY TYPES RETURNED ARE:                                                 
*    NULL, ALPHA, NUMBER, AND OTHER                                             
*  NULL IS END OF SCAN (IRRESPECTIVE OF ';'), ALPHA IS ALL                      
*  ALPHAS SCANNED, NUMBER IS ALL NUMBERS SCANNED.                               
*                                                                               
*  NOTE2:                                                                       
*  THIS IS JUNK.  IT WOULD HAVE BEEN BETTER FOR EXEC FILES                      
*  TO HAVE SEPARATE SCAN ROUTINES AND TYPE ROUTINES.                            
*  ONLY MINIMAL TYPING IS DONE HERE.  PERHAPS A SOMEDAY A                       
*  FEW TYPE PROCESSING SYSCALL WILL BE PROVIDED. WHATEVER.                      
*  WHENEVER.                                                                    
*                                                                               
*                                                                               
XSCNTYPE PROC                                                                   
         IF    (R0,EQ,0),BEGIN                                                  
         SETMSG 'NULL'                                                          
         END                                                                    
         ELSE  BEGIN                                                            
         LR    R5,R0                                                            
         L     R4,=A(TBLACLR)                                                   
         DEX   R5,' TRT @R1(0),@R4 '                                            
         IF    Z,BEGIN                                                          
         SETMSG 'ALPHA'                                                         
         END                                                                    
         ELSE  BEGIN                                                            
         LR    R5,R0                                                            
         L     R4,=A(TBLNCLR)                                                   
         DEX   R5,' TRT @R1(0),@R4 '                                            
         IF    Z,BEGIN                                                          
         SETMSG 'NUMBER'                                                        
         END                                                                    
         ELSE  BEGIN                                                            
         SETMSG 'OTHER'                                                         
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         TITLE 'SET SKIP/STOP TABLES'                                           
*                                                                               
**                                                                              
**  SETSKIP                                                                     
**                                                                              
**  SET SKIP CHARACTERS ...                                                     
**  (SEE COMMENTS FOR SCAN AND SCAN_PARM FUNCTIONS IN                           
**  EXTENDED EXEC MANUAL.)                                                      
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - LOC OF SKIP STRING                                                   
**    R0 - LEN OF SKIP STRING                                                   
**    R2 - LOC OF 256 BYTE TRT TABLE AREA                                       
**                                                                              
**  ON EXIT:                                                                    
**    R15 - ZERO                                                                
**                                                                              
**                                                                              
**  NOTE:                                                                       
**  TABLE IS INITIALIZED TO SKIP NONE.                                          
**                                                                              
*                                                                               
SETSKIP  XPROC                                                                  
*                                                                               
         COMMENT                   INIT TABLE TO X'FF' (SKIP NONE)              
         LR    R4,R2                                                            
         LA    R5,256                                                           
         L     R15,=X'FF000000'                                                 
         MVCL  R4,R14                                                           
*                                                                               
         COMMENT                   SET USERS SKIP CHARS                         
         ACALL TBLCLR                                                           
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  SETSTOP                                                                     
**                                                                              
**  SET STOP CHARACTERS ...                                                     
**  (SEE COMMENTS FOR SCAN AND SCAN_PARM FUNCTIONS IN                           
**  EXTENDED EXEC MANUAL.)                                                      
**                                                                              
**  ON ENTRY:                                                                   
**    R1 - LOC OF STOP STRING                                                   
**    R0 - LEN OF STOP STRING                                                   
**    R2 - LOC OF 256 BYTE TRT TABLE AREA                                       
**                                                                              
**  ON EXIT:                                                                    
**    R15 - ZERO                                                                
**                                                                              
**                                                                              
**  NOTE:                                                                       
**  TABLE IS INITIALIZED WITH NO STOP CHARS                                     
**                                                                              
*                                                                               
SETSTOP  XPROC                                                                  
*                                                                               
         COMMENT                   INIT TABLE TO X'00' (NO STOP)                
         LR    R4,R2                                                            
         LA    R5,256                                                           
         CLEAR R15                                                              
         MVCL  R4,R14                                                           
*                                                                               
         COMMENT                   SET USERS STOP CHARS                         
         ACALL TBLMRK                                                           
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TBLCLR -- CLEAR TABLE ENTRIES                                                
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - LENGTH OF CLEAR STRING                                             
*       R1 - LOCATION OF CLEAR STRING                                           
*       R2 - TABLE TO CLEAR                                                     
*                                                                               
*  TABLE IS CLEARED AS SPECIFIED BY CLEAR STRING.  NOTE THE                     
*  ENTIRE TABLE IS NOT (AND MUST NOT BE) INITIALIZED BY THIS                    
*  ROUTINE.  SEE SCAN SYSCALL FOR CLEAR STRING DESCRIPTION.                     
*                                                                               
*                                                                               
TABLE    RECORD BEGIN                                                           
         DS    256X                                                             
         END                                                                    
*                                                                               
TBLCLR   PROC  ,                                                                
         USING TABLE,R6                                                         
         LR    R6,R2               R6 - TABLE ADDRESS                           
*                                                                               
         COMMENT                   DO NOT INITIALIZE ENTIRE TABLE               
         COMMENT                   THIS ROUTINE IS CALLED RECUSIVELY            
*                                                                               
         COMMENT                   SCAN CLEAR STRING                            
         WHILE (R0,POS),BEGIN       LOOP THRU STRING                            
*                                                                               
         COMMENT                   IF +,                                        
         IF    (@R1,EQ,'+'),BEGIN  SKIP '+' AND CLR TABLE ENTRIES               
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         COMMENT                   IF -,                                        
         ELSEIF (@R1,EQ,'-'),BEGIN SKIP '-' AND MARK TABLE ENTRIES              
         INCR  R1                                                               
         DECR  R0                                                               
         LA    R2,TABLE                                                         
         ACALL TBLUNCLR                                                         
         CLEAR R0   QUIT LOOP                                                   
         END                                                                    
*                                                                               
         COMMENT                   IF '(<special set>)',                        
         COMMENT                     CLEAR SPECIAL SET OF CHARS                 
         COMMENT                                                                
         ELSEIF ((@R1,EQ,'('),AND,(R0,GE,3)),BEGIN                              
         IF    (@R1,EQ,'(0)'),BEGIN                                             
         COMMENT NULL CLEAR                                                     
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(*)'),BEGIN                                            
         MVC   TABLE,TBLZERO                                                    
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(A)'),BEGIN                                            
         L     R3,=A(TBLACLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(N)'),BEGIN                                            
         L     R3,=A(TBLNCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(S)'),BEGIN                                            
         L     R3,=A(TBLSCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(I)'),BEGIN                                            
         L     R3,=A(TBLICLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(C)'),BEGIN                                            
         L     R3,=A(TBLCCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(W)'),BEGIN                                            
         L     R3,=A(TBLWCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(+)'),BEGIN                                            
         MVI   TABLE+C'+',X'00'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(-)'),BEGIN                                            
         MVI   TABLE+C'-',X'00'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSE  BEGIN               IF NOT '(...)'                               
         LC    R2,0(R1)            CLEAR CHARACTER                              
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'00'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF NON OF THE ABOVE                          
         ELSE  BEGIN               CLEAR CHARACTER                              
         LC    R2,0(R1)            CLEAR CHARACTER                              
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'00'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         END   , LOOP THRU ENTIRE CLEAR STRING                                  
*                                                                               
         CLEAR R15                                                              
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  TBLUNCLR  -- MARK TABLE (UNCLEAR)                                           
**                                                                              
**  ON ENTRY:                                                                   
**       R0 - LENGTH OF MARK STRING                                             
**       R1 - LOCATION OF MARK STRING                                           
**       R2 - TABLE TO MARK                                                     
**                                                                              
**  TABLE IS MARKED AS SPECIFIED BY MARK STRING.  NOTE THE                      
**  ENTIRE TABLE IS NOT (AND MUST NOT BE) CLEARED BY THIS                       
**  ROUTINE.  SEE SCAN SYSCALL FOR MARK STRING DESCRIPTION.                     
**                                                                              
**  TBLUNCLR IS SAME AS TBLMRK EXCEPT THAT '-' DENOTES UNCLEAR                  
**  AND '+' DENOTES CLEAR                                                       
**                                                                              
**TABLE    RECORD BEGIN                                                         
**         DS    256X                                                           
**         END                                                                  
**                                                                              
*                                                                               
TBLUNCLR PROC  ,                                                                
         USING TABLE,R6                                                         
         LR    R6,R2               R6 - TABLE ADDRESS                           
*                                                                               
         COMMENT                   DO NOT CLEAR ENTIRE TABLE                    
         COMMENT                   THIS ROUTINE IS CALLED RECUSIVELY            
*                                                                               
         COMMENT                   SCAN MARK STRING                             
         WHILE (R0,POS),BEGIN      LOOP THRU STRING                             
*                                                                               
         COMMENT                   IF +,                                        
         IF    (@R1,EQ,'+'),BEGIN  RESUME CLEARING TABLE ENTRIES                
         INCR  R1                                                               
         DECR  R0                                                               
         LA    R2,TABLE                                                         
         ACALL TBLCLR                                                           
         CLEAR R0   QUIT LOOP                                                   
         END                                                                    
*                                                                               
         COMMENT                   IF -,                                        
         ELSEIF (@R1,EQ,'-'),BEGIN CONTINUE UNCLEARING ENTRIES                  
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         COMMENT                   IF '(<special set>)',                        
         COMMENT                      MARK SPECIAL SET OF CHARS                 
         COMMENT                                                                
         ELSEIF ((@R1,EQ,'('),AND,(R0,GE,3)),BEGIN                              
         IF    (@R1,EQ,'(0)'),BEGIN                                             
         COMMENT NULL MARK                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         IF    (@R1,EQ,'(*)'),BEGIN                                             
         MVC   TABLE,TBLFFFF                                                    
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(A)'),BEGIN                                            
         L     R3,=A(TBLAMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(N)'),BEGIN                                            
         L     R3,=A(TBLNMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(S)'),BEGIN                                            
         L     R3,=A(TBLSMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(I)'),BEGIN                                            
         L     R3,=A(TBLIMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(C)'),BEGIN                                            
         L     R3,=A(TBLCMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(W)'),BEGIN                                            
         L     R3,=A(TBLWMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(+)'),BEGIN                                            
         MVI   TABLE+C'+',X'FF'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(-)'),BEGIN                                            
         MVI   TABLE+C'-',X'FF'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSE  BEGIN               IF NOT '(...)'                               
         LC    R2,0(R1)            MARK CHARACTER                               
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'FF'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF NON OF THE ABOVE                          
         ELSE  BEGIN               MARK CHARACTER                               
         LC    R2,0(R1)            MARK CHARACTER                               
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'FF'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         END   , LOOP THRU ENTIRE MARK STRING                                   
*                                                                               
         CLEAR R15                                                              
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  TBLMRK   -- MARK TABLE                                                      
**                                                                              
**  ON ENTRY:                                                                   
**       R0 - LENGTH OF MARK STRING                                             
**       R1 - LOCATION OF MARK STRING                                           
**       R2 - TABLE TO MARK                                                     
**                                                                              
**  TABLE IS MARKED AS SPECIFIED BY MARK STRING.  NOTE THE                      
**  ENTIRE TABLE IS NOT (AND MUST NOT BE) CLEARED BY THIS                       
**  ROUTINE.  SEE SCAN SYSCALL FOR MARK STRING DESCRIPTION.                     
**                                                                              
**                                                                              
**TABLE    RECORD BEGIN                                                         
**         DS    256X                                                           
**         END                                                                  
**                                                                              
*                                                                               
TBLMRK   PROC  ,                                                                
         USING TABLE,R6                                                         
         LR    R6,R2               R6 - TABLE ADDRESS                           
*                                                                               
         COMMENT                   DO NOT CLEAR ENTIRE TABLE                    
         COMMENT                   THIS ROUTINE IS CALLED RECUSIVELY            
*                                                                               
         COMMENT                   SCAN MARK STRING                             
         WHILE (R0,POS),BEGIN      LOOP THRU STRING                             
*                                                                               
         COMMENT                   IF +,                                        
         IF    (@R1,EQ,'+'),BEGIN  SKIP '+' AND MARK TABLE ENTRIES              
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         COMMENT                   IF -,                                        
         ELSEIF (@R1,EQ,'-'),BEGIN SKIP '-' AND CLEAR TABLE ENTRIES             
         INCR  R1                                                               
         DECR  R0                                                               
         LA    R2,TABLE                                                         
         ACALL TBLUNMRK                                                         
         CLEAR R0   QUIT LOOP                                                   
         END                                                                    
*                                                                               
         COMMENT                   IF '(<special set>)',                        
         COMMENT                      MARK SPECIAL SET OF CHARS                 
         COMMENT                                                                
         ELSEIF ((@R1,EQ,'('),AND,(R0,GE,3)),BEGIN                              
         IF    (@R1,EQ,'(0)'),BEGIN                                             
         COMMENT NULL MARK                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         IF    (@R1,EQ,'(*)'),BEGIN                                             
         MVC   TABLE,TBLFFFF                                                    
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(A)'),BEGIN                                            
         L     R3,=A(TBLAMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(N)'),BEGIN                                            
         L     R3,=A(TBLNMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(S)'),BEGIN                                            
         L     R3,=A(TBLSMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(I)'),BEGIN                                            
         L     R3,=A(TBLIMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(C)'),BEGIN                                            
         L     R3,=A(TBLCMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(W)'),BEGIN                                            
         L     R3,=A(TBLWMARK)                                                  
         OC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(+)'),BEGIN                                            
         MVI   TABLE+C'+',X'FF'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(-)'),BEGIN                                            
         MVI   TABLE+C'-',X'FF'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSE  BEGIN               IF NOT '(...)'                               
         LC    R2,0(R1)            MARK CHARACTER                               
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'FF'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF NON OF THE ABOVE                          
         ELSE  BEGIN               MARK CHARACTER                               
         LC    R2,0(R1)            MARK CHARACTER                               
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'FF'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         END   , LOOP THRU ENTIRE MARK STRING                                   
*                                                                               
         CLEAR R15                                                              
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  TBLUNMRK - CLEAR TABLE ENTRIES (UNMARK)                                     
**                                                                              
**  ON ENTRY:                                                                   
**       R0 - LENGTH OF CLEAR STRING                                            
**       R1 - LOCATION OF CLEAR STRING                                          
**       R2 - TABLE TO CLEAR                                                    
**                                                                              
**  TABLE IS CLEARED AS SPECIFIED BY CLEAR STRING.  NOTE THE                    
**  ENTIRE TABLE IS NOT (AND MUST NOT BE) INITIALIZED BY THIS                   
**  ROUTINE.  SEE SCAN SYSCALL FOR CLEAR STRING DESCRIPTION.                    
**                                                                              
**  TBLUNMRK IS SAME AS TBLCLR EXCEPT THAT '-' DENOTES UNMARK                   
**  AND '+' DENOTES MARK                                                        
**                                                                              
**TABLE    RECORD BEGIN                                                         
**         DS    256X                                                           
**         END                                                                  
**                                                                              
*                                                                               
TBLUNMRK PROC  ,                                                                
         USING TABLE,R6                                                         
         LR    R6,R2               R6 - TABLE ADDRESS                           
*                                                                               
         COMMENT                   DO NOT INITIALIZE ENTIRE TABLE               
         COMMENT                   THIS ROUTINE IS CALLED RECUSIVELY            
*                                                                               
         COMMENT                   SCAN CLEAR STRING                            
         WHILE (R0,POS),BEGIN       LOOP THRU STRING                            
*                                                                               
         COMMENT                   IF +,                                        
         IF    (@R1,EQ,'+'),BEGIN  RESUME MARKING TABLE ENTRIES                 
         INCR  R1                                                               
         DECR  R0                                                               
         LA    R2,TABLE                                                         
         ACALL TBLMRK                                                           
         CLEAR R0   QUIT LOOP                                                   
         END                                                                    
*                                                                               
         COMMENT                   IF -,                                        
         ELSEIF (@R1,EQ,'-'),BEGIN CONTINUE UNMARKING ENTRIES                   
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         COMMENT                   IF '(<special set>)',                        
         COMMENT                     CLEAR SPECIAL SET OF CHARS                 
         COMMENT                                                                
         ELSEIF ((@R1,EQ,'('),AND,(R0,GE,3)),BEGIN                              
         IF    (@R1,EQ,'(0)'),BEGIN                                             
         COMMENT NULL CLEAR                                                     
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         IF    (@R1,EQ,'(*)'),BEGIN                                             
         MVC   TABLE,TBLZERO                                                    
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(A)'),BEGIN                                            
         L     R3,=A(TBLACLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(N)'),BEGIN                                            
         L     R3,=A(TBLNCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(S)'),BEGIN                                            
         L     R3,=A(TBLSCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(I)'),BEGIN                                            
         L     R3,=A(TBLICLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(C)'),BEGIN                                            
         L     R3,=A(TBLCCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(W)'),BEGIN                                            
         L     R3,=A(TBLWCLR)                                                   
         NC    TABLE,0(R3)                                                      
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(+)'),BEGIN                                            
         MVI   TABLE+C'+',X'00'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSEIF (@R1,EQ,'(-)'),BEGIN                                            
         MVI   TABLE+C'-',X'00'                                                 
         LA    R1,3(R1)                                                         
         S     R0,=F'3'                                                         
         END                                                                    
         ELSE  BEGIN               IF NOT '(...)'                               
         LC    R2,0(R1)            CLEAR CHARACTER                              
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'00'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF NON OF THE ABOVE                          
         ELSE  BEGIN               CLEAR CHARACTER                              
         LC    R2,0(R1)            CLEAR CHARACTER                              
         LA    R2,TABLE(R2)                                                     
         MVI   0(R2),X'00'                                                      
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
         END   , LOOP THRU ENTIRE CLEAR STRING                                  
*                                                                               
         CLEAR R15                                                              
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*       TRT TABLES                                                              
*                                                                               
*                                                                               
*                                                                               
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TYPE TABLE                                                             
*-                                                                              
*-       I - INVALID,  S - SPECIAL,  A - ALPHA,  N - NUMERIC,                   
*-                                                                              
TBLTYPE  LABEL ,                                                                
         COMMENT    0123456789012345                                            
         COMMENT                                                                
         DC    CL16'IIIIIIIIIIIIIIII'     0                                     
         DC    CL16'IIIIIIIIIIIIIIII'     1                                     
         DC    CL16'IIIIIIIIIIIIIIII'     2                                     
         DC    CL16'IIIIIIIIIIIIIIII'     3                                     
         DC    CL16'SIIIIIIIIISSSSSS'     4                                     
         DC    CL16'SIIIIIIIIISSSSSS'     5                                     
         DC    CL16'SSIIIIIIIISSSSSS'     6                                     
         DC    CL16'IIIIIIIIISSSSSSS'     7                                     
         DC    CL16'IAAAAAAAAAIIIIII'     8                                     
         DC    CL16'IAAAAAAAAAIIIIII'     9                                     
         DC    CL16'ISAAAAAAAAIIIIII'     0                                     
         DC    CL16'IIIIIIIIIIIIIIII'     1                                     
         DC    CL16'SAAAAAAAAAIIIIII'     2                                     
         DC    CL16'SAAAAAAAAAIIIIII'     3                                     
         DC    CL16'SIAAAAAAAAIIIIII'     4                                     
         DC    CL16'NNNNNNNNNNNSIIII'     5                                     
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-  DEFAULT WYLBUR SCAN SKIP TABLE;                                             
*-                                                                              
*-                                                                              
TBLWSKIP LABEL ,                   SKIP BLANKS, COMMAS, EQUALS                  
         DC    256X'FF'                                                         
         ORG   TBLWSKIP+C' '                                                    
         DC    X'00'                                                            
         ORG   TBLWSKIP+C','                                                    
         DC    X'00'                                                            
         ORG   TBLWSKIP+C'='                                                    
         DC    X'00'                                                            
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-  DEFAULT WYLBUR STOP SKIP TABLE;                                             
*-                                                                              
*-                                                                              
TBLWSTOP EQU   TBLWMARK,256                                                     
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLZERO - ZERO TABLE FOR CLEARING ALL                                  
*-                                                                              
*-                                                                              
TBLZERO  LABEL                                                                  
         DC    256X'00'                                                         
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLFFFF - 'FFFF' TABLE FOR MARKING ALL                                 
*-                                                                              
*-                                                                              
TBLFFFF  LABEL                                                                  
         DC    256X'FF'                                                         
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLAMARK - ALPHA TABLE                                                 
*-                                                                              
*-                                                                              
TBLAMARK LABEL ,                                                                
         DC    256X'00'                                                         
         ORG   TBLAMARK+C'a'                                                    
         DC    9X'FF'                                                           
         ORG   TBLAMARK+C'j'                                                    
         DC    9X'FF'                                                           
         ORG   TBLAMARK+C's'                                                    
         DC    8X'FF'                                                           
         ORG   TBLAMARK+C'A'                                                    
         DC    9X'FF'                                                           
         ORG   TBLAMARK+C'J'                                                    
         DC    9X'FF'                                                           
         ORG   TBLAMARK+C'S'                                                    
         DC    8X'FF'                                                           
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLACLR - ALPHA TABLE, REVERSE VIDEO                                   
*-                                                                              
*-                                                                              
TBLACLR  LABEL ,                                                                
         DC    256X'FF'                                                         
         ORG   TBLACLR+C'a'                                                     
         DC    9X'00'                                                           
         ORG   TBLACLR+C'j'                                                     
         DC    9X'00'                                                           
         ORG   TBLACLR+C's'                                                     
         DC    8X'00'                                                           
         ORG   TBLACLR+C'A'                                                     
         DC    9X'00'                                                           
         ORG   TBLACLR+C'J'                                                     
         DC    9X'00'                                                           
         ORG   TBLACLR+C'S'                                                     
         DC    8X'00'                                                           
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLNMARK - NUMERIC TABLE                                               
*-                                                                              
*-                                                                              
TBLNMARK LABEL ,                                                                
         DC    256X'00'                                                         
         ORG   TBLNMARK+C'0'                                                    
         DC    10X'FF'                                                          
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLNCLR - NUMERIC TABLE, REVERSE VIDEO                                 
*-                                                                              
*-                                                                              
TBLNCLR  LABEL ,                                                                
         DC    256X'FF'                                                         
         ORG   TBLNCLR+C'0'                                                     
         DC    10X'00'                                                          
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLSMARK - SPECIAL CHAR TABLE                                          
*-                                                                              
*-       NOTE: SPECIAL CHARACTERS ARE ALL PRINTABLE IBM EBCDIC                  
*-       CHARACTERS THAT ARE NOT NUMBERS OR ALPHAS.                             
*-                                                                              
TBLSMARK LABEL ,                                                                
         COMMENT    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5                             
         COMMENT                                                                
         DC    XL16'00000000000000000000000000000000'     0                     
         DC    XL16'00000000000000000000000000000000'     1                     
         DC    XL16'00000000000000000000000000000000'     2                     
         DC    XL16'00000000000000000000000000000000'     3                     
         DC    XL16'FF000000000000000000FFFFFFFFFFFF'     4                     
         DC    XL16'FF000000000000000000FFFFFFFFFFFF'     5                     
         DC    XL16'FFFF0000000000000000FFFFFFFFFFFF'     6                     
         DC    XL16'000000000000000000FFFFFFFFFFFFFF'     7                     
         DC    XL16'00000000000000000000000000000000'     8                     
         DC    XL16'00000000000000000000000000000000'     9                     
         DC    XL16'00FF0000000000000000000000000000'     0                     
         DC    XL16'00000000000000000000000000000000'     1                     
         DC    XL16'FF000000000000000000000000000000'     2                     
         DC    XL16'FF000000000000000000000000000000'     3                     
         DC    XL16'FF000000000000000000000000000000'     4                     
         DC    XL16'00000000000000000000FF0000000000'     5                     
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLSCLR - SPECIAL CHAR TABLE, REVERSE VIDEO                            
*-                                                                              
*-       NOTE: SPECIAL CHARACTERS ARE ALL PRINTABLE IBM EBCDIC                  
*-       CHARACTERS THAT ARE NOT NUMBERS OR ALPHAS.                             
*-                                                                              
TBLSCLR  LABEL ,                                                                
         COMMENT    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5                             
         COMMENT                                                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     0                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     1                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     2                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     3                     
         DC    XL16'00FFFFFFFFFFFFFFFFFF000000000000'     4                     
         DC    XL16'00FFFFFFFFFFFFFFFFFF000000000000'     5                     
         DC    XL16'0000FFFFFFFFFFFFFFFF000000000000'     6                     
         DC    XL16'FFFFFFFFFFFFFFFFFF00000000000000'     7                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     8                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     9                     
         DC    XL16'FF00FFFFFFFFFFFFFFFFFFFFFFFFFFFF'     0                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     1                     
         DC    XL16'00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     2                     
         DC    XL16'00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     3                     
         DC    XL16'00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     4                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFF00FFFFFFFFFF'     5                     
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLIMARK - INVALID CHAR TABLE                                          
*-                                                                              
*-       NOTE: INVALID CHARACTERS ARE ALL NON-PRINTABLE IBM EBCDIC              
*-       CHARACTERS.                                                            
*-                                                                              
TBLIMARK LABEL ,                                                                
         COMMENT    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5                             
         COMMENT                                                                
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     0                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     1                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     2                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     3                     
         DC    XL16'00FFFFFFFFFFFFFFFFFF000000000000'     4                     
         DC    XL16'00FFFFFFFFFFFFFFFFFF000000000000'     5                     
         DC    XL16'0000FFFFFFFFFFFFFFFF000000000000'     6                     
         DC    XL16'FFFFFFFFFFFFFFFFFF00000000000000'     7                     
         DC    XL16'FF000000000000000000FFFFFFFFFFFF'     8                     
         DC    XL16'FF000000000000000000FFFFFFFFFFFF'     9                     
         DC    XL16'FF000000000000000000FFFFFFFFFFFF'     0                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'     1                     
         DC    XL16'00000000000000000000FFFFFFFFFFFF'     2                     
         DC    XL16'00000000000000000000FFFFFFFFFFFF'     3                     
         DC    XL16'00FF0000000000000000FFFFFFFFFFFF'     4                     
         DC    XL16'0000000000000000000000FFFFFFFFFF'     5                     
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLICLR - INVALID CHAR TABLE, REVERSE VIDEO                            
*-                                                                              
*-       NOTE: INVALID CHARACTERS ARE ALL NON-PRINTABLE IBM EBCDIC              
*-       CHARACTERS.                                                            
*-                                                                              
TBLICLR  LABEL ,                                                                
         COMMENT    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5                             
         COMMENT                                                                
         DC    XL16'00000000000000000000000000000000'     0                     
         DC    XL16'00000000000000000000000000000000'     1                     
         DC    XL16'00000000000000000000000000000000'     2                     
         DC    XL16'00000000000000000000000000000000'     3                     
         DC    XL16'FF000000000000000000FFFFFFFFFFFF'     4                     
         DC    XL16'FF000000000000000000FFFFFFFFFFFF'     5                     
         DC    XL16'FFFF0000000000000000FFFFFFFFFFFF'     6                     
         DC    XL16'000000000000000000FFFFFFFFFFFFFF'     7                     
         DC    XL16'00FFFFFFFFFFFFFFFFFF000000000000'     8                     
         DC    XL16'00FFFFFFFFFFFFFFFFFF000000000000'     9                     
         DC    XL16'00FFFFFFFFFFFFFFFFFF000000000000'     0                     
         DC    XL16'00000000000000000000000000000000'     1                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFF000000000000'     2                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFF000000000000'     3                     
         DC    XL16'FF00FFFFFFFFFFFFFFFF000000000000'     4                     
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFF0000000000'     5                     
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLCMARK - CONTROL CHARACTERS                                          
*-                                                                              
*-     CONTROL CHARACTERS ARE X'00' THRU X'3F'    (LOCAL DEFINITION)            
*-                                                                              
TBLCMARK LABEL ,                                                                
         DC    256X'00'                                                         
         ORG   TBLCMARK+X'00'                                                   
         DC    64X'FF'                                                          
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLCCLR - CONTROL CHARACTERS, REVERSE VIDEO                            
*-                                                                              
*-     CONTROL CHARACTERS ARE X'00' THRU X'3F'    (LOCAL DEFINITION)            
*-                                                                              
TBLCCLR  LABEL ,                                                                
         DC    256X'FF'                                                         
         ORG   TBLCCLR+X'00'                                                    
         DC    64X'00'                                                          
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLWMARK - WYLBUR STOP CHARACTERS                                      
*-                                                                              
*-       NOTE: WYLBUR DEFAULT STOP CHARACTERS, IE. TABLE WYLBUR                 
*-       USES FOR STOPING COMMAND SCANS.  HISTORICAL GARBAGE.                   
*-                                                                              
TBLWMARK LABEL ,                                                                
***                                                                             
***  SHOULD BE SAME, COPIED FROM CLTBL  (WYLBUR CLASS TABLE)                    
***                                                                             
         DC    256X'FF'           ASSUME ALL ARE STOP CHARACTERS                
         ORG   TBLWMARK+C'a'        EXCEPT AS FOLLOWS,,,                        
         DC    9X'00'                                                           
         ORG   TBLWMARK+C'j'                                                    
         DC    9X'00'                                                           
         ORG   TBLWMARK+C's'                                                    
         DC    8X'00'                                                           
         ORG   TBLWMARK+C'A'                                                    
         DC    9X'00'                                                           
         ORG   TBLWMARK+C'J'                                                    
         DC    9X'00'                                                           
         ORG   TBLWMARK+C'S'                                                    
         DC    8X'00'                                                           
         ORG   TBLWMARK+C'0'                                                    
         DC    10X'00'                                                          
         ORG   TBLWMARK+C'.'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'$'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'@'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'#'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'&&'                                                   
         DC    X'00'                                                            
         ORG   TBLWMARK+C'_'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C''          Cent sign                                 
         DC    X'00'                                                            
         ORG   TBLWMARK+C'!'          Exp. point                                
         DC    X'00'                                                            
         ORG   TBLWMARK+C'<'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'>'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C':'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'%'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'['                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C']'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'{'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'}'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'\'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'`'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'?'                                                    
         DC    X'00'                                                            
         ORG   TBLWMARK+C'*'       believe it or not, EVAL and                  
         DC    X'00'               JES do own scanning                          
         ORG                                                                    
         SPACE 4                                                                
*-                                                                              
*-                                                                              
*-       TBLWCLR - WYLBUR STOP CHARACTERS, REVERSE VIDEO                        
*-                                                                              
*-       NOTE: WYLBUR DEFAULT STOP CHARACTERS, IE. TABLE WYLBUR                 
*-       USES FOR STOPING COMMAND SCANS.  HISTORICAL GARBAGE.                   
*-                                                                              
TBLWCLR  LABEL ,                                                                
***                                                                             
***  SHOULD BE SAME, COPIED FROM CLTBL  (WYLBUR CLASS TABLE)                    
***                                                                             
         DC    256X'00'           ASSUME ALL ARE STOP CHARACTERS                
         ORG   TBLWCLR+C'a'        EXCEPT AS FOLLOWS,,,                         
         DC    9X'FF'                                                           
         ORG   TBLWCLR+C'j'                                                     
         DC    9X'FF'                                                           
         ORG   TBLWCLR+C's'                                                     
         DC    8X'FF'                                                           
         ORG   TBLWCLR+C'A'                                                     
         DC    9X'FF'                                                           
         ORG   TBLWCLR+C'J'                                                     
         DC    9X'FF'                                                           
         ORG   TBLWCLR+C'S'                                                     
         DC    8X'FF'                                                           
         ORG   TBLWCLR+C'0'                                                     
         DC    10X'FF'                                                          
         ORG   TBLWCLR+C'.'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'$'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'@'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'#'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'&&'                                                    
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'_'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C''          Cent sign                                  
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'!'          Exp. point                                 
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'<'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'>'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C':'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'%'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'['                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C']'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'{'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'}'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'\'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'`'                                                     
         DC    X'FF'                                                            
         ORG   TBLWCLR+C'?'                                                     
         DC    X'FF'                                                            
         ORG                                                                    
         SPACE 2                                                                
*-                                                                              
*-                                                                              
*-       MISC TABLES                                                            
*-                                                                              
*-                                                                              
TBLBLANK DC    256C' '             BLANKS                                       
*                                                                               
TBLUPPER LABEL ,                   TR CONVERT TO UPPER                          
         DC    256AL1(*-TBLUPPER)                                               
         ORG   TBLUPPER+C'a'                                                    
         DC    C'ABCDEFGHI'                                                     
         ORG   TBLUPPER+C'j'                                                    
         DC    C'JKLMNOPQR'                                                     
         ORG   TBLUPPER+C's'                                                    
         DC    C'STUVWXYZ'                                                      
         ORG                                                                    
         EJECT                                                                  
         QLTORG                                                                 
         TITLE 'MISC SCANNER/PARSE ROUTINES'                                    
*                                                                               
**                                                                              
**  NOTVALID - GIVE 'TOKEN: invalid' MESSAGE                                    
**                                                                              
**  ON ENTRY:                                                                   
**    CPNSCANP - POINTER TO SCAN CONTROL BLOCK                                  
**                                                                              
**  NOTE, CAUTION:                                                              
**  DOES NOT RETURN,,, EXITS VIA ERROR EXIT.                                    
**                                                                              
**  NOTE, CAUTION:                                                              
**  CPNSCANP MUST HAVE POINTER TO SCAN CB !                                     
**                                                                              
**                                                                              
*                                                                               
NOTVALID XPROC ,                                                                
         L     R2,CPNSCANP                                                      
         USING NSCNCB,R2                                                        
*                                                                               
         IF    (R0,NE,R0),BEGIN    ZAP TO SEND CMDS TO SPIRES                   
         VCALL ORVCPASS                                                         
         COMMENT DOES NOT RETURN IF SPIRES CMD                                  
         END                                                                    
*                                                                               
         TCCR  ,,,                 PUT OUT CR IF NEEDED                         
*                                                                               
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         CEIL  R0,32                                                            
         TSEG  (R1),(R0)                                                        
         ERROR  ': invalid.',,SYNTAX                                            
         PEND  ,                                                                
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
*                                                                               
**                                                                              
**  SCNNOOP  - DO NOTHING SCAN PROCESSING ROUTINE                               
**                                                                              
*                                                                               
SCNNOOP  XPROC                                                                  
         PEND                                                                   
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCSEG - SEG A MESSAGE TO THE SCAN MESSAGE BUFFER                            
**                                                                              
**  ON ENTRY: R1,R0 MESSAGE LOC,LEN,  R2 - SCAN CONTROL BLOCK                   
**  ON EXIT: R15 = -4, MESSAGE ADDED TO SCAN CONTROL BLOCK                      
**                                                                              
**                                                                              
*                                                                               
SCSEG    XPROC                                                                  
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   R4,R5 - DEST, LOC, LEN                       
         COMMENT                   R1 - LOCATION, LEN                           
         LA    R3,L'NSCNMSG        Total message length                         
         S     R3,NSCNMSGL         Space remaining                              
         CEIL  R0,R3               Not too much now                             
         IF    (R0,POS),BEGIN      We can add something...                      
         LR    R3,R0               R3 - TOTAL MSG LENGTH                        
         A     R3,NSCNMSGL                                                      
         LA    R4,NSCNMSG                                                       
         A     R4,NSCNMSGL                                                      
         LR    R5,R0                                                            
         MOVE  R5,@R4,@R1          MOVE IN MSG                                  
         A     R0,NSCNMSGL         SAVE MSG LENGTH                              
         ST    R0,NSCNMSGL                                                      
         END                                                                    
*                                                                               
         L     R15,=F'-4'                                                       
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCNINVAL - INVALID SCAN                                                     
**                                                                              
**  ON ENTRY:                                                                   
**       R2 - SCAN CONTROL BLOCK                                                
**                                                                              
**  ON EXIT:                                                                    
**       INVALID MESSAGE PLACED IN SCAN CB.                                     
**       R15 RETURNED AS NEGATIVE                                               
**                                                                              
**  NOTE, CAUTION:                                                              
**  R2 IS ASSUMED TO POINT TO SCAN CB.                                          
**                                                                              
*                                                                               
SCNINVAL XPROC ,                                                                
         USING NSCNCB,R2                                                        
*                                                                               
         COMMENT                   R1,R0 - TOKEN LOC,LEN                        
         L     R1,NSCNTLOC                                                      
         L     R0,NSCNTLEN                                                      
         CEIL  R0,32                                                            
         SCSEG (R1),(R0)                                                        
         SCSEG ': invalid. '                                                    
*                                                                               
         L     R15,=F'-4'                                                       
         PEND  ,                                                                
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCAN CHECK                                                                  
**                                                                              
**  ON ENTRY:                                                                   
**       CPNSCANP - SCAN CONTROL BLOCK                                          
**       R15 - RETURN COND FROM SCAN CALL                                       
**                                                                              
**  IF R15 IS A NEGATIVE RETURN CODE, WE PRINT THE ERROR                        
**  MESSAGE AND ABORT THE COMMAND.   IF R15 IS >= 0, WE                         
**  RETURN TO THE CALLER.                                                       
**                                                                              
**  CAUTION:                                                                    
**    IF R15 IS NEGATIVE, THIS ROUTINE WILL NOT RETURN.                         
**                                                                              
**  CAUTION:                                                                    
**    DO NOT CALL SCANCHK FROM WITHIN SCAN MODULE. IT USES                      
**    CPNSCANP POINTER.                                                         
**                                                                              
**  NOTE:                                                                       
**    CPNSCANP MUST POINT TO SCAN CONTROL BLOCK.  THIS                          
**    MAY NOT BE THE CASE DURING INITIALIZATION.  WE DO                         
**    NOT PASS SCAN CB IN R0 OR R1, BECAUSE THOSE ARE                           
**    SET WITH SCAN RETURNS THAT WE DO NOT WANT TO DIDDLE.                      
**    IT WOULD BE NICE NOT TO HAVE TO MAKE THIS ASSUMPTION                      
**    AND USE THE SCCBADR MACRO OF THE CALLER... BUT THIS                       
**    IS NOT POSSIBLE HERE.  (SCCBADR IS DIFFERENT IN SCAN                      
**    MODULE).   OH WELL FOR NOW.                                               
*                                                                               
SCANCHK  XPROC                                                                  
         USING NSCNCB,R2                                                        
         L     R2,CPNSCANP         * !!!!                                       
*                                                                               
         COMMENT                   IF SCAN ERROR                                
         IF    (R15,NEG),BEGIN                                                  
         COMMENT                   WRITE OUT SCAN ERROR                         
         TCCR  ,,                                                               
         L     R0,NSCNMSGL                                                      
         LA    R1,NSCNMSG                                                       
         ERROR (R1),(R0),SYNTAX                                                 
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCAN DEQUOTE                                                                
**                                                                              
**  THIS ROUTINE WILL DEQUOTE IF QUOTED,  IF NOT                                
**  QUOTED THIS ROUTINE WILL UPPER CASE ..                                      
**  THE ROUTINE WILL TRUNCATE IF NECESSARY.                                     
**                                                                              
**  ON ENTRY:                                                                   
**       R1,R0 - DEQUOTED OUTPUT LOC, LEN                                       
**       R15 - SCAN CONTROL BLOCK                                               
**       NSCNTLOC, NSCNTLEN - TOKEN LOC, LEN (POSSIBLY QUOTED)                  
**                                                                              
**  ON EXIT:                                                                    
**       R1,R0 - DEQUOTED OUTPUT LOC, ACTUAL LEN                                
**       R15 - ZERO                                                             
*                                                                               
SCDQUOTE XPROC ,                                                                
         LR    R6,R15                                                           
         USING NSCNCB,R6                                                        
*                                                                               
         COMMENT                   BLANK STRING                                 
         LR    R2,R1                                                            
         LR    R3,R0                                                            
         L     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   R2,R3 TOKEN LOC, LEN                         
         L     R2,NSCNTLOC                                                      
         L     R3,NSCNTLEN                                                      
*                                                                               
         COMMENT                   CHECK IF QUOTED  ,,,                         
         IF    (R3,LT,2),NOTQUOTE                                               
         IF    ((@R2,NE,''''),AND,(@R2,NE,'"')),NOTQUOTE                        
         LR    R4,R2                                                            
         AR    R4,R3                                                            
         DECR  R4                                                               
         IF    ('CLC @R4(1),@R2',NE),NOTQUOTE                                   
*                                                                               
         COMMENT                   IF QUOTED, DEQUOTE                           
         LR    R4,R2               R4 - QUOTE TYPE                              
         LR    R5,R1               R5 - START OF DEST                           
         LA    R2,1(R2)            R2,R3 - SOURCE                               
         DECR  R3                  R1,R0 - DEST                                 
         DECR  R3                                                               
         IF    (R3,GT,R0),' LR R3,R0 '                                          
         WHILE (R3,POS),BEGIN      Move string a char at a time...              
         MVC   @R1(1),@R2                                                       
         IF    ('CLC @R2(1),@R4',EQ),BEGIN  Check for two quotes...             
         IF    ((R3,POS),AND,('CLC @R2(1),@R2+1',EQ)),BEGIN                     
         LA    R2,@R2+1            Skip second quote                            
         DECR  R3                                                               
         END                                                                    
         END                                                                    
*                                                                               
         LA    R1,@R1+1                                                         
         LA    R2,@R2+1                                                         
         DECR  R3                                                               
         END                                                                    
         LR    R0,R1                                                            
         LR    R1,R5                                                            
         SR    R0,R1                                                            
         B     SCDQDONE                                                         
*                                                                               
NOTQUOTE LABEL ,                                                                
         LR    R4,R1               MOVE IT                                      
         LR    R5,R0                                                            
         L     R2,NSCNTLOC                                                      
         L     R3,NSCNTLEN                                                      
         O     R3,=X'40000000'                                                  
         MVCL  R4,R2                                                            
         LR    R4,R1                                                            
         LR    R5,R0               TO UPPER ,,                                  
         L     R14,CVUPPTBL                                                     
         IF    (R5,POS),BEGIN                                                   
         DEX   R5,' TR @R4(0),@R14 '                                            
         END                                                                    
         IF    (R0,GT,NSCNTLEN),BEGIN                                           
         L     R0,NSCNTLEN                                                      
         END                                                                    
         B     SCDQDONE                                                         
*                                                                               
SCDQDONE LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  CHECK QUOTES                                                                
**                                                                              
**  IF NO QUOTES, ERROR                                                         
**  ALL ERRORS EXIT VIA CVERROR W/ERROR MSG                                     
**                                                                              
**  ON ENTRY: R1,R0 - TOKEN LOCATION, LENGTH                                    
**  ON EXIT: R15 - ZERO                                                         
**                                                                              
*                                                                               
CKQUOTES XPROC ,                                                                
         IF    (R0,LT,2),BADQUOTE                                               
         IF    ((@R1,NE,''''),AND,(@R1,NE,'"')),BADQUOTE                        
         LR    R2,R1                                                            
         AR    R2,R0                                                            
         DECR  R2                  R2 - END OF QUOTES                           
         IF    ((@R2,NE,''''),AND,(@R2,NE,'"')),BADQUOTE                        
         B     OKQUOTE                                                          
*                                                                               
BADQUOTE LABEL ,                                                                
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid.  Missing quotes.'                                    
*                                                                               
OKQUOTE  LABEL ,                                                                
         CLEAR R15                                                              
         PEND  ,                                                                
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCAN UPPER CASE                                                             
**                                                                              
**  THIS ROUTINE WILL UPPER CASE TOKEN AND PUT                                  
**  IT BLANK PADDED INTO THE CELL POINTED AT BY R1.                             
**  THE ROUTINE WILL TRUNCATE IF NECESSARY.                                     
**                                                                              
**                                                                              
**  ON ENTRY:                                                                   
**       R1,R0 - CELL LOC, LEN                                                  
**       R15 - SCAN CONTROL BLOCK                                               
**       NSCNTLOC, NSCNTLEN - TOKEN LOC, LEN                                    
**                                                                              
**  ON EXIT:                                                                    
**       R1,R0 - OUTPUT LOC, ACTUAL LEN                                         
**       R15 - ZERO                                                             
**                                                                              
**  NOTE:                                                                       
**  YOU CAN UPPER CASE A TOKEN IN PLACE IF YOU USE THE                          
**  ACTUAL TOKEN LEN  (IE. SCUPCASE (R1),(R0))                                  
*                                                                               
SCUPCASE XPROC ,                                                                
         LR    R6,R15                                                           
         USING NSCNCB,R6                                                        
*                                                                               
         COMMENT                   MOVE TOKEN, UPPER CASE IT                    
         LR    R4,R1               R4,R5 - CELL LOCATION                        
         LR    R5,R0                                                            
         L     R2,NSCNTLOC         R2,R3 - TOKEN                                
         L     R3,NSCNTLEN                                                      
         O     R3,=X'40000000'     BLANK PAD                                    
         IF    (R4,NE,R2),BEGIN    IF IN PLACE UPCASE, SKIP MOVE                
         MVCL  R4,R2                                                            
         END                                                                    
         LR    R4,R1                                                            
         LR    R5,R0               TO UPPER                                     
         L     R14,CVUPPTBL                                                     
         IF    (R5,POS),BEGIN                                                   
         DEX   R5,' TR @R4(0),@R14 '                                            
         END                                                                    
         IF    (R0,GT,NSCNTLEN),BEGIN  RETURN ACTUAL LEN                        
         L     R0,NSCNTLEN                                                      
         END                                                                    
*                                                                               
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
**                                                                              
**  SCAN TOKEN ---                                                              
**                                                                              
**  SCAN A TOKEN USING                                                          
**      ' =,' AS SKIP CHARS, AND                                                
**      ' =,;' AS STOP CHARS ...                                                
**                                                                              
**  ALL NORMAL SCAN CONVENTIONS APPLY,,, QUOTES ARE                             
**  MATCHED, SAME ENTRY EXIT CONVETIONS AS A SIMPLE                             
**  SCAN, RETURNS R1,R0 - TOKEN LOC LEN, R15 IS                                 
**  RETURN CODE, (MISMATCHED QUOTES ARE THE ONLY BAD                            
**  RETURN I CAN THINK OF.)  THE SKIP/STOP TABLES ARE                           
**  RESET UPON EXIT.                                                            
**                                                                              
**                                                                              
*                                                                               
STKWA    RECORD BEGIN                                                           
STKSKIP  DS    XL256                                                            
STKSTOP  DS    XL256                                                            
         END                                                                    
*                                                                               
*                                                                               
NSCANTOK XPROC STKWA                                                            
         SCPUSH TABLES                                                          
         SETSKIP STKSKIP,' =,'                                                  
         SETSTOP STKSTOP,' =,;'                                                 
         SETSCKWS ,                                                             
         SCAN  TABLES=NOSET                                                     
         SCPOP TABLES                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  HEXCONV/HEXSTR -- Routine to convert hex digits to binary.                   
*                                                                               
*    On entry:                                                                  
*      R1,R0 - string loc,len                                                   
*      R15   - output string loc (only for "HEXSTR" entry)                      
*                                                                               
*    On exit:                                                                   
*      R15 = neg   - bad hex string (R1,R0 - as on entry)                       
*      R15 = z,pos - hex string converted. R15 = string len.                    
*                (R1,R0 - string loc, len)                                      
*                                                                               
*    CAUTION:                                                                   
*      R15 clobbered by this routine                                            
*                                                                               
HEXCONV  XPROC ,                                                                
         LR    R15,R1              Convert to hex in  place                     
         ACALL HEXSTR                                                           
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
*                                                                               
HEXSTR   XPROC ,                                                                
         IF    ((@R1,EQ,''''),OR,(@R1,EQ,'"')),BEGIN  string quotes...          
         LA    R1,@R1+1                                                         
         SH    R0,=Y(2)                                                         
         END                                                                    
*                                                                               
         XPUSH R0,R1,*             Ptrs restored if bad hex                     
*                                                                               
         LR    R6,R15              Output string ptr                            
         CLEAR R5                  Output string len                            
         CLEAR R4,R3               Ic regs                                      
*                                                                               
         WHILE (R0,POS),BEGIN                                                   
         ST    R0,CPDOUB                                                        
         IF    CPDOUB+3.1,BEGIN    Odd no. of digits...                         
         MVI   CPDOUB,C'0'                                                      
         MVC   CPDOUB+1(1),@R1                                                  
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
         ELSE  BEGIN               Even no. of digits...                        
         MVC   CPDOUB(2),@R1                                                    
         LA    R1,@R1+2            Kick ptr                                     
         SH    R0,=Y(2)            & remaining len                              
         END                                                                    
         OC    CPDOUB(2),CVBLANKS  Upper case                                   
*  first digit...                                                               
         IF    (CPDOUB,LT,'A'),HEXBAD                                           
         IC    R3,CPDOUB           Get char                                     
         LA    R2,C'A'-10          Assume alpha adjustment                      
         IF    (CPDOUB,GT,'F'),BEGIN                                            
         IF    ((CPDOUB,LT,'0'),OR,(CPDOUB,GT,'9')),HEXBAD                      
         LA    R2,C'0'             Numeric adjustment                           
         END                                                                    
         SR    R3,R2               Binary                                       
*  second digit...                                                              
         IF    (CPDOUB+1,LT,'A'),HEXBAD                                         
         IC    R4,CPDOUB+1         Get char                                     
         LA    R2,C'A'-10          Assume alpha adjustment                      
         IF    (CPDOUB+1,GT,'F'),BEGIN                                          
         IF    ((CPDOUB+1,LT,'0'),OR,(CPDOUB+1,GT,'9')),HEXBAD                  
         LA    R2,C'0'             Numeric adjustment                           
         END                                                                    
         SR    R4,R2               Binary                                       
*                                                                               
         SLL   R3,4                Move high byte over                          
         AR    R3,R4               Form byte                                    
         STC   R3,@R6(R5)                                                       
         LA    R5,@R5+1                                                         
         END                                                                    
         LR    R1,R6               Loc                                          
         LR    R0,R5               Len                                          
         LR    R15,R5              Len                                          
         B     HEXEXIT                                                          
*                                                                               
HEXBAD   XPOP  R0,R1,*             Restore orig ptrs                            
         L     R15,=F'-4'                                                       
         B     HEXEXIT                                                          
*                                                                               
HEXEXIT  LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         TITLE 'Trim Leading and Trailing Blanks'                               
*box                                                                            
*                                                                               
*  RTRIM -- Trim right-side (trailing) blanks.                                  
*                                                                               
*    On entry:                                                                  
*      R1,R0 - string loc, len                                                  
*                                                                               
RTRIM    XPROC (R2,LSR)                                                         
         LR    R6,R1                                                            
         AR    R6,R0                                                            
         DECR  R6                                                               
         WHILE ((R0,POS),AND,(@R6,EQ,' ')),'DECR R6; DECR R0'                   
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  LRTRIM -- Trim left and right-side (leading/trailing) blanks.                
*                                                                               
*    On entry:                                                                  
*      R1,R0 - string loc, len                                                  
*                                                                               
LRTRIM   XPROC (R2,LSR)                                                         
         WHILE ((R0,POS),AND,(@R1,EQ,' ')),'LA R1,@R1+1; DECR R0'               
*                                                                               
         LR    R6,R1                                                            
         AR    R6,R0                                                            
         DECR  R6                                                               
         WHILE ((R0,POS),AND,(@R6,EQ,' ')),'DECR R6; DECR R0'                   
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  UPCASE -- Convert string to upper case (in place).                           
*                                                                               
*    On entry:                                                                  
*      R1,R0 - string loc, len                                                  
*                                                                               
*    On exit:                                                                   
*      Guaranteed not to change R15.                                            
*                                                                               
UPCASE   XPROC                                                                  
         L     R5,CVUPPTBL         Upper case translate table                   
         LR    R2,R0               Total string length                          
         WHILE (R2,GT,256),BEGIN   Do a chunk at a time...                      
         TR    @R1(256),@R5        Convert to caps                              
         LA    R1,@R1+256                                                       
         SH    R2,=H'256'                                                       
         END                                                                    
*                                                                               
         DTEX  R2,'TR @R1(0),@R5'   Convert remainder to upper case             
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  LOWCASE -- Convert string to lower case (in place).                          
*                                                                               
*    On entry:                                                                  
*      R1,R0 - string loc, len                                                  
*                                                                               
*    On exit:                                                                   
*      Guaranteed not to change R15.                                            
*                                                                               
LOWCASE  XPROC                                                                  
         L     R5,CVLOWTBL         Lower case translate table                   
         LR    R2,R0               Total string length                          
         WHILE (R2,GT,256),BEGIN   Do a chunk at a time...                      
         TR    @R1(256),@R5        Convert to caps                              
         LA    R1,@R1+256                                                       
         SH    R2,=H'256'                                                       
         END                                                                    
*                                                                               
         DTEX  R2,'TR @R1(0),@R5'   Convert remainder to upper case             
         PEND                                                                   
         TITLE 'TEST SCAN STUFF'                                                
* TESTSCAN BEGIN ,,, NSCAN TEST BEGIN ,,,  DEBUG                                
*                                                                               
**                                                                              
**  TEST NEW SCANNER                                                            
**                                                                              
**                                                                              
*                                                                               
TESTSCAN XPROC                                                                  
*                                                                               
*                                                                               
         SET   CPLFLG1.CPFALL                                                   
         VCALL NDETRNG                                                          
         L     R2,CPNSCANP         INSURE R2 IS SCAN CB WITHIN                  
         SCAN  TESTPRT1            SCAN MODULE                                  
         SCANCHK                                                                
*                                                                               
         COMMENT                                                                
         TSEG  'ALL DONE.'                                                      
         TWRITE                                                                 
*                                                                               
         B     CVNEXT                                                           
         PEND                                                                   
*                                                                               
*  SCKW TABLES                                                                  
*                                                                               
TESTPRT1 SCKW  DEVIATE,DEVIATE,(A,S)                                            
         SCKW  FACTOR,FACTOR,(A,P,I),99999                                      
         SCKW  LINENO,LINENO,(A1,P,LN)                                          
         SCKW  ,INT,I,10                                                        
         SCKW  ,LNO,LN                                                          
         SCKW  ,SYMLNO,SYMLN                                                    
         SCKW  ,COLS,A(MCOLS)    NOT REACHED, BECAUSE OF INT ABOVE              
         SCKW  PCOLS,PCOLS,(A,A(MPCOLS))                                        
         SCKW  PSYM,PSYM,(A(MPSYMLN),A)                                         
         SCKW  ,NULLRTN,NULL                                                    
         SCKW  ,PUSHRTN,PUSH                                                    
         SCKW  ,ERRORRTN,END                                                    
*                                                                               
TESTPRT2 SCKW  PDEVIATE,PDEVIATE,(A,DONTBLANK)                                  
         SCKW  PFACTOR,PFACTOR,(A,P,PI,DONTBLANK)                               
         SCKW  PLINENO,PLINENO,(A1,P,LN,END,DONTBLANK)                          
*                                                                               
         EJECT                                                                  
*                                                                               
*  DEVIATE                                                                      
*                                                                               
DEVIATE  PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  FACTOR                                                                       
*                                                                               
FACTOR   PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  LINE NUMBER                                                                  
*                                                                               
LINENO   PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  LINE NUMBER                                                                  
*                                                                               
SYMLNO   PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  LINE NUMBER                                                                  
*                                                                               
LNO      PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  LINE NUMBER                                                                  
*                                                                               
INT      PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  LINE NUMBER                                                                  
*                                                                               
COLS     PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  LINE NUMBER                                                                  
*                                                                               
PCOLS    PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  LINE NUMBER                                                                  
*                                                                               
PSYM     PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  NULL                                                                         
*                                                                               
NULLRTN  PROC                                                                   
         TSEG 'Null scan.',,CR                                                  
         TWRITE                                                                 
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  PUSH                                                                         
*                                                                               
PUSHRTN  PUSHRTN TESTPRT2                                                       
*                                                                               
*  ERRORRTN                                                                     
*                                                                               
ERRORRTN PROC                                                                   
         TSEG (R1),(R0)                                                         
         TSEG ': invalid.'                                                      
         TWRITE                                                                 
         PEND                                                                   
*                                                                               
*  PDEVIATE                                                                     
*                                                                               
PDEVIATE PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  PFACTOR                                                                      
*                                                                               
PFACTOR  PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
*  PLINE NUMBER                                                                 
*                                                                               
PLINENO  PROC                                                                   
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
         EJECT                                                                  
         QLTORG                                                                 
* TESTSCAN END ,,, NSCAN TEST END    DEBUG                                      
         EJECT                                                                  
         QLTORG ,                  ,,, DEBUG OF DETRNG                          
         EJECT                                                                  
         VLTORG                                                                 
         END   .                                                                
