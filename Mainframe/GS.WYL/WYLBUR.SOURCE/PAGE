PAGE     TITLE 'WYLBUR''s Page Manager'                                         
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
WYLPAGE  CSECT                                                                  
PAGE     IDENT 2193                15:11:47 07/12/02  (SLP)                     
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
         MACRO                                                                  
&L       FREECURS                                                               
         CLEAR CPVCURS,CPVACURS                                                 
         MVC   CPVLNO,=F'-1000'                                                 
         MVC   CPVALNO,=F'-1'                                                   
         CLEAR CPVCOL,CPVACOL                                                   
         MEND                                                                   
*                                                                               
         MACRO                                                                  
&L       FREELINT                                                               
&L       IF    (LINTLNO,EQ,LINTOLNO),BEGIN  Save old attributes...              
         OC    LINTOFLG,LINTFLG    Preserve the attributes                      
         END                                                                    
         CLEAR LINTOPT             (Also sets LINFFREE)                         
         MEND                                                                   
         SYSDEFN                                                                
         SPACE 2                                                                
         PUSH  DSECTS                                                           
         COPY  CONTROL                                                          
         EJECT                                                                  
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         EJECT                                                                  
AINFO    RECORD BEGIN                                                           
AINA     AINFO                                                                  
         END                                                                    
*                                                                               
         POP   DSECTS                                                           
         TITLE 'DSECTS'                                                         
         COPY  WIND                                                             
         EJECT                                                                  
         COPY  LINT                                                             
         TITLE 'Page Editor Manager'                                            
*box                                                                            
*                                                                               
*  GETVIEW -- Routine to get session VIEW control block.                        
*                                                                               
*    On exit:                                                                   
*      CP pointers are updated to point to VIEW control blocks                  
*                                                                               
GETVIEW  PROC                                                                   
*-                                                                              
*-       Get and initialize WIND entries.                                       
*-                                                                              
         LA    R2,WINDMAX#                                                      
         MH    R2,=AL2(L'WIND)     Total size of WIND entries                   
*                                                                               
         IF    ('LT R1,CPWINDP',Z),BEGIN  Get WIND entries...                   
         LR    R0,R2                                                            
*        GETMAIN RU,LV=(0),LOC=ANY  Get control blocks                          
         VCALL GETCORE                                                          
         ST    R1,CPWINDP          Save WIND ptr                                
         LR    R15,R1                                                           
         SH    R15,=AL2(L'WIND)                                                 
         ST    R15,CPXWIND         Save WIND-(1 entry) ptr                      
         END                                                                    
*                                                                               
         ZOT   (R1),(R2)           Zero                                         
*-                                                                              
*-       Get and initialize LINT entries.                                       
*-                                                                              
         LA    R2,LINTMAX#                                                      
         MH    R2,=AL2(L'LINT)     Total size of WIND entries                   
*                                                                               
         IF    ('LT R1,CPLINTP',Z),BEGIN  Get LINT entries...                   
         LR    R0,R2                                                            
*        GETMAIN RU,LV=(0),LOC=ANY  Get control blocks                          
         VCALL GETCORE                                                          
         ST    R1,CPLINTP          Save WIND ptr                                
         LR    R15,R1                                                           
         SH    R15,=AL2(L'LINT)                                                 
         ST    R15,CPXLINT         Save LINT-(1 entry) ptr                      
         END                                                                    
*                                                                               
         ZOT   (R1),(R2)           Zero                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREEVIEW -- Routine to free VIEW control blocks.                             
*                                                                               
*    On exit:                                                                   
*      CP pointers are cleared                                                  
*                                                                               
FREEVIEW XPROC                                                                  
         IF    (CPWINDP,NZ),BEGIN  Free WIND entries...                         
         LA    R0,WINDMAX#                                                      
         MH    R0,=AL2(L'WIND)     Total size of WIND entries                   
         L     R1,CPWINDP                                                       
         CLEAR CPWINDP,CPXWIND                                                  
*        FREEMAIN RU,A=(1),LV=(0)  Free WIND control blocks                     
         VCALL FREECORE                                                         
         END                                                                    
*                                                                               
         IF    (CPLINTP,NZ),BEGIN  Free LINT entries...                         
         LA    R0,LINTMAX#                                                      
         MH    R0,=AL2(L'LINT)     Total size of LINT entries                   
         L     R1,CPLINTP                                                       
         CLEAR CPLINTP,CPXLINT                                                  
*        FREEMAIN RU,A=(1),LV=(0)  Free LINT control blocks                     
         VCALL FREECORE                                                         
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETVINFO -- Routine to get information about the current                     
*    window being viewed.                                                       
*                                                                               
*    On entry:                                                                  
*      R1,R0 - message text area                                                
*                                                                               
*    On exit:                                                                   
*      R15 - 0=ok; 4=not viewing the current Active file                        
*      R1,R0 - message text area filled in (R0=actual len)                      
*                                                                               
GINFWA   RECORD BEGIN                                                           
GINFSG   SEGCB                                                                  
         END                                                                    
*-                                                                              
GETVINFO XPROC GINFWA                                                           
         LA    R5,4                Pre-set bad return code                      
*                                                                               
         SEGINIT (R1),(R0),GINFSG                                               
*-                                                                              
*-       The following code generates an information line that can              
*-        later be passed to the SETVINFO routine.  This information            
*-         line can be saved in user data, so it's important not to             
*-       change the format of the information (adding information at            
*-         the end is OK though).                                               
*-                                                                              
*-         The format is:                                                       
*-                                                                              
*-           VIEW=starting-lineno,flag,cursor-lineno,cursor-column              
*-                                                                              
*-     "flag" is 0 if the cursor is on the command line and 1 if the            
*-         cursor is in the text area.                                          
*-                                                                              
         SEG   'VIEW='                                                          
         LTH   R6,CPVWCUR                                                       
         IF    Z,BEGIN                                                          
         SEG   '-1'                                                             
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND                                                       
         WITH  (WIND,R6)                                                        
         LT    R0,WINDFLNO                                                      
         IF    (NEG,OR,(WINDACT,NE,CPACTNO)),'SETMSG "-1"'                      
         ELSE  BEGIN                                                            
         CLEAR R5                  Set good return code                         
         VCALL CVEXNO                                                           
         END                                                                    
         SEG   (R1),(R0)           Starting lineno                              
*                                                                               
         LA    R2,1                Flag: cursor in text area                    
         L     R3,CPVLNO           Cursor lineno                                
         LH    R4,CPVCOL           Cursor column                                
*                                                                               
         IF    (R3,NEG),BEGIN      Not in text area...                          
         CLEAR R2                  Flag: cursor NOT in text area                
         L     R3,CPVALNO          Alternate cursor lineno                      
         LH    R4,CPVACOL          Alternate cursor column                      
         END                                                                    
*                                                                               
         IF    (R3,NEG),EXIT       No cursor info available                     
         SEG   ','                                                              
         SEGDC (R2)                Cursor flag                                  
         SEG   ','                                                              
         LR    R0,R3                                                            
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)           Cursor line-number                           
         SEG   ','                                                              
         SEGDC (R4)                Cursor column                                
         END                                                                    
*                                                                               
*                                                                               
         SETMSG L:GINFSGLOC,L:GINFSGLENF  Text loc, len                         
         PRETURN (R0,R1)           Pass ptrs back to caller                     
         LR    R15,R5              Set return code                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SETVINFO -- Routine to set information about the current                     
*    window being viewed.  This routine expects a string in the                 
*    format generated by the GETVINFO routine above.                            
*                                                                               
*    On entry:                                                                  
*      R1,R0 - message text area (R0=0 means default)                           
*                                                                               
SETVINFO XPROC ,                                                                
         SCPUSH ,                                                               
*-                                                                              
*-       Default View.                                                          
*-                                                                              
         IF    (R0,NP),BEGIN       We want the default...                       
         IF    (CPVWCNT,Z),SETVEXIT  Not set up yet, scram                      
         SETMSG 'VIEW=-1'           Default view                                
         END                                                                    
*-                                                                              
*-       Scan View info.                                                        
*-                                                                              
         SCINIT (R1),(R0)                                                       
         SCAN  ,                   Skip over "VIEW="                            
         SCANCHK                                                                
*                                                                               
         IF    (CPVWCNT,Z),'ACALL PAGEINIT'  Initialize page                    
*-                                                                              
*-       Switch window to view new Active file.                                 
*-                                                                              
         LH    R6,CPVWCUR                                                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND          Current WIND ptr                             
         WITH  (WIND,R6)                                                        
*                                                                               
         MVC   WINDACT,CPACTNO     Set new Active file number                   
         LH    R4,WINDFROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT          First lint in window                         
         WHILE (R4,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R5)                                                        
         MVC   LINTOLNO,=F'-2'     Invalidate old line-number                   
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Setup to view indicated part of file.                                  
*-                                                                              
         ACALL PAGECLR             First clear the window                       
*                                                                               
         FREECURS                                                               
*                                                                               
         ACALL SCANLNO             Get line-number                              
         IF    ^NEG,BEGIN          Save line-number...                          
         ST    R15,WINDSLNO        Make view with R15 first lineno              
*                                                                               
         ACALL SCANINT             Looking for flag: 0/1                        
         LR    R2,R15              Save                                         
*                                                                               
         ACALL SCANLNO             Cursor lineno                                
         LR    R3,R15              Save                                         
*                                                                               
         ACALL SCANINT             Cursor column                                
         LR    R4,R15              Save                                         
*-                                                                              
*-       Set cursor and alternate-cursor positions.                             
*-                                                                              
         IF    (R2,NZ),BEGIN       Primary cursor position...                   
         ST    R3,CPVLNO           Line-number                                  
         STH   R4,CPVCOL           Column                                       
         END                                                                    
         ELSE  BEGIN               Alternate cursor position...                 
         ST    R3,CPVALNO          Line-number                                  
         STH   R4,CPVACOL          Column                                       
         END                                                                    
         END                                                                    
*                                                                               
SETVEXIT SCPOP ,                                                                
         CLEAR R15                 Set return code                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SCANLNO -- Local routine to scan a line-number.                              
*                                                                               
SCANLNO  PROC                                                                   
         CLEAR R3                                                               
         SCAN  SLNOPRT                                                          
         IF    (R15,NEG),BEGIN                                                  
         L     R3,=F'-1'                                                        
         END                                                                    
         LR    R15,R3                                                           
         PEND                                                                   
*                                                                               
SLNOPRT  SCKW  ,SLNOERR,NULL                                                    
         SCKW  ,SLNORTN,LN                                                      
         SCKW  ,SLNOERR                                                         
*-                                                                              
SLNORTN  PROC                                                                   
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SLNOERR  PROC                                                                   
         L     R3,=F'-1'                                                        
         PRETURN (R3)                                                           
         LA    R15,4                                                            
         PEND                                                                   
*box                                                                            
*                                                                               
*  SCANINT -- Local routine to scan an integer.                                 
*                                                                               
SCANINT  PROC                                                                   
         CLEAR R3                                                               
         SCAN  SINTPRT                                                          
         IF    (R15,NEG),BEGIN                                                  
         L     R3,=F'-1'                                                        
         END                                                                    
         LR    R15,R3                                                           
         PEND                                                                   
*                                                                               
*                                                                               
SINTPRT  SCKW  ,SINTERR,NULL                                                    
         SCKW  ,SINTRTN,I                                                       
         SCKW  ,SINTERR                                                         
*-                                                                              
SINTRTN  PROC                                                                   
         LR    R3,R0                                                            
         PRETURN (R3)                                                           
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
SINTERR  PROC                                                                   
         L     R3,=F'-1'                                                        
         PRETURN (R3)                                                           
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WINDGET -- Routine to return an information string about the                 
*    window specified.                                                          
*                                                                               
*    On entry:                                                                  
*       R15 - window number                                                     
*       R1,R0 - return string area (loc,len)                                    
*                                                                               
*    On exit:                                                                   
*       R1,R0 - message loc, len                                                
*                                                                               
WGETWA   RECORD BEGIN                                                           
WGETSG   SEGCB                                                                  
         END                                                                    
*-                                                                              
WINDGET  XPROC WGETWA                                                           
         CLEAR WGETWA                                                           
         LR    R5,R15              Save window number                           
         SEGINIT (R1),(R0),WGETSG                                               
*                                                                               
         SETMSG 'INVALID WINDOW NUMBER'                                         
         IF    (R5,POS),BEGIN      Valid window number...                       
         SETMSG 'NOT OPEN'                                                      
         IF    (R5,GT,CPVWCNT),EXIT                                             
*                                                                               
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         WITH  (WIND,R5)                                                        
*-                                                                              
*-       Format window information string.                                      
*-                                                                              
         IF    (WINDNO,EQ,CPVWCUR),'SEG "CURRENT "'                             
*                                                                               
         SETMSG 'NUMBERED'                                                      
         IF    WINFUNN,'SETMSG "UNNUMBERED"'                                    
         SEG   (R1),(R0)                                                        
*                                                                               
         SEG   ' FROW='                                                         
         SEGDC LH:WINDFROW                                                      
*                                                                               
         SEG   ' LROW='                                                         
         SEGDC LH:WINDLROW                                                      
*                                                                               
         SEG   ' ACTIVE='                                                       
         SEGDC L:WINDACT                                                        
*                                                                               
         CLEAR R1,R0               (Fall through SEG below)                     
         END                                                                    
*                                                                               
         SEG   (R1),(R0)                                                        
*                                                                               
         SETMSG L:WGETSGLOC,L:WGETSGLENF  Return string                         
         PRETURN (R0,R1)           Return to caller                             
*                                                                               
         CLEAR R15                 (Tidy)                                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WINDPUT -- Routine to set information about the window                       
*    specified.                                                                 
*                                                                               
*    On entry:                                                                  
*      R15 - window number                                                      
*      R1,R0 - return string area (loc,len)                                     
*      R3,R2 - options string loc, len                                          
*                                                                               
*    On exit:                                                                   
*      R1,R0 - return message loc, len                                          
*                                                                               
WPUTWA   RECORD BEGIN                                                           
WPUTFLAG FLAG                                                                   
         FLAG  WPUTFFIX            - Fix window numbering                       
         FLAG  WPUTFTOP            - Set new top lineno                         
         FLAG  WPUTFBOT            - Set new bottom lineno                      
*                                                                               
WPUTWNO  DS    H                   Saved window number                          
WPUTLNO  DS    F                   Working lineno                               
*                                                                               
WPUTSG   SEGCB                                                                  
         END                                                                    
*-                                                                              
WINDPUT  XPROC WPUTWA                                                           
         LA    R6,WPUTWA                                                        
         WITH  (WPUTWA,R6)                                                      
         CLEAR WPUTWA                                                           
         LR    R5,R15              Save window number                           
         SCPUSH ,                                                               
         SEGINIT (R1),(R0),WPUTSG                                               
*                                                                               
         SETMSG 'INVALID WINDOW NUMBER'                                         
         IF    (R5,POS),BEGIN      Valid window number...                       
         IF    (R5,GT,CPVWCNT),EXIT  Not defined, scram                         
*                                                                               
         LR    R4,R5                                                            
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         WITH  (WIND,R5)                                                        
*-                                                                              
*-       Modify existing window's options.                                      
*-                                                                              
         SCINIT (R3),(R2)                                                       
         SCAN WPUTPRT                                                           
         IF    (R15,NZ),'SETMSG "ERROR"'                                        
         ELSE  'SETMSG "OK"'                                                    
*                                                                               
         XPUSH R0,R1                                                            
         IF    WPUTFTOP,BEGIN      Set new top lineno...                        
         MVC   WPUTWNO,CPVWCUR     Save current window number                   
         MVC   CPVWCUR,WINDNO      We are the new current                       
         CLEAR R0                  No lines before                              
         L     R15,WPUTLNO         Top lineno                                   
         ACALL PAGETOP             Make it the top lineno                       
         MVC   CPVWCUR,WPUTWNO     Restore current window                       
         END                                                                    
*                                                                               
         IF    WPUTFBOT,BEGIN      Set new bottom lineno...                     
         MVC   WPUTWNO,CPVWCUR     Save current window number                   
         MVC   CPVWCUR,WINDNO      We are the new current                       
         CLEAR R0                  No lines after                               
         L     R15,WPUTLNO         Bottom lineno                                
         ACALL PAGEBOT             Make it the bottom lineno                    
         MVC   CPVWCUR,WPUTWNO     Restore current window                       
         END                                                                    
*                                                                               
         IF    WPUTFFIX,'ACALL WINDFIX'  Fix window numbering                   
         XPOP  R0,R1                                                            
         END                                                                    
*                                                                               
         SEG   (R1),(R0)                                                        
*                                                                               
         SETMSG L:WPUTSGLOC,L:WPUTSGLENF  Return string                         
         PRETURN (R0,R1)                                                        
*                                                                               
         SCPOP ,                   Restore scanner                              
*                                                                               
         CLEAR R15                 (Tidy)                                       
         PEND                                                                   
*-                                                                              
*-       WINDPUT Options.                                                       
*-                                                                              
WPUTPRT  SCKW  UNNUMBERED,WPUTUNN,A                                             
         SCKW  NUMBERED,WPUTNUM,A                                               
         SCKW  FROW,WPUTFROW,(A,P,PI)                                           
         SCKW  LROW,WPUTLROW,(A,P,PI)                                           
         SCKW  ACTIVE,WPUTACT,(A,P,PI)                                          
         SCKW  TOP,WPUTTOP,(A,P,LN)                                             
         SCKW  BOTTOM,WPUTBOT,(A,P,LN)                                          
         SCKW  CURRENT,WPUTCUR,A                                                
         SCKW  ,WPUTERR                                                         
*-                                                                              
WPUTUNN  PROC                                                                   
         WITH  (WIND,R5)                                                        
         IF    WINFUNN,EXIT                                                     
         SET   WINFUNN+WINFMOD                                                  
         PEND                                                                   
*                                                                               
WPUTNUM  PROC                                                                   
         WITH  (WIND,R5)                                                        
         IF    ^WINFUNN,EXIT                                                    
         CLEAR WINFUNN                                                          
         SET   WINFMOD                                                          
         PEND                                                                   
*                                                                               
WPUTFROW PROC                                                                   
         WITH  (WIND,R5),(WPUTWA,R6)                                            
         IF    ((R0,NP),OR,(R0,GT,LINTMAX#)),BEGIN                              
         LA    R15,4               YUCKY VALUE                                  
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         SET   WPUTFFIX                                                         
         STH   R0,WINDFROW                                                      
         CLEAR R15                                                              
         END                                                                    
         PEND                                                                   
*                                                                               
WPUTLROW PROC                                                                   
         WITH  (WIND,R5),(WPUTWA,R6)                                            
         IF    ((R0,NP),OR,(R0,GT,LINTMAX#)),BEGIN                              
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         SET   WPUTFFIX                                                         
         STH   R0,WINDLROW                                                      
         CLEAR R15                                                              
         END                                                                    
         PEND                                                                   
*                                                                               
WPUTACT  PROC                                                                   
         WITH  (WIND,R5)                                                        
         ST    R0,WINDACT                                                       
         CLEAR WINDSLNO                                                         
         MVC   WINDELNO,CVMAXLNO                                                
         L     R0,=F'-1'                                                        
         ST    R0,WINDELNO                                                      
         ST    R0,WINDLLNO                                                      
         SET   WINFREWR+WINFMOD                                                 
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
WPUTTOP  PROC                                                                   
         WITH  (WPUTWA,R6)                                                      
         IF    ((R0,NEG),OR,(R0,GT,CVMAXLNO)),BEGIN                             
         LA    R15,4               YUCKY VALUE                                  
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         SET   WPUTFTOP,(WPUTFBOT,OFF)                                          
         ST    R0,WPUTLNO          Save lineno                                  
         END                                                                    
         PEND                                                                   
*                                                                               
WPUTBOT  PROC                                                                   
         WITH  (WPUTWA,R6)                                                      
         IF    ((R0,NEG),OR,(R0,GT,CVMAXLNO)),BEGIN                             
         LA    R15,4               YUCKY VALUE                                  
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         SET   WPUTFBOT,(WPUTFTOP,OFF)                                          
         ST    R0,WPUTLNO          Save lineno                                  
         END                                                                    
         PEND                                                                   
*                                                                               
WPUTCUR  PROC                                                                   
         WITH  (WIND,R5)                                                        
         MVC   CPVWCUR,WINDNO                                                   
         PEND                                                                   
*                                                                               
WPUTERR  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ROWGET -- Routine to return an information string about the                  
*    row specified.                                                             
*                                                                               
*    On entry:                                                                  
*       R15 - row number                                                        
*       R1,R0 - return string area (loc,len)                                    
*                                                                               
*    On exit:                                                                   
*       R1,R0 - message loc, len                                                
*                                                                               
RGETWA   RECORD BEGIN                                                           
RGETSG   SEGCB                                                                  
         END                                                                    
*-                                                                              
ROWGET   XPROC RGETWA                                                           
         CLEAR RGETWA                                                           
         LR    R4,R15              Save row number                              
         SEGINIT (R1),(R0),RGETSG                                               
*                                                                               
         SETMSG 'INVALID ROW NUMBER'                                            
         IF    (R4,POS),BEGIN      Valid row number...                          
         SETMSG 'NOT DEFINED'                                                   
         IF    (R4,GT,CPVHEI),EXIT                                              
*                                                                               
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT                                                       
         WITH  (LINT,R4)                                                        
*-                                                                              
*-       Format row information string.                                         
*-                                                                              
         SETMSG 'ERR '                                                          
         IF    LINFFREE,'LA R1,=CL4"FREE"'                                      
         IF    LINFNEW,'LA R1,=CL4"NEW "'                                       
         IF    LINFTEXT,'LA R1,=CL4"TEXT"'                                      
         IF    LINFCOL,'LA R1,=CL4"COL "'                                       
         IF    LINFCMD,'LA R1,=CL4"CMD "'                                       
         IF    LINFMSG,'LA R1,=CL4"MSG "'                                       
         IF    LINFSTAT,'LA R1,=CL4"STAT"'                                      
         SEG   (R1),(R0)                                                        
*                                                                               
         SEG   ' WINDOW='                                                       
         SEGDC LH:LINTWIND                                                      
*                                                                               
         IF    LINFTEXT,BEGIN                                                   
         SEG   ' LINE='                                                         
         L     R0,LINTLNO                                                       
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)                                                        
         END                                                                    
*                                                                               
         CLEAR R1,R0               (Fall through SEG below)                     
         END                                                                    
*                                                                               
         SEG   (R1),(R0)                                                        
*                                                                               
         SETMSG L:RGETSGLOC,L:RGETSGLENF  Return string                         
         PRETURN (R0,R1)           Return to caller                             
*                                                                               
         CLEAR R15                 (Tidy)                                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ROWPUT -- Routine to set information about the row specified.                
*                                                                               
*    On entry:                                                                  
*      R15 - row number                                                         
*      R1,R0 - return string area (loc,len)                                     
*      R3,R2 - options string loc, len                                          
*                                                                               
*    On exit:                                                                   
*      R1,R0 - return message loc, len                                          
*                                                                               
RPUTWA   RECORD BEGIN                                                           
RPUTSG   SEGCB                                                                  
         END                                                                    
*-                                                                              
ROWPUT   XPROC RPUTWA                                                           
         LA    R6,RPUTWA                                                        
         WITH  (RPUTWA,R6)                                                      
         CLEAR RPUTWA                                                           
         LR    R4,R15              Save window number                           
         SCPUSH ,                                                               
         SEGINIT (R1),(R0),RPUTSG                                               
*                                                                               
         SETMSG 'INVALID ROW NUMBER'                                            
         IF    (R4,POS),BEGIN      Valid row number...                          
         IF    (R4,GT,CPVHEI),EXIT                                              
*                                                                               
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT                                                       
         WITH  (LINT,R4)                                                        
*-                                                                              
*-       Modify existing row's options.                                         
*-                                                                              
         SCINIT (R3),(R2)                                                       
*                                                                               
         SCAN  RPUTPRT                                                          
         IF    (R15,NZ),'SETMSG "ERROR"'                                        
         ELSE  'SETMSG "OK"'                                                    
         END                                                                    
*                                                                               
         SEG   (R1),(R0)                                                        
*                                                                               
         SETMSG L:RPUTSGLOC,L:RPUTSGLENF  Return string                         
         PRETURN (R0,R1)                                                        
*                                                                               
         SCPOP ,                   Restore scanner                              
*                                                                               
         CLEAR R15                 (Tidy)                                       
         PEND                                                                   
*-                                                                              
*-       ROWPUT Options.                                                        
*-                                                                              
RPUTPRT  SCKW  FREE,RPUTFREE,A                                                  
         SCKW  NEW,RPUTNEW                                                      
         SCKW  TEXT,RPUTTEXT,A                                                  
         SCKW  COLUMN,RPUTCOL,A                                                 
         SCKW  CMD,RPUTCMD                                                      
         SCKW  MSG,RPUTMSG                                                      
         SCKW  STATUS,RPUTSTAT,A                                                
         SCKW  ,RPUTERR                                                         
*-                                                                              
RPUTFREE PROC                                                                   
         WITH  (LINT,R4)                                                        
         SET   LINFFREE                                                         
         PEND                                                                   
*                                                                               
RPUTNEW  PROC                                                                   
         WITH  (LINT,R4)                                                        
         SET   LINFNEW                                                          
         PEND                                                                   
*                                                                               
RPUTTEXT PROC                                                                   
         WITH  (LINT,R4)                                                        
         SET   LINFTEXT                                                         
         PEND                                                                   
*                                                                               
RPUTCOL  PROC                                                                   
         WITH  (LINT,R4)                                                        
         SET   LINFCOL                                                          
         PEND                                                                   
*                                                                               
RPUTCMD  PROC                                                                   
         WITH  (LINT,R4)                                                        
         SET   LINFCMD                                                          
         PEND                                                                   
*                                                                               
RPUTMSG  PROC                                                                   
         WITH  (LINT,R4)                                                        
         SET   LINFMSG                                                          
         PEND                                                                   
*                                                                               
RPUTSTAT PROC                                                                   
         WITH  (LINT,R4)                                                        
         SET   LINFSTAT                                                         
         PEND                                                                   
*                                                                               
RPUTERR  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGETCHK -- Routine to make sure that the type of terminal being             
*    used works in page mode.  This routine returns only if it's                
*    ok.                                                                        
*                                                                               
PAGETCHK XPROC                                                                  
*-                                                                              
*-       Make sure the front-end can support page mode.                         
*-                                                                              
         IF    CPSTASYN,BEGIN      1270...                                      
         TSEG  'This type of terminal controller does not support '             
         TSEG  'the VIEW command.',,CR                                          
         ABORT 'Type HELP DIAL-UP for more information.'                        
         END                                                                    
*                                                                               
         IF    CPSTVIRT,BEGIN      Virtual terminal...                          
         ABORT 'Virtual terminals can not use the VIEW command.'                
         END                                                                    
*                                                                               
         IF    CPSTCONS,BEGIN      Console...                                   
         ABORT 'Consoles can not use the VIEW command.'                         
         END                                                                    
*-                                                                              
*-       Make sure this type of terminal is supported.                          
*-                                                                              
         LT    R6,CPTTYPEP                                                      
         BZ    MODMSG                                                           
         WITH  (TTYPE,R6),BEGIN                                                 
         IF    ^TTYFMOD,BEGIN      Not supported by model terminal...           
MODMSG   IF    (CPSTTYPE,Z),BEGIN                                               
         TSEG  'You must first issue the "SET TERMINAL type" '                  
         TSEG  'command.',,CR                                                   
         END                                                                    
*                                                                               
         ELSE  BEGIN               Wrong type of terminal...                    
         TSEG  'The type of terminal you are using ('                           
         TSEG  CPSTTYPE,,T                                                      
         TSEG  ') is not supported in page mode.',,CR                           
         END                                                                    
*                                                                               
         ABORT 'Type ? for more information.',,BADTERM                          
         END                                                                    
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGECMD -- Routine to get the next command when the user is                  
*    in page mode.                                                              
*                                                                               
*    This routine is entered from the command processor.                        
*                                                                               
PAGECMD  XPROC                                                                  
*-                                                                              
*-       Initialize view control blocks if necessary.                           
*-                                                                              
         IF    (CPVWCNT,Z),'ACALL PAGEINIT'  Initialize page                    
*-                                                                              
*-       Reset information from the previous command.                           
*-                                                                              
         VCALL INITCMD             Re-initialize                                
*-                                                                              
*-       View the current page.                                                 
*-                                                                              
         LOOP  BEGIN               Loop forever in page mode ..                 
         CLEAR CPVFSPEC            Nothing specific                             
         ACALL PAGEMOD             View the current page                        
         IF    NZ,'ACALL PAGERES; B CVNEXT'  Reset page mode                    
*                                                                               
         MVC   CPVMSG,CVBLANKS                                                  
         MVC   CPVMSG(L'CONTMSG),CONTMSG  Nothing to continue                   
         SET   CPVFBELL            Complain                                     
         END                                                                    
*                                                                               
         BOMB                      never hit, we loop above forever             
         PEND                                                                   
*                                                                               
CONTMSGX DC    C'Nothing to continue, '                                         
         DC    C'CONTINUE [ESC RETURN] ignored.'                                
CONTMSG  EQU   CONTMSGX,*-CONTMSGX,C'X'                                         
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEMSG -- Routine to take the current terminal seg buffer and               
*    place that text into the page mode message area.  If the                   
*    text won't fit, no action is taken.                                        
*                                                                               
PAGEMSG  XPROC                                                                  
         IF    (CPFDUMP,OR,CPFQUIET),PMSGEXIT  Forget it                        
*                                                                               
         LT    R2,CPSEGLENF        Length of pending msg                        
         IF    POS,BEGIN                                                        
         IF    CPFEXEC,EXIT  In EXEC mode, forget it                            
*                                                                               
         IF    (R2,GT,L'CPVMSG),EXIT  Too big, forget it                        
         L     R3,CPSEGLOC                                                      
         LA    R15,@R3(R2)                                                      
         DECR  R15                 Last char                                    
         IF    (@R15,EQ,X'15'),'DECR R2'  Strip trailing NL                     
*-                                                                              
*-       Check for imbedded NL's.                                               
*-                                                                              
         SETMSG (R3),(R2)                                                       
         WHILE (R0,POS),BEGIN      Look for NL's...                             
         IF    (@R1,EQ,X'15'),PMSGEXIT  Found an NL, scram                      
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
*-                                                                              
*-       Save the text as the page mode message line.                           
*-                                                                              
         MVC   CPVMSG,CVBLANKS                                                  
         MOVE  R2,CPVMSG,@R3       Set it as the info msg                       
*                                                                               
         TCLEAR                                                                 
         END                                                                    
*                                                                               
PMSGEXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGERES -- Routine to reset page mode if the user is currently               
*    in page mode.                                                              
*                                                                               
PRESWA   RECORD BEGIN                                                           
PRSEG    SEGCB                                                                  
PRTRM    DS    XL(L'CPTRM)         Terminal I/O options                         
*                                                                               
PRESBUF  DS    CL64                Local seg buffer                             
         END                                                                    
*-                                                                              
PAGERES  XPROC PRESWA                                                           
*                                                                               
         IF    CPVFPAGE,BEGIN      Currently in page mode...                    
*-                                                                              
*-       Save the current TSEG buffer and use a local seg buffer.               
*-                                                                              
         MVC   PRSEG,CPSEG         Save standard seg buffer info                
         MVC   PRTRM,CPTRM         Save terminal I/O options                    
         CLEAR CPTRM               Use default options                          
*-                                                                              
*-       Switch back to line mode (different for VTAM terminals).               
*-                                                                              
         IF    CPVFVTAM,BEGIN      VTAM terminal...                             
         SEGINIT PRESBUF,,CPSEG    Init new seg buffer                          
         MVC   CPSEGRTN,PRSEGRTN   Set appropriate routine                      
         SET   CPFDISP             It's still display mode                      
*-                                                                              
*-       Write the final sequence when exiting page mode.  We will              
*-         rewrite it (up to 5 times) if the user interrupts it.                
*-                                                                              
         LA    R5,5                Maximum retry count                          
         WHILE (R5,POS),BEGIN                                                   
         TREND BACK                Set background rendition                     
         TSEG  L:=A($CSVTAM),L'$CSVTAM  VTAM version of clear screen            
         TMARK ,                   (Avoid NL)                                   
         TWRITE                                                                 
         IF    NP,EXIT             Normal or logging off, scram                 
         DECR  R5                                                               
         END                                                                    
*                                                                               
         CLEAR CPVFPAGE,CPFDISP    Reset page mode                              
         IF    (CPCMDLEN,NZ),BEGIN  We have a new command...                    
         CLEAR R1,R0                                                            
         VCALL GETHCMD             Get most recently typed command              
         IF    (R0,POS),BEGIN      Re-display the command...                    
         XPUSH R0,R1                                                            
         TSEG  'Command: '                                                      
         XPOP  R0,R1                                                            
         TSEG  (R1),(R0),T                                                      
         TWRITE                                                                 
         END                                                                    
         END                                                                    
*                                                                               
         B     PRESDONE            Finish up                                    
         END                                                                    
*-                                                                              
*-       Write the final sequence when exiting page mode.  We will              
*-         rewrite it (up to 5 times) if the user interrupts it.                
*-                                                                              
         LA    R5,5                Maximum retry count                          
         WHILE (R5,POS),BEGIN                                                   
         SEGINIT PRESBUF,,CPSEG    Init new seg buffer                          
         MVC   CPSEGRTN,PRSEGRTN   Set appropriate routine                      
         SET   CPFDISP             It's still display mode                      
*-                                                                              
*-       Make sure the rendition is normal.                                     
*-                                                                              
         TREND BACK                Background rendition                         
*                                                                               
         TSEG  '<.normal>'         Do the other rendition reset                 
         TMARK                                                                  
*-                                                                              
*-       Clear any message area.                                                
*-                                                                              
         TSEG  L:=A($CLRMSG),L'$CLRMSG                                          
*-                                                                              
*-       Reset any scrolling region.                                            
*-                                                                              
         TSEG  L:=A($CSI),L'$CSI                                                
         TSEG  'r'                                                              
*-                                                                              
*-   Clear everything from the message row to the end of the screen.            
*-                                                                              
         TCURS LH:CPVMSGR,1         Position to message row                     
         TSEG  L:=A($CREM),L'$CREM  Clear                                       
         TMARK ,                   (Avoid NL)                                   
         TWRITE                                                                 
         IF    NP,EXIT             Normal or logging off, scram                 
*                                                                               
         DECR  R5                                                               
         END                                                                    
*-                                                                              
*-       Restore standard TSEG buffer.                                          
*-                                                                              
PRESDONE MVC   CPSEG,PRSEG                                                      
         MVC   CPTRM,PRTRM                                                      
*                                                                               
         CLEAR CPVFPAGE,CPFDISP    Reset page mode                              
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEINIT -- Routine to re-build the page image with only one                 
*    window.                                                                    
*                                                                               
PAGEINIT XPROC                                                                  
         SET   CPVFCLR             Clear and rewrite page                       
         CLEAR CPVFSPEC            Nothing specific on the page                 
         FREECURS ,                Default cursor position                      
*-                                                                              
*-       Allocate view control blocks now if not already allocated.             
*-                                                                              
         ACALL GETVIEW                                                          
         CLEAR CPVWCUR,CPVWCNT                                                  
*-                                                                              
*-       Initialize screen dimensions.                                          
*-                                                                              
         ACALL CALCDIM             Initialize screen dimensions.                
*-                                                                              
*-       If there is a current window expand it so that it takes the            
*-       entire page.                                                           
*-                                                                              
         L     R6,CPWINDP                                                       
         WITH  (WIND,R6)                                                        
*                                                                               
         LTH   R15,CPVWCUR         Current window (if any)                      
         IF    Z,'CLEAR WIND'                                                   
         ELSE  BEGIN               There is a current window...                 
         MH    R15,=AL2(L'WIND)                                                 
         A     R15,CPXWIND                                                      
         MVC   WIND,@R15           Make it window #1                            
         END                                                                    
*-                                                                              
*-       Tidy up line attributes on the page.                                   
*-                                                                              
         LA    R4,1                                                             
         L     R5,CPLINTP                                                       
         WHILE (R4,LE,CPVHEI),BEGIN                                             
         WITH  (LINT,R5)                                                        
         IF    (LINTWIND,EQ,CPVWCUR),BEGIN                                      
         IF    LINFCOL,'SET LINFFREE'                                           
         END                                                                    
         ELSE  BEGIN               Reset lines for other windows...             
         FREELINT                                                               
         END                                                                    
*                                                                               
         STH   R4,LINTROW          Save line's row number                       
         MVC   LINTWIND,=H'1'      Set line's window number                     
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Set window attributes.                                                 
*-                                                                              
         MVC   WINDNO,=H'1'        Set window number                            
         MVC   WINDACT,CPACTNO     Default Active file                          
*                                                                               
         CLEAR WINDFLAG                                                         
         LA    R15,12                                                           
         IF    CPVFUNN,'SET WINFUNN; LA R15,1'                                  
         STH   R15,WINDTCOL        First text column                            
         CLEAR WINDFCOL            Reset starting column                        
*                                                                               
         MVC   WINDIND,CPVIND      Set default indentation                      
         MVC   WINDMARG,CPVMARG    Set default right margin                     
         CLEAR WINFWRAP            Assume no wordwrap                           
         IF    CPVFWRAP,'SET WINFWRAP'  Wordwrap mode                           
*-                                                                              
*-       Add special lines to the page.                                         
*-                                                                              
         LA    R4,1                                                             
         L     R5,CPLINTP          First line on page                           
*                                                                               
         STH   R4,WINDFROW         Set first row in window                      
*-                                                                              
*-      Add special lines at the top on the page for VTAM terminals.            
*-                                                                              
         IF    CPVFVTAM,BEGIN      VTAM terminal...                             
         WITH  (LINT,R5)                                                        
         FREELINT                                                               
         CLEAR LINTWIND            (Global line)                                
         SET   LINFCMD             Command line                                 
         STH   R4,CPVCMDR          Save command line's row                      
         LA    R4,@R4+1                                                         
         LA    R5,LINTNEXT                                                      
*                                                                               
         FREELINT                                                               
         CLEAR LINTWIND            (Global line)                                
         SET   LINFMSG             Message line                                 
         STH   R4,CPVMSGR          Save message line's row                      
         LA    R4,@R4+1                                                         
         LA    R5,LINTNEXT                                                      
*                                                                               
         FREELINT                                                               
         CLEAR LINTWIND            (Global line)                                
         SET   LINFCOL             Column line                                  
         LA    R4,@R4+1                                                         
         LA    R5,LINTNEXT                                                      
*                                                                               
         FREELINT                                                               
         SET   LINFSTAT            Status line                                  
*                                                                               
         STH   R4,WINDFROW         First line on page                           
         MVC   WINDLROW,CPVHEI     Last line on page                            
         B     PAGIDONE            Finish up                                    
         END                                                                    
*-                                                                              
*-       Non-VTAM terminal format:                                              
*-         Make the status line the first on the page.                          
*-                                                                              
         WITH  (LINT,R5),BEGIN                                                  
         FREELINT                                                               
         SET   LINFSTAT            Status line                                  
         END                                                                    
*-                                                                              
*-       Add special lines to the bottom of the page.                           
*-                                                                              
         LH    R4,CPVHEI                                                        
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT          Last line                                    
         WITH  (LINT,R5),BEGIN                                                  
*-                                                                              
*-       Add command and message lines.                                         
*-                                                                              
         FREELINT                                                               
         CLEAR LINTWIND            (Global line)                                
         SET   LINFMSG             Message line                                 
         STH   R4,CPVMSGR          Save message line's row                      
         SH    R5,=AL2(L'LINT)                                                  
         DECR  R4                                                               
*                                                                               
         FREELINT                                                               
         CLEAR LINTWIND            (Global line)                                
         SET   LINFCMD             Command line                                 
         STH   R4,CPVCMDR          Save command line's row                      
         SH    R5,=AL2(L'LINT)                                                  
         DECR  R4                                                               
*-                                                                              
*-       Add column line.                                                       
*-                                                                              
         FREELINT                                                               
         CLEAR LINTWIND            (Global line)                                
         SET   LINFCOL             Column line                                  
         SH    R5,=AL2(L'LINT)                                                  
         DECR  R4                                                               
         END                                                                    
*                                                                               
         STH   R4,WINDLROW         Last row of window                           
*                                                                               
*                                                                               
PAGIDONE MVC   CPVWCUR,=H'1'       Set current window                           
         MVC   CPVWCNT,=H'1'       No. of windows on page                       
*                                                                               
         CLEAR R0,R1                                                            
         ACALL PAGECNT             Get number of text lines                     
         STH   R15,WINDTCNT        Save it for later                            
*                                                                               
         SET   WINFMOD                                                          
         MVC   WINDSLNO,=F'-1'     Calculate actual starting lineno             
*                                                                               
         ACALL CALCDIM             Recalc window dimensions                     
*                                                                               
         ACALL PAGETABS            Set window tabs                              
         PEND                                                                   
         EJECT                                                                  
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  PAGETABS -- Routine to set the tabs in all the windows to the                
*    current session tabs.                                                      
*                                                                               
PTABWA   RECORD BEGIN                                                           
PTABTABS DS    XL(L'WINDTABS)      Window tabs                                  
         END                                                                    
*-                                                                              
PAGETABS XPROC PTABWA                                                           
*-                                                                              
*-       Create window tabs information from session tabs.                      
*-                                                                              
         CLEAR PTABTABS                                                         
*                                                                               
         CLEAR R2,R3                                                            
         LOOP  BEGIN                                                            
         LC    R15,CPSTABS(R2)      Tab stop                                    
         SH    R15,=H'11'           Convert to WYLBUR style                     
         IF    POS,BEGIN                                                        
         STC   R15,PTABTABS(R3)     Save tab stop                               
         LA    R3,@R3+1                                                         
         END                                                                    
*                                                                               
         LA    R2,@R2+1                                                         
         UNTIL (R2,GE,L'PTABTABS)                                               
         END                                                                    
*-                                                                              
*-       Set the new tabs for all the lines in the window.                      
*-                                                                              
         LA    R4,1                                                             
         L     R5,CPWINDP                                                       
         WHILE (R4,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R5)                                                        
*                                                                               
         MVC   WINDTABS,PTABTABS   Set new tabs                                 
*-                                                                              
*-       Rewrite all the column lines.                                          
*-                                                                              
         LH    R3,WINDFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT                                                       
         WHILE (R3,LE,WINDLROW),BEGIN                                           
         WITH  (LINT,R4)                                                        
*                                                                               
         IF    LINFCOL,'SET LINFREWR'                                           
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
*                                                                               
         LA    R5,WINDNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
         SET   CPVFFMT             Redo field formatting                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEMAKE -- Routine to make a new window starting with the                   
*    line-number specified.                                                     
*                                                                               
*    On entry:                                                                  
*      R15 - Line-number; will become first in window                           
*                                                                               
PAGEMAKE XPROC                                                                  
         LR    R5,R15                                                           
*                                                                               
         ACALL PAGECLR             First clear the window                       
*                                                                               
         LH    R6,CPVWCUR                                                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND                                                       
         WITH  (WIND,R6),BEGIN                                                  
         ST    R5,WINDSLNO         New starting lineno                          
         END                                                                    
*                                                                               
         ACALL PAGEFILL            Fill out the page                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGENEWW -- Routine to create a new window by splitting the                  
*    window specified at the row specified.                                     
*                                                                               
*    On entry:                                                                  
*      R0 - window number (0=current)                                           
*      R1 - first row of new window (0=split window in half)                    
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok; R0 = new window number                                           
*      nz- error; R1,R0 - error message loc,len                                 
*                                                                               
NEWWWA   RECORD BEGIN                                                           
NEWWWIND DS    XL(L'WIND)          Working "new" window                         
*                                                                               
NEWWSAVE DS    XL(L'WIND*WINDMAX#)  Saved window area                           
         END                                                                    
*-                                                                              
PAGENEWW XPROC NEWWWA                                                           
         LTR   R6,R0               Window number                                
         IF    Z,'LH R6,CPVWCUR'   Use the default window                       
         IF    (R6,GT,CPVWCNT),'SETMSG "INVALID WINDOW"; B NEWWERR'             
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND          Get WIND ptr                                 
         WITH  (WIND,R6)                                                        
*                                                                               
         LTR   R5,R1               Get first row number                         
         IF    Z,BEGIN             We need to calculate it...                   
         LH    R2,WINDFROW         First row of window                          
         LH    R5,WINDLROW         Last row of window                           
         SR    R5,R2               Number of rows in window                     
         LA    R5,@R5+1            Round up                                     
         SRL   R5,1                Divide by two                                
         IF    (R5,LE,2),'SETMSG "WINDOW TOO SMALL"; B NEWWERR'                 
         AR    R5,R2               New window's first row                       
         END                                                                    
*                                                                               
         IF    (CPVWCNT,GE,WINDMAX#),BEGIN  Too many windows...                 
         SETMSG 'TOO MANY WINDOWS'                                              
         B     NEWWERR                                                          
         END                                                                    
*                                                                               
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT          First row in new window                      
         WITH  (LINT,R5)                                                        
*                                                                               
         IF    (LINTWIND,NE,WINDNO),BEGIN  Something is wrong...                
         SETMSG 'WINDOW ROW ERROR'                                              
         B     NEWWERR                                                          
         END                                                                    
*-                                                                              
*-       Create the new window information.                                     
*-                                                                              
         FREELINT                                                               
*                                                                               
         SET   LINFSTAT,LINFREWR   Window starts with status line               
*                                                                               
         MVC   NEWWWIND,WIND       Save current window                          
         LA    R3,NEWWWIND                                                      
         WITH  (WIND,R3),BEGIN                                                  
         LH    R0,LINTROW          New window's first row                       
         STH   R0,WINDFROW         Set it                                       
*                                                                               
         LH    R1,WINDLROW                                                      
         ACALL PAGECNT             Count the number of text lines               
         STH   R15,WINDTCNT        Save count                                   
*                                                                               
         L     R15,=F'-1'          Must recalc starting lineno, etc.            
         ST    R15,WINDSLNO                                                     
         ST    R15,WINDELNO                                                     
         ST    R15,WINDFLNO                                                     
         ST    R15,WINDLLNO                                                     
*                                                                               
         SET   WINFMOD             Recalc first,last linenos                    
         END                                                                    
*-                                                                              
*-       Fix up the old window information.                                     
*-                                                                              
         LH    R2,LINTROW          First row of new window                      
         DECR  R2                  Back up                                      
         STH   R2,WINDLROW         Set new last row                             
*                                                                               
         LH    R0,WINDFROW                                                      
         LR    R1,R2                                                            
         ACALL PAGECNT             Count the number of text lines               
         STH   R15,WINDTCNT        Save count                                   
*                                                                               
         SET   WINFMOD             Recalc first,last linenos                    
*-                                                                              
*-       Insert the new window information in the table.                        
*-                                                                              
         LH    R2,CPVWCNT                                                       
         SH    R2,WINDNO           Number of windows after us                   
         IF    POS,BEGIN           Move the rest down...                        
         MH    R2,=AL2(L'WIND)                                                  
         MOVEL NEWWSAVE,WINDNEXT,(R2)  Open up...                               
         MOVEL WINDNEXT+L'WIND,NEWWSAVE,(R2)  ...a space                        
         END                                                                    
*                                                                               
         MVC   WINDNEXT(L'WIND),NEWWWIND  Insert new window info                
         INCR  R15,CPVWCNT         Total window count                           
*-                                                                              
*-       Fix up window numbering.                                               
*-                                                                              
         ACALL WINDFIX             Fix up window numbering                      
*                                                                               
         SET   CPVFFMT             Resend formatting (for trig rows)            
*                                                                               
         LH    R0,LINTWIND         Get new window number                        
         PRETURN (R0)              Return it to caller                          
         CLEAR R15                 A-ok                                         
         B     NEWWEXIT                                                         
*-                                                                              
*-       Error return.                                                          
*-                                                                              
NEWWERR  PRETURN (R0,R1)           Return error message string                  
         LA    R15,4               Error RC                                     
NEWWEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGETOP -- Routine to put the line specified at the top of the               
*    current window.                                                            
*                                                                               
*    On entry:                                                                  
*      R0 - Number of lines before first to display                             
*      R15- Line-number; will become first in window                            
*                                                                               
PAGETOP  XPROC                                                                  
         LR    R4,R15                                                           
         LTR   R3,R0                                                            
         IF    NEG,'CLEAR R3'      (Better safe than sorry)                     
*                                                                               
         ACALL PAGECLR             First clear the window                       
         IF    (R15,NZ),BEGIN      Have text lines in window...                 
         IF    (R3,GE,R15),'LR R3,R15; DECR R3'  Not too far                    
*                                                                               
         LH    R6,CPVWCUR                                                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND                                                       
         WITH  (WIND,R6)                                                        
         LH    R5,WINDFROW                                                      
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WITH  (LINT,R5)                                                        
*                                                                               
         LOOP  BEGIN               Leave room for before lines...               
         FAIL  (LINTWIND,NE,CPVWCUR),PAGETOP,'PAGETOP error.'                   
*                                                                               
         IF    LINFFREE,BEGIN      Will be a text line...                       
         IF    (R3,Z),BEGIN        Save last lineno...                          
         FREELINT                                                               
         SET   LINFTEXT            This is a text line                          
         ST    R4,LINTLNO          Save line-number                             
         END                                                                    
         DECR  R3                                                               
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         UNTIL (R3,NEG)                                                         
         END                                                                    
         END                                                                    
*                                                                               
         ACALL PAGEFILL            Fill out the page                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEBOT -- Routine to put the line specified at the bottom of                
*    the current window.                                                        
*                                                                               
*    On entry:                                                                  
*      R0 - Number of lines after last to display                               
*      R15- Line-number; will become last in window                             
*                                                                               
PAGEBOT  XPROC                                                                  
         LR    R4,R15                                                           
         LTR   R3,R0                                                            
         IF    NEG,'CLEAR R3'      (Better safe than sorry)                     
*                                                                               
         ACALL PAGECLR             First clear the window                       
         IF    (R15,NZ),BEGIN      Have text lines in window...                 
         IF    (R3,GE,R15),'LR R3,R15; DECR R3'  Not too far                    
*                                                                               
         LH    R6,CPVWCUR                                                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND                                                       
         WITH  (WIND,R6)                                                        
         LH    R5,WINDLROW                                                      
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WITH  (LINT,R5)                                                        
*                                                                               
         LOOP  BEGIN               Backup, as needed...                         
         FAIL  (LINTWIND,NE,CPVWCUR),PAGEBOT,'PAGEBOT error.'                   
*                                                                               
         IF    LINFFREE,BEGIN      Will be a text line...                       
         IF    (R3,Z),BEGIN        Save last lineno...                          
         FREELINT                                                               
         SET   LINFTEXT            This is a text line                          
         ST    R4,LINTLNO          Save line-number                             
         END                                                                    
         DECR  R3                                                               
         END                                                                    
*                                                                               
         SH    R5,=AL2(L'LINT)                                                  
         UNTIL (R3,NEG)                                                         
         END                                                                    
         END                                                                    
*                                                                               
         ACALL PAGEFILL            Fill out the page                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGECLR -- Routine to clear the lines in the current window                  
*    on the page.                                                               
*                                                                               
*    On exit:                                                                   
*      R15 (and cc) - no. of lines available in the current window              
*                                                                               
PAGECLR  XPROC                                                                  
         IF    (CPVWCNT,Z),'ACALL PAGEINIT'  Initialize page                    
*                                                                               
         CLEAR R3                  Line counter                                 
*                                                                               
         LH    R6,CPVWCUR                                                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND                                                       
         WITH  (WIND,R6),BEGIN                                                  
*                                                                               
         LH    R4,WINDFROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT          First line in window                         
         WHILE (R4,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R5)                                                        
         IF    (LINFNEW,OR,LINFTEXT),'FREELINT'                                 
         IF    LINFFREE,'LA R3,@R3+1'  Count available line                     
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
         CLEAR CPVFSPEC                                                         
*                                                                               
         L     R15,=F'-1'                                                       
         ST    R15,WINDSLNO                                                     
         ST    R15,WINDELNO                                                     
         ST    R15,WINDFLNO                                                     
         ST    R15,WINDLLNO                                                     
         SET   WINFMOD                                                          
         END                                                                    
*                                                                               
         LR    R15,R3              No. of lines in window                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGECOLS -- Routine to set a new starting column for the                     
*    text in the window specified.                                              
*                                                                               
*    On entry:                                                                  
*      R0 - new starting column number                                          
*      R15- WIND ptr                                                            
*                                                                               
PAGECOLS XPROC                                                                  
         LR    R6,R15                                                           
         WITH  (WIND,R6),BEGIN                                                  
*                                                                               
         LR    R1,R0                                                            
         DECR  R1                                                               
         IF    (R1,EQ,WINDFCOL),PCOLEXIT  No change, scram                      
         STH   R1,WINDFCOL         Save column-1 for lines                      
*                                                                               
         LH    R2,CPVTWID                                                       
         IF    WINFUNN,'DECR R2'   Account for one char prot field              
         LA    R2,@R2+1                                                         
         SH    R2,WINDTCOL         Maximum line length                          
         LA    R15,&LINESZ                                                      
         SR    R15,R1                                                           
         CEIL  R2,R15              Don't go past end of line                    
         STH   R2,WINDTLEN         Save it                                      
         SET   WINFREWR            Rewrite this window                          
         END                                                                    
*                                                                               
         SET   CPVFFMT             Reformat fields on page                      
PCOLEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEMARK -- Routine to mark the line specified as changed if                 
*    it's on the current page.                                                  
*                                                                               
*    On entry:                                                                  
*      R0 - line-number                                                         
*                                                                               
*    Performance note:  This routine is called every time a line                
*      is changed (or added) to the ACTIVE file, even when the user             
*      isn't currently in page mode.  So processing here should be              
*      kept to a minimum.                                                       
*                                                                               
PAGEMARK XPROC                                                                  
         LA    R5,1                                                             
         L     R6,CPWINDP                                                       
         WHILE (R5,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R6)                                                        
*-                                                                              
*-       Find the individual lines and mark them as changed.                    
*-                                                                              
         IF    (WINDACT,EQ,CPACTNO),BEGIN  This Active file...                  
         IF    ((R0,LT,WINDSLNO),OR,(R0,GT,WINDELNO)),EXIT                      
         LH    R3,WINDFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          First line in window                         
         WHILE (R3,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R4)                                                        
*                                                                               
         IF    LINFTEXT,BEGIN      Existing text lineno...                      
         IF    (LINTLNO,GE,R0),BEGIN  Got a match...                            
         IF    (LINTLNO,GT,R0),PAGMCH  We didn't find it, scram                 
         SET   LINFREWR            Rewrite modified line                        
         B     PAGMOLD                                                          
         END                                                                    
         END                                                                    
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
*                                                                               
PAGMCH   SET   WINFMOD             A line has been added                        
         END                                                                    
*                                                                               
PAGMOLD  LA    R6,WINDNEXT                                                      
         LA    R5,@R5+1                                                         
         END                                                                    
*                                                                               
PAGMKXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGECLRA -- Routine to remove the Active file specified from                 
*    being viewed.  Right now, the logic simply checks to see if                
*    the Active file is being viewed and if it is then PAGEINIT                 
*    is called.  Something smarter could be done to re-join the                 
*    windows.                                                                   
*                                                                               
*    On entry:                                                                  
*      R15 - active file number which is no longer to be viewed                 
*                                                                               
PAGECLRA XPROC                                                                  
         LR    R2,R15              Active file number                           
*                                                                               
         LA    R5,1                                                             
         L     R6,CPWINDP                                                       
         WHILE (R5,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R6)                                                        
*-                                                                              
*-       Re-initialize if we are currently viewing this Active                  
*-         file.                                                                
*-                                                                              
         IF    (WINDACT,EQ,R2),BEGIN  We are viewing the active...              
         VCALL PAGEINIT            Re-initialize                                
         B     PCLAEXIT                                                         
         END                                                                    
*                                                                               
         LA    R6,WINDNEXT         Next window                                  
         LA    R5,@R5+1                                                         
         END                                                                    
*                                                                               
PCLAEXIT CLEAR R15                 Neatness                                     
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEDEL -- Routine to mark the lines in the range given as                   
*    deleted.                                                                   
*                                                                               
*    On entry:                                                                  
*      R0 - starting line-number                                                
*      R1 - ending line-number                                                  
*                                                                               
*    Performance note:  This routine is called every time a line                
*      is deleted in the ACTIVE file, even when the user isn't                  
*      currently in page mode.  So processing here should be kept               
*      to a minimum.                                                            
*                                                                               
PAGEDEL  XPROC                                                                  
*-                                                                              
*-       Go through the windows looking for the specified lines.                
*-                                                                              
         LA    R5,1                                                             
         L     R6,CPWINDP                                                       
         WHILE (R5,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R6)                                                        
         IF    (WINDACT,EQ,CPACTNO),BEGIN  This Active file...                  
*-                                                                              
*-       Find the individual lines and mark them as deleted.                    
*-                                                                              
         IF    (((R0,GE,WINDSLNO),AND,(R0,LE,WINDELNO)),OR,            *        
               ((R1,GE,WINDSLNO),AND,(R1,LE,WINDELNO)),OR,             *        
               ((R0,LT,WINDSLNO),AND,(R1,GT,WINDELNO))),BEGIN                   
*                                                                               
         LH    R3,WINDFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          First line in window                         
         WHILE (R3,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R4)                                                        
         IF    LINFTEXT,BEGIN      Check out the line...                        
         IF    ((LINTLNO,GE,R0),AND,(LINTLNO,LE,R1)),'FREELINT'                 
         END                                                                    
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Invalidate any old line-numbers that have been deleted.                
*-                                                                              
         IF    (((R0,GE,WINDOFLN),AND,(R0,LE,WINDOLLN)),OR,            *        
               ((R1,GE,WINDOFLN),AND,(R1,LE,WINDOLLN)),OR,             *        
               ((R0,LT,WINDOFLN),AND,(R1,GT,WINDOLLN))),BEGIN                   
*                                                                               
         LH    R3,WINDFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          First line in window                         
         WHILE (R3,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R4)                                                        
         IF    ((LINTOLNO,GE,R0),AND,(LINTOLNO,LE,R1)),BEGIN                    
         MVC   LINTOLNO,=F'-2'     Invalidate old line-number                   
         END                                                                    
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         LA    R6,WINDNEXT                                                      
         LA    R5,@R5+1                                                         
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGENUM -- Routine to update a line-number that has been                     
*    renumbered if it is on the current page.  If this routine                  
*    changes any line-numbers it must set CPVFREN so the line-number            
*    marks can be removed when the renumber has completed.                      
*                                                                               
*    On entry:                                                                  
*      R0 - Old line-number                                                     
*      R1 - New line-number                                                     
*                                                                               
PAGENUM  XPROC                                                                  
*-                                                                              
*-       Fix up cursor and block line-numbers.                                  
*-                                                                              
         IF    ^CPVLNO.X'80',BEGIN  Check cursor lineno...                      
         IF    (CPVLNO,NE,R0),EXIT  No change, scram                            
         ST    R1,CPVLNO           Set new lineno                               
         SET   CPVLNO.X'80'        Mark it so it's not changed again            
         SET   CPVFREN                                                          
         END                                                                    
*                                                                               
         IF    ^CPVALNO.X'80',BEGIN  Check cursor lineno...                     
         IF    (CPVALNO,NE,R0),EXIT  No change, scram                           
         ST    R1,CPVALNO          Set new lineno                               
         SET   CPVALNO.X'80'       Mark it so it's not changed again            
         SET   CPVFREN                                                          
         END                                                                    
*                                                                               
         IF    (CPBLKACT,EQ,CPACTNO),BEGIN  This Active file...                 
         IF    ^CPFBKLNO.X'80',BEGIN  Check FBLOCK lineno...                    
         IF    (CPFBKLNO,NE,R0),EXIT  No change, scram                          
         ST    R1,CPFBKLNO         Set new lineno                               
         SET   CPFBKLNO.X'80'      Mark it so it's not changed again            
         SET   CPVFREN                                                          
         END                                                                    
*                                                                               
         IF    ^CPLBKLNO.X'80',BEGIN  Check LBLOCK lineno...                    
         IF    (CPLBKLNO,NE,R0),EXIT  No change, scram                          
         ST    R1,CPLBKLNO         Set new lineno                               
         SET   CPLBKLNO.X'80'      Mark it so it's not changed again            
         SET   CPVFREN                                                          
         END                                                                    
         END                                                                    
*-                                                                              
*-       Go through the windows looking for the specified lines.                
*-                                                                              
         LA    R5,1                                                             
         L     R6,CPWINDP                                                       
         WHILE (R5,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R6)                                                        
*                                                                               
         IF    (WINDACT,EQ,CPACTNO),BEGIN  This Active file...                  
         IF    ((R0,LT,WINDFLNO),OR,(R0,GT,WINDLLNO)),EXIT                      
*-                                                                              
*-       Look for the line in the window.                                       
*-                                                                              
         LH    R3,WINDFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          First line in window                         
         WHILE (R3,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R4)                                                        
         IF    LINFTEXT,BEGIN                                                   
         IF    (R0,NE,LINTLNO),EXIT  No match, scram                            
         IF    LINFREN,EXIT        Already changed, scram                       
         ST    R1,LINTLNO          New line-number                              
         IF    (R1,LT,WINDFLNO),'ST R1,WINDFLNO'  New first                     
         IF    (R1,GT,WINDLLNO),'ST R1,WINDLLNO'  New last                      
         SET   CPVFREN,LINFREN     Lineno has changed                           
         SET   LINFREWR            Rewrite modified line                        
         END                                                                    
*                                                                               
         IF    (R0,EQ,LINTOLNO),BEGIN  Matched previous lineno...               
         IF    LINFOREN,EXIT       Already changed, scram                       
         ST    R1,LINTOLNO         Update lineno                                
         SET   CPVFREN,LINFOREN    Lineno has changed                           
         END                                                                    
*                                                                               
         SET   WINFMOD             Recalculate linenos                          
         MVC   WINDSLNO,=F'-1'     Recalculate boundry linenos                  
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
         END                                                                    
*                                                                               
         LA    R6,WINDNEXT                                                      
         LA    R5,@R5+1                                                         
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGENCLR -- Routine to unmark the renumbered lines.  Lines                   
*    are marked as renumbered so they only get processed once                   
*    (see PAGENUM).  After the renumber is done then these marks                
*    have to be cleared (by this routine).                                      
*                                                                               
PAGENCLR XPROC                                                                  
*-                                                                              
*-       Reset any marked line-numbers.                                         
*-                                                                              
         IF    CPVLNO.X'80',BEGIN  Marked or undefined lineno...                
         IF    (CPVLNO,NE,-1000),'CLEAR CPVLNO.X"80"'  Unmark it                
         END                                                                    
*                                                                               
         IF    CPVALNO.X'80',BEGIN  Marked or undefined lineno...               
         IF    (CPVALNO,NE,-1),'CLEAR CPVALNO.X"80"'  Unmark it                 
         END                                                                    
*                                                                               
         CLEAR CPFBKLNO.X'80'      Make sure FBLOCK mark is off                 
         CLEAR CPLBKLNO.X'80'      Ditto for LBLOCK                             
*-                                                                              
*-       Reset any marked lines in the page.                                    
*-                                                                              
         LA    R4,1                                                             
         LT    R5,CPLINTP                                                       
         IF    NZ,BEGIN                                                         
         WHILE (R4,LE,CPVHEI),BEGIN  Go through lines...                        
         WITH  (LINT,R5)                                                        
         CLEAR LINFREN+LINFOREN    Reset any marks                              
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEFIND -- Routine to find the line-number specified in the                 
*    window.                                                                    
*                                                                               
*    On entry:                                                                  
*      R0 - Window number (0=current)                                           
*      R1 - Line-number to match                                                
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - Line-number not found                                                
*      nz- Row number of matched line                                           
*            R0=number of lines before matched line                             
*            R1=number of lines after matched line                              
*                                                                               
PAGEFIND XPROC (R2,LSR)                                                         
         LR    R3,R1               Save line-number to match                    
*                                                                               
         LTR   R6,R0               Window number                                
         IF    Z,'LH R6,CPVWCUR'   Use the default window                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND          Current window                               
         WITH  (WIND,R6)                                                        
*                                                                               
         CLEAR R0                  R0=Number of lines before match              
         LH    R1,WINDTCNT                                                      
         DECR  R1                  R1=Number of lines after match               
*                                                                               
         LH    R15,WINDFROW                                                     
         LR    R5,R15                                                           
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT          First row in window                          
         WHILE (R15,LE,WINDLROW),BEGIN  Go through lines...                     
         WITH  (LINT,R5)                                                        
         IF    LINFNEW,'A R0,CVONE'  Count the new line                         
         IF    LINFTEXT,BEGIN      Text line...                                 
         IF    (R3,EQ,LINTLNO),PAGCHXIT  Matched, scram                         
         A     R0,CVONE            Count the line before                        
         DECR  R1                  One less line after                          
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R15,@R15+1                                                       
         END                                                                    
*                                                                               
         CLEAR R15,R0,R1           No match                                     
*                                                                               
PAGCHXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGELINE -- Routine to add a line to the current page.                       
*                                                                               
*    On entry:                                                                  
*      R15 - line-number                                                        
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      4 - no room on this page                                                 
*                                                                               
LWA      RECORD BEGIN                                                           
LWAFLAG  FLAG                                                                   
         FLAG  LWAFRTRY            - New window built                           
*                                                                               
LWALNO   DS    F                   Lineno to add                                
LWANLNO  DS    F                   Next lineno if LNO is new                    
*                                                                               
LWALINE  DS    CL(&LINESZ)         Working line buffer                          
         END                                                                    
*-                                                                              
PAGELINE XPROC LWA                                                              
         CLEAR LWA                                                              
*                                                                               
         LH    R6,CPVWCUR                                                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND          Current window                               
         WITH  (WIND,R6)                                                        
*                                                                               
         ST    R15,LWALNO          Line-number being added                      
         LA    R1,LWALINE                                                       
         VCALL GETLINE                                                          
         MVC   LWANLNO,CPLCNO      Next line-number                             
*                                                                               
*-                                                                              
*-       First try to find the line in the current window.                      
*-                                                                              
PAGLRTRY IF    (WINDSLNO,NE,-1),BEGIN  Window borders are defined...            
         IF    WINFMOD,'ACALL PAGEFILL'  Must process updates now               
*                                                                               
         LH    R4,WINDFROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WHILE (R4,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R5)                                                        
         IF    (LINFTEXT,AND,(LINTLNO,EQ,LWALNO)),BEGIN  Matched...             
         IF    ^CPVFSPEC,BEGIN     First specific lineno...                     
         SET   CPVFSPEC            We have a specific lineno                    
         FREECURS ,                Reset prev cursor info                       
         L     R15,LINTLNO                                                      
         ST    R15,CPVLNO          Set cursor lineno                            
         ST    R15,CPLCNO          Set parameter lineno                         
         LA    R1,LWALINE          Line text                                    
         CLEAR R2                  No rendition buffer                          
         CLEAR R15                 Find first matching column                   
         VCALL MATLINE             Find starting cursor position                
         IF    NZ,'STH R15,CPVCOL'  Set cursor column                           
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         B     PAGLEXIT                                                         
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Clear the current window and add the line.                             
*-                                                                              
         IF    ^CPVFSPEC,BEGIN     Only if no specific lines...                 
         IF    LWAFRTRY,EXIT       We've tried this before, scram               
*                                                                               
         MVC   CPLCNO,LWANLNO                                                   
         IF    (WINDTCNT,GT,2),BEGIN  Over two lines in window...               
         VCALL PREVLNO             Back up...                                   
         VCALL PREVLNO             ...two lines                                 
         END                                                                    
         L     R15,CPLCNO                                                       
         ACALL PAGEMAKE            Build a new page                             
*                                                                               
         SET   LWAFRTRY            Remember, this is the last chance            
         B     PAGLRTRY                                                         
         END                                                                    
*-                                                                              
*-       Can't add line, the window is full.                                    
*-                                                                              
         LA    R15,4               Page is full                                 
PAGLEXIT PEND                                                                   
         EJECT                                                                  
PFA      RECORD BEGIN                                                           
PFAFLAG  FLAG                                                                   
         FLAG  PFAFMODF            - First lineno in window updated             
         FLAG  PFAFFILL            - Fill remainder of window                   
*                                                                               
PFAACTNO DS    F                   Active file number on entry                  
*                                                                               
PFAWCUR  DS    H                   Current window number                        
PFAWNCNT DS    H                   Number of new lines at top                   
*                                                                               
PFAOLDF  DS    F                   Old first lineno in window                   
PFAOLDL  DS    F                   Old last lineno in window                    
*                                                                               
PFAWLNO  DS    F                   Working lineno                               
PFAINIT  EQU   PFAFLAG,*-PFAFLAG,C'X'                                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  PAGEFILL -- Routine to fill in any unassigned lines on the page              
*    with line-numbers.  This routine also handles filling in the               
*    "gaps" that have occurred because lines have been added or                 
*    deleted.                                                                   
*                                                                               
PAGEFILL XPROC PFA                                                              
         CLEAR PFA                                                              
*                                                                               
         MVC   PFAACTNO,CPACTNO    Save current Active file number              
*-                                                                              
*-       Process a window at a time.                                            
*-                                                                              
         L     R6,CPXWIND                                                       
         LOOP  BEGIN                                                            
         WITH  (WIND,R6)                                                        
         LA    R6,WINDNEXT         First/next window                            
         INCR  R15,PFAWCUR         Our current window number                    
         WHILE (R15,LE,CPVWCNT)    Go through windows...                        
         L     R15,WINDACT                                                      
         VCALL ACTPICK             Switch to correct Active file                
*                                                                               
         CLEAR PFAFMODF+PFAFFILL                                                
         IF    WINFMOD,'SET PFAFFILL'                                           
*-                                                                              
*-  Calculate the first possible lineno in the window, if necessary.            
*-                                                                              
         LT    R0,WINDSLNO         First possible lineno in window              
         IF    NEG,BEGIN           Not yet assigned...                          
         LA    R1,WIND                                                          
         ACALL BACKFILL            Back fill lineno's from existing             
         IF    ^NEG,BEGIN          Get lineno before first + .001...            
         STH   R0,PFAWNCNT         Save pending new line counter                
         ST    R15,CPLCNO          Save first existing lineno                   
         VCALL PREVLNO             Get previous lineno                          
         L     R0,CPLCNO                                                        
         IF    NZ,'CLEAR R0'       No previous, use zero                        
         ELSE  'INCR R0'           Lineno immediately after previous            
         ST    R0,WINDSLNO         Save first possible lineno                   
         END                                                                    
         END                                                                    
         ST    R0,PFAWLNO          Save working lineno                          
*-                                                                              
*-       Fill in the free lines in the window.                                  
*-                                                                              
         MVC   PFAOLDF,WINDFLNO    Save "old" first...                          
         MVC   PFAOLDL,WINDLLNO    ...and last linenos                          
         CLEAR WINDFLNO            Preset first...                              
         MVC   WINDLLNO,CVMAXLNO   ...and last linenos                          
*                                                                               
         LH    R4,WINDFROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WHILE (R4,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R5)                                                        
*                                                                               
         IF    PFAFFILL,BEGIN      Need to recalc linenos...                    
         IF    (LINFNEW,OR,LINFTEXT),'SET LINFFREE'                             
         END                                                                    
*-                                                                              
*- ====> Free line.                                                             
*-                                                                              
         IF    LINFFREE,BEGIN      Found a free line...                         
         SET   PFAFFILL            Recalc the remaining linenos                 
*-                                                                              
*-       Fill in the next line-number.                                          
*-                                                                              
         FREELINT                                                               
*-                                                                              
*-       Preserve leading new lines.                                            
*-                                                                              
         IF    ('LTH R15,PFAWNCNT',POS),BEGIN  Pending new lines...             
         SET   LINFNEW             It's a new line                              
         MVC   LINTLNO,=F'-1'      No line-number yet                           
         DECR  R15                                                              
         STH   R15,PFAWNCNT        One less pending new line now                
         B     PAGFNLIN                                                         
         END                                                                    
*-                                                                              
*-       Figure out the next line-number.                                       
*-                                                                              
         L     R15,PFAWLNO                                                      
         VCALL GETLNO              Find next lineno                             
         IF    NEG,BEGIN           No next line...                              
         SET   LINFNEW             It's a new line                              
         MVC   LINTLNO,=F'-1'      No line-number yet                           
         END                                                                    
*                                                                               
         ELSE  BEGIN               We have the next lineno...                   
         SET   LINFTEXT                                                         
         L     R0,CPLCNO                                                        
         ST    R0,LINTLNO          Set line-number                              
         END                                                                    
         END                                                                    
*-                                                                              
*- ====> Text line                                                              
*-                                                                              
         IF    LINFTEXT,BEGIN      Text line...                                 
         CLEAR PFAWNCNT            Can't have more new lines now                
*                                                                               
         L     R15,LINTLNO         Get line-number                              
         IF    ^PFAFMODF,'ST R15,WINDFLNO; SET PFAFMODF'  Upd first             
         ST    R15,WINDLLNO        Update last lineno                           
         INCR  R15                                                              
         ST    R15,PFAWLNO         Set new "next" lineno                        
         END                                                                    
*                                                                               
PAGFNLIN LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Make sure first and last line-numbers are within bounds.               
*-                                                                              
         LM    R0,R1,CPAFLNO                                                    
         IF    (WINDFLNO,LT,R0),'ST R0,WINDFLNO'                                
         IF    (WINDLLNO,GT,R1),'ST R1,WINDLLNO'                                
*-                                                                              
*-       Recalculate the starting and ending linenos, if necessary.             
*-                                                                              
         IF    (WINFMOD,OR,(PFAOLDF,NE,WINDFLNO)),BEGIN  Recalc...              
         MVC   CPLCNO,WINDFLNO                                                  
         VCALL PREVLNO             Line before actual first lineno              
         L     R0,CPLCNO                                                        
         IF    NZ,'CLEAR R0'       No previous lineno, use zero                 
         ELSE  'INCR R0'           Next lineno available                        
         ST    R0,WINDSLNO                                                      
         END                                                                    
*                                                                               
         IF    (WINFMOD,OR,(PFAOLDL,NE,WINDLLNO)),BEGIN  Recalc...              
         LA    R15,1                                                            
         A     R15,WINDLLNO                                                     
         VCALL GETLNO              Find lineno after actual last                
         IF    NEG,'L R15,CVMAXLNO'  None means highest possible                
         ELSE  BEGIN                                                            
         L     R15,CPLCNO                                                       
         DECR  R15                 Next lineno - .001                           
         END                                                                    
         ST    R15,WINDELNO        Save ending lineno                           
         END                                                                    
*-                                                                              
*-       Assign good line-numbers to the new lines.                             
*-                                                                              
         LA    R1,WIND                                                          
         ACALL NEWFILL             Assign line-numbers for new lines            
*                                                                               
         CLEAR WINFMOD             We've processed the modifications            
         END                                                                    
*-                                                                              
*-       Process changes due to marks.                                          
*-                                                                              
         ACALL MARKFILL            Process changes due to marks                 
*                                                                               
         L     R15,PFAACTNO        Active file number on entry                  
         VCALL ACTPICK             Restore current Active file                  
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BACKFILL -- Local routine to find an existing line-number in                 
*    the window and fill in the previous lines with their                       
*    line-numbers.                                                              
*                                                                               
*    On entry:                                                                  
*      R1 - WIND ptr                                                            
*                                                                               
*    On exit, R15 (and cc):                                                     
*          -1 - no existing lines in the window                                 
*      lineno - first line-number in the window;                                
*               R0 = no. of new lines which precede first lineno                
*                                                                               
BACKFILL PROC                                                                   
         LR    R6,R1                                                            
         WITH  (WIND,R6)                                                        
*                                                                               
         LH    R4,WINDFROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WITH  (LINT,R5)                                                        
*-                                                                              
*-       Find the first existing line-number in the window.                     
*-                                                                              
         MVC   CPLCNO,=F'-1'       Assume no existing lineno                    
*                                                                               
BACKFIND WHILE (R4,LE,WINDLROW),BEGIN                                           
         IF    LINFTEXT,BEGIN      An existing line...                          
         MVC   CPLCNO,LINTLNO      Line-number                                  
         EXIT  BACKFIND                                                         
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Backup and fill in line-numbers.                                       
*-                                                                              
         CLEAR R3                  New lines counter                            
         IF    (CPLCNO,NE,-1),BEGIN  We have an existing lineno...              
         LOOP  BEGIN                                                            
         DECR  R4                                                               
         SH    R5,=AL2(L'LINT)                                                  
         WHILE (R4,GE,WINDFROW)                                                 
*                                                                               
         IF    (LINFFREE,OR,LINFNEW,OR,LINFTEXT),BEGIN                          
         FREELINT                                                               
         VCALL PREVLNO             Get the previous lineno                      
         IF    NZ,BEGIN            No previous line...                          
         SET   LINFNEW             It's new                                     
         MVC   LINTLNO,=F'-1'      No line-number yet                           
         LA    R3,@R3+1            Count the new line                           
         END                                                                    
*                                                                               
         ELSE  BEGIN               We have the previous lineno...               
         SET   LINFTEXT                                                         
         L     R15,CPLCNO                                                       
         ST    R15,LINTLNO         Set line-number                              
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         L     R15,CPLCNO          First line-number in window                  
         LR    R0,R3               Number of new lines counter                  
         PRETURN (R0)                                                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NEWFILL -- Local routine to assign line-numbers to all new lines.            
*                                                                               
*    On entry:                                                                  
*      R1 - WIND ptr                                                            
*                                                                               
NEWFILL  PROC                                                                   
         LR    R6,R1                                                            
         WITH  (WIND,R6)                                                        
*                                                                               
         LH    R4,WINDFROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WITH  (LINT,R5)                                                        
*-                                                                              
*-       All new lines (if Active file is empty).                               
*-                                                                              
         IF    (CPALNCT,Z),BEGIN   No active file...                            
         CLEAR R15                 Working lineno                               
         WHILE (R4,LE,WINDLROW),BEGIN  Go through lines...                      
         IF    LINFNEW,BEGIN       Assign lineno to any new line...             
         IF    (R15,^NEG),BEGIN                                                 
         A     R15,CPDELTA         Next lineno                                  
         IF    (R15,GT,CVMAXLNO),'L R15,=F"-1"'                                 
         END                                                                    
*                                                                               
         ST    R15,LINTLNO         Save lineno                                  
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
         B     NEWFEXIT            We are done, scram                           
         END                                                                    
*-                                                                              
*-       New lines at the beginning of the window.                              
*-                                                                              
         IF    (WINDSLNO,Z),BEGIN  Maybe new lines...                           
         CLEAR R15                 New line count                               
         WHILE (R4,LE,WINDLROW),BEGIN  Count new lines...                       
         IF    LINFNEW,'LA R15,@R15+1'  Count the new line                      
         IF    LINFTEXT,EXIT       Stop at first text line                      
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
         IF    (R15,Z),EXIT        No new lines, scram                          
*                                                                               
         CLEAR R0                                                               
         LT    R1,WINDFLNO         First existing lineno                        
         IF    Z,'LA R1,1'         Special case for line zero                   
         ELSE  BEGIN               Normal case...                               
         DECR  R1                                                               
         DR    R0,R15              Delta between new lines                      
         VCALL SELDELTA            Select a good delta in R1                    
         END                                                                    
*-                                                                              
*- Now fill in possible line-numbers for the new lines at the start.            
*-         (Fill in -1 if no line-number is possible.)                          
*-                                                                              
         L     R3,WINDFLNO         Starting lineno                              
         LR    R2,R1               Delta                                        
         LOOP  BEGIN                                                            
         SH    R5,=AL2(L'LINT)                                                  
         DECR  R4                                                               
         WHILE (R4,GE,WINDFROW)                                                 
         IF    LINFNEW,BEGIN       New line...                                  
         SR    R3,R2               Calculate a previous lineno                  
         IF    NEG,'L R3,=F"-1"'                                                
         ST    R3,LINTLNO          Save possible lineno                         
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       New lines at the end of the window.                                    
*-                                                                              
         IF    (WINDELNO,EQ,CVMAXLNO),BEGIN  Maybe new lines...                 
         LH    R4,WINDLROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT          Last row in the window                       
*                                                                               
         CLEAR R15                 New line count                               
         WHILE (R4,GE,WINDFROW),BEGIN  Count new lines...                       
         IF    LINFNEW,'LA R15,@R15+1'  Count the new line                      
         IF    LINFTEXT,EXIT       Stop at last text line                       
*                                                                               
         SH    R5,=AL2(L'LINT)                                                  
         DECR  R4                                                               
         END                                                                    
*                                                                               
         IF    (R15,Z),EXIT        No new lines, scram                          
*-                                                                              
*-   Now fill in possible line-numbers for the new lines at the end.            
*-         (Fill in -1 if no line-number is possible.)                          
*-                                                                              
         L     R0,WINDLLNO         Last lineno in the window                    
         L     R1,CPDELTA                                                       
         VCALL LOWMULT                                                          
         VCALL ADDER               Calc new end lineno                          
         IF    NEG,'L R0,=F"-1"'                                                
*                                                                               
         LR    R3,R0               Starting lineno                              
         L     R2,CPDELTA          Delta                                        
         WHILE (R4,LE,WINDLROW),BEGIN  Go through lines...                      
         IF    LINFNEW,BEGIN       New line...                                  
         ST    R3,LINTLNO          Save possible lineno                         
         IF    (R3,NEG),EXIT       No next possible lineno                      
         AR    R3,R2               Calculate a next lineno                      
         IF    (R3,GT,CVMAXLNO),'L R3,=F"-1"'  No lineno possible               
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT         Next line                                    
         LA    R4,@R4+1                                                         
         END                                                                    
         END                                                                    
NEWFEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  MARKFILL -- Local routine to make sure that any lines in a                   
*    marked area get rewritten if the marked boundries have                     
*    changed.                                                                   
*                                                                               
MARKFILL PROC                                                                   
         IF    CPVFMARK,BEGIN      Block marks have changed...                  
         LA    R4,1                                                             
         L     R5,CPLINTP                                                       
         WHILE (R4,LE,CPVHEI),BEGIN  Go through lines...                        
         WITH  (LINT,R5)                                                        
         IF    LINFTEXT,BEGIN                                                   
         LH    R6,LINTWIND                                                      
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND          WIND ptr for this LINT entry                 
         WITH  (WIND,R6)                                                        
         IF    (CPBLKACT,EQ,WINDACT),BEGIN  Correct Active file...              
         L     R15,LINTLNO                                                      
         IF    (^CPVFHIDE,AND,                                         *        
               ((R15,GE,CPFBKLNO),AND,(R15,LE,CPLBKLNO))),BEGIN                 
         IF    ((R15,EQ,CPFBKLNO),OR,(R15,EQ,CPLBKLNO)),'SET LINFREWR'          
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
         CLEAR CPVFMARK            We've processed the change                   
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WINDSET -- Routine to set the default window.                                
*                                                                               
*    On entry:                                                                  
*      R15 - window number to become default                                    
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok; done                                                             
*      4 - window not defined                                                   
*                                                                               
WINDSET  XPROC                                                                  
         IF    (R15,LE,CPVWCNT),BEGIN  OK...                                    
         STH   R15,CPVWCUR         Set new current window                       
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         ELSE  'LA R15,4'                                                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WINDFIX -- Routine to fix the window numbering after                         
*    a window has been added or deleted.                                        
*                                                                               
WINDFIX  XPROC                                                                  
*-                                                                              
*-       First reset window number of every row.                                
*-                                                                              
         LA    R4,1                                                             
         L     R5,CPLINTP                                                       
         WHILE (R4,LE,CPVHEI),BEGIN  Go through rows...                         
         WITH  (LINT,R5)                                                        
         CLEAR LINTWIND            Reset window number                          
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Now set the window number for every owned row.                         
*-                                                                              
         LA    R4,1                                                             
         L     R5,CPWINDP                                                       
         WHILE (R4,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R5)                                                        
         STH   R4,WINDNO           Set window number                            
*                                                                               
         CLEAR R15                 Window's text line count                     
         LH    R2,WINDFROW                                                      
         LR    R3,R2                                                            
         MH    R3,=AL2(L'LINT)                                                  
         A     R3,CPXLINT          Starting LINT entry                          
*                                                                               
         WHILE (R2,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R3)                                                        
         IF    (LINFTEXT,OR,LINFNEW,OR,LINFFREE),'LA R15,@R15+1'                
         IF    (^LINFCOL,AND,^LINFCMD,AND,^LINFMSG),BEGIN                       
         STH   R4,LINTWIND         Set window number in LINT                    
         END                                                                    
*                                                                               
         LA    R3,LINTNEXT                                                      
         LA    R2,@R2+1                                                         
         END                                                                    
         STH   R15,WINDTCNT        Save text line count                         
*                                                                               
         LA    R5,WINDNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGESCRL -- Routine to move the lines in on the page up or down              
*    the specified number of lines.  The routine won't move lines               
*    past the window boundries.                                                 
*                                                                               
*    On entry:                                                                  
*      R15- neg: number of lines to move up by                                  
*           pos: number of lines to move down by                                
*                                                                               
PAGSWA   RECORD BEGIN                                                           
PAGSFLAG FLAG                                                                   
         FLAG  PAGSFUP             - Scroll up                                  
*                                                                               
PAGSFROW DS    H                   First row to scroll                          
PAGSLROW DS    H                   Last row to scroll                           
*                                                                               
PAGSSKPC DS    H                   Working skip count                           
PAGSFILC DS    H                   Working fill count                           
*                                                                               
PAGSCNT  DS    H                   No. of saved lines                           
PAGSINT  DS    XL(LINTMAX#*L'LINTOPT)  Saved line area                          
         END                                                                    
*-                                                                              
PAGESCRL XPROC PAGSWA                                                           
         CLEAR PAGSWA                                                           
*                                                                               
         LTR   R2,R15              Number of lines to scroll                    
         BZ    SCRLFIN                                                          
         IF    NEG,'SET PAGSFUP; LPR R2,R2'                                     
*                                                                               
         CLEAR R0,R1                                                            
         ACALL PAGECNT             Get the no. of lines in window               
         BNP   SCRLFIN                                                          
         DECR  R15                 Always keep at least one line                
*                                                                               
         CEIL  R2,R15              Don't scroll too much                        
*                                                                               
         IF    PAGSFUP,'STH R2,PAGSSKPC'                                        
         ELSE  'STH R2,PAGSFILC'                                                
*                                                                               
         STH   R0,PAGSFROW         Save first scroll row                        
         STH   R1,PAGSLROW         Save last scroll row                         
*-                                                                              
*-       First save all the lines in the window.                                
*-                                                                              
         CLEAR R2                                                               
         LA    R3,PAGSINT                                                       
         LH    R4,PAGSFROW                                                      
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
*                                                                               
         WITH  (LINT,R5),'LH R6,LINTWIND'                                       
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND                                                       
         WITH  (WIND,R6),BEGIN                                                  
*                                                                               
         WHILE (R4,LE,PAGSLROW),BEGIN  Save the lines...                        
         WITH  (LINT,R5)                                                        
*                                                                               
         IF    (LINFFREE,OR,LINFNEW,OR,LINFTEXT),BEGIN  Scroll...               
         IF    ('LTH R15,PAGSSKPC',POS),BEGIN  Skip it...                       
         DECR  R15                                                              
         STH   R15,PAGSSKPC        One less line now                            
         END                                                                    
         ELSE  BEGIN               Save it...                                   
         MVC   @R3(L'LINTOPT),LINTOPT                                           
         LA    R3,@R3+L'LINTOPT                                                 
         INCR  R15,PAGSCNT                                                      
         END                                                                    
*                                                                               
         FREELINT ,                It's free now                                
*                                                                               
         IF    (R2,Z),BEGIN        Save row for restored lines...               
         IF    ('LTH R15,PAGSFILC',POS),BEGIN                                   
         DECR  R15                                                              
         STH   R15,PAGSFILC                                                     
         END                                                                    
         ELSE  'LR R2,R4'          Remember row for later                       
         END                                                                    
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Now move the lines back to their new positions.                        
*-                                                                              
         LA    R3,PAGSINT                                                       
         LR    R4,R2                                                            
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WHILE (R4,LE,PAGSLROW),BEGIN  Restore the lines...                     
         WITH  (LINT,R5)                                                        
*                                                                               
         IF    LINFFREE,BEGIN      Put a line here...                           
         MVC   LINTOPT,@R3                                                      
         LA    R3,@R3+L'LINTOPT                                                 
         DECR  R15,PAGSCNT                                                      
         IF    (R15,NP),SCRLFIN    All done, scram                              
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
SCRLFIN  MVC   WINDSLNO,=F'-1'     Recalc boundry linenos                       
         ACALL PAGEFILL            Fill up page image                           
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGECNT -- Routine to count the number of lines on the page                  
*    between the rows specified.  The routine will stop at a                    
*    window boundry.                                                            
*                                                                               
*    On entry:                                                                  
*      R0 - first row (0=first in current window)                               
*      R1 - last row (0=last in current window)                                 
*                                                                               
*    On exit:                                                                   
*      R0 - actual first row                                                    
*      R1 - actual last row                                                     
*      R15 (and cc) - no. of lines                                              
*                                                                               
PAGECNT  XPROC (R2,LSR)                                                         
         CLEAR R6                  Assume the current window                    
*                                                                               
         IF    (R1,NZ),BEGIN       We have an ending row...                     
         LR    R15,R1                                                           
         MH    R15,=AL2(L'LINT)                                                 
         A     R15,CPXLINT                                                      
         WITH  (LINT,R15),'LH R6,LINTWIND'  Window number                       
         END                                                                    
*                                                                               
         IF    (R0,NZ),BEGIN       We have a starting row...                    
         LR    R15,R0                                                           
         MH    R15,=AL2(L'LINT)                                                 
         A     R15,CPXLINT                                                      
         WITH  (LINT,R15),'LH R6,LINTWIND'  Window number                       
         END                                                                    
*                                                                               
         IF    (R6,Z),'LH R6,CPVWCUR'                                           
         MH    R6,=AL2(L'WIND)                                                  
         A     R6,CPXWIND                                                       
         USING WIND,R6                                                          
*                                                                               
         CLEAR R15                 Counter, for loop below                      
*-                                                                              
*-       Adjust first and last rows.                                            
*-                                                                              
         IF    (R0,Z),'LH R0,WINDFROW'                                          
         IF    (R1,Z),'LH R1,WINDLROW'                                          
*-                                                                              
*-       Count the lines.                                                       
*-                                                                              
         LR    R4,R0                                                            
         LR    R5,R0                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT                                                       
         WHILE (R4,LE,R1),BEGIN    Go through lines...                          
         WITH  (LINT,R5)                                                        
         IF    (LINFTEXT,OR,LINFNEW,OR,LINFFREE),'LA R15,@R15+1'                
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
PWA      RECORD BEGIN              Page work area                               
PWAFLAG  FLAG                                                                   
         FLAG  PWAFESC             - ESC emulation mode (3270s)                 
         FLAG  PWAFSCMD            - Command text has been saved                
*                                                                               
PWACROW  DS    H                   Current row                                  
*                                                                               
PWAOROW  DS    H                   Old row                                      
PWAOWIND DS    H                   Old window                                   
*                                                                               
PWATOPR  DS    H                   Top row                                      
PWABOTR  DS    H                   Bottom row                                   
PWAFNEWR DS    H                   First "new" row                              
PWALNEWR DS    H                   Last "new" row                               
PWAROWS  EQU   PWATOPR,*-PWATOPR,C'X'                                           
*                                                                               
PWARLEN  DS    H                   Remaining len                                
PWARLOC  DS    A                   Response text ptr                            
*                                                                               
PWAFUNC  DS    X                   Ending function code                         
*                                                                               
PWALINE  DS    CL(&LINESZ)         Working line buffer                          
         DS    CL(&PRESSZ-&LINESZ)                                              
*-                                                                              
*- Each character in PWALINE has a corresponding position in PWAREND            
*- and PWAATTR which contains that character's rendition and special            
*-       attributes.                                                            
*-                                                                              
PWAREND  DS    XL(&LINESZ)         Working rendition buffer                     
*                                                                               
PWARNORM EQU   X'00'               - Normal rendition                           
PWARMARK EQU   X'20'               - Marked text                                
PWARCOLT EQU   X'10'               - Column line with tab stop                  
PWARCOLM EQU   X'08'               - Column line past margin                    
PWARRULE EQU   X'04'               - Ruling char set                            
PWARBOLD EQU   X'02'               - Highlighted text                           
PWARSPEL EQU   X'01'               - Text is misspelled                         
*                                                                               
PWAATTR  DS    XL(&LINESZ)         Working attribute buffer                     
*                                                                               
PWAANORM EQU   X'00'               - Normal attributes                          
PWAAFBLK EQU   X'80'               - FBLOCK point is here                       
PWAALBLK EQU   X'40'               - LBLOCK point is here                       
*                                                                               
PWADEFR  DS    H                   Working default rendition                    
*                                                                               
PWAFCURS DS    D                   FBLOCK cursor position                       
PWALCURS DS    D                   LBLOCK cursor position                       
*                                                                               
PWACURS  DS    D                   Working cursor position                      
PWAFLEN  DS    H                   Working field length                         
PWAFIELD DS    CL(&LINESZ)         Working field                                
*                                                                               
PWASCMDL DS    H                   Saved command line length                    
PWASCMD  DS    CL(L'CPCMD)         Saved command line text                      
PWASCURS DS    XL(L'CPVCURS)       Saved cursor address                         
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PAGEMOD -- Routine to display the current page and process                   
*    any updates.                                                               
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - go on to the next page                                               
*      4 - abort (break)                                                        
*                                                                               
*    Note:  This routine will not return to the caller if the                   
*           user executes a new command.                                        
*                                                                               
PAGEMOD  XPROC                                                                  
         XPUSH ,,L'PWA,PTR=R6                                                   
         USING PWA,R6                                                           
         CLEAR PWA                                                              
*                                                                               
         SET   CPVFPAGE            Page mode                                    
         CLEAR CPVLFLAG            Reset local flags                            
*                                                                               
         IF    CPVFRTRY,BEGIN      Command retry...                             
         CLEAR CPVFRTRY            Don't do this again                          
         FREECURS                                                               
         LH    R15,CPVCMDR         Command line row                             
         ST    R15,CPVCURR         Set current row                              
         MVC   CPVCURC,=F'12'      Set current column                           
         END                                                                    
*                                                                               
         ELSE  BEGIN               Normal entry...                              
         CLEAR CPCMDLEN                                                         
         MVC   CPCMD,CVBLANKS                                                   
         END                                                                    
*-                                                                              
*-       Get the new terminal type entry if it has changed.                     
*-                                                                              
PAGMLOOP IF    CPVFCLR,BEGIN       Check for updated ttype entry...             
         LT    R5,CPTTYPEP         Current ttype entry                          
         BZ    PAGMERR                                                          
*                                                                               
         WITH  (TTYPE,R5)                                                       
*                                                                               
         IF    TTYFREL,BEGIN       Release old ttype entry...                   
         LA    R15,CPSTTYPE                                                     
         VCALL CHKTTYPE            Look up terminal type                        
         BZ    PAGMERR             Not found, oops                              
         VCALL SETTTYPE            Set new terminal type                        
         L     R5,CPTTYPEP                                                      
         END                                                                    
*                                                                               
         IF    ^TTYFMOD,PAGMERR    Terminal not supported, scram                
         END                                                                    
*-                                                                              
*-       Rewrite the page.                                                      
*-                                                                              
         SET   CPFDISP                                                          
         IF    ^CPVFFORMAT,'SET CPFUFMT'  Unformatted is normal                 
         TCLEAR                                                                 
*-                                                                              
*-       Check for message waiting.                                             
*-                                                                              
         IF    (CPVMSG,EQ,CVBLANKS),BEGIN  Add any message notes...             
         DECR  R15,CPSUC                                                        
         VCALL UPDCPSIB            Get another copy of the SIB                  
*                                                                               
         IF    ('LTH R2,CPSNMSG',Z),EXIT  Nothing special, scram                
         TSEG  'Note: You have '                                                
         SETMSG 'a message'                                                     
         IF    (R2,GT,1),BEGIN                                                  
         TNUM  (R2)                                                             
         SETMSG ' messages'                                                     
         END                                                                    
         TSEG  (R1),(R0),B                                                      
         TSEG  'waiting.'                                                       
*                                                                               
         L     R1,CPSEGLOC                                                      
         L     R15,CPSEGLENF                                                    
         MOVE  R15,CPVMSG,@R1      Save our message                             
*                                                                               
         TCLEAR                                                                 
*                                                                               
         IF    (CPSNMSG,NE,CPVNMSG),'SET CPVFBELL'  Bell                        
         END                                                                    
*                                                                               
         MVC   CPVNMSG,CPSNMSG     Save message counter                         
*-                                                                              
*-       Move in the system view message (if any).                              
*-                                                                              
         IF    (CPVMSG,EQ,CVBLANKS),BEGIN  Message area is free...              
         IF    (CVVMSG,EQ,X'00'),EXIT  No message, scram                        
         MVC   CPVMSG,CVVMSG                                                    
         END                                                                    
*-                                                                              
*-       Finally, move in user view message (if any).                           
*-                                                                              
         IF    (CPVMSG,EQ,CVBLANKS),BEGIN  Message area is free...              
         TPUSH                                                                  
*                                                                               
         LA    R2,CPVMSG           Put result here                              
         LA    R3,L'CPVMSG                                                      
         SETMSG 'SES.VIEW_MSG'                                                  
         VCALL EVALSTR             Get string value, if defined                 
*                                                                               
         TPOP  JUNK                                                             
         END                                                                    
*                                                                               
         ACALL PAGEFILL            Fill out the page                            
*-                                                                              
*-       Update default window settings if they have changed.                   
*-                                                                              
         LH    R5,CPVWCUR                                                       
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         WITH  (WIND,R5),BEGIN                                                  
*-                                                                              
*-       Calculate cursor and alternate cursor positions.                       
*-                                                                              
         IF    (CPVLNO,NE,-1000),'CLEAR CPVCURS'  Recalc cursor pos             
         IF    (CPVALNO,NE,-1),'CLEAR CPVACURS'  Recalc alt curs too            
         IF    (CPALNCT,Z),'CLEAR CPVLNO,CPVALNO'  No Act                       
*                                                                               
         IF    (CPVACURS,Z),BEGIN  No absolute cursor location...               
         LH    R1,CPVACOL          Current column (in line)                     
         L     R15,CPVALNO         Current lineno                               
         ACALL CALCCURS            Calculate absolute cursor pos                
         STM   R0,R1,CPVACURS      Save alternate cursor                        
         END                                                                    
*                                                                               
         IF    (CPVCURS,Z),BEGIN   No absolute cursor location...               
*-                                                                              
*-       Make sure cursor is in the visible portion of the screen.              
*-                                                                              
         LH    R2,WINDFCOL                                                      
         LA    R2,@R2+1            First displayed text column                  
         LR    R3,R2                                                            
         AH    R3,CPVWID                                                        
         SH    R3,WINDTCOL         Last displayed text column                   
*                                                                               
         LH    R1,CPVCOL           Current text column                          
         IF    ((R1,LT,R2),OR,(R1,GT,R3)),BEGIN  Out of bounds...               
         LA    R0,1                Assume column 1                              
         LH    R15,CPVWID                                                       
         SH    R15,WINDTCOL        Last possible text column                    
         IF    (R1,GT,R15),BEGIN   Calculate new starting column...             
         LA    R0,@R1+10           We need ten spaces after cursor              
         SR    R0,R15              New starting column                          
         END                                                                    
         LA    R15,WIND                                                         
         ACALL PAGECOLS            Do horizontal scrolling                      
         END                                                                    
*                                                                               
         LH    R1,CPVCOL           Current column (in line)                     
         L     R15,CPVLNO          Current lineno                               
         ACALL CALCCURS            Calculate absolute cursor pos                
         STM   R0,R1,CPVCURS       Save cursor                                  
         END                                                                    
         END                                                                    
*-                                                                              
*-       Clear screen (and reinitialize screen parameters).                     
*-                                                                              
         IF    CPVFCLR,BEGIN       Clear screen and rewrite page...             
         TSEG  L:=A($LCSI),L'$LCSI                                              
         TNUM  LH:CPVHEI           Height                                       
         TSEG  ';'                                                              
         TNUM  LH:CPVWID           Displayed width                              
         TSEG  ';'                                                              
         TNUM  LH:CPVTWID          Total number of cols                         
         TSEG  'i'                 Initialize screen buffer                     
*                                                                               
         TSEG  L:=A($CS),L'$CS     Clear screen                                 
*                                                                               
         TSEG  L:=A($CLRMSG),L'$CLRMSG  Clear message area                      
*                                                                               
         TSEG  L:=A($SETRULE),L'$SETRULE  Set ruling alt charset                
         TREND BACK                Background rendition                         
         TMARK                                                                  
*                                                                               
         SET   CPVFFMT+CPVFREWR    Define and rewrite all lines                 
         END                                                                    
*-                                                                              
*-       Set editing modes.                                                     
*-                                                                              
         TSEG  L:=A($LCSI),L'$LCSI                                              
         SET   CPVFWYL             Always use WYLBUR mode                       
         TNUM  LC:CPVMODE          Editing flags                                
         TSEG  ';'                                                              
         LC    R1,CPVWCHAR                                                      
         A     R1,CVASCTBL                                                      
         LC    R15,@R1             Value of word separator in ASCII             
         TNUM  (R15)               Word separator                               
         TSEG  L:=A($SEM),L'$SEM                                                
*-                                                                              
*-       Define all the fields on the page.                                     
*-                                                                              
         ACALL FMTPAGE             Format all fields on the page                
*-                                                                              
*-       Write any changed lines on the page.                                   
*-                                                                              
         ACALL OUTPAGE             Rewrite changed portion of page              
*-                                                                              
*-       Reset display attributes.                                              
*-                                                                              
         CLEAR CPVFCLR+CPVFFMT+CPVFREWR,CPVFSPEC                                
*                                                                               
         LA    R4,1                                                             
         L     R5,CPWINDP                                                       
         WHILE (R4,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R5)                                                        
         CLEAR WINFREWR                                                         
*                                                                               
         MVC   WINDOFLN,WINDSLNO   Save old starting lineno                     
         MVC   WINDOLLN,WINDELNO   Save old ending lineno                       
*                                                                               
         LA    R5,WINDNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Position cursor.                                                       
*-                                                                              
         TCURS CPVACURS            Alternate cursor location                    
         TSEG  L:=A($ALTHOME),L'$ALTHOME  Set alternate home point              
*                                                                               
         IF    (CPVACURS,NE,CPVCURS),'TCURS CPVCURS'  Set cursor                
*                                                                               
         IF    CPVFBELL,BEGIN      Ring the bell...                             
         TSEG  X'2F'               (Bell)                                       
         CLEAR CPVFBELL                                                         
         END                                                                    
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
         CLEAR R15                 Indicate output buffer                       
         SETMSG L:CPSEGLOC,L:CPSEGLENF                                          
         VCALL VIEWTRC             Do any tracing                               
*                                                                               
*******************************************************************             
**       Write display and read back updates.                    **             
*******************************************************************             
         TREAD ,                   Read back updates                            
*-                                                                              
*-       Process responses from page read.                                      
*-                                                                              
         CLEAR CPFDISP             Reset display mode                           
         CLEAR CPFUFMT             Reset display mode options too               
         CLEAR CPFNOCURS           Reset don't move cursor flag                 
*                                                                               
         CLEAR PWAFESC             Reset ESC emulation mode                     
         IF    CPVFESC,'SET PWAFESC; CLEAR CPVFESC'  Save & reset               
*                                                                               
         IF    (R15,NEG),'CLEAR CPVFPAGE; B CVNEXT'  Logging off                
*                                                                               
         IF    CPVFVTAM,BEGIN      Special case for VTAM...                     
         IF    (R15,EQ,101),BEGIN  Reverse break...                             
         SET   CPFNOCURS           Don't change the cursor position             
         MVC   CPVMSG,CVBLANKS     Reset any old message                        
         END                                                                    
*                                                                               
         IF    ((R15,EQ,1),AND,(R0,Z)),BEGIN  ATTN...                           
         SET   CPFNOCURS           Don't move cursor                            
         CLEAR R15                 Reset attn indication                        
         MVC   @R1(7),=X'27AD4CF1F3F0E5'  BREAK function code                   
         LA    R0,7                                                             
         END                                                                    
*                                                                               
         IF    CPFNOCURS,BEGIN     Don't update cursor...                       
         LTH   R2,CPVCMDR          Row of command line                          
         IF    Z,EXIT              Not defined, scram                           
         MH    R2,=AL2(L'LINT)                                                  
         A     R2,CPXLINT          Last line                                    
         WITH  (LINT,R2)                                                        
         CLEAR LINFREWR            Don't rewrite command line                   
         END                                                                    
         END                                                                    
*                                                                               
         IF    (R15,EQ,101),PAGMLOOP     Reverse break                          
         IF    (R15,EQ,1),'SET CPVFBRK'  Break/Attn                             
*                                                                               
         CLEAR PWAFUNC             Initialize function code                     
         ST    R1,PWARLOC          Save response text ptr                       
         STH   R0,PWARLEN          Save remaining len                           
*-                                                                              
*-       Do input buffer tracing.                                               
*-                                                                              
         LA    R15,1               Indicate input buffer                        
         VCALL VIEWTRC             Do any tracing                               
*-                                                                              
*-       Display debugging information.                                         
*-                                                                              
         IF    CPVFBUG,BEGIN       Debugging mode...                            
         SETMSG L:PWARLOC,LH:PWARLEN  Input buffer                              
         ACALL INPBUG              Display debugging info                       
         END                                                                    
*-                                                                              
*-       Process text returned from read.                                       
*-                                                                              
         IF    CPVFBRK,PAGMEXIT    Read ended by BREAK                          
*                                                                               
         WHILE ('ACALL GETFIELD',Z),BEGIN  Process returned fields...           
         IF    ((R0,POS),AND,(R0,LE,CPVHEI)),BEGIN                              
         LR    R4,R0                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT                                                       
         WITH  (LINT,R4)                                                        
         LTH   R5,LINTWIND                                                      
         IF    Z,'LH R5,CPVWCUR'                                                
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         WITH  (WIND,R5)                                                        
*                                                                               
         L     R15,WINDACT                                                      
         VCALL ACTPICK             Switch into correct Active file              
         LR    R3,R15              Save previous Active file no                 
*                                                                               
         IF    (LINFNEW,OR,LINFTEXT),'ACALL INPTEXT'  Update line               
         IF    LINFCMD,'ACALL INPCMD'  Update command                           
*                                                                               
         LR    R15,R3                                                           
         VCALL ACTPICK             Switch back to previous Active               
         END                                                                    
         END                                                                    
*-                                                                              
*-       Account for any file changes.                                          
*-                                                                              
         IF    CPVFCH,BEGIN        Count the change to the file...              
         INCR  R0,CPACHCT                                                       
         CLEAR CPVFCH                                                           
         END                                                                    
*-                                                                              
*-       Process immediate function codes.                                      
*-                                                                              
         CLEAR PWAFSCMD                                                         
*                                                                               
         LC    R15,PWAFUNC                                                      
         VCALL VIEWPF              Process immediate function code.             
         BZ    PAGMLOOP                                                         
*-                                                                              
*-       Process regular function code.                                         
*-                                                                              
         LC    R15,PWAFUNC                                                      
         IF    (R15,NZ),BEGIN      Something special...                         
*-                                                                              
*- Save current command line text before moving in a pseudo-command.            
*-                                                                              
         MVC   PWASCMDL,CPCMDLEN                                                
         MVC   PWASCMD,CPCMD       Save current command line                    
         MVC   PWASCURS,CPVCURS    Save cursor position                         
         SET   PWAFSCMD            We have a saved command                      
*-                                                                              
*-       Turn function code into dot command.                                   
*-                                                                              
         MVC   CPCMDLEN,=H'8'                                                   
         MVC   CPCMD,CVBLANKS                                                   
*                                                                               
         IF    (R15,LT,128),BEGIN  ESC char...                                  
         MVI   CPCMD,C'.'                                                       
         LA    R2,CPCMD+1                                                       
*                                                                               
         IF    (R15,LT,32),BEGIN   ESC control-char...                          
         MVI   @R2,C'.'                                                         
         LA    R2,@R2+1                                                         
         LA    R15,@R15+64         Convert to alpha char                        
         END                                                                    
*                                                                               
         IF    (R15,GT,96),BEGIN   ESC W alpha...                               
         MVI   @R2,C'W'                                                         
         LA    R2,@R2+1                                                         
         SH    R15,=H'32'          Convert to upper case                        
         END                                                                    
*                                                                               
         L     R1,CVEBCTBL                                                      
         LA    R1,@R1(R15)         Convert to EBCDIC (from ASCII)               
         MVC   @R2(1),@R1             Char                                      
         IF    (@R2,EQ,' '),'MVC @R2(7),=C"COLLECT"'                            
         END                                                                    
*                                                                               
         ELSEIF ((R15,GE,145),AND,(R15,LE,159)),BEGIN  ESC W spec...            
         LA    R1,=C'<>+-/0123456789'                                           
         SH    R15,=H'145'                                                      
         LA    R1,@R1(R15)                                                      
         MVC   CPCMD(2),=C'.W'                                                  
         MVC   CPCMD+2(1),@R1                                                   
         END                                                                    
*                                                                               
         ELSE  BEGIN               Special function...                          
         MVC   CPCMD(3),=C' .#'                                                 
         IF    (R15,GE,200),BEGIN                                               
         SH    R15,=H'200'         PF keys are 200..255                         
         MVC   CPCMD(3),=C'.PF'                                                 
         END                                                                    
         BTD   CPDOUB,0,(R15)                                                   
         LR    R15,R0                                                           
         MOVE  R15,CPCMD+3,CPDOUB  PF number                                    
         END                                                                    
         END                                                                    
*                                                                               
         IF    (CPCMD,EQ,'.( '),'MVC CPCMD(7),=C".FBLOCK"'                      
         IF    (CPCMD,EQ,'.) '),'MVC CPCMD(7),=C".LBLOCK"'                      
         IF    (CPCMD,EQ,'.+ '),'MVC CPCMD(7),=C".REMARK"'                      
         IF    (CPCMD,EQ,'.- '),'MVC CPCMD(7),=C".UNMARK"'                      
         IF    (CPCMD,EQ,'.W+ '),'MVC CPCMD(6),=C".WPLUS"'                      
         IF    (CPCMD,EQ,'.W- '),'MVC CPCMD(7),=C".WMINUS"'                     
         IF    (CPCMD,EQ,'.W/ '),'MVC CPCMD(7),=C".WSLASH"'                     
*-                                                                              
*-       Process alternate cursor position.                                     
*-                                                                              
         MVC   CPVALNO,=F'-1'      Assume alt curs is not on a lineno           
         CLEAR CPVACOL             No column pos yet                            
*                                                                               
         L     R4,CPVACURS         Get alternate cursor row                     
         IF    ((R4,POS),AND,(R4,LE,CPVHEI)),BEGIN                              
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          Alternate cursor LINT                        
         WITH  (LINT,R4)                                                        
*                                                                               
         IF    (LINFNEW,OR,LINFTEXT),BEGIN  Save lineno and col...              
         LTH   R5,LINTWIND                                                      
         IF    Z,EXIT              Not in a window, scram                       
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         WITH  (WIND,R5)                                                        
         L     R15,CPVACURS+4      Absolute alternate cursor column             
         LA    R15,@R15+1          Column number is rel to one                  
         SH    R15,WINDTCOL        Adjust for column number                     
         IF    NEG,'CLEAR R15'                                                  
         AH    R15,WINDFCOL        Adjust for cols being displayed              
         STH   R15,CPVACOL         Set alternate column                         
*                                                                               
         MVC   CPVALNO,LINTLNO     Set alternate lineno                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Process cursor ending position.                                        
*-                                                                              
         MVC   CPVLNO,=F'-1000'    Assume cursor is not on a lineno             
         CLEAR CPVCOL              No column pos yet                            
*                                                                               
         L     R4,CPVCURS          Get cursor row                               
         IF    ((R4,POS),AND,(R4,LE,CPVHEI)),BEGIN                              
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          Cursor LINT                                  
         WITH  (LINT,R4)                                                        
*                                                                               
         LTH   R5,LINTWIND                                                      
         IF    NZ,BEGIN            Currently in a window...                     
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         WITH  (WIND,R5)                                                        
*                                                                               
         IF    (LINTWIND,NE,CPVWCUR),BEGIN  Changed windows...                  
         MVC   CPVWCUR,LINTWIND    Set new window                               
         END                                                                    
*                                                                               
         L     R15,WINDACT         Window's Active file number                  
         IF    (R15,NE,CPACTNO),'VCALL ACTPICK'  Switch Actives                 
         END                                                                    
*-                                                                              
*-       Process ending cursor position based on line type.                     
*-                                                                              
         LM    R0,R1,CPVCURS       Ending cursor location                       
         IF    (LINFNEW,OR,LINFTEXT),'ACALL CURSTEXT'                           
         IF    LINFCMD,'ACALL CURSCMD'                                          
         IF    LINFCOL,'ACALL CURSCOL'                                          
         END                                                                    
*-                                                                              
*-       Execute any new command.                                               
*-                                                                              
         SETMSG CPCMD,LH:CPCMDLEN                                               
         IF    (R0,NZ),BEGIN       New command...                               
         STH   R0,CPCMDLEN                                                      
*                                                                               
         VCALL VIEWCMD             Process any subcommand                       
         IF    CPVFEXIT,PAGMEXIT                                                
*                                                                               
         IF    (R15,Z),BEGIN       Local command was executed...                
         IF    PWAFSCMD,BEGIN      Restore saved command...                     
         IF    (CPCMDLEN,NZ),EXIT  Partial cmd already there, scram             
         MVC   CPCMDLEN,PWASCMDL                                                
         MVC   CPCMD,PWASCMD       Restore saved command                        
*  Also restore the cursor position if the user was on the                      
*    command line.                                                              
         L     R15,CPVCURR         Cursor's row                                 
         IF    (R15,EQ,CPVCMDR),'MVC CPVCURS,PWASCURS'  Restore curs            
         CLEAR PWAFSCMD                                                         
         END                                                                    
*                                                                               
         B     PAGMLOOP            Don't execute command yet                    
         END                                                                    
*                                                                               
         SETMSG CPCMD,LH:CPCMDLEN                                               
         VCALL RTRIM                                                            
         IF    (R0,Z),PAGMLOOP     Blank command line, forget it                
*                                                                               
         SET   CPFTYPED            It's a typed command                         
         SETMSG CPCMD,LH:CPCMDLEN                                               
         VCALL EDTCOM              Execute new command (no return)              
         END                                                                    
*                                                                               
         B     PAGMLOOP            Stay a while                                 
*                                                                               
PAGMERR  ACALL PAGERES             Force user out of page mode                  
         ABORT 'Terminal type is not supported.'                                
*                                                                               
PAGMEXIT CLEAR R15                 Assume ok                                    
         IF    CPVFBRK,'LA R15,4'                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTPAGE -- Local routine to format the fields on the page.                   
*                                                                               
FMTPAGE  PROC                                                                   
         IF    ^CPVFFMT,FPAGEXIT   Format all fields...                         
*-                                                                              
*-       Clear all special locations, if necessary.                             
*-                                                                              
         IF    ^CPVFCLR,BEGIN      (Not necessary if clear)...                  
         TSEG  L:=A($CLRFMT),L'$CLRFMT  Clear all points                        
         END                                                                    
*                                                                               
         CLEAR PWAOROW,PWAOWIND    Reset (for loop below)                       
*                                                                               
         LA    R3,1                                                             
         L     R4,CPLINTP                                                       
         WHILE (R3,LE,CPVHEI),BEGIN  Go through lines...                        
         USING LINT,R4                                                          
*                                                                               
         LTH   R5,LINTWIND                                                      
         IF    Z,'LH R5,CPVWCUR'                                                
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         USING WIND,R5                                                          
*-                                                                              
*-       Set trigger row between windows.                                       
*-                                                                              
         IF    (CPVWCNT,GT,1),BEGIN  Set trig row between windows...            
         IF    (R3,NE,WINDLROW),EXIT  Not the last row, scram                   
         TCURS (R3),1                                                           
         TSEG  L:=A($SETTROW),L'$SETTROW                                        
         END                                                                    
*-                                                                              
*-       Set the fields for this line.                                          
*-                                                                              
         ACALL FMTLINE             Define this line's fields                    
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
*-                                                                              
*-       End the last field.                                                    
*-                                                                              
         TCURS 1,1                 Prev position is end of buffer               
         TSEG  L:=A($FEND),L'$FEND  End of field                                
*-                                                                              
*-       Process any final duplicate fields (if any).                           
*-                                                                              
         IF    (PWAOROW,NZ),BEGIN  Pending duplicates...                        
         IF    (PWAOROW,GE,CPVHEI),EXIT  No duplicates, scram                   
         TSEG  L:=A($LCSI),L'$LCSI                                              
         TNUM  LH:PWAOROW          First row (original line's row)              
         TSEG  ';'                                                              
         TNUM  LH:CPVHEI           Last duplicate row                           
         TSEG  'z'                 Duplicate field attributes                   
         END                                                                    
*                                                                               
FPAGEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTLINE -- Local routine to define the fields in a line.                     
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
FMTLINE  PROC                                                                   
         TMARK                                                                  
*                                                                               
         ACALL FMTDUP              Process duplicate line                       
         IF    NZ,BEGIN            Not a duplicate...                           
         TCURS LH:LINTROW,1        Position to line row, 1st col                
*                                                                               
         IF    CPVFVTAM,'ACALL FMTVTAM'  Do special VTAM formatting             
*                                                                               
         IF    LINFFREE,'ACALL FMTFREE'                                         
         IF    (LINFNEW,OR,LINFTEXT),'ACALL FMTTEXT'                            
         IF    LINFCMD,'ACALL FMTCMD'                                           
         IF    LINFMSG,'ACALL FMTMSG'                                           
         IF    LINFCOL,'ACALL FMTCOL'                                           
         IF    LINFSTAT,'ACALL FMTSTAT'                                         
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTVTAM -- Local routine to do special VTAM preparations before              
*    defining the field.  This routine is only called for VTAM                  
*    terminals.                                                                 
*                                                                               
FMTVTAM  PROC                                                                   
         LA    R15,TTYBACK-TTYPE                                                
         IF    (LINFNEW,OR,LINFTEXT),'LA R15,TTYNEW-TTYPE'                      
         IF    LINFCMD,'LA R15,TTYCMD-TTYPE'                                    
         IF    LINFMSG,'LA R15,TTYMSG-TTYPE'                                    
         IF    LINFCOL,'LA R15,TTYCOL-TTYPE'                                    
         IF    LINFSTAT,'LA R15,TTYSTAT-TTYPE'                                  
         TREND                                                                  
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTFREE -- Local routine to define the fields in a free line.                
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
FMTFREE  PROC                                                                   
         TSEG  L:=A($FPROT),L'$FPROT  Protected field                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTTEXT -- Local routine to define the fields in a text line.                
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
FMTTEXT  PROC                                                                   
*-                                                                              
*-       Define line-number field as protected,skipped.                         
*-                                                                              
         IF    ^WINFUNN,BEGIN      Define lineno as protected...                
         TSEG  L:=A($FPROTS),L'$FPROTS  Skipped field for lineno                
         TCURS LH:LINTROW,12                                                    
         END                                                                    
*-                                                                              
*-   Define text field as unprotected if Active file is unprotected.            
*-                                                                              
         CLEAR R2                  Assume unprotected                           
*                                                                               
         IF    (WINDACT,EQ,CPACTNO),BEGIN  Current Active...                    
         IF    CPAFPRT,'LA R2,1'   Active is protected                          
         END                                                                    
*                                                                               
         ELSE  BEGIN               Check another Active...                      
         XPUSH ,,L'AINFO,PTR=R1                                                 
         WITH  (AINFO,R1)                                                       
         L     R15,WINDACT                                                      
         VCALL ACTGINFO            Get this Active's AINFO                      
         IF    Z,BEGIN             Got it...                                    
         IF    AINAFPRT,'LA R2,1'  It's protected                               
         END                                                                    
         XPOP  ,,L'AINFO                                                        
         END                                                                    
*                                                                               
         IF    CPVFFORMAT,'LA R2,1'  It's read-only                             
*                                                                               
         SETMSG L:=A($FUNPROT),L'$FUNPROT                                       
         IF    (R2,NZ),'SETMSG L:=A($FPROT),L"$FPROT'                           
         TSEG  (R1),(R0)                                                        
*-                                                                              
*-       Set tab stops in the line.                                             
*-                                                                              
         LA    R3,WINDTABS                                                      
         LA    R2,L'WINDTABS                                                    
         LOOP  BEGIN               Set appropriate tabs...                      
         LC    R1,@R3              Tab position                                 
         IF    (R1,Z),EXIT         No more tabs, scram                          
         SH    R1,WINDFCOL         Adjust for displayable columns               
         IF    POS,BEGIN           Within cols being displayed...               
         AH    R1,WINDTCOL         Convert to cursor pos                        
         DECR  R1                  Cursor column                                
         TCURS LH:LINTROW,(R1)                                                  
         TSEG  L:=A($SETTAB),L'$SETTAB  Set tab stop                            
         END                                                                    
*                                                                               
         LA    R3,@R3+1                                                         
         DECR  R2                                                               
         UNTIL (R2,Z)                                                           
         END                                                                    
*-                                                                              
*-       Set a trigger point if wordwrap mode.                                  
*-                                                                              
         IF    WINFWRAP,BEGIN      Wordwrap mode...                             
         LH    R1,WINDMARG         Right margin                                 
         SH    R1,WINDFCOL         Relative to cols displayed                   
         IF    NP,EXIT             Not visible, scram                           
         AH    R1,WINDTCOL         Calc cursor column                           
         TCURS LH:LINTROW,(R1)                                                  
         TSEG  L:=A($SETTRIG),L'$SETTRIG  Set trigger point                     
         END                                                                    
*-                                                                              
*-       If the window is unnumbered then define a one character                
*-       protected field at the very end of the line.  This prevents            
*-        a user from accidently doing a cursor left on "line+1" and            
*-         ending up at the last possible character of "line".                  
*-                                                                              
         IF    WINFUNN,BEGIN       Unnumbered window...                         
         IF    CPVFVTAM,EXIT       Not needed for VTAM, scram                   
         TCURS LH:LINTROW,LH:WINDTLEN                                           
         TSEG  L:=A($FPROTS),L'$FPROTS                                          
         TSEG  '!'                 (Never displayed)                            
         END                                                                    
*-                                                                              
*-       Save row and window information for duplicate check                    
*-         (see FMTDUP).                                                        
*-                                                                              
         MVC   PWAOROW,LINTROW     Save "old" row                               
         MVC   PWAOWIND,LINTWIND   Save "old" window number                     
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTDUP -- Local routine to process defining the fields for                   
*    duplicate text lines.                                                      
*                                                                               
*    This routine takes advantage of a special model terminal                   
*    sequence which duplicates the field definitions when multiple              
*    lines have exactly the same definitions.  This greatly reduces             
*    the number of definitions we have to sent.                                 
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - line was processed (line is a duplicate of previous)                 
*      4 - can't process line                                                   
*                                                                               
FMTDUP   PROC                                                                   
         LA    R3,4                Assume not a duplicate                       
*                                                                               
         IF    (PWAOROW,NZ),BEGIN  We have a prev text line...                  
         IF    CPVFVTAM,EXIT       VTAM can't do this, scram                    
*                                                                               
         IF    (LINTWIND,EQ,PWAOWIND),BEGIN  Same window...                     
         IF    (^LINFNEW,AND,^LINFTEXT),EXIT  Not a text line, scram            
         CLEAR R3                  This line is a duplicate                     
         B     FDUPEXIT                                                         
         END                                                                    
*                                                                               
         LH    R2,LINTROW          Current row                                  
         DECR  R2                  Last duplicate line                          
         IF    (R2,GT,PWAOROW),BEGIN  Multiple lines...                         
         LA    R0,1                                                             
         AH    R0,PWAOROW                                                       
         TCURS (R0),1              Line after original                          
         TSEG  L:=A($FEND),L'$FEND  End that line                               
*                                                                               
         TSEG  L:=A($LCSI),L'$LCSI                                              
         TNUM  LH:PWAOROW          First row (original line's row)              
         TSEG  ';'                                                              
         TNUM  (R2)                Last duplicate row                           
         TSEG  'z'                 Duplicate field attributes                   
         END                                                                    
*                                                                               
         CLEAR PWAOROW,PWAOWIND    Reset                                        
         END                                                                    
*                                                                               
FDUPEXIT LR    R15,R3              Set return code                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTCMD -- Local routine to define the fields in a command line.              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
FMTCMD   PROC                                                                   
         TSEG  L:=A($FPROTS),L'$FPROTS  Command prompt is protected             
         TCURS LH:LINTROW,12                                                    
*                                                                               
         TSEG  L:=A($FUNPROT),L'$FUNPROT  Command input is unprot               
         TSEG  L:=A($SETHOME),L'$SETHOME                                        
         TSEG  L:=A($SETTAB),L'$SETTAB                                          
*-                                                                              
*-       Set tab stops every 8 positions on command line.                       
*-                                                                              
         LA    R2,12+8             First tab stop position                      
         WHILE (R2,LE,CPVWID),BEGIN  Set tab stops...                           
         TCURS LH:LINTROW,(R2)                                                  
         TSEG  L:=A($SETTAB),L'$SETTAB                                          
         LA    R2,@R2+8                                                         
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTMSG -- Local routine to define the fields in a message line.              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
FMTMSG   PROC                                                                   
         TSEG  L:=A($FPROTS),L'$FPROTS  Protected and skipped                   
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTCOL -- Local routine to define the fields in a column line.               
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
FMTCOL   PROC                                                                   
*-                                                                              
*-       Define line-number area as protected and skipped.                      
*-                                                                              
         IF    ^WINFUNN,BEGIN      Define lineno as protected...                
         TSEG  L:=A($FPROTS),L'$FPROTS  Skipped field for lineno                
         TCURS LH:LINTROW,12                                                    
         END                                                                    
*-                                                                              
*-       Define column text as protected (but not skipped).                     
*-                                                                              
         TSEG  L:=A($FPROT),L'$FPROT  Column line is protected                  
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTSTAT -- Local routine to define the fields in a status line.              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
FMTSTAT  PROC                                                                   
         SETMSG L:=A($FPROT),L'$FPROT  Status line is protected                 
         IF    (LINTROW,EQ,1),BEGIN  Status line on first row...                
         SETMSG L:=A($FPROTS),L'$FPROTS  Make it prot and skip                  
         END                                                                    
         TSEG  (R1),(R0)                                                        
         PEND                                                                   
*                                                                               
         DROP  LINT,WIND                                                        
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTPAGE -- Local routine to rewrite any changed lines on                     
*    the page.                                                                  
*                                                                               
OUTPAGE  PROC                                                                   
*-                                                                              
*-       Count any file changes as one change now.                              
*-                                                                              
         IF    CPVFCH,BEGIN        File changes have occurred...                
         INCR  R0,CPACHCT          Count the change                             
         CLEAR CPVFCH                                                           
         END                                                                    
*-                                                                              
*-       First try to scroll lines to accomidate the changes.                   
*-                                                                              
         ACALL OUTSCRL             Do any scrolling                             
*-                                                                              
*-       Write any changed lines.                                               
*-                                                                              
         MVC   PWACROW,=H'1'                                                    
         CLEAR PWAROWS             Initialize top, bottom, cmd rows             
         L     R4,CPLINTP                                                       
         WHILE (PWACROW,LE,CPVHEI),BEGIN  Go through lines...                   
         WITH  (LINT,R4)                                                        
         LA    R1,LINT                                                          
         ACALL OUTLINE             Write line if it has changed                 
*                                                                               
         LA    R4,LINTNEXT                                                      
         INCR  R15,PWACROW                                                      
         END                                                                    
*-                                                                              
*-       Set top and bottom points.                                             
*-                                                                              
         IF    (PWATOPR,Z),BEGIN   No top/bottom points...                      
         MVC   PWATOPR,PWAFNEWR    Make top the first new line                  
         MVC   PWABOTR,PWALNEWR    Make bottom the last new line                
         END                                                                    
*                                                                               
         IF    (PWATOPR,NZ),BEGIN  Set top/bottom points...                     
         LH    R5,CPVWCUR                                                       
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND          Default window                               
         WITH  (WIND,R5)                                                        
*                                                                               
         TCURS LH:PWATOPR,LH:WINDTCOL                                           
         TSEG  L:=A($SETTOP),L'$SETTOP  Set top point                           
*                                                                               
         TCURS LH:PWABOTR,LH:WINDTCOL                                           
         TSEG  L:=A($SETBOT),L'$SETBOT  Set bottom point                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTSCRL -- Local routine to scroll any lines that have moved                 
*    up or down since the last rewrite.                                         
*                                                                               
OUTSWA   RECORD BEGIN                                                           
OUTSFLAG FLAG                                                                   
         FLAG  OUTSFUP             - Something to scroll up                     
         FLAG  OUTSFDWN            - Something to scroll down                   
         FLAG  OUTSFRGN            - Scrolling region is set                    
*                                                                               
OUTSCNT  DS    H                   Working scroll up/down count                 
*                                                                               
OUTSMAP  DS    XL(LINTMAX#)        Scroll row map                               
         END                                                                    
*-                                                                              
OUTSCRL  PROC  OUTSWA                                                           
         CLEAR OUTSWA                                                           
*                                                                               
         IF    CPVFREWR,OUTSFIN    No previous lines, scram                     
*                                                                               
         LT    R15,CPTTYPEP                                                     
         IF    NZ,BEGIN                                                         
         WITH  (TTYPE,R15)                                                      
         IF    (TTYFSCR+TTYFQSCR,Z),OUTSFIN  Terminal can't scroll              
         END                                                                    
*-                                                                              
*-  Compare new line-numbers to the current line-numbers on the page            
*-         building a table of what has scrolled.                               
*-                                                                              
         LA    R4,1                                                             
         L     R5,CPLINTP                                                       
         WHILE (R4,LE,CPVHEI),BEGIN  Go through lines...                        
         WITH  (LINT,R5)                                                        
*                                                                               
         LT    R1,LINTOLNO                                                      
         IF    ^NEG,BEGIN          Currently a line-number...                   
         IF    (R1,EQ,LINTLNO),OUTSLNXT  Same lineno, scram                     
*                                                                               
         LTH   R0,LINTWIND         Window number                                
         IF    Z,EXIT              Special line, forget it                      
         ACALL PAGEFIND            Find the row for the new lineno              
         IF    NZ,BEGIN            Found it on the page...                      
         STC   R15,OUTSMAP-1(R4)   Save the new row                             
         IF    (R15,LE,R4),'SET OUTSFUP'  Scroll up(s) needed                   
         ELSE  'SET OUTSFDWN'      Scroll down(s) needed                        
*                                                                               
         MH    R15,=AL2(L'LINT)                                                 
         A     R15,CPXLINT                                                      
         OC    LINTFLG-LINT(1,R15),LINTOFLG  Preserve line flags                
         END                                                                    
         END                                                                    
*                                                                               
OUTSLNXT LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*-                                                                              
*-       Do any scroll ups first.                                               
*-                                                                              
         IF    OUTSFUP,BEGIN       Do scroll ups first...                       
         LA    R4,1                                                             
         L     R5,CPLINTP                                                       
         WHILE (R4,LE,CPVHEI),BEGIN  Go through lines...                        
         WITH  (LINT,R5)                                                        
*                                                                               
         LC    R3,OUTSMAP-1(R4)    New row for this line                        
         IF    (R3,NZ),BEGIN       The line has moved...                        
         LR    R15,R3                                                           
         SR    R15,R4              Pos if scroll down; neg if up                
         IF    ^NEG,EXIT           Not a scroll up, scram                       
         STH   R15,OUTSCNT         Save scroll up count                         
*-                                                                              
*-       Find the end of the scrolling region.                                  
*-                                                                              
         LR    R2,R3                                                            
         WHILE (R4,LT,CPVHEI),BEGIN                                             
         LA    R2,@R2+1            Expecting this as the next row               
         LC    R15,OUTSMAP(R4)     Actual next row                              
         IF    (R2,NE,R15),EXIT    End of scroll area, scram                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
         LR    R0,R3               First row in scrolling region                
         LR    R1,R4               Last row in scrolling region                 
         LA    R2,OUTSMAP          Row scroll map                               
         LH    R15,OUTSCNT         Scroll count                                 
         ACALL SCRLRGN             Scroll text                                  
         SET   OUTSFRGN            A scrolling region is set                    
         END                                                                    
*                                                                               
         LA    R5,LINTNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now do any scroll downs (processing rows bottom to top).               
*-                                                                              
         IF    OUTSFDWN,BEGIN      Do any scroll downs...                       
         LH    R4,CPVHEI                                                        
         LR    R5,R4                                                            
         MH    R5,=AL2(L'LINT)                                                  
         A     R5,CPXLINT          Last row                                     
         WHILE (R4,POS),BEGIN      Go through lines...                          
         WITH  (LINT,R5)                                                        
*                                                                               
         LC    R3,OUTSMAP-1(R4)    New row for this line                        
         IF    (R3,NZ),BEGIN       The line has moved...                        
         LR    R15,R3                                                           
         SR    R15,R4              Pos if scroll down; neg if up                
         IF    NEG,EXIT            We only want scroll downs                    
         STH   R15,OUTSCNT         Save scroll down count                       
*-                                                                              
*-       Find the start of the scrolling region.                                
*-                                                                              
         LR    R2,R3                                                            
         WHILE (R4,GT,1),BEGIN                                                  
         DECR  R2                  Expecting this as the prev row               
         LC    R15,OUTSMAP-2(R4)   Actual previous row                          
         IF    (R2,NE,R15),EXIT    Start of scroll area, scram                  
*                                                                               
         SH    R5,=AL2(L'LINT)     Previous line                                
         DECR  R4                                                               
         END                                                                    
*                                                                               
         LR    R0,R4               First row in scrolling region                
         LR    R1,R3               Last row in scrolling region                 
         LA    R2,OUTSMAP          Row scroll map                               
         LH    R15,OUTSCNT         Scroll count                                 
         ACALL SCRLRGN             Scroll text                                  
         SET   OUTSFRGN            A scrolling region is set                    
         END                                                                    
*                                                                               
         SH    R5,=AL2(L'LINT)                                                  
         DECR  R4                                                               
         END                                                                    
         END                                                                    
*-                                                                              
*-       Reset any scrolling region.                                            
*-                                                                              
         IF    OUTSFRGN,BEGIN      A region is set...                           
         TSEG  L:=A($CSI),L'$CSI                                                
         TSEG  'r'                                                              
         END                                                                    
*                                                                               
OUTSFIN  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SCRLRGN -- Routine to scroll a region of text up or down                     
*    the specified number of lines.                                             
*                                                                               
*    On entry:                                                                  
*      R0 - first row                                                           
*      R1 - last row                                                            
*      R2 - row scroll map ptr                                                  
*      R15 - amount to scroll (positive scrolls down;                           
*                              negative scrolls up)                             
*                                                                               
SCRLWA   RECORD BEGIN                                                           
SCRLFROW DS    H                   First row in scrolling region                
SCRLLROW DS    H                   Last row in scrolling region                 
SCRLCNT  DS    H                   Scroll count                                 
SCRLWCNT DS    H                   Working scroll count                         
         END                                                                    
*-                                                                              
SCRLRGN  PROC  SCRLWA                                                           
         STH   R0,SCRLFROW         First row                                    
         STH   R1,SCRLLROW         Last row                                     
         STH   R15,SCRLCNT         Scroll up/down count                         
*                                                                               
         DECR  R2                                                               
         LR    R5,R2               Save map ptr for later                       
*-                                                                              
*-       Don't scroll in a window that will be rewritten.                       
*-                                                                              
         LT    R15,CPTTYPEP                                                     
         IF    NZ,BEGIN                                                         
         WITH  (TTYPE,R15)                                                      
         IF    TTYFQSCR,EXIT       Terminal can quick scroll, scram             
*                                                                               
         LH    R15,SCRLFROW                                                     
         MH    R15,=AL2(L'LINT)                                                 
         A     R15,CPXLINT                                                      
         WITH  (LINT,R15),'LH R1,LINTWIND'                                      
         IF    (R1,NZ),BEGIN                                                    
         MH    R1,=AL2(L'WIND)                                                  
         A     R1,CPXWIND                                                       
         WITH  (WIND,R1)                                                        
*                                                                               
         IF    WINFREWR,SCRLEXIT   Don't scroll if window rewrite               
         END                                                                    
         END                                                                    
*-                                                                              
*-       Do the scrolling.                                                      
*-                                                                              
         TSEG  L:=A($CSI),L'$CSI                                                
         TNUM  LH:SCRLFROW         First row                                    
         TSEG  ';'                                                              
         TNUM  LH:SCRLLROW         Last row                                     
         TSEG  'r'                 Set scrolling region                         
*-                                                                              
*-       Scroll all at once if possible.                                        
*-                                                                              
         LT    R15,CPTTYPEP                                                     
         WITH  (TTYPE,R15),'TM TTYFQSCR,L"TTYFQSCR'                             
         IF    NZ,BEGIN            Scroll all at once...                        
         TSEG  L:=A($LCSI),L'$LCSI                                              
         LH    R3,SCRLCNT          Scroll count                                 
         LPR   R1,R3                                                            
         TNUM  (R1)                Number of lines to scroll                    
         SETMSG 'D'                 Assume down                                 
         IF    (R3,NEG),'SETMSG "U"'                                            
         TSEG  (R1),(R0)                                                        
         END                                                                    
*-                                                                              
*-       Scroll one line at a time.                                             
*-                                                                              
         ELSE  BEGIN               Scroll one line at a time...                 
         LH    R15,SCRLCNT         Scroll up/down count                         
         STH   R15,SCRLWCNT        Save working scroll count                    
*                                                                               
         IF    (R15,NEG),BEGIN     Scroll up...                                 
         LPR   R15,R15                                                          
         STH   R15,SCRLWCNT        Convert to unsigned scroll count             
         MVC   PWACROW,SCRLLROW    Put new lines here                           
*                                                                               
         LH    R3,SCRLLROW                                                      
         LH    R15,SCRLWCNT                                                     
         DECR  R15                                                              
         SR    R3,R15                                                           
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          New lines start here                         
*                                                                               
         LOOP  BEGIN                                                            
         WITH  (LINT,R4)                                                        
         TSEG  L:=A($LCSI),L'$LCSI                                              
         TSEG  'U'                                                              
*                                                                               
         LR    R1,R4                                                            
         ACALL OUTLINE             Write the new line                           
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         DECR  R15,SCRLWCNT                                                     
         UNTIL (R15,NP)                                                         
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Scroll down...                               
         MVC   PWACROW,SCRLFROW    Put new lines here                           
*                                                                               
         LH    R3,SCRLWCNT                                                      
         DECR  R3                                                               
         AH    R3,SCRLFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT          New lines start here                         
*                                                                               
         LOOP  BEGIN                                                            
         WITH  (LINT,R4)                                                        
         TSEG  L:=A($LCSI),L'$LCSI                                              
         TSEG  'D'                                                              
*                                                                               
         LR    R1,R4                                                            
         ACALL OUTLINE             Write the new line                           
*                                                                               
         SH    R4,=AL2(L'LINT)                                                  
         DECR  R3                                                               
         DECR  R15,SCRLWCNT                                                     
         UNTIL (R15,NP)                                                         
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Since we have scrolled the lines the old line-number field             
*-         needs to be set to the current line-number (otherwise the            
*-         line would be rewritten unnecessarily).                              
*-                                                                              
         LH    R2,SCRLCNT          Signed scroll count                          
         LH    R3,SCRLFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT                                                       
*                                                                               
         LA    R5,@R5(R3)          Map ptr for the lines                        
*-                                                                              
*-       Post-process scroll down lines.                                        
*-                                                                              
         IF    (R2,POS),BEGIN      Scroll down...                               
         WHILE (R3,LE,SCRLLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R4)                                                        
*                                                                               
         IF    (R2,POS),BEGIN      Lines which were blanked...                  
         SET   LINFREWR            Rewrite this line                            
         DECR  R2                                                               
         END                                                                    
*                                                                               
         ELSE  BEGIN               Lines which were scrolled...                 
         LC    R15,@R5                                                          
         IF    (R15,Z),EXIT        (Shouldn't happen)                           
         MH    R15,=AL2(L'LINT)                                                 
         A     R15,CPXLINT         New LINT ptr                                 
         MVC   LINTOLNO-LINT(4,R15),LINTLNO-LINT(R15)  Set lineno               
         END                                                                    
*                                                                               
         MVI   @R5,0               Unmap line now                               
         LA    R5,@R5+1            Next map entry                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Post-process scroll up lines.                                          
*-                                                                              
         ELSE  BEGIN               Scroll up...                                 
         AH    R2,SCRLLROW         Last scrolled row (R2 was neg)               
*                                                                               
         WHILE (R3,LE,SCRLLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R4)                                                        
*                                                                               
         IF    (R3,GT,R2),BEGIN    Lines which were blanked...                  
         SET   LINFREWR            Rewrite this line                            
         END                                                                    
*                                                                               
         ELSE  BEGIN               Lines which were scrolled...                 
         LC    R15,@R5                                                          
         IF    (R15,Z),EXIT        (Shouldn't happen)                           
         MH    R15,=AL2(L'LINT)                                                 
         A     R15,CPXLINT         New LINT ptr                                 
         MVC   LINTOLNO-LINT(4,R15),LINTLNO-LINT(R15)  Set lineno               
         END                                                                    
*                                                                               
         MVI   @R5,0               Unmap line now                               
         LA    R5,@R5+1            Next map entry                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
         END                                                                    
*                                                                               
SCRLEXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTLINE -- Local routine to rewrite a line on the page if it                 
*    has been changed.                                                          
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R1 - LINT ptr                                                            
*                                                                               
OLINWA   RECORD BEGIN                                                           
OLINACT  DS    F                   Current Active file on entry                 
         END                                                                    
*-                                                                              
OUTLINE  PROC  OLINWA                                                           
         LR    R4,R1               LINT ptr                                     
         WITH  (LINT,R4)                                                        
         LTH   R5,LINTWIND                                                      
         IF    Z,'LH R5,CPVWCUR'                                                
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND                                                       
         WITH  (WIND,R5)                                                        
*                                                                               
         MVC   OLINACT,CPACTNO     Save Active file number on entry             
         L     R15,WINDACT         Window's Active file number                  
         VCALL ACTPICK             Switch into window's Active file             
*-                                                                              
*-       Save top and bottom row numbers for later.                             
*-                                                                              
         IF    LINFNEW,BEGIN       New line...                                  
         IF    (LINTWIND,NE,CPVWCUR),EXIT  Only the default window              
         IF    (PWAFNEWR,Z),'MVC PWAFNEWR,PWACROW'  Save first row              
         MVC   PWALNEWR,PWACROW    Save last row                                
         END                                                                    
*                                                                               
         IF    LINFTEXT,BEGIN      Text line...                                 
         IF    (LINTWIND,NE,CPVWCUR),EXIT  Only the default window              
         IF    (PWATOPR,Z),'MVC PWATOPR,PWACROW'  Save top row                  
         MVC   PWABOTR,PWACROW     Save bottom row                              
         END                                                                    
*-                                                                              
*-  Update old line-number field now, if the line-number has changed            
*-         then we must rewrite the line.                                       
*-                                                                              
         L     R15,=F'-2'          Assume invalid entry                         
*                                                                               
         IF    LINFNEW,BEGIN                                                    
         IF    (LINTLNO,NE,-1),'L R15,=F"-1"'  New line has -1 lno              
         END                                                                    
*                                                                               
         IF    LINFTEXT,BEGIN      Text has a line-number...                    
         L     R15,LINTLNO                                                      
         IF    (WINDACT,EQ,CPBLKACT),BEGIN  Block in this Active...             
         IF    ((R15,LT,CPFBKLNO),OR,(R15,GT,CPLBKLNO)),EXIT                    
         IF    CPVFHIDE,EXIT                                                    
         SET   LINFREWR            Always rewrite marked lines                  
         END                                                                    
         END                                                                    
*                                                                               
         IF    (R15,EQ,LINTOLNO),BEGIN  Same line-number...                     
         OC    LINTFLG,LINTOFLG    Preserve line attributes                     
         END                                                                    
         ELSE  BEGIN               Line-number has changed...                   
         SET   LINFREWR            We'll need to rewrite this line              
         ST    R15,LINTOLNO        Update old line-number                       
         END                                                                    
*                                                                               
         CLEAR LINTOFLG            Reset old line attributes                    
*-                                                                              
*-       Write the line if necessary.                                           
*-                                                                              
         IF    (CPVFREWR,OR,WINFREWR,OR,LINFREWR),BEGIN  Rewrite...             
         TMARK                                                                  
         TCURS LH:PWACROW,1        Position to line row, 1st col                
*                                                                               
         CLEAR LINFREWR                                                         
*                                                                               
         IF    LINFFREE,'ACALL OUTFREE'                                         
         IF    LINFNEW,'ACALL OUTNEW'                                           
         IF    LINFTEXT,'ACALL OUTTEXT'                                         
         IF    LINFCOL,'ACALL OUTCOL'                                           
         IF    LINFCMD,'ACALL OUTCMD'                                           
         IF    LINFMSG,'ACALL OUTMSG'                                           
         IF    LINFSTAT,'ACALL OUTSTAT'                                         
*                                                                               
         TMARK                                                                  
         END                                                                    
*                                                                               
         L     R15,OLINACT                                                      
         VCALL ACTPICK             Restore current Active file                  
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTFREE -- Local routine to format a free line.                              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
OUTFREE  PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         TREND BACK                Background rendition                         
         LH    R15,WINDTLEN        Total text length                            
         AH    R15,WINDTCOL                                                     
         DECR  R15                 Page width                                   
         ACALL DELTEXT             Blank entire line                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTNEW -- Local routine to format a new text line.                           
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
OUTNEW   PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*-                                                                              
*-  Write completely blank line if there is no possible line-number.            
*-                                                                              
         IF    (LINTLNO,EQ,-1),BEGIN  No possible line-number...                
         ACALL OUTFREE             Display blank line                           
         B     OUTNEXIT                                                         
         END                                                                    
*-                                                                              
*-       Set up new line defaults.                                              
*-                                                                              
         LA    R15,TTYNEW-TTYPE                                                 
         STH   R15,PWADEFR         Save normal rendition value                  
         MVC   PWALINE,CVBLANKS    A new line is always blank                   
         CLEAR PWAREND,PWAATTR     Assume every character is normal             
*-                                                                              
*-       Prepare mode pads the line with nulls instead of blanks.               
*-                                                                              
         IF    LINFPREP,BEGIN      Prepare (nulls) mode...                      
         CLEAR PWALINE             Set entire line to nulls                     
         END                                                                    
*-                                                                              
*-       Write the line-number.                                                 
*-                                                                              
         IF    ^WINFUNN,BEGIN      Numbered...                                  
         TREND LNEW                                                             
         TSEG  '  New.   '         Indicate new line                            
*                                                                               
         SETMSG ' '                                                             
         IF    LINFPREP,'SETMSG "+"'                                            
         TSEG  (R1),(R0)                                                        
*                                                                               
         IF    CPVFVTAM,'TCURS LH:LINTROW,12'  Skip VTAM FAC                    
         ELSE  'TSEG " "'                                                       
         END                                                                    
*-                                                                              
*-       Write blanks for the new line text.                                    
*-                                                                              
         TREND BACK                Background rendition                         
*                                                                               
         LA    R1,PWALINE                                                       
         AH    R1,WINDFCOL         Line text ptr                                
         LA    R2,PWAREND                                                       
         AH    R2,WINDFCOL         Rendition ptr                                
         LA    R3,PWAATTR                                                       
         AH    R3,WINDFCOL         Attribute ptr                                
         LH    R0,WINDTLEN         Line length                                  
         ACALL DISPTEXT            Display the line                             
*                                                                               
OUTNEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTTEXT -- Local routine to format a text line.                              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
OUTTWA   RECORD BEGIN                                                           
OUTTWORK DS    CL11                Working formatting area                      
*                                                                               
OUTLLEN  DS    H                   Working line length                          
OUTBUF   DS    CL(&LINESZ)         Working line area                            
         END                                                                    
*-                                                                              
OUTTEXT  PROC  OUTTWA                                                           
         WITH  (LINT,R4),(WIND,R5)                                              
*-                                                                              
*-       Get the line.                                                          
*-                                                                              
         L     R15,LINTLNO                                                      
         LA    R1,PWALINE                                                       
         VCALL GETLINE             Get line text                                
         STH   R0,OUTLLEN          Save line length for later                   
*                                                                               
         L     R3,CPTTYPEP                                                      
         WITH  (TTYPE,R3),BEGIN                                                 
*-                                                                              
*-       Prepare mode pads the line with nulls instead of blanks.               
*-                                                                              
         IF    LINFPREP,BEGIN      Prepare (nulls) mode...                      
         LA    R1,PWALINE                                                       
         AH    R1,OUTLLEN          End of line                                  
         LA    R15,&LINESZ                                                      
         SH    R15,OUTLLEN         Number of chars after end                    
         ZOT   @R1,(R15)           Clear chars to nulls                         
         END                                                                    
*-                                                                              
*-       Determine the normal rendition for this line.                          
*-                                                                              
         LA    R15,TTYNORM-TTYPE                                                
         STH   R15,PWADEFR         Save normal rendition value                  
*                                                                               
         CLEAR PWAREND,PWAATTR     Assume every character is normal             
*-                                                                              
*-       Set the rendition for the marked characters.                           
*-                                                                              
         IF    (WINDACT,EQ,CPBLKACT),BEGIN  Marked Active file...               
         L     R2,LINTLNO                                                       
         IF    ((R2,LT,CPFBKLNO),OR,(R2,GT,CPLBKLNO)),EXIT                      
         IF    CPVFHIDE,EXIT       Block is hidden, forget it                   
*                                                                               
         SET   LINFREWR            Rewrite line next time                       
*                                                                               
         IF    (LINTLNO,EQ,CPFBKLNO),BEGIN  FBLOCK line...                      
         LH    R15,CPFBKCOL                                                     
         LA    R1,PWAATTR-1(R15)                                                
         SET   @R1.PWAAFBLK        Set FBLOCK point                             
         END                                                                    
*                                                                               
         IF    (LINTLNO,EQ,CPLBKLNO),BEGIN  LBLOCK line...                      
         LTH   R15,CPLBKCOL                                                     
         IF    Z,EXIT                                                           
         LA    R1,PWAATTR-1(R15)                                                
         SET   @R1.PWAALBLK        Set LBLOCK point                             
         END                                                                    
*                                                                               
*                                                                               
         LA    R1,PWAREND                                                       
         LH    R15,OUTLLEN         Mark the entire line                         
         IF    TTYFMARK,'LA R15,&LINESZ'  Including trailing blanks             
*                                                                               
         IF    (LINTLNO,EQ,CPLBKLNO),BEGIN  Last line in block...               
         IF    (CPLBKCOL,NZ),'LH R15,CPLBKCOL'  Last column is here             
         ELSE  'LA R15,@R15+1; CEIL R15,&LINESZ'                                
         END                                                                    
*                                                                               
         IF    (LINTLNO,EQ,CPFBKLNO),BEGIN  Start at first column...            
         AH    R1,CPFBKCOL                                                      
         DECR  R1                                                               
         SH    R15,CPFBKCOL                                                     
         LA    R15,@R15+1                                                       
         END                                                                    
*                                                                               
         FLOOR R15,1               Always show at least one char                
*                                                                               
         IF    (R15,POS),BEGIN     Mark the characters...                       
         MVI   @R1,PWARMARK                                                     
         DECR  R15                                                              
         MOVE  R15,@R1+1,@R1                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Highlight any misspelled words.                                        
*-                                                                              
         IF    (CPLFSPEL,OR,CPVFSPEL),BEGIN  Check spelling...                  
         SETMSG PWALINE,LH:OUTLLEN  Line text                                   
         LA    R2,PWAREND          Rendition buffer                             
         LA    R3,PWAATTR          Attribute buffer                             
         VCALL SPELLINE            Check spelling in this line                  
         IF    NZ,'SET LINFREWR'   Rewrite line next time                       
         END                                                                    
         END                                                                    
*-                                                                              
*-       Highlight any associative range text.                                  
*-                                                                              
         MVC   CPLCNO,LINTLNO      Line-number                                  
         LA    R1,PWALINE          Line text                                    
         LA    R2,PWAREND          Rendition buffer                             
         CLEAR R15                 Find any match                               
         VCALL MATLINE             Highlight associative range text             
         IF    NZ,'SET LINFREWR'   Rewrite line next time                       
*-                                                                              
*-       Write the line-number.                                                 
*-                                                                              
         IF    ^WINFUNN,BEGIN      Numbered...                                  
         L     R0,LINTLNO                                                       
         VCALL CVEXNO              Format lineno in CPDOUB                      
         MVC   OUTTWORK,CVBLANKS                                                
         MVC   OUTTWORK(9),CPDOUB                                               
*                                                                               
         LH    R15,CPVWID          Total DISPLAYED width                        
         AH    R15,WINDFCOL        Add in starting column-1                     
         SH    R15,WINDTCOL        Account for space for lineno                 
         LA    R15,@R15+1          Value of last column displayed               
         IF    (OUTLLEN,GT,R15),'MVI OUTTWORK+9,C"!"'  Overflow                 
*                                                                               
         LA    R15,TTYLNORM-TTYPE                                               
         IF    (CPACFPG,AND,(LINTLNO,EQ,CPACNLN)),BEGIN                         
         SET   LINFREWR            Line contains bold text (lineno)             
         L     R1,CPTTYPEP                                                      
         WITH  (TTYPE,R1)                                                       
         IF    (TTYLCOL,NE,CVBLANKS),'LA R15,TTYLCOL-TTYPE'                     
         MVI   OUTTWORK+9,C'>'     Flag collect lineno                          
         END                                                                    
*TEMP*   IF    LINFMARK,'LA R15,TTYLMARK-TTYPE'                                 
         TREND                                                                  
*                                                                               
         IF    LINFPREP,'MVI OUTTWORK+9,C"+"'  Prepare (nulls) mode             
*                                                                               
         TSEG  OUTTWORK,10         Line-number                                  
*                                                                               
         IF    CPVFVTAM,'TCURS LH:LINTROW,12'  Skip VTAM FAC                    
         ELSE  'TSEG " "'                                                       
         END                                                                    
*-                                                                              
*-       Write the line text.                                                   
*-                                                                              
         TREND BACK                Background rendition                         
*-                                                                              
*-       Convert non-printing characters to "blotch" characters.                
*-                                                                              
         LA    R3,PWALINE          Line text ptr                                
         LTH   R15,WINDTLEN                                                     
         IF    POS,BEGIN           Look for non-printing chars...               
         VCALL GTMIXTBL                                                         
         LR    R14,R15                                                          
         LTH   R15,WINDTLEN                                                     
         DEX   R15,'TRT @R3(0),@R14'  Any non-printing chars?                   
         IF    Z,EXIT              No, scram                                    
*                                                                               
         LA    R2,PWAREND          Rendition ptr                                
         VCALL GTMIXTBL                                                         
         LR    R14,R15                                                          
         LH    R0,WINDTLEN                                                      
         WHILE (R0,POS),BEGIN      Go through characters...                     
         LC    R15,@R3             Get character                                
         LC    R1,@R14(R15)        0=normal, ff=non-printing                    
         IF    ((R15,Z),AND,CPVFVTAM),'CLEAR R1'  VTAM null                     
         IF    (R1,NZ),BEGIN       Non-printing...                              
         MVI   @R3,C'='            Blotch character                             
         SET   @R2.PWARRULE        Alternate character set                      
         END                                                                    
*                                                                               
         LA    R3,@R3+1            Next character                               
         LA    R2,@R2+1            Next rendition byte                          
         DECR  R0                  One less character                           
         END                                                                    
         END                                                                    
*-                                                                              
*-       Display just the columns requested.                                    
*-                                                                              
         LA    R1,PWALINE                                                       
         AH    R1,WINDFCOL         Line text ptr                                
         LA    R2,PWAREND                                                       
         AH    R2,WINDFCOL         Rendition ptr                                
         LA    R3,PWAATTR                                                       
         AH    R3,WINDFCOL         Attribute ptr                                
         LH    R0,WINDTLEN         Line length                                  
         ACALL DISPTEXT            Display the line                             
*                                                                               
OUTLEXIT PEND                                                                   
         EJECT                                                                  
OUTZWA   RECORD BEGIN                                                           
OUTZL    SEGCB ,                   Seg buffer for left hand text                
*                                                                               
OUTZR    SEGCB ,                   Seg buffer for right hand text               
*                                                                               
OUTZBUF  DS    XL80                Working seg buffer                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  OUTSTAT -- Local routine to format the ACTIVE file status line               
*    on the page.                                                               
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*                                                                               
OUTSTAT  PROC  OUTZWA                                                           
         WITH  (LINT,R4),(WIND,R5)                                              
*-                                                                              
*-       Set up status line defaults.                                           
*-                                                                              
         LA    R15,TTYSTAT-TTYPE                                                
         STH   R15,PWADEFR         Save rendition value                         
*                                                                               
         MVC   PWALINE,CVBLANKS    Initialize blank status line                 
         CLEAR PWAREND,PWAATTR     Every character is normal                    
*-                                                                              
*-       Format right hand part of status line first.                           
*-                                                                              
         SEGINIT OUTZBUF,,OUTZR                                                 
         IF    ('LTH R2,WINDFCOL',NZ),BEGIN  Show columns...                    
         SEG   ' (Cols='                                                        
         SEGDC LA:@R2+1            Starting column                              
         SEG   '/'                                                              
         AH    R2,CPVWID           Total DISPLAYED width                        
         SH    R2,WINDTCOL         Account for space for lineno                 
         SEGDC LA:@R2+1            Ending column                                
         SEG   ')'                                                              
         END                                                                    
*                                                                               
         IF    WINFUNN,BEGIN       Show linenos...                              
         IF    (CPALNCT,Z),EXIT                                                 
         SEG   ' (Lines='                                                       
         L     R0,WINDFLNO                                                      
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)           Starting lineno                              
         SEG   '/'                                                              
         L     R0,WINDLLNO                                                      
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)           Ending lineno                                
         SEG   ')'                                                              
         END                                                                    
*                                                                               
         IF    (^CPVFHIDE,AND,(CPBLKACT,NZ)),BEGIN                              
         SEG   ' (Marked)'                                                      
         END                                                                    
*                                                                               
         IF    (CPACHCT,NZ),BEGIN  File has changed...                          
         SEG   ' (Changed)'                                                     
         END                                                                    
*                                                                               
         IF    CPVFFORMAT,BEGIN    Formatted...                                 
         SEG   ' (Formatted)'                                                   
         END                                                                    
*                                                                               
         SEG   ' '                                                              
         SEGDC L:CPALNCT           Number of lines                              
         SETMSG ' lines'                                                        
         IF    (R2,EQ,1),'DECR R0'                                              
         SEG   (R1),(R0)                                                        
*-                                                                              
*-       Format the main (left) part of the status line.                        
*-                                                                              
         SEGINIT PWALINE,,OUTZL                                                 
         SETMSG '=>'                                                            
         IF    (WINDNO,NE,CPVWCUR),'SETMSG CVBLANKS,2'                          
         SEG   (R1),(R0)                                                        
         SEGDC L:CPACTNO,4                                                      
         SEG   CVBLANKS,1                                                       
         SEG   CPANAME                                                          
*                                                                               
         IF    (CPATITL,NZ),BEGIN  Show title...                                
         SEG   CVBLANKS,1                                                       
         SEGT  CPATITL                                                          
         END                                                                    
*                                                                               
         ELSE  BEGIN               Show saved dsname...                         
         IF    (CPAFNAMEL,NE,0),BEGIN  From file name ...                       
         SEG   ' From '                                                         
         COMMENT                   FILE NAME                                    
         SETMSG CPAFNAME,L:CPAFNAMEL                                            
         VCALL RETFNAME                                                         
         IF    ((R0,GE,11),AND,(@R1,EQ,'WYL.'),AND,                    X        
               (@R1+6,EQ,'.'),AND,(@R1+10,EQ,'.'),AND,                 X        
               (CPSGRP,EQ,@R1+4),AND,(CPSUSER,EQ,@R1+7)),BEGIN                  
         LA    R1,@R1+11           Skip past the standard prefix                
         SH    R0,=H'11'                                                        
         END                                                                    
         SEG   (R1),(R0)                                                        
         COMMENT                   #MEMBER, IF ANY                              
         SETMSG CPAFNAME,L:CPAFNAMEL                                            
         VCALL RETFMEM                                                          
         IF    (R0,POS),BEGIN                                                   
         XPUSH R0,R1                                                            
         SEG   '#'                                                              
         XPOP  R0,R1                                                            
         SEG   (R1),(R0)                                                        
         END                                                                    
         COMMENT                   ON HOST, IF ANY                              
         IF    (CPAHOSTL,NE,0),BEGIN                                            
         SEG   ' on '                                                           
         SEG   CPAHOST,L:CPAHOSTL                                               
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now merge the left and right sides of the status line.                 
*-                                                                              
         LH    R2,CPVWID           Total line length                            
         S     R2,OUTZRLENF        Allow room for right side                    
         IF    NEG,'CLEAR R2'                                                   
*                                                                               
         IF    (OUTZLLENF,GT,R2),BEGIN  Overlap...                              
         LR    R15,R2                                                           
         SH    R15,=H'3'           Backup for truncation dots                   
         IF    NEG,EXIT            No room, scram                               
         LA    R1,PWALINE(R15)                                                  
         MVC   @R1(3),=C'...'      Truncation dots                              
         END                                                                    
*                                                                               
         LA    R1,PWALINE(R2)      Put right hand text here                     
         L     R15,OUTZRLENF                                                    
         MOVE  R15,@R1,OUTZBUF     Move in the right side                       
*-                                                                              
*-       Display the status line.                                               
*-                                                                              
         SETMSG PWALINE,LH:CPVWID   Line text                                   
         LA    R2,PWAREND          Rendition map                                
         LA    R3,PWAATTR          Attribute map                                
         ACALL DISPTEXT            Display the line                             
*                                                                               
         SET   LINFREWR            Rewrite line next time                       
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
OUTCWA   RECORD BEGIN                                                           
OUTCFLAG FLAG                                                                   
*                                                                               
OUTCCOL  DS    H                   Current cursor column                        
OUTCLEN  DS    H                   Working length                               
OUTCNO   DS    H                   Current tab index                            
*                                                                               
OUTCREND DS    H                   Current rendition ptrs                       
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  OUTCOL -- Local routine to format a column line on the page.                 
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
OUTCOL   PROC  OUTCWA                                                           
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         CLEAR OUTCWA                                                           
*-                                                                              
*-       Set the default rendition for this line.                               
*-                                                                              
         LA    R15,TTYCOL-TTYPE                                                 
         STH   R15,PWADEFR         Save normal rendition value                  
*                                                                               
         CLEAR PWAATTR             No special attributes                        
*-                                                                              
*-       Create column line.                                                    
*-                                                                              
         L     R15,CPTTYPEP                                                     
         MVC   PWALINE,COLMAP      Set column line text                         
         CLEAR PWAREND             ...no special renditions                     
*-                                                                              
*-       Flag columns with tab stops.                                           
*-                                                                              
         LA    R3,WINDTABS                                                      
         LA    R2,L'WINDTABS                                                    
         LOOP  BEGIN               Set appropriate tabs...                      
         LC    R15,@R3             Tab position                                 
         IF    (R15,Z),EXIT        None, scram                                  
         LA    R1,PWALINE-1(R15)                                                
         MVI   @R1,C't'            Mark column with tab stop                    
         LA    R1,PWAREND-1(R15)                                                
         CLEAR @R1.PWARRULE        Normal character set                         
         SET   @R1.PWARCOLT        Column line tab stop rendition               
*                                                                               
         LA    R3,@R3+1                                                         
         DECR  R2                                                               
         UNTIL (R2,Z)                                                           
         END                                                                    
*-                                                                              
*-       Flag left margin.                                                      
*-                                                                              
         LTH   R2,WINDIND                                                       
         IF    ^NEG,BEGIN          Flag left margin...                          
         LA    R1,PWALINE(R2)                                                   
         MVI   @R1,C'<'            Left margin                                  
         LA    R1,PWAREND(R2)                                                   
         CLEAR @R1.PWARRULE                                                     
         END                                                                    
*                                                                               
         ELSE  BEGIN               Flag automatic indendation...                
         LA    R1,PWALINE                                                       
         AH    R1,WINDFCOL                                                      
         MVI   @R1,C'/'            Automatic indentation                        
         LA    R1,PWAREND                                                       
         AH    R1,WINDFCOL                                                      
         CLEAR @R1.PWARRULE                                                     
         END                                                                    
*-                                                                              
*-       Flag right margin and columns beyond the margin.                       
*-                                                                              
         LH    R2,WINDMARG                                                      
*                                                                               
         IF    WINFWRAP,BEGIN      Margin only counts if wordwrap...            
         LA    R1,PWALINE-1(R2)                                                 
         MVI   @R1,C'>'                                                         
         LA    R1,PWAREND-1(R2)                                                 
         CLEAR @R1.PWARRULE                                                     
*                                                                               
         LA    R1,PWAREND(R2)                                                   
         LA    R15,&LINESZ                                                      
         SR    R15,R2                                                           
         IF    POS,BEGIN           Set rendition for past margin...             
         DEX   R15,'OC @R1(0),COLMREND'                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Write column line.                                                     
*-                                                                              
         TREND COL                                                              
*                                                                               
         LH    R0,WINDTCOL                                                      
         DECR  R0                                                               
         TSEG  CVBLANKS,(R0)       Space over                                   
*-                                                                              
*-       Display just the columns requested.                                    
*-                                                                              
         LA    R1,PWALINE                                                       
         AH    R1,WINDFCOL         Line text ptr                                
         LA    R2,PWAREND                                                       
         AH    R2,WINDFCOL         Rendition ptr                                
         LA    R3,PWAATTR                                                       
         AH    R3,WINDFCOL         Attribute ptr                                
         LH    R0,WINDTLEN         Line length                                  
         ACALL DISPTEXT            Display the line                             
*                                                                               
         PEND                                                                   
*                                                                               
COLMAP   DC    C'----+----1----+----2----+----3----+----4----+----5'            
         DC    C'----+----6----+----7----+----8----+----9----+----A'            
         DC    C'----+----B----+----C----+----D----+----E----+----F'            
         DC    C'----+----G----+----H----+----I----+----J----+----K'            
         DC    C'----+----L----+----M----+----N----+'                           
*                                                                               
COLMREND DC    (&LINESZ)AL1(PWARCOLM)                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTCMD -- Local routine to format the command line on the page.              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
OUTCMD   PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         TREND CMD                                                              
*                                                                               
         LA    R2,11               Prompt length                                
         IF    CPVFVTAM,BEGIN      VTAM is different...                         
         SETMSG 'Command:   '                                                   
         IF    CPVFESC,BEGIN                                                    
         SETMSG 'Command ("." means ESC):  '                                    
         END                                                                    
         LR    R2,R0                                                            
         TSEG  (R1),(R0)                                                        
         TSEG  L:=A($FUNPROT),L'$FUNPROT                                        
         END                                                                    
*                                                                               
         ELSE  BEGIN               Regular front-ends...                        
         TSEG  'Command:   '                                                    
         END                                                                    
*                                                                               
         LCR   R2,R2               Negative prompt length                       
         AH    R2,CPVWID           Amount of text allowed                       
*                                                                               
         SETMSG CPCMD,LH:CPCMDLEN   Current command                             
         VCALL RTRIM                                                            
         SR    R2,R0               No. of blanks after command                  
         TSEG  (R1),(R0)           Command text                                 
         LR    R15,R2                                                           
         ACALL DELTEXT             Delete any chars which follow                
*                                                                               
         SET   LINFREWR            Rewrite line next time                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTMSG -- Local routine to format the message line on the page.              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
OUTMSG   PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         TREND MSG                                                              
         SETMSG CPVMSG              Message                                     
         VCALL LRTRIM                                                           
         LH    R2,CPVWID                                                        
         SR    R2,R0                                                            
         DECR  R2                  No. of chars after message                   
         TSEG  (R1),(R0),B         Message text                                 
*-                                                                              
*-       Write out status part of message.                                      
*-                                                                              
         LR    R15,R2                                                           
         SH    R15,=H'25'          We need at least 25 blanks                   
         IF    POS,BEGIN           Tab over...                                  
         ACALL DELTEXT             Delete any chars which follow                
         LA    R2,25               Remaining blanks                             
         END                                                                    
*                                                                               
         TSEG  L:=A($SETMSG),L'$SETMSG  Front-end message area                  
*                                                                               
         LR    R15,R2                                                           
         ACALL DELTEXT             Delete any chars which follow                
*                                                                               
         SET   LINFREWR            Rewrite line next time                       
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INPTEXT -- Local routine to process text line updates.                       
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr (PWAFIELD contains data)                                    
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
INPTEXT  PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         LT    R15,LINTLNO                                                      
         BM    INPTEXIT                                                         
         LA    R1,PWALINE                                                       
         VCALL GETLINE             Get the line                                 
*                                                                               
         LH    R2,WINDTLEN                                                      
         LH    R1,WINDFCOL                                                      
         LA    R1,PWALINE(R1)                                                   
         LR    R15,R2                                                           
         MOVE  R15,@R1,CVBLANKS    Blank entire field first                     
*                                                                               
         LH    R15,PWAFLEN                                                      
         CEIL  R15,R2                                                           
         MOVE  R15,@R1,PWAFIELD    Move in new text                             
*                                                                               
         SET   CPVFCH              File changes have occurred                   
*                                                                               
         L     R15,LINTLNO         Use the line-number shown                    
         SETMSG PWALINE             Line text                                   
*-                                                                              
*-       Update an existing line.                                               
*-                                                                              
         IF    LINFTEXT,BEGIN      Updating an existing line...                 
         ACALL VPUTLINE            Replace the line                             
         B     INPTEXIT                                                         
         END                                                                    
*-                                                                              
*-    Add a new line.  Make sure that any other new lines before (or            
*-         after) this line are also filled in.                                 
*-                                                                              
         IF    LINFNEW,BEGIN       This is a new line...                        
         SET   LINFTEXT,LINFREWR   Make it look like an existing lno            
         MVC   LINTOLNO,LINTLNO    Set "old" lineno                             
         ACALL VPUTLINE            Add the new line                             
*                                                                               
         IF    (CPALNCT,EQ,1),INPTEXIT  Only one line in file, scram            
*                                                                               
         L     R3,PWACURS          Current row                                  
*                                                                               
         IF    (LINTLNO,LE,R0),BEGIN  Fill after new first...                   
         LOOP  BEGIN                                                            
         LA    R4,LINTNEXT         Next line                                    
         LA    R3,@R3+1                                                         
         WHILE (R3,LE,WINDLROW)                                                 
*                                                                               
         IF    LINFTEXT,INPTEXIT   Stop scan at first existing line             
*                                                                               
         IF    LINFNEW,BEGIN       Fill in new line...                          
         L     R15,LINTLNO         Line-number                                  
         SETMSG PWALINE,0           No line text                                
         ACALL VPUTLINE            Add the line                                 
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Fill in lines before new end...              
         LOOP  BEGIN                                                            
         SH    R4,=AL2(L'LINT)     Previous line                                
         DECR  R3                                                               
         WHILE (R3,GE,WINDFROW)                                                 
*                                                                               
         IF    LINFTEXT,INPTEXIT   Stop scan at first existing line             
*                                                                               
         IF    LINFNEW,BEGIN       Fill in new line...                          
         L     R15,LINTLNO         Line-number                                  
         SETMSG PWALINE,0           No line text                                
         ACALL VPUTLINE            Add the line                                 
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
INPTEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INPCMD -- Local routine to process command line updates.                     
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr (PWAFIELD contains data)                                    
*      R5 - current WIND ptr                                                    
*      R4 - current LINT ptr                                                    
*                                                                               
INPCMD   PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         MVC   CPCMD,CVBLANKS                                                   
         LH    R15,PWAFLEN                                                      
         CEIL  R15,L'CPCMD                                                      
         STH   R15,CPCMDLEN                                                     
         MOVE  R15,CPCMD,PWAFIELD  Save new command text                        
*                                                                               
         SETMSG CPCMD,LH:CPCMDLEN                                               
         VCALL RTRIM               Trim trailing blanks                         
         STH   R0,CPCMDLEN                                                      
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INPBUG -- Local routine to display the input buffer if the user              
*    is in debugging mode.                                                      
*                                                                               
INPBUG   PROC                                                                   
         IF    CPVFBUG,BEGIN       Debugging mode...                            
         LH    R4,PWARLEN                                                       
         XPUSH ,,(R4),PTR=R5                                                    
         MOVEL (R5),L:PWARLOC,(R4)  Save text                                   
*                                                                               
         TCLEAR                                                                 
         TSEG  L:=A($CS),L'$CS                                                  
         TSEG  'Input text ('                                                   
         TNUM  LH:PWARLEN                                                       
         TSEG  ' chars):',,CR                                                   
*                                                                               
         SETMSG (R5),(R4)                                                       
         LA    R15,2                                                            
         L     R2,=A(X'273B')      Break on ESC, CSI                            
         VCALL ESCFMT              Display input text                           
         TCR                                                                    
*                                                                               
         SETMSG 'Continue'                                                      
         VCALL YESREQ                                                           
*                                                                               
         MOVEL L:PWARLOC,(R5),(R4)  Restore text                                
         XPOP  ,,PTR=R5                                                         
*                                                                               
         SET   CPVFCLR             Clear and rewrite text                       
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CURSCMD -- Local routine to process cursor ending on a                       
*    command line.                                                              
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*      R0,R1 - cursor row, column                                               
*                                                                               
CURSCMD  PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         LA    R15,12              Start of command line                        
         IF    (R0,EQ,CPVCURR),'ST R15,CPVCURC'  Set cursor addr                
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CURSTEXT -- Local routine to process cursor ending on a text                 
*    line.                                                                      
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*      R0,R1 - cursor row, column                                               
*                                                                               
CURSTEXT PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         MVC   CPVLNO,LINTLNO      Set cursor lineno                            
         MVC   CPACLNO,CPVLNO      Set current lineno too                       
*                                                                               
         LA    R1,@R1+1            Column number is rel to one                  
         SH    R1,WINDTCOL         Adjust for column number                     
         IF    NEG,'CLEAR R1'                                                   
         AH    R1,WINDFCOL         Adjust for cols being displayed              
         STH   R1,CPVCOL           Set page column                              
*-                                                                              
*-       Don't move the cursor if there is a command waiting.                   
*-                                                                              
         IF    (CPCMDLEN,NZ),CURSLFIN  We have a command, scram                 
*-                                                                              
*-       Make sure the line the cursor is on exists.                            
*-                                                                              
         IF    LINFNEW,BEGIN       It doesn't exist yet...                      
         L     R15,CPVLNO          Cursor lineno                                
         SETMSG PWALINE,0                                                       
         ACALL VPUTLINE            Add a null line                              
         SET   CPVFCH              File changes have occurred                   
         END                                                                    
*-                                                                              
*-       Continue collecting new lines.                                         
*-                                                                              
         IF    (LINTLNO,EQ,CPACNLN),BEGIN  Continue collect...                  
         MVC   CPCMDLEN,=H'8'                                                   
         MVC   CPCMD(8),=C'.COLMORE'                                            
         B     CURSLFIN                                                         
         END                                                                    
*-                                                                              
*-       Insert mode means make a new line.                                     
*-                                                                              
         IF    CPVFINS,BEGIN       Insert mode...                               
         MVC   CPCMDLEN,=H'7'                                                   
         MVC   CPCMD(7),=C'.INSERT'  Makes a new line                           
         B     CURSLFIN                                                         
         END                                                                    
*-                                                                              
*-       Now move the cursor to the next line.                                  
*-                                                                              
         LA    R15,1                                                            
         A     R15,CPVLNO                                                       
         ST    R15,CPVLNO          Put cursor on next line                      
         CLEAR CPVCOL              Recalc cursor column                         
*-                                                                              
*-       Scroll the window up if the cursor was on the bottom line.             
*-                                                                              
         LH    R0,LINTROW                                                       
         LH    R1,WINDLROW                                                      
         ACALL PAGECNT             Any more lines left?                         
         IF    (R15,LE,1),BEGIN    We need to scroll up...                      
         LH    R15,=H'-2'          Scroll up two lines                          
         ACALL PAGESCRL            Make room for cursor line                    
         END                                                                    
*                                                                               
CURSLFIN PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CURSCOL -- Local routine to process cursor ending on a column                
*    line.                                                                      
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R5 - WIND ptr                                                            
*      R4 - LINT ptr                                                            
*      R0,R1 - cursor row, column                                               
*                                                                               
CURSCOL  PROC                                                                   
         WITH  (LINT,R4),(WIND,R5)                                              
*                                                                               
         IF    (CPCMDLEN,Z),BEGIN  RETURN on column line...                     
         SET   CPVFBELL            Say, what!                                   
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
VPUTWA   RECORD BEGIN                                                           
VPUTKEY  DS    XL16                Working key for CPRG16 rg                    
VPUTWLIN DS    CL(&LINESZ)         Working line text area                       
VPUTOPTR DS    2A                  Old text loc, len                            
VPUTPTRS DS    2A                  New text loc, len                            
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  VPUTLINE -- Routine to add/replace a line in the Active                      
*    file.  This routine is exactly the same as "PUTLINE"                       
*    except that it keeps a previous copy of the line in a                      
*    shadow Active file (for the OOPS function).                                
*                                                                               
*    On entry:                                                                  
*      R15 - line-number                                                        
*      R1,R0 - line text loc, len                                               
*                                                                               
VPUTLINE XPROC VPUTWA                                                           
         LR    R5,R15              Save lineno                                  
         STM   R0,R1,VPUTPTRS      Save line text ptrs                          
*-                                                                              
*-    First get the current version of this line's text and save it.            
*-                                                                              
         SETMSG VPUTWLIN                                                        
         VCALL GETLINE             Get current line contents                    
         IF    Z,BEGIN             Got it...                                    
         STM   R0,R1,VPUTOPTR      Save line text loc, len                      
         LA    R0,CP#OOPS          Previous lines kept here                     
         LA    R15,CPRG16          Misc record group                            
         VCALL XSETSET                                                          
*                                                                               
         CLEAR VPUTKEY                                                          
         MVC   VPUTKEY(4),CPACTNO  Current Active file number                   
         ST    R5,VPUTKEY+4        Current line-number                          
         LA    R2,VPUTKEY                                                       
         LM    R0,R1,VPUTOPTR      Line text loc, len                           
         LA    R15,CPRG16          Undo record group                            
         VCALL XPUT                Save previous line text                      
         END                                                                    
*-                                                                              
*-       Now do the PUTLINE.                                                    
*-                                                                              
         LR    R15,R5              Line-number                                  
         LM    R0,R1,VPUTPTRS      Line text ptrs                               
         VCALL PUTLINE             Save line text                               
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CALCDIM -- Routine to calculate screen dimensions and update                 
*    the various lengths in the window control blocks.                          
*                                                                               
CALCDIM  XPROC                                                                  
         SET   CPVFCLR             Redisplay the entire screen                  
*-                                                                              
*-       Calculate default height.                                              
*-                                                                              
         L     R2,CPTTYPEP                                                      
         WITH  (TTYPE,R2)                                                       
*                                                                               
         LTH   R4,CPVHEI           Number of lines on page                      
         IF    Z,BEGIN                                                          
         LTH   R4,CPSHEI           Get session default                          
         IF    NZ,EXIT             Got it, scram                                
         LTR   R2,R2                                                            
         IF    NZ,BEGIN                                                         
         LTH   R4,TTYHEI           Terminal height                              
         END                                                                    
         IF    NZ,EXIT             Got it, scram                                
         LA    R4,24               Universal default                            
         END                                                                    
*                                                                               
         FLOOR R4,10               Be reasonable                                
         CEIL  R4,LINTMAX#                                                      
         STH   R4,CPVHEI           Page height                                  
*-                                                                              
*-       Calculate default width.                                               
*-                                                                              
*-                                                                              
*-      For VTAM we use the actual width minus one to allow room for            
*-         those damn field attribute characters!                               
*-                                                                              
         IF    CPVFVTAM,BEGIN      VTAM is different...                         
         LTH   R15,CPVWID          Displayed width                              
         IF    NZ,'LA R15,@R15+1'  Re-adjust for logic below                    
         ELSE  BEGIN               No width set...                              
         LTH   R15,CPSAMWID        Samson width                                 
         IF    NZ,EXIT             Got it, scram                                
         LTR   R2,R2                                                            
         IF    NZ,BEGIN                                                         
         LTH   R15,TTYWID          Terminal width                               
         END                                                                    
         IF    NZ,EXIT             Got it, scram                                
         LTH   R15,CPSWID          Get session default                          
         IF    NZ,EXIT             Got it, scram                                
         LA    R15,80              Universal default                            
         END                                                                    
*                                                                               
         FLOOR R15,20              Be reasonable                                
         CEIL  R15,255                                                          
         DECR  R15                 Back down to length-1                        
         STH   R15,CPVWID          Save displayed width                         
         MVC   CPVTWID,CPVWID      Buffer and displayed are the same            
         END                                                                    
*                                                                               
         ELSE  BEGIN               Regular front-ends...                        
         LTH   R15,CPVWID          Displayed width                              
         IF    Z,BEGIN                                                          
         LTH   R15,CPSAMWID        Samson width                                 
         IF    NZ,EXIT             Got it, scram                                
         LTR   R2,R2                                                            
         IF    NZ,BEGIN                                                         
         LTH   R15,TTYWID          Terminal width                               
         END                                                                    
         IF    NZ,EXIT             Got it, scram                                
         LA    R15,80              Universal default                            
         END                                                                    
*                                                                               
         XPUSH R15                                                              
         FLOOR R15,20              Be reasonable                                
         CEIL  R15,255                                                          
         STH   R15,CPVWID          Displayed width                              
         FLOOR R15,200                                                          
         STH   R15,CPVTWID         Total width (generally 200)                  
         XPOP  R15                                                              
*-                                                                              
*-      For the pre-ALF front-ends (the RLG PDP-11) we have to                  
*-        make sure that "height*totalwidth" does not exceed the                
*-        front-end limit.                                                      
*-                                                                              
         IF    (CPSFE,EQ,'11'),BEGIN  PDP-11...                                 
         CLEAR R2                                                               
         LH    R3,DIMFEMAX         Maximum front-end buffer size                
         DR    R2,R4               Divide by number of lines                    
         CEIL  R3,200              Don't bother going past col 200              
*                                                                               
         CEIL  R15,R3                                                           
         STH   R15,CPVWID          Displayed width                              
         STH   R3,CPVTWID          Total width                                  
         END                                                                    
         END                                                                    
*-                                                                              
*-       Recalculate window lengths.                                            
*-                                                                              
         LA    R4,1                                                             
         L     R5,CPWINDP                                                       
         WHILE (R4,LE,CPVWCNT),BEGIN  Go through windows...                     
         WITH  (WIND,R5)                                                        
*                                                                               
         LH    R15,WINDTCOL        First text column                            
         DECR  R15                                                              
         LH    R2,CPVTWID                                                       
         IF    WINFUNN,'DECR R2'   Account for one char prot field              
         SR    R2,R15              Maximum text length                          
         STH   R2,WINDTLEN         Save it                                      
*                                                                               
         LA    R5,WINDNEXT                                                      
         LA    R4,@R4+1                                                         
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
DIMFEMAX DC    H'6144'             Max old front-end buffer size                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CALCCURS -- Local routine to calculate an absolute cursor                    
*    location on the page, given a line-number and a column.                    
*                                                                               
*    On entry:                                                                  
*      R1 - column in the line (rel to one)                                     
*      R15- line-number                                                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*     -4 - no lineno;                                                           
*            R0,R1 - cursor row,col of command line                             
*      0 - ok;                                                                  
*            R0,R1 - absolute cursor row,col                                    
*      4 - can't find the lineno;                                               
*            R0,R1 - next line's absolute cursor row,col                        
*                                                                               
CALCWA   RECORD BEGIN                                                           
CALCCRS  DS    D                   Cursor row, col                              
CALCRC   DS    F                   Saved return code                            
*                                                                               
CALCLINE DS    CL(&LINESZ)         Working line buffer                          
         END                                                                    
*-                                                                              
CALCCURS PROC  (R2,LSR),CALCWA                                                  
*-                                                                              
*-       Return the command line position if -1 line-number given.              
*-                                                                              
         IF    (R15,NEG),CALCCMC   No line-number, scram                        
*-                                                                              
*-       Get the current window.                                                
*-                                                                              
         LH    R5,CPVWCUR                                                       
         MH    R5,=AL2(L'WIND)                                                  
         A     R5,CPXWIND          Current window                               
         WITH  (WIND,R5)                                                        
*-                                                                              
*-       Look for the line-number in the window.                                
*-                                                                              
         CLEAR R0                  We don't know the row yet                    
*                                                                               
         LH    R3,WINDFROW                                                      
         LR    R4,R3                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT                                                       
         WHILE (R3,LE,WINDLROW),BEGIN  Go through lines...                      
         WITH  (LINT,R4)                                                        
*                                                                               
         IF    (LINFNEW,OR,LINFTEXT),BEGIN  Text line...                        
         LR    R0,R3               Save text cursor row                         
*                                                                               
         IF    (LINTLNO,GE,R15),BEGIN  We've reached the lineno...              
         IF    (R15,EQ,LINTLNO),'CLEAR R15'                                     
         ELSE  'LA R15,4'                                                       
         B     CALCCOL                                                          
         END                                                                    
         END                                                                    
*                                                                               
         LA    R4,LINTNEXT                                                      
         LA    R3,@R3+1                                                         
         END                                                                    
*                                                                               
         IF    (R0,Z),BEGIN        No text lines...                             
CALCCMC  LH    R15,=H'-4'                                                       
         CURS  LH:CPVCMDR,12       Command line cursor position                 
         B     CALCEXIT                                                         
         END                                                                    
*                                                                               
         LA    R15,4               No match; pos to last text line              
CALCCOL  ST    R15,CALCRC          Save return code                             
         STM   R0,R1,CALCCRS       Save cursor row,col                          
*-                                                                              
*-       Calculate specific indentation, if necessary.                          
*-                                                                              
         IF    (R1,Z),BEGIN        No specific column yet...                    
         LA    R15,1                                                            
         AH    R15,WINDIND         Get default indentation                      
*                                                                               
         IF    (R15,NP),BEGIN      Do auto indentation...                       
         LR    R4,R0                                                            
         MH    R4,=AL2(L'LINT)                                                  
         A     R4,CPXLINT                                                       
         WITH  (LINT,R4)                                                        
*                                                                               
         IF    (^LINFTEXT,AND,^LINFNEW),EXIT  Can't indent, scram               
*                                                                               
         L     R15,LINTLNO         Line-number                                  
         IF    (R15,GT,CPALLNO),'L R15,CPALLNO'  Don't go past eof              
         LA    R1,CALCLINE                                                      
         VCALL GETLINE             Get line text                                
         IF    (NZ,OR,(R0,Z)),BEGIN  Look at previous line...                   
         VCALL PREVLNO             Get previous lineno                          
         L     R15,CPLCNO                                                       
         LA    R1,CALCLINE                                                      
         VCALL GETLINE             Get previous line text                       
         END                                                                    
*                                                                               
         LA    R15,1               Calc first non-blank column                  
         WHILE ((R0,POS),AND,(@R1,EQ,' ')),BEGIN  Find non-blank...             
         LA    R15,@R15+1                                                       
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
         END                                                                    
*                                                                               
         ST    R15,CALCCRS+4       Save calculated column                       
         END                                                                    
*-                                                                              
*-       Convert the column to an absolute column position.                     
*-                                                                              
         LM    R0,R1,CALCCRS       Restore cursor row,col                       
         DECR  R1                  Rel to zero                                  
         SH    R1,WINDFCOL         Adjust for cols being displayed              
         IF    NEG,'CLEAR R1'      First possible col                           
         IF    (R1,GT,WINDTLEN),'LH R1,WINDTLEN'  Last possible col             
         AH    R1,WINDTCOL         Convert to absolute column                   
*                                                                               
         L     R15,CALCRC          Return code                                  
*                                                                               
CALCEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETFIELD -- Routine to pick out the next field in the read                   
*    buffer.  This routine also processes the model terminal                    
*    sequences (which are also in the read buffer).                             
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - field returned in PWAFIELD (R0,R1 - cursor)                          
*      4 - no more fields                                                       
*                                                                               
FIELDWA  RECORD BEGIN                                                           
FIELDFLG FLAG                                                                   
         FLAG  FIELDFST            - Start of field processed                   
*                                                                               
FIELDSTA DS    A                   Start of field                               
*                                                                               
FIELDCSF FLAG                                                                   
         FLAG  FIELDFL             - Local CSI sequence                         
*                                                                               
FIELDCS# EQU   10                  Max no. of parms                             
FIELDCSN DS    H                   Current no. of parms                         
FIELDCS  DS    (FIELDCS#)F         Parms                                        
FIELDC   EQU   FIELDCSF,*-FIELDCSF,C'X'                                         
         END                                                                    
*-                                                                              
GETFIELD PROC  (R2,LSR),FIELDWA                                                 
         CLEAR FIELDWA                                                          
*                                                                               
         L     R5,PWARLOC          Data ptr                                     
         LH    R4,PWARLEN          Remaining length                             
*                                                                               
GETFNLP  ST    R5,FIELDSTA         Start of field                               
GETFLP   IF    (R4,NP),GETFDONE    All done                                     
         LR    R15,R4                                                           
         CEIL  R15,256                                                          
         CLEAR R2                                                               
         LA    R1,@R5(R15)                                                      
         DEX   R15,'TRT @R5(0),ESCTBL'  Look for ESC (start of CSI)             
         SR    R1,R5                                                            
         LA    R5,@R1(R5)          Kick...                                      
         SR    R4,R1               ...ptrs                                      
*                                                                               
         IF    (R2,Z),GETFLP       No match, go back                            
         IF    (@R5,NE,$CSI),BEGIN  Not a CSI...                                
         LA    R5,@R5+1                                                         
         DECR  R4                                                               
         B     GETFLP              Go back                                      
         END                                                                    
*                                                                               
         IF    FIELDFST,GETFDONE   We have a field, scram                       
*-                                                                              
*-       Process control sequences.                                             
*-                                                                              
         CLEAR FIELDC                                                           
         LA    R5,@R5+2            Start of CSI                                 
         SH    R4,=H'2'                                                         
         IF    (POS,AND,(@R5,EQ,'<')),BEGIN  Local CSI seq...                   
         SET   FIELDFL             Remember that it's a local seq               
         LA    R5,@R5+1                                                         
         DECR  R4                                                               
         END                                                                    
*                                                                               
         LOOP  BEGIN                                                            
         DTB   (R5),(R4)           Pick up a numeric parameter                  
         LH    R2,FIELDCSN         Parameter number                             
         IF    (R2,LT,FIELDCS#),BEGIN                                           
         SLL   R2,2                                                             
         ST    R15,FIELDCS(R2)     Save parameter                               
         INCR  R15,FIELDCSN                                                     
         END                                                                    
*                                                                               
         LA    R5,@R1+1                                                         
         LR    R4,R0                                                            
         DECR  R4                                                               
         UNTIL (@R1,NE,';')                                                     
         END                                                                    
*                                                                               
         IF    FIELDFL,BEGIN       Local sequence...                            
         IF    (@R1,EQ,$RFC),BEGIN  Ending function code...                     
         MVC   PWAFUNC,FIELDCS+3   Save function code                           
         MVC   CPVMODE,FIELDCS+4+3  Save new editing mode                       
         L     R15,FIELDCS+8       Word separator character...                  
         IF    (R15,NZ),BEGIN      We have something...                         
         L     R1,CVEBCTBL                                                      
         LA    R1,@R1(R15)                                                      
         LC    R15,@R1             Word character in EBCDIC                     
         END                                                                    
         STC   R15,CPVWCHAR        Save new word separator char                 
         END                                                                    
*                                                                               
         ELSEIF (@R1,EQ,$RCP),BEGIN  Ending cursor position...                  
         MVC   CPVCURS,FIELDCS     Save ending cursor position                  
         IF    ^CPVFVTAM,BEGIN     Don't save alternate if VTAM...              
         MVC   CPVACURS,FIELDCS+8  Save alternate cursor position               
         END                                                                    
*                                                                               
         MVC   PWAFCURS,FIELDCS+16 Save FBLOCK cursor position                  
         MVC   PWALCURS,FIELDCS+24 Save LBLOCK cursor position                  
*                                                                               
         L     R15,CPVCURS         Tidy up alt cursor...                        
         IF    (R15,NE,CPVCMDR),'CLEAR CPVACURS'  No alternate                  
*                                                                               
         IF    PWAFESC,BEGIN       ESC emulation mode...                        
         IF    (CPVACURS,NZ),'MVC CPVCURS,CPVACURS'  Repos cursor               
         END                                                                    
         END                                                                    
*                                                                               
         ELSEIF (@R1,EQ,$RFP),BEGIN  Field cursor position...                   
         SET   FIELDFST            Start of a field                             
         MVC   PWACURS,FIELDCS     Cursor position                              
         END                                                                    
         END                                                                    
*                                                                               
         B     GETFNLP                                                          
*                                                                               
GETFDONE IF    ^FIELDFST,BEGIN     No field...                                  
         MVC   PWAFIELD,CVBLANKS                                                
         CLEAR PWAFLEN,PWACURS                                                  
         LH    R4,=H'-1'                                                        
         LA    R15,4               Nothing left                                 
         END                                                                    
*                                                                               
         ELSE  BEGIN               We have a field...                           
         CLEAR PWAFLEN                                                          
         MVC   PWAFIELD,CVBLANKS   Pre-set blank field                          
*                                                                               
         L     R1,FIELDSTA         Start of field                               
         LR    R15,R5                                                           
         SR    R15,R1              Length of field                              
         IF    POS,BEGIN           There is a field...                          
         CEIL  R15,L'PWAFIELD                                                   
         STH   R15,PWAFLEN                                                      
         MOVE  R15,PWAFIELD,@R1    Move in field                                
         END                                                                    
         CLEAR R15                 Set rc                                       
         END                                                                    
*                                                                               
GETFEXIT ST    R5,PWARLOC          Save new location...                         
         STH   R4,PWARLEN          ...and remaining length                      
         LM    R0,R1,PWACURS                                                    
*                                                                               
         PEND                                                                   
*                                                                               
ESCTBL   DC    XL256'00'                                                        
         ORG   ESCTBL+X'27'                                                     
         DC    X'27'                                                            
         ORG                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DISPTEXT -- Local routine to display text with rendition and                 
*    attribute buffers.                                                         
*                                                                               
*    On entry:                                                                  
*      R6 - PWA ptr                                                             
*      R1,R0 - text location, length                                            
*      R2 - rendition mapping buffer                                            
*      R3 - attribute mapping buffer                                            
*                                                                               
DISPWA   RECORD BEGIN                                                           
DISPFLAG FLAG                                                                   
         FLAG  DISFRULE            - We are in the ruling char set              
*                                                                               
DISPLEN  DS    H                   Remaining length                             
DISPXLEN DS    H                   Working length                               
DISPBLEN DS    H                   Working blank count                          
*                                                                               
DISPTPTR DS    A                   Working text ptr                             
DISPRPTR DS    A                   Working rendition ptr                        
DISPAPTR DS    A                   Working attribute ptr                        
*                                                                               
DISPTBL  DS    XL256               Working TRT table                            
         END                                                                    
*-                                                                              
DISPTEXT PROC  DISPWA                                                           
*                                                                               
         CLEAR DISPFLAG                                                         
         STH   R0,DISPLEN                                                       
         STM   R1,R3,DISPTPTR                                                   
*                                                                               
         MVI   DISPTBL,X'FF'                                                    
         MVC   DISPTBL+1(L'DISPTBL-1),DISPTBL  Initialize TRT table             
*                                                                               
         WHILE ('LTH R15,DISPLEN',POS),BEGIN  Process text...                   
*-                                                                              
*-       Set any special attributes.                                            
*-                                                                              
         L     R5,DISPAPTR         Attribute buffer                             
         IF    @R5.PWAAFBLK,'TSEG L:=A($SETFBLK),L"$SETFBLK'                    
         IF    @R5.PWAALBLK,'TSEG L:=A($SETLBLK),L"$SETLBLK'                    
*-                                                                              
*-       Find the next special attribute.                                       
*-                                                                              
         LH    R15,DISPLEN                                                      
         LA    R1,@R5(R15)                                                      
         LA    R3,@R5+1                                                         
         DECR  R15                                                              
         MVI   DISPTBL,0                                                        
         DTEX  R15,'TRT @R3(0),DISPTBL'  Look for an attribute                  
         MVI   DISPTBL,X'FF'       (Restore TRT table)                          
         SR    R1,R5               Length until attribute                       
         STH   R1,DISPXLEN                                                      
         LR    R3,R1                                                            
*-                                                                              
*-       Process the text up until the next special attribute.                  
*-         R5=text ptr, R4=rendition ptr, R3=length                             
*-                                                                              
         L     R5,DISPTPTR                                                      
         L     R4,DISPRPTR                                                      
         WHILE (R3,POS),BEGIN      Go through text...                           
*-                                                                              
*-       Set the rendition.                                                     
*-                                                                              
         LH    R15,PWADEFR                                                      
         TREND                                                                  
         IF    @R4.PWARSPEL,'TREND SPELL'  Misspelled word                      
         IF    @R4.PWARMARK,'TREND MARK'  Marked text                           
         IF    @R4.PWARBOLD,'TREND BOLD'  Bold                                  
         IF    @R4.PWARCOLM,'TREND COLM'  Column line past margin               
         IF    @R4.PWARCOLT,'TREND COLT'  Column line with tab                  
*                                                                               
         IF    @R4.PWARRULE,BEGIN  Ruling char set...                           
         IF    ^DISFRULE,BEGIN     Not currently in ruling set...               
         TSEG  L:=A($SO),L'$SO     Ruling char set                              
         SET   DISFRULE                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN               Normal char set...                           
         IF    DISFRULE,BEGIN      Not currently in normal set...               
         TSEG  L:=A($SI),L'$SI     Normal char set                              
         CLEAR DISFRULE                                                         
         END                                                                    
         END                                                                    
*                                                                               
         LC    R14,@R4             Get current rendition                        
         LA    R14,DISPTBL(R14)                                                 
         MVI   @R14,0                                                           
         LR    R15,R3                                                           
         LA    R1,@R4(R3)                                                       
         DEX   R15,'TRT @R4(0),DISPTBL'  Look for changed rendition             
         MVI   @R14,X'FF'          (Restore TRT table)                          
         SR    R1,R4               No. of chars that have this rend             
         LR    R2,R1                                                            
*-                                                                              
*-   Write the text (sending multiple blanks with the BCT sequence).            
*-                                                                              
DISPWLP  WHILE (R2,POS),BEGIN                                                   
         LA    R1,@R5(R2)                                                       
         L     R15,CVBLTBL                                                      
         LR    R14,R2                                                           
         DEX   R2,'TRT @R5(0),@R15'   Look for a non-blank                      
         LR    R2,R14                                                           
         SR    R1,R5               Blank count                                  
*                                                                               
         IF    POS,BEGIN           We have some blanks...                       
         STH   R1,DISPBLEN                                                      
         IF    (R1,GE,6),BEGIN     Mult blank sequence...                       
         TSEG  L:=A($LCSI),L'$LCSI                                              
         TNUM  LH:DISPBLEN                                                      
         TSEG  L:=A($BCT),L'$BCT                                                
         END                                                                    
         ELSE  BEGIN               Just write blanks...                         
         LR    R0,R1                                                            
         TSEG  CVBLANKS,(R0)                                                    
         END                                                                    
*                                                                               
         AH    R5,DISPBLEN         Kick text ptr                                
         AH    R4,DISPBLEN         Kick rendition ptr                           
         SH    R3,DISPBLEN         Decrement remaining length                   
         SH    R2,DISPBLEN         Decrement our length                         
         IF    NP,EXIT,DISPWLP     All done, scram                              
         END                                                                    
*                                                                               
         LA    R1,@R5(R2)                                                       
         L     R15,CVNBLTBL                                                     
         LR    R14,R2                                                           
         DEX   R2,'TRT @R5(0),@R15'   Look for a blank                          
         LR    R2,R14                                                           
         SR    R1,R5               No. of non-blanks                            
         LR    R0,R1                                                            
         STH   R0,DISPBLEN         Save count                                   
         TSEG  (R5),(R0)           Write non-blank text                         
*                                                                               
         AH    R5,DISPBLEN         Kick text ptr                                
         AH    R4,DISPBLEN         Kick rendition ptr                           
         SH    R3,DISPBLEN         Decrement remaining length                   
         SH    R2,DISPBLEN         Decrement our length                         
         END                                                                    
*                                                                               
         END                                                                    
*                                                                               
         L     R15,DISPTPTR                                                     
         AH    R15,DISPXLEN                                                     
         ST    R15,DISPTPTR        Kick text ptr                                
*                                                                               
         L     R15,DISPRPTR                                                     
         AH    R15,DISPXLEN                                                     
         ST    R15,DISPRPTR        Kick rendition ptr                           
*                                                                               
         L     R15,DISPAPTR                                                     
         AH    R15,DISPXLEN                                                     
         ST    R15,DISPAPTR        Kick attribute ptr                           
*                                                                               
         LH    R15,DISPLEN                                                      
         SH    R15,DISPXLEN                                                     
         STH   R15,DISPLEN         Decrement remaining length                   
         END                                                                    
*-                                                                              
*-       Switch out of ruling character set (if necessary).                     
*-                                                                              
         IF    DISFRULE,BEGIN      We are in the ruling charset...              
         TSEG  L:=A($SI),L'$SI                                                  
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DELTEXT -- Local routine to seg the delete characters                        
*    sequence.  It is used to delete old text from the page                     
*    when the page is only being partially rewritten.                           
*                                                                               
*    On entry:                                                                  
*      R15 - no. of chars to delete                                             
*                                                                               
DELTEXT  PROC                                                                   
         LTR   R2,R15              No. of chars to delete                       
         IF    POS,BEGIN                                                        
         TSEG  $LCSI                                                            
         TNUM  (R2)                                                             
         TSEG  $BCT                Delete chars                                 
         END                                                                    
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
***                                                                             
***  Model terminal control sequences.                                          
***                                                                             
$CSI     EQU   *,2,C'X'            Control sequence prefix                      
$LCSI    DC    X'27AD4C'           Local control sequence introducer            
$CS      DC    X'27AD8627ADF2D1'   Home & clear screen                          
$CSVTAM  DC    X'27AD86'           Home cursor (and that's all!)                
$CREM    DC    X'27ADD1'           Clear from cursor to end screen              
$BCT     DC    C'Z'                Blank count                                  
$FPROT   DC    X'27AD4CF1C6'       Protected field                              
$FPROTS  DC    X'27AD4CF15EF1F1C6' Protected skip field                         
$FUNPROT DC    X'27AD4CC6'         Unprotected field                            
$FEND    DC    X'27AD4CC5'         End of field                                 
$SETRULE DC    X'275DF2'           Set ruling alternate char set                
$SO      DC    X'0E'               Shift out to alternate char set              
$SI      DC    X'0F'               Shift in to normal char set                  
*                                                                               
$SETTAB  DC    X'27AD4CE6'         Set a tab here                               
$SETTRIG DC    X'27AD4CC9'         Set a trigger point here                     
$SETTROW DC    X'27AD4CC7'         Set a trigger row                            
$SETFBLK DC    X'27AD4C81'         Set an FBLOCK point                          
$SETLBLK DC    X'27AD4C82'         Set an LBLOCK point                          
$SETHOME DC    X'27AD4CC8'         Set a home point                             
$ALTHOME DC    X'27AD4CC1'         Set an alternate home point                  
$SETTOP  DC    X'27AD4CE3'         Set top point                                
$SETBOT  DC    X'27AD4CC2'         Set bottom point                             
$CLRMSG  DC    X'27AD4CF5D4'       Clear message area                           
$SETMSG  DC    X'27AD4CD4'         Set message area                             
*                                                                               
$CLRTABS DC    X'27AD4CF5E6'       Clear all tabs                               
$CLRTRIG DC    X'27AD4CF5C9'       Clear all trigger points                     
$CLRTROW DC    X'27AD4CF5C7'       Clear all trigger rows                       
$CLRBLK  DC    X'27AD4C81'         Clear marked block points                    
$CLRFMT  EQU   $CLRTABS,*-$CLRTABS,C'X'                                         
*                                                                               
$SEM     DC    C'S'                Set editing mode                             
$RFC     DC    C'V'                Report ending function code                  
$RCP     DC    C'C'                Report ending cursor position                
$RFP     DC    C'R'                Report cursor position                       
*                                                                               
         DROP  PWA                                                              
*                                                                               
         VLTORG                                                                 
         END   .                                                                
