PROT     TITLE 'WYLBUR''s Security System Interface Commands'                   
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         SPACE 2                                                                
         HIBAL                                                                  
*                                                                               
         REGS  FSR,,,,,,IOWAR,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR              
*                                                                               
WYLPROT  CSECT                                                                  
PROT     IDENT 2025                11:49:30 01/25/02  (SLP)                     
         SPACE 2                                                                
         SYSDEFN ,                 Define installation params                   
         GBLC  &INSTALN            Installation name (see SYSDEFN)              
         GBLC  &PUBACCT                                                         
         EJECT                                                                  
         COPY  RTNCODES                                                         
         EJECT                                                                  
*                                                                               
         PUSH  DSECTS                                                           
         COPY  CONTROL                                                          
         EJECT                                                                  
IOWA     IOWA  DSECT                                                            
         TITLE 'DSECTS'                                                         
         CVT   DSECT=YES                                                        
         EJECT                                                                  
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         EJECT                                                                  
USERCVT  RECORD 'USERCVT'                                                       
         EJECT                                                                  
         IKJTCB DSECT=YES                                                       
         IHAASCB ,                 ADDRESS SPACE CONTROL BLOCK                  
         IHAASXB ,                 ADDRESS SPACE EXTENSTION                     
         IHAACEE ,                 RACF ACCESSOR CONTROL ELEMEMENT              
*                                                                               
         POP   DSECTS                                                           
*                                                                               
         AIF   ('&INSTALN' NE 'STANFORD').NOTSTAN                               
         TITLE 'Stanford Access Control System Interface'                       
PROTWA   RECORD  BEGIN                                                          
*-                                                                              
*-       protect work area                                                      
*-                                                                              
*-       flag definitions and storage areas for set and show                    
*-         protect commands.                                                    
*-                                                                              
PRFLGS1  FLAG  ,                   Target flags (set prot)                      
         FLAG  FTARGUSR            User specified in target                     
         FLAG  FTARGGRP            Group                                        
         FLAG  FTARGCOM              community                                  
         FLAG  FTARGPUB              public                                     
         FLAG  FTARGMSK              filemask                                   
         FLAG  (FTARGCPM,FTARGCOM+FTARGPUB+FTARGMSK,NZ)                         
         FLAG  (FTARGANY,FTARGCPM+FTARGUSR+FTARGGRP,NZ)                         
*                                                                               
PRFLGS2  FLAG  FSETCMD             Set protect command                          
         FLAG  (FSHOCMD,FSETCMD,OFF)     sho protect command                    
         FLAG  FPRIVRES            'reset' specified  (set prot)                
         FLAG  FNOIBM              'noibm'                                      
         FLAG  FUNPROT             'unprot'                                     
         FLAG  FACCLOG             Log option specified                         
         FLAG  (FDSGLOBL,FPRIVRES+FNOIBM+FUNPROT+FACCLOG,NZ)                    
         FLAG  FREMPER             permit removed for 'none'                    
         FLAG  FPRIVSET            Some access priv specified (set)             
         FLAG  FGRPPERM            Group-level permit                           
*                                                                               
PRFLGS3  FLAG  ,                   Warning message flags                        
         FLAG  FPUBOVER              overriding public permit                   
         FLAG  FCOMOVER              overriding comm permit                     
         FLAG  FGRPOVER              overriding group permit                    
         FLAG  FNOROOM               permit list full                           
*                                                                               
PRFLGS4  FLAG  ,                                                                
         FLAG  FSETLIS             'list' option   (set)                        
         FLAG  FSHOLINE            >=1 response line written  (sho)             
         FLAG  FSHOHEX             'hex'  (sho or set/list)                     
         FLAG  FPSEGD              priv term seg'd on current line              
         FLAG  FACCESOK            Access ok  (set & show)                      
         FLAG  FPERMSET            New permit has been set (set)                
*                                                                               
PRFLGS5  FLAG  ,                                                                
         FLAG  FLOGALL             Log=all  specified (set)                     
         FLAG  FLOGWRIT            Log=write                                    
         FLAG  FLOGPROT            Log=prot                                     
         FLAG  FLOGNONE            Log=none                                     
*                                                                               
PFFLGS6  FLAG  ,                   <object> flags                               
         FLAG  FOBJVOP             Volume-owner permit                          
         FLAG  FOBJTAPE            Tape permit                                  
         FLAG  FOBJDISK            Disk volume permit                           
         FLAG  FOBJACCT            Account-level permit                         
         FLAG  (FOBJDSN,FOBJVOP+FOBJTAPE+FOBJDISK+FOBJACCT,Z) ds per            
*                                                                               
         FLAG  (FDSOWNER,DSNWAF1.DSNFMYDS,NZ)                                   
         FLAG  (FDSNWYL,DSNWAF1.DSNFSTD,NZ)                                     
         FLAG  (FSYSPR,USERKIFL.KWRIFSPR,NZ)                                    
         FLAG  (FACCTPR,USERKIFL.KWRIFAPR,NZ)                                   
         SPACE 2                                                                
TARGACCT DS    0CL5                Target acct from set cmd                     
TARGUSER DS    CL3                                                              
TARGGRP  DS    CL2                                                              
TARGCOM  DS    X                   Targacct user comm                           
*                                                                               
DSNACCT  DS    0CL5                Ds owner acct (from dsname)                  
DSNUSER  DS    CL3                                                              
DSNGRP   DS    CL2                                                              
DSCOM    DS    X                                                                
*                                                                               
USERACCT DS    0CL7                Current user                                 
USERUSER DS    CL3                                                              
USERGRP  DS    CL2                                                              
USERSBGP DS    CL2                 Subgroup                                     
USERKIFL DS    X                                                                
USERKAFL DS    X                                                                
USERCOM  DS    X                                                                
*                                                                               
PRIVSAVE DS    X                   Access priv scanned from set cmd             
OTESPRIV DS    X                   Strongest priv granted or withdrawn          
OACCPRIV DS    X                   user's existing access to ds                 
PERMWK   DS    CL5                 Work area for unscrambled permit             
*                                                                               
HEXLINE  DS    CL50                Area for sho prot hex                        
         END                                                                    
*-                                                                              
*-       Formerly in ACS.MACLIB as member ACSDEFN.                              
*-          10/90, Niz                                                          
*-                                                                              
*                                                                               
*        ACSDEFN                                                                
*              SCIP ACCESS CONTROL SYSTEM                                       
*              MISCELLANEOUS DEFINITIONS                                        
*              J. LIPKIS, 9/76. LAST MODIFIED 10/77                             
*                                                                               
*  PRIMITIVE ACCESS PRIVILEGE DEFINITIONS                                       
PREAD    EQU   X'80'               READ ACCESS                                  
PWRITNK  EQU   X'40'               KEYWORD-NOT-REQUIRED FLAG                    
PWRITE   EQU   X'20'               WRITE ACCESS (KW REQ UNLESS PWRITNK)         
PAPPEND  EQU   X'10'               APPEND ACCESS                                
PEXEC    EQU   X'08'               EXECUTE ACCESS                               
PEXTEND  EQU   X'04'               EXTEND ACCESS                                
PSCR     EQU   X'02'               SCRATCH & RENAME ACCESS                      
*                                                                               
*  EXTERNAL ACCESS CATEGORIES                                                   
ACS$$R   EQU   PREAD+PEXEC,,C'N'   'R' ACCESS PRIV                              
ACS$$K   EQU   ACS$$R+PWRITE+PAPPEND+PSCR,,C'N'   'K' ACCESS PRIV               
ACS$$W   EQU   ACS$$K+PWRITNK,,C'N'  'W' ACCESS PRIV                            
ACS$$U   EQU   ACS$$R+PWRITE+PAPPEND+PWRITNK,,C'N' 'U' ACCESS PRIV              
ACS$$E   EQU   ACS$$W+PEXTEND,,C'N'  'E' ACCESS PRIV                            
ACS$$D   EQU   PSCR+PWRITNK,,C'N'  'D' ACCESS PRIV                              
ACS$$N   EQU   0,,C'N'             'N' ACCESS PRIV                              
*                                                                               
*  ACWOPER - FLAG DEFINITIONS                                                   
$ACSWRIT EQU   PWRITE+PWRITNK      WRITE OPERATION                              
$ACSREAD EQU   PREAD               READ OPERATION                               
$ACSSCRN EQU   PSCR+PWRITNK        SCRATCH OPER                                 
$ACSEXEC EQU   PEXEC               EXECUTE                                      
$ACSEXTD EQU   PEXTEND             EXTEND                                       
$ACSAPND EQU   PAPPEND             APPEND                                       
*                                                                               
*  ACWMODE - FLAG DEFINITIONS                                                   
MINQ     EQU   X'80'               GENERAL INQUIRY CALL                         
MOPEN    EQU   X'40'               OPEN/EOV CALL                                
MSCRATCH EQU   X'20'               SCRATCH/RENAME CALL                          
MOBDSCB  EQU   X'10'               F1 DSCB OBTAINED BY CALLER                   
MCLR     EQU   X'08'               FORCE CLEAR REQUESTED                        
MNEW     EQU   X'04'               NEW (NON-EXISTENT) DATASET                   
MLOG     EQU   X'02'               LOG ACCESS ATTEMPT                           
MALLOC   EQU   X'01'               ALLOCATION (DADSM) CALL                      
*                                                                               
*  DS1ACSFL - FLAG DEFINITIONS                                                  
DS1NOLD  EQU   X'80'               DSCB PROCESSED BY A.C.S.                     
DS1UPROT EQU   X'40'               ACCESS STATUS CHANGED BY USER                
DS1EXTD  EQU   X'20'               EXTENDED PERMITS SET                         
DS1LOG#1 EQU   X'10'               ACCESS LOGGING FLAGS                         
DS1LOG#2 EQU   X'08'                                                            
DS1RESVD EQU   X'04'               RESERVED                                     
DS1CONV1 EQU   X'02'               ALLOC'D OR CONVERTED SINCE 7/76              
DS1WYLSP EQU   X'01'               WYLBUR SPACE ACCTG FLAG                      
*                                                                               
DS1LOGAL EQU   DS1LOG#1+DS1LOG#2   ALWAYS LOG ACCESS TO DS                      
DS1LOGWR EQU   DS1LOG#1            LOG WRITE ACCESS & SET PROT ONLY             
DS1LOGPR EQU   DS1LOG#2            LOG SET PROT CMDS ONLY                       
*                                                                               
*                                                                               
         SPACE 6                                                                
         COPY  UTYPDEFN                                                         
         EJECT                                                                  
WYLPROT  CSECT                                                                  
         EXTRN WYLVOL                                                           
         SPACE 2                                                                
         MACRO                                                                  
&L       SETPERM  &NEW,&OLDLOC     Link to setperm routine                      
&L      $LA    R1,&NEW                                                          
        $LA    R2,&OLDLOC                                                       
         LCALL SETPERM                                                          
         MEND                                                                   
         SPACE 2                                                                
         MACRO                                                                  
&L       SUBTEST  &A,&B,&REG=R2                                                 
.*  BYTE SUBSET test - determines whether the set of one bits                   
.*   IN &A is a subset of that in &b.                                           
.*   HIBAL COND codes 'sub' or 'nsub' are used to test the result.              
         LCLC  &LOC                                                             
&L      $LC    &REG,&A                                                          
         IF    (&REG,NZ),BEGIN     &a=0 => subset, cannot use tm                
&LOC     SETC  '&B'                                                             
         AIF   ('&B' NE '*').NSTAR                                              
&LOC     SETC  'PRIVSAVE'          Default for &b                               
.NSTAR   EX    &REG,'TM  &LOC,*-*'                                              
         END                                                                    
         ELSE  'TM  *+1,255'       Set cc=ones for &a=0 case                    
         MEND                                                                   
*                                                                               
         DEFCC (SUB),1                                                          
         DEFCC (NSUB),14                                                        
*NOGEN                                                                          
         TITLE 'SET and SHOW PROTECT Commands'                                  
*box                                                                            
*                                                                               
*  PROTECT -- SET/SHOW PROTECT commands.                                        
*                                                                               
PROTECT  GENTER                                                                 
         TSEG  'SCIP security system SET/SHOW PROTECT'                          
         ABORT ' commands are no longer supported.'                             
*                                                                               
         QLTORG                                                                 
         TITLE 'Access Interface && UAL Setup  (for DISK)'                      
*box                                                                            
*                                                                               
*  access - Routine to validate data set access.                                
*           Called by DOPEN (DISK) for use, save, scratch,                      
*             copy from, exec from, etc.                                        
*                                                                               
*             Input - iowa (@r6) containing dscb from obtain                    
*                                 (unless new ds)                               
*                                                                               
*             Returns -                                                         
*                R15 -  0  access ok                                            
*                      72  access violation or password needed                  
*                R0 -   0  no password needed or wanted                         
*                       4  issue password prompt                                
*                                                                               
         SPACE 2                                                                
ACCESS   XENTER                                                                 
         USING IOWA,R6             Entry assumption                             
*                                                                               
         IF    CVFNORACF,ACSSTANF  Skip to Stanford security                    
*-                                                                              
*-       Check for a RACF identified user.  If no attempt has been              
*-       made thus far, identify the user to RACF.                              
*-                                                                              
         IF    (CPRACF1,Z),'ACALL CRTACEE'   Identify user to RACF              
*                                                                               
         IF    ^CPRACDEF,ACSSTANF  Abort if not RACF defined user               
         LA    R0,X'02'            Set read access                              
         LCR   R0,R0               Seet for LOG=NONE                            
         ACALL RACFCHK             Check RACF status                            
         IF    (R15,GE,8),ACSSTANF Exit for non-racf protected dsn              
         IF    (DSNWAF1.DSNFSTD*DSNFMYDS),BEGIN                                 
         MVC   @R13(3),DSNAME+7    SET "UUU" FROM DATA SET NAME                 
         MVC   @R13+3(2),DSNAME+4  SET "GG" FROM DATA SET NAME                  
         IF    (CPSACCT,NE,@R13),BEGIN NON-OWNER USE GS$WYL ACEE                
         ACALL ACEECLR             CLEAR SUBTASK ACEE POINTER                   
         END   ,                                                                
         B     ACSOK               User's own access, (or MAIL)                 
         END   ,                                                                
         LA    R0,X'02'            Set read access                              
         ACALL RACFCHK             Check RACF status                            
         IF    (R15,EQ,4),ACS8     RACF-protected, access prevented             
         IF    (DSNWAF2.DSNFWRT+DSNFSCR+DSNFALLO,Z),ACSOK                       
         LA    R0,X'80'            SET ALTER ACCESS                             
         LCR   R0,R0               SET FOR LOG=NONE                             
         ACALL RACFCHK             CHECK RACF STATUS FOR ALTER                  
         IF    (R15,EQ,0),ACSOK    OK - LET HIM GO                              
         ACALL ACEECLR             PASSWORD ACCESS REQUIRES GS$WYL              
         B     ACSASK              NO - PROMPT FOR KEYWORD                      
ACSSTANF LABEL ,                   CONTINUE WITH STANFORD SECURITY              
         EJECT                                                                  
*-                                                                              
*-       Stanford security system access checking.                              
*-                                                                              
         TM    F2,DSNFALLO+DSNFWRT+DSNFSCR  scratch and rewrite?                
         BZ    ACSREAD             Br if only a read                            
         TM    F2,DSNFSCR          Create new?                                  
         BZ    ACSMAKE             Yes (save cmd)                               
M1       EQU   MEMBER,1,C'C'                                                    
         IF  ((M1,EQ,' '),OR,(M1,EQ,X'00'),OR,(M1,EQ,X'FF')),ACSSCR             
*                                                                               
ACSMAKE  MVI   ACWOPER,$ACSWRIT    Treat as a write                             
         B     ACSSTO              - Go on                                      
*                                                                               
ACSREAD  MVI   ACWOPER,$ACSREAD    Read in data set                             
         B     ACSSTO              - Go on                                      
*                                                                               
ACSSCR   MVI   ACWOPER,$ACSSCRN    Set scratch function                         
*       *B     ACSSTO              - Go on                                      
*                                                                               
ACSSTO   MVI   ACWMODE,MINQ+MOBDSCB  Assume old ds                              
         CLI   SCRRET,0            Did obtain go ok?                            
         BE    ACSOBT              Yes,branch                                   
         MVI   ACWMODE,MINQ+MNEW   No DSCB -- it's new                          
ACSOBT   LA    R1,UALAUTH          Addr of signed on user field                 
         ST    R1,ACSPACCT         Save user address                            
         LA    R1,DS1FMTID                                                      
         ST    R1,ACSPDSCB         Refresh dscb pointer                         
**             build ual in case of open                                        
         LA    R1,ACSUAL           Point at ual                                 
         ICM   R1,8,=XL1'20'       Flag it as there                             
         ST    R1,JFCBVOLS+(4-1)*6 Save it in its place                         
         MVC   UALAUTH(5),CPSACCT  Move in uuugg                                
         IF    (CPSACCT,Z),'MVC UALAUTH(5),=C"&PUBACCT"'                        
         MVC   UALAUTH+5(2),CPSPROJ  Project-id                                 
         CLEAR UALKIAF             Kifl & kafl are zero                         
         IF    F1.DSNFSTD,BEGIN    Fill in ds owner if std                      
         MVC   UALKEY(DSNXUL-1),DSNXU+DSNAME  uuu                               
         MVC   UALKEY+DSNXUL-1(DSNXGL-1),DSNXG+DSNAME  gg                       
         END                                                                    
         ELSE  'MVC UALKEY,=C"$$$$$"'  Owner of non-std ds                      
         IF    DSNFMAIL+DSNFSML,'MVC UALAUTH(5),UALKEY'  Special                
         MVC   UALKIAF,CPSKIFL     Move in kifl & kafl flags                    
ACSUBLT  CLEAR R1                  Zero                                         
         ST    R1,UALODSCB         Make sure its zero                           
         CLI   SCRRET,0            Did we get a dscb?                           
         BNE   ACSCAL              Br if not                                    
         TM    CPLFLG2,CPFSCRTC    Is this a replace operation?                 
         BZ    ACSCAL              Br if not                                    
         MVC   DSCBSAVE(DS1SIZE),DS1FMTID  Save dscb                            
         LA    R1,DSCBSAVE         Point at saved dscb w/o dsn                  
         ST    R1,UALODSCB         Save address                                 
ACSCAL   IF    DSNWAF1.DSNFACCS,ACSOK  Aok if access chkd already               
         LA    R15,0               Zero                                         
*-                                                                              
*-       Dummy "SCIP security system" logic.                                    
*-                                                                              
         CLEAR R15                 Assume OK for read                           
         IF    DSNWAF2.DSNFWRT+DSNFSCR+DSNFALLO,'LA R15,8'  Denied              
*-                                                                              
         B     *+4(R15)            Br to respond to reply                       
         B     ACS0                0:  access is ok                             
         B     ACS4                4:  access is ok with password               
         B     ACS8                8:  accesss not permitted                    
         B     ACS12               12: logic problem (abend)                    
*                                                                               
ACS0     CLEAR UALKEY              Show no password prompt                      
         TM    F2,DSNFALLO+DSNFWRT+DSNFSCR  save or scratch?                    
         BZ    ACSOK               No, no verify required then                  
         TM    F1,DSNFMYDS         Is is my own ds?                             
         BO    ACSOK               br if so don't even ask                      
         B     ACSOKC              Must get verification                        
*                                                                               
ACS4     IF    (CVFINIT,OR,CPFRCVY),ACS8  rcvy, no prompt                       
         TM    F1,DSNFSTD          Is it std dsn?                               
         BZ    ACSNSTD             No, branch                                   
         CLC   UALKEY(L'CPSACCT),CPSACCT  ds owner?                             
         BE    ACSOKC              Yes, ask if ok                               
         TM    F1,DSNFMYDS         Must we ask for kw?                          
         BO    ACSOK               No, branch                                   
         B     ACSASK                                                           
ACSNSTD  IF    ^CPSFSPR,ACS8       No access                                    
ACSOKC   SET   CPFKOK              Set ok request please                        
*                                                                               
ACSASK   LA    R15,RTNNOACS        Set no access                                
         LA    R0,4                Set key prompt rqd                           
         ST    R0,RECSIZE          Save indicator                               
         B     ACSRTN              Go return                                    
*                                                                               
ACSOK    CLEAR R15                 Zero is ok                                   
         B     ACSRTN              Go return                                    
*                                                                               
ACSABT   LA    R15,ABRTCODE        Set abort request                            
         B     ACSRTN              Return with code                             
*                                                                               
ACS8     LA    R15,RTNNOACS        Set no access allowed                        
         CLEAR R0                  Zero indicate no key                         
         ST    R0,RECSIZE          Save indicator                               
*                                                                               
ACSRTN   XEXIT ,,LTR                                                            
         DROP  BR,IOWA                                                          
         EJECT ,                                                                
*box                                                                            
*                                                                               
* Identify user to RACF and create the ACEE entry in the user's                 
* command page.                                                                 
*                                                                               
         SPACE ,                                                                
CRTACEE  PROC  ,                                                                
         USING IOWA,IOWAR          Addressability to work area                  
         CLEAR KWR                 Zero keyword record                          
         MVC   KWRUSER,CPSUSER       Set signed on user                         
         MVC   KWRGRP,CPSGRP           And signed on group                      
         KREAD KWR                       Read keyword record                    
         IF    KWRIFL.KWRIFVAL,BEGIN   Valid keyword record                     
         MVI   RACFID,06           Set length of racf id                        
         MVC   RACFID+1(2),WAGRP     Set group portion                          
         MVI   RACFID+3,C'$'           Set $ seperator                          
         MVC   RACFID+4(3),WAUSER        Set user portion                       
         MVI   RACFPSWD,08                 Set RACF password length             
         MVC   RACFPSWD+1(8),KWRPASS         And password from KWR              
         END   ELSE,BEGIN          Error obtaining keyword record               
         MVC   RACFID(7),RACNUSR   Set default user id                          
         MVC   RACFPSWD(9),RACNPAS Set default password                         
         END                                                                    
         SPACE ,                                                                
         LA    R1,RACFPSWD+1       Point to user's password                     
         LCALL RACPASCK            Convert password to RACF format              
         SPACE ,                                                                
         LCALL RACFINIT            Identify user to RACF                        
         IF    NZ,BEGIN            Process error return codes                   
         STC   R15,CPRACF1+2       Save initial RACINIT code                    
         IF    (R15,EQ,4),BEGIN    User has no profile                          
         MVC   RACFID(7),RACNUSR   Set RACF default user                        
         MVC   RACFPSWD(9),RACNPAS Set RACF default user password               
         LCALL RACFINIT            Identify default user to RACF                
         END   ,                                                                
         ELSEIF (R15,LE,12),BEGIN  RACF password sync error                     
         LCALL RACNPASS            Reset user's RACF password                   
         LCALL RACFINIT            Identify user to RACF                        
         END   ,                                                                
         END   ,                                                                
         LT    R2,CPACEE           Set address of RACF ACEE control             
         IF    NZ,BEGIN            Check only if one created                    
         WITH  (ACEE,R2),BEGIN     Adressabilitiy to ACEE                       
         IF    ACEEFLG1.ACEEOPER,BEGIN Operations attribute set                 
         MODESET MF=(E,MODSETZ)    Enter key zero for ACEE update               
         CLEAR ACEEFLG1.ACEEOPER   Clear OPERATIONS attribute                   
         MODESET MF=(E,MODSETP)    Resume problem key                           
         END   ,                                                                
         END   ,                                                                
         END   ,                                                                
         PEND  ,                                                                
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  RACINIT call to identify user to RACF                                        
*                                                                               
RACFINIT PROC  ,                   Identify user to RACF                        
*                                                                               
         WAITOFF X                 Enter subtask                                
         MVC   RACINIT(RACIMODL),RACIMOD     Set parameter list                 
         RACINIT USERID=RACFID,PASSWRD=RACFPSWD,PASSCHK=YES,           X        
               RELEASE=1.7,                                            X        
               LOG=ALL,ENVIR=CREATE,ACEE=CPACEE,MF=(E,RACINIT)                  
         WAITON X                  Enter main task                              
*                                                                               
         STC   R15,CPRACF1+3       Save return code from racinit call           
         IF    (R15,Z),BEGIN                                                    
         SET   CPRACDEF            SET USER ACEE CREATED                        
         LCALL RACDSOP             DISABLE ANY OPERATIONS ATTRIBUTE             
         END   ,                                                                
         PEND  ,                   Return with r15 set                          
         DROP  IOWA,BR                                                          
         EJECT ,                                                                
*box                                                                            
*                                                                               
* Check user's access to a RACF protected data set.                             
*                                                                               
*        Returns    0  RACF protected, allow access                             
*                   4  RACF protected, no access allowed                        
*                   8  Resource not controlled by RACF                          
*                                                                               
         SPACE ,                                                                
RACFCHK  PROC  ,                                                                
         USING IOWA,IOWAR          Addressability to work area                  
         LR    R2,R0               SAVE ACCESS CODE AND LOG                     
         L     R3,CPACEE           SET USER'S ACCESS CONTROL ELEMENT            
         MVC   RACINIT(RACIMODL),RACCMOD                                        
         WAITOFF X,ABEND=RCHKABE   ENTER SUBTASKING MODE                        
         VCALL AMODE24             RACHECK NEEDS 24-BIT AMODE                   
         IF    (R2,P),BEGIN                                                     
*GEN                                                                            
         RACHECK ENTITY=(DSNAME),CLASS=RACLASS,RELEASE=1.7,ATTR=(R2),  X        
               DSTYPE=M,ACEE=(R3),RACFIND=NO,GENERIC=ASIS,             X        
               MF=(E,RACINIT)                                                   
*NOGEN                                                                          
         END   ELSE,BEGIN                                                       
         LCR   R2,R2               SET ACCESS DESIRED                           
*GEN                                                                            
         RACHECK ENTITY=(DSNAME),CLASS=RACLASS,RELEASE=1.7,ATTR=(R2),  X        
               DSTYPE=M,ACEE=(R3),RACFIND=NO,GENERIC=ASIS,             X        
               LOG=NONE,MF=(E,RACINIT)                                          
*NOGEN                                                                          
         END   ,                                                                
         LR    R2,R15              SAVE RETURN CODE FROM RACHECK                
         LR    R3,R0                 AND REASOND CODE ALSO                      
         VCALL AMODE31                 RETURN TO 31 BIT ADDRESSING              
         WAITON X                  RESUME MOTHER TASK                           
         LA    R15,8               ASSUME NOT RACF PROTECTED                    
         IF    (R2,GE,12),RACFCHKX EXIT WITH NON RACF PROTECTION                
         IF    (R2,EQ,4),RACFCHKX  EXIT WITH NON RACF PROTECTION                
         LA    R15,4               ASSUME RACF NO ACCESS                        
         IF    (R2,EQ,8),RACFCHKX  EXIT FOR RACF NO ACCESS                      
         CLEAR R15                 SET RACF ALLOWED ACCESS                      
*-                                                                              
*-       RACHECK abend handler.                                                 
*-                                                                              
         IF    (R15,NE,R15),BEGIN  See branch label below...                    
RCHKABE  LA    R15,8               Resource not controlled by RACF              
         END                                                                    
*                                                                               
RACFCHKX PEND  ,                                                                
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Local routine to modify the user's existing RACF password                    
*  and password change date.  The password pointed to by                        
*  IOWA field RACFPSWD is passed to the RACF manager to replace                 
*  the existing RACF password.                                                  
*                                                                               
         SPACE ,                                                                
RACNPASS PROC  ,                   RESET EXISTING RACF PASSWORD                 
         USING IOWA,IOWAR          ADDRESSABILTY TO WORK AREA                   
         TIME  DEC                 RETURN SYSTEM DATE IN R1                     
         ST3   R1,RACFPDAT         SAVE FOR PASSWORD CHANGE DATE                
         MVC   ICHELST(32),ICHIPRM SET ICHEINTY PARAMETER MODEL                 
         MVC   ICHSETP(20),ICHAPRM SET FIRST ICHEACTN MODEL                     
         MVC   ICHSETPD(20),ICHAPRM  SET SECOND ICHEACTN MODEL                  
         ICHEACTN FIELD='PASSWORD',FLDATA=(8,RACFPSWD+1),              X        
               MF=(E,ICHSETP)                                                   
         ICHEACTN FIELD='PASSDATE',FLDATA=(3,RACFPDAT),                X        
               MF=(E,ICHSETPD)                                                  
         WAITOFF X                 ENTER SUBTASKING MODE                        
         ICHEINTY ALTER,TYPE='USR',ENTRY=RACFID,                       X        
               OPTIONS=(ACTION,FLDEF),                                 X        
               ACTIONS=(ICHSETP,ICHSETPD),MF=(E,ICHELST)                        
         WAITON X                  RESUME MOTHER TASK                           
         PEND  ,                   RETURN TO CALLER                             
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Remove generic profile on scratch.                                           
*                                                                               
*    Called in DISK for the SCRATCH command.                                    
*                                                                               
         SPACE ,                                                                
RACGREM  XPROC ,                   ENTER AND WORK AREA POINTER                  
         IF    (DSNON6,EQ,DSNCATV),BEGIN  Correctly cataloged...                
         IF    DSNFRETAIN,EXIT     Don't do this if RETAIN is set               
         IF    ^F2.DSNFSTD,EXIT    DON'T DO IF NON-STANDARD NAME                
         IF    ('.MAIL ',EQ,DSNAME+10),EXIT      NOT FOR MAIL                   
         IF    ('.ACTIVE ',EQ,DSNAME+10),EXIT    NOT FOR ACTIVES                
         LA    R2,44               SET MAXIMUM DSN LENGTH                       
         LA    R3,DSNAME+43        POINT TO LAST BYTE                           
         WHILE (@R3,EQ,' '),BEGIN  SCAN BACKWARDS TILL NON-BLANK                
         S     R2,=A(1)            Decrement length                             
         S     R3,=A(1)            Decrement address                            
         END   ,                   R2 Contains length on termination            
         SPACE ,                                                                
         MVC   GREMPRF(7),DSNAME+4     Set "GG.UUU."                            
         MVI   GREMPRF+2,C'$'          Set "GG$UUU."                            
         MVC   GREMPRF+7(4),DSNAME     Set "GG$UUU.WYL."                        
         STC   R2,GREMLIN              Set Profile length                       
         DEX   R2,'MVC GREMPRF+11(0),DSNAME+11'  Complete profile               
         MVC   ICHELST(ICHDPRFL),ICHDPRF                                        
         WAITOFF X                 ENTER SUBTASKING MODE                        
*GEN                                                                            
         LA    R2,GREMLIN          ADDRESS OF DATA SET PROFILE                  
         ICHEINTY DELETE,ENTRY=(R2),                                   X        
               MF=(E,ICHELST)                                                   
*NOGEN                                                                          
         WAITON X                  RESUME MAIN TASK                             
         END                                                                    
         SPACE ,                                                                
         CLEAR R15                 A-ok                                         
         DROP  IOWAR               RELEASE I/O WORK AREA                        
         PEND                                                                   
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Release RACF ACEE entry if one has been acquired for                         
*   security processing.  Called during logoff processing.                      
*                                                                               
PROTFREE XPROC ,                   Release RACF ACEE entry                      
         LT    R2,CPACEE           Set address of ACEE entry                    
         IF    NZ,BEGIN            RACF ACEE entry has been built               
         MVI   DSNWAF2,DSNFSIMP    Set for simple dopen/dclose                  
         DOPEN ,                   Request simple iowa for release              
         IF    Z,BEGIN             ??WHAT TO DO WITH BAD RETURN??               
         L     IOWAR,CPIOWAP       Set address of our IOWA                      
         USING IOWA,IOWAR          Addressability to IOWA                       
*                                                                               
         WAITOFF X                 Enter subtask mode                           
         L     R1,=A(RACIMOD)      Address of model racinit list                
         MVC   RACINIT(RACIMODL),@R1   Set model parameter list                 
         RACINIT ENVIR=DELETE,ACEE=CPACEE,MF=(E,RACINIT)                        
         WAITON X                  Enter normal mode                            
*                                                                               
         VCALL EXTCLOSE            Release IOWA                                 
         DROP  IOWAR               Release IOWA addressability                  
         END                                                                    
*                                                                               
         CLEAR CPACEE              Clear ACEE pointer in user's CP              
         END                                                                    
*                                                                               
         CLEAR CPRACF1             Clear RACF CP flags                          
         CLEAR R15                 Zero return code from protfree               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
* Return security protection system in effect                                   
*                                                                               
*   Return code:  0  - Data set is under RACF protection                        
*                 4  - Data set is under Stanford protection                    
*                 8  - Unable to determine protection status                    
*                                                                               
SECSYS   XPROC ,                                                                
         LA    R2,8                Assume unknown system                        
         MVI   DSNWAF2,DSNFSIMP    Set for simple dopen/dclose                  
         DOPEN ,                   Request simple iowa for release              
         IF    Z,BEGIN             Have work area, now check                    
         L     IOWAR,CPIOWAP       Set address of our iowa                      
         USING IOWA,IOWAR          Addressability to iowa                       
         IF    (CPRACF1,Z),BEGIN   Identify user to RACF                        
         ACALL CRTACEE             Racinit call for user                        
         END   ,                                                                
         IF    CPRACDEF,BEGIN      User defined, check access                   
         MVC   DSNAME,DSNWADSN     Set data set name                            
         LA    R0,X'02'            Set read access                              
         LCR   R0,R0               Set for log=none                             
         ACALL RACFCHK             Check for a RACF profile                     
         IF    (R15,LE,4),'CLEAR R2'   Indicate RACF profile                    
         ELSE  'LA R2,4'               Indicate under stanford                  
         END   ,                                                                
         VCALL EXTCLOSE            Release work area                            
         DROP  IOWAR               Release iowa work area                       
         END   ,                                                                
         LR    R15,R2              Set return code                              
         PEND  ,                   Return to caller                             
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Check ASCB ACEE control block for the OPERATIONS attribute.                  
*  If not on, turn it on                                                        
*                                                                               
         SPACE ,                                                                
RACCHKOP XPROC ,                                                                
         L     R2,CVASCBP              ADDRESS OF ASCB                          
         L     R2,ASCBASXB-ASCB(,R2)   ADDRESS OF EXTENSION                     
         L     R2,ASXBSENV-ASXB(,R2)   ADDRESS OF ACEE POINTER                  
         IF    (R2,NZ),BEGIN       CHECK ONLY IF ONE PRESENT                    
         WITH  (ACEE,R2),BEGIN     ADDRESSABILITY TO ACEE                       
         IF    ^ACEEFLG1.ACEEOPER,BEGIN      NO OPERATIONS, SET IT              
         MODESET MF=(E,MODSETZ)    ENTER KEY ZERO                               
         SET   ACEEFLG1.ACEEOPER   SET OPERATIONS ATTRIBUTE                     
         MODESET MF=(E,MODSETP)    RESUME PROBLEM KEY                           
         END   ,                                                                
         END   ,                                                                
         END   ,                                                                
         PEND                                                                   
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Check user's ACEE control block for operations attribute.                    
*  Disable individual user's operations attribute so that he                    
*  participates in RACF security.                                               
*                                                                               
         SPACE ,                                                                
RACDSOP  XPROC ,                                                                
         LT    R2,CPACEE           SET USER'S ACEE POINTER                      
         IF    NZ,BEGIN            ONLY IF ONE EXISTS                           
         WITH  (ACEE,R2),BEGIN     ADDRESSABILITY TO ACEE                       
         IF    ACEEFLG1.ACEEOPER,BEGIN                                          
         MODESET MF=(E,MODSETZ)    ENTER KEY ZERO                               
         CLEAR ACEEFLG1.ACEEOPER   CLEAR OPERATIONS ATTRIBUTE                   
         MODESET MF=(E,MODSETP)    RESUME PROBLEM KEY                           
         END   ,                                                                
         END   ,                                                                
         END   ,                                                                
         PEND                                                                   
         EJECT                                                                  
*-                                                                              
*-       Clear the RACF ACEE pointer.                                           
*-                                                                              
*-       The RACF access control element will be removed from                   
*-       the applicable TCBSENV field.  For normal operations                   
*-       the pointer is cleared from the allocated IOWA TCB.                    
*-       If in debugging mode the mother TCB is used.                           
*-                                                                              
*-       Input:      The IOWAR is assumed to contain a valid work               
*-             area pointer                                                     
*-                                                                              
         SPACE ,                                                                
ACEECLR  XPROC ,                                                                
         USING IOWA,IOWAR          ADDRESSABILITY TO IOWA                       
         L     R2,WATCB            SET IOWA TCB ADDRESS                         
         IF    CVFNDSUB,'L R2,CVTCBP'  ELSE SET MOTHER TCB                      
         WITH  (TCB,R2),BEGIN      ADDRESSABILITY TO TCB                        
         IF    (TCBSENV,NE,=A(0)),BEGIN                                         
         MODESET MF=(E,MODSETZ)    ENTER KEY ZERO                               
         CLEAR TCBSENV             CLEAR ACEE POINTER FROM TCB                  
         MODESET MF=(E,MODSETP)    RESUME PROBLEM PROGRAM KEY                   
         END                                                                    
         END                                                                    
         PEND  ,                                                                
         EJECT ,                                                                
*-                                                                              
*-       Set the RACF ACEE.                                                     
*-                                                                              
*-       The RACF access control element is set into an approriate              
*-       TCBSENV field to facilitate RACF checking for DFP                      
*-       operations.  The owned IOWA is set unless we are in                    
*-       debugging mode, in that case WYLBUR's mother TCB is used.              
*-                                                                              
*-       It is assumed that an IOWA is owned and its address is                 
*-       contained in IOWAR.                                                    
*-                                                                              
         SPACE ,                                                                
ACEESET  XPROC ,                                                                
         L     R2,WATCB            SET ADDRESS OF IOWA TCB                      
         IF    CVFNDSUB,'L R2,CVTCBP'  SET MOTHER TCB FOR DEBUGGING             
         WITH  (TCB,R2),BEGIN      ADDRESSABILITY TO TCB                        
         IF    (CPRACDEF,AND,(TCBSENV,EQ,=A(0))),BEGIN                          
         MODESET MF=(E,MODSETZ)    ENTER KEY ZERO FOR TCB UPDATE                
         MVC   TCBSENV,CPACEE      SET USER'S ACEE POINTER                      
         MODESET MF=(E,MODSETP)    RESUME PROBLEM PROGRAM KEY                   
         END                                                                    
         END                                                                    
         PEND  ,                                                                
         DROP  IOWAR               RELEASE IOWA                                 
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Add RACF account to RACF data base.                                          
*                                                                               
*        R1    Pointer to 5 byte ("uuugg") account                              
*                                                                               
*        Returns   0 - OK                                                       
*                  nz- Not OK; R1,R0 - error msg loc, len                       
*                                                                               
RACADD   XPROC (R2,LSR)                                                         
         SETMSG 'OK'                                                            
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Delete RACF account from RACF data base.                                     
*                                                                               
*        R1    Pointer to 5 byte ("uuugg") account                              
*                                                                               
*        Returns   0 - OK                                                       
*                  nz- Not OK; R1,R0 - error msg loc, len                       
*                                                                               
RACDEL   XPROC (R2,LSR)                                                         
         SETMSG 'OK'                                                            
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         EJECT ,                                                                
*box                                                                            
*                                                                               
*  Update account's RACF password to the password specified.                    
*                                                                               
*        R1    Contains the address of an 8 byte left adjusted                  
*              blank filled password                                            
*        R15   Pointer to 5 byte ("uuugg") account                              
*                                                                               
*        Returns   0 - Password has been updated                                
*                  4 - Unable to acquire an IOWA                                
*                  8 - RACF failure                                             
*                                                                               
         SPACE ,                                                                
RACUPDPW XPROC ,                                                                
         LR    R2,R1               SAVE POINTER TO PASSWORD                     
         LR    R3,R15              SAVE POINTER TO USER ID                      
         MVI   DSNWAF2,DSNFSIMP    SET FOR SIMPLE WORK AREA                     
         DOPEN ,                   Request iowa work area                       
         IF    Z,BEGIN             Successful - proceed                         
         L     IOWAR,CPIOWAP       Set address of our IOWA                      
         WITH  IOWA                Addressability to IOWA                       
         LR    R1,R2               Set address of password                      
         ACALL RACPASCK            Check for valid RACF password                
         IF    Z,BEGIN             Password valid - proceed                     
         MVI   RACFID,06           Set length of RACF user ID                   
         MVC   RACFID+1(2),@R3+3     Set group portion                          
         MVI   RACFID+3,C'$'           Set $ seperator                          
         MVC   RACFID+4(3),@R3           Set user portion                       
         MVI   RACFPSWD,08                 Set RACF password length             
         MVC   RACFPSWD+1(8),@R2             And passed password                
         ACALL RACNPASS            Set new RACF password for user               
         CLEAR R15                 Set successful return code                   
         END   ELSE,'LA R15,8'     Set invalid racf password                    
         END   ELSE,'LA R15,4'     Set return code                              
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  Check user's password for RACF compatability.                                
*                                                                               
*        R1    Contains the address of an 8 byte left adjusted                  
*              blank filled password                                            
*                                                                               
*        Returns   0 - Password valid, no modifications made                    
*                  4 - Password contains invalid characters.                    
*                      password pointed to by R1 has been modified              
*                      to conform to RACF password conventions.                 
*                  8 - Password too short                                       
*                                                                               
RACPASCK XPROC ,                                                                
         LR    R4,R1               Copy address of password                     
         LA    R1,@R4+7            Point to last character                      
         LA    R3,8                Set maximum length of password               
         SPACE ,                                                                
         LOOP  BEGIN               Compute actual length                        
         IF    (@R1,NE,C' '),EXIT  Exit with length set                         
         S     R1,=A(1)            Decrement address                            
         S     R3,=A(1)            Decrement length                             
         WHILE NZ,END              Keep checking                                
         SPACE ,                                                                
         IF    (R3,LT,5),BEGIN     Password too short                           
         LA    R15,8               Set return code                              
         END   ELSE,BEGIN          Scan for invalid characters                  
         S     R3,=A(1)            Adjust for ex(trt)                           
         CLEAR R15                 Assume password is valid                     
         WHILE ('EX R3,"TRT @R4(0),RACTRT"',NZ),BEGIN                           
         LA    R15,4               Set password modified                        
         STC   R2,@R1              Set replacement character                    
         END                                                                    
         END                                                                    
         SPACE ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*                                                                               
* Password translate and test table.                                            
*                                                                               
*        Valid characters are indicated by x'00'.  The invalid                  
*        character's table value is what it will be translated                  
*        to in the returned password string.                                    
*                                                                               
         SPACE ,                                                                
RACTRT   DC    256XL01'7C'         Set all characters to invalid                
         SPACE ,                                                                
         ORG   RACTRT+C'a'         Define lower "a-i"                           
         DC    CL9'ABCDEFGHI'        Set for translate to upper                 
         SPACE ,                                                                
         ORG   RACTRT+C'j'         Define lower "j-r"                           
         DC    CL9'JKLMNOPQR'        Set for translate to upper                 
         SPACE ,                                                                
         ORG   RACTRT+C's'         Define lower "s-z"                           
         DC    CL8'STUVWXYZ'         Set for translate to upper                 
         SPACE ,                                                                
         ORG   RACTRT+C'A'         Define A-I as valid characters               
         DC    XL9'00'               Set valid password character               
         SPACE ,                                                                
         ORG   RACTRT+C'J'         Define J-R as valid characters               
         DC    XL9'00'               Set valid password character               
         SPACE ,                                                                
         ORG   RACTRT+C'S'         Define S-Z as valid characters               
         DC    XL8'00'               Set valid password character               
         SPACE ,                                                                
         ORG   RACTRT+C'0'         Define 0-9 as valid characters               
         DC    XL10'00'              Set valid password character               
         SPACE ,                                                                
         ORG   RACTRT+C'$'         Define $                                     
         DC    XL1'00'               Set valid password character               
         SPACE ,                                                                
         ORG   RACTRT+C'#'         Define #                                     
         DC    XL1'00'               Set valid password character               
         SPACE ,                                                                
         ORG   RACTRT+C'@'         Define @                                     
         DC    XL1'00'               Set valid password character               
         SPACE ,                                                                
         ORG   ,                   Origin out to end of table                   
         EJECT ,                                                                
*-                                                                              
*-     Define model RACF parameter lists and RACF associated control            
*-       constants.                                                             
*-                                                                              
         SPACE ,                                                                
MODSETZ  MODESET KEY=ZERO,MF=L     Enter key zero                               
MODSETP  MODESET KEY=NZERO,MF=L    Enter problem key                            
         SPACE ,                                                                
RACLASS  DC    X'07',C'DATASET'    Define RACF class name parameter             
RACNUSR  DC    X'06',C'@@$@@@'     Define RACF null user                        
RACNPAS  DC    X'08',C'NULLPASS'   Define RACF null user password               
         SPACE ,                                                                
*GEN                                                                            
RACIMOD  RACINIT MF=L              Define RACINIT parameter list                
RACIMODL EQU   *-RACIMOD           Generate length of parameter list            
         EJECT ,                                                                
RACCMOD  RACHECK MF=L              Define RACHECK parameter list                
RACCMODL EQU   *-RACCMOD           Generate length of parameter list            
         SPACE ,                                                                
ICHIPRM  ICHEINTY ALTER,TYPE='USR',ENTRY=*-*,                          X        
               ACTIONS=(*-*,*-*),MF=L                                           
         SPACE ,                                                                
ICHAPRM  ICHEACTN FIELD=PASSWORD,FLDATA=(*-*,*-*),MF=L                          
         SPACE ,                                                                
ICHDPRF  ICHEINTY DELETE,TYPE='DS',ENTRY=*-*,GENERIC=UNCOND,MF=L                
ICHDPRFL EQU   *-ICHDPRF                                                        
*NOGEN                                                                          
         EJECT ,                                                                
*                                                                               
ACS12    KAPUT ACSERR,'SECURITY SYSTEM INTERFACE ERROR'                         
         AGO   .DONE                                                            
*                                                                               
.NOTSTAN ANOP                                                                   
         TITLE 'Dummy Security System Entry Points'                             
*box                                                                            
*                                                                               
*  PROTECT -- SET/SHOW PROTECT commands.                                        
*                                                                               
PROTECT  GENTER                                                                 
         ABORT 'SET and SHOW PROTECT commands are not available.'               
         DROP  BR                                                               
         EJECT                                                                  
*-                                                                              
*-       access - routine to validate data set access.                          
*-             called by dopen(exio) for use,save,scratch,                      
*-             copy from, exec from, etc.                                       
*-                                                                              
*-             input - iowa (@r6) containing dscb from obtain                   
*-                                 (unless new ds)                              
*-                                                                              
*-             returns -                                                        
*-                r15 -  0  access ok                                           
*-                      72  access violation or kw needed                       
*-                R0 -   0  no password needed or wanted                        
*-                       4  issue password prompt                               
*-                                                                              
ACCESS   XENTER                                                                 
         USING IOWA,R6                                                          
*-                                                                              
*-       Dummy ACCESS routine (called by DOPEN in DISK).                        
*-                                                                              
         CLEAR R15                 Assume OK                                    
         IF    (F2.DSNFALLO+DSNFWRT+DSNFSCR,Z),ACSEXIT  Read access             
         IF    F1.DSNFMYDS,ACSEXIT  My data set                                 
*-                                                                              
*-     Only allow SYS priv'd accounts to write non-WYLBUR data sets.            
*-                                                                              
         IF    ^F1.DSNFSTD,BEGIN   Non-WYLBUR data set...                       
         IF    ^CPSFSPR,BEGIN      Not SYS priv'd...                            
         LA    R15,RTNNOACS        No access allowed                            
         CLEAR R0                                                               
         ST    R0,RECSIZE          Save indicator                               
         B     ACSEXIT             Scram                                        
         END                                                                    
*                                                                               
         SET   CPFKOK              Just ask for password                        
         END                                                                    
*-                                                                              
*-      Allow user to write another user's data set if he knows that            
*-         user's password.                                                     
*-                                                                              
         LA    R15,RTNNOACS        No access                                    
         LA    R0,4                Ask for password                             
         ST    R0,RECSIZE          Save indicator                               
*                                                                               
ACSEXIT  XEXIT R2,R8,LTR                                                        
*                                                                               
.DONE    LTORG                                                                  
*                                                                               
         VLTORG                                                                 
         END   .                                                                
