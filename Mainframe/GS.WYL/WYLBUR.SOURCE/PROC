PROC     TITLE 'WYLBUR System Procedures'                                       
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
         SPACE 10                                                               
*******************************************************************             
*                                                                 *             
*                **** ATTENTION !!!! ****                         *             
*                **** ATTENTION !!!! ****                         *             
*                **** ATTENTION !!!! ****                         *             
*                                                                 *             
*       SEE COMMENTS ON NEXT PAGE BEFORE ADDING SYSTEM            *             
*       PROCEDURES !!!!                                           *             
*                                                                 *             
*******************************************************************             
         EJECT                                                                  
* LAST UPDATE 7/86                                                              
*******************************************************************             
**                                                             ****             
**                                                              ***             
**      HOW TO ADD A SYSTEM PROCEDURE !                          **             
***     ---------------------------------                        **             
*****                                                            **             
*******************************************************************             
*                                                                               
*  PROCEDURE TO ADD PROCEDURE:                                                  
*                                                                               
*  1. ADD A ENTRY INTO THE SYSTEM PROCEDURE TABLE.                              
*                                                                               
*       THIS TABLE (SYSPROCS) IS SEARCHED TO FIND THE ADDRESS                   
*       OF THE ROUTINE FOR THE SPECIFIED PROCEDURE.                             
*       PROC.  THE ENTRIES MUST APPEAR IN ALPHABETICAL ORDER.                   
*       USE THE 'SYSPROC' MACRO TO CREATE A PROPERLY FORMATED                   
*       ENTRY.                                                                  
*                                                                               
*  2. ADD A SYSTEM VARIABLE/PROCEDURE ROUTINE.                                  
*                                                                               
*       SYSTEM PROCEDURE ROUTINES ARE FOUND AFTER THE                           
*       SYSTEM PROCEDURE TABLE. THE ROUTINES SHOULD BE                          
*       PLACED IN ALPHABETICAL ORDER BASED ON THE PROCEDURE                     
*       KEYWORD.  WORK AND COMMON ROUTINES SHOULD BE PLACED                     
*       IN ALPHABETICAL ORDER IN THE COMMON/WORK ROUTINES                       
*       AREA.  THE BASIC ENTRY AND EXIT CONVENTIONS FOR THE                     
*       SYSTEM PROCEDURE ROUTINES ARE:                                          
*                                                                               
*       ON ENTRY:                                                               
*            R0 - VARIABLE COUNT                                                
*            R1 - ARGUMENT LIST                                                 
*            R6 - PROCEDURE VARIABLE RETURN AREA                                
*                 (AREA WILL INITIALY CONTAINS PROCEDURE NAME)                  
*                                                                               
*       ON EXIT:                                                                
*            R6 - RETURNED VALUES AREA (SAME AS ON ENTRY)                       
*           R15 - CC=ZERO, ALL OK                                               
*                 CC=NZ, IF ERROR,,, ERROR MSG TSEG 'D                          
*                                                                               
*       THE FORMAT OF THE ARGUMENTS PASSED AND RETURNED IS                      
*       DESCRIBED BY THE VNENTRY DSECT.  EACH ARGUMENT OCCUPIES                 
*       A FIXED LENGTH (L'VPARM) ENTRY. THUS EACH INPUT                         
*       ARGUMENT (IF ANY) CAN BE EASILY FOUND AT A FIXED OFFSET                 
*       BASED OFF OF R1.   RETURN VALUES ARE BASED OFF OF R6.                   
*                                                                               
*       SEVERAL MACROS EXIST TO MAKE THE ADDITION OF ROUTINES                   
*       EASIER.  TO USE THESE MACROS CERTAIN ADDITIONAL                         
*       CONVENTIONS MUST BE ADHERED TO.  THESE CONVENTIONS AND                  
*       THE MACROS ARE DESCRIBED NOW:                                           
*                                                                               
*   *** AN 'XENTER R0,R8,...' AND AN 'XEXIT R0,R8,LTR ' MUST                    
*       BE USED TO ENTER AND EXIT THE ROUTINE.                                  
*                                                                               
*   *** IF THE ROUTINE IS SUCCESSFUL R15 MUST BE RETURNED                       
*       EQUAL TO ZERO.  IF NOT R15 MUST BE RETURNED AS NON-ZERO                 
*       (4).  ALSO AN APPROPRIATE ERROR MESSAGE MUST BE TSEG'D.                 
*       DO NOT EXIT VIA CVNEXT OR CVERROR.                                      
*                                                                               
*   *** THE 'SETARGS' MACRO.                                                    
*                                                                               
*       TO CHECK ENTRY ARGUMENTS, THE 'SETARGS' MACRO IS                        
*       PROVIDED.  IT TAKES A SINGLE STRING AS A PARAMETER.                     
*       THE FIRST TWO CHARACTERS OF THIS STRING DEFINE THE                      
*       MAXIMUM AND MINIMUM NUMBER OF ARGUMENTS THAT THE                        
*       ROUTINE WILL TAKE.  THE REMAINING CHARACTERS DESCRIBE                   
*       THE FORMAT THAT THESE ARGUMENTS SHOULD BE CONVERTED TO:                 
*       S=STRING, I=INTEGER, W=LINE NUMBER, X=DON'T CARE.  FOR                  
*       AN EXAMPLE SEE THE 'EXAMPLE' ROUTINE.  NOTE THAT THE                    
*       'SETARGS' MACRO CALLS A SETARGS ROUTINE.  THIS ROUTINE                  
*       ASSUMES THAT R0,R1 AND R6 ARE THE SAME AS WHEN THE                      
*       SYSTEM PROCEDURE ROUTINE WAS CALLED.  'SETARGS' ALSO                    
*       WILL GIVE A NON-ZERO RETURN CODE AND TSEG A ERROR                       
*       MESSAGE IF THE ARGUMENTS CANNOT BE CONVERTED TO THE                     
*       REQUIRED FORMAT. THE 'SETARGS' MACRO DOES NOT HANDLE                    
*       'ARRAYS' OR 'PACKED' NUMBERS.                                           
*                                                                               
*   *** THE 'BADARG' MACRO                                                      
*                                                                               
*       AN 'INVALID ARGUMENT' MESSAGE IS GENERATED BY THE                       
*       'BADARG' MACRO.  THE MACRO TAKES A SINGLE                               
*       NUMBER AS A PARAMETER.  THIS NUMBER IS THE NUMBER OF                    
*       THE INVALID ARGUMENT.  THIS MACRO REQUIRES THAT R6 AND                  
*       THE AREA POINTED TO BY R6 BE THE SAME AS WHEN THE                       
*       SYSTEM PROCEDURE ROUTINE WAS ENTERED.                                   
*                                                                               
*   *** THE 'PRETVAL' MACRO                                                     
*                                                                               
*       THE 'PRETVAL' MACRO IS USED TO RETURN VALUES TO A                       
*       PROCEDURE. IT TAKES 3-4 PARAMETERS.  THE FIRST PARM IS                  
*       THE NUMBER OF THE PARAMETER TO RETURN.  THE SECOND IS                   
*       THE TYPE OF VALUE TO RETURN.  THIS MAY BE STRING,                       
*       INTEGER, LINENO, OR BOOLEAN.  ARRAYS AND PACKED NUMBERS                 
*       MAY NOT BE RETURNED WITH THIS MACRO.  ARGUMENTS 3-4 ARE                 
*       THE VALUE OF THE PARAMETER. IF THE TYPE IS A STRING:                    
*       ARGS 3-4 ARE THE STRING LOC, LENGTH; A QUOTED STRING                    
*       MAY BE RETURNED, THE CONVENTIONS FOR RETURNING A STRING                 
*       ARE THE SAME AS FOR THE 'MSG' MACRO.  IF THE TYPE IS                    
*       INTEGER OR LINENO: THE THIRD PARAMETER IS A FULLWORD                    
*       VALUE.  IF THE TYPE IS BOOLEAN: THE THIRD PARAMTER IS                   
*       THE WORD 'TRUE' OR THE WORD 'FALSE'.  THIS MACRO                        
*       REQUIRES THAT R6 BE THE SAME AS WHEN THE SYSTEM                         
*       VAR/PROC. ROUTINE WAS ENTERED.  FOR EXAMPLES, SEE THE                   
*       'EXAMPLE' ROUTINE.  OTHER EXAMPLES ARE:                                 
*              PRETVAL 1,STRING,'THIS IS IT'                                    
*              PRETVAL 3,BOOLEAN,TRUE                                           
*              PRETVAL 4,LINENO,L:RETLNO                                        
*       HEY DUDE !! THE PRETVAL MACRO CLOBBERS R15,R0,R1,R2 SO                  
*       BE CAREFULL.  R15 IS SET TO ZERO AT THE END OF THE                      
*       PRETVAL MACRO.                                                          
*                                                                               
*   *** THE 'PTRIM' MACRO                                                       
*                                                                               
*       THE 'PTRIM' MACRO IS USED TO TRIM TRAILING BLANKS OFF                   
*       THE END OF RETURNED STINGS.  IT WILL ALSO SET BLANK OR                  
*       ZEROED STRINGS TO NULL STRINGS.  IT REQUIRES THAT R6 BE                 
*       THE SAME AS WHEN THE SYSTEM PROCEDURE ROUTINE WAS                       
*       ENTERED.  IT IS GENERALLY CODED DIRECTLY FOLLOWING THE                  
*       'PRETVAL STRING,..' MACRO.  THIS MACRO DESTROYS R15-R2.                 
*       THERE IS NO EXAMPLE,,, SEE 'VTRIM' IN FUNC.                             
*                                                                               
*   *** GENERAL ARGUMENT LOADING/CHECKING PROCEDURES                            
*                                                                               
*       ARGUMENTS PASSED TO A ROUTINE ARE GENERALLY CHECKED FOR                 
*       VALIDITY AT THE VERY BEGINING OF THE ROUTINE WITH THE                   
*       'SETARGS' MACRO.  THE ARGUMENTS ARE THEN LOADED AND                     
*       CHECKED (WHILE THE ENTRY REGS ARE STILL SET UP)                         
*       GENERALLY AS FOLLOWS:  (THIS IS AN EXAMPLE ONLY, OH                     
*       YEAH:)                                                                  
*                                                                               
*       PROCXXX  XENTER R0,R8,L'XXWA,LOCAL ENTER ROUTINE                        
*                ST     R0,XXPRMCNT        SAVE PARM COUNT                      
*                ST     R6,XXRETPTR        SAVE RETURN AREA POINTER             
*        *                                                                      
*                COMMENT                   GET INPUT PARMS                      
*                SETARGS '22SI'            2 ARGS: STRING, INTEGER              
*                IF    Z,BEGIN             IF ARGS OK,...                       
*                USING VNENTRY,R5                                               
*                LA    R5,ARG1(R1)         R5 - 1ST ARG POINTER                 
*                LA    R2,VNSTRLOC         R2 - LOC OF STRING                   
*                LH    R3,VNSTRLEN         R3 - LEN OF STRING                   
*                IF    (R3,GT,120),BEGIN                                        
*                BADARG 1                  PRETEND CHECK FOR STR LEN            
*                EXIT  PROCXXX                                                  
*                END                                                            
*                LA    R5,ARG2(R1)         R5 - 2ND ARG POINTER                 
*                L     R4,VNVALUE          R4 - INTEGER VALUE                   
*                IF    ((R4,NEG),OR,(R4,GT,120)),BEGIN                          
*                BADARG 2                  PRETEND CHECK FOR ARG 2              
*                EXIT  PROCXXX                                                  
*                END                                                            
*                ..... AND SO ON                                                
*                                                                               
*                                                                               
*                ... END OF ROUTNE, XEXIT ...                                   
*                                                                               
*                                                                               
*   *** RETURNING PROCEDURE VALUES,,,                                           
*                                                                               
*       THE EASY WAY IS WITH THE 'PRETVAL MACRO', BUT THERE ARE                 
*       OTHER WAYS.  YOU MAY SET UP YOUR OWN RETURN VALUE @R6.                  
*       SEE VNENTRY DSECT. THE AREA MUST BE CLEARED.  FLAGS                     
*       MUST BE SET FOR THE VARIABLE TYPE:  STRING, BOOLEAN,                    
*       NUMBER.  THE VARIABLE VALUE MUST BE SET.  THERE ARE NO                  
*       EXAMPLES IN PROC, SEE 'FNPI' IN FUNC.  IF YOU WANT TO                   
*       DEAL WITH ARRAYS (IF THEY EXIST),,, GOOD LUCK HASBRO !!                 
*       A SAMPLE EXAMPLE, OR AN EXAMPLE OF A SAMPLE:                            
*                                                                               
*        ...   COMMENT                   RETURN PARMS                           
*              L     R6,XXRETPTR         LOAD RETURN AREA PTR                   
*              ST    R2,XXLINENO                                                
*              PRETVAL 1,STRING,(R1),(R0)   RETURN A STRING                     
*              PRETVAL 2,LINENO,L:XXLINENO  RETURN A LINENO                     
*              PRETVAL 3,STRING,'OK'        ALL OK                              
*              CLEAR   R15               ALL OK                                 
*              XEXIT   R0,R8,LTR         RETURN                                 
*         ...                                                                   
*        NOTE IN THIS EXAMPLE, XXRETPTR AND XXLINENO ARE ASSUMED                
*        TO BE STORAGE IN THE PROCEDURES LOCAL WORK AREA.                       
*                                                                               
*   *** FINAL ADVICE                                                            
*                                                                               
*       THIS MODULE ADHERES TO SEVERAL CONVENTIONS.  IF YOU                     
*       ADHERE TO THESE CONVENTIONS, IT WILL MAKE IT EASIER FOR                 
*       YOU AND ANY OTHERS WHO MAY WANT TO ADD SYSTEM PROCEDURES                
*       TO ADD THEM. IT IS WORTH IT TO TAKE A BIT OF TIME AND                   
*       LOOK AT HOW SEVERAL EXITING SYSTEM PROCEDURE ROUTINES                   
*       CODED.                                                                  
*                                                                               
*   *** SOME DOCUMENTATION                                                      
*                                                                               
*        ON ENTRY:                                                              
*             R0 - VARIABLE COUNT                                               
*             R1 - ARGUMENT LIST                                                
*             R6 - PROCEDURE RETURN AREA                                        
*                  (AREA WILL INITIALY CONTAIN PROCEDURE NAME)                  
*                                                                               
*                                                                               
*        ON EXIT:                                                               
*             R6 - RETURNED VALUES (SAME AS ON ENTRY)                           
*            R15 - CC=ZERO, ALL OK                                              
*                  CC=NZ, IF ERROR,,, ERROR MSG TSEG 'D                         
*                                                                               
*        ARG1     EQU   0*L'VPARM           USUALLY @R1                         
*        ARG2     EQU   1*L'VPARM                                               
*        ARG3     EQU   2*L'VPARM                                               
*        ARG4     EQU   3*L'VPARM                                               
*        ARG5     EQU   4*L'VPARM                                               
*        ARG6     EQU   5*L'VPARM                                               
*                                                                               
*        FNRET    EQU   0*L'VPARM           USUALLY @R6                         
*                                                                               
*                                                                               
*        FNWA     RECORD BEGIN ,            GENERALIZED WORK AREA !             
*                 XSA   R0,R8                                                   
*        FNWORK   DS    XL(L'VPARM)         256+ BYTE WORK AREA                 
*                 END                                                           
*        ******************** OH YEAH !!                                        
         EJECT                                                                  
WYLPROC  CSECT                                                                  
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
PROC     IDENT 2193                15:11:48 07/12/02  (SLP)                     
*                                                                               
         SYSDEFN ,                 Define installation values                   
*                                                                               
         PUSH  DSECTS                                                           
         TITLE 'DSECTS'                                                         
         COPY  CONTROL             Copy CV/CP                                   
         TITLE 'DSECTS'                                                         
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         EJECT                                                                  
KWR      RECORD BEGIN                                                           
         KWR                                                                    
         END                                                                    
         EJECT                                                                  
         COPY  UID                 Copy User-ID record layout                   
         EJECT ,                                                                
         COPY  KRB                 Copy KLOGIN record layout                    
         EJECT ,                                                                
SEGCB    RECORD 'SEGCB'                                                         
         POP   DSECTS                                                           
WYLPROC  CSECT                                                                  
         EJECT                                                                  
UPATH    RECORD BEGIN                                                           
UPAT     UPATH                                                                  
         END                                                                    
         EJECT                                                                  
UNET     RECORD BEGIN                                                           
UNET     UNET                                                                   
         END                                                                    
         EJECT                                                                  
         COPY  BSINFO                                                           
         EJECT                                                                  
         COPY  VNENTRY                                                          
         COPY  VPARM                                                            
         EJECT                                                                  
         COPY  XSENTRY                                                          
         TITLE 'Local Macros'                                                   
*                                                                               
*                                                                               
*   SYSTEM ROUTINE TABLE ENTRY MACRO                                            
*                                                                               
*                                                                               
RTNENTRY RECORD BEGIN                                                           
RTNNAME  DS    CL16                                                             
RTNPTR   DEFRTNP                                                                
         END                                                                    
*                                                                               
*C-DATA  struct sysrtn {                                                        
*C-DATA    unsigned char name[16];                                              
*C-DATA    void (* routine)();                                                  
*C-DATA  };                                                                     
*                                                                               
*                                                                               
         DS    0S(16-L'VNNAME)     VNNAME MUST BE 16 OR FIXED ABOVE             
         DS    0S(L'VNNAME-16)       AND FIXED IN SYSRTN MACRO                  
         DS    0S(16-L'RTNNAME)    RTNNAME MUST BE 16 OR FIXED ABOVE            
         DS    0S(L'RTNNAME-16)      AND FIXED IN SYSRTN MACRO                  
*                                                                               
         MACRO                                                                  
&L       SYSPROC   &NAME,&ROUTINE                                               
&L       SYSRTN    &NAME,&ROUTINE                                               
         MEND                                                                   
*                                                                               
         MACRO                                                                  
&L       LA$TABLE &RX,&LOC                                                      
         GBLB  &$PCODE                                                          
         AIF   (&$PCODE).CGENLA                                                 
         L     &RX,=A(&LOC)                                                     
         MEXIT                                                                  
.CGENLA  ANOP                                                                   
         MNOTE *,'C-CODE &RX = (long int)((char *)( && &LOC));'                 
         MEND                                                                   
*                                                                               
         EJECT                                                                  
*                                                                               
*                                                                               
*   LOCAL MACROS                                                                
*                                                                               
*        SETARGS - SET ARG TYPES                                                
*        RETARGS - RETURN PROCEDURE ARGS                                        
*        PRETVAL - RETURN VARIABLE VALUE, TYPE                                  
*        BADARG - CREATE BAD ARGUMENT MESSAGE                                   
*                                                                               
*.... ..   -... ..- -..                                                         
         SPACE 2                                                                
*                                                                               
*                               SET ARGUMENT TYPES                              
         MACRO                                                                  
&L       SETARGS  &LIST                                                         
&L       LA    R2,=C&LIST          LIST OF ARGUMENT TYPES TO SET                
         COMMENT                   R1 - ARG LIST, R0 - ARG COUNT                
         VCALL SETARGS             THIS ROUTINE IS IN FUNC                      
         MEND                                                                   
         SPACE 2                                                                
*                                                                               
*                             RETURN VARIABLE @R6                               
         MACRO                                                                  
&L       PRETVAL &ARGNUM,&TYPE,&VALUE,&LEN                                      
&L       DS    0H                                                               
         AIF   ('&TYPE' EQ 'STRING').TYPESTR                                    
         AIF   ('&TYPE' EQ 'INTEGER').TYPEINT                                   
         AIF   ('&TYPE' EQ 'LINENO').TYPELNO                                    
         AIF   ('&TYPE' EQ 'BOOLEAN').TYPEBOOL                                  
         MNOTE 8,'INVALID TYPE SPECIFIED'                                       
.*                                                                              
.*                                 RETURN STRING VALUE                          
.TYPESTR ANOP                                                                   
         WITH  (VNENTRY,R2),BEGIN                                               
         LA    R2,ARG&ARGNUM.(R6)                                               
         CLEAR VNENTRY                 CLEAR ENTRY                              
         SET   VNSTRING                SET STRING TYPE                          
         SETMSG &VALUE,&LEN                                                     
         STH   R0,VNSTRLEN             SAVE STRING LEN                          
         LTR   R15,R0                  SAVE STRING VALUE                        
         IF    POS,BEGIN                                                        
         DEX   R15,' MVC VNSTRLOC(0),@R1 '                                      
         END                                                                    
         SR    R15,R15                                                          
         END   , WITH (VNENTRY,R2)                                              
         MEXIT                                                                  
.*                                 RETURN INTEGER VALUE                         
.TYPEINT ANOP                                                                   
         WITH  (VNENTRY,R2),BEGIN                                               
         LA    R2,ARG&ARGNUM.(R6)                                               
         CLEAR VNENTRY                 CLEAR ENTRY                              
         SET   VNNUMB                  SET NUMBER TYPE                          
         $L    R1,&VALUE,OP=LA         SET VALUE                                
         ST    R1,VNVALUE                                                       
         COMMENT R2 - VNENTRY                                                   
         VCALL MAKEITOD                ALL #'S RETURNED AS PKD DEC              
         END   , WITH (VNENTRY,R2)                                              
         MEXIT                                                                  
.*                                 RETURN LINE NUMBER VALUE                     
.TYPELNO ANOP                                                                   
         WITH  (VNENTRY,R2),BEGIN                                               
         LA    R2,ARG&ARGNUM.(R6)                                               
         CLEAR VNENTRY                 CLEAR ENTRY                              
         SET   VNNUMB                  SET NUMBER TYPE                          
         $L    R1,&VALUE,OP=LA         SET VALUE                                
         ST    R1,VNVALUE                                                       
         LA    R2,VNENTRY                                                       
         VCALL MAKELTOD                ALL #'S RETURNED AS PKD DEC              
         END   , WITH (VNENTRY,R2)                                              
         MEXIT                                                                  
.*                                 RETURN BOOLEAN                               
.TYPEBOOL ANOP                                                                  
         AIF   ('&VALUE' EQ 'TRUE').TRUEVAL                                     
         AIF   ('&VALUE' EQ 'FALSE').FALSEVAL                                   
         MNOTE 8,'INVALID BOOLEAN VALUE'                                        
.TRUEVAL ANOP                                                                   
         WITH  (VNENTRY,R2),BEGIN                                               
         LA    R2,ARG&ARGNUM.(R6)                                               
         CLEAR VNENTRY                 CLEAR ENTRY                              
         SET   VNBOOL                  SET BOOLEAN TYPE                         
         MVC   VNVALUE(12),=X'00000000000001000000000C'   TRUE                  
         SR    R15,R15                                                          
         END   , WITH (VNENTRY,R2)                                              
         MEXIT                                                                  
.FALSEVAL ANOP                                                                  
         WITH  (VNENTRY,R2),BEGIN                                               
         LA    R2,ARG&ARGNUM.(R6)                                               
         CLEAR VNENTRY                 CLEAR ENTRY                              
         SET   VNBOOL                  SET BOOLEAN TYPE                         
         MVC   VNVALUE(12),=X'00000000000000000000000C'   FALSE                 
         SR    R15,R15                                                          
         END   , WITH (VNENTRY,R2)                                              
         MEXIT                                                                  
.*                                 DECIMAL/ARRAY RETURNS MUST                   
.*                                 BE CODED BY HAND !!!!                        
         MEND                                                                   
         SPACE 2                                                                
*                                                                               
*                               TRIM BLANKS FROM END OF STRING                  
         MACRO                                                                  
&L       PTRIM &ARGNO                                                           
         LA    R2,ARG&ARGNO.(R6)                                                
&L       ACALL PTRIM               TRIM BLANKS, R6 - VAR ENTRY                  
         MEND                                                                   
         SPACE 2                                                                
*                                                                               
*                               BAD ARGUMENT                                    
         MACRO                                                                  
&L       BADARG &ARGNO                                                          
&L       $L    R2,&ARGNO,OP=LA     NUMBER OF BAD ARGUMENT                       
         VCALL BADARG              THIS ROUTINE IS IN FUNC                      
         MEND                                                                   
*                                                                               
$TAB     EQU   X'05',,C'N'         EBCDIC tab character                         
         EJECT                                                                  
*                                                                               
**                                                                              
**  BINARY SEARCH INFO FOR TABLE OF SYSTEM PROCEDURES.                          
**                                                                              
**  INITIALIZED BY INITPROC ROUTINE IN THIS MODULE.                             
*$  SHOULD GETMAIN THIS AREA TO MAKE REENTRANT !                                
**                                                                              
*                                                                               
SYSPINFO LABEL ,                                                                
         ENTRY SYSPINFO                                                         
         DC    XL(L'BSINFO)'0'                                                  
         TITLE 'Initialize System Procedures'                                   
*box                                                                            
*                                                                               
*                                                                               
*  INITPROC - PROC MODULE INITIALIZATION                                        
*                                                                               
*  SET UP BINARY SEARCH INFO FOR SYSTEM PROCEDURES.                             
*                                                                               
*                                                                               
*                                                                               
INITPROC XPROC  ,                                                               
*                                                                               
         COMMENT                   GET MEM FOR SYSPROC BSEARCH INFO             
         LA    R0,L'BSINFO                                                      
         VCALL GETCORE                                                          
         ST    R1,CVPBINFO                                                      
*                                                                               
         COMMENT                   PROC BSEARCH INFO                            
         L     R0,CVPBINFO         R0 - BSEARCH INFO                            
         LA$TABLE R1,SYSEND        R1 - TOTAL POSSIBLE TABLE LEN                
         LA$TABLE R2,SYSPROCS                                                   
         SR    R1,R2                                                            
         LA    R2,L'RTNENTRY       R2 - ENTRY LENGTH                            
         LA    R3,L'RTNNAME        R3 - SEARCH LENGTH (NAME LEN)                
         LR    R4,R1               R4 - END OF LAST ENTRY = TAB LEN             
         VCALL BSINIT                                                           
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*                                                                               
*  GETPROCP - GET SYSTEM PROCEDURE ROUTINE ADDRESS                              
*                                                                               
*  ON ENTRY:                                                                    
*    @R0 - PLACE TO RETURN ROUTINE ADDRESS                                      
*    @R1 - VARIABLE NAME, LEFT JUSTIFIED BLANK PADDED                           
*                                                                               
*  ON EXIT:                                                                     
*    R15=Z, ROUTINE FOUND;  R15=NZ, ROUTINE NOT FOUND                           
*    R1 - POINTS TO FULL NAME OF VARIABLE (NOT SAME AS ENTRY VALUE)             
*                                                                               
*                                                                               
*  NOTE:                                                                        
*  IF ROUTINE POINTER IS ZERO, ROUTINE IS NOT DEFINED. THIS IS                  
*  SO THAT WE CAN CONTROL WHICH ABBREVAIATIONS FIND MATCHES.                    
*                                                                               
*                                                                               
GETPROCP XPROC ,                                                                
*                                                                               
         LR    R4,R0                                                            
         LR    R5,R1                                                            
*                                                                               
         COMMENT                   SEARCH FOR SYSTEM ROUTINE                    
         L     R0,CVPBINFO                                                      
         LA$TABLE R1,SYSPROCS                                                   
         LR    R2,R5 IE. NAME                                                   
         VCALL BSEARCH                                                          
*                                                                               
         COMMENT                   IF FOUND RETURN VALUES                       
         IF    (R15,Z),BEGIN                                                    
         LR    R6,R1                                                            
         USING RTNENTRY,R6                                                      
         IF    (RTNPTR,NZ),BEGIN                                                
         MVC   @R4(L'RTNPTR),RTNPTR                                             
         LA    R1,RTNNAME                                                       
         DROP  R6                                                               
         END                                                                    
         ELSE  BEGIN               IF NO RTNPTR, RETURN R15=NZ                  
         LA    R15,4                                                            
         END                                                                    
         END                                                                    
*                                                                               
         PRETURN (R1)                                                           
         PEND                                                                   
         TITLE 'ENTRY/EXIT Routines for System Procedures'                      
*box                                                                            
*                                                                               
*                                                                               
*  SETARGS - CHECK PROCEDURE ARGUMENTS                                          
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - NUMBER OF ARGUMENTS                                                
*       R1 - ADDRESS OF ARGUMENTS                                               
*       R2 - TYPE LIST, AS FOLLOWS                                              
*            1 BYTE: MINIMUM NUMBER OF ARGS, 0-9                                
*            1 BYTE: MAXIMUM NUMBER OF ARGS, 0-9                                
*            N BYTES: ARG TYPES                                                 
*               S - STRING                                                      
*               N - DECIMAL NUMBER                                              
*               I - INTEGER FULLWORD (INTERNAL ONLY)                            
*               W - LINE NUMBER FULLWORD (INTERNAL ONLY)                        
*               B - BOOLEAN                                                     
*               X - DON'T CARE                                                  
*       R6 - VARIABLE ENTRY (CONTAINS PROCEDURE/PROC NAME)                      
*                                                                               
*  ON EXIT:                                                                     
*       R15 - CC=ZERO, IF ALL ARG TYPES SET OK                                  
*             CC=NZ, IF ERROR... ERROR MSG IS TSEG'D                            
*                                                                               
*                                                                               
*                                                                               
*SETARGS LABEL ,                                                                
         COMMENT                   SETARGS ROUTINE IN IN FUNC                   
         COMMENT                   MODULE  !!   DIG IT !                        
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  PTRIM - TRIM TRAILING BLANKS FROM A VAR ENTRY                                
*                                                                               
*  ON ENTRY - R2 VARIABLE ENTRY                                                 
*                                                                               
*  ROUTINE CALLED VIA PTRIM MACRO, TO TRIM SYSTEM VARIABLES                     
*  THAT ARE LEFT JUSTIFIED AND PADDED WITH BLANKS, OR ALL                       
*  ZEROS.                                                                       
*                                                                               
*                                                                               
PTRIM    PROC                                                                   
         LR    R6,R2                                                            
         USING VNENTRY,R6                                                       
         LA    R2,VNSTRLOC         R2 - STRING LOCATION                         
         LH    R3,VNSTRLEN         R3 - STRING LEN                              
         SR    R5,R5                                                            
         CLCL  R2,R4                                                            
         IF    E,BEGIN             IF FIELD IS ALL ZERO,                        
         SR    R0,R0                  RETURN NULL STRING                        
         STH   R0,VNSTRLEN                                                      
         B     TRIMDONE                                                         
         END                                                                    
         LA    R2,VNSTRLOC                                                      
         LH    R3,VNSTRLEN                                                      
         L     R5,=X'40000000'                                                  
         CLCL  R2,R4                                                            
         IF    E,BEGIN             IF FIELD IS ALL BLANKS,                      
         SR    R0,R0                  RETURN NULL STRING                        
         STH   R0,VNSTRLEN                                                      
         B     TRIMDONE                                                         
         END                                                                    
         LA    R2,VNSTRLOC                                                      
         LH    R3,VNSTRLEN                                                      
         AR    R3,R2               R2 - START, R3 - END OF STRING               
         BCTR  R3,0                                                             
         COMMENT                   TRIM TRAILING BLANKS                         
         WHILE ((R3,GE,R2),AND,(@R3,EQ,' ')),' BCTR R3,0 '                      
         LA    R3,1(R3)                                                         
         SR    R3,R2               R3 - LENGTH AFTER TRIMMING                   
         STH   R3,VNSTRLEN                                                      
         B     TRIMDONE                                                         
         DROP  R6                                                               
*                                                                               
TRIMDONE LABEL ,                                                                
         SR    R15,R15                                                          
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  BADARG - BAD ARGUMENT                                                        
*                                                                               
*  ON ENTRY:                                                                    
*       R2 - ARGUMENT NUMBER                                                    
*       R6 - VAR ENTRY, CONTAINS PROCEDURE/PROCEDURE NAME                       
*                                                                               
*  ON EXIT:                                                                     
*       ERROR MESSAGE IS TSEG'D                                                 
*                                                                               
*                                                                               
*BADARG  LABEL ,                                                                
         COMMENT                   SETARGS ROUTINE IN IN FUNC                   
         COMMENT                   MODULE  !!   DIG IT !                        
         TITLE 'Table of System Procedures'                                     
         DS    0D                                                               
*box                                                                            
*                                                                               
*                                                                               
*  SORTED TABLE OF SYSTEM PROCEDURES,                                           
*                                                                               
*  FOR TABLE ENTRIES USE THE FOLLOWING MACRO:                                   
*       SYSPROC <PROCEDURE NAME>,<ROUTINE>                                      
*                                                                               
*                                                                               
*       **** CAUTION !!! ****                                                   
*  ENTRIES MUST BE SORTED ALPHABETICALLY BY NAME                                
*                                                                               
*                                                                               
*                                                                               
*                                                                               
         COMMENT                   SYSTEM PROCEDURES                            
SYSPROCS SYSPROC COLLECT_GET_INFO,PCCOLGET                                      
         SYSPROC COLLECT_SCAN,PCCOLSCN                                          
         SYSPROC COLLECT_SET_INFO,PCCOLSET                                      
         SYSPROC COMPARE_LINES,PCCOMPL  ALPHABETIZE !                           
         SYSPROC DIALOG,PCDIALOG                                                
         SYSPROC DOM,PCDOM                                                      
         SYSPROC KEY_DELETE,PCKEYDEL                                            
         SYSPROC KEY_GET,PCKEYGET                                               
         SYSPROC KEY_PUT,PCKEYPUT                                               
         SYSPROC KEY_REFRESH,PCKEYREF                                           
         SYSPROC KLOGIN_DELETE,PCKLGDEL                                         
         SYSPROC KLOGIN_GET,PCKLGGET                                            
         SYSPROC KLOGIN_PUT,PCKLGPUT                                            
         SYSPROC LINE_APPEND,PCLNAPND                                           
         SYSPROC LINE_FIRST,PCLNFRST                                            
         SYSPROC LINE_GET,PCLNGET       ALPHABETIZE                             
         SYSPROC LINE_LAST,PCLNLAST                                             
         SYSPROC LINE_NEXT,PCLNNEXT                                             
         SYSPROC LINE_PREV,PCLNPREV     ALPHABETIZE                             
         SYSPROC LINE_PUT,PCLNPUT                                               
         SYSPROC LINS_FROM_CLIENT,PCLFROMC TEST WINGS STUFF                     
         SYSPROC LINS_TO_CLIENT,PCLTOC TEST WINGS STUFF                         
         SYSPROC MAIL_INFO,PCMINFO                                              
         SYSPROC MATCH_LINES,PCMATCHL                                           
         SYSPROC MS_BUILDHDR,PCMSHDR                                            
         SYSPROC NET_CLOSE,PCNETCLS     ALPHABETIZE                             
         SYSPROC NET_CONTROL,PCNETCTL                                           
         SYSPROC NET_OPEN,PCNETOPN                                              
         SYSPROC NET_READ,PCNETRD                                               
         SYSPROC NET_READFILE,PCNETRDF                                          
         SYSPROC NET_STATUS,PCNETST                                             
         SYSPROC NET_TALK,PCNETTK                                               
         SYSPROC NET_VIEW,PCNETVW                                               
         SYSPROC NET_WRITE,PCNETWR                                              
         SYSPROC NET_WRITEFILE,PCNETWRF                                         
         SYSPROC PATH_CLOSE,PCPATCLS    ALPHABETIZE                             
         SYSPROC PATH_CONTROL,PCPATCTL                                          
         SYSPROC PATH_OPEN,PCPATOPN                                             
         SYSPROC PATH_READ,PCPATRD                                              
         SYSPROC PATH_READFILE,PCPATRDF                                         
         SYSPROC PATH_STATUS,PCPATST                                            
         SYSPROC PATH_WRITE,PCPATWR                                             
         SYSPROC PATH_WRITEFILE,PCPATWRF                                        
         SYSPROC QUERY_FETCH,PCQFETCH                                           
         SYSPROC RPC_DISPLAY_ROWS,PCDISROW                                      
         SYSPROC SCAN,PCSCAN            ALPHABETIZE                             
         SYSPROC SCAN_MAILHDR,RFCSCANH                                          
         SYSPROC SCAN_PARM,PCSCANP                                              
         SYSPROC TEST,PCTEST            ALPHABETIZE                             
         SYSPROC USERID_REFRESH,PCUIDREF                                        
         SYSPROC VIEW_CMD,PCVCMD                                                
         SYSPROC VIEW_ROWGET,PCVRGET                                            
         SYSPROC VIEW_ROWPUT,PCVRPUT    ALPHABETIZE                             
         SYSPROC VIEW_WINDGET,PCVWGET                                           
         SYSPROC VIEW_WINDPUT,PCVWPUT                                           
         SYSPROC WLOG,PCWLOG                                                    
         SYSPROC WTO,PCWTO                                                      
         SYSPROC WTOR,PCWTOR                                                    
         SYSPROC XSCAN,PCXSCAN     ALPHABETIZE                                  
SYSEND   SYSPROC ZZZDUMMY,NULL     END OF SYSTEM TABLE                          
*                                                                               
         QLTORG                                                                 
         TITLE 'Routines for System Procedures'                                 
*box                                                                            
*                                                                               
*                                                                               
*  SYSTEM PROCEDURE, PROCEDURE, AND VARIABLE ROUTINES                           
*                                                                               
*  ****NOTE !!                                                                  
*  SEE COMMENTS AT START OF THIS MODULE.                                        
*                                                                               
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - VARIABLE COUNT                                                     
*       R1 - ARGUMENT LIST                                                      
*       R6 - PROCEDURE/VARIABLE RETURN AREA                                     
*            (AREA WILL INITIALY CONTAIN PROCEDURE/PROC/VAR NAME)               
*                                                                               
*                                                                               
*  ON EXIT:                                                                     
*       R6 - RETURNED VALUE (IF PROCEDURE, VARIABLE)                            
*      R15 - CC=ZERO, ALL OK                                                    
*            CC=NZ, IF ERROR,,, ERROR MSG TSEG 'D                               
*                                                                               
*                                                                               
*                                                                               
ARG1     EQU   0*L'VPARM           USUALLY @R1                                  
ARG2     EQU   1*L'VPARM                                                        
ARG3     EQU   2*L'VPARM                                                        
ARG4     EQU   3*L'VPARM                                                        
ARG5     EQU   4*L'VPARM                                                        
ARG6     EQU   5*L'VPARM                                                        
ARG7     EQU   6*L'VPARM                                                        
ARG8     EQU   7*L'VPARM                                                        
*                                                                               
FNRET    EQU   0*L'VPARM           USUALLY @R6                                  
*                                                                               
*                                                                               
FNWA     RECORD BEGIN ,            GENERALIZED WORK AREA !                      
         XSA   R0,R8                                                            
FNWORK   DS    XL(L'VPARM)         256+ BYTE WORK AREA                          
         END                                                                    
*                                                                               
*                                                                               
**************** ROUTINES FOLLOW BELOW !!                                       
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  COLLECT_GET_INFO - GET COLLECT INFO                                          
*                                                                               
*  GET EXEC COLLECT INFO,,,  THIS INFO IS VALID ONLY WHEN                       
*  XDUMP FLAG IS SET.                                                           
*                                                                               
*                                                                               
PCCOLGET PROC                                                                   
*                                                                               
         COMMENT                   CHECK ARGS                                   
         SETARGS '44WWWI'                                                       
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   RETURN ARGS                                  
         PRETVAL 1,LINENO,L:CPXDPLN                                             
         PRETVAL 2,LINENO,L:CPXDPNLN                                            
         PRETVAL 3,LINENO,L:CPXDPDLT                                            
         PRETVAL 4,INTEGER,L:CPXDPACT                                           
*                                                                               
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  COLLECT_SCAN -- SCAN AND PROCESS COLLECT OPTIONS                             
*                                                                               
*  READ INPUT STRING, STRIPING AND PROCESSING COLLECT                           
*  OPTIONS.  HOW IS THIS DONE? IT IS DONE BY SCANNING                           
*  THE INPUT STRING USING THE COLPRT (COLLECT OPTIONS)                          
*  SCAN TABLE, ALL COLLECT OPTIONS ARE SCANED OFF.                              
*  OPTIONS THAT REMAIN ARE CONCATENATED TOGETHER TO                             
*  FORM A NEW STRING.  AT THE CONCLUSION OF THE SCANNING                        
*  WE INSPECT THE DUMP PARMS THAT HAVE BEEN SET UP                              
*  AND COPY THEM TO EXEC DUMP PARMS.                                            
*                                                                               
*  TO PROPERLY REMOVE THE SCANNED ITEMS WE MARK ALL                             
*  SCANNED ITEMS WITH 'X', WE THEN MARK ALL ITEMS                               
*  SCANNED EXCLUDING THE COLLECT ITEMS WITH A 'Y'.                              
*  BY REMOVING ALL THE 'X' ITEMS WE COMPLETE OUR                                
*  TASK.  BUF1 IS THE 'X' 'Y' SHADOW BUFFER.                                    
*  RET1 WILL BE THE STRING TO RETURN.  SSTR IS THE                              
*  COPY OF THE STRING WE USE FOR THE SCAN.                                      
*                                                                               
*  FOR EXAMPLE:                                                                 
*  STRING:  OPT1 OPT2 COLLECT END+12 OPT3 CLEAR OPT4                            
*  BUF1:    YYYY YYYY XXXXXXX XXXXXX YYYY XXXXX YYYY                            
*  RET1:    OPT1 OPT2 OPT3 OPT4                                                 
*  RET2:    COLLECT END+12 CLEAR                                                
*                                                                               
*                                                                               
PCOLWA   RECORD BEGIN                                                           
PCOLR0   DS    F                                                                
PCOLR6   DS    F                                                                
PCOLSTR  DS    CL(MAXSTRLN)                                                     
PCOLSTRL DS    F                                                                
PCOLSSTR DS    CL(MAXSTRLN)                                                     
PCOLBUF1 DS    CL(MAXSTRLN)                                                     
PCOLRET1 DS    CL(MAXSTRLN)                                                     
PCOLRET2 DS    CL(MAXSTRLN)                                                     
PCOLRET3 DS    CL80                                                             
PCOLSG   SEGCB                                                                  
         END                                                                    
*-                                                                              
PCCOLSCN PROC  PCOLWA                                                           
*                                                                               
         COMMENT                   CHECK ARGS                                   
         SETARGS '13SSS'                                                        
         IF    Z,BEGIN                                                          
         ST    R0,PCOLR0                                                        
         ST    R6,PCOLR6                                                        
*                                                                               
         COMMENT                   INIT WORK AREA                               
         WITH  (VNENTRY,R5),BEGIN                                               
         LA    R5,ARG1(R1)                                                      
         LA    R2,VNSTRLOC                                                      
         LH    R3,VNSTRLEN                                                      
         LA    R14,PCOLSTR                                                      
         LR    R15,R3                                                           
         MVCL  R14,R2                                                           
         LA    R2,VNSTRLOC                                                      
         LH    R3,VNSTRLEN                                                      
         LA    R14,PCOLSSTR                                                     
         LR    R15,R3                                                           
         MVCL  R14,R2                                                           
         LH    R3,VNSTRLEN                                                      
         ST    R3,PCOLSTRL                                                      
         END                                                                    
*                                                                               
         COMMENT                   SET UP SCAN                                  
         SCINIT PCOLSSTR,L:PCOLSTRL                                             
         SCAN  PCOLXPRT            SCAN ALL TOKENS, MARK WITH 'X'               
         SCANCHK                                                                
*                                                                               
         COMMENT                   SET UP SCAN                                  
         SCINIT PCOLSSTR,L:PCOLSTRL                                             
         SCAN  PCOLYPRT            SCAN ALL TOKENS, MARK WITH 'X'               
         SCANCHK                                                                
*                                                                               
         COMMENT                   GET STRING W/OUT COL OPTS                    
         LA    R2,PCOLBUF1         R2,R3 - START END OF SHADOW BUF              
         L     R3,PCOLSTRL                                                      
         AR    R3,R2                                                            
         LA    R4,PCOLRET1         R4 - RESULT BUFFER                           
         LA    R5,PCOLSTR          R5 - ORIGNAL STRING                          
         COMMENT                                                                
         WHILE (R2,LT,R3),BEGIN    LOOP MOVING ALL BUT COL OPTS                 
         WHILE ((@R2,NE,'X'),AND,(R2,LT,R3)),BEGIN                              
         MVC   0(1,R4),0(R5)                                                    
         INCR  R2                                                               
         INCR  R4                                                               
         INCR  R5                                                               
         END                                                                    
         WHILE ((@R2,NE,'Y'),AND,(R2,LT,R3)),BEGIN                              
         INCR  R2                                                               
         INCR  R5                                                               
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   RETURN STRING W/OUT COL OPTS                 
         L     R6,PCOLR6                                                        
         LA    R1,PCOLRET1                                                      
         SR    R4,R1                                                            
         PRETVAL 1,STRING,(R1),(R4)                                             
*                                                                               
         COMMENT                   IF 2ND ARG RETURN REQUESTED                  
         IF    (PCOLR0,GE,2),BEGIN GET STRING WITH ONLY COL OPTS                
         LA    R2,PCOLBUF1         R2,R3 - START END OF SHADOW BUF              
         L     R3,PCOLSTRL                                                      
         AR    R3,R2                                                            
         LA    R4,PCOLRET2         R4 - RESULT BUFFER                           
         LA    R5,PCOLSTR          R5 - ORIGNAL STRING                          
         COMMENT                                                                
         WHILE (R2,LT,R3),BEGIN    LOOP MOVING ALL BUT COL OPTS                 
         WHILE ((@R2,NE,'X'),AND,(R2,LT,R3)),BEGIN                              
         INCR  R2                                                               
         INCR  R5                                                               
         END                                                                    
         WHILE ((@R2,NE,'Y'),AND,(R2,LT,R3)),BEGIN                              
         MVC   0(1,R4),0(R5)                                                    
         INCR  R2                                                               
         INCR  R4                                                               
         INCR  R5                                                               
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   RETURN STRING WITH COL OPTS                  
         L     R6,PCOLR6                                                        
         LA    R1,PCOLRET2                                                      
         SR    R4,R1                                                            
         PRETVAL 2,STRING,(R1),(R4)                                             
         END   , RETURN ARG 2                                                   
*-                                                                              
*-       Arg 3:  This is the old collect information.  If we are                
*-          going to set new options then it is a string with                   
*-          four numbers in it; if we didn't find anything then                 
*-          it's the null string.                                               
*-                                                                              
         IF    (PCOLR0,GE,3),BEGIN  Return save status string...                
         CLEAR R0,R1               Assume null string                           
*                                                                               
         IF    CPFDUMP,BEGIN       We are going to set new options...           
         SEGINIT PCOLRET3,,PCOLSG                                               
*                                                                               
         L     R0,CPXDPLN          Dump lineno                                  
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)                                                        
         SEG   ','                                                              
*                                                                               
         L     R0,CPXDPNLN         Next dump lineno                             
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)                                                        
         SEG   ','                                                              
*                                                                               
         L     R0,CPXDPDLT         Dump delta                                   
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)                                                        
         SEG   ','                                                              
*                                                                               
         SEGDC L:CPXDPACT          Dump ACTNO                                   
*                                                                               
         SETMSG PCOLRET3,L:PCOLSGLENF  String area                              
         END                                                                    
*                                                                               
         L     R6,PCOLR6                                                        
         PRETVAL 3,STRING,(R1),(R0)  Return previous options                    
         END                                                                    
*-                                                                              
*-       Now set new collect options.                                           
*-                                                                              
         COMMENT                   COPY COLLECT INFO TO PERM AREA               
         IF    CPFDUMP,BEGIN                                                    
         SET   CPFXDUMP                                                         
         MVC   CPXDPLN,=F'-1000'                                                
         MVC   CPXDPNLN,CPDMPLST                                                
         MVC   CPXDPDLT,CPDMPDLT                                                
         MVC   CPXDPACT,CPACTNO                                                 
         IF    CPDMPLST.X'80',BEGIN  IF COLLECT INFO INVALID,,                  
         VCALL ENDLNO                WE CALCULATE OUR OWN                       
         IF    NL,BEGIN                                                         
         ST    R0,CPXDPNLN                                                      
         MVC   CPXDPDLT,CPDELTA                                                 
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   ALL OK                                       
         CLEAR R15                                                              
         END   ,                   END OF VALID ARGS                            
*                                                                               
         COMMENT                   EXIT                                         
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
*                                                                               
*  DUMP SCAN STUFF                                                              
*                                                                               
PCOLXPRT SCKW  ,PCOLSCNX                                                        
*                                                                               
PCOLYPRT SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,PCOLSCNY                                                        
*                                                                               
         USING PCOLWA,R4                                                        
PCOLSCNX PROC  ,                   MARK SHADOW BUFFER WITH 'X'                  
         LA    R2,PCOLSSTR          CALCULATE SHADOW BUFFER ADDR                
         SR    R1,R2                                                            
         LA    R2,PCOLBUF1                                                      
         AR    R1,R2                                                            
         AR    R0,R1                                                            
         WHILE (R1,LT,R0),BEGIN                                                 
         MVI   @R1,C'X'            MARK TOKEN WITH 'X'S                         
         INCR  R1                                                               
         END                                                                    
         PEND                                                                   
*                                                                               
PCOLSCNY PROC  ,                    MARK SHADOW BUFFER WITH 'Y'                 
         LA    R2,PCOLSSTR          CALCULATE SHADOW BUFFER ADDR                
         SR    R1,R2                                                            
         LA    R2,PCOLBUF1                                                      
         AR    R1,R2                                                            
         AR    R0,R1                                                            
         WHILE (R1,LT,R0),BEGIN                                                 
         MVI   @R1,C'Y'            MARK TOKEN WITH 'Y'S                         
         INCR  R1                                                               
         END                                                                    
         PEND                                                                   
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  COLLECT SET INFO                                                             
*                                                                               
*  THIS INFORMATION WILL BE USED ONLY IF XDUMP FLAG IS SET.                     
*                                                                               
*                                                                               
*                                                                               
PCCOLSET PROC                                                                   
*                                                                               
         COMMENT                   CHECK ARGS                                   
         SETARGS '44WWWI'                                                       
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET, THEN SET INFO                           
         WITH  (VNENTRY,R5),BEGIN                                               
         COMMENT                   LAST LINE DUMPED, ALWAYS SET TO              
         MVC   CPXDPLN,=F'-1000'   NONE (-1.000)                                
         LA    R5,ARG2(R1)         NEXT LINENO FOR DUMP                         
         L     R2,VNVALUE                                                       
         ST    R2,CPXDPNLN                                                      
         LA    R5,ARG3(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,CPXDPDLT         DELTA                                        
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,CPXDPACT         ACTIVE FILE NUMBER                           
         END                                                                    
*                                                                               
         END   , OF VALID ARGS                                                  
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  COMPARE_LINES ( LINENO1 , LINENO2 [,ACTNO1 , ACTNO2] )                       
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
CLWA     RECORD BEGIN                                                           
         XSA   R0,R8                                                            
CLLNO1   DS    F                   START OF 1ST RANGE                           
CLLNO2   DS    F                   START OF 2ND RANGE                           
CLACTNO1 DS    F                   ACTIVE FILE NUMBER 1                         
CLACTNO2 DS    F                   ACTIVE FILE NUMBER 2                         
CLNDX1   DS    F                   INDEX INTO 1ST RANGE                         
CLCNT1   DS    F                   COUNT OF LINES IN 1ST BUFFER                 
CLLEN1   DS    F                   LENGTH OF DATA IN 1ST BUFFER                 
CLBUF1   DS    F                   ADDRESS OF 1ST BUFFER                        
CLBUF1A  DS    F                   ADDRESS OF 1ST BUFFER LINE NOS               
CLNDX2   DS    F                   INDEX INTO 2ND RANGE                         
CLCNT2   DS    F                   COUNT OF LINES IN 2ND BUFFER                 
CLLEN2   DS    F                   LENGTH OF DATA IN 2ND BUFFER                 
CLBUF2   DS    F                   ADDRESS OF 2ND BUFFER                        
CLBUF2A  DS    F                   ADDRESS OF 2ND BUFFER LINE NOS               
CLRETPTR DS    F                   RETURN PARAMETER AREA POINTER                
CLTEMPLN DS    F                   TEMP LINENO                                  
CLTEMPBF DS    CL(&LINESZ)         TEMP BUFFER                                  
CLNOMAT1 DS    F                   NON MATCHING LINENO #1                       
CLNOMAT2 DS    F                   NON MATCHING LINENO #2                       
CLMAXCNT EQU   100                 BUFFER 100 LINES AT A TIME                   
CLBUFSZ  EQU   8192                TEXT BUFFER SIZE                             
CLLBUFSZ EQU   512                 LINE BUFFER SIZE                             
         DS    0S(CLLBUFSZ-((CLMAXCNT*4)+16))                                   
         END                                                                    
*                                                                               
*                                                                               
PCCOMPL  PROC  CLWA                                                             
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '24WWII'          2 ARGS: BOTH LINE NUMBERS                    
         BNZ   CLDONE              2 OPTIONAL ARGS: BOTH INTEGERS               
         ST    R6,CLRETPTR                                                      
*                                                                               
         COMMENT                   GET LINE NUMBERS                             
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,CLLNO1                                                        
         LA    R5,ARG2(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,CLLNO2                                                        
*                                                                               
         COMMENT                   GET ACTIVE FILE NUMBERS, IF ANY              
         CLEAR CLACTNO1            ASSUME NONE                                  
         CLEAR CLACTNO2                                                         
         IF    (R0,EQ,3),BEGIN                                                  
         TSEG  'Both (if any) active file numbers must be used.',,CR            
         BADARG 3                                                               
         EXIT   PCCOMPL                                                         
         END                                                                    
         IF    (R0,EQ,4),BEGIN                                                  
         LA    R5,ARG3(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,CLACTNO1                                                      
         IF    (R2,NP),BEGIN                                                    
         BADARG 3                                                               
         EXIT   PCCOMPL                                                         
         END                                                                    
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,CLACTNO2                                                      
         IF    (R2,NP),BEGIN                                                    
         BADARG 4                                                               
         EXIT   PCCOMPL                                                         
         END                                                                    
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   CHECK FOR VOID/EQUIVALENT RANGES             
         MVC   CLTEMPLN,CLLNO1                                                  
         LA    R1,CLTEMPBF                                                      
         LA    R2,CLTEMPLN                                                      
         L     R3,CLACTNO1                                                      
         VCALL GTFRST                                                           
         IF    NZ,BEGIN                                                         
         TSEG  'No lines in range.'                                             
         LA    R15,4                                                            
         B     CLDONE                                                           
         END                                                                    
         MVC   CLTEMPLN,CLLNO2                                                  
         LA    R1,CLTEMPBF                                                      
         LA    R2,CLTEMPLN                                                      
         L     R3,CLACTNO2                                                      
         VCALL GTFRST                                                           
         IF    NZ,BEGIN                                                         
         TSEG  'No lines in range.'                                             
         LA    R15,4                                                            
         B     CLDONE                                                           
         END                                                                    
*                                                                               
         COMMENT                   GET COMPARE BUFFERS                          
         L     R1,=AL4(CLBUFSZ)                                                 
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,CLBUF1                                                        
         L     R1,=AL4(CLLBUFSZ)                                                
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,CLBUF1A                                                       
         L     R1,=AL4(CLBUFSZ)                                                 
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,CLBUF2                                                        
         L     R1,=AL4(CLLBUFSZ)                                                
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,CLBUF2A                                                       
*-                                                                              
*-       COMPARE LOOP  (BUFFERED COMPARES)                                      
*-                                                                              
         COMMENT                   LOOP COMPARING RANGES                        
         COMMENT                                                                
         MVC   CLNDX1,CLLNO1       SET UP LOOP LINE INDEXES                     
         MVC   CLNDX2,CLLNO2                                                    
         CLEAR R15                                                              
         WHILE (R15,Z),BEGIN       WHILE RANGES COMPARE, CONTINUE               
*                                                                               
         COMMENT                   READ IN BUFFER #1                            
         L     R0,CLNDX1           SEE READBUF ROUTINE COMMENTS                 
         L     R1,CLBUF1                                                        
         L     R2,CLBUF1A                                                       
         L     R3,=A(CLBUFSZ)                                                   
         LA    R4,CLMAXCNT                                                      
         CLEAR R5                                                               
         L     R6,CLACTNO1                                                      
         L     R15,=X'FD000000'                                                 
         ACALL READBUF                                                          
         ST    R0,CLLEN1                                                        
         ST    R1,CLCNT1                                                        
         A     R2,=F'1'                                                         
*        VCALL ADDER               LINENO BUMPED ABOVE                          
         ST    R2,CLNDX1                                                        
*                                                                               
         COMMENT                   READ IN BUFFER #2                            
         L     R0,CLNDX2           SEE READBUF ROUTINES COMMENTS                
         L     R1,CLBUF2                                                        
         L     R2,CLBUF2A                                                       
         L     R3,=A(CLBUFSZ)                                                   
         LA    R4,CLMAXCNT                                                      
         CLEAR R5                                                               
         L     R6,CLACTNO2                                                      
         L     R15,=X'FE000000'                                                 
         ACALL READBUF                                                          
         ST    R0,CLLEN2                                                        
         ST    R1,CLCNT2                                                        
         A     R2,=F'1'                                                         
*        VCALL ADDER               LINENO BUMPED ABOVE                          
         ST    R2,CLNDX2                                                        
*                                                                               
         COMMENT                   CHECK FOR NULL RANGES                        
         COMMENT ,                 (NULL RANGES TREATED AS FAILED               
         COMMENT ,                  COMPARE.)                                   
         IF    ((CLLEN1,EQ,0),AND,(CLLEN2,EQ,0)),BEGIN                          
         L     R0,=F'-1000'                                                     
         L     R1,=F'-1000'                                                     
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   COMPARE RANGE                                
         ELSE  BEGIN               (IF RANGES NOT NULL)                         
         L     R0,CLBUF1                                                        
         L     R1,CLLEN1                                                        
         L     R2,CLBUF2                                                        
         L     R3,CLLEN2                                                        
         L     R4,CLBUF1A                                                       
         L     R5,CLBUF2A                                                       
         ACALL COMPRBUF                                                         
         END   , OF NON-NULL RANGES                                             
         END   , OF LOOP COMPARING LINES                                        
*                                                                               
         COMMENT                   RETURN COMPARE VALUES                        
         L     R6,CLRETPTR                                                      
         ST    R0,CLNOMAT1                                                      
         ST    R1,CLNOMAT2                                                      
         PRETVAL 1,LINENO,L:CLNOMAT1                                            
         PRETVAL 2,LINENO,L:CLNOMAT2                                            
         CLEAR R15                                                              
*                                                                               
         COMMENT                   RETURN BUFFERS TO STACK                      
         L     R1,=AL4(CLBUFSZ)                                                 
         XPOP  ,,(R1)                                                           
         L     R1,=AL4(CLLBUFSZ)                                                
         XPOP  ,,(R1)                                                           
         L     R1,=AL4(CLBUFSZ)                                                 
         XPOP  ,,(R1)                                                           
         L     R1,=AL4(CLLBUFSZ)                                                
         XPOP  ,,(R1)                                                           
*                                                                               
*                                                                               
CLDONE   LABEL ,                                                                
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DIALOG(type, message-string, prompt-string, option-string,                   
*               returned-text, rc)                                              
*                                                                               
*    Do terminal input dialog.                                                  
*                                                                               
DWA      RECORD BEGIN                                                           
DWAID    DS    C'DWA'              Self identification                          
*                                                                               
DWAFLAG  FLAG                                                                   
*                                                                               
DWAARGP  DS    A                   Argument list ptr                            
DWANARGS DS    F                   Number of args passed                        
*-                                                                              
*-       SAMDIALG parameter list.                                               
*-                                                                              
DWAPARMS DS    0F                  SAMDIALG parameter list...                   
DWADPTYP DS    2A                  [Order]  Type text len, loc                  
DWADPMSG DS    2A                  [Order]  Message text len, loc               
DWADPPRM DS    2A                  [Order]  Prompt text len, loc                
DWADPOPT DS    2A                  [Order]  Option text len, loc                
DWADPRC  DS    2A                  [Order]  Return code text ptrs               
DWADPRT  DS    2A                  [Order]  Return text ptrs                    
*                                                                               
DWARC    DS    CL128               Return code area                             
DWATEXT  DS    CL256               Return text area                             
         END                                                                    
*-                                                                              
PCDIALOG PROC  DWA                                                              
         CLEAR DWA                                                              
         MVC   DWA(3),=C'DWA'                                                   
*                                                                               
         ST    R0,DWANARGS         Number of arguments                          
         ST    R1,DWAARGP          Arglist ptr                                  
         LA    R2,DWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '46SSSSSS'        4-6 args: all strings                        
         BNZ   DLGEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         IF    (DWANARGS,GE,6),BEGIN                                            
         PRETVAL 5,STRING,0,0      Pre-set null string (neatness)               
         END                                                                    
*-                                                                              
*-       Build Dialog parameter list.                                           
*-                                                                              
         LA    R5,ARG1                                                          
         A     R5,DWAARGP          1st argument: dialog type                    
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         STM   R0,R1,DWADPTYP                                                   
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,DWAARGP          2st argument: message text                   
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         STM   R0,R1,DWADPMSG                                                   
*                                                                               
         LA    R5,ARG3                                                          
         A     R5,DWAARGP          3st argument: prompt text                    
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         STM   R0,R1,DWADPPRM                                                   
*                                                                               
         LA    R5,ARG4                                                          
         A     R5,DWAARGP          4st argument: option text                    
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         STM   R0,R1,DWADPOPT                                                   
*                                                                               
         SETMSG DWARC                                                           
         STM   R0,R1,DWADPRC       Save return code ptrs                        
*                                                                               
         SETMSG DWATEXT                                                         
         STM   R0,R1,DWADPRT       Save return text ptrs                        
*                                                                               
         LA    R1,DWAPARMS         Parameter list                               
         VCALL SAMDIALG            Do Samson dialog                             
         IF    Z,BEGIN             Normal completion...                         
         PRETVAL 5,STRING,(R1),(R0)  Return text                                
         SETMSG 'OK'                                                            
         END                                                                    
*                                                                               
         PRETVAL 6,STRING,(R1),(R0)  Return code                                
*                                                                               
DLGEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DOM(wto-id)                                                                  
*                                                                               
*    Delete a previously written WTO (see SYSCALL WTO).                         
*                                                                               
PCDOM    PROC                                                                   
*                                                                               
         SETARGS '11I'             1 arg: num                                   
         BNZ   DOMEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
*-                                                                              
*-       Do DOM.                                                                
*-                                                                              
         L     R1,VNVALUE          Get WTO id                                   
         DOM   MSG=(1)             Delete it                                    
*                                                                               
         CLEAR R15                 A-ok                                         
DOMEXIT  PEND                                                                   
         EJECT                                                                  
KWA      RECORD BEGIN                                                           
KWAARGP  DS    A                   Argument list ptr                            
KWANARGS DS    F                   Number of args passed                        
*                                                                               
KWAKEY   DS    CL64                Key                                          
KWAUREQ  DS    XL(L'UIDREC)        Userid record                                
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  KEY_DELETE(key, option-string, rc)                                           
*                                                                               
*    Delete a keyed record from the keys master file.                           
*                                                                               
PCKEYDEL PROC  KWA                                                              
         LA    R4,KWA                                                           
         USING KWA,R4                                                           
         SCPUSH ,                                                               
         ST    R0,KWANARGS         Number of arguments                          
         ST    R1,KWAARGP          Arglist ptr                                  
*                                                                               
         SETARGS '13SSS'           1-3 args: str, str, str                      
         BNZ   PKGEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*-                                                                              
*-       Pre-set returned values.                                               
*-                                                                              
         IF    (KWANARGS,GE,3),BEGIN  Optional returned values...               
         PRETVAL 3,STRING,0,0      Pre-set null string                          
         END                                                                    
*-                                                                              
*-       Scan KEY_DELETE options.                                               
*-                                                                              
         LA    R5,ARG2                                                          
         A     R5,KWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         SCAN  PKDPRT              Scan KEY_DELETE options                      
         IF    (R15,NZ),PKDERR                                                  
*-                                                                              
*-       This is a privileged SYSCALL.                                          
*-                                                                              
         IF    ^CPFXAUTH,BEGIN     Caller isn't authorized...                   
         SETMSG 'PRIVILEGED'                                                    
         B     PKDRET                                                           
         END                                                                    
*-                                                                              
*-       Get KEY.                                                               
*-                                                                              
         LA    R5,ARG1                                                          
         A     R5,KWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         VCALL LRTRIM                                                           
         IF    (R0,GT,L'KWAKEY),BEGIN                                           
         SETMSG 'KEY IS TOO LONG'                                               
         B     PKDRET                                                           
         END                                                                    
*                                                                               
         MVC   KWAKEY,CVBLANKS     Pre-blank                                    
         LR    R2,R0                                                            
         MOVE  R2,KWAKEY,@R1       Save KEY data                                
*-                                                                              
*-       Now delete the record.                                                 
*-                                                                              
         LA    R2,KWAUREQ                                                       
         WITH  (UIDREC,R2),BEGIN                                                
         MVC   UIDKEY,KWAKEY                                                    
         SETMSG UIDREC              Here's the transaction address              
         END                                                                    
         IC    R2,=C'U'            Select USERID record file                    
         VCALL KEYDEL              Delete the record                            
         IF    Z,'SETMSG "OK"'                                                  
         ELSE  BEGIN               Trouble...                                   
         SETMSG 'ERROR'                                                         
         IF    (R15,EQ,-3),'SETMSG "KEYS FILE IS NOT AVAILABLE"'                
         IF    (R15,EQ,-2),'SETMSG "RECORD FORMAT ERROR"'                       
         IF    (R15,EQ,-1),'SETMSG "I/O ERROR"'                                 
         IF    (R15,EQ,1),'SETMSG "RECORD NOT FOUND"'                           
         END                                                                    
*                                                                               
         B     PKDRET                                                           
*                                                                               
PKDERR   SETMSG 'INVALID OPTION'                                                
         B     PKDRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PKDRET   IF    (KWANARGS,GE,3),BEGIN  Return the return code...                 
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PKDEXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
PKDPRT   SCKW  ,PKDBAD                                                          
*                                                                               
PKDBAD   DPROC ,                                                                
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  KEY_GET(key, data, option-string, update-count, rc)                          
*                                                                               
*    Get a keyed record from the keys master file.                              
*                                                                               
PCKEYGET PROC  KWA                                                              
         SCPUSH ,                                                               
         ST    R0,KWANARGS         Number of arguments                          
         ST    R1,KWAARGP          Arglist ptr                                  
*                                                                               
         SETARGS '25SSSIS'         2-5 args: str, str, str, num, str            
         BNZ   PKGEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*-                                                                              
*-       Pre-set returned values.                                               
*-                                                                              
         PRETVAL 2,STRING,0,0      Pre-set null string                          
*                                                                               
         IF    (KWANARGS,GE,4),BEGIN  Optional returned values...               
         PRETVAL 4,INTEGER,L:=F'-1'  Pre-set -1                                 
         IF    (KWANARGS,LT,5),EXIT                                             
         PRETVAL 5,STRING,0,0      Pre-set null string                          
         END                                                                    
*-                                                                              
*-       Scan KEY_GET options.                                                  
*-                                                                              
         LA    R5,ARG3                                                          
         A     R5,KWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         SCAN  PKGPRT              Scan KEY_GET options                         
         IF    (R15,NZ),PKGERR                                                  
*-                                                                              
*-       This is a privileged SYSCALL.                                          
*-                                                                              
         IF    ^CPFXAUTH,BEGIN     Caller isn't authorized...                   
         SETMSG 'PRIVILEGED'                                                    
         B     PKGRET                                                           
         END                                                                    
*-                                                                              
*-       Get KEY.                                                               
*-                                                                              
         LA    R5,ARG1                                                          
         A     R5,KWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         VCALL LRTRIM                                                           
         IF    (R0,GT,L'KWAKEY),BEGIN                                           
         SETMSG 'KEY IS TOO LONG'                                               
         B     PKGRET                                                           
         END                                                                    
*                                                                               
         MVC   KWAKEY,CVBLANKS     Pre-blank                                    
         LR    R2,R0                                                            
         MOVE  R2,KWAKEY,@R1       Save KEY data                                
*-                                                                              
*-       Now read the data (if any).                                            
*-                                                                              
         LA    R2,KWAUREQ                                                       
         WITH  (UIDREC,R2),BEGIN                                                
         MVC   UIDKEY,KWAKEY                                                    
         SETMSG UIDREC              Here's the transaction address              
         LR    R2,R0                                                            
         LR    R3,R1                                                            
         IC    R4,=C'U'                                                         
         VCALL KEYGET              Get record                                   
         IF    NZ,BEGIN            Trouble...                                   
         SETMSG 'ERROR'                                                         
         IF    (R15,EQ,-3),'SETMSG "KEYS FILE IS NOT AVAILABLE"'                
         IF    (R15,EQ,-2),'SETMSG "RECORD FORMAT ERROR"'                       
         IF    (R15,EQ,-1),'SETMSG "I/O ERROR"'                                 
         IF    (R15,EQ,1),'SETMSG "RECORD NOT FOUND"'                           
         B     PKGRET                                                           
         END                                                                    
*                                                                               
         LA    R2,KWAUREQ          Point at returned record                     
         LH    R0,UIDULEN          Get data length                              
         LA    R1,UIDUDATA         Point to data                                
         LH    R3,UIDUC            Also, get update count if needed             
         END   ,                   We're through with this data area...         
*                                                                               
         PRETVAL 2,STRING,(R1),(R0)  Record data                                
         IF    (KWANARGS,GE,4),BEGIN  Return the update count...                
         PRETVAL 4,INTEGER,(R3)      Update count                               
         END                                                                    
*                                                                               
         SETMSG 'OK'                  Return code                               
         B     PKGRET                                                           
*                                                                               
PKGERR   SETMSG 'INVALID OPTION'                                                
         B     PKGRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PKGRET   IF    (KWANARGS,GE,5),BEGIN  Return the return code...                 
         PRETVAL 5,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PKGEXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
PKGPRT   SCKW  ,PKGBAD                                                          
*                                                                               
PKGBAD   DPROC ,                                                                
         LA    R15,4                                                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  KEY_PUT(key, data, option-string, update-count, rc)                          
*                                                                               
*    Add/Update a keyed record in the keys master file.                         
*                                                                               
PCKEYPUT PROC  KWA                                                              
         SCPUSH ,                                                               
         ST    R0,KWANARGS         Number of arguments                          
         ST    R1,KWAARGP          Arglist ptr                                  
*                                                                               
         SETARGS '25SSSIS'         2-5 args: str, str, str, num, str            
         BNZ   PKPEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*-                                                                              
*-       Pre-set returned values.                                               
*-                                                                              
         IF    (KWANARGS,GE,5),BEGIN  Optional returned values...               
         PRETVAL 5,STRING,0,0      Pre-set null string                          
         END                                                                    
*-                                                                              
*-       Scan KEY_PUT options.                                                  
*-                                                                              
         LA    R5,ARG3                                                          
         A     R5,KWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         SCAN  PKPPRT              Scan KEY_PUT options                         
         IF    (R15,NZ),PKPERR                                                  
*-                                                                              
*-       This is a privileged SYSCALL.                                          
*-                                                                              
         IF    ^CPFXAUTH,BEGIN     Caller isn't authorized...                   
         SETMSG 'PRIVILEGED'                                                    
         B     PKPRET                                                           
         END                                                                    
*-                                                                              
*-       Get KEY.                                                               
*-                                                                              
         LA    R5,ARG1                                                          
         A     R5,KWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         VCALL LRTRIM                                                           
         IF    (R0,GT,L'KWAKEY),BEGIN                                           
         SETMSG 'KEY IS TOO LONG'                                               
         B     PKPRET                                                           
         END                                                                    
*                                                                               
         MVC   KWAKEY,CVBLANKS     Pre-blank                                    
         LR    R2,R0                                                            
         MOVE  R2,KWAKEY,@R1       Save KEY data                                
*-                                                                              
*-       If the update count passed to us is zero, then we are                  
*-         to add a new record.                                                 
*-                                                                              
         LA    R5,ARG4                                                          
         A     R5,KWAARGP                                                       
         LT    R3,VNVALUE          Get update count                             
         IF    NEG,BEGIN           Error...                                     
         SETMSG 'BAD UPDATE COUNT'                                              
         B     PKPRET                                                           
         END                                                                    
*                                                                               
         LA    R2,KWAKEY           Key                                          
*                                                                               
* Get record data and store it in transaction buffer                            
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,KWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN  Record data                               
         LA    R2,KWAUREQ                                                       
         USING UIDREC,R2                                                        
         CLEAR UIDUDATA            Pre-initialize data area                     
         MVC   UIDEND,=C':END'     Set ending record id                         
         LR    R15,R0              Move data from caller's buffer               
         CEIL  R15,L'UIDUDATA                                                   
         STH   R15,UIDULEN                                                      
         LR    R14,R1                                                           
         LA    R0,UIDUDATA                                                      
         LA    R1,L'UIDUDATA                                                    
         MVCL  R0,R14                                                           
         MVC   UIDKEY,KWAKEY                                                    
         VCALL LOCALTOD            Set the time stamp                           
         ST    R0,UIDCLOCK                                                      
*-                                                                              
*-       Add/replace the record.                                                
*-                                                                              
         IF    (R3,Z),BEGIN                                                     
         MVC   UIDUC,=H'1'         Set initial update count                     
         SETMSG UIDREC              Here's the transaction address              
         IC    R2,=C'U'                                                         
         VCALL KEYADD                                                           
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R1,@R3+1            Kick update count                            
         N     R1,=A(X'7FFF')      Force non-negative number                    
         IF    Z,'LA R1,1'         Zero becomes one                             
         STH   R1,UIDUC                                                         
         SETMSG UIDREC              Here's the transaction address              
         IC    R2,=C'U'                                                         
         VCALL KEYPUT                                                           
         END                                                                    
         DROP  R2                                                               
*                                                                               
         SETMSG 'OK'                Assume OK                                   
         IF    (R15,NZ),BEGIN      Trouble...                                   
         SETMSG 'ERROR'                                                         
         IF    (R15,EQ,-3),'SETMSG "KEYS FILE IS NOT AVAILABLE"'                
         IF    (R15,EQ,-2),'SETMSG "RECORD FORMAT ERROR"'                       
         IF    (R15,EQ,-1),'SETMSG "I/O ERROR"'                                 
         IF    (R15,EQ,1),'SETMSG "RECORD NOT FOUND"'                           
         IF    (R15,EQ,2),'SETMSG "UPDATE COUNT MISMATCH"'                      
         IF    (R15,EQ,3),'SETMSG "RECORD ALREADY EXISTS"'                      
         IF    (R15,EQ,4),'SETMSG "KEYS FILE IS FULL"'                          
         END                                                                    
*                                                                               
         B     PKPRET                                                           
*                                                                               
PKPERR   SETMSG 'INVALID OPTION'                                                
         B     PKPRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PKPRET   IF    (KWANARGS,GE,5),BEGIN  Return the return code...                 
         PRETVAL 5,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PKPEXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
PKPPRT   SCKW  ,PKPBAD                                                          
*                                                                               
PKPBAD   DPROC ,                                                                
         LA    R15,4                                                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  KEY_REFRESH(key, option-string, rc)                                          
*                                                                               
*   Removed 9/17/98 by MPD. Since BDAM portion of KEYS                          
*   has been eliminated, this routine is no longer                              
*   necessary and will be totally eliminated when                               
*   we change the corresponding EXEC files which                                
*   call it.                                                                    
*                                                                               
PCKEYREF PROC  KWA                                                              
         LA    R4,KWA                                                           
         USING KWA,R4                                                           
         ST    R0,KWANARGS         Number of arguments                          
         SETMSG 'OK'                                                            
PKRRET   IF    (KWANARGS,GE,3),BEGIN  Return the return code...                 
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
         CLEAR R15                 A-ok                                         
         PEND                                                                   
         DROP  R4                                                               
         QLTORG                                                                 
         EJECT                                                                  
KLOGINWA RECORD BEGIN                                                           
KLGARGP  DS    A                   Argument list ptr                            
KLGNARGS DS    F                   Number of args passed                        
*                                                                               
KLGHEAP  DS    A                   Heap mark                                    
KLGCOUNT DS    F                   Returned list count (for GET)                
KLGUPDCT DS    F                   Update count                                 
KLGLEN   DS    F                   Total transaction length                     
KLGKEY   DS    CL6                 Key                                          
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  KLOGIN_DELETE(key, rc)                                                       
*                                                                               
*    Delete a keyed record from the KLOGIN file.                                
*                                                                               
PCKLGDEL PROC  KLOGINWA                                                         
         LA    R4,KLOGINWA                                                      
         USING KLOGINWA,R4                                                      
         SCPUSH ,                                                               
         ST    R0,KLGNARGS         Number of arguments                          
         ST    R1,KLGARGP          Arglist ptr                                  
*                                                                               
         SETARGS '12SS'            1-2 args: str, str                           
         BNZ   PKLGDXIT                                                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*-                                                                              
*-       Pre-set returned values.                                               
*-                                                                              
         IF    (KLGNARGS,EQ,2),BEGIN  Optional returned values...               
         PRETVAL 2,STRING,0,0      Pre-set null string                          
         END                                                                    
*-                                                                              
*-       This is a privileged SYSCALL.                                          
*-                                                                              
         IF    ^CPFXAUTH,BEGIN     Caller isn't authorized...                   
         SETMSG 'PRIVILEGED'                                                    
         B     PKLGDRET                                                         
         END                                                                    
*-                                                                              
*-       Get KEY.                                                               
*-                                                                              
         LA    R5,ARG1                                                          
         A     R5,KLGARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         VCALL LRTRIM                                                           
         IF    (R0,NE,L'KLGKEY),BEGIN                                           
         SETMSG 'KEY IS WRONG LENGTH'                                           
         B     PKLGDRET                                                         
         END                                                                    
*                                                                               
         LR    R2,R0                                                            
         MOVE  R2,KLGKEY,@R1       Save KEY data                                
*-                                                                              
*-       Now delete the KLOGIN record                                           
*-                                                                              
         LA    R2,L'KLGKEY+L'KLGLEN                                             
         ST    R2,KLGLEN                                                        
         LR    R0,R2                                                            
         LA    R1,KLGLEN                                                        
         IC    R2,=C'K'            Select KLOGIN record file                    
         VCALL KEYDEL              Delete the record                            
         IF    Z,'SETMSG "OK"'                                                  
         ELSE  BEGIN               Trouble...                                   
         SETMSG 'ERROR'                                                         
         IF    (R15,EQ,-3),'SETMSG "KLOGIN FILE IS NOT AVAILABLE"'              
         IF    (R15,EQ,-2),'SETMSG "RECORD FORMAT ERROR"'                       
         IF    (R15,EQ,-1),'SETMSG "I/O ERROR"'                                 
         IF    (R15,EQ,1),'SETMSG "RECORD NOT FOUND"'                           
         END                                                                    
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PKLGDRET IF    (KLGNARGS,EQ,2),BEGIN  Return the return code...                 
         PRETVAL 2,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PKLGDXIT SCPOP ,                                                                
         PEND                                                                   
         DROP  R4                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*   Convert KLOGIN list to array elements for KLOGIN_GET.                       
*                                                                               
*   This function converts the collapsed array obtained from                    
*   KLOGIN_GET into the elements of an array.                                   
*                                                                               
*   Inputs:                                                                     
*                                                                               
*     R0 - The length of the collapsed list                                     
*     R1 - The list                                                             
*     R2 - The array name descriptor.                                           
*                                                                               
*   Outputs:                                                                    
*                                                                               
*     R15 = 0 if the function was successful, non-zero if not.                  
*                                                                               
*     If successful:                                                            
*        R0 - Contains the number of elements created.                          
*                                                                               
MKLOGWA  RECORD BEGIN                                                           
MKLOGLEN DS    F                   Length                                       
MKLOGLPT DS    A                   List location                                
MKLOGARY DS    A                   Array name pointer                           
MKLOGDIM DS    F                   Array dimension                              
MKLOGCNT DS    F                   List element count                           
MKLOGTMP DS    XL(L'VPARM)         Work space                                   
         END  ,                                                                 
MKLOGLST PROC  MKLOGWA                                                          
         STM   R0,R2,MKLOGLEN                                                   
         LR    R5,R2                                                            
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         CLEAR MKLOGCNT                                                         
         CLEAR R3                                                               
         LR    R4,R1                                                            
*                                                                               
         WHILE (R3,LT,MKLOGLEN),BEGIN                                           
         LC    R0,@R4              Get length of next item                      
         LA    R4,1(,R4)            and location of element                     
         LR    R1,R4                                                            
         AR    R3,R0               Update total length processed                
         LA    R3,1(,R3)                                                        
         AR    R4,R0               Now point to next element                    
         LA    R2,MKLOGTMP                                                      
         VCALL VSTRING             Make a string variable                       
         LA    R1,MKLOGTMP                                                      
         LR    R2,R5                                                            
         INCR  R15,MKLOGCNT        Element subscript                            
         STH   R15,VNASUB1                                                      
         CLEAR R0                                                               
         VCALL SAVEVAR                                                          
         IF    NZ,EXIT                                                          
         END                                                                    
*                                                                               
         L     R0,MKLOGCNT                                                      
*                                                                               
         PRETURN (R0)             Return element count                          
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  KLOGIN_GET(key, data_array, list_count, update-count, rc)                    
*                                                                               
*    Get a KLOGIN record from the keys master file.                             
*                                                                               
PCKLGGET PROC  KLOGINWA                                                         
         SCPUSH ,                                                               
         ST    R0,KLGNARGS         Number of arguments                          
         ST    R1,KLGARGP          Arglist ptr                                  
*                                                                               
         SETARGS '35SXIIS'         3-5 args: str, array, num, num, str          
         BNZ   PKLGGXT                                                          
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,KLGARGP                                                       
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         IF    VNARRAY,BEGIN                                                    
         IF    VNASTR,BEGIN                                                     
         END                                                                    
         ELSE  BEGIN              arg 2 array base type not string              
         BADARG  2                                                              
         EXIT  PCKLGGET                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN              arg 2 not an array                            
         BADARG  2                                                              
         EXIT  PCKLGGET                                                         
         END                                                                    
*                                                                               
*-                                                                              
*-       Pre-set returned values.                                               
*-                                                                              
         PRETVAL 3,INTEGER,L:=F'0' List is initially empty                      
*                                                                               
         IF    (KLGNARGS,GE,4),BEGIN  Optional returned values...               
         PRETVAL 4,INTEGER,L:=F'-1'  Pre-set -1                                 
         IF    (KLGNARGS,LT,5),EXIT                                             
         PRETVAL 5,STRING,0,0      Pre-set null string                          
         END                                                                    
*-                                                                              
*-       This is a privileged SYSCALL.                                          
*-                                                                              
         IF    ^CPFXAUTH,BEGIN     Caller isn't authorized...                   
         SETMSG 'PRIVILEGED'                                                    
         B     PKLGGRET                                                         
         END                                                                    
*-                                                                              
*-       Get KEY.                                                               
*-                                                                              
         LA    R5,ARG1                                                          
         A     R5,KLGARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         VCALL LRTRIM                                                           
         IF    (R0,NE,L'KLGKEY),BEGIN                                           
         SETMSG 'KEY IS WRONG LENGTH'                                           
         B     PKLGGRET                                                         
         END                                                                    
*                                                                               
         LR    R2,R0                                                            
         MOVE  R2,KLGKEY,@R1       Save KEY data                                
*-                                                                              
*-       Now read the data (if any).                                            
*-                                                                              
         VCALL MARKHEAP                                                         
         ST    R15,KLGHEAP                                                      
         LA    R0,L'KRBREC+KRBMXDL#                                             
         VCALL GETHEAP                                                          
         LR    R2,R0                                                            
         LR    R3,R1                                                            
         USING KRBREC,R3                                                        
         LA    R0,L'KRBKEY+L'KRBLEN                                             
         ST    R0,KRBLEN                                                        
         MVC   KRBKEY,KLGKEY                                                    
         DROP  R3                                                               
         LA    R0,L'KRBREC+KRBMXDL#                                             
         LR    R2,R0                                                            
         IC    R4,=C'K'                                                         
         VCALL KEYGET              Get record                                   
         IF    NZ,BEGIN            Trouble...                                   
         SETMSG 'ERROR'                                                         
         IF    (R15,EQ,-3),'SETMSG "KLOGIN FILE IS NOT AVAILABLE"'              
         IF    (R15,EQ,-2),'SETMSG "RECORD FORMAT ERROR"'                       
         IF    (R15,EQ,-1),'SETMSG "I/O ERROR"'                                 
         IF    (R15,EQ,1),'SETMSG "RECORD NOT FOUND"'                           
         B     PKLGGRET                                                         
         END                                                                    
*                                                                               
         IF    (R0,GT,L'KRBREC+KRBMXDL#),BEGIN                                  
         L     R15,KLGHEAP                                                      
         VCALL RELHEAP                                                          
         SETMSG 'KLOGIN RECORD TOO LARGE'                                       
         B     PKLGGRET                                                         
         END                                                                    
*                                                                               
         LR    R2,R1               Point at returned record                     
         USING KRBREC,R2                                                        
         LH    R3,KRBUC                                                         
         ST    R3,KLGUPDCT                                                      
         L     R0,KRBLEN                                                        
         S     R0,=A(L'KRBREC)                                                  
         LA    R1,KRBLIST                                                       
         DROP  R2                                                               
         LA    R2,ARG2                                                          
         A     R2,KLGARGP                                                       
         ACALL MKLOGLST            Expand list to array                         
         ST    R0,KLGCOUNT         Save list count                              
         IF    NZ,BEGIN                                                         
         L     R15,KLGHEAP                                                      
         VCALL RELHEAP                                                          
         SETMSG 'ERROR CONVERTING LIST TO ARRAY'                                
         B     PKLGGRET                                                         
         END                                                                    
*                                                                               
         L     R15,KLGHEAP                                                      
         VCALL RELHEAP                                                          
*                                                                               
         L     R3,KLGCOUNT                                                      
         PRETVAL 3,INTEGER,(R3)    Return the list count                        
*                                                                               
         IF    (KLGNARGS,GE,4),BEGIN  Return the update count...                
         L     R3,KLGUPDCT                                                      
         PRETVAL 4,INTEGER,(R3)    Update count                                 
         END                                                                    
*                                                                               
         SETMSG 'OK'                Return code                                 
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PKLGGRET IF    (KLGNARGS,GE,4),BEGIN  Return the return code...                 
         PRETVAL 5,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PKLGGXT  SCPOP ,                                                                
         PEND                                                                   
         QLTORG ,                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*   Collapse string array for KLOGIN_PUT                                        
*                                                                               
*   This function collapses a string array in the format required               
*   for KLOGIN_PUT onto the heap.                                               
*                                                                               
*   Inputs:                                                                     
*                                                                               
*     R1 - Points to the array variable descriptor                              
*                                                                               
*   Outputs:                                                                    
*                                                                               
*     R15 = 0 if the function was successful, non-zero if not.                  
*                                                                               
*     If successful:                                                            
*        R0 - Contains the total length of the collapsed array                  
*             (note: the list could be empty - this will not                    
*                    be considered an error).                                   
*        R1 - Points to the collapsed array on the heap                         
*                                                                               
CLPSWA   RECORD BEGIN                                                           
CLPSDIM  DS    F                   # items in list                              
CLPSHEAP DS    A                   Pointer to collapsed list                    
CLPSHPSZ DS    F                   Size needed                                  
CLPSTEMP DS    XL(L'VPARM)         Work space                                   
         END  ,                                                                 
COLLAPSE PROC  CLPSWA                                                           
         LR    R5,R1                                                            
         WITH  (VNENTRY,R5),BEGIN                                               
         LH    R0,VNADIM1                                                       
         ST    R0,CLPSDIM                                                       
         END                                                                    
*                                                                               
*  Determine the size.                                                          
*                                                                               
         CLEAR R4                  Total size of list                           
         CLEAR R3                  List count                                   
         WHILE (R3,LT,CLPSDIM),BEGIN                                            
         LA    R1,1(,R3)           Subscript of element to get                  
         WITH  (VNENTRY,R5),'STH R1,VNASUB1'  Want this element                 
         LA    R1,CLPSTEMP         Element will go here                         
         LR    R2,R5               Array name                                   
         CLEAR R0                  Don't have array descriptor                  
         VCALL GETARRAY                                                         
         IF    NZ,'EXIT COLLAPSE'                                               
         LA    R2,CLPSTEMP                                                      
         USING VNENTRY,R2                                                       
         IF    (VNSTRLEN,EQ,=H'0'),EXIT                                         
         AH    R4,VNSTRLEN                                                      
         DROP  R2                                                               
         LA    R3,1(,R3)                                                        
         END                                                                    
*                                                                               
         IF    (R4,NZ),BEGIN                                                    
         AR    R4,R3               Add space for length bytes                   
         LA    R4,L'KRBREC(,R4)    Add space for KLOGIN record                  
         ST    R3,CLPSDIM          Save actual list count                       
         ST    R4,CLPSHPSZ           and size needed                            
         LR    R0,R4                                                            
         VCALL GETHEAP                                                          
         ST    R1,CLPSHEAP         Save address                                 
*                                                                               
         CLEAR R3                  List count                                   
         LA    R4,L'KRBREC(,R1)    First location for element storage           
         WHILE (R3,LT,CLPSDIM),BEGIN                                            
         LA    R1,1(,R3)           Subscript of element to get                  
         WITH  (VNENTRY,R5),'STH R1,VNASUB1'  Want this element                 
         LA    R1,CLPSTEMP         Element will go here                         
         LR    R2,R5               Array descriptor                             
         CLEAR R0                                                               
         VCALL GETARRAY                                                         
         IF    NZ,'EXIT COLLAPSE'                                               
         LA    R2,CLPSTEMP                                                      
         WITH  (VNENTRY,R2),'SETMSG VNSTRLOC,LH:VNSTRLEN'                       
         STC   R0,@R4                                                           
         LA    R4,1(,R4)                                                        
         LR    R2,R0                                                            
         MOVE  R2,@R4,@R1          Move in the element                          
         AR    R4,R0                 and point to the next slot                 
         LA    R3,1(,R3)                                                        
         END                                                                    
         END                                                                    
         ELSE  BEGIN               Empty list                                   
         CLEAR CLPSHPSZ                                                         
         CLEAR CLPSHEAP                                                         
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         L     R0,CLPSHPSZ                                                      
         L     R1,CLPSHEAP                                                      
*                                                                               
         PRETURN (R0,R1)           Return list length and location              
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  KLOGIN_PUT(key, data_array, update-count, rc)                                
*                                                                               
*    Add/Update a keyed record in the KLOGIN master file.                       
*                                                                               
PCKLGPUT PROC  KLOGINWA                                                         
         LA    R4,KLOGINWA                                                      
         USING KWA,R4                                                           
         SCPUSH ,                                                               
         ST    R0,KLGNARGS         Number of arguments                          
         ST    R1,KLGARGP          Arglist ptr                                  
*                                                                               
         SETARGS '24SXIS'          2-4 args: str, str, num, str                 
         BNZ   PKLGPXIT                                                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*-                                                                              
*-       Pre-set returned values.                                               
*-                                                                              
         IF    (KWANARGS,EQ,4),BEGIN  Optional returned values...               
         PRETVAL 4,STRING,0,0      Pre-set null string                          
         END                                                                    
*-                                                                              
*-       This is a privileged SYSCALL.                                          
*-                                                                              
         IF    ^CPFXAUTH,BEGIN     Caller isn't authorized...                   
         SETMSG 'PRIVILEGED'                                                    
         B     PKLGPRET                                                         
         END                                                                    
*-                                                                              
*-       Get KEY.                                                               
*-                                                                              
         LA    R5,ARG1                                                          
         A     R5,KLGARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         VCALL LRTRIM                                                           
         IF    (R0,NE,L'KLGKEY),BEGIN                                           
         SETMSG 'KEY IS WRONG LENGTH'                                           
         B     PKLGPRET                                                         
         END                                                                    
*                                                                               
         LR    R2,R0                                                            
         MOVE  R2,KLGKEY,@R1       Save KEY data                                
*-                                                                              
*-       Make sure the update count is valid.                                   
*-                                                                              
         LA    R5,ARG3                                                          
         A     R5,KLGARGP                                                       
         LT    R3,VNVALUE          Get update count                             
         IF    NEG,BEGIN           Error...                                     
         SETMSG 'BAD UPDATE COUNT'                                              
         B     PKLGPRET                                                         
         END                                                                    
         ST    R3,KLGUPDCT         Save it here                                 
*                                                                               
         LA    R2,KLGKEY           Key                                          
*                                                                               
* The KLOGIN list is passed as a string array.                                  
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,KLGARGP                                                       
*                                                                               
         IF    VNARRAY,BEGIN                                                    
         IF    VNASTR,BEGIN                                                     
         END                                                                    
         ELSE  BEGIN             arg 2 array base type not string               
         BADARG  2                                                              
         EXIT  PCKLGPUT                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN             arg 2 not an array                             
         BADARG  2                                                              
         EXIT  PCKLGPUT                                                         
         END                                                                    
*                                                                               
         VCALL MARKHEAP                                                         
         ST    R15,KLGHEAP                                                      
         LR    R1,R5               Collapse the array                           
         ACALL COLLAPSE                                                         
         IF    (R15,NZ),BEGIN                                                   
         SETMSG 'ERROR ACCESSING ARRAY'                                         
         B     PKLGPRET                                                         
         END                                                                    
         IF    (R0,Z),BEGIN                                                     
         SETMSG 'LIST IS EMPTY'                                                 
         B     PKLGPRET                                                         
         END                                                                    
*                                                                               
         LR    R2,R1                                                            
         LR    R3,R0                                                            
         USING KRBREC,R2                                                        
         ST    R3,KRBLEN           Save overall length                          
         MVC   KRBKEY,KLGKEY                                                    
         VCALL LOCALTOD            Set the time stamp                           
         ST    R0,KRBCLOCK                                                      
*-                                                                              
*-       Add/replace the record.                                                
*-                                                                              
         IF    (KLGUPDCT,Z),BEGIN                                               
         MVC   KRBUC,=H'1'         Set initial update count                     
         LR    R1,R2               Get transaction location and length          
         LR    R0,R3                                                            
         IC    R2,=C'K'                                                         
         VCALL KEYADD                                                           
         END                                                                    
         ELSE  BEGIN                                                            
         L     R1,KLGUPDCT                                                      
         LA    R1,@R1+1            Kick update count                            
         N     R1,=A(X'7FFF')      Force non-negative number                    
         IF    Z,'LA R1,1'         Zero becomes one                             
         STH   R1,KRBUC                                                         
         LR    R1,R2               Get transaction location and length          
         LR    R0,R3                                                            
         IC    R2,=C'K'                                                         
         VCALL KEYPUT                                                           
         END                                                                    
         DROP  R2                                                               
*                                                                               
         LR    R2,R15              Save this                                    
         L     R15,KLGHEAP                                                      
         VCALL RELHEAP             Free the transaction buffer                  
         LR    R15,R2                                                           
*                                                                               
         SETMSG 'OK'                Assume OK                                   
         IF    (R15,NZ),BEGIN      Trouble...                                   
         SETMSG 'ERROR'                                                         
         IF    (R15,EQ,-3),'SETMSG "KLOGIN FILE IS NOT AVAILABLE"'              
         IF    (R15,EQ,-2),'SETMSG "RECORD FORMAT ERROR"'                       
         IF    (R15,EQ,-1),'SETMSG "I/O ERROR"'                                 
         IF    (R15,EQ,1),'SETMSG "RECORD NOT FOUND"'                           
         IF    (R15,EQ,2),'SETMSG "UPDATE COUNT MISMATCH"'                      
         IF    (R15,EQ,3),'SETMSG "RECORD ALREADY EXISTS"'                      
         IF    (R15,EQ,4),'SETMSG "KLOGIN FILE IS FULL"'                        
         END                                                                    
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PKLGPRET IF    (KLGNARGS,EQ,4),BEGIN  Return the return code...                 
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PKLGPXIT SCPOP ,                                                                
         PEND                                                                   
         DROP  R4                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LINE_APPEND Procedure                                                        
*                                                                               
*  LINE_APPEND (text-string [, cc [, activeno]])                                
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF THIS MODULE                                         
*                                                                               
PCLNAPND PROC                                                                   
*                                                                               
         LR    R4,R0               R4 - arg count                               
         COMMENT                   R6 - return area pointer                     
*                                                                               
         SETARGS '13SSI'           1-3 args: str, str, int                      
         IF    Z,BEGIN             OK...                                        
         USING VNENTRY,R5                                                       
*                                                                               
         COMMENT                   GET ARG3: ACTIVE FILE NUMBER                 
         COMMENT ,                       (DEFAULT IS ZERO)                      
         CLEAR R3                                                               
         IF    (R0,GE,3),BEGIN                                                  
         LA    R5,ARG3(R1)                                                      
         L     R3,VNVALUE                                                       
         END                                                                    
*                                                                               
         COMMENT                   GET ARG1: TEXT                               
         LA    R5,ARG1(R1)                                                      
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         DROP  R5                                                               
*                                                                               
         COMMENT                   ADD THE LINE                                 
         COMMENT                                                                
         COMMENT                   R0,R1 - TEXT LOC, LENGTH                     
         COMMENT                   R3 - ACTIVE FILE NUMBER                      
         VCALL PTAPPEND  ,                                                      
         IF    Z,BEGIN                                                          
         IF    (R4,GE,2),BEGIN     IF CC SPECIFIED, RETURN IT                   
         PRETVAL 2,STRING,'OK'                                                  
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  LINE_FIRST(LINENO, STRING [,CC] [,ACTNO])                                    
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
*                                                                               
GTWA     RECORD BEGIN                                                           
GTPRMCNT DS    F                   PARM COUNT                                   
GTRETPTR DS    F                   RETURN PARM AREA                             
GTACTNO  DS    F                   ACTIVE FILE NUMBER                           
GTLNO    DS    F                   LINE NUMBER                                  
GTTEXT   DS    CL(&LINESZ)         LINE TEXT                                    
         END                                                                    
*                                                                               
*                                                                               
PCLNFRST PROC  GTWA                                                             
*                                                                               
         COMMENT                   SAVE ENTRY INFO                              
         ST    R0,GTPRMCNT         PARM COUNT                                   
         ST    R6,GTRETPTR         RETURN AREA POINTER                          
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '24WSSI'          2 TO 4 PARMS EXCEPTED                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET PARAMETERS                               
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE          PARM1 = LINE NUMBER                          
         ST    R2,GTLNO                                                         
         IF    (R0,EQ,4),BEGIN                                                  
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,GTACTNO          PARM4 = ACTIVE FILE NUMBER                   
         IF    (R2,NP),BEGIN                                                    
         BADARG 4                                                               
         EXIT  PCLNFRST                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         CLEAR GTACTNO                                                          
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   GET LINE                                     
         LA    R1,GTTEXT                                                        
         LA    R2,GTLNO                                                         
         L     R3,GTACTNO                                                       
         VCALL GTFRST                                                           
         IF    Z,BEGIN             GOT LINE OK, RETURN PARMS                    
         PRETVAL 2,STRING,(R1),(R0)                                             
         PRETVAL 1,LINENO,L:GTLNO                                               
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'OK'                                                  
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         PRETVAL 1,LINENO,L:=F'-1000'                                           
         CLEAR R1                                                               
         CLEAR R0                                                               
         PRETVAL 2,STRING,(R1),(R0)                                             
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'NOT FOUND'                                           
         END                                                                    
         END                                                                    
*                                                                               
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LINE_GET ( LINENO, STRING [,CC] [,ACTNO] )                                   
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
PCLNGET  PROC  GTWA                                                             
*                                                                               
         COMMENT                   SAVE ENTRY INFO                              
         ST    R0,GTPRMCNT         PARM COUNT                                   
         ST    R6,GTRETPTR         RETURN AREA POINTER                          
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '24WSSI'          2 TO 4 PARMS EXCEPTED                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET PARAMETERS                               
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE          PARM1 = LINE NUMBER                          
         ST    R2,GTLNO                                                         
         IF    (R0,EQ,4),BEGIN                                                  
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,GTACTNO          PARM4 = ACTIVE FILE NUMBER                   
         IF    (R2,NP),BEGIN                                                    
         BADARG 4                                                               
         EXIT  PCLNGET                                                          
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         CLEAR GTACTNO                                                          
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   GET LINE                                     
         LA    R1,GTTEXT                                                        
         LA    R2,GTLNO                                                         
         L     R3,GTACTNO                                                       
         VCALL GTLINE                                                           
         IF    Z,BEGIN             GOT LINE OK, RETURN PARMS                    
         PRETVAL 2,STRING,(R1),(R0)                                             
         PRETVAL 1,LINENO,L:GTLNO                                               
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'OK'                                                  
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         PRETVAL 1,LINENO,L:=F'-1000'                                           
         CLEAR R1                                                               
         CLEAR R0                                                               
         PRETVAL 2,STRING,(R1),(R0)                                             
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'NOT FOUND'                                           
         END                                                                    
         END                                                                    
*                                                                               
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  LINE_LAST ( LINENO, STRING [,CC] [,ACTNO] )                                  
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
*                                                                               
PCLNLAST PROC  GTWA                                                             
*                                                                               
         COMMENT                   SAVE ENTRY INFO                              
         ST    R0,GTPRMCNT         PARM COUNT                                   
         ST    R6,GTRETPTR         RETURN AREA POINTER                          
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '24WSSI'          2 TO 4 PARMS EXCEPTED                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET PARAMETERS                               
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE          PARM1 = LINE NUMBER                          
         ST    R2,GTLNO                                                         
         IF    (R0,EQ,4),BEGIN                                                  
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,GTACTNO          PARM4 = ACTIVE FILE NUMBER                   
         IF    (R2,NP),BEGIN                                                    
         BADARG 4                                                               
         EXIT  PCLNLAST                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         CLEAR GTACTNO                                                          
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   GET LINE                                     
         LA    R1,GTTEXT                                                        
         LA    R2,GTLNO                                                         
         L     R3,GTACTNO                                                       
         VCALL GTLAST                                                           
         IF    Z,BEGIN             GOT LINE OK, RETURN PARMS                    
         PRETVAL 2,STRING,(R1),(R0)                                             
         PRETVAL 1,LINENO,L:GTLNO                                               
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'OK'                                                  
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         PRETVAL 1,LINENO,L:=F'-1000'                                           
         CLEAR R1                                                               
         CLEAR R0                                                               
         PRETVAL 2,STRING,(R1),(R0)                                             
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'NOT FOUND'                                           
         END                                                                    
         END                                                                    
*                                                                               
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  LINE_NEXT ( LINENO, STRING [,CC] [,ACTNO] )                                  
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
*                                                                               
PCLNNEXT PROC  GTWA                                                             
*                                                                               
         COMMENT                   SAVE ENTRY INFO                              
         ST    R0,GTPRMCNT         PARM COUNT                                   
         ST    R6,GTRETPTR         RETURN AREA POINTER                          
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '24WSSI'          2 TO 4 PARMS EXCEPTED                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET PARAMETERS                               
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE          PARM1 = LINE NUMBER                          
         ST    R2,GTLNO                                                         
         IF    (R0,EQ,4),BEGIN                                                  
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,GTACTNO          PARM4 = ACTIVE FILE NUMBER                   
         IF    (R2,NP),BEGIN                                                    
         BADARG 4                                                               
         EXIT  PCLNNEXT                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         CLEAR GTACTNO                                                          
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   GET LINE                                     
         LA    R1,GTTEXT                                                        
         LA    R2,GTLNO                                                         
         L     R3,GTACTNO                                                       
         VCALL GTNEXT                                                           
         IF    Z,BEGIN             GOT LINE OK, RETURN PARMS                    
         PRETVAL 2,STRING,(R1),(R0)                                             
         PRETVAL 1,LINENO,L:GTLNO                                               
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'OK'                                                  
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         PRETVAL 1,LINENO,L:=F'-1000'                                           
         CLEAR R1                                                               
         CLEAR R0                                                               
         PRETVAL 2,STRING,(R1),(R0)                                             
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'NOT FOUND'                                           
         END                                                                    
         END                                                                    
*                                                                               
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  LINE_PREV ( LINENO, STRING [,CC] [,ACTNO] )                                  
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
*                                                                               
PCLNPREV PROC  GTWA                                                             
*                                                                               
         COMMENT                   SAVE ENTRY INFO                              
         ST    R0,GTPRMCNT         PARM COUNT                                   
         ST    R6,GTRETPTR         RETURN AREA POINTER                          
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '24WSSI'          2 TO 4 PARMS EXCEPTED                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET PARAMETERS                               
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE          PARM1 = LINE NUMBER                          
         ST    R2,GTLNO                                                         
         IF    (R0,EQ,4),BEGIN                                                  
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,GTACTNO          PARM4 = ACTIVE FILE NUMBER                   
         IF    (R2,NP),BEGIN                                                    
         BADARG 4                                                               
         EXIT  PCLNPREV                                                         
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         CLEAR GTACTNO                                                          
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   GET LINE                                     
         LA    R1,GTTEXT                                                        
         LA    R2,GTLNO                                                         
         L     R3,GTACTNO                                                       
         VCALL GTPREV                                                           
         IF    Z,BEGIN             GOT LINE OK, RETURN PARMS                    
         PRETVAL 2,STRING,(R1),(R0)                                             
         PRETVAL 1,LINENO,L:GTLNO                                               
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'OK'                                                  
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         PRETVAL 1,LINENO,L:=F'-1000'                                           
         CLEAR R1                                                               
         CLEAR R0                                                               
         PRETVAL 2,STRING,(R1),(R0)                                             
         IF    (GTPRMCNT,GE,3),BEGIN                                            
         PRETVAL 3,STRING,'NOT FOUND'                                           
         END                                                                    
         END                                                                    
*                                                                               
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LINE_PUT Procedure.                                                          
*                                                                               
*  LINE_PUT(lineno, text-string [, cc [, activeno]])                            
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF THIS MODULE                                         
*                                                                               
PCLNPUT  PROC                                                                   
*                                                                               
         LR    R4,R0               R4 - arg count                               
         COMMENT                   R6 - return area pointer                     
*                                                                               
         SETARGS '24WSSI'          2-4 args: lineno, str, str, int              
         IF    Z,BEGIN             OK...                                        
         USING VNENTRY,R5                                                       
*                                                                               
         COMMENT                   GET ARG1: LINE NUMBER                        
         LA    R5,ARG1(R1)                                                      
         LA    R2,VNVALUE                                                       
*                                                                               
         COMMENT                   GET ARG4: ACTIVE FILE NUMBER                 
         COMMENT ,                       (DEFAULT IS ZERO)                      
         CLEAR R3                                                               
         IF    (R0,GE,4),BEGIN                                                  
         LA    R5,ARG4(R1)                                                      
         L     R3,VNVALUE                                                       
         END                                                                    
*                                                                               
         COMMENT                   GET ARG2: TEXT                               
         LA    R5,ARG2(R1)                                                      
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         DROP  R5                                                               
*                                                                               
         COMMENT                   ADD THE LINE                                 
         COMMENT                                                                
         COMMENT                   R0,R1 - TEXT LOC, LENGTH                     
         COMMENT                   @R2 - LINE NUMBER                            
         COMMENT                   R3 - ACTIVE FILE NUMBER                      
         VCALL PTLINE                                                           
         IF    Z,BEGIN                                                          
         IF    (R4,GE,3),BEGIN     IF CC SPECIFIED, RETURN IT                   
         PRETVAL 3,STRING,'OK'                                                  
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*  WINGS LINE OFFSETS                                                           
*                                                                               
WGSLNHDR EQU   0,12                                                             
WGSLNLEN EQU   0,4                                                              
WGSLNLNO EQU   4,8                                                              
WGSLNTXT EQU   12                                                               
*                                                                               
WGSBKHDR EQU   0,16                                                             
WGSBKLEN EQU   4096                MAKE BIGGER !! (after testing)               
*                                                                               
*                                                                               
*  LINS_FROM_CLIENT                                                             
*                                                                               
*  GET LINES FROM CLIENT AND PUT THEM IN ACTIVE FILE                            
*  (USED FOR WINGS SAVE)                                                        
*                                                                               
*                                                                               
LFWA     RECORD BEGIN                                                           
LFPATHNO DS    F                                                                
LFPATHCB DS    F                                                                
LFBLK    DS    F                                                                
LFNDX    DS    F                                                                
LFLIM    DS    F                                                                
         END                                                                    
*                                                                               
*                                                                               
PCLFROMC XPROC LFWA                                                             
*                                                                               
         SETARGS '1II'                                                          
         IF    Z,BEGIN                                                          
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,LFPATHNO                                                      
*                                                                               
         COMMENT                   GET PATH CB                                  
         L     R0,LFPATHNO                                                      
         VCALL PATHGET                                                          
         ST    R1,LFPATHCB                                                      
*                                                                               
         COMMENT                   DO FIRST BLOCK READ                          
         L     R15,LFPATHCB                                                     
         VCALL PATHREAD                                                         
         IF    NZ,BEGIN                                                         
         ERROR (R1),(R0)                                                        
         END                                                                    
*                                                                               
         COMMENT                   LOOP THRU BLOCKS                             
         WHILE (@R1,EQ,'FILE_WRITE:     '),BEGIN                                
         ST    R1,LFBLK                                                         
         ST    R1,LFNDX                                                         
         AR    R0,R1                                                            
         ST    R0,LFLIM                                                         
         LA    R1,L'WGSBKHDR(R1)                                                
         ST    R1,LFNDX                                                         
         L     R4,LFNDX                                                         
         L     R5,LFLIM                                                         
         COMMENT                   LOOP THRU LINES IN BLOCK                     
         WHILE (R4,LT,R5),BEGIN                                                 
         LR    R1,R4                                                            
         ACALL WRTLINE             WRITE LINE @R1 TO ACTIVE FILE                
         A     R4,WGSLNLEN(R4)                                                  
         END                                                                    
         COMMENT                   READ NEXT BLOCK AND LOOP                     
         L     R15,LFPATHCB                                                     
         VCALL PATHREAD                                                         
         IF    NZ,BEGIN                                                         
         ERROR (R1),(R0)                                                        
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   WE SHOULD BE AT EOF                          
         IF    (@R1,NE,'FILE_EOF:       '),BEGIN                                
         ERROR 'WINGS protocol error.'                                          
         END                                                                    
*                                                                               
         END                                                                    
         PEND                                                                   
         DROP  R5                                                               
         EJECT                                                                  
*                                                                               
*   WRTLINE - WRITE LINE TO ACTIVE                                              
*                                                                               
*   R1 - WINGS FORMAT LINE                                                      
*        4 BYTES TOTAL LEN, 8 BYTES CHAR INTEGER LINE NUMBER,                   
*        N BYTES TEXT                                                           
*                                                                               
WRTLINE  PROC                                                                   
         LR    R4,R1               R4 - LINE POINTER                            
         LA    R1,WGSLNLNO(R4)                                                  
         LA    R0,L'WGSLNLNO                                                    
         VCALL GTINTVAL - RETURNS VAL IN R15                                    
         IF    NEG,BEGIN                                                        
         ERROR 'WINGS file format error.'                                       
         END                                                                    
         LA    R1,WGSLNTXT(R4)                                                  
         L     R0,WGSLNLEN(R4)                                                  
         S     R0,=AL4(L'WGSLNHDR)                                              
         VCALL PUTLINE                                                          
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  LINS_TO_CLIENT                                                               
*                                                                               
*  SEND LINES FROM ACTIVE FILE TO CLIENT                                        
*  (USED FOR WINGS USE)                                                         
*                                                                               
*                                                                               
LTWA     RECORD BEGIN                                                           
LTPATHNO DS    F                                                                
LTPATHCB DS    A                                                                
LTBKLOC  DS    A                                                                
LTBKLEN  DS    A                                                                
LTCSG    SEGCB                                                                  
         END                                                                    
*                                                                               
PCLTOC   XPROC LTWA                                                             
         LA    R6,LTWA                                                          
         USING LTWA,R6                                                          
         CLEAR LTWA                                                             
         ST    R6,CPCHAZ                                                        
*                                                                               
         SETARGS '1II'                                                          
         IF    Z,BEGIN                                                          
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,LTPATHNO                                                      
*                                                                               
         COMMENT                   GET PATH CB                                  
         L     R0,LTPATHNO                                                      
         VCALL PATHGET                                                          
         ST    R1,LTPATHCB                                                      
*                                                                               
         COMMENT                   SET UP SEG CB                                
         L     R0,=AL4(WGSBKLEN)                                                
         VCALL GETHEAP                                                          
         ST    R0,LTBKLEN                                                       
         ST    R1,LTBKLOC                                                       
         LA    R1,L'WGSBKHDR(R1)                                                
         S     R0,=AL4(L'WGSBKHDR)                                              
         SEGINIT (R1),(R0),LTCSG,RTNTYPE=A,RTN=LTSEG                            
*                                                                               
         COMMENT                   SET 'FILE_READ:    ' HEADER                  
         L     R1,LTBKLOC                                                       
         MVC   @R1(L'WGSBKHDR),=CL16'FILE_READ:      '                          
*                                                                               
         COMMENT                   READ ALL ACTIVE FILE                         
         SCPUSH                                                                 
         SCCLR                                                                  
         SET   CPLFLG1.CPFALL                                                   
         VCALL NDETRNG                                                          
         SCPOP                                                                  
*                                                                               
         COMMENT                   PROCESS RANGE                                
         RDRNG LTOCRTN,(LOCATRTN+UNPRST+DESRTRN)                                
*                                                                               
         COMMENT                   FORCE OUT ANY LAST BIT                       
         SEGWR ,,LTCSG                                                          
*                                                                               
         END                                                                    
         PEND                                                                   
         DROP  R5                                                               
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
*   CO ROUTINE --                                                               
*                                                                               
*   ON ENTRY:                                                                   
*        R1,R0 - TEXT LENGTH                                                    
*        CPLCNO - LINE NUMBER                                                   
*                                                                               
*                                                                               
LTOCWA   RECORD BEGIN                                                           
LTOCLINE DS    CL(&LINESZ*2)                                                    
         END                                                                    
*                                                                               
*                                                                               
LTOCRTN  PROC  LTOCWA                                                           
         L     R6,CPCHAZ                                                        
         USING LTWA,R6                                                          
*                                                                               
         COMMENT                   R4 - PLACE TO BUILD NEW LINE                 
         LA    R4,LTOCLINE                                                      
*                                                                               
         COMMENT                   MOVE IN TEXT                                 
         LR    R3,R0                                                            
         LA    R5,WGSLNTXT(R4)                                                  
         MOVE  R3,@R5,@R1                                                       
*                                                                               
         COMMENT                   GET TOTAL LENGTH                             
         LR    R3,R0                                                            
         A     R3,=AL4(L'WGSLNHDR)                                              
         ST    R3,WGSLNLEN(R4)                                                  
*                                                                               
         COMMENT                   STICK IN CHAR FORMAT LINE NO                 
         LA    R1,WGSLNLNO(R4)                                                  
         LA    R0,8                                                             
         L     R15,CPLCNO                                                       
         VCALL BTDZEROS                                                         
*                                                                               
         COMMENT                   SEG RESULTS                                  
         LA    R1,WGSLNLEN(R4)                                                  
         L     R0,WGSLNLEN(R4)                                                  
         SEG   (R1),(R0),LTCSG                                                  
         SEGMARK ,,LTCSG                                                        
*                                                                               
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*                                                                               
*                                                                               
*  LTSEG -- SEG PROCESSING ROUTINE TO HANDLE WRITING                            
*    DATE ACROSS A SUZAN PATH.                                                  
*                                                                               
*    ON ENTRY:                                                                  
*      R15 - SEGCB PTR                                                          
*                                                                               
*    ON EXIT:                                                                   
*      ERRORS EXIT VIA CVERROR.                                                 
*                                                                               
*                                                                               
LTSEG    XPROC                                                                  
*                                                                               
         L     R6,CPCHAZ                                                        
         USING LTWA,R6                                                          
*                                                                               
         LR    R5,R15                                                           
         WITH  (SEGCB,R5)                                                       
*                                                                               
*                                                                               
         COMMENT                   DO SEG WRITE OR OVERFLOW ...                 
         IF    (SEGCBWR,OR,SEGCBOVF),BEGIN                                      
         LTR   R2,R0               CURRENT BUFFER LENGTH                        
         IF    NP,EXIT             NOTHING TO WRITE, SCRAM                      
*                                                                               
         COMMENT                   GET PATH POINTER                             
         L     R15,LTPATHCB                                                     
         IF    (R15,Z),BEGIN                                                    
         ERROR 'WINGS path error.  Unable to send file.'                        
         END                                                                    
*                                                                               
         COMMENT                   WRITE TO PATH                                
         S     R1,=AL4(L'WGSBKHDR)                                              
         A     R0,=AL4(L'WGSBKHDR)                                              
         VCALL PATHWRIT                                                         
         IF    NZ,BEGIN                                                         
         ERROR 'WINGS path error.  Unable to send file.'                        
         END                                                                    
*                                                                               
         LCR   R0,R2               FOR OVERFLOW: NBYTES PROCESSED               
         PRETURN (R0)                                                           
         END                                                                    
*                                                                               
*                                                                               
         COMMENT                   DO SEG POST PROCESSING ...                   
         IF    SEGCBSPP,BEGIN                                                   
         CLEAR R0                  ASSUME A-OK                                  
*        IF    (UPATRCMP,NZ),'LA R0,4'  TROUBLE                                 
         PRETURN (R0)              RETURN THE RC                                
*        END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         PEND                                                                   
         DROP  R6                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SYSCALL MAIL_INFO (type-string, value-string, rc-string)                     
*                                                                               
*  Update record group used to pass recipient list to MAIL                      
*   command.  Used by EMS and the SMTP server exec.                             
*                                                                               
*  Record group keys are of the form xxxxxxxxnnnn, where                        
*   'nnnn' is a 4-digit number that is unique for each record.                  
*                                                                               
*  Arguments:                                                                   
*     type  - on entry, type of call.  Values are                               
*               INIT - initialize record group                                  
*               LIST - list record group contents                               
*               xxxx - add new record                                           
*     value - on entry, value to add to record group                            
*     rc    - on exit,  return code ('OK' or 'err text')                        
*                                                                               
MINFOWA  RECORD BEGIN                                                           
MINFARGC DS    F                   Argument count                               
MINFARGP DS    A                   Argument pointer                             
MINFARG1 DS    CL8                 Arg 1 value                                  
MINFKEY  DS    CL16                Record group key                             
MINFDATA DS    CL256               Data work area                               
         END                                                                    
*                                                                               
PCMINFO  PROC  MINFOWA                                                          
         CLEAR MINFOWA                                                          
         ST    R0,MINFARGC         Save arg count                               
         ST    R1,MINFARGP         Save arg pointer                             
*                                                                               
         SETARGS '13SSS'                                                        
         IF    NZ,PMINVARG                                                      
*                                                                               
         LA    R5,ARG1(R1)         Set up arg pointer                           
         WITH  (VNENTRY,R5),BEGIN                                               
         SETMSG VNSTRLOC,LH:VNSTRLEN  Get arg 1 len and loc                     
         END                                                                    
         IF    ((R0,Z),OR,(R0,GT,L'MINFARG1)),PMINVARG                          
         LR    R15,R0                                                           
         DEX   R15,'MVC MINFARG1,@R1'   Copy arg 1 text                         
         OC    MINFARG1,CVBLANKS        Upper case                              
*-                                                                              
*-       Process INIT call - reset record group                                 
*-                                                                              
         IF    (MINFARG1,EQ,'INIT '),BEGIN                                      
         LA    R15,CPRG16                                                       
         LA    R0,CP#MAIL          Our RG number                                
         VCALL XSETSET                                                          
         LA    R15,CPRG16                                                       
         VCALL XDELSET                                                          
         B     PMIRETOK                                                         
         END                                                                    
*-                                                                              
*-       Process LIST call - display record group contents                      
*-                                                                              
         IF    (MINFARG1,EQ,'LIST '),BEGIN                                      
         CLEAR R5                  Init loop counter                            
         LOOP  BEGIN                                                            
         LA    R15,CPRG16                                                       
         LA    R0,CP#MAIL          Our RG number                                
         VCALL XSETSET                                                          
*                                                                               
         SETMSG MINFDATA                                                        
         LA    R2,MINFKEY                                                       
         LA    R15,CPRG16                                                       
         IF    (R5,Z),BEGIN        If first iteration,                          
         CLEAR MINFKEY             Initialize key                               
         VCALL XGETFRST            Call for first record                        
         END                                                                    
         ELSE  BEGIN               Else not first iteration                     
         VCALL XGETNEXT            Get next record                              
         END                                                                    
         IF    (R15,NZ),EXIT       Exit if no more                              
         LR    R2,R0               Save returned length                         
         TSEG  MINFKEY,,TB         Write key                                    
         TSEG  MINFDATA,(R2),CR    Write value                                  
*                                                                               
         INCR  R5                  Incr loop count                              
         END                                                                    
*                                                                               
         IF    (R5,Z),BEGIN        If nothing found,                            
         TSEG  'Record group empty',,CR                                         
         END                                                                    
*                                                                               
         B     PMIRETOK                                                         
         END                                                                    
*-                                                                              
*-       Assume ARG1 is key, add new record                                     
*-                                                                              
         IF    (MINFARGC,LT,2),PMINVARG   Check arg count                       
*                                                                               
         LA    R15,CPRG16                                                       
         LA    R0,CP#MAIL          Our RG number                                
         VCALL XSETSET                                                          
*                                                                               
         MVI   MINFKEY,X'FF'       Set dummy key                                
         LA    R2,MINFKEY          Key area addr                                
         SETMSG MINFDATA            Data area addr                              
         LA    R15,CPRG16                                                       
         VCALL XGETLAST            Get last record                              
         IF    (R15,NZ),BEGIN         If none,                                  
         MVC   MINFKEY,CVBLANKS                                                 
         MVC   MINFKEY+L'MINFARG1(4),=C'0000'  Set dummy numeric value          
         END                                                                    
         DTB   MINFKEY+L'MINFARG1,4         Convert numeric part of key         
         INCR  R15                 Increment                                    
         BTD   MINFKEY+L'MINFARG1,4,(R15)   Build new numeric part              
         OC    MINFKEY+L'MINFARG1(3),=C'000'   Insure leading zeros             
         MVC   MINFKEY(L'MINFARG1),MINFARG1    Build XXXXXXXXnnnn key           
*                                                                               
         LA    R0,CP#MAIL          Our RG number                                
         LA    R15,CPRG16                                                       
         VCALL XSETSET                                                          
         L     R5,MINFARGP         Get argument pointer                         
         LA    R5,ARG2(R5)                                                      
         WITH  (VNENTRY,R5),BEGIN                                               
         SETMSG VNSTRLOC,LH:VNSTRLEN  Get arg 1 len and loc                     
         END                                                                    
         LA    R2,MINFKEY          Set key pointer                              
         LA    R15,CPRG16                                                       
         VCALL XPUT                Add record                                   
         IF    (R15,NZ),BEGIN      Check return                                 
         SETMSG 'XPUT ERROR'                                                    
         B     PMIRETRN                                                         
         END                                                                    
         B     PMIRETOK                                                         
         SPACE                                                                  
*-                                                                              
*-       Return points                                                          
*-                                                                              
PMINVARG SETMSG 'INVALID ARGUMENT'                                              
         B     PMIRETRN                                                         
*                                                                               
PMIRETOK SETMSG 'OK'                                                            
*                                                                               
PMIRETRN IF    (MINFARGC,GE,3),BEGIN   If have RC arg,                          
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
MSHDRWA  RECORD BEGIN                                                           
MSHINO   DS    F                   Item number                                  
MSHLNO   DS    F                   Line-number                                  
MSHLINE  DS    CL(&LINESZ)         Working line text                            
MSHNAMEP DS    2F                  Account loc, len                             
MSHSEP   DS    CL2                 Line separator characters                    
MSHSUBJP DS    2F                  Subject loc, len                             
*                                                                               
MSHSG    SEGCB                                                                  
MSHBUF   DS    CL(&LINESZ)         Working seg buffer                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  SYSCALL MS_BUILDHDR(lineno,return-string)                                    
*                                                                               
*    Special purpose SYSPROC to build an MS-style header from                   
*      a WYLBUR MAIL internal format header.                                    
*                                                                               
PCMSHDR  PROC  MSHDRWA                                                          
         CLEAR MSHDRWA                                                          
*                                                                               
         SETARGS '22WS'            2 args: lineno, string                       
         IF    Z,BEGIN                                                          
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         MVC   MSHLNO,VNVALUE      Save lineno                                  
*                                                                               
         SEGINIT MSHBUF,,MSHSG                                                  
*                                                                               
         L     R15,MSHLNO                                                       
         SETMSG MSHLINE                                                         
         VCALL GETLINE             Get first line                               
         BNZ   PCMHDONE            Trouble, forget it                           
         IF    ((R0,LT,10),OR,(@R1,NE,'*')),PCMHDONE                            
*                                                                               
         IF    (MSHLINE+20,EQ,'0'),'MVI MSHLINE+20,C" "'                        
         SEG   MSHLINE+20,5        mm/dd                                        
         SEG   CVBLANKS,2                                                       
*-                                                                              
*-       Isolate sender's account.                                              
*-                                                                              
         SETMSG MSHLINE+34,L'MSHLINE-34                                         
         WHILE ((R0,POS),AND,(@R1,NE,' ')),BEGIN                                
         IF    (@R1,EQ,':'),EXIT                                                
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
         XPUSH R0,R1                                                            
         LR    R0,R1                                                            
         LA    R1,MSHLINE+34                                                    
         SR    R0,R1                                                            
         STM   R0,R1,MSHNAMEP      Save account loc, len                        
         XPOP  R0,R1                                                            
*-                                                                              
*-       Isolate sender's name (if any).                                        
*-                                                                              
         IF    (R0,POS),BEGIN                                                   
         IF    (@R1,EQ,':'),BEGIN  No name is present...                        
         LA    R1,@R1+1            Skip past colon                              
         DECR  R0                                                               
         END                                                                    
*                                                                               
         ELSE  BEGIN               Name may be present...                       
         VCALL LRTRIM                                                           
         IF    (@R1,EQ,'"'),BEGIN  Name is present...                           
         LA    R1,@R1+1            Skip past "                                  
         DECR  R0                                                               
         LR    R2,R1                                                            
         WHILE ((R0,POS),AND,(@R1,NE,'":')),'LA R1,@R1+1; DECR R0'              
         XPUSH R0,R1                                                            
         LR    R0,R1                                                            
         LR    R1,R2                                                            
         SR    R0,R1                                                            
         VCALL LRTRIM                                                           
         IF    (R0,POS),BEGIN                                                   
         STM   R0,R1,MSHNAMEP      Save name ptrs                               
         END                                                                    
         XPOP  R0,R1                                                            
*                                                                               
         LA    R1,@R1+2                                                         
         SH    R0,=H'2'                                                         
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         STM   R0,R1,MSHSUBJP      Save subject loc, len                        
*-                                                                              
*-       Add sender's name (or account).                                        
*-                                                                              
         LM    R0,R1,MSHNAMEP                                                   
         CEIL  R0,20                                                            
         SEG   (R1),(R0)           Seg sender's name (or account)               
*-                                                                              
*-       Now build a subject line.                                              
*-                                                                              
         SEGCOL 30                 Enforce alignment                            
         LM    R0,R1,MSHSUBJP                                                   
         VCALL LRTRIM                                                           
         VCALL SQSHRTN                                                          
         SEG   (R1),(R0)                                                        
*-                                                                              
*-       Add the contents of message text lines to the subject.                 
*-                                                                              
         MVC   MSHSEP,=C'<<'       Start of text lines                          
*                                                                               
         WHILE (MSHSGLENF,LE,140),BEGIN  Keep adding stuff...                   
         INCR  R15,MSHLNO          Next lineno                                  
         SETMSG MSHLINE             Put line here                               
         VCALL GETLINE             Get line contents                            
         IF    NEG,EXIT            End of file, scram                           
         MVC   MSHLNO,CPLCNO       Update lineno                                
         IF    ((@R1,EQ,'*'),AND,(@R1+1,NE,'*')),EXIT  Next msg                 
         IF    (@R1,EQ,'**'),'LA R1,@R1+1; DECR R0'                             
         VCALL LRTRIM                                                           
         VCALL SQSHRTN             Compress multiple blanks                     
         XPUSH R0,R1                                                            
         SEGT  MSHSEP              Add separator first                          
         MVC   MSHSEP,=C'\ '                                                    
         XPOP  R0,R1                                                            
         SEG   (R1),(R0)           Text line                                    
         END                                                                    
*-                                                                              
*-     Return the formatted header line (or null if invalid format).            
*-                                                                              
PCMHDONE SETMSG L:MSHSGLOC,L:MSHSGLENF  Return string                           
         CEIL  R0,140              Not too long                                 
         PRETVAL 2,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  MATCH_LINES ( LINENO1 , LINENO2 [,ACTNO1 , ACTNO2] )                         
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
MLWA     RECORD BEGIN                                                           
         XSA   R0,R8                                                            
MLLNO1   DS    F                   START OF 1ST RANGE                           
MLLNO2   DS    F                   START OF 2ND RANGE                           
MLACTNO1 DS    F                   ACTIVE FILE NUMBER 1                         
MLACTNO2 DS    F                   ACTIVE FILE NUMBER 2                         
MLCNT1   DS    F                   COUNT OF LINES IN 1ST BUFFER                 
MLLEN1   DS    F                   LENGTH OF DATA IN 1ST BUFFER                 
MLBUF1   DS    F                   ADDRESS OF 1ST BUFFER                        
MLBUF1A  DS    F                   ADDRESS OF 1ST BUFFER LINE NOS               
MLCNT2   DS    F                   COUNT OF LINES IN 2ND BUFFER                 
MLLEN2   DS    F                   LENGTH OF DATA IN 2ND BUFFER                 
MLBUF2   DS    F                   ADDRESS OF 2ND BUFFER                        
MLBUF2A  DS    F                   ADDRESS OF 2ND BUFFER LINE NOS               
MLRETPTR DS    F                   RETURN PARAMETER AREA POINTER                
MLTEMPLN DS    F                   TEMP LINENO                                  
MLTEMPBF DS    CL(&LINESZ)         TEMP BUFFER                                  
MLNOMAT1 DS    F                   NON MATCHING LINENO #1                       
MLNOMAT2 DS    F                   NON MATCHING LINENO #2                       
MLMAXCNT EQU   1000                BUFFER 100 LINES AT A TIME                   
MLBUFSZ  EQU   24576               TEXT BUFFER SIZE                             
MLLBUFSZ EQU   4096                LINE BUFFER SIZE                             
         DS    0S(MLLBUFSZ-((MLMAXCNT*4)+16))                                   
         END                                                                    
*                                                                               
*                                                                               
PCMATCHL PROC  MLWA                                                             
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '24WWII'          2 ARGS: BOTH LINE NUMBERS                    
         BNZ   MLDONE              2 OPTIONAL ARGS: BOTH INTEGERS               
         ST    R6,MLRETPTR                                                      
*                                                                               
         COMMENT                   GET LINE NUMBERS                             
         USING VNENTRY,R5                                                       
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,MLLNO1                                                        
         LA    R5,ARG2(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,MLLNO2                                                        
*                                                                               
         COMMENT                   GET ACTIVE FILE NUMBERS, IF ANY              
         CLEAR MLACTNO1            ASSUME NONE                                  
         CLEAR MLACTNO2                                                         
         IF    (R0,EQ,3),BEGIN                                                  
         TSEG  'Both (if any) active file numbers must be used.',,CR            
         BADARG 3                                                               
         EXIT   PCMATCHL                                                        
         END                                                                    
         IF    (R0,EQ,4),BEGIN                                                  
         LA    R5,ARG3(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,MLACTNO1                                                      
         IF    (R2,NP),BEGIN                                                    
         BADARG 3                                                               
         EXIT   PCMATCHL                                                        
         END                                                                    
         LA    R5,ARG4(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,MLACTNO2                                                      
         IF    (R2,NP),BEGIN                                                    
         BADARG 4                                                               
         EXIT   PCMATCHL                                                        
         END                                                                    
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   CHECK FOR VOID/EQUIVALENT RANGES             
         MVC   MLTEMPLN,MLLNO1                                                  
         LA    R1,MLTEMPBF                                                      
         LA    R2,MLTEMPLN                                                      
         L     R3,MLACTNO1                                                      
         VCALL GTFRST                                                           
         IF    NZ,BEGIN                                                         
         TSEG  'No lines in range.'                                             
         LA    R15,4                                                            
         B     MLDONE                                                           
         END                                                                    
         MVC   MLTEMPLN,MLLNO2                                                  
         LA    R1,MLTEMPBF                                                      
         LA    R2,MLTEMPLN                                                      
         L     R3,MLACTNO2                                                      
         VCALL GTFRST                                                           
         IF    NZ,BEGIN                                                         
         TSEG  'No lines in range.'                                             
         LA    R15,4                                                            
         B     MLDONE                                                           
         END                                                                    
*                                                                               
         COMMENT                   GET COMPARE BUFFERS                          
         L     R1,=AL4(MLBUFSZ)                                                 
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,MLBUF1                                                        
         L     R1,=AL4(MLLBUFSZ)                                                
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,MLBUF1A                                                       
         L     R1,=AL4(MLBUFSZ)                                                 
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,MLBUF2                                                        
         L     R1,=AL4(MLLBUFSZ)                                                
         XPUSH ,,(R1),PTR=R2                                                    
         ST    R2,MLBUF2A                                                       
*-                                                                              
*-       LOOK FOR MATCHES IN NEXT 10, 30 AND 120 LINES                          
*-                                                                              
         COMMENT                   READ IN BUFFER #1                            
         L     R0,MLLNO1           SEE READBUF ROUTINE COMMENTS                 
         L     R1,MLBUF1                                                        
         L     R2,MLBUF1A                                                       
         L     R3,=A(MLBUFSZ)                                                   
         LA    R4,150              WE READ 150 LINES                            
         CLEAR R5                                                               
         L     R6,MLACTNO1                                                      
         L     R15,=X'FD000000'                                                 
         ACALL READBUF                                                          
         ST    R0,MLLEN1                                                        
         ST    R1,MLCNT1                                                        
*                                                                               
         COMMENT                   READ IN BUFFER #2                            
         L     R0,MLLNO2           SEE READBUF ROUTINES COMMENTS                
         L     R1,MLBUF2                                                        
         L     R2,MLBUF2A                                                       
         L     R3,=A(MLBUFSZ)                                                   
         LA    R4,150                                                           
         CLEAR R5                                                               
         L     R6,MLACTNO2                                                      
         L     R15,=X'FE000000'                                                 
         ACALL READBUF                                                          
         ST    R0,MLLEN2                                                        
         ST    R1,MLCNT2                                                        
*                                                                               
         COMMENT                   CHECK IN FIRST 10 LINES                      
         L     R0,MLBUF1                                                        
         L     R1,MLLEN1                                                        
         L     R2,MLBUF2                                                        
         L     R3,MLLEN2                                                        
         L     R4,MLBUF1A                                                       
         L     R5,MLBUF2A                                                       
         LA    R6,10                                                            
         ACALL MATCHBUF                                                         
*                                                                               
         COMMENT                   IF NO MATCH, CHECK IN FIRST 30               
         IF    NZ,BEGIN               LINES                                     
         L     R0,MLBUF1                                                        
         L     R1,MLLEN1                                                        
         L     R2,MLBUF2                                                        
         L     R3,MLLEN2                                                        
         L     R4,MLBUF1A                                                       
         L     R5,MLBUF2A                                                       
         LA    R6,30                                                            
         ACALL MATCHBUF                                                         
*                                                                               
         COMMENT                   IF NO MATCH, CHECK IN FIRST 120              
         IF    NZ,BEGIN               LINES                                     
         L     R0,MLBUF1                                                        
         L     R1,MLLEN1                                                        
         L     R2,MLBUF2                                                        
         L     R3,MLLEN2                                                        
         L     R4,MLBUF1A                                                       
         L     R5,MLBUF2A                                                       
         LA    R6,30                                                            
         ACALL MATCHBUF                                                         
*-                                                                              
*-       IF STILL NO MATCH LOOK FOR MATCH IN NEXT 1000 LINES                    
*-                                                                              
         COMMENT                   READ IN BUFFER #1                            
         IF    NZ,BEGIN                                                         
         L     R0,MLLNO1           SEE READBUF ROUTINE COMMENTS                 
         L     R1,MLBUF1                                                        
         L     R2,MLBUF1A                                                       
         L     R3,=A(MLBUFSZ)                                                   
         LA    R4,MLMAXCNT         WE READ 1000 LINES                           
         CLEAR R5                                                               
         L     R6,MLACTNO1                                                      
         L     R15,=X'FD000000'                                                 
         ACALL READBUF                                                          
         ST    R0,MLLEN1                                                        
         ST    R1,MLCNT1                                                        
*                                                                               
         COMMENT                   READ IN BUFFER #2                            
         L     R0,MLLNO2           SEE READBUF ROUTINES COMMENTS                
         L     R1,MLBUF2                                                        
         L     R2,MLBUF2A                                                       
         L     R3,=A(MLBUFSZ)                                                   
         LA    R4,MLMAXCNT                                                      
         CLEAR R5                                                               
         L     R6,MLACTNO2                                                      
         L     R15,=X'FE000000'                                                 
         ACALL READBUF                                                          
         ST    R0,MLLEN2                                                        
         ST    R1,MLCNT2                                                        
*                                                                               
         COMMENT                   CHECK UP TO 1000 LINES                       
         L     R0,MLBUF1                                                        
         L     R1,MLLEN1                                                        
         L     R2,MLBUF2                                                        
         L     R3,MLLEN2                                                        
         L     R4,MLBUF1A                                                       
         L     R5,MLBUF2A                                                       
         LA    R6,MLMAXCNT                                                      
         ACALL MATCHBUF                                                         
*                                                                               
         END ,                                                                  
         END ,                                                                  
         END , OF LOOKING FOR LINE MATCHES                                      
*                                                                               
         COMMENT                   IF NO MATCHES, RETURN -1'S                   
         IF    (R15,NZ),BEGIN                                                   
         L     R0,=F'-1000'                                                     
         L     R1,=F'-1000'                                                     
         END                                                                    
*                                                                               
         COMMENT                   RETURN COMPARE VALUES                        
         L     R6,MLRETPTR                                                      
         ST    R0,MLNOMAT1                                                      
         ST    R1,MLNOMAT2                                                      
         PRETVAL 1,LINENO,L:MLNOMAT1                                            
         PRETVAL 2,LINENO,L:MLNOMAT2                                            
         CLEAR R15                                                              
*                                                                               
         COMMENT                   RETURN BUFFERS TO STACK                      
         L     R1,=AL4(MLBUFSZ)                                                 
         XPOP  ,,(R1)                                                           
         L     R1,=AL4(MLLBUFSZ)                                                
         XPOP  ,,(R1)                                                           
         L     R1,=AL4(MLBUFSZ)                                                 
         XPOP  ,,(R1)                                                           
         L     R1,=AL4(MLLBUFSZ)                                                
         XPOP  ,,(R1)                                                           
*                                                                               
MLDONE   LABEL ,                                                                
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box*                                                                           
*                                                                               
*        Common NET SYSCALL work area.                                          
*                                                                               
NWA      RECORD BEGIN                                                           
NWAID    DS    C'NWA'              Self identification                          
*                                                                               
NWAFLAG  FLAG                                                                   
         FLAG  NWAFOPT             - Explicit option specified                  
         FLAG  NWAFEOF             - EOF string specified                       
         FLAG  NWAFLINS            - LINES option specified                     
         FLAG  NWAFNONL            - NONL option specified                      
         FLAG  NWAFNPR             - NOREPROMPT option specified                
*                                                                               
NWAATCHR DS    C                   ATTENTION char                               
*                                                                               
NWAARGP  DS    A                   Argument list ptr                            
NWANARGS DS    F                   Number of args passed                        
*                                                                               
NWAWORD  DS    F                   Working fullword area                        
NWAOPNO  DS    F                   Open path number                             
*                                                                               
NWAUNETP DS    F                   UNET ptr                                     
NWAR0R1  DS   2F                   Working R0,R1 for scan routines              
*                                                                               
NWACTRL  DS    CL8                 Control function id                          
NWAOPT   DS    CL4                 Working option string                        
NWALNO   DS    F                   Working lineno                               
NWAREMCT DS    F                   Working remaining line count                 
NWACOUNT DS    F                   Working line count so far                    
NWAEOFL  DS    H                   Length of EOF string                         
NWAEOF   DS    CL128               Working EOF line                             
*                                                                               
NWASG    SEGCB                                                                  
NWASGRCP DS    2A                  Return code string loc, len                  
NWALINE  DS    CL(&LINESZ)         Line seg buffer                              
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_CLOSE(netpno [,option-string] [,rc])                                     
*                                                                               
*    Close a network path.                                                      
*                                                                               
PCNETCLS PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA            Save NWA ptr                                 
*                                                                               
         SETARGS '13ISS'           1-3 args: num, str, str                      
         BNZ   NCLSEXIT                                                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get network path address                     
         BNZ   NCLSRET             Trouble, scram                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*-                                                                              
*-       Scan NET_CLOSE options.                                                
*-                                                                              
         IF    (NWANARGS,GE,2),BEGIN  Scan options...                           
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NCLSPRT             Scan NET_CLOSE options                       
         XPOP  R6                                                               
         IF    (R15,NZ),NCLSERR                                                 
         END                                                                    
*-                                                                              
*-       Close and free the network path.                                       
*-                                                                              
         IF    (UNETFOUTEOF+UNETFOUTABORT,Z),BEGIN  Still active...             
         LA    R1,=C'EOF'          Normal end of file                           
         LA    R15,UNET                                                         
         VCALL NPATCTRL            Send end of file                             
         END                                                                    
*                                                                               
         LA    R15,UNET                                                         
         VCALL NPATCLS             Close/Free network connection                
         SETMSG 'OK'                                                            
         B     NCLSRET                                                          
*                                                                               
NCLSERR  SETMSG 'INVALID OPTION'                                                
         B     NCLSRET                                                          
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NCLSRET  IF    (NWANARGS,GE,3),BEGIN  Return info...                            
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NCLSEXIT SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
         USING NWA,R6                                                           
NCLSPRT  SCKW  ,NCLSBAD                                                         
*                                                                               
NCLSBAD  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_CONTROL(netpno, option-string [,return-string] [,rc])                    
*                                                                               
*    Do something special to the network path.                                  
*                                                                               
PCNETCTL PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH                                                                 
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA            Save NWA ptr                                 
*                                                                               
         SETARGS '24ISSS'          2-4 args: num, str, str, str                 
         BNZ   NCTLEXIT                                                         
*                                                                               
         ST    R0,NWANARGS         Save number of args specified                
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get network path address                     
         BNZ   NCTLERR             Trouble, scram                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
*                                                                               
         CLEAR NWACTRL             Initialize                                   
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NCTLPRT             Scan NET_CONTROL options                     
         XPOP  R6                                                               
         LM    R0,R1,NWAR0R1       Pick up any R0,R1 values                     
         IF    (R15,M),NCTLINV                                                  
         IF    (R15,EQ,4),NCTLINV                                               
         IF    (R15,EQ,8),NCTLLNOK                                              
         IF    (R15,EQ,12),NCTLMSG                                              
         CLEAR R15                                                              
*-                                                                              
*-       Error if nothing explicit.                                             
*-                                                                              
         IF    ^NWAFOPT,BEGIN      Nothing explicit...                          
         SETMSG 'MISSING OPTION'                                                
         B     NCTLERR                                                          
         END                                                                    
*                                                                               
         SETMSG 'OK'                Assume OK                                   
*                                                                               
         IF    (NWACTRL,NZ),BEGIN  We need to do a NPAT control...              
         LA    R1,NWACTRL          Control function ID ("EOF", etc.)            
         LA    R15,UNET                                                         
         VCALL NPATCTRL            Do control function                          
         END                                                                    
*                                                                               
         CLEAR R2,R3               Don't return any "info" string               
*                                                                               
         B     NCTLERR                                                          
*                                                                               
NCTLINV  SETMSG 'INVALID OPTION'                                                
*                                                                               
NCTLERR  LS    R3,R2,(R1),(R0)     Error message in R1,R0                       
         CLEAR R1,R0                                                            
         B     NCTLRET                                                          
*                                                                               
NCTLMSG  LS    R3,R2,'OK'          Info message in R1,R0                        
         B     NCTLRET                                                          
*-                                                                              
*-       Pass back number.                                                      
*-                                                                              
NCTLNOK  LS    R3,R2,'OK'                                                       
*                                                                               
NCTLNUM  XPUSH R2,R3                                                            
         IF    (NWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,INTEGER,(R1)                                                 
         END                                                                    
         XPOP  R2,R3                                                            
*                                                                               
         B     NCTLCOM                                                          
*-                                                                              
*-       Pass back line-number.                                                 
*-                                                                              
NCTLLNOK LS    R3,R2,'OK'                                                       
*                                                                               
NCTLLNO  XPUSH R2,R3                                                            
         IF    (NWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,LINENO,(R1)                                                  
         END                                                                    
         XPOP  R2,R3                                                            
*                                                                               
         B     NCTLCOM                                                          
*-                                                                              
*-       Pass back return string and return code.                               
*-                                                                              
NCTLRET  XPUSH R2,R3                                                            
         IF    (NWANARGS,GE,3),BEGIN                                            
         VCALL LRTRIM                                                           
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
         XPOP  R2,R3                                                            
*-                                                                              
*-       Finally, set return code string.                                       
*-                                                                              
NCTLCOM  IF    (NWANARGS,GE,4),BEGIN                                            
         SETMSG (R3),(R2)                                                       
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NCTLEXIT SCPOP                                                                  
         PEND                                                                   
*-                                                                              
*-       NET_CONTROL Options.                                                   
*-                                                                              
         USING NWA,R6                                                           
NCTLPRT  SCKW  EOF,NCTLEOF                                                      
         SCKW  ABORT,NCTLABRT                                                   
         SCKW  WAIT,NCTLWAIT,(P,I)                                              
         SCKW  NOWAIT,NCTLNWT                                                   
         SCKW  IAC,NCTLIAC                                                      
         SCKW  NOIAC,NCTLNIAC                                                   
         SCKW  BS_IS_DEL,NCTLBSD                                                
         SCKW  BS_IS_BS,NCTLBSBS                                                
         SCKW  SET_TERMINAL,NCTLSETT,A                                          
         SCKW  GET_TERMINAL,NCTLGETT,A                                          
         SCKW  PF_PREVIOUS,NCTLPRPF,(A,P,I),99  VTAM NET_VIEW option            
         SCKW  PF_NEXT,NCTLNXPF,(A,P,I),99      VTAM NET_VIEW option            
         SCKW  PF_MARK,NCTLMKPF,(A,P,I),99      VTAM NET_VIEW option            
         SCKW  PF_SEND,NCTLSNPF,(A,P,I),99      VTAM NET_VIEW option            
         SCKW  PF_SECURE,NCTLXXPF,(A,P,I),99    VTAM NET_VIEW option            
         SCKW  GETVMARK,NCTLGETM                VTAM NET_VIEW option            
         SCKW  SETVMARK,NCTLSETM,(P,LN)         VTAM NET_VIEW option            
         SCKW  GETVTOP,NCTLGETVT                VTAM NET_VIEW option            
         SCKW  SETVTOP,NCTLSETVT,(P,LN)         VTAM NET_VIEW option            
         SCKW  CLRVTOP,NCTLCLRVT                VTAM NET_VIEW option            
         SCKW  ,NCTLBAD                                                         
*-                                                                              
NCTLEOF  PROC                                                                   
         SET   NWAFOPT                                                          
         MVC   NWACTRL,=CL8'EOF'                                                
         PEND                                                                   
*                                                                               
NCTLABRT PROC                                                                   
         SET   NWAFOPT                                                          
         MVC   NWACTRL,=CL8'ABORT'                                              
         PEND                                                                   
*-                                                                              
NCTLNWT  PROC                                                                   
         SET   UNETFNOWAIT                                                      
         PEND                                                                   
*                                                                               
NCTLWAIT PROC                                                                   
         SET   UNETFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UNETFNOWAIT                                                      
         ST    R0,UNETWAIT                                                      
         PEND                                                                   
*                                                                               
NCTLIAC  PROC                                                                   
         SET   UNETFIAC                                                         
         PEND                                                                   
*                                                                               
NCTLNIAC PROC                                                                   
         CLEAR UNETFIAC                                                         
         PEND                                                                   
*                                                                               
NCTLBSD  PROC                                                                   
         SET   UNETFBSISDEL                                                     
         PEND                                                                   
*                                                                               
NCTLBSBS PROC                                                                   
         CLEAR UNETFBSISDEL                                                     
         PEND                                                                   
*                                                                               
NCTLSETT PROC                                                                   
         SET   NWAFOPT                                                          
         SCANSTR ,                 Scan terminal type (odd chars OK)            
         MVC   UNETTERM,CVBLANKS                                                
         LR    R15,R0                                                           
         CEIL  R15,L'UNETTERM                                                   
         MOVE  R15,UNETTERM,@R1    Save terminal type                           
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
NCTLGETT PROC                                                                   
         SETMSG UNETTERM                                                        
         IF    (UNETTERM,Z),'CLEAR R0'                                          
         STM   R0,R1,NWAR0R1       Save R0,R1 for caller                        
         LA    R15,12                                                           
         PEND                                                                   
*                                                                               
NCTLPRPF PROC                                                                   
         SET   NWAFOPT                                                          
         STH   R0,UNETPRPF                                                      
         PEND                                                                   
*                                                                               
NCTLNXPF PROC                                                                   
         SET   NWAFOPT                                                          
         STH   R0,UNETNXPF                                                      
         PEND                                                                   
*                                                                               
NCTLMKPF PROC                                                                   
         SET   NWAFOPT                                                          
         STH   R0,UNETMKPF                                                      
         PEND                                                                   
*                                                                               
NCTLSNPF PROC                                                                   
         SET   NWAFOPT                                                          
         STH   R0,UNETSNPF                                                      
         PEND                                                                   
*                                                                               
NCTLXXPF PROC                                                                   
         SET   NWAFOPT                                                          
         STH   R0,UNETXXPF                                                      
         PEND                                                                   
*                                                                               
NCTLGETM PROC                                                                   
         L     R1,UNETMRKL         Return top lineno                            
         STM   R0,R1,NWAR0R1       Save R0,R1 for caller                        
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
NCTLSETM PROC                                                                   
         ST    R0,UNETMRKL                                                      
         PEND                                                                   
*                                                                               
NCTLGETVT PROC                                                                  
         L     R1,UNETTOPL         Return top lineno                            
         STM   R0,R1,NWAR0R1       Save R0,R1 for caller                        
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
NCTLCLRVT PROC                                                                  
         L     R0,=F'-1000'                                                     
         ST    R0,UNETFIXL                                                      
         PEND                                                                   
*                                                                               
NCTLSETVT PROC                                                                  
         ST    R0,UNETFIXL                                                      
         PEND                                                                   
*                                                                               
NCTLBAD  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_OPEN(netpno, option-string [,rc])                                        
*                                                                               
*    Open a new network path.                                                   
*                                                                               
PCNETOPN PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH                                                                 
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA            Save NWA ptr                                 
*                                                                               
         SETARGS '23ISS'           2-3 args: num, str, str                      
         BNZ   NOPNEXIT                                                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*-                                                                              
*-       Allocate path.                                                         
*-                                                                              
         CLEAR R4                  No UNET yet                                  
*                                                                               
         CLEAR R0                  User UNET                                    
         VCALL NPATALLO            Allocate a net path                          
         BNZ   NOPNRET             Trouble, scram                               
*                                                                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
         MVC   UNETRPORT,=F'23'    Default is TELNET port                       
         SET   UNETFIAC            Assume sending/receiving IACs                
*-                                                                              
*-       Scan NET_OPEN options.                                                 
*-                                                                              
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
*                                                                               
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NOPNPRT             Scan NET_OPEN options                        
         XPOP  R6                                                               
         IF    (R15,M),NOPNERR                                                  
         IF    (R15,EQ,4),NOPNERR                                               
         IF    (R15,EQ,8),NOPNRET                                               
*-                                                                              
*-       Open the path.                                                         
*-                                                                              
         INCR  R15,CVENCMD         Count the network command                    
*                                                                               
         LA    R15,UNET                                                         
         VCALL NPATOPEN            Open the net path                            
         IF    Z,'MVC NWAOPNO,UNETPNO'  Save net path number                    
         B     NOPNRET                                                          
*                                                                               
NOPNERR  SETMSG 'INVALID OPTION'                                                
         B     NOPNRET                                                          
*-                                                                              
*-       Pass back a return code string.                                        
*-                                                                              
NOPNRET  IF    (NWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*-                                                                              
*-       Return the path number or zero if not allocated.                       
*-                                                                              
         IF    (R4,NZ),BEGIN       We have a UNET...                            
         IF    (NWAOPNO,NZ),EXIT   Connection established, scram                
         LA    R15,UNET                                                         
         VCALL NPATCLS             De-allocate the net path number              
         END                                                                    
*                                                                               
         PRETVAL 1,INTEGER,L:NWAOPNO  Return the path number                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NOPNEXIT SCPOP                                                                  
         PEND                                                                   
*-                                                                              
*-       NET_OPEN Options.                                                      
*-                                                                              
         USING NWA,R6                                                           
NOPNPRT  SCKW  HOST,NOPNHOST,A                                                  
         SCKW  PORT,NOPNPORT,(A,P,PI)                                           
         SCKW  CHAR,NOPNCHAR,A                                                  
         SCKW  LINE,NOPNLINE,A                                                  
         SCKW  VTAM,NOPNVTAM,A                                                  
         SCKW  IAC,NOPNIAC                                                      
         SCKW  NOIAC,NOPNNIAC,A                                                 
         SCKW  BS_IS_DEL,NOPNBSD                                                
         SCKW  BS_IS_BS,NOPNBSBS                                                
         SCKW  TERMINAL,NOPNTERM,A                                              
         SCKW  PRIVILEGED,NOPNPRIV,A                                            
         SCKW  PASSIVE,NOPNPASS,A                                               
         SCKW  INDATA,NOPNIN,(A,P)                                              
         SCKW  OUTDATA,NOPNOUT,(A,P)                                            
         SCKW  WAIT,NOPNWAIT,(P,I)                                              
         SCKW  NOWAIT,NOPNNWT                                                   
         SCKW  ASCII8,NOPNASC8                                                  
         SCKW  KEEPTABS,NOPKEEPT                                                
         SCKW  ,NOPNBAD                                                         
*-                                                                              
NOPNNWT  PROC                                                                   
         SET   UNETFNOWAIT                                                      
         PEND                                                                   
*                                                                               
NOPNWAIT PROC                                                                   
         SET   UNETFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UNETFNOWAIT                                                      
         ST    R0,UNETWAIT                                                      
         PEND                                                                   
*                                                                               
NOPHOSWA RECORD BEGIN                                                           
NOPHSKIP DS    CL256                                                            
NOPHSTOP DS    CL256                                                            
         END                                                                    
*                                                                               
NOPNHOST PROC  NOPHOSWA                                                         
         SCANSTR ,                 Scan string including odd chars              
         MVC   UNETRNAME,CVBLANKS                                               
         LR    R15,R0                                                           
         CEIL  R15,L'UNETRNAME                                                  
         MOVE  R15,UNETRNAME,@R1   Save host name                               
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
NOPNPASS PROC                                                                   
         CLEAR R0                                                               
         ST    R0,UNETRPORT                                                     
         PEND                                                                   
*                                                                               
NOPNPORT PROC                                                                   
         ST    R0,UNETRPORT                                                     
         IF    (R0,EQ,23),'SET UNETFIAC'                                        
         ELSE  'CLEAR UNETFIAC'                                                 
         PEND                                                                   
*                                                                               
NOPNCHAR PROC                                                                   
         MVI   UNETTALK,UNETTALKCHAR                                            
         PEND                                                                   
*                                                                               
NOPNLINE PROC                                                                   
         MVI   UNETTALK,UNETTALKLINE                                            
         PEND                                                                   
*                                                                               
NOPNVTAM PROC                                                                   
         MVI   UNETTALK,UNETTALKVTAM                                            
         PEND                                                                   
*                                                                               
NOPNIAC  PROC                                                                   
         SET   UNETFIAC                                                         
         PEND                                                                   
*                                                                               
NOPNNIAC PROC                                                                   
         CLEAR UNETFIAC                                                         
         PEND                                                                   
*                                                                               
NOPNBSD  PROC                                                                   
         SET   UNETFBSISDEL                                                     
         PEND                                                                   
*                                                                               
NOPNBSBS PROC                                                                   
         CLEAR UNETFBSISDEL                                                     
         PEND                                                                   
*                                                                               
NOPNTERM PROC                                                                   
         SCANSTR ,                 Scan terminal type (odd chars OK)            
         MVC   UNETTERM,CVBLANKS                                                
         LR    R15,R0                                                           
         CEIL  R15,L'UNETTERM                                                   
         MOVE  R15,UNETTERM,@R1    Save terminal type                           
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
NOPNPRIV PROC                                                                   
         IF    (CPFXAUTH,OR,CPSFSPR),'SET UNETFPRIV'  Priv'd path               
         PEND                                                                   
*                                                                               
NOPNASC8 PROC                                                                   
         SET   UNETFASCII8         Use 8-bit ASCII translation                  
         PEND                                                                   
*                                                                               
NOPKEEPT PROC                                                                   
         SET   UNETFKEEPTABS                                                    
         PEND                                                                   
*                                                                               
NOPNIN   PROC                                                                   
         SCUPTOK R1                                                             
         IF    (@R1,EQ,'CRLF '),'SET UNETINFCRLF'                               
         ELSEIF (@R1,EQ,'LF '),'SET UNETINFLF'                                  
         ELSE  'SETMSG "INVALID INDATA OPTION"; LA R15,8 '                      
         PEND                                                                   
*                                                                               
NOPNOUT  PROC                                                                   
         SCUPTOK R1                                                             
         IF    (@R1,EQ,'CRLF '),'SET UNETOUTFCRLF'                              
         ELSEIF (@R1,EQ,'LF '),'SET UNETOUTFLF'                                 
         ELSE  'SETMSG "INVALID OUTDATA OPTION"; LA R15,8 '                     
         PEND                                                                   
*                                                                               
NOPNBAD  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_READ(netpno, option-string, read-string [,rc])                           
*                                                                               
*    Read data from the network path.                                           
*                                                                               
PCNETRD  PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '34ISSS'          3-4 args: num, str, str, str                 
         BNZ   NRDEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*                                                                               
         IF    (NWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,STRING,0,0      Pre-set null string (neatness)               
         END                                                                    
*                                                                               
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get network path address                     
         BNZ   NRDRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*-                                                                              
*-       Scan NET_READ options.                                                 
*-                                                                              
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NRDPRT              Scan NET_READ options                        
         XPOP  R6                                                               
         IF    (R15,NZ),NRDERR                                                  
*-                                                                              
*-       Now read the data (if any).                                            
*-                                                                              
         LA    R15,UNET                                                         
         VCALL NPATREAD            Get any new data                             
         BNZ   NRDRET              Trouble, scram                               
*-                                                                              
*-       Return the line of data.                                               
*-                                                                              
         XPUSH R15                                                              
         PRETVAL 3,STRING,(R1),(R0)  Return the line                            
         XPOP  R15                                                              
*                                                                               
         SETMSG 'OK'                                                            
         IF    (R15,EQ,4),'SETMSG "OK NONL"'                                    
         B     NRDRET                                                           
*                                                                               
NRDERR   SETMSG 'INVALID OPTION'                                                
         B     NRDRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NRDRET   IF    (NWANARGS,GE,4),BEGIN                                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NRDEXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
         USING NWA,R6                                                           
NRDPRT   SCKW  NOWAIT,NRDNWT                                                    
         SCKW  WAIT,NRDWAIT,(P,I)                                               
         SCKW  ,NRDBAD                                                          
*                                                                               
NRDNWT   PROC                                                                   
         SET   UNETFNOWAIT                                                      
         PEND                                                                   
*                                                                               
NRDWAIT  PROC                                                                   
         SET   UNETFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UNETFNOWAIT                                                      
         ST    R0,UNETWAIT                                                      
         PEND                                                                   
*                                                                               
NRDBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_READFILE(netpno [,option-string] [,count] [,rc])                         
*                                                                               
*    Read data from the user path.                                              
*                                                                               
PCNETRDF PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '14ISIS'          1-4 args: num, str, num, str                 
         BNZ   NRFEXIT             Arglist error, scram                         
*                                                                               
         ST    R0,NWANARGS         Save number of args specified                
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*                                                                               
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get netpath ptr                              
         BNZ   NRFRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*-                                                                              
*-       Scan NET_READFILE options.                                             
*-                                                                              
         VCALL ENDLNO              Get END lineno                               
         ST    R0,NWALNO           Set default starting point                   
*                                                                               
         CLEAR R0,R1                                                            
         IF    (NWANARGS,GE,2),BEGIN  We have an option string...               
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         END                                                                    
*                                                                               
         SCINIT (R1),(R0)                                                       
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NRFPRT              Scan NET_READFILE options                    
         XPOP  R6                                                               
         IF    (R15,NZ),NRFERR                                                  
*-                                                                              
*-     Set up seg buffer so that anything written to this seg                   
*-       buffer will get added to the appropriate spot in the Active            
*-       file.                                                                  
*-                                                                              
         SEGINIT NWALINE,,NWASG,RTN=NRFSEG                                      
         LA    R15,NWA                                                          
         ST    R15,NWASGUSR        Set SEGCBUSR for SEG co-routine              
*-                                                                              
*-       Now read the data (if any).                                            
*-                                                                              
         LOOP  BEGIN                                                            
         LA    R15,UNET                                                         
         VCALL NPATREAD            Get any new data                             
         BNZ   NRFRET              Error of some sort, scram                    
*-                                                                              
*-       Add line to seg buffer.                                                
*-                                                                              
         SEGT  (R1),(R0)                                                        
*-                                                                              
*-       Now see if it is an "end-of-file" sequence.                            
*-                                                                              
         IF    NWAFEOF,BEGIN       Check for end of file line...                
         LH    R15,NWAEOFL         Length of eof chars                          
         IF    (NWASGLENF,NE,R15),EXIT  No match possible, forget it            
*                                                                               
         IF    (R15,Z),NRFEOFMA    Eof on null line                             
*                                                                               
         CMPR  R15,NWAEOF,NWALINE  End of file?                                 
         IF    EQ,BEGIN            Yes...                                       
NRFEOFMA SETMSG 'EOF'                                                           
         B     NRFRET                                                           
         END                                                                    
         END                                                                    
*-                                                                              
*-       Write line to Active file.                                             
*-                                                                              
         SEGWR ,                   Write the line                               
         IF    NZ,BEGIN            Trouble...                                   
         LM    R0,R1,NWASGRCP      Get return code string ptrs                  
         B     NRFRET              Scram                                        
         END                                                                    
         END                                                                    
*                                                                               
NRFERR   SETMSG 'INVALID OPTION'                                                
         B     NRFRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NRFRET   IF    (NWANARGS,GE,4),BEGIN                                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*-                                                                              
*-       Also pass back the number of lines read.                               
*-                                                                              
         IF    (NWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,INTEGER,L:NWACOUNT                                           
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NRFEXIT  SCPOP ,                                                                
         PEND                                                                   
*-                                                                              
*-       NET_READFILE Options.                                                  
*-                                                                              
         USING NWA,R6                                                           
NRFPRT   SCKW  NOWAIT,NRFNWT                                                    
         SCKW  WAIT,NRFWAIT,(P,I)                                               
         SCKW  COUNT,NRFREMCT,(P,PI)                                            
         SCKW  START,NRFSTART,(P,LN)                                            
         SCKW  EOF,NRFEOF,P                                                     
         SCKW  ,NRFBAD                                                          
*                                                                               
NRFNWT   PROC                                                                   
         SET   UNETFNOWAIT                                                      
         PEND                                                                   
*                                                                               
NRFWAIT  PROC                                                                   
         SET   UNETFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UNETFNOWAIT                                                      
         ST    R0,UNETWAIT                                                      
         PEND                                                                   
*                                                                               
NRFREMCT PROC                                                                   
         ST    R0,NWAREMCT                                                      
         PEND                                                                   
*                                                                               
NRFSTART PROC                                                                   
         ST    R0,NWALNO                                                        
         PEND                                                                   
*                                                                               
NRFEOF   PROC                                                                   
         SET   NWAFEOF                                                          
         SCDQUOTE NWAEOF,L'NWAEOF                                               
         CEIL  R0,L'NWAEOF                                                      
         STH   R0,NWAEOFL                                                       
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
NRFBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NRFSEG -- Local seg routine to add a line to the end of the                  
*    Active file.  This routine is called as a co-routine by                    
*    the SEG routines.                                                          
*                                                                               
*    On entry:                                                                  
*      R15 - SEGCB ptr                                                          
*                                                                               
NRFSEG   PROC                                                                   
         LR    R5,R15                                                           
         WITH  (SEGCB,R5)                                                       
         L     R6,SEGCBUSR                                                      
         WITH  (NWA,R6)                                                         
*-                                                                              
*-       Add the data line to the Active file.                                  
*-                                                                              
         IF    (SEGCBWR,OR,SEGCBOVF),BEGIN  Segwr or overflow...                
         L     R15,NWALNO                                                       
         IF    (R15,LGT,CVMAXLNO),BEGIN  Invalid lineno...                      
         SETMSG 'INVALID LINE-NUMBER'                                           
         STM   R0,R1,NWASGRCP      Save return code string ptrs                 
         LA    R15,4               Bad rc                                       
         END                                                                    
*                                                                               
         ELSE  BEGIN               Valid lineno...                              
         VCALL PUTLINE             Add response line                            
         INCR  R15,NWACOUNT        Number of lines written so far               
         CLEAR R15                                                              
*-                                                                              
*-       If a COUNT was specified see if we have exhausted it.                  
*-                                                                              
         IF    (NWAREMCT,NZ),BEGIN                                              
         DECR  R15,NWAREMCT        One less line now                            
         IF    (R15,NEG),BEGIN                                                  
         SETMSG 'COUNT EXHAUSTED'                                               
         STM   R0,R1,NWASGRCP      Save return code string ptrs                 
         LA    R15,4               Bad rc                                       
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         L     R15,NWALNO                                                       
         A     R15,CPDELTA                                                      
         ST    R15,NWALNO          Update working lineno                        
         CLEAR R15                 Good rc                                      
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_STATUS(netpno, option-string [,rc])                                      
*                                                                               
*    Get current status of network path.                                        
*                                                                               
PCNETST  PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '23ISSS'          2-3 args: num, str, str                      
         BNZ   NSTEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get netpath ptr                              
         BNZ   NSTRET              Trouble, scram                               
*                                                                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NSTPRT              Scan NET_STATUS options                      
         XPOP  R6                                                               
         IF    (R15,NZ),NSTERR                                                  
*-                                                                              
*-       Do we have buffered text waiting.                                      
*-                                                                              
         SETMSG 'NOT YET'           !!!!!!!!!!                                  
         B     NSTRET                                                           
*                                                                               
NSTERR   SETMSG 'INVALID OPTION'                                                
         B     NSTRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NSTRET   IF    (NWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NSTEXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
         USING NWA,R6                                                           
NSTPRT   SCKW  ,NSTBAD                                                          
*                                                                               
NSTBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_TALK(netpno, option-string [,actno] [,rc])                               
*                                                                               
*    Connect user terminal to network path.                                     
*                                                                               
PCNETTK  PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '14ISIS'          1-4 args: num, str, num, str                 
         BNZ   NTKEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get netpath ptr                              
         BNZ   NTKRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*-                                                                              
*-       Scan NET_TALK options.                                                 
*-                                                                              
         IF    (NWANARGS,GE,2),BEGIN  Scan options...                           
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NTKPRT              Scan NET_TALK options                        
         XPOP  R6                                                               
         IF    (R15,EQ,8),NTKERR2                                               
         IF    (R15,NZ),NTKERR                                                  
         END                                                                    
*-                                                                              
*-       Do combined terminal and network I/O.                                  
*-                                                                              
         CLEAR R0                  Assume no working active file                
         IF    (NWANARGS,GE,3),BEGIN  We have an actno...                       
         LA    R5,ARG3                                                          
         A     R5,NWAARGP                                                       
         L     R0,VNVALUE          Working active file number                   
         END                                                                    
*                                                                               
         MVC   NWAOPT,=C'....'     Standard NET_TALK options                    
         IF    NWAFNPR,'MVI NWAOPT,C"N"'  Don't re-prompt                       
         IF    (NWAATCHR,NZ),'MVC NWAOPT+3(1),NWAATCHR'  Attn char              
         LA    R1,NWAOPT           Options                                      
         LA    R15,UNET                                                         
         VCALL NPATTALK            Do the talking                               
         B     NTKRET                                                           
*                                                                               
NTKERR   SETMSG 'INVALID OPTION'                                                
         B     NTKRET                                                           
*                                                                               
NTKERR2  SETMSG 'BAD HEX DIGITS FOR ATTNCHAR'                                   
         B     NTKRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NTKRET   IF    (NWANARGS,GE,4),BEGIN  Return code...                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NTKEXIT  SCPOP ,                                                                
         PEND                                                                   
*-                                                                              
*-       NET_TALK Options.                                                      
*-                                                                              
         USING NWA,R6                                                           
NTKPRT   SCKW  REPROMPT,NTKPR                                                   
         SCKW  NOREPROMPT,NTKNPR                                                
         SCKW  ATTNCHAR,NTKATCH,P                                               
         SCKW  ,NTKBAD                                                          
*-                                                                              
NTKPR    PROC                                                                   
         CLEAR NWAFNPR                                                          
         PEND                                                                   
*                                                                               
NTKNPR   PROC                                                                   
         SET   NWAFNPR                                                          
         PEND                                                                   
*                                                                               
NTKATCH  PROC                                                                   
         SCUPTOK R1                                                             
         XTB   (R1),(R0)           Expecting "ATTNCHAR=03"                      
         IF    (NZ,OR,(R15,GE,128)),BEGIN                                       
         LA    R15,8                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         STC   R15,NWAATCHR                                                     
         CLEAR R15                                                              
         END                                                                    
         PEND                                                                   
*                                                                               
NTKBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_VIEW(netpno, option-string, actno [,rc])                                 
*                                                                               
*    Connect user terminal to network path.                                     
*                                                                               
PCNETVW  PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '34ISIS'          1-4 args: num, str, num, str                 
         BNZ   NVWEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get netpath ptr                              
         BNZ   NVWRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*-                                                                              
*-       Scan NET_VIEW options.                                                 
*-                                                                              
         IF    (NWANARGS,GE,2),BEGIN  Scan options...                           
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NVWPRT              Scan NET_VIEW options                        
         XPOP  R6                                                               
         IF    (R15,NZ),NVWERR                                                  
         END                                                                    
*-                                                                              
*-       Do combined full screen terminal and network I/O.                      
*-                                                                              
         LA    R5,ARG3                                                          
         A     R5,NWAARGP                                                       
         L     R0,VNVALUE          Working active file number                   
*                                                                               
         LA    R1,=C'....'         Standard NET_VIEW options                    
         LA    R15,UNET                                                         
         VCALL NPATVIEW            Do full-screen talking                       
         B     NVWRET                                                           
*                                                                               
NVWERR   SETMSG 'INVALID OPTION'                                                
         B     NVWRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NVWRET   IF    (NWANARGS,GE,4),BEGIN  Return code...                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NVWEXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
         USING  NWA,R6                                                          
NVWPRT   SCKW  ,NVWBAD                                                          
*                                                                               
NVWBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_WRITE(netpno, option-string, write-string [,rc])                         
*                                                                               
*    Write data to the user path.                                               
*                                                                               
PCNETWR  PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '34ISSS'          3-4 args: num, str, str, str                 
         BNZ   NWREXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get netpath ptr                              
         BNZ   NWRRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*-                                                                              
*-       Scan NET_WRITE options.                                                
*-                                                                              
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NWRPRT              Scan NET_WRITE options                       
         XPOP  R6                                                               
         IF    (R15,NZ),NWRERR                                                  
*-                                                                              
*-       Now send the transaction.                                              
*-                                                                              
         LA    R5,ARG3                                                          
         A     R5,NWAARGP                                                       
*                                                                               
         SEGDEF UNETOUTSG                                                       
         SEG   VNSTRLOC,LH:VNSTRLEN  Line data                                  
         SEGWR                                                                  
         CLEAR UNETFNOXL           Reset TRANSPARENT                            
*                                                                               
         SETMSG UNETEMSG            Error message text                          
         VCALL RTRIM                                                            
         IF    ((R0,Z),OR,(UNETEMSG,Z)),'SETMSG "OK"'                           
         B     NWRRET                                                           
NWRERR   SETMSG 'INVALID OPTION'                                                
         B     NWRRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NWRRET   IF    (NWANARGS,GE,4),BEGIN  Pass back ret code string...              
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NWREXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
NWRPRT   SCKW  NOWAIT,NWRNWT                                                    
         SCKW  WAIT,NWRWAIT,(P,I)                                               
         SCKW  TRANSPARENT,NWRTRAN,A                                            
         SCKW  ,NWRBAD                                                          
*                                                                               
NWRNWT   PROC                                                                   
         SET   UNETFNOWAIT                                                      
         PEND                                                                   
*                                                                               
NWRWAIT  PROC                                                                   
         SET   UNETFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UNETFNOWAIT                                                      
         ST    R0,UNETWAIT                                                      
         PEND                                                                   
*                                                                               
NWRTRAN  PROC                                                                   
         SET   UNETFNOXL                                                        
         PEND                                                                   
*                                                                               
NWRBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NET_WRITEFILE(netpno [,option-string] [,line-count] [,rc])                   
*                                                                               
*    Write data to the user path.                                               
*                                                                               
PCNETWRF PROC  NWA                                                              
         CLEAR NWA                                                              
         MVC   NWA(3),=C'NWA'                                                   
         SCPUSH ,                                                               
         ST    R0,NWANARGS         Number of arguments                          
         ST    R1,NWAARGP          Arglist ptr                                  
         LA    R2,NWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '14ISIS'          1-4 args: num, str, str, str                 
         BNZ   NWFEXIT             Arglist error, scram                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL NPATGET             Get netpath ptr                              
         BNZ   NWFRET              Trouble, scram                               
         LR    R4,R1                                                            
         ST    R4,NWAUNETP         Save net path ptr                            
*                                                                               
         USING UNET,R4                                                          
         CLEAR UNETFNOWAIT,UNETWAIT  Reset wait options                         
*-                                                                              
*-       Scan NET_WRITEFILE options.                                            
*-                                                                              
         CLEAR R1,R0                                                            
         IF    (NWANARGS,GE,2),BEGIN  We have an option string...               
         LA    R5,ARG2                                                          
         A     R5,NWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         END                                                                    
         SCINIT (R1),(R0)                                                       
*                                                                               
         SET   CPLFLG1.CPFALL      Default range is ALL                         
*                                                                               
         XPUSH R6                                                               
         LA    R6,NWA                                                           
         SCAN  NWFPRT              Scan NET_WRITEFILE options                   
         XPOP  R6                                                               
         IF    (R15,NZ),NWFERR                                                  
*                                                                               
         IF    ^NWAFLINS,'VCALL NDETRNG'  Make default range                    
*-                                                                              
*-       Now write the range of lines.                                          
*-                                                                              
         SEGDEF UNETOUTSG                                                       
         RDRNG NWFRTN,(DESRTRN+LOCATRTN+UNPRST)                                 
         TCLEAR ,                  (Zot any pending msgs)                       
*                                                                               
         SEGWR                                                                  
         SETMSG UNETEMSG            Error message text                          
         VCALL RTRIM                                                            
         IF    ((R0,Z),OR,(UNETEMSG,Z)),'SETMSG "OK"'                           
         B     NWFRET                                                           
*                                                                               
*                                                                               
NWFERR   SETMSG 'INVALID OPTION'                                                
         B     NWFRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
NWFRET   IF    (NWANARGS,GE,4),BEGIN                                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*-                                                                              
*-       Also pass back the number of lines written.                            
*-                                                                              
         IF    (NWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,INTEGER,L:NWACOUNT  Number of lines written                  
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
NWFEXIT  SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
         USING NWA,R6                                                           
NWFPRT   SCKW  NOWAIT,NWFNWT                                                    
         SCKW  WAIT,NWFWAIT,(P,I)                                               
         SCKW  LINES,NWFLINES                                                   
         SCKW  NONL,NWFNONL,A                                                   
         SCKW  ,NWFBAD                                                          
*                                                                               
NWFNWT   PROC                                                                   
         SET   UNETFNOWAIT                                                      
         PEND                                                                   
*                                                                               
NWFWAIT  PROC                                                                   
         SET   UNETFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UNETFNOWAIT                                                      
         ST    R0,UNETWAIT                                                      
         PEND                                                                   
*                                                                               
NWFLINES PROC                                                                   
         SET   NWAFLINS                                                         
         VCALL NDETRNG              Scan range                                  
         PEND                                                                   
*                                                                               
NWFNONL  PROC                                                                   
         SET   NWAFNONL                                                         
         PEND                                                                   
*                                                                               
NWFBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NWFRTN -- Range processor co-routine to send any lines found                 
*    across the network path.                                                   
*                                                                               
*    On entry:                                                                  
*      R1,R0 - line loc, len                                                    
*                                                                               
NWFRTN   PROC                                                                   
         L     R6,CPCWA                                                         
         WITH  (NWA,R6)                                                         
         FAIL  (NWA,NE,'NWA'),NETERR1,'Net path logic problem.'                 
         L     R5,NWAUNETP                                                      
         WITH  (UNET,R5)                                                        
         FAIL  (UNET,NE,'UNET'),NETERRF,'Net path logic problem.'               
*                                                                               
         SEGDEF UNETOUTSG                                                       
*                                                                               
         LR    R3,R1                                                            
         LR    R2,R0                                                            
         SEG   (R3),(R2)           Text (if any)                                
         IF    ^NWAFNONL,BEGIN     Add NL...                                    
         SETMSG X'0D25'             Assume CR LF                                
         IF    UNETOUTFLF,'SETMSG X"25"'  Just LF                               
         SEG   (R1),(R0)                                                        
         END                                                                    
         SEGMARK                                                                
*                                                                               
         INCR  R15,NWACOUNT        Count number of lines                        
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
PWA      RECORD BEGIN                                                           
PWAID    DS    C'PWA'              Self identification                          
*                                                                               
PWAFLAG  FLAG                                                                   
         FLAG  PWAFTAG             - MYTAG/YOURTAG option specified             
         FLAG  PWAFEOF             - EOF string specified                       
         FLAG  PWAFLINS            - LINES option specified                     
*                                                                               
PWAARGP  DS    A                   Argument list ptr                            
PWANARGS DS    F                   Number of args passed                        
*                                                                               
PWAWORD  DS    F                   Working fullword area                        
PWAOPNO  DS    F                   Open path number                             
*                                                                               
PWAR0R1  DS   2F                   Working R0,R1 for scan routines              
*                                                                               
PWALNO   DS    F                   Working lineno                               
PWAREMCT DS    F                   Working remaining line count                 
PWACOUNT DS    F                   Working line count so far                    
PWAEOFL  DS    H                   Length of EOF string                         
PWAEOF   DS    CL128               Working EOF line                             
*                                                                               
PWASG    SEGCB ,                   Working seg control block                    
PWABUFLN EQU   4000                Our buffer size                              
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_CLOSE(pathno [,option-string] [,rc])                                    
*                                                                               
*    Close a user path.                                                         
*                                                                               
PCPATCLS PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA            Save PWA ptr                                 
*                                                                               
         SETARGS '13ISS'           1-3 args: num, str, str                      
         BNZ   PCLSEXIT                                                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL PATHGET             Get PATH address                             
         BNZ   PCLSRET             Trouble, scram                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
         FAIL  (UPATH,NE,'PATH'),PCLSERR,'Path logic error.'                    
*-                                                                              
*-       Scan PATH_CLOSE options.                                               
*-                                                                              
         IF    (PWANARGS,GE,2),BEGIN  Scan options...                           
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  PCLSPRT             Scan PATH_CLOSE options                      
         XPOP  R6                                                               
         IF    (R15,NZ),PCLSERR                                                 
         END                                                                    
*-                                                                              
*-       Close and free the path.                                               
*-                                                                              
         LA    R15,UPATH                                                        
         VCALL PATHCLS             Close/Free PATH control block                
         IF    Z,'SETMSG "OK"'                                                  
         B     PCLSRET                                                          
*                                                                               
*                                                                               
PCLSERR  SETMSG 'INVALID OPTION'                                                
         B     PCLSRET                                                          
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PCLSRET  IF    (PWANARGS,GE,3),BEGIN  Return info...                            
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PCLSEXIT SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
         USING PWA,R6                                                           
PCLSPRT  SCKW  ,PCLSBAD                                                         
*                                                                               
PCLSBAD  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_CONTROL(pathno, option-string [,return-string] [,rc])                   
*                                                                               
*    Do something special to the user path.                                     
*                                                                               
PCPATCTL PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA            Save PWA ptr                                 
*                                                                               
         SETARGS '24ISSS'          2-4 args: num, str, str, str                 
         BNZ   PCTLEXIT                                                         
*                                                                               
         ST    R0,PWANARGS         Save number of args specified                
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL PATHGET             Get PATH address                             
         BNZ   PCTLMSG             Trouble, scram                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
*                                                                               
         LA    R15,UPATH                                                        
         VCALL PATHINFO            Update path information                      
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         MVC   CPSCNERT,=A(PCTLINV)                                             
         SET   CPSCNFLG.CPFRTNER                                                
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  PCTLPRT             Scan PATH_CONTROL options                    
         XPOP  R6                                                               
         LM    R0,R1,PWAR0R1       Pick up any R0,R1 values                     
         IF    (R15,M),PCTLINV                                                  
         IF    (R15,EQ,4),PCTLINV                                               
         IF    (R15,EQ,8),PCTLNOK                                               
         IF    (R15,EQ,12),PCTLMISS                                             
         IF    (R15,EQ,16),PCTLOK                                               
         B     PCTLOK                                                           
*                                                                               
PCTLMISS LABEL ,                                                                
         SETMSG 'MISSING OPTION'                                                
         B     PCTLMSG                                                          
*                                                                               
PCTLINV  SETMSG 'INVALID OPTION'                                                
*                                                                               
PCTLMSG  LS    R3,R2,(R1),(R0)                                                  
         CLEAR R1,R0                                                            
         B     PCTLRET                                                          
*-                                                                              
*-       Pass back number.                                                      
*-                                                                              
PCTLNOK  LS    R3,R2,'OK'                                                       
*                                                                               
PCTLNUM  XPUSH R2,R3                                                            
         IF    (PWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,INTEGER,(R1)                                                 
         END                                                                    
         XPOP  R2,R3                                                            
*                                                                               
         B     PCTLCOM                                                          
*-                                                                              
*-       Pass back string.                                                      
*-                                                                              
PCTLOK   LS    R3,R2,'OK'                                                       
*                                                                               
PCTLRET  XPUSH R2,R3                                                            
         IF    (PWANARGS,GE,3),BEGIN                                            
         VCALL LRTRIM                                                           
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
         XPOP  R2,R3                                                            
*-                                                                              
*-       Finally, set return code string.                                       
*-                                                                              
PCTLCOM  IF    (PWANARGS,GE,4),BEGIN                                            
         SETMSG (R3),(R2)                                                       
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PCTLEXIT SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*                                                                               
*                                                                               
         USING PWA,R6                                                           
PCTLPRT  SCKW  ,PCTLMSSN,NULL                                                   
         SCKW  GETTAG,PCTLTAG                                                   
         SCKW  GETTAG,PCTLTAG                                                   
         SCKW  GETACCOUNT,PCTLPACT                                              
         SCKW  GETACCT,PCTLPACT                                                 
         SCKW  GETNAME,PCTLPNAM                                                 
         SCKW  GETJOB,PCTLPJOB                                                  
         SCKW  GETLINE,PCTLPLNO                                                 
         SCKW  GETASCB,PCTLPASC                                                 
         SCKW  INTERRUPT,PCTLINT,A                                              
         SCKW  NOINTERRUPT,PCTLNINT,A                                           
         SCKW  NOWAIT,PCTLNWT                                                   
         SCKW  WAIT,PCTLWAIT,(P,I)                                              
         SCKW  ,PCTLBAD                                                         
*                                                                               
PCTLPRTB SCKW  ,PCTLBAD                                                         
*                                                                               
PCTLMSSN PROC                                                                   
         CLEAR R1,R0                                                            
         STM   R0,R1,PWAR0R1                                                    
         LA    R15,12                                                           
         PEND                                                                   
*                                                                               
PCTLTAG  PROC                                                                   
         SETMSG UPATPTAG            Partner's session tag (if any)              
         IF    (UPATPTAG,Z),'CLEAR R0'                                          
         SETSCKWS PCTLPRTB                                                      
         STM   R0,R1,PWAR0R1                                                    
         LA    R15,16                                                           
         PEND                                                                   
*                                                                               
PCTLPACT PROC                                                                   
         SETMSG UPATPACT            Partner's account (if any)                  
         IF    (UPATPACT,Z),'CLEAR R0'                                          
         SETSCKWS PCTLPRTB                                                      
         STM   R0,R1,PWAR0R1                                                    
         LA    R15,16                                                           
         PEND                                                                   
*                                                                               
PCTLPNAM PROC                                                                   
         SETMSG UPATPNAM            Partner's user name (if any)                
         IF    (UPATPNAM,Z),'CLEAR R0'                                          
         SETSCKWS PCTLPRTB                                                      
         STM   R0,R1,PWAR0R1                                                    
         LA    R15,16                                                           
         PEND                                                                   
*                                                                               
PCTLPJOB PROC                                                                   
         SETMSG UPATPJOB            Partner's jobname (if any)                  
         IF    (UPATPJOB,Z),'CLEAR R0'                                          
         SETSCKWS PCTLPRTB                                                      
         STM   R0,R1,PWAR0R1                                                    
         LA    R15,16                                                           
         PEND                                                                   
*                                                                               
PCTLPLNO PROC                                                                   
         LH    R1,UPATPLNO         Partner's line-number (if any)               
         SETSCKWS PCTLPRTB                                                      
         STM   R0,R1,PWAR0R1                                                    
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
PCTLPASC PROC                                                                   
         L     R1,UPATPASC         Partner's ASCB ptr                           
         SETSCKWS PCTLPRTB                                                      
         STM   R0,R1,PWAR0R1                                                    
         LA    R15,8                                                            
         PEND                                                                   
*                                                                               
PCTLINT  PROC                                                                   
         SET   UPATFINT                                                         
         PEND                                                                   
*                                                                               
PCTLNINT PROC                                                                   
         CLEAR UPATFINT                                                         
         PEND                                                                   
*                                                                               
PCTLNWT  PROC                                                                   
         SET   UPATFNOWAIT                                                      
         PEND                                                                   
*                                                                               
PCTLWAIT PROC                                                                   
         SET   UPATFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UPATFNOWAIT                                                      
         ST    R0,UPATWAIT                                                      
         PEND                                                                   
*                                                                               
PCTLBAD  PROC                                                                   
         CLEAR R1,R0                                                            
         PRETURN (R0,R1)                                                        
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_OPEN(pathno, option-string [,rc])                                       
*                                                                               
*    Open a new user path.                                                      
*                                                                               
PCPATOPN PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA            Save PWA ptr                                 
*                                                                               
         SETARGS '23ISS'           2-3 args: num, str, str                      
         BNZ   POPNEXIT                                                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*-                                                                              
*-       Allocate path.                                                         
*-                                                                              
         CLEAR R0                  Normal user path                             
         VCALL PATHALLO            Allocate a new PATH                          
         BNZ   POPNRET             Trouble, scram                               
*                                                                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
*-                                                                              
*-       Scan PATH_OPEN options.                                                
*-                                                                              
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  POPNPRT             Scan PATH_OPEN options                       
         XPOP  R6                                                               
         IF    (R15,NZ),POPNERR                                                 
*                                                                               
         IF    ^PWAFTAG,BEGIN      No tags specified...                         
         SETMSG 'MYTAG/YOURTAG OPTION REQUIRED'                                 
         B     POPNRET                                                          
         END                                                                    
*-                                                                              
*-       Open the path.                                                         
*-                                                                              
         CLEAR R1                  No caller ID                                 
         IF    CPFXAUTH,'LA R1,=C"AUTH"'  Authorized exec                       
         LA    R15,UPATH                                                        
         VCALL PATHOPEN            Open the path                                
         IF    Z,'MVC PWAOPNO,UPATPNO'  Save path number                        
         B     POPNRET                                                          
*                                                                               
POPNERR  SETMSG 'INVALID OPTION'                                                
         B     POPNRET                                                          
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
POPNRET  IF    (PWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*-                                                                              
*-       Return the path number or zero if not allocated.                       
*-                                                                              
         IF    (PWAOPNO,Z),BEGIN   Path wasn't opened...                        
         LA    R15,UPATH                                                        
         VCALL PATHCLS             De-allocate the path number                  
         END                                                                    
*                                                                               
         PRETVAL 1,INTEGER,L:PWAOPNO  Return the path number                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
POPNEXIT SCPOP ,                                                                
         PEND                                                                   
*                                                                               
*  SCAN STUFF                                                                   
*                                                                               
         USING PWA,R6                                                           
POPNPRT  SCKW  MYTAG,POPNMY,P                                                   
         SCKW  YOURTAG,POPNYOU,P                                                
         SCKW  PASS,POPNPASS,P                                                  
         SCKW  BUFSIZE,POPNBUF,(P,I)                                            
         SCKW  NOWAIT,POPNNWT                                                   
         SCKW  WAIT,POPNWAIT,(P,I)                                              
         SCKW  HEADERS,POPNHDR,A                                                
         SCKW  NOHEADERS,POPNNHDR,A                                             
         SCKW  INTERRUPT,POPNINT,A                                              
         SCKW  NOINTERRUPT,POPNNINT,A                                           
         SCKW  ,POPNBAD                                                         
*                                                                               
*                                                                               
POPNMY   PROC                                                                   
         SCUPTOK R1                                                             
         SET   PWAFTAG                                                          
         MVC   UPATMY,@R1                                                       
         PEND                                                                   
*                                                                               
POPNYOU  PROC                                                                   
         SCUPTOK R1                                                             
         SET   PWAFTAG                                                          
         SET   UPATMFL.UPATMNAM    Specific YOURTAG specified                   
         MVC   UPATYOU,@R1                                                      
         PEND                                                                   
*                                                                               
POPNPASS PROC                                                                   
         SCUPTOK R1                                                             
         MVC   UPATPASS,@R1                                                     
         PEND                                                                   
*                                                                               
POPNBUF  PROC                                                                   
         ST    R0,UPATBUF                                                       
         PEND                                                                   
*                                                                               
POPNNWT  PROC                                                                   
         SET   UPATFNOWAIT                                                      
         PEND                                                                   
*                                                                               
POPNWAIT PROC                                                                   
         SET   UPATFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UPATFNOWAIT                                                      
         ST    R0,UPATWAIT                                                      
         PEND                                                                   
*                                                                               
POPNHDR  PROC                                                                   
         SET   UPATFHDR                                                         
         PEND                                                                   
*                                                                               
POPNNHDR PROC                                                                   
         CLEAR UPATFHDR                                                         
         PEND                                                                   
*                                                                               
POPNINT  PROC                                                                   
         SET   UPATFINT                                                         
         PEND                                                                   
*                                                                               
POPNNINT PROC                                                                   
         CLEAR UPATFINT                                                         
         PEND                                                                   
*                                                                               
POPNBAD  PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_READ(pathno, option-string, read-string [,rc])                          
*                                                                               
*    Read data from the user path.                                              
*                                                                               
PCPATRD  PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '34ISSS'          3-4 args: num, str, str, str                 
         BNZ   PRDEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*                                                                               
         IF    (PWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,STRING,0,0      Pre-set null string (neatness)               
         END                                                                    
*                                                                               
         L     R0,VNVALUE          Path number specified                        
         VCALL PATHGET             Get PATH address                             
         BNZ   PRDRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
*-                                                                              
*-       Scan PATH_READ options.                                                
*-                                                                              
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  PRDPRT              Scan PATH_READ options                       
         XPOP  R6                                                               
         IF    (R15,NZ),PRDERR                                                  
*-                                                                              
*-       Now read the data (if any).                                            
*-                                                                              
         LA    R15,UPATH                                                        
         VCALL PATHREAD            Get the next line of data                    
         BNZ   PRDRET              Trouble, scram                               
*                                                                               
         CEIL  R0,MAXSTRLN         Not too long now                             
*                                                                               
         IF    (PWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,STRING,(R1),(R0)  Return the line                            
         END                                                                    
*                                                                               
         SETMSG 'OK'                                                            
         B     PRDRET                                                           
*                                                                               
PRDERR   SETMSG 'INVALID OPTION'                                                
         B     PRDRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PRDRET   IF    (PWANARGS,GE,4),BEGIN                                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PRDEXIT  SCPOP ,                                                                
         PEND                                                                   
*-                                                                              
*-       PATH_READ Options.                                                     
*-                                                                              
         USING PWA,R6                                                           
PRDPRT   SCKW  NOWAIT,PRDNWT                                                    
         SCKW  WAIT,PRDWAIT,(P,I)                                               
         SCKW  ,PRDBAD                                                          
*                                                                               
PRDNWT   PROC                                                                   
         SET   UPATFNOWAIT                                                      
         PEND                                                                   
*                                                                               
PRDWAIT  PROC                                                                   
         SET   UPATFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UPATFNOWAIT                                                      
         ST    R0,UPATWAIT                                                      
         PEND                                                                   
*                                                                               
PRDBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_READFILE(pathno [,option-string] [,count] [,rc])                        
*                                                                               
*    Read data from the user path.                                              
*                                                                               
PCPATRDF PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '14ISIS'          1-4 args: num, str, num, str                 
         BNZ   PRFEXIT             Arglist error, scram                         
*                                                                               
         ST    R0,PWANARGS         Save number of args specified                
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
*                                                                               
         L     R0,VNVALUE          Path number specified                        
         VCALL PATHGET             Get PATH address                             
         BNZ   PRFRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
*-                                                                              
*-       Scan PATH_READFILE options.                                            
*-                                                                              
         VCALL ENDLNO              Get END lineno                               
         ST    R0,PWALNO           Set default starting point                   
*                                                                               
         CLEAR R0,R1                                                            
         IF    (PWANARGS,GE,2),BEGIN  We have an option string...               
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         END                                                                    
         SCINIT (R1),(R0)                                                       
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  PRFPRT              Scan PATH_READFILE options                   
         XPOP  R6                                                               
         IF    (R15,NZ),PRFERR                                                  
*-                                                                              
*-       Now read the data (if any).                                            
*-                                                                              
PRFMORE  LA    R15,UPATH                                                        
         VCALL PATHREAD            Get the next line                            
         BNZ   PRFRET              Trouble, scram                               
*-                                                                              
*-       See if it is an "end-of-file" sequence.                                
*-                                                                              
         CEIL  R0,MAXSTRLN         Not too long                                 
         VCALL RTRIM               Throw away trailing blanks                   
*                                                                               
         IF    PWAFEOF,BEGIN       Check for end of file line...                
         LH    R15,PWAEOFL         Length of eof chars                          
         IF    (R15,NE,R0),EXIT    No match possible, forget it                 
*                                                                               
         IF    (R15,Z),PRFEOFMA    Eof on null line                             
*                                                                               
         CMPR  R15,PWAEOF,@R1      End of file?                                 
         IF    EQ,BEGIN            Yes...                                       
PRFEOFMA SETMSG 'EOF'                                                           
         B     PRFRET                                                           
         END                                                                    
         END                                                                    
*-                                                                              
*-       Add the data line to the Active file.                                  
*-                                                                              
         L     R15,PWALNO                                                       
         IF    (R15,LGT,CVMAXLNO),BEGIN  Invalid lineno...                      
         SETMSG 'INVALID LINE-NUMBER'                                           
         B     PRFRET                                                           
         END                                                                    
*                                                                               
         VCALL PUTLINE             Add response line                            
         INCR  R15,PWACOUNT        Number of lines written so far               
*-                                                                              
*-       If a COUNT was specified see if we have exhausted it.                  
*-                                                                              
         IF    (PWAREMCT,NZ),BEGIN                                              
         DECR  R15,PWAREMCT        One less line now                            
         IF    (R15,NEG),'SETMSG "COUNT EXHAUSTED"; B PRFRET'                   
         END                                                                    
*                                                                               
         L     R15,PWALNO                                                       
         A     R15,CPDELTA                                                      
         ST    R15,PWALNO          Update working lineno                        
         B     PRFMORE                                                          
*                                                                               
PRFERR   SETMSG 'INVALID OPTION'                                                
         B     PRFRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PRFRET   IF    (PWANARGS,GE,4),BEGIN                                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*-                                                                              
*-       Also pass back the number of lines read.                               
*-                                                                              
         IF    (PWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,INTEGER,L:PWACOUNT                                           
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PRFEXIT  SCPOP ,                                                                
         PEND                                                                   
*-                                                                              
*-       PATH_READFILE Options.                                                 
*-                                                                              
         USING PWA,R6                                                           
PRFPRT   SCKW  NOWAIT,PRFNWT                                                    
         SCKW  WAIT,PRFWAIT,(P,I)                                               
         SCKW  COUNT,PRFREMCT,(P,PI)                                            
         SCKW  START,PRFSTART,(P,LN)                                            
         SCKW  EOF,PRFEOF,P                                                     
         SCKW  ,PRFBAD                                                          
*                                                                               
*                                                                               
PRFNWT   PROC                                                                   
         SET   UPATFNOWAIT                                                      
         PEND                                                                   
*                                                                               
PRFWAIT  PROC                                                                   
         SET   UPATFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UPATFNOWAIT                                                      
         ST    R0,UPATWAIT                                                      
         PEND                                                                   
*                                                                               
PRFREMCT PROC                                                                   
         ST    R0,PWAREMCT                                                      
         PEND                                                                   
*                                                                               
PRFSTART PROC                                                                   
         ST    R0,PWALNO                                                        
         PEND                                                                   
*                                                                               
PRFEOF   PROC                                                                   
         SET   PWAFEOF                                                          
         SCDQUOTE PWAEOF,L'PWAEOF                                               
         CEIL  R0,L'PWAEOF                                                      
         STH   R0,PWAEOFL                                                       
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
PRFBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_STATUS(pathno, option-string [,rc])                                     
*                                                                               
*    Get current status of user path.                                           
*                                                                               
PCPATST  PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '23ISSS'          2-3 args: num, str, str                      
         BNZ   PSTEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL PATHGET             Get PATH address                             
         BNZ   PSTRET              Trouble, scram                               
*                                                                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
*                                                                               
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         MVC   CPSCNERT,=A(PSTERR)                                              
         SET   CPSCNFLG.CPFRTNER                                                
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  PSTPRT              Scan PATH_STATUS options                     
         XPOP  R6                                                               
         IF    (R15,NZ),PSTERR                                                  
*-                                                                              
*-       See if we have read data.                                              
*-                                                                              
         LA    R15,UPATH                                                        
         VCALL PATHRDCK            Get any read ptrs                            
*-                                                                              
*-       Return the status of the path.                                         
*-                                                                              
         SETMSG 'READY'                                                         
         IF    UPATFOPENING,'SETMSG "NO PARTNER"'                               
         IF    UPATSFLG.UPATFCLS,'SETMSG "PARTNER CLOSED"'                      
         IF    (UPATDLEN,NZ),'SETMSG "DATA WAITING"'                            
*                                                                               
         B     PSTRET                                                           
*                                                                               
PSTERR   SETMSG 'INVALID OPTION'                                                
         B     PSTRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PSTRET   IF    (PWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PSTEXIT  SCPOP ,                                                                
         PEND                                                                   
*-                                                                              
*-       PATH_STATUS Options.                                                   
*-                                                                              
         USING PWA,R6                                                           
PSTPRT   SCKW  ,PSTBAD                                                          
*                                                                               
PSTBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_WRITE(pathno, option-string, write-string [,rc])                        
*                                                                               
*    Write data to the user path.                                               
*                                                                               
PCPATWR  PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '34ISSS'          3-4 args: num, str, str, str                 
         BNZ   PWREXIT                                                          
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL PATHGET             Get PATH address                             
         BNZ   PWRRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
*-                                                                              
*-       Scan PATH_WRITE options.                                               
*-                                                                              
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         MVC   CPSCNERT,=A(PWRERR)                                              
         SET   CPSCNFLG.CPFRTNER                                                
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  PWRPRT              Scan PATH_WRITE options                      
         XPOP  R6                                                               
         IF    (R15,NZ),PWRERR                                                  
*-                                                                              
*-       Now send the transaction.                                              
*-                                                                              
         LA    R5,ARG3                                                          
         A     R5,PWAARGP                                                       
*                                                                               
         LA    R0,PWABUFLN                                                      
         VCALL GETHEAP             Get work buffer                              
         SEGINIT (R1),(R0),PWASG,RTNTYPE=V,RTN=PATHSEG                          
         ST    R4,PWASGUSR         Save UPATH ptr in SEGCB                      
*                                                                               
         IF    UPATFHDR,BEGIN      Use headers...                               
         SEG   =X'0000',2          (High order part of len word)                
         SEG   VNSTRLEN            Length                                       
         END                                                                    
*                                                                               
         SEGWR VNSTRLOC,LH:VNSTRLEN  Line data                                  
         LM    R0,R1,UPATRCMP      Get return code string (if any)              
         IF    (R0,Z),'SETMSG "OK"'                                             
         B     PWRRET                                                           
*                                                                               
PWRERR   SETMSG 'INVALID OPTION'                                                
         B     PWRRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PWRRET   IF    (PWANARGS,GE,4),BEGIN                                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PWREXIT  SCPOP ,                                                                
         PEND                                                                   
*-                                                                              
*-       PATH_WRITE Options.                                                    
*-                                                                              
         USING PWA,R6                                                           
PWRPRT   SCKW  NOWAIT,PWRNWT                                                    
         SCKW  WAIT,PWRWAIT,(P,I)                                               
         SCKW  ,PWRBAD                                                          
*                                                                               
PWRNWT   PROC                                                                   
         SET   UPATFNOWAIT                                                      
         PEND                                                                   
*                                                                               
PWRWAIT  PROC                                                                   
         SET   UPATFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UPATFNOWAIT                                                      
         ST    R0,UPATWAIT                                                      
         PEND                                                                   
*                                                                               
PWRBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PATH_WRITEFILE(pathno [,option-string] [,line-count] [,rc])                  
*                                                                               
*    Write data to the user path.                                               
*                                                                               
PCPATWRF PROC  PWA                                                              
         CLEAR PWA                                                              
         MVC   PWA(3),=C'PWA'                                                   
         SCPUSH ,                                                               
         ST    R0,PWANARGS         Number of arguments                          
         ST    R1,PWAARGP          Arglist ptr                                  
         LA    R2,PWA                                                           
         ST    R2,CPCWA                                                         
*                                                                               
         SETARGS '14ISIS'          1-4 args: num, str, str, str                 
         BNZ   PWFEXIT             Arglist error, scram                         
*                                                                               
         WITH  (VNENTRY,R5)                                                     
*                                                                               
         LA    R5,ARG1(R1)                                                      
         L     R0,VNVALUE          Path number specified                        
         VCALL PATHGET             Get PATH address                             
         BNZ   PWFRET              Trouble, scram                               
         LR    R4,R1                                                            
         USING UPATH,R4                                                         
*-                                                                              
*-       Scan PATH_WRITEFILE options.                                           
*-                                                                              
         CLEAR R1,R0                                                            
         IF    (PWANARGS,GE,2),BEGIN  We have an option string...               
         LA    R5,ARG2                                                          
         A     R5,PWAARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN                                            
         END                                                                    
         SCINIT (R1),(R0)                                                       
         MVC   CPSCNERT,=A(PWFERR)                                              
         SET   CPSCNFLG.CPFRTNER                                                
*                                                                               
         SET   CPLFLG1.CPFALL      Default range is ALL                         
*                                                                               
         XPUSH R6                                                               
         LA    R6,PWA                                                           
         SCAN  PWFPRT              Scan PATH_WRITEFILE options                  
         XPOP  R6                                                               
         IF    (R15,NZ),PWFERR                                                  
*                                                                               
         IF    ^PWAFLINS,'VCALL NDETRNG'  Make default range                    
*-                                                                              
*-       Now write the range of lines.                                          
*-                                                                              
         LA    R0,PWABUFLN                                                      
         VCALL GETHEAP             Get work buffer                              
         SEGINIT (R1),(R0),PWASG,RTNTYPE=V,RTN=PATHSEG  Init seg                
         ST    R4,PWASGUSR         Save UPATH ptr in SEGCB                      
*                                                                               
         RDRNG PWFRTN,(DESRTRN+LOCATRTN+UNPRST)                                 
         TCLEAR ,                  (Zot any pending msgs)                       
*                                                                               
         SEGWR                                                                  
         LM    R0,R1,UPATRCMP      Get return code string (if any)              
         IF    (R0,Z),'SETMSG "OK"'                                             
         B     PWFRET                                                           
*                                                                               
PWFERR   SETMSG 'INVALID OPTION'                                                
         B     PWFRET                                                           
*-                                                                              
*-       Pass back a return code.                                               
*-                                                                              
PWFRET   IF    (PWANARGS,GE,4),BEGIN                                            
         PRETVAL 4,STRING,(R1),(R0)                                             
         END                                                                    
*-                                                                              
*-       Also pass back the number of lines written.                            
*-                                                                              
         IF    (PWANARGS,GE,3),BEGIN                                            
         PRETVAL 3,INTEGER,L:PWACOUNT  Number of lines written                  
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
PWFEXIT  SCPOP ,                                                                
         PEND                                                                   
*-                                                                              
*-       PATH_WRITEFILE Options.                                                
*-                                                                              
         USING PWA,R6                                                           
PWFPRT   SCKW  NOWAIT,PWFNWT                                                    
         SCKW  WAIT,PWFWAIT,(P,I)                                               
         SCKW  LINES,PWFLINES                                                   
         SCKW  ,PWFBAD                                                          
*                                                                               
PWFNWT   PROC                                                                   
         SET   UPATFNOWAIT                                                      
         PEND                                                                   
*                                                                               
PWFWAIT  PROC                                                                   
         SET   UPATFNOWAIT                                                      
         IF    (R0,Z),EXIT                                                      
         CLEAR UPATFNOWAIT                                                      
         ST    R0,UPATWAIT                                                      
         PEND                                                                   
*                                                                               
PWFLINES PROC                                                                   
         SET   PWAFLINS                                                         
         VCALL NDETRNG                                                          
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
PWFBAD   PROC                                                                   
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R6                                                               
         DROP  R4                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PWFRTN -- Range processor co-routine to send any lines found                 
*    across the Suzan path.                                                     
*                                                                               
*    On entry:                                                                  
*      R1,R0 - line loc, len                                                    
*                                                                               
PWFXWA   RECORD BEGIN                                                           
PWFXWORD DS    F                   Temporary word                               
         END                                                                    
*-                                                                              
PWFRTN   PROC  PWFXWA                                                           
         L     R6,CPCWA                                                         
         WITH  (PWA,R6)                                                         
         FAIL  (PWA,NE,'PWA'),PATHERR1,'User path logic problem.'               
*                                                                               
         LR    R3,R1                                                            
         LR    R2,R0                                                            
         ST    R0,PWFXWORD                                                      
         SEG   PWFXWORD            Length                                       
         SEG   (R3),(R2)           Text (if any)                                
         SEGMARK                                                                
*                                                                               
         INCR  R15,PWACOUNT        Count number of lines                        
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  QUERY_FETCH(sno, rc, var1, var2, ...)                                        
*                                                                               
*    Fetch the next row of a table from the server.                             
*                                                                               
QFWA     RECORD BEGIN                                                           
QFARGP   DS    A                   Argument list ptr                            
QFNARGS  DS    F                   Number of args passed                        
QFPARMP  DS    A                   Return parameter area ptr                    
QFCURARG DS    F                   Current argument number                      
*                                                                               
QFPTRS   DS    2F                  Data buffer ptrs                             
         END                                                                    
*-                                                                              
PCQFETCH PROC  QFWA                                                             
         ST    R0,QFNARGS          Number of arguments                          
         ST    R1,QFARGP           Arglist ptr                                  
         ST    R6,QFPARMP          Return param area ptr                        
         MVC   QFCURARG,=F'2'      Set current arg (for QFETSAVE)               
         LA    R2,QFWA                                                          
         ST    R2,CPCWA            Save QFWA ptr                                
*                                                                               
         SETARGS '28ISSSSSSSS'     2-8 args                                     
         BNZ   QFEXIT                                                           
*                                                                               
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         L     R15,VNVALUE         Server number specified                      
         VCALL QFETLINE            Get next line                                
         STM   R0,R1,QFPTRS        Save data buffer ptrs                        
*-                                                                              
*-       The data is returned as tab separated fields.  We save                 
*-         the fields in the the variables, one at a time.                      
*-                                                                              
         WHILE (R0,POS),BEGIN      Still more...                                
         IF    (QFCURARG,GE,QFNARGS),BEGIN  Remainder in last arg...            
         ACALL QFETSAVE            Save everything in last arg                  
         CLEAR R15                 A-ok                                         
         B     QFEXIT              All done                                     
         END                                                                    
*                                                                               
         LR    R2,R1               Save start of field ptr                      
         WHILE ((R0,POS),AND,(@R1,NE,$TAB)),'LA R1,@R1+1; DECR R0'              
         STM   R0,R1,QFPTRS        Save updated ptrs                            
         LR    R0,R1                                                            
         SR    R0,R2                                                            
         LR    R1,R2               R1,R0 = field loc, len                       
         ACALL QFETSAVE            Save this field                              
*                                                                               
         LM    R0,R1,QFPTRS        Get data buffer ptrs                         
         LA    R1,@R1+1                                                         
         DECR  R0                  Skip first/next tab                          
         END                                                                    
*-                                                                              
*-       Set null values for variables which are not needed.                    
*-                                                                              
         WHILE ('CLEAR R0; ACALL QFETSAVE',Z),''                                
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
QFEXIT   PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  QFETSAVE -- Local routine to save the string passed into                     
*    the next variable in the list.                                             
*                                                                               
*    On entry:                                                                  
*       R1,R0 - variable value (loc, len)                                       
*       QFCURARG - current argument number                                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*       0 - ok                                                                  
*       4 - no more variables in the list                                       
*                                                                               
QFETSAVE PROC                                                                   
         L     R6,CPCWA                                                         
         WITH  (QFWA,R6)                                                        
*                                                                               
         CEIL  R0,MAXSTRLN         Truncate string to max                       
*-                                                                              
*-       Save the next variable in our argument list.                           
*-                                                                              
         L     R5,QFCURARG         Current argument number                      
         IF    (R5,LE,QFNARGS),BEGIN  We have a variable...                     
         DECR  R5                                                               
         MH    R5,=AL2(L'VPARM)                                                 
         A     R5,QFPARMP          Form current VNENTRY ptr                     
         WITH  (VNENTRY,R5)                                                     
         CLEAR VNENTRY                                                          
         SET   VNSTRING            Set string type                              
         SETMSG (R1),(R0)           String                                      
         STH   R0,VNSTRLEN         Save string length                           
         LR    R15,R0                                                           
         MOVE  R15,VNSTRLOC,@R1    Save string value                            
*                                                                               
         INCR  R5,QFCURARG         Kick argument number                         
*                                                                               
         CLEAR R15                 A-ok                                         
         END                                                                    
*-                                                                              
*-       No more variables, we are done.                                        
*-                                                                              
         ELSE  BEGIN               All done...                                  
         LA    R15,4               No more variables                            
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RPC_DISPLAY_ROWS(first-lineno, last-lineno)                                  
*                                                                               
*    This is a special SYSCALL for the Wylbur RPC server.                       
*                                                5/91, Niz                      
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
DRWA     RECORD BEGIN                                                           
DRLNO1   DS    F                   First lineno of range                        
DRLNO2   DS    F                   Last lineno of range                         
DRTEXT   DS    CL(&LINESZ)         Working line area                            
DRSG     SEGCB                                                                  
DRBUFL#  EQU   4000,,C'N'          Seg buffer length                            
         END                                                                    
*-                                                                              
PCDISROW PROC  DRWA                                                             
*-                                                                              
*-       Check parms.                                                           
*-                                                                              
         SETARGS '22WW'            2 ARGS: BOTH LINE NUMBERS                    
         BNZ   DISREXIT                                                         
*-                                                                              
*-       Get line-numbers.                                                      
*-                                                                              
         WITH  (VNENTRY,R5),BEGIN                                               
         LA    R5,ARG1(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,DRLNO1           First lineno in range                        
         LA    R5,ARG2(R1)                                                      
         L     R2,VNVALUE                                                       
         ST    R2,DRLNO2           Last lineno in range                         
         END                                                                    
*                                                                               
         XPUSH ,,DRBUFL#,PTR=R2                                                 
         SEGINIT @R2,DRBUFL#,DRSG,RTN=DRSEG  Initialize seg buffer              
*                                                                               
         SET   CPFFORCE            Force I/O (override quiet)                   
         SET   CPFNOUTTRIM         Don't trim trailing blanks                   
*-                                                                              
*-       Display lines as per "display_rows" rules.                             
*-                                                                              
         L     R4,DRLNO1           First lineno                                 
         WHILE (R4,LE,DRLNO2),BEGIN  Go through range...                        
         LR    R15,R4              Lineno to get                                
         SETMSG DRTEXT              Line area                                   
         VCALL GETLINE             Get next line                                
         IF    NEG,EXIT            No more lines, scram                         
         IF    (CPLCNO,GT,DRLNO2),EXIT  All done                                
*                                                                               
         IF    (R0,NP),BEGIN       Null line is wrong...                        
         SEGWR ,                   Unbuffer any partial line                    
         TCCR                                                                   
         TSEG  '152'                                                            
         TSEG  X'05'                                                            
         TSEG  'Unexpected null line (expecting ";" or "\")',,CR                
         END                                                                    
*                                                                               
         ELSE  BEGIN               We have something...                         
         DECR  R0                                                               
         LR    R2,R1                                                            
         AR    R2,R0               Last character in line                       
         IF    (@R2,EQ,';'),'SEGWR (R1),(R0)'                                   
         ELSEIF (@R2,EQ,'\'),'SEG (R1),(R0)'                                    
         ELSE  BEGIN               Error...                                     
         XPUSH R0,R1                                                            
         SEGWR ,                   Unbuffer any partial line                    
         TCR                                                                    
         TSEG  '152'               Error number                                 
         TSEG  X'05'                                                            
         TSEG  'Remote procedure did not end response line '                    
         TSEG  'with ";" or "\".',,CR                                           
*                                                                               
         TSEG  '152'               Error number                                 
         TSEG  X'05'                                                            
         TSEG  'Line: '                                                         
         XPOP  R0,R1                                                            
         A     R0,CVONE                                                         
         TSEG  (R1),(R0),CR        Add line text                                
         END                                                                    
         END                                                                    
*                                                                               
         L     R4,CPLCNO           Current lineno                               
         A     R4,CVONE            Get next lineno                              
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
DISREXIT PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DRSEG -- Routine to write the seg buffer (which is a single BTF              
*    line).                                                                     
*                                                                               
*     On entry:                                                                 
*       R15 - SEGCB addr                                                        
*                                                                               
DRSEG    PROC                                                                   
         LR    R5,R15              Segcb ptr                                    
         WITH  (SEGCB,R5)                                                       
*-                                                                              
*-       SEGWR                                                                  
*-                                                                              
         IF    SEGCBWR,BEGIN       SEGWR...                                     
*-                                                                              
*-       Time to change vertical bar separated data to tab                      
*-         separated data.                                                      
*-                                                                              
         IF    ((@R1,EQ,'|'),OR,(@R1+3,EQ,'|')),BEGIN  bar format...            
         LR    R3,R1               Copy data loc...                             
         LR    R2,R0               ...and length                                
*                                                                               
         WHILE (R2,POS),BEGIN      Go through line...                           
         IF    ((R2,GE,2),AND,(@R3,EQ,'\|')),BEGIN                              
         LR    R6,R2                                                            
         XPUSH R0,R1                                                            
         XPUSH ,,(R6),PTR=R4       Get room for a duplicate                     
         MOVEL @R4,@R3,(R2)        Save the data                                
         DECR  R2                                                               
         MOVEL @R3,@R4+1,(R2)      Copy it back                                 
         XPOP  ,,(R6)                                                           
         XPOP  R0,R1                                                            
         DECR  R0                  Also adjust real length                      
         END                                                                    
*                                                                               
         ELSEIF (@R3,EQ,'|'),BEGIN  Lone bar...                                 
         MVI   @R3,X'05'           Replace bar with tab character               
         END                                                                    
*                                                                               
         LA    R3,@R3+1            Next position                                
         DECR  R2                  Reduce length                                
         END                                                                    
         END                                                                    
*                                                                               
         TSEG  (R1),(R0)           Output the buffer                            
         TCCR                                                                   
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SCAN ( TOKEN, STRING [,TYPE] [,SKIPLIST ,STOPLIST] )                         
*                                                                               
*  SEE COMMENTS AT START OF MODULE.                                             
*                                                                               
PCSCANWA RECORD BEGIN                                                           
         XSA   R0,R8                                                            
PCSCCNT  DS    F                   ARG COUNT                                    
PCSCRETP DS    F                   ARG RETURN POINTER                           
PCSCSTR  DS    F                   INPUT STRING LOCATION                        
PCSCSTRL DS    F                   INPUT STRING LENGTH                          
PCSCSKIP DS    F                   SKIP STRING LOCATION                         
PCSCSKPL DS    F                   SKIP STRING LENGTH                           
PCSCSTOP DS    F                   STOP STRING LOCATION                         
PCSCSTPL DS    F                   STOP STRING LENGTH                           
PCSCTOK  DS    F                   TOKEN LOCATION                               
PCSCTOKL DS    F                   TOKEN LENGTH                                 
PCSCREM  DS    F                   REMAINDER LOCATION                           
PCSCREML DS    F                   REMAINDER LENGTH                             
PCSCTYP  DS    F                   TYPE LOCATION                                
PCSCTYPL DS    F                   TYPE LENGTH                                  
         END                                                                    
*-                                                                              
PCSCAN   PROC  PCSCANWA                                                         
*                                                                               
         COMMENT                   INITIALIZE WORK AREA                         
         ST    R0,PCSCCNT          SAVE ARG COUNT                               
         ST    R6,PCSCRETP         SAVE PARM RETURN AREA POINTER                
         CLEAR PCSCSKIP            CLEAR SKIP/STOP STRINGS                      
         CLEAR PCSCSKPL                                                         
         CLEAR PCSCSTOP                                                         
         CLEAR PCSCSTPL                                                         
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '25SSSSS'         2-5 ARGS, ALL STRINGS                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET INPUT PARMS                              
         USING VNENTRY,R5                                                       
         LA    R5,ARG2(R1)         GET/SAVE STRING LOC,LEN                      
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSTR                                                       
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSTRL                                                      
         IF    (R0,GE,4),BEGIN     IF SKIP STRING                               
         LA    R5,ARG4(R1)         GET/SAVE SKIP STRING                         
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSKIP                                                      
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSKPL                                                      
         END                                                                    
         IF    (R0,GE,5),BEGIN     IF STOP STRING                               
         LA    R5,ARG5(R1)         GET/SAVE STOP STRING                         
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSTOP                                                      
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSTPL                                                      
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   SET DEFAULT SKIP/STOP STRINGS                
         COMMENT                   IF NEEDED                                    
         IF    (PCSCSKPL,EQ,0),BEGIN     DEFAULT SKIP = ' ,'                    
         SETMSG ' ,'                                                            
         ST    R1,PCSCSKIP                                                      
         ST    R0,PCSCSKPL                                                      
         END                                                                    
         IF    (PCSCSTPL,EQ,0),BEGIN     DEFAULT STOP = ' ,=;'                  
         SETMSG ' ,=;'                                                          
         ST    R1,PCSCSTOP                                                      
         ST    R0,PCSCSTPL                                                      
         END                                                                    
*                                                                               
         COMMENT                   CALL SCAN ROUTINE                            
         L     R0,PCSCSTRL         R1,R0 - STRING LOC, LEN                      
         L     R1,PCSCSTR                                                       
         L     R2,PCSCSKIP         R2,R3 - SKIP STR LOC, LEN                    
         L     R3,PCSCSKPL                                                      
         L     R4,PCSCSTOP         R4,R5 - STOP STR LOC, LEN                    
         L     R5,PCSCSTPL                                                      
         VCALL SCANSTR             SCAN STRING                                  
         COMMENT                   RETURNS:                                     
         ST    R0,PCSCTOKL         R1,R0 - TOKEN LOC,LEN                        
         ST    R1,PCSCTOK                                                       
         ST    R2,PCSCREM          R2,R3 - REMAINDER LOC, LEN                   
         ST    R3,PCSCREML                                                      
         ST    R4,PCSCTYP          R4,R5 - TYPE LOC, LEN                        
         ST    R5,PCSCTYPL                                                      
*                                                                               
         COMMENT                   RETURN PARMS                                 
         L     R6,PCSCRETP         RETURN AREA ADDRESSING                       
         PRETVAL 1,STRING,L:PCSCTOK,L:PCSCTOKL                                  
         PRETVAL 2,STRING,L:PCSCREM,L:PCSCREML                                  
         IF    (PCSCCNT,GE,3),BEGIN                                             
         PRETVAL 3,STRING,L:PCSCTYP,L:PCSCTYPL                                  
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         END , OF ARGS ARE OK                                                   
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  SCAN_PARM ( TOKEN, STRING [,TYPE] [,SKIPLIST ,STOPLIST] )                    
*                                                                               
*                                                                               
*  SEE COMMENTS AT START OF MODULE.                                             
*                                                                               
*                                                                               
*                                                                               
PCSCANP  PROC  PCSCANWA                                                         
*                                                                               
         COMMENT                   INITIALIZE WORK AREA                         
         ST    R0,PCSCCNT          SAVE ARG COUNT                               
         ST    R6,PCSCRETP         SAVE PARM RETURN AREA POINTER                
         CLEAR PCSCSKIP            CLEAR SKIP/STOP STRINGS                      
         CLEAR PCSCSKPL                                                         
         CLEAR PCSCSTOP                                                         
         CLEAR PCSCSTPL                                                         
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '25SSSSS'         2-5 ARGS, ALL STRINGS                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET INPUT PARMS                              
         USING VNENTRY,R5                                                       
         LA    R5,ARG2(R1)         GET/SAVE STRING LOC,LEN                      
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSTR                                                       
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSTRL                                                      
         IF    (R0,GE,4),BEGIN     IF SKIP STRING                               
         LA    R5,ARG4(R1)         GET/SAVE SKIP STRING                         
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSKIP                                                      
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSKPL                                                      
         END                                                                    
         IF    (R0,GE,5),BEGIN     IF STOP STRING                               
         LA    R5,ARG5(R1)         GET/SAVE STOP STRING                         
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSTOP                                                      
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSTPL                                                      
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   SET DEFAULT SKIP/STOP STRINGS                
         COMMENT                   IF NEEDED                                    
         IF    (PCSCSKPL,EQ,0),BEGIN     DEFAULT SKIP = ' ,'                    
         SETMSG ' ,'                                                            
         ST    R1,PCSCSKIP                                                      
         ST    R0,PCSCSKPL                                                      
         END                                                                    
         IF    (PCSCSTPL,EQ,0),BEGIN     DEFAULT STOP = ' ,=;'                  
         SETMSG ' ,=;'                                                          
         ST    R1,PCSCSTOP                                                      
         ST    R0,PCSCSTPL                                                      
         END                                                                    
*                                                                               
         COMMENT                   CALL SCAN ROUTINE                            
         L     R0,PCSCSTRL         R1,R0 - STRING LOC, LEN                      
         L     R1,PCSCSTR                                                       
         L     R2,PCSCSKIP         R2,R3 - SKIP STR LOC, LEN                    
         L     R3,PCSCSKPL                                                      
         L     R4,PCSCSTOP         R4,R5 - STOP STR LOC, LEN                    
         L     R5,PCSCSTPL                                                      
         VCALL SCANPARM            SCAN STRING OR PARM                          
         COMMENT                   RETURNS:                                     
         ST    R0,PCSCTOKL         R1,R0 - TOKEN LOC,LEN                        
         ST    R1,PCSCTOK                                                       
         ST    R2,PCSCREM          R2,R3 - REMAINDER LOC, LEN                   
         ST    R3,PCSCREML                                                      
         ST    R4,PCSCTYP          R4,R5 - TYPE LOC, LEN                        
         ST    R5,PCSCTYPL                                                      
*                                                                               
         COMMENT                   RETURN PARMS                                 
         L     R6,PCSCRETP         RETURN AREA ADDRESSING                       
         PRETVAL 1,STRING,L:PCSCTOK,L:PCSCTOKL                                  
         PRETVAL 2,STRING,L:PCSCREM,L:PCSCREML                                  
         IF    (PCSCCNT,GE,3),BEGIN                                             
         PRETVAL 3,STRING,L:PCSCTYP,L:PCSCTYPL                                  
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         END , OF ARGS ARE OK                                                   
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*   SCAN_MAILHDR -- Scan RFC-822 mail header                                    
*                                                                               
*     On entry, current active file contains mail item                          
*                                                                               
*     On exit, scanned mail header fields are returned in an active             
*     file containing lines with the following format:                          
*                                                                               
*       col 1-16 - field name from header                                       
*       col 18   - address type indicator                                       
*                  'f' if from, sender, reply-to, or errors-to                  
*                  't' if to, cc, or bcc                                        
*       col 20+  - field contents                                               
*                                                                               
*     Arguments:                                                                
*       1 - on entry, output active file number (or zero)                       
*       2 - on entry, options string                                            
*       3 - on exit, last line of header                                        
*       4 - on exit, return code ('OK' or 'ERROR')                              
*                                                                               
*     Options:                                                                  
*       debug  - turn on debugging option                                       
*       nolist - suppress listing header lines as they are read                 
*       noptr  - suppress 'pointers' lines in output file                       
*                                                                               
RFCWA    RECORD BEGIN                                                           
RFCOUTNO DS    F                   Output active file number                    
RFCENDLN DS    F                   End line of header                           
RFCRETPT DS    F                   Return area pointer                          
RFCALIN1 DS    F                   Address start line number                    
RFCACOL1 DS    F                   Address start column                         
RFCALIN2 DS    F                   Address end line number                      
RFCACOL2 DS    F                   Address end column number                    
RFCTLIN1 DS    F                   Token start line number                      
RFCTCOL1 DS    F                   Token start column                           
RFCTLIN2 DS    F                   Token end line number                        
RFCTCOL2 DS    F                   Token end column                             
RFCLINE  DS    F                   Current active file line number              
RFCLINCT DS    F                   Header line count                            
RFCIPTR  DS    F                   Input buffer text pointer                    
RFCILEN  DS    F                   Input buffer text length                     
RFCIEND  DS    F                   Input buffer end pointer                     
RFCFIELD DS    CL20                Current header field name                    
RFCTTYPE DS    CL4                 Current token type                           
*                                                                               
RFCNEXTC DS    X                   First character of next token                
*                                                                               
RFCFLAGS FLAG                                                                   
         FLAG  RFCFLEOD            End of mail header                           
         FLAG  RFCFLDEB            Debug option - write debug info              
         FLAG  RFCFLNOL            Nolist option - no header listing            
         FLAG  RFCFLNPT            Noptr option - no 'pointers' lines           
         FLAG  RFCFLBAD            Scan error in header                         
*                                                                               
RFCFFLAG FLAG  ,                   Cleared before scanning new field            
         FLAG  RFCFLRCP            Recipient address                            
         FLAG  RFCFLFRM            From address                                 
         FLAG  RFCFLERR            Scan error in current field                  
         FLAG  RFCFLGRP            Scanning RFC-822 address group               
         FLAG  RFCFLEOF            End of field                                 
         FLAG  RFCFLDOM            Current address has domain                   
*                                                                               
RFCZLEN  EQU   *-RFCWA             End of area cleared at entry                 
*                                                                               
RFCIBUF  DS    CL236               Input line buffer                            
RFCTEMP  DS    CL232               Work area                                    
RFCTRT   DS    XL256               Translate table work area                    
*                                                                               
RFCMAXLN EQU   120                 Max string length                            
RFCTOKLN DS    F                   Current token length                         
RFCTOKEN DS    CL(RFCMAXLN)        Current token text                           
RFCADDLN DS    F                   Address text length                          
RFCADDBF DS    CL(RFCMAXLN)        Address text buffer                          
RFCNAMLN DS    F                   Name text length                             
RFCNAME  DS    CL(RFCMAXLN)        Name text                                    
RFCCOMLN DS    F                   Comment text length                          
RFCCOMM  DS    CL(RFCMAXLN)        Comment text buffer                          
         END                                                                    
         EJECT                                                                  
RFCSCANH PROC  RFCWA                                                            
         XC    RFCWA(RFCZLEN),RFCWA Clear work area                             
         SETARGS '44ISWS'          Check parms                                  
         IF    NZ,EXIT             Return if error                              
*                                                                               
         ST    R6,RFCRETPT         Save return area pointer                     
         LA    R6,RFCWA            R6 IS RFCWA IN ALL CALLED RTNS               
         MVC   RFCOUTNO,ARG1+VNVALUE-VNENTRY(R1)  Output active file            
         LH    R0,ARG2+VNSTRLEN-VNENTRY(R1)   Option string length              
         LA    R1,ARG2+VNSTRLOC-VNENTRY(R1)   Option string address             
         ACALL RFCSCNOP                       Scan options string               
         IF    (R15,NZ),' EXIT RFCSCANH '                                       
*                                                                               
         ACALL RFCGETLN            Read first active file line                  
         IF    (RFCIBUF,LE,' '),BEGIN   Check first line                        
         ACALL RFCERROR                                                         
         B     RFCEXIT                                                          
         END                                                                    
*-                                                                              
*-       Main loop - scan field name from current line and call                 
*-       processing routine                                                     
*-                                                                              
         LOOP  BEGIN                                                            
         CLEAR RFCFFLAG            Clear flags                                  
         ACALL RFCSCAN             Scan next token                              
         IF    ((RFCTTYPE,NE,'word'),OR,  If not valid                 *        
               (RFCNEXTC,NE,':')),BEGIN     header line,                        
         ACALL RFCERROR                       signal error                      
         B     RFCEXIT                          and exit                        
         END                                                                    
         MVC   RFCFIELD,RFCTOKEN   Save field name                              
         L     R15,CVLOWTBL        Convert field name                           
         TR    RFCFIELD,@R15         to lower case                              
         LA    R2,RFCFIELD                                                      
         IF    (RFCFIELD,EQ,'resent-'),'LA R2,7(R2)'                            
         IF    ((@R2,EQ,'sender '),OR,                                 *        
               (@R2,EQ,'errors-to '),OR,                               *        
               (@R2,EQ,'from '),OR,                                    *        
               (@R2,EQ,'reply-to ')),BEGIN                                      
         SET   RFCFLFRM            Flag 'from' address                          
         ACALL RFCALIST            Go scan address list                         
         END                                                                    
         ELSEIF ((@R2,EQ,'to '),OR,                                    *        
               (@R2,EQ,'cc '),OR,                                      *        
               (@R2,EQ,'bcc ')),BEGIN                                           
         SET   RFCFLRCP            Flag recipient address                       
         ACALL RFCALIST            Go scan address list                         
         END                                                                    
         ELSEIF (@R2,EQ,'subject '),BEGIN                                       
         ACALL RFCSUBJ             Go get subject text                          
         END                                                                    
*-                                                                              
*-       Skip to the next field.  When the EOF flag is set then                 
*-       either we are at the first line of the next field or                   
*-       at the end of the header.                                              
*-                                                                              
         WHILE ^RFCFLEOF,BEGIN     While not at end of field,                   
         ACALL RFCGETLN            Get next header line                         
         END                                                                    
         IF    RFCFLEOD,EXIT       Exit if end of header                        
         END                                                                    
*-                                                                              
*-       Return to caller                                                       
*-                                                                              
RFCEXIT  L     R6,RFCRETPT         Return area pointer                          
         PRETVAL 3,LINENO,L:RFCENDLN  Return end line number                    
         SETMSG 'OK'                   Set return code                          
         IF    RFCFLBAD,'SETMSG "ERROR"'                                        
         PRETVAL 4,STRING,(R1),(R0)   Return rc string                          
         PEND                                                                   
         USING RFCWA,R6                                                         
         EJECT                                                                  
*box                                                                            
*                                                                               
*   RFCALIST -- Scan address list                                               
*                                                                               
*     On entry, current scan token is field name                                
*                                                                               
RFCALIST PROC                                                                   
         ACALL RFCSCAN             Scan ':' following field name                
         IF    (RFCTOKEN,NE,': '),BEGIN                                         
         ACALL RFCERROR                                                         
         EXIT  RFCALIST                                                         
         END                                                                    
*                                                                               
         LOOP  BEGIN                                                            
         ACALL RFCSCAN             Scan first token of address                  
         IF    (RFCFLEOF+RFCFLERR,NZ),EXIT  Exit if err or EOF                  
         ACALL RFCADDR             Go parse address                             
         END                                                                    
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*   RFCADDR - Scan RFC-822 address                                              
*                                                                               
*     On entry, current token is first token of address                         
*                                                                               
*     Scanned addresses are added to output active file, followed               
*     by 'name' and 'range' lines                                               
*                                                                               
*     On exit, current token is delimiter after address, and                    
*     scanned address has been added to output file                             
*                                                                               
RFCADDR  PROC                                                                   
         MVC   RFCALIN1,RFCTLIN1   Save start line number                       
         MVC   RFCACOL1,RFCTCOL1   Save start column position                   
         CLEAR RFCADDLN            Clear address area length                    
         CLEAR RFCNAMLN            Clear name area length                       
         CLEAR RFCFLDOM            Clear domain flag                            
*-                                                                              
*-       Process route-addr without enclosing brackets                          
*-                                                                              
         IF    (RFCTOKEN,EQ,'@'),BEGIN                                          
         ACALL RFCRTADD                                                         
         B     RFCADDRX                                                         
         END                                                                    
*-                                                                              
*-       If first token is a 'word', then the address must be                   
*-       one of the following forms:                                            
*-                                                                              
*-          userid                                                              
*-          userid at domain                                                    
*-          userid@domain                                                       
*-          name <route-addr>                                                   
*-          group:...;                                                          
*-                                                                              
*-       If the address is one or more words without a domain                   
*-       then it is scanned and ignored                                         
*-                                                                              
         IF    (RFCTTYPE,EQ,'word'),BEGIN                                       
*                                                                               
         IF    (RFCNEXTC,EQ,'@'),BEGIN    If user@domain,                       
         ACALL RFCADDRS                   Go scan it                            
         B     RFCADDRX                     and finish up                       
         END                                                                    
*                                                                               
         CLEAR R2                  Clear word counter                           
         CLEAR R3                  Clear 'at' flag                              
*                                                                               
         WHILE (RFCTTYPE,EQ,'word'),BEGIN  Scan word list                       
*-                                                                              
*-       Following logic handles 'user at domain'                               
*-                                                                              
         INCR  R2                  Incr word counter                            
         MVC   RFCTEMP(3),RFCTOKEN  Copy token                                  
         L     R15,CVLOWTBL         Convert to                                  
         TR    RFCTEMP(2),@R15        Lower case                                
         IF    ((RFCTEMP,EQ,'at '),AND,   If 'at',                     *        
               (R2,EQ,2)),BEGIN            and 2nd word in address,             
         SETMSG '@'                         Add '@' to address buffer           
         LA    R15,RFCADDBF                                                     
         ACALL RFCPUTS                                                          
         LR    R3,R2                      Flag 'at' scanned                     
         END                                                                    
         ELSE  BEGIN               Else not 'at',                               
         ACALL RFCADDTK            Add token to address buffer                  
         END                                                                    
*                                                                               
         IF    ((RFCNEXTC,EQ,' '),OR,    If at end of field,           *        
               (RFCNEXTC,EQ,';'),OR,       or at ';'                   *        
               (RFCNEXTC,EQ,',')),BEGIN     or at ',',                          
         IF    ((R2,EQ,3),AND,               and 3 words scanned,      *        
               (R3,EQ,2)),BEGIN               and word 2 was 'at',              
         CLEAR RFCNAMLN                   Clear name buffer                     
         SET   RFCFLDOM                   Have address with domain              
         MVC   RFCALIN2,RFCTLIN2          Save address end line                 
         MVC   RFCACOL2,RFCTCOL2          Save address end column               
         ACALL RFCSCAN                    Scan next token                       
         END                                                                    
         ELSEIF (R2,GT,1),BEGIN           Else if multiple words,               
         ACALL RFCERROR                   Flag syntax error                     
         END                                                                    
         B     RFCADDRX                   Go finish up                          
         END                                                                    
*                                                                               
         IF (RFCNAMLN,NZ),BEGIN           If already have name data,            
         LA    R0,1                       Add blank space                       
         LA    R1,CVBLANKS                 to name area                         
         LA    R15,RFCNAME                                                      
         ACALL RFCPUTS                                                          
         END                                                                    
         L     R0,RFCTOKLN                Add token                             
         LA    R1,RFCTOKEN                 to name area                         
         LA    R15,RFCNAME                                                      
         ACALL RFCPUTS                                                          
*                                                                               
         ACALL RFCSCAN                    Scan next token                       
         END                                                                    
*                                                                               
         CLEAR RFCADDLN                   Reset address buffer                  
*                                                                               
         IF    (RFCTOKEN,EQ,': '),BEGIN   If have 'group',                      
         ACALL RFCGROUP                  Go scan group                          
         EXIT  RFCADDR                   Return                                 
         END                                                                    
         END                                                                    
*-                                                                              
*-       Scan <route-addr>                                                      
*-                                                                              
         IF    (RFCTOKEN,EQ,'<'),BEGIN                                          
         ACALL RFCSCAN             Scan next token                              
         ACALL RFCRTADD            Scan address                                 
         IF    (RFCTOKEN,NE,'>'),'ACALL RFCERROR; EXIT RFCADDR'                 
         IF    (RFCNAMLN,Z),BEGIN  If no name,                                  
         MVC   RFCNAMLN,RFCCOMLN   Set name from                                
         MVC   RFCNAME,RFCCOMM      any comment text                            
         END                                                                    
         ACALL RFCSCAN             Scan past '>'                                
         END                                                                    
*-                                                                              
*-       Check that we have ended at a correct delimiter                        
*-                                                                              
RFCADDRX IF    (((RFCTOKEN,NE,' '),OR,RFCFLGRP),AND,                   *        
               (RFCTOKEN,NE,','),AND,                                  *        
               ((RFCTOKEN,NE,';'),OR,^RFCFLGRP)),                      *        
               'ACALL RFCERROR'                                                 
         IF    RFCFLERR,EXIT       Exit if error encountered                    
         IF    ^RFCFLDOM,EXIT      Ignore if no domain                          
*-                                                                              
*-       Add address to output file                                             
*-                                                                              
         MVC   RFCTEMP(19),RFCFIELD           Move in field name                
         MVI   RFCTEMP+17,C'f'                Flag address as                   
         IF    RFCFLRCP,'MVI RFCTEMP+17,C"t"'  'from' or 'to'                   
         MVC   RFCTEMP+19(L'RFCADDBF),RFCADDBF  Move in address                 
         LA    R0,19                          Compute total                     
         A     R0,RFCADDLN                      length                          
         LA    R1,RFCTEMP                     Point to buffer                   
         ACALL RFCPUTLN                       Go add to output file             
*-                                                                              
*-       Add name to output file.                                               
*-                                                                              
         IF    (RFCNAMLN,NZ),BEGIN            If have name,                     
         MVC   RFCTEMP(19),=CL19'name'        Flag as name                      
         MVC   RFCTEMP+19(L'RFCNAME),RFCNAME  Move in name                      
         LA    R0,19                          Compute                           
         A     R0,RFCNAMLN                      total length                    
         LA    R1,RFCTEMP                     Point to buffer                   
         ACALL RFCPUTLN                       Go add to output file             
         END                                                                    
*-                                                                              
*-       Add active file pointers for address to output file                    
*-                                                                              
         IF    ^RFCFLNPT,BEGIN     If 'noptr' not specified,                    
         MVC   RFCTEMP,CVBLANKS                                                 
         MVC   RFCTEMP(8),=C'pointers'                                          
         LA    R1,RFCTEMP+19                                                    
         BTR   (R1),(0,3),RFCALIN1   Start line no                              
         AR    R1,R0                                                            
         BTD   @R1+1,0,RFCACOL1      Start column                               
         AR    R1,R0                                                            
         BTR   @R1+1,(0,3),RFCALIN2  End line no                                
         AR    R1,R0                                                            
         BTD   @R1+1,0,RFCACOL2      End column                                 
         AR    R0,R1                                                            
         LA    R1,RFCTEMP                                                       
         SR    R0,R1                                                            
         ACALL RFCPUTLN                                                         
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*  RFCRTADD -- Scan route-address                                               
*                                                                               
*    On entry, current token is start of address                                
*                                                                               
RFCRTADD PROC                                                                   
         MVC   RFCALIN1,RFCTLIN1   Save start line number                       
         MVC   RFCACOL1,RFCTCOL1   Save start column position                   
*                                                                               
         IF    (RFCTOKEN,EQ,'@'),BEGIN                                          
         LOOP  BEGIN                                                            
         ACALL RFCADDTK                 Add '@' to address                      
         ACALL RFCSCAN                  Scan domain                             
         IF    (RFCTTYPE,NE,'word'),'ACALL RFCERROR; EXIT RFCRTADD'             
         ACALL RFCADDTK                 Add domain to address                   
         ACALL RFCSCAN             Scan next token                              
         ACALL RFCADDTK            Add to address                               
         IF    (RFCTOKEN,NE,','),EXIT   Done if not ','                         
         ACALL RFCSCAN                  Scan next token                         
         IF    (RFCTOKEN,NE,'@'),'ACALL RFCERROR; EXIT RFCRTADD'                
         END                                                                    
         IF    (RFCTOKEN,NE,': '),'ACALL RFCERROR; EXIT RFCRTADD'               
         ACALL RFCSCAN                  Scan next token                         
         END                                                                    
*                                                                               
         ACALL RFCADDRS            Scan addr-spec                               
         PEND                                                                   
         SPACE 3                                                                
*box                                                                            
*  RFCADDRS -- Scan simple address (RFC-822 'addr-spec')                        
*                                                                               
*    On entry, current token is start of address                                
*                                                                               
*    On exit, current token is delimiter after address                          
*                                                                               
RFCADDRS PROC                                                                   
         IF    (RFCTTYPE,NE,'word'),BEGIN                                       
         ACALL RFCERROR                                                         
         EXIT  RFCADDRS                                                         
         END                                                                    
*                                                                               
         ACALL RFCADDTK            Move local-part to output buffer             
*                                                                               
         LOOP  BEGIN                                                            
         MVC   RFCALIN2,RFCTLIN2   Save address end line                        
         MVC   RFCACOL2,RFCTCOL2   Save address end column                      
         ACALL RFCSCAN             Scan next token                              
         MVC   RFCTEMP(3),RFCTOKEN   Copy first 3 chars                         
         L     R15,CVLOWTBL          Convert to                                 
         TR    RFCTEMP(2),@R15         Lower case                               
         IF    ((RFCTEMP,NE,'@'),AND,  If not '@'                      *        
               (RFCTEMP,NE,'at ')),EXIT  and not 'at', exit loop                
         SETMSG '@'                       Add '@' to address buffer             
         LA    R15,RFCADDBF                                                     
         ACALL RFCPUTS                                                          
         ACALL RFCSCAN             Scan domain                                  
         IF    (RFCTTYPE,NE,'word'),'ACALL RFCERROR; EXIT RFCADDRS'             
         ACALL RFCADDTK            Move domain to address buffer                
         SET   RFCFLDOM            Flag domain scanned                          
         IF    (RFCNAMLN,Z),BEGIN  If no name yet,                              
         MVC   RFCNAMLN,RFCCOMLN   Set name from any                            
         MVC   RFCNAME,RFCCOMM       trailing comment text                      
         END                                                                    
         END                                                                    
         PEND                                                                   
         SPACE 3                                                                
*box                                                                            
*  RFCGROUP -- Scan RFC-822 group specification                                 
*                                                                               
*    On entry, current token is ':'                                             
*                                                                               
RFCGROUP PROC                                                                   
         IF    (^RFCFLRCP,OR,      If not recipient address            *        
               RFCFLGRP),BEGIN       or already in group,                       
         ACALL RFCERROR            Signal error                                 
         EXIT  RFCGROUP            Return                                       
         END                                                                    
*                                                                               
         ACALL RFCSCAN             Scan past ':'                                
         SET   RFCFLGRP            Flag in group                                
*                                                                               
         WHILE (RFCTOKEN,NE,';'),BEGIN Loop to final ';'                        
         ACALL RFCADDR             Scan address                                 
         IF    RFCFLERR,EXIT       Exit if error                                
         IF    (RFCTOKEN,EQ,','),'ACALL RFCSCAN'                                
         END                                                                    
*                                                                               
         CLEAR RFCFLGRP            Clear group flag                             
         ACALL RFCSCAN             Scan past ';'                                
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RFCSUBJ -- Scan subject line and put in output file                          
*                                                                               
*    On entry, current token is field name ('subject')                          
*    Current scan pointer points to ':' following                               
*    the field name.                                                            
*                                                                               
RFCSUBJ  PROC                                                                   
         L     R1,RFCIPTR          Get input pointer                            
         INCR  R1                  Step past ':'                                
         L     R0,RFCIEND          End of current line                          
         SR    R0,R1               Get remaining length                         
         VCALL LRTRIM              Trim blanks                                  
         IF    (R0,NP),EXIT        Ignore null subject                          
         MVC   RFCTEMP(19),RFCFIELD   Move field name to work area              
         LR    R15,R0                 Copy length                               
         DEX   R15,'MVC RFCTEMP+19(0),@R1'  Move text to work area              
         A     R0,=A(19)              Compute total length                      
         LA    R1,RFCTEMP             Work area pointer                         
         ACALL RFCPUTLN               Write line to output file                 
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*   RFCSCAN - Scan next token from input file                                   
*                                                                               
*     On entry,                                                                 
*       - RFCIPTR points to start of next token                                 
*                                                                               
*     On exit,                                                                  
*       - RFCTOKEN contains token                                               
*       - RFCTTYPE contains RFC-822 token type (word, eof, or spec)             
*       - RFCNEXTC contains first character of next token                       
*       - RFCIPTR  points to start of next token                                
*                                                                               
RFCSCAN  PROC                                                                   
         CLEAR RFCCOMLN            Clear comment text length                    
         CLEAR RFCTOKLN            Clear token length                           
         MVC   RFCTOKEN,CVBLANKS   Clear token area                             
         MVC   RFCTTYPE,=C'eof '   Set token type                               
*                                                                               
         IF    (RFCFLEOF+RFCFLERR,NZ),'EXIT RFCSCAN'                            
*                                                                               
         MVC   RFCTLIN1,RFCLINE    Save token start line                        
         L     R1,RFCIPTR          Compute                                      
         LA    R0,RFCIBUF-1         current                                     
         SR    R1,R0                 scan column                                
         ST    R1,RFCTCOL1         Save token start column                      
*-                                                                              
*-       Scan next token                                                        
*-                                                                              
         L     R1,RFCIPTR          Get current scan pointer                     
         CLEAR R2                  Clear TRT return reg                         
*                                                                               
         LOOP  BEGIN                                                            
         TRT   @R1(256),RFCCTAB    Scan for delimiter                           
         IF    (@R1,EQ,'::'),BEGIN  Patch for Decnet addresses                  
         TRT   @R1+2(256),RFCCTAB   Scan past '::'                              
         END                                                                    
         IF    (R2,EQ,RFC#DLIM),EXIT  Exit if delimiter                         
         LA    R15,RFCTOKEN        Point to output area                         
         ACALL RFCSCNQS            Scan quoted string                           
         IF    RFCFLERR,RFCSCERR   Check for error                              
         END                                                                    
*-                                                                              
*-       Update token fields                                                    
*-                                                                              
         MVC   RFCTTYPE,=C'word'   Assume standard token type                   
         IF    ((RFCTOKLN,Z),AND,  If no data in token buffer,         *        
               (R1,EQ,RFCIPTR)),BEGIN  and scan pointer unchanged,              
         MVC   RFCTTYPE,=C'spec'       Token is single special char             
         INCR  R1                      Increment scan pointer                   
         END                                                                    
*                                                                               
         LA    R15,RFCTOKEN        Point to output area                         
         ACALL RFCSCSEG            Move text segment to output area             
*                                                                               
         L     R1,RFCIPTR          Get current pointer                          
         LA    R0,RFCIBUF          Compute                                      
         SR    R1,R0                token end column                            
         ST    R1,RFCTCOL2         Save value                                   
         MVC   RFCTLIN2,RFCLINE    Save token end line                          
*                                                                               
         IF    RFCFLDEB,BEGIN      If debug set,                                
         TSEG  'Token scanned: '     write message                              
         TSEG  RFCTOKEN,L:RFCTOKLN,CR                                           
         END                                                                    
*-                                                                              
*-       Scan past blanks and comments to start of next                         
*-       token and put first character in RFCNEXTC. Save                        
*-       any comment text encountered.                                          
*-                                                                              
         L     R1,RFCIPTR          Get input pointer                            
         LOOP  BEGIN                                                            
         L     R15,RFCIEND         Compute                                      
         SR    R15,R1               remaining length                            
         CLEAR R2                  Clear TRT result reg                         
         DTEX  R15,'TRT @R1(0),RFCBLKTR'  Scan past blanks                      
         IF    (R2,EQ,255),EXIT        Exit if have character                   
         IF    (R2,Z),BEGIN            If end of line,                          
         ACALL RFCGETLN            Get next line                                
         IF    RFCFLEOF,BEGIN      If end of field,                             
         MVI   RFCNEXTC,C' '       Set blank next char                          
         EXIT  RFCSCAN             Return                                       
         END                                                                    
         L     R1,RFCIPTR          Get new scan pointer                         
         END                                                                    
         ELSE  BEGIN               Else hit '(' at start of comment             
         ST    R1,RFCIPTR          Update start pointer                         
         CLEAR RFCCOMLN            Reset comment length                         
         LA    R15,RFCCOMM         Point to output area                         
         ACALL RFCSCNQS            Scan past comment                            
         IF    RFCFLERR,RFCSCERR   Check for error                              
         END                                                                    
         END                                                                    
*                                                                               
         ST    R1,RFCIPTR          Save new scan pointer                        
         MVC   RFCNEXTC,@R1        Set next character                           
         EXIT  RFCSCAN             Return                                       
*-                                                                              
*-       Error scanning quoted string or comment                                
*-                                                                              
RFCSCERR CLEAR RFCTOKLN            Set null token                               
         MVC   RFCTOKEN,CVBLANKS                                                
         MVC   RFCTTYPE,=C'err '                                                
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*   RFCSCNQS -- Scan quoted string or comment                                   
*                                                                               
*     On entry:                                                                 
*       R1  - current scan pointer                                              
*       R15 - output area                                                       
*     On exit:                                                                  
*       R1  - updated scan pointer                                              
*                                                                               
RFCSCNQS PROC                                                                   
         CLEAR RFCTRT              Clear TRT area                               
         MVI   RFCTRT+C'\',1       Stop on '\'                                  
         IF    (@R1,EQ,'"'),BEGIN  If quoted string,                            
         MVI   RFCTRT+C'"',1       Stop on quote                                
         END                                                                    
         ELSE  BEGIN               Else scanning comment,                       
         MVI   RFCTRT+C'(',1       Stop on '('                                  
         MVI   RFCTRT+C')',1       Stop on ')'                                  
         LA    R3,1                Init nesting level                           
         END                                                                    
*                                                                               
         LR    R5,R15              Save output pointer                          
         INCR  R1                  Step past leading char                       
*                                                                               
RFCSCNQL LOOP  BEGIN                                                            
         CLEAR R2                  Clear TRT result reg                         
         L     R15,RFCIEND         Compute                                      
         SR    R15,R1               remaining text length                       
         DTEX  R15,'TRT @R1(0),RFCTRT'  Scan for delimiter                      
*                                                                               
         IF    (R2,Z),BEGIN        If off end of line,                          
         L     R1,RFCIEND          Set end pointer                              
         LR    R15,R5              Output area pointer                          
         ACALL RFCSCSEG            Move text segment to output area             
         ACALL RFCGETLN            Get next line                                
         IF    RFCFLEOF,BEGIN      If end of field,                             
         ACALL RFCERROR            Signal scan error                            
         EXIT  RFCSCNQS            Return                                       
         END                                                                    
         L     R1,RFCIPTR          Get new input pointer                        
         END                                                                    
*                                                                               
         ELSEIF (@R1,EQ,'"'),'EXIT RFCSCNQL'  If quote, exit loop               
*                                                                               
         ELSEIF (@R1,EQ,'\'),BEGIN  If escape char,                             
         INCR  R1                   Step past it                                
         END                                                                    
*                                                                               
         ELSEIF (@R1,EQ,'('),BEGIN  If open paren,                              
         INCR  R3                   Incr nesting level                          
         END                                                                    
*                                                                               
         ELSEIF (@R1,EQ,')'),BEGIN  If close paren,                             
         DECR  R3                   Decr nesting level                          
         IF    (R3,Z),'EXIT RFCSCNQL'  If final paren, exit loop                
         END                                                                    
*                                                                               
         INCR  R1                  Step past current character                  
         END                                                                    
*                                                                               
         INCR  R1                  Step past final character                    
         LR    R15,R5              Output area pointer                          
         ACALL RFCSCSEG            Move text segment to output area             
         PRETURN (R1)                                                           
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*  RFCSCSEG -- Add scanned segment to output area                               
*                                                                               
*    On entry:  R1  - end of segment (RFCIPTR -> start)                         
*               R15 - output buffer pointer                                     
*                                                                               
RFCSCSEG PROC                                                                   
         LR    R2,R1               Save scan pointer                            
         LR    R0,R1               Copy current pointer                         
         S     R0,RFCIPTR          Compute segment length                       
         L     R1,RFCIPTR          Get start of string                          
         ACALL RFCPUTS             Put string in output area                    
         LR    R1,R2               Restore scan pointer                         
         ST    R1,RFCIPTR          Update saved pointer                         
         PEND                                                                   
         EJECT                                                                  
*-                                                                              
*-       Character scan translate table                                         
*-                                                                              
RFC#CHAR EQU   0                   Non-special character                        
RFC#DLIM EQU   1                   Delimiter character                          
RFC#QUOT EQU   2                   String quote                                 
*                                                                               
RFCCTAB  DC    256AL1(RFC#CHAR)                                                 
         ORG   RFCCTAB+X'05'                                                    
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C' '                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C'('                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C')'                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C'<'                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C'>'                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C'@'                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C','                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C';'                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C':'                                                     
         DC    AL1(RFC#DLIM)                                                    
         ORG   RFCCTAB+C'"'                                                     
         DC    AL1(RFC#QUOT)                                                    
         ORG   RFCCTAB+256                                                      
         SPACE 2                                                                
*-                                                                              
*-       Blank scan translate table                                             
*-                                                                              
RFCBLKTR DC    256X'FF'                                                         
         ORG   RFCBLKTR+X'05'                                                   
         DC    X'00'                                                            
         ORG   RFCBLKTR+C' '                                                    
         DC    X'00'                                                            
         ORG   RFCBLKTR+C'('                                                    
         DC    X'01'                                                            
         ORG   RFCBLKTR+256                                                     
         EJECT                                                                  
*box                                                                            
*   RFCGETLN -- Get next line from active file                                  
*                                                                               
RFCGETLN PROC                                                                   
         INCR  R0,RFCLINCT         Incr line counter                            
         MVC   RFCIBUF,CVBLANKS    Blank input buffer                           
         LA    R1,RFCIBUF          Input buffer                                 
         LA    R2,RFCLINE          Line number                                  
         CLEAR R3                  Active file number                           
         VCALL GTNEXT              Get next line                                
         IF    ((R15,NZ),OR,       If no more lines,                   *        
               (R0,Z)),BEGIN         or null line,                              
         CLEAR R0                  Force null line                              
         SET   RFCFLEOF            Flag end of field                            
         SET   RFCFLEOD            Flag end of header                           
         END                                                                    
*                                                                               
         IF    (R0,NZ),BEGIN       If not null line,                            
         MVC   RFCENDLN,RFCLINE    Update last line                             
         END                                                                    
*                                                                               
         ST    R0,RFCILEN          Save input length                            
         LA    R1,RFCIBUF          Start of buffer                              
         ST    R1,RFCIPTR          Set new input pointer                        
         AR    R1,R0               End of buffer                                
         ST    R1,RFCIEND          Set new end pointer                          
*                                                                               
         IF    ((RFCIBUF,NE,' '),AND,  If not                          *        
               (RFCIBUF,NE,X'05')),BEGIN   continuation,                        
         SET   RFCFLEOF                Set end of field flag                    
         END                                                                    
*                                                                               
         IF    (^RFCFLNOL,AND,(RFCILEN,NZ)),BEGIN  Log line                     
         TSEG  RFCIBUF,L:RFCILEN,CR  Write line                                 
         END                                                                    
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*  RFCADDTK -- Add current token to address buffer                              
*                                                                               
RFCADDTK PROC                                                                   
         L     R0,RFCTOKLN         Token length                                 
         LA    R1,RFCTOKEN         Token address                                
         LA    R15,RFCADDBF        Output area                                  
         ACALL RFCPUTS             Put string in output area                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*  RFCPUTS -- Put string in output area                                         
*                                                                               
*    On entry:                                                                  
*      R0,R1 - string len and addr                                              
*      R15   - output area (length word precedes @R15)                          
*                                                                               
RFCPUTS  PROC                                                                   
         SH    R15,=Y(4)           Back up to length word                       
         L     R2,@R15             Get current length                           
         LR    R3,R2               Compute new                                  
         AR    R3,R0                 total length                               
         IF    (R3,GT,RFCMAXLN),BEGIN  If overflow,                             
         ACALL RFCERROR                Flag scan error                          
         EXIT  RFCPUTS                 Return                                   
         END                                                                    
         ST    R3,@R15             Save new total length                        
         LA    R15,4(R2,R15)       Set target for string move                   
         LR    R14,R0              Copy input string length                     
         DTEX  R14,'MVC @R15(0),@R1'  Move string to output area                
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  RFCPUTLN -- Write line to output file                                        
*                                                                               
*    On entry, text len and addr in R0 and R1                                   
*                                                                               
RFCPUTLN PROC                                                                   
         L     R3,RFCOUTNO         Get active file number                       
         IF    (R3,Z),EXIT         Exit if none                                 
         VCALL PTAPPEND  ,                                                      
* BELOW IS HARD TO DO AND NEVER OCCURES,, UNLESS FULL ACTIVE                    
* SO WE JUST SKIP IT !                                                          
*        IF    (R15,NZ),'EXIT RFCSCANH'  Exit if error                          
         PEND                                                                   
         SPACE                                                                  
*box                                                                            
*                                                                               
*  RFCERROR -- Syntax error found in header                                     
*                                                                               
RFCERROR PROC                                                                   
         IF    RFCFLERR,EXIT       Exit if prev error in this field             
         SET   RFCFLERR            Flag syntax error                            
         SET   RFCFLBAD            Flag invalid header                          
         IF    (RFCFIELD,Z),BEGIN  If no field scanned yet,                     
         TSEG  'No mail header',,CR    Assume no mail header                    
         END                                                                    
         ELSE  BEGIN               Else log scan error                          
         TSEG  'Header scan error - Scan pointer is at column '                 
         L     R15,RFCIPTR                                                      
         LA    R0,RFCIBUF-1                                                     
         SR    R15,R0                                                           
         BTD   RFCTEMP,0,(R15)                                                  
         TSEG  (R1),(R0)                                                        
         IF    (RFCTOKLN,NZ),BEGIN                                              
         TSEG  '  Current token is: '                                           
         TSEG  RFCTOKEN,L:RFCTOKLN                                              
         END                                                                    
         TCR                                                                    
         END                                                                    
         PEND                                                                   
         SPACE                                                                  
*box                                                                            
*                                                                               
*  RFCSCNOP -- Scan initial option string                                       
*                                                                               
*    On entry:  R0,R1 = options string length and address                       
*                                                                               
*    On exit: r15 = 0 if all ok,  r15 = 4 if bad options                        
RFCSCNOP PROC                                                                   
         IF    (R0,Z),EXIT                                                      
         SCPUSH ,                                                               
         SCINIT (R1),(R0)                    Init scanner                       
         SCAN  RFCOPPRT                                                         
         IF    (R15,M),' ACALL RFCOPERR'                                        
         PEND                                                                   
*                                                                               
RFCOPPRT SCKW  DEBUG,RFCOPDEB                                                   
         SCKW  NOLIST,RFCOPNOL                                                  
         SCKW  NOPTR,RFCOPNPT                                                   
         SCKW  ,RFCOPERR                                                        
*                                                                               
RFCOPDEB PROC                                                                   
         SET   RFCFLDEB            'debug' option                               
         PEND                                                                   
*                                                                               
RFCOPNOL PROC                                                                   
         SET   RFCFLNOL            'nolist' option                              
         PEND                                                                   
*                                                                               
RFCOPNPT PROC                                                                   
         SET   RFCFLNPT            'noptr' option                               
         PEND                                                                   
*                                                                               
RFCOPERR PROC                                                                   
         TSEG  'Invalid SCAN_MAILHDR option',,CR                                
         LA    R15,4               Set RC=4                                     
         PEND                                                                   
         DROP  R6  (RFCWA)                                                      
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  TEST(STR,NUM,BOOL)                                                           
*                                                                               
*    OH YEAH !!                                                                 
*    PURPLE HAZE (tm for CH's special formula foot deodorant)                   
*                                                                               
*                                                                               
*                                                                               
PCTEST   PROC                                                                   
         SETARGS '33SNB'                                                        
         IF    Z,BEGIN                                                          
         PRETVAL 1,STRING,'THIS IS A STRING'                                    
         PRETVAL 2,INTEGER,L:=F'123'                                            
         PRETVAL 3,BOOLEAN,FALSE                                                
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  USERID_REFRESH                                                               
*                                                                               
*    Update our USERID.                                                         
*                                                                               
PCUIDREF PROC                                                                   
         LR    R4,R0               Number of arguments                          
*                                                                               
         SETARGS '01S'             0-1 args: str                                
         IF    Z,BEGIN             Do it...                                     
         LA    R15,CPSACCT         Logged on account                            
         SETMSG CPUID               Put updated USERID here                     
         VCALL GETUID              Update USERID                                
         IF    NZ,'CLEAR CPUID'    No ID                                        
         IF    (R4,GE,1),'PRETVAL 1,STRING,"OK"'  A-ok                          
         CLEAR R15                 A-ok                                         
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
PCVWA    RECORD BEGIN                                                           
PCVARGP  DS    A                   Argument list ptr                            
PCVNARGS DS    F                   Number of args passed                        
PCVBUF   DS    CL(&LINESZ)         Return string area                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  VIEW_CMD(string, return string)                                              
*                                                                               
PCVCMD   PROC  PCVWA                                                            
         ST    R0,PCVNARGS         Save number of args                          
         ST    R1,PCVARGP          Arglist ptr                                  
*                                                                               
         SETARGS '12SS'            1-2 args: string, string                     
         IF    Z,BEGIN                                                          
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         LA    R3,VNSTRLOC                                                      
         LH    R2,VNSTRLEN                                                      
*                                                                               
         SETMSG PCVBUF              Put return string here                      
         VCALL VIEWXCMD            Execute VIEW_CMD                             
*                                                                               
         IF    (PCVARGP,GE,2),BEGIN  Return string...                           
         PRETVAL 2,STRING,(R1),(R0)                                             
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VIEW_ROWGET(rowno,return-string)                                             
*                                                                               
*    VIEW_ROWGET returns information about the specific row.                    
*                                                                               
PCVRGET  PROC  PCVWA                                                            
         SETARGS '22IS'            2 args: integer, string                      
         IF    Z,BEGIN                                                          
         LA    R5,ARG1(R1)                                                      
         WITH  (VNENTRY,R5)                                                     
         L     R15,VNVALUE         Row number                                   
*                                                                               
         SETMSG PCVBUF              Put return string here                      
         VCALL ROWGET                                                           
         PRETVAL 2,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VIEW_ROWPUT(rowno,string,return-string)                                      
*                                                                               
*    VIEW_ROWPUT sets information about the specific row.                       
*                                                                               
PCVRPUT  PROC  PCVWA                                                            
         ST    R0,PCVNARGS         Save number of args                          
         ST    R1,PCVARGP          Arglist ptr                                  
*                                                                               
         SETARGS '23ISS'           2-3 args: int, string, string                
         IF    Z,BEGIN                                                          
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         L     R15,VNVALUE         Row number                                   
         LA    R5,ARG2(R1)                                                      
         LA    R3,VNSTRLOC                                                      
         LH    R2,VNSTRLEN                                                      
*                                                                               
         SETMSG PCVBUF              Put return string here                      
         VCALL ROWPUT              Set row information                          
*                                                                               
         IF    (PCVNARGS,GE,3),BEGIN  Return string...                          
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VIEW_WINDGET(windno,return-string)                                           
*                                                                               
*    VIEW_WINDGET returns information about the specific window.                
*                                                                               
PCVWGET  PROC  PCVWA                                                            
         SETARGS '22IS'            2 args: integer, string                      
         IF    Z,BEGIN                                                          
         LA    R5,ARG1(R1)                                                      
         WITH  (VNENTRY,R5)                                                     
         L     R15,VNVALUE         Window number                                
*                                                                               
         SETMSG PCVBUF              Put return string here                      
         VCALL WINDGET                                                          
         PRETVAL 2,STRING,(R1),(R0)                                             
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  VIEW_WINDPUT(rowno,string,return-string)                                     
*                                                                               
*    VIEW_WINDPUT sets information about the specific window.                   
*                                                                               
PCVWPUT  PROC  PCVWA                                                            
         ST    R0,PCVNARGS         Save number of args                          
         ST    R1,PCVARGP          Arglist ptr                                  
*                                                                               
         SETARGS '23ISS'           2-3 args: int, string, string                
         IF    Z,BEGIN                                                          
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)                                                      
         L     R15,VNVALUE         Window number                                
         LA    R5,ARG2(R1)                                                      
         LA    R3,VNSTRLOC                                                      
         LH    R2,VNSTRLEN                                                      
*                                                                               
         SETMSG PCVBUF              Put return string here                      
         VCALL WINDPUT             Set window information                       
*                                                                               
         IF    (PCVNARGS,GE,3),BEGIN  Return string...                          
         PRETVAL 3,STRING,(R1),(R0)                                             
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WLOG(log_id, string [,string2, string3, ...])                                
*                                                                               
*  (Multiple strings are allowed so that more than one "string                  
*  worth" of data can be logged.)                                               
*                                                                               
*  WLOG now simply queues the request via the QSERV SVC.                        
*                                                                               
*  SEE COMMENTS AT START OF MODULE                                              
*                                                                               
WLGWTWA  RECORD BEGIN                                                           
WLGWTNUM DS    F                   Number of args                               
*                                                                               
WLGSG    SEGCB                                                                  
WLGSGID  DS    CL16                QSERV entry type id                          
WLGSGBUF DS    XL1000              QSERV data                                   
         END                                                                    
*-                                                                              
PCWLOG   PROC  WLGWTWA                                                          
         CLEAR WLGWTWA                                                          
         ST    R0,WLGWTNUM         Number of arguments                          
*-                                                                              
*-       Check parms.                                                           
*-                                                                              
         SETARGS '29SSSSSSSSS'                                                  
         IF    Z,BEGIN             Parms are OK...                              
*                                                                               
         WITH  (VNENTRY,R5)                                                     
         LA    R5,ARG1(R1)         PARM 1: QSERV id                             
         LA    R2,VNSTRLOC                                                      
         LH    R3,VNSTRLEN                                                      
         IF    (R3,GT,L'WLGSGID),BEGIN     QSERV ID too long                    
         BADARG 1                                                               
         EXIT  PCWLOG                                                           
         END                                                                    
         MVC   WLGSGID,CVBLANKS                                                 
         MOVE  R3,WLGSGID,@R2      Save QSERV id                                
         DECR  R15,WLGWTNUM        One less arg now                             
*-                                                                              
*-       Set up QSERV seg buffer.                                               
*-                                                                              
         SEGINIT WLGSGBUF,,WLGSG,RTNTYPE=V,RTN=QSERVSEG                         
         LA    R15,WLGSGID                                                      
         ST    R15,WLGSGUSR        Set QSERV type                               
*-                                                                              
*-       Process args 2-n: QSERV text.                                          
*-                                                                              
         L     R4,WLGWTNUM         Number of args                               
         WHILE (R4,POS),BEGIN      Process args...                              
         LA    R5,L'VPARM(R5)      Next arg                                     
         SEG   VNSTRLOC,LH:VNSTRLEN  Add string info                            
*                                                                               
         DECR  R4                  One less arg now                             
         END                                                                    
*-                                                                              
*-       QSERV the seg buffer.                                                  
*-                                                                              
         B     NOWLOG              !!! No logging                               
         SEGWR                                                                  
NOWLOG   LABEL ,                   !!! No logging                               
*                                                                               
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WTO(message [,option-string] [,returned:wto-id])                             
*                                                                               
*    Write a message to the operator.                                           
*                                                                               
WTOWA    RECORD BEGIN                                                           
WTOFLAG  FLAG                                                                   
         FLAG  WTOFACTION          - Action (non-deletable) msg                 
         FLAG  WTOFWTL             - Write to log                               
         FLAG  WTOFTAPE            - Write to tape routecdes                    
*                                                                               
WTOARGP  DS    A                   Argument list ptr                            
WTONARGS DS    F                   Number of args passed                        
         END                                                                    
*-                                                                              
PCWTO    PROC  WTOWA                                                            
         LA    R5,WTOWA                                                         
         WITH  (WTOWA,R5)                                                       
         CLEAR WTOWA                                                            
*                                                                               
         SCPUSH                                                                 
*                                                                               
         ST    R0,WTONARGS         Number of arguments                          
         ST    R1,WTOARGP          Arglist ptr                                  
*                                                                               
         SETARGS '13SSI'           1-3 args: str, str, num                      
         BNZ   WTOEXIT                                                          
*                                                                               
         WITH  (VNENTRY,R4)                                                     
*-                                                                              
*-       Scan WTO options.                                                      
*-                                                                              
         IF    (WTONARGS,GE,2),BEGIN  Scan options...                           
         LA    R4,ARG2                                                          
         A     R4,WTOARGP                                                       
         SCINIT VNSTRLOC,LH:VNSTRLEN                                            
         SCAN  WTOPRT              Scan WTO options                             
         BNZ   WTOERR                                                           
         END                                                                    
*-                                                                              
*-       Set WTO options.                                                       
*-                                                                              
         CLEAR CVWTOFLG            Initialize options                           
         SET   CVWTOFNOPFX         Assume no prefix                             
         IF    WTOFACTION,'SET CVWTOFACTION'  Non-deletable                     
         IF    WTOFWTL,'SET CVWTOFWTL'  Write to log                            
         IF    WTOFTAPE,'SET CVWTOFTAPE'  Write to tape                         
*-                                                                              
*-       Do WTO.                                                                
*-                                                                              
         LA    R4,ARG1                                                          
         A     R4,WTOARGP                                                       
         SETMSG VNSTRLOC,LH:VNSTRLEN  WTO text                                  
         VCALL RTRIM                                                            
         CEIL  R0,120              Not too long now                             
         XWTO  (R1),(R0)                                                        
         L     R3,CVWTOLID         Get WTO id                                   
         CLEAR CVWTOFLG            Reset options                                
         B     WTORET                                                           
*-                                                                              
*-       Pass back the WTO id (or zero if bad options).                         
*-                                                                              
WTOERR   CLEAR R3                  No WTO was done                              
*                                                                               
WTORET   IF    (WTONARGS,GE,3),BEGIN  Return info...                            
         PRETVAL 3,INTEGER,(R3)    WTO id                                       
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
WTOEXIT  SCPOP                                                                  
         PEND                                                                   
*-                                                                              
*-       Scan WTO options.                                                      
*-                                                                              
         USING WTOWA,R5                                                         
WTOPRT   SCKW  ACTION,WTOACTN,A                                                 
         SCKW  WTL,WTOWTL                                                       
         SCKW  TAPE,WTORTAPE,A                                                  
         SCKW  ,WTOBAD                                                          
*-                                                                              
WTOACTN  PROC                                                                   
         SET   WTOFACTION                                                       
         PEND                                                                   
*-                                                                              
WTOWTL   PROC                                                                   
         SET   WTOFWTL                                                          
         PEND                                                                   
*-                                                                              
WTORTAPE PROC                                                                   
         SET   WTOFTAPE                                                         
         PEND                                                                   
*                                                                               
WTOBAD   PROC                                                                   
         LA    R15,4               Error                                        
         PEND                                                                   
*                                                                               
         DROP  WTOWA                                                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WTOR(message [,option-string] [,returned:reply-string])                      
*                                                                               
*    Write a message to the operator.                                           
*                                                                               
PCWTOR   PROC                                                                   
         ABORT 'Not yet'                                                        
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*box                                                                            
*                                                                               
*  XSCAN ( TOKEN, STRING [,TYPE] [,SKIPLIST ,STOPLIST] )                        
*                                                                               
*  SEE COMMENTS AT START OF MODULE.                                             
*                                                                               
PCXSCAN  PROC  PCSCANWA                                                         
*                                                                               
         COMMENT                   INITIALIZE WORK AREA                         
         ST    R0,PCSCCNT          SAVE ARG COUNT                               
         ST    R6,PCSCRETP         SAVE PARM RETURN AREA POINTER                
         CLEAR PCSCSKIP            CLEAR SKIP/STOP STRINGS                      
         CLEAR PCSCSKPL                                                         
         CLEAR PCSCSTOP                                                         
         CLEAR PCSCSTPL                                                         
*                                                                               
         COMMENT                   CHECK PARMS                                  
         SETARGS '25SSSSS'         2-5 ARGS, ALL STRINGS                        
         IF    Z,BEGIN                                                          
*                                                                               
         COMMENT                   GET INPUT PARMS                              
         USING VNENTRY,R5                                                       
         LA    R5,ARG2(R1)         GET/SAVE STRING LOC,LEN                      
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSTR                                                       
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSTRL                                                      
         IF    (R0,GE,4),BEGIN     IF SKIP STRING                               
         LA    R5,ARG4(R1)         GET/SAVE SKIP STRING                         
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSKIP                                                      
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSKPL                                                      
         END                                                                    
         IF    (R0,GE,5),BEGIN     IF STOP STRING                               
         LA    R5,ARG5(R1)         GET/SAVE STOP STRING                         
         LA    R2,VNSTRLOC                                                      
         ST    R2,PCSCSTOP                                                      
         LH    R2,VNSTRLEN                                                      
         ST    R2,PCSCSTPL                                                      
         END                                                                    
         DROP  R5                                                               
*                                                                               
         COMMENT                   SET DEFAULT SKIP/STOP STRINGS                
         COMMENT                   IF NEEDED                                    
         IF    (PCSCSKPL,EQ,0),BEGIN     DEFAULT SKIP = ' ,'                    
         SETMSG ' ,'                                                            
         ST    R1,PCSCSKIP                                                      
         ST    R0,PCSCSKPL                                                      
         END                                                                    
         IF    (PCSCSTPL,EQ,0),BEGIN     DEFAULT STOP = ' ,=;'                  
         SETMSG ' ,=;'                                                          
         ST    R1,PCSCSTOP                                                      
         ST    R0,PCSCSTPL                                                      
         END                                                                    
*                                                                               
         COMMENT                   CALL SCAN ROUTINE                            
         L     R0,PCSCSTRL         R1,R0 - STRING LOC, LEN                      
         L     R1,PCSCSTR                                                       
         L     R2,PCSCSKIP         R2,R3 - SKIP STR LOC, LEN                    
         L     R3,PCSCSKPL                                                      
         L     R4,PCSCSTOP         R4,R5 - STOP STR LOC, LEN                    
         L     R5,PCSCSTPL                                                      
         VCALL XSCANSTR            SCAN STRING                                  
         COMMENT                   RETURNS:                                     
         ST    R0,PCSCTOKL         R1,R0 - TOKEN LOC,LEN                        
         ST    R1,PCSCTOK                                                       
         ST    R2,PCSCREM          R2,R3 - REMAINDER LOC, LEN                   
         ST    R3,PCSCREML                                                      
         ST    R4,PCSCTYP          R4,R5 - TYPE LOC, LEN                        
         ST    R5,PCSCTYPL                                                      
*                                                                               
         COMMENT                   RETURN PARMS                                 
         L     R6,PCSCRETP         RETURN AREA ADDRESSING                       
         PRETVAL 1,STRING,L:PCSCTOK,L:PCSCTOKL                                  
         PRETVAL 2,STRING,L:PCSCREM,L:PCSCREML                                  
         IF    (PCSCCNT,GE,3),BEGIN                                             
         PRETVAL 3,STRING,L:PCSCTYP,L:PCSCTYPL                                  
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         END , OF ARGS ARE OK                                                   
*                                                                               
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         TITLE 'Common Routines for System Procedures'                          
*box                                                                            
*                                                                               
*                                                                               
*  COMPRBUF - COMPARE BUFFERS                                                   
*                                                                               
*  ON ENTRY                                                                     
*       R0 - BUFFER #1 ADDRESS                                                  
*       R1 - BUFFER #1 LENGTH                                                   
*       R2 - BUFFER #2 ADDRESS                                                  
*       R3 - BUFFER #2 LENGTH                                                   
*       R4 - LINENO BUFFER #1 ADDRESS                                           
*       R5 - LINENO BUFFER #2 ADDRESS                                           
*                                                                               
*                                                                               
*  ON EXIT:                                                                     
*       R0 - 1ST LINE NUMBER THAT DOES NOT COMPARE (R15=NZ)                     
*       R1 - 2ND LINE NUMBER THAT DOES NOT COMPARE (R15=NZ)                     
*      R15 - CC=ZERO, BUFFERS COMPARE COMPLETELY                                
*            CC=NZ, BUFFERS DO NOT COMPARE                                      
*                                                                               
*                                                                               
*  BUFFER FORMAT:                                                               
*       FILLED WITH TEXT LINES, EACH LINE CONSISTS OF:                          
*          4 BYTES TEXT LENGTH = N                                              
*          N BYTES TEXT                                                         
*  LINE NUMBER BUFFER FORMAT:                                                   
*       FILLED WITH 4 BYTE LINE NUMBERS,  EOF IS =F'-1000'                      
*                                                                               
*                                                                               
*  NOTES:  LINE NUMBER BUFFER MUST BE 4*MAX NO OF LINES, LONG.                  
*                                                                               
*                                                                               
CPBWA    RECORD BEGIN                                                           
         XSA   R0,R8                                                            
CPBBUF1  DS    F                   BUFFER #1 ADDRESS                            
CPBLEN1  DS    F                   BUFFER #1 LENGTH                             
CPBBUF2  DS    F                   BUFFER #2 ADDRESS                            
CPBLEN2  DS    F                   BUFFER #2 LENGTH                             
CPBBUF1A DS    F                   LINENO BUFFER #1 ADDRESS                     
CPBBUF2A DS    F                   LINENO BUFFER #2 ADDRESS                     
         END                                                                    
*                                                                               
*                                                                               
COMPRBUF PROC  CPBWA                                                            
*                                                                               
         COMMENT                   INITIALIZE WORK AREA                         
         ST    R0,CPBBUF1                                                       
         ST    R1,CPBLEN1                                                       
         ST    R2,CPBBUF2                                                       
         ST    R3,CPBLEN2                                                       
         ST    R4,CPBBUF1A                                                      
         ST    R5,CPBBUF2A                                                      
*                                                                               
         COMMENT                   COMPARE BUFFERS                              
         L     R2,CPBBUF1                                                       
         L     R3,CPBLEN1                                                       
         L     R4,CPBBUF2                                                       
         L     R5,CPBLEN2                                                       
         IF    (R3,GT,R5),'LR R3,R5'                                            
         ELSE  'LR R5,R3'                                                       
         CLCL  R2,R4                                                            
*                                                                               
         COMMENT                   IF EQUAL,                                    
         IF    (EQ,AND,(CPBLEN1,EQ,CPBLEN2)),BEGIN                              
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         COMMENT                   IF NOT EQUAL, CALCULATE NON-                 
         COMMENT                   MATCHING LINE NUMBERS                        
         ELSE  BEGIN                                                            
         IF    (CPBLEN1,GE,CPBLEN2),BEGIN                                       
         L     R0,CPBBUF1          R0 - END OF TEXT BUFFER                      
         A     R0,CPBLEN1                                                       
         L     R1,CPBBUF1          R1 - START/INDEX INTO TEXT BUFFER            
         COMMENT                   R2 - POINT OF NO COMPARE                     
         END                                                                    
         ELSE BEGIN                IF 2ND BUFFER LONGER, USE IT                 
         L     R0,CPBBUF2          TO FIND LINE NUMBERS                         
         A     R0,CPBLEN2                                                       
         L     R1,CPBBUF2                                                       
         LR    R2,R4                                                            
         END                                                                    
         L     R5,CPBBUF1A         R5 - NON-MATCHING LINENO #1 INDEX            
         L     R6,CPBBUF2A         R6 - NON-MATCHING LINENO #2 INDEX            
*                                                                               
         COMMENT                   IF NO BYTES MATCHED                          
         IF    (R2,EQ,R1),BEGIN                                                 
         L     R0,0(R5)            GET 1ST LINENOS AS NON-MATCHING              
         L     R1,0(R6)                                                         
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   SOME BYTES MATCHED, INDEX TO LNO             
         ELSEIF (R2,LT,R0),BEGIN                                                
         A     R1,0(R1)            R1 - END OF LINE INDEX                       
         LA    R1,4(R1)                                                         
         WHILE (R1,LE,R2),BEGIN    LOOP LOOKINF FOR NON-MATCH LNOS              
         A     R1,0(R1)            BUMP TEXT, LINENO INDEXES                    
         LA    R1,4(R1)                                                         
         LA    R5,4(R5)                                                         
         LA    R6,4(R6)                                                         
         END                                                                    
         L     R0,0(R5)            RETURN NON-MATCHING LINENOS                  
         L     R1,0(R6)                                                         
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         ELSE  BEGIN               TOO MANY BYTES MATCHED !!                    
         ERROR 'Internal logic error in COMPARE_LINES.  Oh no !'                
         END                                                                    
         END   , OF BUFFERS DON'T MATCH                                         
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  MATCHBUF - MATCH LINES IN BUFFER                                             
*                                                                               
*  THE MAIN IDEA OF THIS ROUTINE IS TO FIND A SPOT WHERE THE                    
*  TWO BUFFERS HAVE LINES THAT MATCH.  THIS IS DONE ESSENTIALLY                 
*  BY RUBBING THE TWO BUFFERS TOGETHER AND CHECKING FOR A                       
*  MATCH.  MORE SPECIFICALLY, WE COMPARE ALL THE LINES IN                       
*  BUFFER 2 WITH THE FIRST LINE IN BUFFER 1.  THEN WE COMPARE                   
*  ALL THE LINES IN BUFFER 2 WITH THE SECOND LINE IN BUFFER 1.                  
*   .... AND SO ON ... AND SO ON.  WHEN WE FIND LINES THAT                      
*  MATCH WE DO A MORE THOROUGH MATCH CHECK AND EXIT IF THE                      
*  LINES MATCH.  A COUNT OPTION IS SPECIFIED, AND WE ONLY                       
*  COMPARE TO THAT DEPTH.                                                       
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - BUFFER #1 ADDRESS                                                  
*       R1 - BUFFER #1 LENGTH                                                   
*       R2 - BUFFER #2 ADDRESS                                                  
*       R3 - BUFFER #2 LENGTH                                                   
*       R4 - BUFFER #1 LINE NUMBERS                                             
*       R5 - BUFFER #2 LINE NUMBERS                                             
*       R6 - COMPARE DEPTH COUNT                                                
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LINENO THAT MATCHES IN BUFFER #1 (R15=0)                           
*       R1 - LINENO THAT MATCHES IN BUFFER #2 (R15=0)                           
*      R15 - CC=ZERO, MATCH FOUND                                               
*            CC=NZ, NO MATCH FOUND                                              
*                                                                               
*                                                                               
*  BUFFER FORMAT:                                                               
*       FILLED WITH TEXT LINES, EACH LINE CONSISTS OF:                          
*          4 BYTES TEXT LENGTH = N                                              
*          N BYTES TEXT                                                         
*  LINE NUMBER BUFFER FORMAT:                                                   
*       FILLED WITH 4 BYTE LINE NUMBERS,  EOF IS =F'-1'                         
*                                                                               
*                                                                               
*  NOTES:  LINE NUMBER BUFFER MUST BE 4*MAX NO OF LINES, LONG.                  
*                                                                               
*                                                                               
*                                                                               
MBWA     RECORD BEGIN                                                           
MBBUF1   DS    F                                                                
MBLEN1   DS    F                                                                
MBBUF2   DS    F                                                                
MBLEN2   DS    F                                                                
MBBUF1A  DS    F                                                                
MBBUF2A  DS    F                                                                
MBCOUNT  DS    F                                                                
MBCNT1   DS    F                                                                
MBCNT2   DS    F                                                                
MBNDX1   DS    F                                                                
MBNDX2   DS    F                                                                
MBSAVE   DS    12F                                                              
         END                                                                    
*                                                                               
*                                                                               
MATCHBUF PROC  MBWA                                                             
*                                                                               
         COMMENT                   INIT WORKAREA                                
         CLEAR MBWA                                                             
         ST    R0,MBBUF1                                                        
         ST    R1,MBLEN1                                                        
         ST    R2,MBBUF2                                                        
         ST    R3,MBLEN2                                                        
         ST    R4,MBBUF1A                                                       
         ST    R5,MBBUF2A                                                       
         ST    R6,MBCOUNT                                                       
*                                                                               
         COMMENT                   CHECK COUNT FOR BUFFER #1                    
         L     R1,MBBUF1           R1,R0 - START,END OF BUFFER 1                
         L     R0,MBLEN1                                                        
         AR    R0,R1                                                            
         CLEAR R4                  R4 - COUNT OF LINES IN BUFFER                
         WHILE (R1,LT,R0),BEGIN    LOOP COUNTING                                
         A     R1,0(R1)                                                         
         LA    R1,4(R1)                                                         
         LA    R4,1(R4)                                                         
         END                                                                    
         IF    (R4,LT,MBCOUNT),BEGIN    ADJUST DEPTH COUNT IF                   
         ST    R4,MBCNT1                MORE THAN ACTUAL LINE COUNT             
         END                                                                    
         ELSE  BEGIN                                                            
         MVC   MBCNT1,MBCOUNT                                                   
         END                                                                    
*                                                                               
         COMMENT                   CHECK OUT COUNT FOR BUFFER #2                
         L     R1,MBBUF2           R1,R0 - START,END OF BUFFER 2                
         L     R0,MBLEN2                                                        
         AR    R0,R1                                                            
         CLEAR R4                  R4 - COUNT OF LINES IN BUFFER                
         WHILE (R1,LT,R0),BEGIN    LOOP COUNTING                                
         A     R1,0(R1)                                                         
         LA    R1,4(R1)                                                         
         LA    R4,1(R4)                                                         
         END                                                                    
         IF    (R4,LT,MBCOUNT),BEGIN    ADJUST DEPTH COUNT IF                   
         ST    R4,MBCNT2                MORE THAN ACTUAL LINE COUNT             
         END                                                                    
         ELSE  BEGIN                                                            
         MVC   MBCNT2,MBCOUNT                                                   
         END                                                                    
*-                                                                              
*-       LOOP TRYING TO MATCH LINES                                             
*-                                                                              
         L     R1,MBBUF1           R1 - BUFFER 1 INDEX                          
         L     R2,MBBUF2           R2 - BUFFER 2 INDEX                          
         CLEAR MBNDX1              OUTER LOOP INDEX (CNT1)                      
         CLEAR MBNDX2              INNER LOOP INDEX (CNT2)                      
*                                                                               
         COMMENT                   LOOP                                         
         WHILE (MBNDX1,LT,MBCNT1),BEGIN                                         
         WHILE (MBNDX2,LT,MBCNT2),BEGIN                                         
         CLC   0(4,R1),0(R2)                                                    
         IF    E,BEGIN             IF LINE LENGTHS MATCH                        
         LR    R14,R1              COMPARE LINE TEXT                            
         L     R15,0(R1)                                                        
         LR    R4,R2                                                            
         LR    R5,R15                                                           
         CLCL  R14,R4                                                           
         IF    E,BEGIN             IF LINE TEXT MATCH                           
         LA    R6,MBWA                                                          
         ACALL MATCHCHK            DO MORE MATCH TESTING                        
         IF    (R15,Z),BEGIN       IF LINES MATCH !!  ****** !!!                
         LA    R6,MBWA                                                          
         ACALL MATCHLNO            GET MATCHING LINENOS                         
         COMMENT                   RETURNS R0 - 1ST LINE                        
         COMMENT                           R1 - 2ND LINE                        
         CLEAR R15                 CLEAR CC                                     
         B     MBDONE              EXIT                                         
         END                                                                    
         END                                                                    
         END                                                                    
         A     R2,0(R2)            BUMB BUFFER 2 INDEX, COUNT                   
         LA    R2,4(R2)                                                         
         L     R14,MBNDX2                                                       
         INCR  R14                                                              
         ST    R14,MBNDX2                                                       
         END   , BUFFER 2 INDEXING                                              
         A     R1,0(R1)            BUMP BUFFER 1 INDEX, COUNT                   
         LA    R1,4(R1)                                                         
         L     R14,MBNDX1                                                       
         INCR  R14                                                              
         ST    R14,MBNDX1                                                       
         L     R2,MBBUF2           RESET BUFFER 2 INDEX, COUNT                  
         CLEAR MBNDX2                                                           
         END   , BUFFER 1 INDEXING                                              
*                                                                               
         COMMENT                   IF WE FALL THROUGH,,,                        
         COMMENT                   NO MATCH WAS FOUND                           
         L     R0,=F'-1000'                                                     
         L     R1,=F'-1000'                                                     
         LA    R15,4                                                            
*                                                                               
MBDONE   LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ON ENTRY: R1 - LINE IN BLOCK 1,     R2 - LINE IN BLOCK 2                     
*            R6 - MBWA                                                          
*  ON EXIT:  R15 - CC=ZERO, IF COMPARES                                         
*                  CC=NZ, IF NO COMPARE                                         
*                                                                               
*  COMPARE MUST BE SUCCEED FOR CERTAIN LENGTH TO ESTABLISH MATCH.               
*  LENGTH IS CALCULATED AS FOLLOWS:                                             
*     LEN = 3*(CURRENT LINE LENGTH)                                             
*     LEN = MIN(LEN,400)                                                        
*     LEN = MAX(LEN,80)                                                         
*     LEN1= MIN(LEN,REMAINDER IN TEXT BUFFER #1)                                
*     LEN2= MIN(LEN,REMAINDER IN TEXT BUFFER #2)                                
*     LEN = MAX(LEN1,LEN2)                                                      
*                                                                               
MATCHCHK PROC                                                                   
         USING MBWA,R6                                                          
         L     R3,0(R1)            R3 - LENGTH                                  
         LR    R4,R3                                                            
         AR    R3,R4                                                            
         AR    R3,R4               LEN = 3*(CURRENT LINE LEN)                   
         IF    (R3,GT,400),' LA R3,400'                                         
         IF    (R3,LT,80),' LA R3,80'                                           
         L     R4,MBBUF1           R4 - REMAINING TEXT IN #1                    
         A     R4,MBLEN1                                                        
         SR    R4,R1                                                            
         L     R5,MBBUF2           R4 - REMAINING TEXT IN #2                    
         A     R5,MBLEN2                                                        
         SR    R5,R2                                                            
         IF    (R4,LT,R5),' LR R4,R5 '   MAX( REMAINING LENGTHS)                
         IF    (R3,GT,R4),' LR R3,R4 '   MIN( LEN, REMAINING LENS)              
         COMMENT                   R3 - LENGTH FOR COMPARE                      
         LR    R14,R1                                                           
         LR    R15,R3                                                           
         LR    R4,R2                                                            
         LR    R5,R3                                                            
         CLCL  R14,R4              COMPARE TEXT FOR FINAL MATCH                 
         IF    E,BEGIN             AND SET RETURN CODE                          
         CLEAR R15                                                              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ON ENTRY: R1 - MATCHING LINE IN BLOCK #1                                     
*            R2 - MATCHING LINE IN BLOCK #2                                     
*            R6 - MBWA                                                          
*  ON EXIT:  R0 -- 1ST MATCHING LINENO                                          
*            R1 -- 2ND MATCHING LINENO                                          
*                                                                               
MATCHLNO PROC                                                                   
         USING MBWA,R6                                                          
*                                                                               
         COMMENT                   GET LINENO #1                                
         L     R4,MBBUF1                                                        
         L     R5,MBBUF1A                                                       
         WHILE (R4,LT,R1),BEGIN                                                 
         A     R4,0(R4)                                                         
         LA    R4,4(R4)                                                         
         LA    R5,4(R5)                                                         
         END                                                                    
         L     R0,0(R5)                                                         
*                                                                               
         COMMENT                   GET LINENO #2                                
         L     R4,MBBUF2                                                        
         L     R5,MBBUF2A                                                       
         WHILE (R4,LT,R2),BEGIN                                                 
         A     R4,0(R4)                                                         
         LA    R4,4(R4)                                                         
         LA    R5,4(R5)                                                         
         END                                                                    
         L     R1,0(R5)                                                         
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  READBUF - READ IN BUFFER OF ACTIVE FILE LINES                                
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - FIRST LINE NUMBER                                                  
*       R1 - BUFFER FOR TEXT                                                    
*       R2 - BUFFER FOR LINE NUMBERS                                            
*       R3 - TEXT BUFFER LENGTH                                                 
*       R4 - MAXIMUM NUMBER OF LINES TO PUT IN BUFFER                           
*       R5 - DO NOT READ PAST THIS LINE NUMBER (R5=0 IF NONE)                   
*       R6 - ACTIVE FILE NUMBER (ZERO=CURRENT)                                  
*      R15 - FILL CHARACTER (IN X'XX000000') FORMAT                             
*                                                                               
*  ON EXIT:                                                                     
*       R0 - LENGTH OF TEXT IN BUFFER (VALID FOR CC=Z AND CC=NZ)                
*       R1 - COUNT OF TEXT LINES IN BUFFER                                      
*       R2 - LAST LINE NUMBER READ                                              
*      R15 - CC=Z, BUFFER FILLED                                                
*            CC=NZ, BUFFER EMPTY, BYTE COUNT ZERO                               
*                                                                               
*  BUFFER FORMAT:                                                               
*       FILLED WITH TEXT LINES, EACH LINE CONSISTS OF:                          
*          4 BYTES TEXT LENGTH = N                                              
*          N BYTES TEXT                                                         
*  LINE NUMBER BUFFER FORMAT:                                                   
*       FILLED WITH 4 BYTE LINE NUMBERS,  EOF IS =F'-1'                         
*                                                                               
*                                                                               
*  NOTES:  LINE NUMBER BUFFER MUST BE 4*MAX NO OF LINES, LONG.                  
*                                                                               
*                                                                               
RDBWA    RECORD BEGIN                                                           
         XSA   R0,R8                                                            
RDBLNO   DS    F                   START LINE NUMBER                            
RDBBUF   DS    F                   BUFFER ADDRESS                               
RDBLNBUF DS    F                   LINENO BUFFER ADDRESS                        
RDBBUFLN DS    F                   BUFFER LENGTH                                
RDBMAXCT DS    F                   MAX LINES TO READ                            
RDBMAXLN DS    F                   MAX LINENO TO READ                           
RDBACTNO DS    F                   ACTIVE FILE NUMBER                           
RDBFILL  DS    F                   FILL CHARACTER FOR BUFFER                    
         END                                                                    
*                                                                               
*                                                                               
READBUF  PROC  RDBWA                                                            
*                                                                               
         COMMENT                   INITIALIZE WORK AREA                         
         ST    R0,RDBLNO                                                        
         ST    R1,RDBBUF                                                        
         ST    R2,RDBLNBUF                                                      
         ST    R3,RDBBUFLN                                                      
         ST    R4,RDBMAXCT                                                      
         ST    R5,RDBMAXLN                                                      
         ST    R6,RDBACTNO                                                      
         ST    R15,RDBFILL                                                      
*                                                                               
         COMMENT                   SET UP FOR READ LOOP                         
         L     R2,RDBLNBUF         R2 - LINENO INDEX POINTER                    
         MVC   0(4,R2),RDBLNO                                                   
         L     R4,RDBBUF           R4 - TEXT INDEX POINTER                      
         LR    R5,R4               R5 - END OF TEXT AREA                        
         A     R5,RDBBUFLN                                                      
         S     R5,=AL4(&LINESZ+4+32)    FUDGE FACTOR, NO OVERRUNS               
         CLEAR R6                  R6 - LINE COUNT                              
*                                                                               
         COMMENT                   DO FIRST READ                                
         LA    R1,4(R4)            @R1 TEXT AREA                                
         COMMENT                   @R2 LINE NUMBER AREA                         
         L     R3,RDBACTNO         USE PICKED ACTIVE FILE                       
         VCALL GTFRST                                                           
*                                                                               
         COMMENT                   LOOP READING LINES                           
         LOOP  BEGIN                                                            
*                                                                               
         COMMENT                   IF GOT LINE, AND IN CORRECT RANGE            
         IF    ((R15,Z),AND,                                           X        
               ((@R2,LT,RDBMAXLN),OR,(RDBMAXLN,EQ,0))),BEGIN                    
         ST    R0,0(R4)            SAVE LENGTH                                  
*        MVC   0(2,R4),=X'0FEF'    SAVE SIMI-UNIQUE LINE START                  
         AR    R4,R0               UPDATE TEXT INDEX                            
         LA    R4,4(R4)                                                         
         L     R3,0(R2)            R3 - LINENO READ                             
         LA    R2,4(R2)            UPDATE LINENO INDEX                          
         ST    R3,0(R2)            UPDATE LINENO FOR NEXT GET                   
         LA    R6,1(R6)            BUMP LINE COUNT                              
         END                                                                    
*                                                                               
         COMMENT                   IF END OF FILE, OR PAST RANGE                
         ELSE  BEGIN                                                            
         L     R3,=F'-1000'        MARK END OF FILE, R3 - LINE NO               
         ST    R3,0(R2)                                                         
         END                                                                    
*                                                                               
         COMMENT ,                 EXIT LOOP IF                                 
         COMMENT ,                 A) END OF FILE                               
         COMMENT ,                 B) MAX LINE COUNT READ                       
         COMMENT ,                 C) BUFFER FULL                               
         IF    (R15,NZ),RDBDONE                                                 
         IF    (R6,GE,RDBMAXCT),RDBDONE                                         
         IF    (R4,GE,R5),RDBDONE                                               
*                                                                               
         COMMENT                   READ NEXT LINE AND CONTINUE                  
         LA    R1,4(R4)            @R1 - TEXT AREA                              
         COMMENT                   @R2 - LINE NUMBER                            
         L     R3,RDBACTNO         USE CURRENT ACTIVE FILE                      
         VCALL GTNEXT              GET NEXT LINE                                
*                                                                               
         END   , OF READ LINES LOOP                                             
*                                                                               
*                                                                               
RDBDONE  LABEL ,                                                                
         COMMENT                   BUFFER FULL, SET RETURNS                     
         COMMENT                   R4 - END OF DATA,                            
         COMMENT                   R3 - LAST LINENO READ                        
         COMMENT                   R6 - LINE COUNT                              
         COMMENT                                                                
         LR    R0,R4               FILL END OF BUFFER WITH FILL CHAR            
         L     R1,RDBBUF                                                        
         A     R1,RDBBUFLN                                                      
         SR    R1,R0                                                            
         L     R15,RDBFILL                                                      
         MVCL  R0,R14                                                           
         COMMENT                   SET RETURNS                                  
         LR    R0,R4                                                            
         S     R0,RDBBUF           R0 - LENGTH                                  
         LR    R1,R6               R1 - LINE COUNT                              
         L     R2,0(R2)            R2 - LAST LINE READ                          
         IF    (R0,Z),BEGIN        R15 - CC=NZ, IF NO LINES READ                
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         CLEAR R15                                                              
         END                                                                    
*                                                                               
         PRETURN (R0,R2)                                                        
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         VLTORG                                                                 
         END   .                                                                
