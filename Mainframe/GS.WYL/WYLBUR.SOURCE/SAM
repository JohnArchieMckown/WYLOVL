SAM      TITLE 'WYLBUR''s Samson Support'                                       
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
*                                                                               
*  Things to do:                                                                
*                                                                               
*  -  Re-write "INTEXT" routine so that it can accept an arbitrarily            
*     large group of continuation packets (see line !! TEMP !! for              
*     problem area).                                                            
*                                                                               
*  -  There should be a CPFNOBREAK flag which we can use instead of             
*     CPFCLEAN.  CLEAN prevents interleaved TO messages between                 
*     packet writes which Samson can handle if we let it.                       
*                                                                               
         HIBAL                                                                  
*                                                                               
         SYSDEFN                                                                
         SPACE 2                                                                
WYLSAM   CSECT                                                                  
*                                                                               
SAM      IDENT 2193                15:11:48 07/12/02  (SLP)                     
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
         PUSH  DSECTS                                                           
         COPY  CONTROL                                                          
*                                                                               
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
*                                                                               
         COPY  FFINFO                                                           
*                                                                               
UNET     RECORD BEGIN                                                           
UNET     UNET                                                                   
         END                                                                    
*                                                                               
SIN      RECORD BEGIN                                                           
         COPY  SIN                                                              
         END                                                                    
*                                                                               
SEGCB    RECORD 'SEGCB'                                                         
*                                                                               
         POP   DSECTS                                                           
         EJECT                                                                  
SSAMWA   RECORD BEGIN                                                           
SSAMFLAG FLAG                                                                   
         FLAG  SSAMFSET            - Need to set new Samson parms               
         FLAG  SSAMFRESET          - Reset any old Samson settings              
         FLAG  SSAMFTIME           - Set time/date                              
         FLAG  SSAMFUBUFFER        - Buffer value is explicit                   
         FLAG  SSAMFUTMOUT         - Timeout value is explicit                  
         FLAG  SSAMFUENCODE        - Encoding value is explicit                 
         FLAG  SSAMFUCHECK         - Checking value is explicit                 
*                                                                               
SSAMCODE DS    X                   Packet encoding options                      
SSAMBUFF DS    F                   New buffer size                              
SSAMTMO  DS    H                   New timeout value                            
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  SETSAM -- SET SAMSON Command.                                                
*                                                                               
SETSAM   XPROC SSAMWA                                                           
         LA    R6,SSAMWA                                                        
         USING SSAMWA,R6                                                        
         CLEAR SSAMWA                                                           
*                                                                               
         MVC   SSAMBUFF,CPSAMBUFF  Current buffer size                          
         MVC   SSAMTMO,CPSAMTMO    Current timeout value                        
         MVC   SSAMCODE,CPSAMCOD   Current packet encoding                      
*-                                                                              
*-       Scan for SET SAMSON command options.                                   
*-                                                                              
         SCAN  SETPRT              SET SAMSON Options                           
         SCANCHK                                                                
*-                                                                              
*-       Handle 'SET SAMSON RESET' first.                                       
*-                                                                              
         IF    SSAMFRESET,'VCALL SAMINIT'  Reinitialize settings                
*-                                                                              
*-       Set new Samson options.                                                
*-                                                                              
         IF    SSAMFSET,BEGIN      Set new options...                           
         MVC   CPSAMBUFF,SSAMBUFF  Set new buffer size                          
         MVC   CPSAMTMO,SSAMTMO    Set new timeout value                        
         MVC   CPSAMCOD,SSAMCODE   Set new encoding flags                       
         IF    SSAMFUBUFFER,'SET CPSAMFUBUFFER'  Explicit buffer                
         IF    SSAMFUTMOUT,'SET CPSAMFUTMOUT'  Explicit timeout                 
         IF    SSAMFUENCODE,'SET CPSAMFUENCODE'  Explicit encoding              
         IF    SSAMFUCHECK,'SET CPSAMFUCHECK'  Explicit checking                
         CLEAR CPSAMFDEF           Force new SAMPARMS check                     
         CLEAR R0                  Don't set the time/date                      
*         IF    SSAMFTIME,'LA R0,1'  Set the time/date                          
         ACALL SAMPARMS            Set new parameters                           
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
         PEND                                                                   
         EJECT                                                                  
***                                                                             
***  SET SAMSON Options                                                         
***                                                                             
SETPRT   SCKW  BUFFER,SXBUF,(A,P,PI),32767                                      
         SCKW  TIME,SXTIME,A       (Must come before "TIMEOUT")                 
         SCKW  DATE,SXTIME,A                                                    
         SCKW  RESET,SXRESET,A                                                  
         SCKW  TIMEOUT,SXTMOUT,(A,P,PI),32767                                   
         SCKW  NOTIMEOUT,SXNOTMO                                                
         SCKW  7BIT,SX7BIT,A                                                    
         SCKW  NAMBIC,SX7BIT       (For Aaron)                                  
         SCKW  PACKED,SXPACKED,A                                                
         SCKW  8BIT,SX8BIT,A                                                    
         SCKW  HEX,SXHEX                                                        
         SCKW  CRC,SXCRC                                                        
         SCKW  CHECKSUM,SXCHECK,A                                               
         SCKW  NOCHECK,SXNOCHK,A                                                
         SCKW  SLOWFTP,SXSLOW,A                                                 
         SCKW  FASTFTP,SXFAST,A                                                 
         SCKW  FTPCRYPT,SXCRYPT,A                                               
         SCKW  NOFTPCRYPT,SXNCRYPT,A                                            
         SCKW  DEBUG,SXDEBUG,A                                                  
         SCKW  NODEBUG,SXNODBUG,A                                               
         SCKW  TRACE,SXTRC,A                                                    
         SCKW  NOTRACE,SXNOTRC,A                                                
         SCKW  TCLEAR,SXTCLR,A                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
*                                                                               
SXBUF    PROC                                                                   
         SET   SSAMFSET                                                         
         ST    R0,SSAMBUFF         Save new buffer size                         
         SET   SSAMFUBUFFER        Explicit buffer now set                      
         PEND                                                                   
*                                                                               
SXNOTMO  PROC                                                                   
         CLEAR R0                  No timeouts                                  
         ACALL SXTMOUT                                                          
         PEND                                                                   
*                                                                               
SXTMOUT  PROC                                                                   
         SET   SSAMFSET                                                         
         STH   R0,SSAMTMO          Save new timeout time                        
         SET   SSAMFUTMOUT         Explicit timeout now set                     
         PEND                                                                   
*                                                                               
SXRESET  PROC                                                                   
         SET   SSAMFRESET          Reset previous Samson settings               
         SET   SSAMFSET                                                         
         PEND                                                                   
*                                                                               
SX7BIT   PROC                                                                   
         SET   SSAMFSET                                                         
         CLEAR SSAMCODE.CPSAMFEMASK                                             
         SET   SSAMCODE.CPSAMF7BIT  7-bit mode                                  
         SET   SSAMFUENCODE        Explicit encoding now set                    
         PEND                                                                   
*                                                                               
SXPACKED PROC                                                                   
         SET   SSAMFSET                                                         
         CLEAR SSAMCODE.CPSAMFEMASK                                             
         SET   SSAMCODE.CPSAMFPCK   Packed mode                                 
         SET   SSAMFUENCODE        Explicit encoding now set                    
         PEND                                                                   
*                                                                               
SX8BIT   PROC                                                                   
         SET   SSAMFSET                                                         
         CLEAR SSAMCODE.CPSAMFEMASK  Default ("8bit") mode                      
         SET   SSAMFUENCODE        Explicit encoding now set                    
         PEND                                                                   
*                                                                               
SXHEX    PROC                                                                   
         SET   SSAMFSET                                                         
         CLEAR SSAMCODE.CPSAMFEMASK                                             
         SET   SSAMCODE.CPSAMFHEX   Hex mode                                    
         SET   SSAMFUENCODE        Explicit encoding now set                    
         PEND                                                                   
*                                                                               
SXCRC    PROC                                                                   
         SET   SSAMFSET                                                         
         CLEAR SSAMCODE.CPSAMFCMASK                                             
         SET   SSAMCODE.CPSAMFCRC   Set CRC                                     
         SET   SSAMFUCHECK         Explicit checking now set                    
         PEND                                                                   
*                                                                               
SXCHECK  PROC                                                                   
         SET   SSAMFSET                                                         
         CLEAR SSAMCODE.CPSAMFCMASK                                             
         SET   SSAMCODE.CPSAMFCKS   Set Checksum                                
         SET   SSAMFUCHECK         Explicit checking now set                    
         PEND                                                                   
*                                                                               
SXNOCHK  PROC  ,                                                                
         SET   SSAMFSET                                                         
         CLEAR SSAMCODE.CPSAMFCMASK  No error checking                          
         SET   SSAMFUCHECK         Explicit checking now set                    
         PEND                                                                   
*                                                                               
SXTIME   PROC  ,                                                                
         SET   SSAMFSET+SSAMFTIME                                               
         PEND                                                                   
*                                                                               
SXSLOW   PROC  ,                                                                
         SET   CPGFSAMSLOW                                                      
         PEND                                                                   
*                                                                               
SXFAST   PROC                                                                   
         CLEAR CPGFSAMSLOW                                                      
         PEND                                                                   
*                                                                               
SXCRYPT  PROC                                                                   
         CLEAR CPGFSAMNFTPCRYPT                                                 
         PEND                                                                   
*                                                                               
SXNCRYPT PROC                                                                   
         SET   CPGFSAMNFTPCRYPT                                                 
         PEND                                                                   
*                                                                               
SXDEBUG  PROC                                                                   
         SET   CPGFSAMD                                                         
         PEND                                                                   
*                                                                               
SXNODBUG PROC                                                                   
         CLEAR CPGFSAMD                                                         
         PEND                                                                   
*                                                                               
SXTRC    PROC                                                                   
         SET   CPGFSAMT                                                         
         PEND                                                                   
*                                                                               
SXNOTRC  PROC                                                                   
         CLEAR CPGFSAMT                                                         
         PEND                                                                   
*                                                                               
SXTCLR   PROC                                                                   
         WHILE ('LT R1,CVXTRCP',NZ),BEGIN  Free all trace entries...            
         ACALL FREEXTRC            Free this entry                              
         END                                                                    
         PEND                                                                   
*                                                                               
*                                                                               
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWSAM -- SHOW SAMSON Command.                                              
*                                                                               
SHOWSAM  XPROC                                                                  
         SCAN  SHOWPRT             SHOW SAMSON Options                          
         SCANCHK                                                                
*-                                                                              
*-       Not a Samson terminal.                                                 
*-                                                                              
         IF    ^CPSFSAM,BEGIN      Not a Samson terminal...                     
         TSEG  'Not a Samson terminal.',,CR                                     
         TSEG  'If you are using Samson '                                       
         TSEG  'issue the "SET TERMINAL SAMSON" command.',,CR                   
         TCR                                                                    
         END                                                                    
*                                                                               
         TSEG  'Samson options:',,CR                                            
*                                                                               
         TSEG  '  Type='                                                        
         SETMSG CPSAMTYP                                                        
         IF    (CPSAMTYP,Z),'CLEAR R0'                                          
         VCALL LRTRIM                                                           
         IF    (R0,Z),'SETMSG "(n/a)"'                                          
         TSEG  (R1),(R0),T                                                      
*                                                                               
         TSEG  ' Version='                                                      
         SETMSG CPSAMVER                                                        
         IF    (CPSAMVER,Z),'CLEAR R0'                                          
         VCALL LRTRIM                                                           
         IF    (R0,Z),'SETMSG "(n/a)"'                                          
         TSEG  (R1),(R0),T                                                      
*                                                                               
         TSEG  ' OS='                                                           
         SETMSG CPSAMOS                                                         
         IF    (CPSAMOS,Z),'CLEAR R0'                                           
         VCALL LRTRIM                                                           
         IF    (R0,Z),'SETMSG "(n/a)"'                                          
         TSEG  (R1),(R0),T                                                      
*                                                                               
         TSEG  ' Terminal='                                                     
         SETMSG CPSAMTRM                                                        
         IF    (CPSAMTRM,Z),'CLEAR R0'                                          
         VCALL LRTRIM                                                           
         IF    (R0,Z),'SETMSG "(n/a)"'                                          
         TSEG  (R1),(R0),T                                                      
*                                                                               
         TSEG  ' Font='                                                         
         SETMSG CPSAMFONT                                                       
         IF    (CPSAMFONT,Z),'CLEAR R0'                                         
         VCALL LRTRIM                                                           
         IF    (R0,Z),'SETMSG "(n/a)"'                                          
         TSEG  (R1),(R0),T                                                      
         TCR                                                                    
*                                                                               
         TSEG  '  Printer='                                                     
         SETMSG CPSAMLPR                                                        
         IF    (CPSAMLPR,Z),'CLEAR R0'                                          
         VCALL LRTRIM                                                           
         IF    (R0,Z),'SETMSG "(n/a)"'                                          
         TSEG  (R1),(R0),T                                                      
*                                                                               
         TSEG  '  Protocol='                                                    
         TNUM  LH:CPSAMPRO                                                      
*                                                                               
         TSEG  ' Dialog='                                                       
         TNUM  LH:CPSAMDV                                                       
*                                                                               
         TSEG  ' Buffer='                                                       
         TNUM  L:CPSAMBUFF                                                      
*                                                                               
         IF    (CPSAMTMO,Z),'TSEG " NoTimeout"'                                 
         ELSE  BEGIN                                                            
         TSEG  ' Timeout='                                                      
         TNUM  LH:CPSAMTMO                                                      
         END                                                                    
*                                                                               
         IF    (CPSAMSPD,Z),'TSEG " NoSpeed"'                                   
         ELSE  BEGIN                                                            
         TSEG  ' Speed='                                                        
         TNUM  L2:CPSAMSPD                                                      
         END                                                                    
*                                                                               
         SETMSG ' 8bit'                                                         
         IF    CPSAMF7BIT,'SETMSG " 7bit"'                                      
         ELSEIF CPSAMFPCK,'SETMSG " Packed"'                                    
         ELSEIF CPSAMFHEX,'SETMSG " Hex"'                                       
         TSEG  (R1),(R0)                                                        
*                                                                               
         SETMSG ' NoCheck'                                                      
         IF    CPSAMFCKS,'SETMSG " Checksum"'                                   
         ELSEIF CPSAMFCRC,'SETMSG " CRC"'                                       
         TSEG  (R1),(R0)                                                        
         TCR                                                                    
*                                                                               
         SETMSG CVBLANKS,2                                                      
         IF    (CPSAMHEI,NZ),BEGIN                                              
         TSEG  (R1),(R0)                                                        
         TSEG  'Height='                                                        
         TNUM  LH:CPSAMHEI                                                      
         SETMSG CVBLANKS,1                                                      
         END                                                                    
*                                                                               
         IF    (CPSAMWID,NZ),BEGIN                                              
         TSEG  (R1),(R0)                                                        
         TSEG  'Width='                                                         
         TNUM  LH:CPSAMWID                                                      
         SETMSG CVBLANKS,1                                                      
         END                                                                    
*                                                                               
         IF    (CPSAMALH,NZ),BEGIN                                              
         TSEG  (R1),(R0)                                                        
         TSEG  'Alt-height='                                                    
         TNUM  LH:CPSAMALH                                                      
         SETMSG CVBLANKS,1                                                      
         END                                                                    
*                                                                               
         IF    (CPSAMALW,NZ),BEGIN                                              
         TSEG  (R1),(R0)                                                        
         TSEG  'Alt-width='                                                     
         TNUM  LH:CPSAMALW                                                      
         SETMSG CVBLANKS,1                                                      
         END                                                                    
         TCCR                                                                   
*                                                                               
         TSEG  CVBLANKS,2                                                       
         IF    CPGFSAMSLOW,'TSEG "SlowFTP "'                                    
         ELSE  'TSEG "FastFTP "'                                                
*                                                                               
         IF    CPGFSAMNFTPCRYPT,'TSEG "NoFTPCrypt "'                            
*                                                                               
         IF    ^CPGFSAMD,'TSEG "No"'                                            
         TSEG  'Debug '                                                         
*                                                                               
         IF    ^CPGFSAMT,'TSEG "No"'                                            
         TSEG  'Trace '                                                         
*                                                                               
         B     CVNEXT                                                           
         PEND                                                                   
*-                                                                              
*-       SHOW SAMSON Options                                                    
*-                                                                              
SHOWPRT  SCKW  TRACE,SHOWTRC,A                                                  
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
         QLTORG                                                                 
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  XTRC -- Samson file-transfer trace entry                                     
*                                                                               
XTRC     RECORD BEGIN                                                           
XTRCSTRT DS    CL4'XTRC'           Self identification                          
XTRCLINK DS    A                   Next XTRC ptr (or zero)                      
XTRCCLCK DS    D                   Time stamp                                   
*                                                                               
XTRCSNO  DS    H                   Session number                               
XTRCACCT DS    CL5                 Session account (uuugg)                      
*                                                                               
XTRCFLAG FLAG                                                                   
         FLAG  XTRCFOUT            - Input buffer                               
         FLAG  XTRCFIN             - Output buffer                              
         FLAG  XTRCFMSG            - Message text                               
*                                                                               
XTRCDLEN DS    H                   Data length                                  
XTRCHDR  EQU   XTRCSTRT,*-XTRCSTRT,C'X'                                         
*                                                                               
XTRCDATA DS    0X                  Data starts here (variable len)              
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMTRC -- Routine to queue a trace buffer for debugging (if                  
*    the user has set Samson tracing).                                          
*                                                                               
*    On entry:                                                                  
*      R1,R0 - data loc, len                                                    
*      R15 - type of trace:                                                     
*              0 - output buffer                                                
*              1 - input buffer                                                 
*              2 - message text                                                 
*                                                                               
SAMTRC   PROC                                                                   
*-                                                                              
*-       Only save the buffer if Samson tracing is requested.                   
*-                                                                              
         IF    CPGFSAMT,BEGIN      Samson tracing...                            
         LR    R5,R15                                                           
         LR    R4,R1                                                            
         LR    R3,R0                                                            
*                                                                               
         AH    R0,=AL2(L'XTRCHDR)  Get a new trace buffer                       
         GETMAIN R,LV=(0)                                                       
         LR    R6,R1                                                            
         WITH  (XTRC,R6)                                                        
         CLEAR XTRCHDR                                                          
         MVC   XTRC(4),=C'XTRC'    Set self-identification                      
         MVC   XTRCLINK,CVXTRCP    Set our queue link ptr                       
         VCALL LOCALTOD            Time stamp                                   
         STM   R0,R1,XTRCCLCK                                                   
*                                                                               
         IF    (R5,EQ,0),'SET XTRCFOUT'  Terminal output buffer                 
         IF    (R5,EQ,1),'SET XTRCFIN'   Terminal input buffer                  
         IF    (R5,EQ,2),'SET XTRCFMSG'  Message text                           
*                                                                               
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'MVC XTRCSNO,JCBSEQ'  Save session number              
         MVC   XTRCACCT,CPSACCT    Save account                                 
*                                                                               
         STH   R3,XTRCDLEN         Save data length                             
         MOVEL XTRCDATA,(R4),(R3)  Save data                                    
*-                                                                              
*-       Now link this new Samson trace entry.                                  
*-                                                                              
         ST    R6,CVXTRCP          Set new Samson trace queue head              
*                                                                               
         INCR  R15,CVXNTRC         Keep count of number of entries              
*-                                                                              
*-       Free oldest entries.                                                   
*-                                                                              
         WHILE (CVXNTRC,GT,=Y(CVXTRC#)),'CLEAR R1; LCALL FREEXTRC'              
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREEXTRC -- Routine to free a trace entry.                                   
*                                                                               
*    On entry:                                                                  
*      R1 - XTRC ptr of entry to free;                                          
*             or zero to free last (oldest) entry.                              
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - no entries left in trace queue                                       
*      nz- there are still entries in the trace queue                           
*                                                                               
FREEXTRC PROC                                                                   
         LR    R6,R1               XTRC ptr                                     
*-                                                                              
*-       Find the previous XTRC entry so we can unlink this entry.              
*-                                                                              
         CLEAR R5                  Previous entry ptr                           
         LT    R15,CVXTRCP         First entry ptr                              
         FAIL  Z,XTRCERR1,'Free XTRC logic error.'                              
*                                                                               
         LOOP  BEGIN               Go through XTRC entries...                   
         WITH  (XTRC,R15)                                                       
*                                                                               
         IF    ((R6,Z),AND,(XTRCLINK,Z)),BEGIN  Free last entry...              
         LR    R6,R15              Set current ptr to last entry                
         B     FXTRCOM                                                          
         END                                                                    
*                                                                               
         IF    (R6,EQ,R15),FXTRCOM  Matched the entry, scram                    
*                                                                               
         LR    R5,R15              Save previous entry ptr                      
         LT    R15,XTRCLINK        Next XTRC entry                              
         FAIL  Z,XTRCERR2,'Free XTRC logic error.'                              
         END                                                                    
*-                                                                              
*-       Dequeue our XTRC entry.                                                
*-                                                                              
FXTRCOM  IF    (R5,Z),BEGIN        We are removing the 1st entry...             
         MVC   CVXTRCP,XTRCLINK-XTRC(R6)  Set new queue head                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Dequeue...                                   
         WITH  (XTRC,R5)                                                        
         FAIL  (XTRC,NE,'XTRC'),XTRCERR3,'Free XTRC logic error.'               
         MVC   XTRCLINK,XTRCLINK-XTRC(R6)  Dequeue our entry                    
         END                                                                    
*-                                                                              
*-       Free the XTRC entry.                                                   
*-                                                                              
         WITH  (XTRC,R6),BEGIN                                                  
         FAIL  (XTRC,NE,'XTRC'),XTRCERR4,'Free XTRC logic error.'               
         MVC   XTRC(4),=C'OXTR'    Neatness                                     
         MVC   XTRCLINK,=F'-1'     (Ditto)                                      
*                                                                               
         LA    R1,XTRC                                                          
         LA    R0,L'XTRCHDR        XTRC header...                               
         AH    R0,XTRCDLEN         ...plus buffer (variable length)             
         FREEMAIN R,A=(1),LV=(0)                                                
*                                                                               
         DECR  R15,CVXNTRC         Decrement number of trace entries            
         END                                                                    
*                                                                               
         L     R15,CVXTRCP         Set CC for caller                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWTRC -- SHOW SAMSON TRACE Routine.                                        
*                                                                               
SHOWTRC  PROC                                                                   
         IF    ^CPSFSPR,'VCALL NOTVALID'  Priv'd                                
*-                                                                              
*-       Title line.                                                            
*-                                                                              
         IF    (CVXTRCP,Z),BEGIN   No trace entries...                          
         SETMSG 'Samson buffer trace table is empty.'                           
         B     CVNXTMSG                                                         
         END                                                                    
*                                                                               
         TSEG  'Samson buffer trace',,CR                                        
*-                                                                              
*-       Step through the trace entry queue.                                    
*-                                                                              
         LA    R6,CVXTRCP-(XTRCLINK-XTRC)  Dummy first link                     
         LOOP  BEGIN                                                            
         WITH  (XTRC,R6)                                                        
         WHILE ('LT R6,XTRCLINK',NZ)  Go through buffers...                     
         TSEG  '-------------------',,CR                                        
         TCR                                                                    
*-                                                                              
*-       Format the trace entry.                                                
*-                                                                              
         IF    (XTRC,NE,'XTRC'),BEGIN  Shucks...                                
         SETMSG 'Bad trace entry queue!'                                        
         B     CVNXTMSG                                                         
         END                                                                    
*                                                                               
         LM    R0,R1,XTRCCLCK      Get time stamp                               
         XPUSH ,,11,PTR=R15                                                     
         VCALL FMTTIME             Get "hh:mm:ss.th"                            
         TSEG  (R1),(R0),B                                                      
         TSEG  'Line '                                                          
         TNUM  LH:XTRCSNO,3        Session number                               
         TSEG  CVBLANKS,1                                                       
         TSEG  XTRCACCT+3,2        gg                                           
         TSEG  '.'                                                              
         TSEG  XTRCACCT,3          uuu                                          
*                                                                               
         SETMSG '  ??? '                                                        
         IF    XTRCFOUT,'SETMSG "  OUTPUT "'                                    
         IF    XTRCFIN,'SETMSG "  INPUT "'                                      
         IF    XTRCFMSG,'SETMSG "  MESSAGE "'                                   
         TSEG  (R1),(R0)                                                        
*                                                                               
         TSEG  '('                                                              
         TNUM  LH:XTRCDLEN                                                      
         TSEG  ' chars)',,CR                                                    
         TCR                                                                    
*                                                                               
         LH    R2,XTRCDLEN                                                      
         CEIL  R2,4000             Be reasonable                                
         XPUSH ,,(R2),PTR=R3                                                    
         MOVEL (R3),XTRCDATA,(R2)  Copy trace data                              
*-                                                                              
*-       Trace data is in ASCII.  Convert it to EBCDIC before                   
*-         printing.                                                            
*-                                                                              
         IF    ^XTRCFMSG,BEGIN     Don't translate message...                   
         XPUSH R2,R3                                                            
*                                                                               
         L     R4,CVEBCTBL         ASCII to EBCDIC translate table              
         WHILE (R2,POS),BEGIN      Convert to EBCDIC...                         
         LR    R15,R2              Length                                       
         CEIL  R15,256             Not too much                                 
         DEX   R15,'TR @R3(0),@R4'    Translate a bit at a time                 
*                                                                               
         LA    R3,@R3+256                                                       
         SH    R2,=H'256'                                                       
         END                                                                    
*                                                                               
         XPOP  R2,R3                                                            
         END                                                                    
*                                                                               
         LR    R5,R3                                                            
         LR    R4,R2                                                            
         WHILE (R4,POS),BEGIN      Write a bit at a time...                     
         LR    R2,R4                                                            
         CEIL  R2,64                                                            
         SETMSG (R3),(R2)           EBCDIC data                                 
         VCALL MIXFMT              Display buffer text                          
         TCCR                                                                   
         AR    R3,R2               Skip past displayed stuff                    
         SR    R4,R2               Reduce length                                
         END                                                                    
*                                                                               
         TCR                                                                    
*                                                                               
         XPOP  PTR=R5              Restore stack                                
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  Samson Device Work Area                                                      
*                                                                               
SAMWA    RECORD BEGIN                                                           
         DS    C'SAM '                                                          
*                                                                               
SAMFLAG  FLAG                                                                   
         FLAG  SAMFOPEN            - File is open                               
         FLAG  SAMFWRITE           - File write operation (SAVE)                
         FLAG  SAMFFAST            - Use fast file transfer                     
         FLAG  SAMFASCII8          - Data is 8-bit ASCII                        
         FLAG  SAMFNETHDR          - SAMDATA header needed                      
         FLAG  SAMFERET            - Return even if error packet                
         FLAG  SAMFERC             - Packet error received                      
         FLAG  SAMFBREAK           - Packet BREAK receieved                     
*                                                                               
SAMFLAG2 FLAG                                                                   
         FLAG  SAMFWEOL            - End of line terminator needed              
         FLAG  SAMFWTXT            - Last last was a "text" line                
         FLAG  SAMFEOF             - This packet ends with eof                  
         FLAG  SAMFNORETRY         - No packet retrying wanted                  
*                                                                               
SAMFLAG3 FLAG                                                                   
         FLAG  SAMFTRAN            - Transparent                                
         FLAG  SAMFDTRAN           - Data transparent                           
         FLAG  SAMFSTRM            - Stream                                     
         FLAG  SAMFASCII           - Ascii                                      
         FLAG  SAMFEBCDIC          - Ebcdic                                     
         FLAG  SAMFUFMT            - Unformatted                                
         FLAG  SAMFTEXTONLY        - Text Only                                  
*                                                                               
SAMFLAG4 FLAG                                                                   
         FLAG  SAMFSPLT            - Wrap at blank                              
         FLAG  SAMFAPP             - Append                                     
         FLAG  SAMFTABS            - Allow tabs, do not expand                  
*                                                                               
SAMFNAMEL DS   F                   File name length                             
SAMFNAME DS    XL(L'FFNAME)        File name                                    
*                                                                               
SAMOLDFNL DS   F                   Old file name length (rename)                
SAMOLDFN DS    A                   Old file name location                       
SAMNEWFNL DS   F                   New file name length (rename)                
SAMNEWFN DS    A                   New file name location                       
SAMLIKLN DS    F                   Like string length (show dir)                
SAMLIKE  DS    A                   Like string location                         
SAMFRMLN DS    F                   From string length (show dir)                
SAMFROM  DS    A                   From string location                         
SAMTOLN  DS    F                   To string length (show dir)                  
SAMTO    DS    A                   To string location                           
*                                                                               
SAMOHEAP DS    F                   Old heap ptr                                 
SAMNHEAP DS    F                   Current heap ptr                             
*                                                                               
SAMSEED  DS    CL32                Encryption seed                              
*                                                                               
SAMWRAPL DS    H                   Wrap length                                  
*                                                                               
SAMSGFLG FLAG  ,                   Seg flags                                    
         FLAG  SAMFDATA            - Writing packet data                        
         FLAG  SAMFCTRL            - Writing control data                       
         FLAG  SAMFSGTRAN          - Transparent mode                           
         FLAG  SAMFSHIFT           - Shift-in sequence was sent                 
         FLAG  SAMFMSB             - MSB-on sequence was sent                   
*                                                                               
SAMSGDL  DS    F                   Data length                                  
SAMSGSUM DS    F                   Data checksum or CRC                         
SAMSINIT EQU   SAMSGFLG,*-SAMSGFLG,C'X'                                         
*                                                                               
SAMSG    SEGCB                                                                  
*-                                                                              
*-       Send packet information.                                               
*-                                                                              
SAMSCMD  DS    CL2                 Send packet command/option                   
*                                                                               
SAMSSEQ  DS    H                   Send packet sequence number                  
*-                                                                              
*-       Receive packet information.                                            
*-                                                                              
SAMRFLAG FLAG                                                                   
         FLAG  SAMFIN8BIT          - Input 8-bit mode (for packed)              
         FLAG  SAMFINMSB           - Input MSB on mode (for 7bit)               
*                                                                               
SAMRCODE FLAG  ,                   Received packet encoding                     
         FLAG  (SAMRF7BIT,12,ONES) - Expect data in 7-bit format                
         FLAG  (SAMRFHEX,8)        - Expect data in hex format                  
         FLAG  (SAMRFPCK,4)        - Expect data in packed format               
         FLAG  (SAMRFCKS,2)        - Expect one byte checksum                   
         FLAG  (SAMRFCRC,1)        - Expect two byte CRC                        
*                                                                               
SAMRCMD  DS    CL2                 Received packet command/option               
*                                                                               
SAMRSEQ  DS    H                   Received packet sequence number              
*                                                                               
SAMRCNT  DS    H                   No. resends (clr'd by good packet)           
SAMLNO   DS    F                   Working line-number                          
SAMRDLOC DS    A                   Working read buffer ptr                      
SAMRDLEN DS    H                   Working read buffer len                      
*                                                                               
SAMRNAME DS    CL(L'UNETRNAME)     Remote's IP address                          
SAMUNET  DS    A                   UNET ptr (for fast FTP)                      
*                                                                               
SAMINSG  SEGCB SAMINBUF            Working input buffer                         
SAMCLEAR EQU   SAMFLAG,*-SAMFLAG,C'X'                                           
*-                                                                              
*-       Working buffers.                                                       
*-                                                                              
SAMLINE  DS    CL(&LINESZ)         Working line area                            
         DS    XL(&PRESSZ-&LINESZ)                                              
*                                                                               
SAMWKBUF DS    XL2048              Working SAMSEG buffer                        
SAMWRBUF DS    XL2048              Working write buffer                         
SAMRDBUF DS    XL2048              Working read buffer                          
SAMINBUF DS    XL4096              Working input buffer                         
         END                                                                    
         EJECT                                                                  
         SEGDEF SAMSG              (General assumption)                         
*box                                                                            
*                                                                               
*  MICRO -- MICRO Command.                                                      
*                                                                               
MICRO    XPROC                                                                  
         IF    ^CPSFSAM,BEGIN      Not a Samson terminal...                     
         TSEG  'Please issue a SET TERMINAL SAMSON command '                    
         TSEG  'before using the MICRO command.',,CR                            
         ABORT 'Type ? for more information.',,MICROTRM                         
         END                                                                    
*                                                                               
         COMMENT                   Get FFINFO dsect for SAMOPEN                 
         VCALL MKFFINFO                                                         
         L     R1,CPFINFOP                                                      
*                                                                               
         COMMENT                   Open samson connection                       
         ACALL SAMOPEN                                                          
         L     R6,CPDEVP                                                        
         USING SAMWA,R6                                                         
*-                                                                              
*-       Send command text.                                                     
*-                                                                              
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'SET JCBSFMIC'  Micro mode                             
*                                                                               
         MVC   SAMSCMD,=C'CP'      Command parameters                           
         ACALL SEGHEAD                                                          
*                                                                               
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
         IF    (R0,Z),'SETMSG "EXIT"'  Default command                          
         XPUSH R0,R1                                                            
         SEG   'CMD='                                                           
         XPOP  R0,R1                                                            
         SEGT  (R1),(R0)           Add command text to packet                   
*                                                                               
         ACALL SEGTRAIL                                                         
         SEGWR                                                                  
*                                                                               
         MVC   SAMSCMD,=C'PC'                                                   
         ACALL SEGHEAD                                                          
         ACALL SEGTRAIL            Path close (same as SAMCLOSE)                
         SEGWR                                                                  
*                                                                               
         B     CVNEXT                                                           
*                                                                               
         PEND                                                                   
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMSON -- SAMSON Command.                                                    
*                                                                               
SAMSON   XPROC                                                                  
         IF    ^CPSFSAM,BEGIN      Not a Samson terminal...                     
         TSEG  'Please issue a SET TERMINAL SAMSON command '                    
         TSEG  'before using the SAMSON command.',,CR                           
         ABORT 'Type ? for more information.',,MICROTRM                         
         END                                                                    
*-                                                                              
*-       Samson command required.                                               
*-                                                                              
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
         IF    (R0,NP),BEGIN                                                    
         TSEG  'Missing SAMSON command; '                                       
         ERROR 'expecting ''SAMSON sam-command''.'                              
         END                                                                    
         LR    R4,R1                                                            
         LR    R3,R0                                                            
*                                                                               
         COMMENT                   Get FFINFO dsect for SAMOPEN                 
         VCALL MKFFINFO                                                         
         L     R1,CPFINFOP                                                      
*                                                                               
         COMMENT                   Open samson connection                       
         ACALL SAMOPEN                                                          
         L     R6,CPDEVP                                                        
         USING SAMWA,R6                                                         
*-                                                                              
*-       Send command text.                                                     
*-                                                                              
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'SET JCBSFMIC'  Micro mode                             
*                                                                               
         MVC   SAMSCMD,=C'CP'      Command parameters                           
         ACALL SEGHEAD                                                          
         SEG   'SAMCMD='                                                        
         SEGT  (R4),(R3)           Add command text to packet                   
*                                                                               
         ACALL SEGTRAIL                                                         
         SEGWR                                                                  
*                                                                               
         MVC   SAMSCMD,=C'PC'                                                   
         ACALL SEGHEAD                                                          
         ACALL SEGTRAIL            Path close (same as SAMCLOSE)                
         SEGWR                                                                  
*                                                                               
         B     CVNEXT                                                           
*                                                                               
         PEND                                                                   
         DROP  R6                                                               
*                                                                               
         QLTORG                                                                 
         TITLE 'Samson Interface Routines'                                      
*box                                                                            
*                                                                               
*  SAMINIT -- Routine to initialize the Samson saved information                
*    to the initial logon values.  (Called by signon and when                   
*    changing terminal types.)                                                  
*                                                                               
SAMINIT  XPROC                                                                  
         CLEAR CPSAM               Reset Samson information                     
         MVC   CPSAMPRO,=H'1'      Protocol version 1                           
         MVC   CPSAMDV,=H'1'       Dialog version 1                             
         MVC   CPSAMBUFF,=F'800'   Default buffer size                          
         SET   CPSAMFCKS           Use checksum (for version 1)                 
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMPARMS -- Routine to get and save parameters returned by                   
*    Samson.                                                                    
*                                                                               
*    On entry:                                                                  
*      R0 - 0 = don't set time/date                                             
*           1 = set the time/date                                               
*      FFINFO dsect contains information about the file                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - opened successfully                                                  
*      4 - not opened (CPERRID contains error id)                               
*                                                                               
SAMPWA   RECORD BEGIN                                                           
SAMPVAL  DS    F                   R0 parm on entry                             
SAMPRC   DS    F                   Return code                                  
SAMPSTM  DS    H                   Saved timeout value                          
*                                                                               
SAMPWORK DS    CL64                Date formatting work area                    
*                                                                               
SAMPSG   SEGCB                                                                  
SAMPBUF  DS    CL300               Working line area                            
*                                                                               
         END                                                                    
*-                                                                              
SAMPARMS XPROC SAMPWA                                                           
         LA    R5,SAMPWA                                                        
         USING SAMPWA,R5                                                        
         CLEAR SAMPWA                                                           
         ST    R0,SAMPVAL          Save R0 parm                                 
         SCPUSH                                                                 
*-                                                                              
*-       Only get parameters from Samson once (unless SAMINIT has               
*-         been called, which resets CPSAMFDEF).                                
*-                                                                              
         IF    CPSAMFDEF,SAMPEXIT  Already defined, scram                       
         SET   CPSAMFDEF           Values have now been defined                 
*                                                                               
         L     R15,CPSAMBUFF       Get suggested buffer size                    
         IF    (R15,Z),'LA R15,800'  Default buffer size                        
         IF    (R15,LT,128),'LA R15,128'  Minimum we allow                      
         IF    (R15,GT,1200),'LA R15,1200'  Maximum we allow                    
         ST    R15,CPSAMBUFF       Save buffer size                             
*                                                                               
         VCALL MARKHEAP            Get current heap ptr                         
         LR    R2,R15                                                           
*                                                                               
         LH    R0,=AL2(L'SAMWA)                                                 
         VCALL GETHEAP             Get work area                                
         ST    R1,CPDEVP                                                        
         LR    R6,R1                                                            
         WITH  (SAMWA,R6)                                                       
         CLEAR SAMCLEAR                                                         
         MVC   SAMWA(3),=C'SAM'    Id                                           
*                                                                               
         ST    R2,SAMOHEAP         Save old heap ptr                            
         VCALL MARKHEAP            Get current heap ptr                         
         ST    R15,SAMNHEAP        Save new heap ptr                            
*                                                                               
         SEGINIT SAMWRBUF,,SAMSG,RTN=SAMSEG                                     
*                                                                               
         LA    R1,SAMWA                                                         
         AH    R1,=AL2(SAMINBUF-SAMWA)                                          
         LH    R0,=AL2(L'SAMINBUF)                                              
         SEGINIT (R1),(R0),.SAMINSG  Initialize input seg buffer                
*-                                                                              
*-       Send path open.                                                        
*-                                                                              
         LA    R4,2                Retry count                                  
*                                                                               
SAMPLOOP MVC   SAMSCMD,=C'PO'      Path open                                    
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SET   SAMFNORETRY         No retry logic wanted                        
         MVC   SAMPSTM,CPSAMTMO    Save previous timeout value                  
         IF    ^CPSAMFUTMOUT,'MVC CPSAMTMO,=H"10"'  10 sec timeout              
         SEGWR                                                                  
*-                                                                              
*-       It is possible that the user has done a "SET TERMINAL                  
*-         SAMSON" on a non-Samson terminal.  In this case we will              
*-         get a packet send error here.  The logic is to then                  
*-         try sending a path close which presumably will fail                  
*-         also.  If for some reason the path close works, then we              
*-         will retry the path open.                                            
*-                                                                              
         IF    NZ,BEGIN            Packet send error...                         
         LA    R15,200             Wait 2 second without reading                
         VCALL WAITER              Sit it out                                   
*                                                                               
         MVC   SAMSCMD,=C'PC'      Path close                                   
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR ,                   Try sending the path close                   
*                                                                               
         MVC   CPSAMTMO,SAMPSTM    Restore timeout value                        
         CLEAR SAMFNORETRY         Clear no retry flag                          
*                                                                               
         IF    (R15,Z),BEGIN       Hmm, this time SEGWR worked...               
         BCT   R4,SAMPLOOP         Go back and try it again                     
*  If we fall through then it means that we give up.                            
         END                                                                    
*                                                                               
         LA    R15,4               Bad return code                              
         B     SAMPDONE            Scram                                        
         END                                                                    
*                                                                               
         MVC   CPSAMTMO,SAMPSTM    Restore timeout value                        
         CLEAR SAMFNORETRY         Clear no retry flag                          
*-                                                                              
*-       Now send path parameters packet.                                       
*-                                                                              
         MVC   SAMSCMD,=C'PP'      Path parameters                              
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
*                                                                               
         MVC   SAMPSTM,CPSAMTMO    Save timeout value                           
         IF    ^CPSAMFUTMOUT,'MVC CPSAMTMO,=H"10"'  10 sec timeout              
         SEGWR                                                                  
         MVC   CPSAMTMO,SAMPSTM    Restore old timeout value                    
*-                                                                              
*-       Process path parameter information which was returned.                 
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN                                              
         LOOP  BEGIN                                                            
         ACALL INLINE              Get enviornment options                      
         IF    NZ,EXIT             Nothing left, scram                          
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  SAMPPRT             Process return parameters                    
         CLEAR R15                 Ignore any errors                            
         END                                                                    
         END                                                                    
*-                                                                              
*-       Try sending an echo packet to see if the high bit in the               
*-         data gets corrupted.  If it does then we will switch to              
*-         7-bit mode.                                                          
*-                                                                              
         CLEAR CPSAMFBADECHO                                                    
*                                                                               
         IF    (CPSAMPRO,GE,2),BEGIN  Only for version 2...                     
         XPUSH ,,64,PTR=R3                                                      
         MVC   @R3(10),=C'Echo test='                                           
         L     R15,CVASCTBL                                                     
         TR    @R3(10),@R15        Convert text to ASCII                        
         MVC   @R3+10(4),=X'3133B2B5'  Test pattern with MSB mixed              
*                                                                               
         SETMSG (R3),14             Echo text                                   
         ACALL SAMECHO             Try the echo                                 
         IF    Z,BEGIN             We got something back...                     
         CLC   @R1(14),@R3                                                      
         IF    NE,'SET CPSAMFBADECHO'  MSB problems, probably                   
         END                                                                    
*                                                                               
         XPOP  ,,64                                                             
*-                                                                              
*-       Adjust encoding settings based on the results of the echo              
*-         test.                                                                
*-                                                                              
         IF    CPSAMFBADECHO,BEGIN  Can't do 8-bit transfers...                 
         IF    (CPSAMF8BIT,OR,CPSAMFPCK),BEGIN  Change mode...                  
         CLEAR CPSAMFEMASK         Reset encoding                               
         SET   CPSAMF7BIT          Use 7-bit encoding                           
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now send path settings packet and process results.                     
*-         Note:  This is for version 2 protocol only.                          
*-                                                                              
         IF    (CPSAMVER,EQ,'2.95 '),EXIT   !!  Temporary  !!                   
         IF    (CPSAMVER,EQ,'2.96 '),EXIT   !!  Temporary  !!                   
         IF    (CPSAMVER,EQ,'2.97 '),EXIT   !!  Temporary  !!                   
         IF    (CPSAMVER,EQ,'2.98 '),EXIT   !!  Temporary  !!                   
*                                                                               
         MVC   SAMSCMD,=C'PS'      Path settings                                
         ACALL SEGHEAD             Seg packet header                            
*-                                                                              
*-       Send our settings.                                                     
*-                                                                              
         SEG   'BUFFER='           Requested buffer size                        
         SEGDC L:CPSAMBUFF                                                      
         ACALL SEGSEP                                                           
*                                                                               
         IF    (SAMPVAL,NZ),BEGIN  Set the time/date...                         
         VCALL LOCALTOD            Get current time/date                        
         LA    R15,SAMPWORK        Return area                                  
         VCALL FMTCLCK             Format "hh:mm:ss mm/dd/yyyy.."               
         LR    R2,R1                       0123456789.12345678                  
         SEG   'TIME='                                                          
         SEG   @R2+17,2            "yy"                                         
         SEG   '.'                                                              
         SEG   @R2+9,2             "mm"                                         
         SEG   '.'                                                              
         SEG   @R2+12,2            "dd"                                         
         SEG   '.'                                                              
         SEG   @R2,2               "hh"                                         
         SEG   '.'                                                              
         SEG   @R2+3,2             "mm"                                         
         SEG   '.'                                                              
         SEG   @R2+6,2             "ss"                                         
*                                                                               
         SEG   ','                                                              
         VCALL LOCALTOD            Get current date                             
         LA    R15,SAMPWORK        Output area                                  
         VCALL FMTXDATE            day, dd mon yy hh:mm:ss zon                  
         SEG   @R1+26,3            Send the timezone                            
         ACALL SEGSEP                                                           
         END                                                                    
*                                                                               
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*-                                                                              
*-       Process path settings information which was returned.                  
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN                                              
         LOOP  BEGIN                                                            
         ACALL INLINE              Get enviornment options                      
         IF    NZ,EXIT             Nothing left, scram                          
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  SAMPPRT             Process return parameters                    
         CLEAR R15                 Ignore any errors                            
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now close path.                                                        
*-                                                                              
         MVC   SAMSCMD,=C'PC'      Path close                                   
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
*                                                                               
         MVC   SAMPSTM,CPSAMTMO    Save timeout value                           
         MVC   CPSAMTMO,=H'10'     Set 10 second timeout                        
         SEGWR                                                                  
         MVC   CPSAMTMO,SAMPSTM    Restore old timeout value                    
*-                                                                              
*-       Set the printer type (for LPRINT) if the user has not                  
*-         already set a specific printer type.                                 
*-                                                                              
         IF    (CPSAMLPR,NZ),BEGIN  Samson knows printer type...                
         XPUSH ,,&LINESZ,PTR=R1                                                 
         LA    R0,&LINESZ                                                       
         LA    R2,=CL16'SYS.LPRINTER'                                           
         VCALL GETDATA             Get lprinter info                            
         IF    (NZ,OR,(R0,Z)),BEGIN  Nothing previously set...                  
         SETMSG CPSAMLPR            Lprinter info from Samson                   
         VCALL LRTRIM                                                           
         IF    (R0,Z),EXIT         Nothing, forget it                           
         LA    R2,=CL16'SYS.LPRINTER'                                           
         VCALL SAVEDATA            Save lprinter info                           
         END                                                                    
*                                                                               
         XPOP  ,,&LINESZ                                                        
         END                                                                    
*-                                                                              
*-       Now do compatability fix ups.                                          
*-                                                                              
         IF    (CPSAMTYP,EQ,'IBMPC '),'MVC CPSAMTYP(6),=C"SAMSON"'              
*                                                                               
         IF    (CPSAMHEI,Z),BEGIN  No explicit height...                        
         IF    (CPSAMTYP,NE,'SAMSON '),EXIT  IBM Samson                         
         IF    (CPSAMVER,NE,'2.9'),EXIT   Version 2.9                           
         MVC   CPSAMHEI,=H'24'     Explicitly use 24 lines                      
         END                                                                    
*                                                                               
         IF    (CPSAMTYP,EQ,'MAC '),BEGIN                                       
         IF    (CPSAMPRO,GE,2),EXIT  Only version 1 compatability               
         MVC   CPSAMTYP(9),=C'MACSAMSON'                                        
         CLEAR CPSAMFCMASK                                                      
         SET   CPSAMFCKS           Set Checksum                                 
         IF    (CPSAMTRM,EQ,'MAC '),'MVC CPSAMTRM(6),=C"MACSAM"'                
         END                                                                    
*                                                                               
         IF    (CPSAMTYP,EQ,'HP150PC '),BEGIN                                   
         MVC   CPSAMTYP(8),=C'HPSAMSON'                                         
         END                                                                    
*                                                                               
         IF    (CPSAMFONT,Z),BEGIN  Set default font name...                    
         MVC   CPSAMFONT,=CL(L'CPSAMFONT)'SAMFONT'                              
         END                                                                    
*-                                                                              
*-       If Samson told us that it supports an extended font,                   
*-         then set a flag in the SIB telling Milten that it's                  
*-         OK to use the extended font.                                         
*-                                                                              
         LA    R4,100              Max loop count                               
SFONTLP  WHILE (R4,POS),BEGIN      Try to update SIB...                         
         IF    ((CPSAMFONT,Z),OR,(CPSAMFONT,EQ,'SAMFONT ')),BEGIN               
         IF    ^CPSFSAMFONT,EXIT,SFONTLP  Already cleared                       
         CLEAR CPSFSAMFONT         Reset                                        
         END                                                                    
*                                                                               
         ELSE  BEGIN               We want extended Samson font...              
         IF    CPSFSAMFONT,EXIT,SFONTLP  Already set                            
         SET   CPSFSAMFONT         Set                                          
         END                                                                    
*                                                                               
         VCALL UPDCPSIB            Update SIB                                   
         IF    Z,EXIT              OK, scram                                    
*                                                                               
         DECR  R4                  Decr max loop count                          
         END                                                                    
*                                                                               
         CLEAR R15                 Aok                                          
         B     SAMPDONE                                                         
*-                                                                              
*-       Release SAMWA if possible.                                             
*-                                                                              
SAMPDONE ST    R15,SAMPRC          Save return code                             
*                                                                               
         MVC   SAMWA(3),=C'OSM'    Invalidate SAMWA                             
         CLEAR CPDEVP                                                           
         VCALL MARKHEAP            Get current heap ptr                         
         IF    (R15,EQ,SAMNHEAP),BEGIN  We can reduce the heap...               
         L     R15,SAMOHEAP                                                     
         VCALL RELHEAP             Release SAMWA                                
         END                                                                    
*                                                                               
         DROP  SAMWA               (Keeps us honest)                            
*-                                                                              
*-       Build log entry.                                                       
*-                                                                              
         AGO   .NSAMLOG                                                         
*                                                                               
         SEGINIT SAMPBUF,,SAMPSG,RTNTYPE=V,RTN=QSERVSEG                         
         LA    R15,=CL16'SAMLOG'   QSERV type                                   
         ST    R15,SAMPSGUSR       Save ptr                                     
*                                                                               
         SEG   'exec add_samlog '                                               
*-                                                                              
*-       Session tag.                                                           
*-                                                                              
         SEG   '@tag="'                                                         
*                                                                               
         L     R3,CVCURJCB                                                      
         WITH  (JCB,R3),BEGIN                                                   
         L     R2,JCBSINP                                                       
         WITH  (SIN,R2)                                                         
*                                                                               
         IF    (SIN,EQ,'SIN'),'SETMSG SINSTAG'                                  
         ELSE  'SETMSG "???"'                                                   
*                                                                               
         IF    (@R1,EQ,X'00'),'CLEAR R0'  (Nulls)                               
*                                                                               
         SEG   (R1),(R0)           SES_TAG                                      
         END                                                                    
*                                                                               
         SEG   '"'                                                              
*-                                                                              
*-       Samson type, version and OS.                                           
*-                                                                              
         IF    (CPSAMTYP,NZ),BEGIN  Samson type...                              
         SEG   ',@type="'                                                       
         SEGT  CPSAMTYP                                                         
         SEG   '"'                                                              
         END                                                                    
*                                                                               
         IF    (CPSAMVER,NZ),BEGIN  Samson version...                           
         SEG   ',@version="'                                                    
         SEGT  CPSAMVER                                                         
         SEG   '"'                                                              
         END                                                                    
*                                                                               
         IF    (CPSAMOS,NZ),BEGIN  Samson OS...                                 
         SEG   ',@os="'                                                         
         SEGT  CPSAMOS                                                          
         SEG   '"'                                                              
         END                                                                    
*-                                                                              
*-       General information.                                                   
*-                                                                              
         SEG   ',@info="'                                                       
*                                                                               
         SEG   'Speed='                                                         
         SEGDC L2:CPSAMSPD                                                      
         SEG   ' Protocol='                                                     
         SEGDC LH:CPSAMPRO                                                      
         IF    CPSAMF7BIT,'SETMSG " 7BIT  "'                                    
         ELSEIF CPSAMFPCK,'SETMSG " PACKED"'                                    
         ELSEIF CPSAMFHEX,'SETMSG " HEX   "'                                    
         ELSE  'SETMSG " 8BIT  "'                                               
         SEG   (R1),(R0)           Encoding                                     
*                                                                               
         IF    CPSAMFCKS,'SETMSG " CHECKSUM"'                                   
         ELSEIF CPSAMFCRC,'MSG " CRC"'                                          
         ELSE  'MSG " NOCHECK"'                                                 
         SEG   (R1),(R0)           Checking                                     
*                                                                               
         SEG   '"'                                                              
*-                                                                              
*-       QSERV the SAMLOG record.                                               
*-                                                                              
         SEGWR                                                                  
.NSAMLOG ANOP                                                                   
*                                                                               
SAMPEXIT SCPOP                                                                  
         L     R15,SAMPRC          Restore return code                          
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*-                                                                              
*-       Samson path parameter options.                                         
*-                                                                              
SAMPPRT  SCKW  TYPE,PTYPE                                                       
         SCKW  MICRO,PTYPE         (Version 1 Samson sent this)                 
         SCKW  OS,POS                                                           
         SCKW  CHARSET,PCHARSET                                                 
         SCKW  FONT,PFONT                                                       
         SCKW  PROTO,PPROTO,(P,I)                                               
         SCKW  BUFFER,PBUF,(P,I)                                                
         SCKW  SPEED,PSPEED,(P,I)                                               
         SCKW  VERSION,PVERSION                                                 
         SCKW  TERM,PTERM                                                       
         SCKW  TERMINAL,PTERM                                                   
         SCKW  PRINTER,PPRINT                                                   
         SCKW  HEIGHT,PHEIGHT,(P,I)                                             
         SCKW  WIDTH,PWIDTH,(P,I)                                               
         SCKW  ENCODING,PENCODE,P                                               
         SCKW  CHECKING,PCHECK,P                                                
         SCKW  DIALOG,PDIALOG,(P,I)                                             
         SCKW  ,V(SCNNOOP)         Ignore unrecognized stuff                    
*                                                                               
PTYPE    PROC                                                                   
         SCINFO                                                                 
         MVC   CPSAMTYP,CVBLANKS   Pre-blank                                    
         ACALL SAMTRIM                                                          
         LR    R15,R0                                                           
         CEIL  R15,L'CPSAMTYP                                                   
         MOVE  R15,CPSAMTYP,@R1    Save Samson PC type                          
         COMMENT ** DEBUG ** IS THIS OK, WE STOP SCANNING FOR MORE              
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
POS      PROC                                                                   
         SCINFO                                                                 
         MVC   CPSAMOS,CVBLANKS    Pre-blank                                    
         ACALL SAMTRIM                                                          
         LR    R15,R0                                                           
         CEIL  R15,L'CPSAMOS                                                    
         MOVE  R15,CPSAMOS,@R1     Save operating system                        
         COMMENT ** DEBUG ** IS THIS OK, WE STOP SCANNING FOR MORE              
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
PVERSION PROC                                                                   
         SCINFO                                                                 
         MVC   CPSAMVER,CVBLANKS   Pre-blank                                    
         ACALL SAMTRIM                                                          
         LR    R15,R0                                                           
         CEIL  R15,L'CPSAMVER                                                   
         MOVE  R15,CPSAMVER,@R1    Save Samson version                          
         COMMENT ** DEBUG ** IS THIS OK, WE STOP SCANNING FOR MORE              
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
PPROTO   PROC                                                                   
         STH   R0,CPSAMPRO         Save Samson protocol version                 
         PEND                                                                   
*                                                                               
PDIALOG  PROC                                                                   
         STH   R0,CPSAMDV          Save dialog support version                  
         PEND                                                                   
*                                                                               
PBUF     PROC                                                                   
         ST    R0,CPSAMBUFF        Save buffer size                             
         PEND                                                                   
*                                                                               
PSPEED   PROC                                                                   
         STH   R0,CPSAMSPD        Save line speed                               
*-                                                                              
*-       Set buffer size and timeout value based on line speed as               
*-         follows:                                                             
*-                                                                              
*-           under 1200 baud       buffer=256, timeout=15                       
*-           1200, 2400 baud       buffer=400, timeout=15                       
*-           4800, 9600 baud       buffer=960, timeout=15                       
*-          (0 baud) network       buffer=1200, timeout=60                      
*-                                                                              
         IF    (R0,Z),'LA R2,1200; LA R3,60'                                    
         ELSEIF (R0,LLT,1200),'LA R2,256' LA R3,15'                             
         ELSEIF (R0,LLT,4800),'LA R2,400; LA R3,15'                             
         ELSE  'LA R2,960; LA R3,15'                                            
*                                                                               
         IF    ^CPSAMFUBUFFER,'ST R2,CPSAMBUFF' Set new buffer size             
         IF    ^CPSAMFUTMOUT,'STH R3,CPSAMTMO'  Set new timeout size            
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
PTERM    PROC                                                                   
         SCINFO                                                                 
         MVC   CPSAMTRM,CVBLANKS   Pre-blank                                    
         ACALL SAMTRIM                                                          
         LR    R15,R0                                                           
         CEIL  R15,L'CPSAMTRM                                                   
         MOVE  R15,CPSAMTRM,@R1    Save Samson terminal type                    
         COMMENT ** DEBUG ** IS THIS OK, WE STOP SCANNING FOR MORE              
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
PCHARSET PROC                                                                   
         SCINFO                                                                 
         MVC   CPSAMFONT,CVBLANKS  Pre-blank                                    
         ACALL SAMTRIM                                                          
         LR    R15,R0                                                           
         MVC   CPSAMFONT(7),=C'SAMFONT'                                         
         CEIL  R15,L'CPSAMFONT-7                                                
         MOVE  R15,CPSAMFONT+7,@R1 Save Samson font suffix                      
         COMMENT ** DEBUG ** IS THIS OK, WE STOP SCANNING FOR MORE              
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
PFONT    PROC                                                                   
         SCINFO                                                                 
         MVC   CPSAMFONT,CVBLANKS  Pre-blank                                    
         ACALL SAMTRIM                                                          
         LR    R15,R0                                                           
         CEIL  R15,L'CPSAMFONT                                                  
         MOVE  R15,CPSAMFONT,@R1   Save Samson font                             
         COMMENT ** DEBUG ** IS THIS OK, WE STOP SCANNING FOR MORE              
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
PPRINT   PROC                                                                   
         SCINFO                                                                 
         MVC   CPSAMLPR,CVBLANKS   Pre-blank                                    
         ACALL SAMTRIM                                                          
         LR    R15,R0                                                           
         CEIL  R15,L'CPSAMLPR                                                   
         MOVE  R15,CPSAMLPR,@R1    Save Samson printer type                     
         COMMENT ** DEBUG ** IS THIS OK, WE STOP SCANNING FOR MORE              
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
PHEIGHT  PROC                                                                   
         STH   R0,CPSAMHEI         Save Samson height                           
         PEND                                                                   
*                                                                               
PWIDTH   PROC                                                                   
         STH   R0,CPSAMWID         Save Samson width                            
         PEND                                                                   
*                                                                               
PENCODE  PROC                                                                   
         SCUPTOK (R15)                                                          
         IF    ^CPSAMFUENCODE,BEGIN  Ok to set different encoding...            
         CLEAR CPSAMFEMASK         Default is 8-bit mode                        
         IF    (@R15,EQ,'PACKED '),'SET CPSAMFPCK'  Packed                      
         ELSEIF (@R15,EQ,'7BIT '),'SET CPSAMF7BIT'  7-bit                       
         ELSEIF (@R15,EQ,'HEX '),'SET CPSAMFHEX'    Hex                         
         END                                                                    
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
PCHECK   PROC                                                                   
         SCUPTOK (R15)                                                          
         IF    ^CPSAMFUCHECK,BEGIN  Ok to set different encoding...             
         CLEAR CPSAMFCMASK         No error checking                            
         IF    (@R15,EQ,'CHECKSUM'),'SET CPSAMFCKS'  Checksum                   
         ELSEIF (@R15,EQ,'CRC '),'SET CPSAMFCRC'     CRC                        
         END                                                                    
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
         DROP   R5                                                              
         SEGDEF DUMMY              (Safety)                                     
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMSCR -- Routine to scratch a Samson file.                                  
*                                                                               
*    On entry:                                                                  
*      FFINFO dsect contains information about the file                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - scratched successfully                                               
*      4 - not scratched (CPERRID contains error id)                            
*                                                                               
SAMSCR   XPROC                                                                  
         L     R5,CPFINFOP                                                      
         USING FFINFO,R5                                                        
*-                                                                              
*-       Do the open.                                                           
*-                                                                              
         VCALL MARKHEAP            Get current heap ptr                         
         LR    R2,R15                                                           
*                                                                               
         LH    R0,=AL2(L'SAMWA)                                                 
         VCALL GETHEAP             Get work area                                
         ST    R1,CPDEVP                                                        
         LR    R6,R1                                                            
         WITH  (SAMWA,R6)                                                       
         CLEAR SAMCLEAR                                                         
         MVC   SAMWA(3),=C'SAM'    Id                                           
*                                                                               
         ST    R2,SAMOHEAP         Save old heap ptr                            
         VCALL MARKHEAP            Get current heap ptr                         
         ST    R15,SAMNHEAP        Save new heap ptr                            
*                                                                               
         COMMENT                   SCAN SAM OPTIONS                             
         SCPUSH                                                                 
         SCINIT FFOPTS,L:FFOPTSL                                                
         SCAN  SAMSPRT                                                          
         SCANCHK                   ERROR EXIT FROM HERE !                       
         SCPOP                                                                  
*                                                                               
         COMMENT                   RESOLVE NAME                                 
         VCALL NRESOLVE                                                         
*                                                                               
         COMMENT                   SET FILE, HOST NAME                          
         ACALL SETFNAME                                                         
*                                                                               
         SEGINIT SAMWRBUF,,SAMSG,RTN=SAMSEG                                     
*                                                                               
         LA    R1,SAMWA                                                         
         AH    R1,=AL2(SAMINBUF-SAMWA)                                          
         LH    R0,=AL2(L'SAMINBUF)                                              
         SEGINIT (R1),(R0),.SAMINSG  Initialize input seg buffer                
*-                                                                              
*-       Send path open packet.                                                 
*-                                                                              
         MVC   SAMSCMD,=C'PO'      Path open                                    
*-                                                                              
*-       Version 1 CRC calculation was not correct, so we can not               
*-         request it.                                                          
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  No CRC in version 1...                    
         CLEAR CPSAMFPCK           Version 1 can not do packed                  
         CLEAR CPSAMFCRC           Version 1 can not do CRC                     
         END                                                                    
*                                                                               
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         SET   DSNFSTAT            Give "in progress" status msgs               
*-                                                                              
*-       Send file delete request packet.                                       
*-                                                                              
         MVC   SAMSCMD,=C'FD'      File delete parameters                       
         ACALL SEGHEAD             Seg packet header                            
*                                                                               
         COMMENT                   Specify file                                 
         SEG   'FILE='                                                          
         SEG   SAMFNAME,L:SAMFNAMEL                                             
*                                                                               
         ACALL SEGEOD              End of parameters                            
*                                                                               
         ACALL SEGTRAIL            Seg packet trailer                           
         SET   SAMFERET            Return even if error                         
         SEGWR                                                                  
*-                                                                              
*-       Process open error.                                                    
*-         CPERRID has the error id and the TSEG buffer contains                
*-         the msg.                                                             
*-                                                                              
         CLEAR SAMFERET            Reset error trapping                         
         IF    SAMFERC,'LA R15,4; B SAMSEXIT'  Open error                       
*-                                                                              
*-       Process scratch enviornment options.                                   
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN                                              
         LOOP  BEGIN                                                            
         ACALL INLINE              Get enviornment options                      
         IF    NZ,EXIT             Nothing left, scram                          
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  SAMRSPRT             Process enviornment options                 
         CLEAR R15                 Ignore errors                                
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now close path.                                                        
*-                                                                              
         MVC   SAMSCMD,=C'PC'      Path close                                   
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         CLEAR R15                 A-ok                                         
         B     SAMSEXIT                                                         
*-                                                                              
*-       Release SAMWA if possible.                                             
*-                                                                              
SAMSEXIT XPUSH R15                 Save return code                             
*                                                                               
         MVC   SAMWA(3),=C'OSM'    Invalidate SAMWA                             
         CLEAR CPDEVP                                                           
         VCALL MARKHEAP            Get current heap ptr                         
         IF    (R15,EQ,SAMNHEAP),BEGIN  We can reduce the heap...               
         L     R15,SAMOHEAP                                                     
         VCALL RELHEAP             Release SAMWA                                
         END                                                                    
*                                                                               
         XPOP  R15                 Return code                                  
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*   Scratch open options                                                        
*   None.                                                                       
*                                                                               
SAMSPRT  SCKW  ,V(NOTVALID)                                                     
*                                                                               
*                                                                               
*   Scratch enviornment options.                                                
*   Returned from micro                                                         
*                                                                               
*                                                                               
SAMRSPRT SCKW  FILE,SFILE                                                       
         SCKW  ,V(SCNNOOP)         Ignore unrecognized stuff                    
*                                                                               
*                                                                               
SFILE    PROC                                                                   
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
*                                                                               
         COMMENT                   Save fully resolved name                     
         LR    R2,R0                                                            
         CEIL  R2,L'FFRNAME                                                     
         ST    R2,FFRNAMEL                                                      
         MOVE  R2,FFRNAME,@R1                                                   
*                                                                               
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R5                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMREN -- Routine to rename a Samson file.                                   
*                                                                               
*    On entry:                                                                  
*      R1,R0 - fully resolved old file name loc, len                            
*      R2,R3 - fully resolved new file name loc, len                            
*      FFINFO dsect contains information about the file                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - renamed successfully                                                 
*      4 - not renamed (CPERRID contains error id)                              
*                                                                               
*                                                                               
SAMREN   XPROC                                                                  
*                                                                               
         XPUSH R0,R3               Save file name pointers                      
*                                                                               
         L     R5,CPFINFOP                                                      
         USING FFINFO,R5                                                        
*-                                                                              
*-       Do the open.                                                           
*-                                                                              
         VCALL MARKHEAP            Get current heap ptr                         
         LR    R2,R15                                                           
*                                                                               
         LH    R0,=AL2(L'SAMWA)                                                 
         VCALL GETHEAP             Get work area                                
         ST    R1,CPDEVP                                                        
         LR    R6,R1                                                            
         WITH  (SAMWA,R6)                                                       
         CLEAR SAMCLEAR                                                         
         MVC   SAMWA(3),=C'SAM'    Id                                           
*                                                                               
         ST    R2,SAMOHEAP         Save old heap ptr                            
         VCALL MARKHEAP            Get current heap ptr                         
         ST    R15,SAMNHEAP        Save new heap ptr                            
*                                                                               
         COMMENT                   Save samson file names                       
         XPOP  R0,R3                                                            
         ST    R0,SAMOLDFNL                                                     
         ST    R1,SAMOLDFN                                                      
         ST    R2,SAMNEWFN                                                      
         ST    R3,SAMNEWFNL                                                     
*                                                                               
         SEGINIT SAMWRBUF,,SAMSG,RTN=SAMSEG                                     
*                                                                               
         LA    R1,SAMWA                                                         
         AH    R1,=AL2(SAMINBUF-SAMWA)                                          
         LH    R0,=AL2(L'SAMINBUF)                                              
         SEGINIT (R1),(R0),.SAMINSG  Initialize input seg buffer                
*-                                                                              
*-       Send path open packet.                                                 
*-                                                                              
         MVC   SAMSCMD,=C'PO'      Path open                                    
*-                                                                              
*-       Version 1 CRC calculation was not correct, so we can not               
*-         request it.                                                          
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  No CRC in version 1...                    
         CLEAR CPSAMFPCK           Version 1 can not do packed                  
         CLEAR CPSAMFCRC           Version 1 can not do CRC                     
         END                                                                    
*                                                                               
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         SET   DSNFSTAT            Give "in progress" status msgs               
*-                                                                              
*-       Send file rename request packet.                                       
*-                                                                              
         MVC   SAMSCMD,=C'FR'      File rename parameters                       
         ACALL SEGHEAD             Seg packet header                            
*                                                                               
         COMMENT                   Specify file                                 
         SEG   'FILE='                                                          
         SEG   L:SAMOLDFN,L:SAMOLDFNL                                           
         ACALL SEGSEP                                                           
*                                                                               
         SEG   'NEWFILE='          New file name                                
         SEG   L:SAMNEWFN,L:SAMNEWFNL                                           
*                                                                               
         ACALL SEGEOD              End of parameters                            
*                                                                               
         ACALL SEGTRAIL            Seg packet trailer                           
         SET   SAMFERET            Return even if error                         
         SEGWR                                                                  
*-                                                                              
*-       Process open error.                                                    
*-         CPERRID has the error id and the TSEG buffer contains                
*-         the msg.                                                             
*-                                                                              
         CLEAR SAMFERET            Reset error trapping                         
         IF    SAMFERC,'LA R15,4; B SAMNEXIT'  Open error                       
*-                                                                              
*-       Process rename enviornment options.                                    
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN                                              
         LOOP  BEGIN                                                            
         ACALL INLINE              Get enviornment options                      
         IF    NZ,EXIT             Nothing left, scram                          
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  SAMRRPRT            Process enviornment options                  
         CLEAR R15                 Ignore errors                                
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now close path.                                                        
*-                                                                              
         MVC   SAMSCMD,=C'PC'      Path close                                   
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         CLEAR R15                 A-ok                                         
         B     SAMNEXIT                                                         
*-                                                                              
*-       Release SAMWA if possible.                                             
*-                                                                              
SAMNEXIT XPUSH R15                 Save return code                             
*                                                                               
         MVC   SAMWA(3),=C'OSM'    Invalidate SAMWA                             
         CLEAR CPDEVP                                                           
         VCALL MARKHEAP            Get current heap ptr                         
         IF    (R15,EQ,SAMNHEAP),BEGIN  We can reduce the heap...               
         L     R15,SAMOHEAP                                                     
         VCALL RELHEAP             Release SAMWA                                
         END                                                                    
*                                                                               
         XPOP  R15                 Return code                                  
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*   Rename open options                                                         
*   None.                                                                       
*                                                                               
SAMRPRT  SCKW  ,V(NOTVALID)                                                     
*                                                                               
*                                                                               
*   Rename enviornment options.                                                 
*   Returned from micro                                                         
*                                                                               
*                                                                               
SAMRRPRT SCKW  FILE,RFILE                                                       
         SCKW  NEWFILE,RNEWFILE                                                 
         SCKW  ,V(SCNNOOP)                                                      
*                                                                               
*                                                                               
RFILE    PROC                                                                   
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
*                                                                               
         COMMENT                   We ignore full resolved old name             
*                                                                               
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
RNEWFILE PROC                                                                   
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
*                                                                               
         COMMENT                   Save fully resolved new name                 
         LR    R2,R0                                                            
         CEIL  R2,L'FFRNAME                                                     
         ST    R2,FFRNAMEL                                                      
         MOVE  R2,FFRNAME,@R1                                                   
*                                                                               
         LA    R15,4                                                            
         PEND                                                                   
         DROP  R5                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMDIR -- Routine to show directory in a Samson file system.                 
*                                                                               
*    On entry:                                                                  
*      FFINFO dsect contains information about the file                         
*      R1,R0 describe the LIKE string                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - command successful                                                   
*      4 - error (CPERRID contains error id)                                    
*                                                                               
SAMDIR   XPROC                                                                  
         L     R5,CPFINFOP                                                      
         USING FFINFO,R5                                                        
         LR    R3,R0               Save LIKE string data                        
         LR    R4,R1                                                            
*-                                                                              
*-       Do the open.                                                           
*-                                                                              
         VCALL MARKHEAP            Get current heap ptr                         
         LR    R2,R15                                                           
*                                                                               
         LH    R0,=AL2(L'SAMWA)                                                 
         VCALL GETHEAP             Get work area                                
         ST    R1,CPDEVP                                                        
         LR    R6,R1                                                            
         WITH  (SAMWA,R6)                                                       
         CLEAR SAMCLEAR                                                         
         MVC   SAMWA(3),=C'SAM'    Id                                           
*                                                                               
         ST    R2,SAMOHEAP         Save old heap ptr                            
         VCALL MARKHEAP            Get current heap ptr                         
         ST    R15,SAMNHEAP        Save new heap ptr                            
*                                                                               
         STM   R3,R4,SAMLIKLN      Save LIKE parameter values                   
*                                                                               
         COMMENT                   SCAN SAM OPTIONS                             
         SCPUSH                                                                 
         SCINIT FFOPTS,L:FFOPTSL                                                
         SCAN  SAMDPRT                                                          
         SCANCHK                   ERROR EXIT FROM HERE !                       
         SCPOP                                                                  
*                                                                               
*        COMMENT                   IF DIRECTORY FILE NAME GIVEN                 
*        IF    (FFNAMEL,NZ),BEGIN                                               
*        COMMENT                   RESOLVE NAME                                 
         LA    R1,FFINFO                                                        
         VCALL SAMRESLV                                                         
*        COMMENT                   SET FILE, HOST NAME                          
         ACALL SETFNAME                                                         
*        END                                                                    
*                                                                               
         SEGINIT SAMWRBUF,,SAMSG,RTN=SAMSEG                                     
*                                                                               
         LA    R1,SAMWA                                                         
         AH    R1,=AL2(SAMINBUF-SAMWA)                                          
         LH    R0,=AL2(L'SAMINBUF)                                              
         SEGINIT (R1),(R0),.SAMINSG  Initialize input seg buffer                
*-                                                                              
*-       Send path open packet.                                                 
*-                                                                              
         MVC   SAMSCMD,=C'PO'      Path open                                    
*-                                                                              
*-       Version 1 CRC calculation was not correct, so we can not               
*-         request it.                                                          
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  No CRC in version 1...                    
         CLEAR CPSAMFPCK           Version 1 can not do packed                  
         CLEAR CPSAMFCRC           Version 1 can not do CRC                     
         END                                                                    
*                                                                               
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         SET   DSNFSTAT            Give "in progress" status msgs               
*-                                                                              
*-       Send file direcotry request packet.                                    
*-                                                                              
         MVC   SAMSCMD,=C'FS'      File show directory parameters               
         ACALL SEGHEAD             Seg packet header                            
*                                                                               
         COMMENT                   Specify file                                 
         SEG   'FILE='                                                          
         SEG   SAMFNAME,L:SAMFNAMEL                                             
*                                                                               
         IF (SAMLIKLN,NZ),BEGIN                                                 
         ACALL SEGSEP                                                           
         SEG   'LIKE='                                                          
         SEG   L:SAMLIKE,L:SAMLIKLN                                             
         END                                                                    
*                                                                               
         ACALL SEGEOD              End of parameters                            
*                                                                               
         ACALL SEGTRAIL            Seg packet trailer                           
         SET   SAMFERET            Return even if error                         
         SEGWR                                                                  
*-                                                                              
*-       Process open error.                                                    
*-         CPERRID has the error id and the TSEG buffer                         
*-         contains the msg.                                                    
*-                                                                              
         CLEAR SAMFERET            Reset error trapping                         
         IF    SAMFERC,'LA R15,4; B SAMDEXIT'  Open error                       
*-                                                                              
*-       Process directory environment options                                  
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN                                              
         LOOP  BEGIN                                                            
         ACALL INLINE              Get an options line                          
         IF    NZ,EXIT             Nothing left, exit loop                      
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN   SAMRDPRT           Process options                              
         CLEAR  R15                                                             
         END                                                                    
         END                                                                    
*-                                                                              
*-       Process directory lines.                                               
*-                                                                              
         MVC   SAMSCMD,=C'FL'      Indicate we want file lines now              
*                                                                               
         LOOP  BEGIN                                                            
         ACALL INLINE              Get a file line                              
         IF    P,EXIT              Nothing left, scram                          
         IF    Z,BEGIN                                                          
         TSEG  (R1),(R0),CR                                                     
         END                                                                    
         ELSE  BEGIN              Partial line                                  
         TSEG  (R1),(R0)                                                        
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now close path.                                                        
*-                                                                              
         MVC   SAMSCMD,=C'PC'      Path close                                   
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         CLEAR R15                 A-ok                                         
         B     SAMDEXIT                                                         
*-                                                                              
*-       Release SAMWA if possible.                                             
*-                                                                              
SAMDEXIT XPUSH R15                 Save return code                             
*                                                                               
         MVC   SAMWA(3),=C'OSM'    Invalidate SAMWA                             
         CLEAR CPDEVP                                                           
         VCALL MARKHEAP            Get current heap ptr                         
         IF    (R15,EQ,SAMNHEAP),BEGIN  We can reduce the heap...               
         L     R15,SAMOHEAP                                                     
         VCALL RELHEAP             Release SAMWA                                
         END                                                                    
*                                                                               
         XPOP  R15                 Return code                                  
         PEND                                                                   
         DROP  R5                                                               
         EJECT                                                                  
*                                                                               
*   Show directory open options                                                 
*   None.                                                                       
*                                                                               
SAMDPRT  SCKW  ,V(NOTVALID)                                                     
*                                                                               
*                                                                               
*   Show directory environment options.                                         
*   Returned from micro                                                         
*   We don't currently process them.                                            
*                                                                               
SAMRDPRT SCKW ,V(SCNNOOP)                                                       
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMTEST -- This is just a debugging routine right now, it                    
*    tests what Samson will do when it gets an "XX" packet type.                
*                                                                               
*    On entry:                                                                  
*      FFINFO dsect contains information about the file                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - successful                                                           
*      4 - not successful (CPERRID contains error id)                           
*                                                                               
SAMTEST  XPROC                                                                  
*-                                                                              
*-       Do the open.                                                           
*-                                                                              
         VCALL MARKHEAP            Get current heap ptr                         
         LR    R2,R15                                                           
*                                                                               
         LH    R0,=AL2(L'SAMWA)                                                 
         VCALL GETHEAP             Get work area                                
         ST    R1,CPDEVP                                                        
         LR    R6,R1                                                            
         WITH  (SAMWA,R6)                                                       
         CLEAR SAMCLEAR                                                         
         MVC   SAMWA(3),=C'SAM'    Id                                           
*                                                                               
         ST    R2,SAMOHEAP         Save old heap ptr                            
         VCALL MARKHEAP            Get current heap ptr                         
         ST    R15,SAMNHEAP        Save new heap ptr                            
*                                                                               
         SEGINIT SAMWRBUF,,SAMSG,RTN=SAMSEG                                     
*                                                                               
         LA    R1,SAMWA                                                         
         AH    R1,=AL2(SAMINBUF-SAMWA)                                          
         LH    R0,=AL2(L'SAMINBUF)                                              
         SEGINIT (R1),(R0),.SAMINSG  Initialize input seg buffer                
*-                                                                              
*-       Send path open packet.                                                 
*-                                                                              
         MVC   SAMSCMD,=C'PO'      Path open                                    
*-                                                                              
*-       Version 1 CRC calculation was not correct, so we can not               
*-         request it.                                                          
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  No CRC in version 1...                    
         CLEAR CPSAMFPCK           Version 1 can not do packed                  
         CLEAR CPSAMFCRC           Version 1 can not do CRC                     
         END                                                                    
*                                                                               
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         SET   DSNFSTAT            Give "in progress" status msgs               
*-                                                                              
*-       Send XX packet.                                                        
*-                                                                              
         MVC   SAMSCMD,=C'XX'      Ba ba ba boom                                
         ACALL SEGHEAD             Seg packet header                            
*                                                                               
         SEGT  'TEST PACKET'                                                    
*                                                                               
         ACALL SEGEOD              End of parameters                            
*                                                                               
         ACALL SEGTRAIL            Seg packet trailer                           
         SET   SAMFERET            Return even if error                         
         SEGWR                                                                  
*-                                                                              
*-       Process open error.                                                    
*-    CPERRID has the error id and the TSEG buffer contains the msg.            
*-                                                                              
         CLEAR SAMFERET            Reset error trapping                         
         IF    SAMFERC,'LA R15,4; B SAMTEXIT'  Open error                       
*-                                                                              
*-       Process scratch enviornment options.                                   
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN                                              
         LOOP  BEGIN                                                            
         ACALL INLINE              Get enviornment options                      
         IF    NZ,EXIT             Nothing left, scram                          
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  SAMRTPRT            Process enviornment options                  
         CLEAR R15                 Ignore errors                                
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now close path.                                                        
*-                                                                              
         MVC   SAMSCMD,=C'PC'      Path close                                   
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         CLEAR R15                 A-ok                                         
         B     SAMTEXIT                                                         
*-                                                                              
*-       Release SAMWA if possible.                                             
*-                                                                              
SAMTEXIT XPUSH R15                 Save return code                             
*                                                                               
         MVC   SAMWA(3),=C'OSM'    Invalidate SAMWA                             
         CLEAR CPDEVP                                                           
         VCALL MARKHEAP            Get current heap ptr                         
         IF    (R15,EQ,SAMNHEAP),BEGIN  We can reduce the heap...               
         L     R15,SAMOHEAP                                                     
         VCALL RELHEAP             Release SAMWA                                
         END                                                                    
*                                                                               
         XPOP  R15                 Return code                                  
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*   Test enviornment options.                                                   
*   Returned from micro                                                         
*                                                                               
*                                                                               
SAMRTPRT SCKW  ,V(SCNNOOP)                                                      
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMOPEN -- Routine to open a Samson file.                                    
*                                                                               
*    On entry:                                                                  
*      R1 - FILE INFO DSECT                                                     
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - opened successfully                                                  
*      4 - not opened (CPERRID contains error id)                               
*                                                                               
SAMOPEN  XPROC                                                                  
         LR    R5,R1                                                            
         USING FFINFO,R5                                                        
*-                                                                              
*-       Now do the open.                                                       
*-                                                                              
         VCALL MARKHEAP            Get current heap ptr                         
         LR    R2,R15                                                           
*                                                                               
         LH    R0,=AL2(L'SAMWA)                                                 
         VCALL GETHEAP             Get work area                                
         ST    R1,CPDEVP                                                        
         LR    R6,R1                                                            
         USING SAMWA,R6                                                         
         CLEAR SAMCLEAR                                                         
         MVC   SAMWA(3),=C'SAM'    Id                                           
*                                                                               
         ST    R2,SAMOHEAP         Save old heap ptr                            
         VCALL MARKHEAP            Get current heap ptr                         
         ST    R15,SAMNHEAP        Save new heap ptr                            
*                                                                               
         COMMENT                   SCAN SAM OPTIONS                             
         SCPUSH                                                                 
         SCINIT FFOPTS,L:FFOPTSL                                                
         SCAN  SAMOPRT                                                          
         SCANCHK                   ERROR EXIT FROM HERE !                       
         SCPOP                                                                  
*                                                                               
         COMMENT                   VALIDITY CHECK SOME OPTIONS                  
         IF    ((SAMFASCII,OR,SAMFEBCDIC),AND,^SAMFTRAN),BEGIN                  
         TSEG  'TRANSPARENT must be specified '                                 
         ERROR 'if ASCII/EBCDIC is specified.'                                  
         END                                                                    
         IF    (FFFWRITE,OR,FFFREPL,OR,FFFAPPD),BEGIN                           
         IF    SAMFUFMT,BEGIN      Unformatted...                               
         ERROR 'UNFORMATTED option not allowed for file write.'                 
         END                                                                    
         IF    SAMFTEXTONLY,BEGIN  Textonly...                                  
         ERROR 'TEXTONLY option not allowed for file write.'                    
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   IF FILE RELATED OPEN, ...                    
         IF    (FFNAMEL,NZ),BEGIN                                               
         COMMENT                   RESOLVE NAME                                 
         VCALL NRESOLVE                                                         
         COMMENT                   SET FILE, HOST NAME                          
         ACALL SETFNAME                                                         
         END                                                                    
*                                                                               
         SEGINIT SAMWRBUF,,SAMSG,RTN=SAMSEG                                     
*                                                                               
         LA    R1,SAMWA                                                         
         AH    R1,=AL2(SAMINBUF-SAMWA)                                          
         LH    R0,=AL2(L'SAMINBUF)                                              
         SEGINIT (R1),(R0),.SAMINSG  Initialize input seg buffer                
*-                                                                              
*-       Set up defaults.                                                       
*-                                                                              
         IF    (SAMWRAPL,Z),'MVC SAMWRAPL,=H"230"'  Set splitlength             
*-                                                                              
*-       Send path open packet.                                                 
*-                                                                              
         MVC   SAMSCMD,=C'PO'      Path open                                    
*-                                                                              
*-       Version 1 CRC calculation was not correct, so we can not               
*-         request it.                                                          
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  No CRC in version 1...                    
         CLEAR CPSAMFPCK           Version 1 can not do packed                  
         CLEAR CPSAMFCRC           Version 1 can not do CRC                     
         END                                                                    
*                                                                               
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*                                                                               
         IF    (CPCMNM,EQ,'MIC'),SAMOEXIT  No FFINFO if MICRO cmd               
         IF    (CPCMNM,EQ,'SAM'),SAMOEXIT  No FFINFO if SAMSON cmd              
*                                                                               
         SET   DSNFSTAT            Give "in progress" status msgs               
         IF    (CPCMNM,EQ,'SAV'),'SET SAMFWRITE'  Write operation               
         IF    (CPSACCT,EQ,'JDNGG'),'SET SAMFASCII8'  Testing!!!                
*-                                                                              
*-       Send read/write file request packet.                                   
*-                                                                              
         MVC   SAMSCMD,=C'RP'      Read file parameters                         
         IF    SAMFWRITE,'MVI SAMSCMD,C"W"'  Write file                         
         ACALL SEGHEAD             Seg packet header                            
*                                                                               
         COMMENT                   Specify file                                 
         SEG   'FILE='                                                          
         SEG   SAMFNAME,L:SAMFNAMEL                                             
*-                                                                              
*-       Wylbur now handles WRAP and SPLIT itself.  We only need to             
*-        send it to Samson if the version 1 protocol is being used.            
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  Version 1 only...                         
         ACALL SEGSEP                                                           
         SETMSG 'WRAP='                                                         
         IF    SAMFSPLT,'SETMSG "SPLIT="'                                       
         SEG   (R1),(R0)                                                        
         SEGDC LH:SAMWRAPL         Wrap length                                  
         END                                                                    
*                                                                               
         IF    SAMFTRAN,'ACALL SEGSEP; SEG "TRANSPARENT"'                       
         IF    SAMFDTRAN,'ACALL SEGSEP; SEG "DTRANSPARENT"'                     
*                                                                               
         IF    CPLFLG2.CPFSCRTC,'ACALL SEGSEP; SEG "REPLACE"'                   
*                                                                               
         IF    SAMFAPP,'ACALL SEGSEP; SEG "APPEND"'                             
*                                                                               
         ACALL SEGEOD              End of parameters                            
*                                                                               
         ACALL SEGTRAIL            Seg packet trailer                           
         SET   SAMFERET            Return even if error                         
         SEGWR                                                                  
*-                                                                              
*-       Process open error.                                                    
*-         CPERRID has the error id and the TSEG buffer contains                
*-         the msg.                                                             
*-                                                                              
         CLEAR SAMFERET            Reset error trapping                         
         IF    SAMFERC,'LA R15,4; B SAMOEXIT'  Open error                       
*-                                                                              
*-       Process read/write enviornment options.                                
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN                                              
         LOOP  BEGIN                                                            
         ACALL INLINE              Get enviornment options                      
         IF    NZ,EXIT             Nothing left, scram                          
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  SAMROPRT            Process enviornment options                  
         CLEAR R15                 Ignore errors                                
         END                                                                    
         END                                                                    
*-                                                                              
*-       Prepare for regular file transfer (which will involve                  
*-         sending block read/write packets).                                   
*-                                                                              
         MVI   SAMSCMD+1,C'D'      Read/write data                              
*-                                                                              
*-       For "fast ftp" connections the data is sent over a                     
*-         separate direct TCP connection.  In the read/write                   
*-         parameters Samson returns, Samson tells us that it can               
*-         accept a "fast ftp" connection.  We then open the TCP                
*-         connection and wait for Samson to open it's side.                    
*-                                                                              
         IF    SAMFFAST,BEGIN      Open fast ftp connection...                  
         ACALL SNETOPEN            Open connection                              
         BNZ   SAMOEXIT            Trouble, scram                               
         END                                                                    
*-                                                                              
*-       Normal open completion.                                                
*-                                                                              
         SET   SAMFOPEN            File is open                                 
         CLEAR R15                 A-ok                                         
         B     SAMOEXIT                                                         
*                                                                               
SAMOEXIT PEND                                                                   
         EJECT                                                                  
*                                                                               
*  File open options                                                            
*                                                                               
*                                                                               
SAMOPRT  SCKW  TABS,TABS,A                                                      
         SCKW  NOTABS,NOTABS,A                                                  
         SCKW  UNFORMATTED,UNFMT,A                                              
         SCKW  FORMATTED,FMT,A                                                  
         SCKW  TEXTONLY,TEXTONLY,A                                              
         SCKW  TRANSPARENT,TRANS,A                                              
         SCKW  DTRANSPARENT,DTRANS,A                                            
         SCKW  ASCII,ASCII,A                                                    
         SCKW  EBCDIC,EBCDIC,A                                                  
         SCKW  STREAM,STREAM,A                                                  
         SCKW  WRAP,WRAP,(A,P,PI),&LINESZ                                       
         SCKW  SPLIT,SPLIT,(A,P,PI),&LINESZ                                     
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
TABS     DPROC ,                                                                
         SET   SAMFTABS            Keep TAB characters in data                  
         PEND  ,                                                                
*                                                                               
NOTABS   DPROC ,                                                                
         CLEAR SAMFTABS            Expand TAB characters in data                
         PEND  ,                                                                
*                                                                               
FMT      DPROC ,                                                                
         CLEAR SAMFUFMT            FORMATTED                                    
         CLEAR SAMFTABS                                                         
         PEND  ,                                                                
*                                                                               
UNFMT    DPROC ,                                                                
         SET   SAMFUFMT            UNFORMATTED                                  
         SET   SAMFTABS                                                         
         PEND  ,                                                                
*                                                                               
TEXTONLY DPROC ,                                                                
         SET   SAMFTEXTONLY        TEXTONLY                                     
         PEND  ,                                                                
*                                                                               
TRANS    DPROC                                                                  
         SET   SAMFTRAN            Set TRANSPARENT format                       
         PEND                                                                   
*                                                                               
DTRANS   DPROC                                                                  
         SET   SAMFDTRAN+SAMFTRAN  Set DTRANSPARENT format                      
         PEND                                                                   
*                                                                               
ASCII    DPROC                                                                  
         SET   SAMFASCII           ASCII                                        
         CLEAR SAMFEBCDIC          Not EBCDIC                                   
         PEND                                                                   
*                                                                               
EBCDIC   DPROC                                                                  
         SET   SAMFEBCDIC          EBCDIC                                       
         CLEAR SAMFASCII           Not ASCII                                    
         PEND                                                                   
*                                                                               
STREAM   DPROC                                                                  
         SET   SAMFSTRM                                                         
         PEND                                                                   
*                                                                               
WRAP     PROC                                                                   
         IF    (CPCMNM,EQ,'SAV'),BEGIN    WRAP invalid on SAVE                  
         VCALL NOTVALID                                                         
         END                                                                    
         CLEAR SAMFSPLT            WRAP, not SPLIT                              
         STH   R0,SAMWRAPL         Save WRAP length                             
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
SPLIT    PROC  ,                                                                
         IF    (CPCMNM,EQ,'SAV'),BEGIN    SPLIT invalid on SAVE                 
         VCALL NOTVALID                                                         
         END                                                                    
         SET   SAMFSPLT            SPLIT, not WRAP                              
         STH   R0,SAMWRAPL         Save WRAP length                             
         CLEAR R15                                                              
         PEND  ,                                                                
**                                                                              
         EJECT                                                                  
**                                                                              
**  Enviornment options.                                                        
**  Returned from micro after open.                                             
**                                                                              
**                                                                              
SAMROPRT SCKW  FILE,OFILE                                                       
         SCKW  TRANSPARENT,OTRAN                                                
         SCKW  DTRANSPARENT,ODTRAN                                              
         SCKW  NOTRANSPARENT,ONOTRAN                                            
         SCKW  APPLEASCII,OASCII8                                               
         SCKW  ASCII8,OASCII8                                                   
         SCKW  REPLACE,OREP                                                     
         SCKW  NOREPLACE,ONOREP                                                 
         SCKW  APPEND,OAPP                                                      
         SCKW  NOAPPEND,ONOAPP                                                  
         SCKW  IPADDR,OIPADDR                                                   
         SCKW  SEED,OSEED                                                       
         SCKW  ,V(SCNNOOP)                                                      
*-                                                                              
OFILE    PROC                                                                   
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
*                                                                               
         COMMENT                   Save fully resolved name                     
         LR    R2,R0                                                            
         CEIL  R2,L'FFRNAME                                                     
         ST    R2,FFRNAMEL                                                      
         MOVE  R2,FFRNAME,@R1                                                   
*                                                                               
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
OTRAN    PROC  ,                                                                
         SET   SAMFTRAN            Transparent (no translation)                 
         PEND                                                                   
*                                                                               
ODTRAN   PROC  ,                                                                
         SET   SAMFDTRAN+SAMFTRAN  Data transparent                             
         PEND                                                                   
*                                                                               
ONOTRAN  PROC                                                                   
         CLEAR SAMFTRAN            Not transparent                              
         PEND                                                                   
*                                                                               
OASCII8  PROC  ,                                                                
         SET   SAMFASCII8          Set 8 bit ASCII mode                         
         PEND                                                                   
*                                                                               
OREP     PROC  ,                                                                
         SET   CPLFLG2.CPFSCRTC    Replacing file                               
         PEND                                                                   
*                                                                               
ONOREP   PROC  ,                                                                
         CLEAR CPLFLG2.CPFSCRTC    Not replacing file                           
         CLEAR SAMFAPP             No append                                    
         PEND                                                                   
*                                                                               
OAPP     PROC  ,                                                                
         SET   SAMFAPP             Appending to file                            
         PEND                                                                   
*                                                                               
ONOAPP   PROC  ,                                                                
         CLEAR SAMFAPP             Not appending to file                        
         PEND                                                                   
*                                                                               
OIPADDR  PROC                                                                   
         IF    CPGFSAMSLOW,OIPADONE  No fast FTPs allowed, scram                
*-                                                                              
*-       Temporarily switch to SLOW FTP if WRAP=x or STREAM                     
*-       options are specified.                                                 
*-                                                                              
         IF    (SAMWRAPL,NE,230),OIPADONE  !!!!                                 
         IF    SAMFSTRM,OIPADONE           !!!!                                 
*                                                                               
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
         SET   SAMFFAST            Fast ftp mode                                
         MVC   SAMRNAME,CVBLANKS                                                
         LR    R15,R0                                                           
         CEIL  R15,L'SAMRNAME                                                   
         MOVE  R15,SAMRNAME,@R1    Remote host's IP address                     
OIPADONE LA    R15,4                                                            
         PEND                                                                   
*                                                                               
OSEED    PROC                                                                   
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
         MVC   SAMSEED,=C'124 blackburn and 2781 ross road'                     
         LR    R15,R0                                                           
         CEIL  R15,L'SAMSEED                                                    
         MOVE  R15,SAMSEED,@R1     Set seed                                     
         L     R15,CVASCTBL                                                     
         TR    SAMSEED,@R15        Now translate to ASCII                       
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
         DROP  R5                                                               
         DROP  R6                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMREAD -- Routine to read the next line from a Samson file.                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - loc, len of line area                                            
*      Device work area - file info ..                                          
*                                                                               
*    On exit:                                                                   
*      R1, R0 - loc len of text                                                 
*      R2 - line number                                                         
*      R15=ZERO, line returned.  R15=NZ, end of file.                           
*                                                                               
SRDWA    RECORD BEGIN                                                           
SRDLOC   DS    F                                                                
SRDLEN   DS    F                                                                
         END                                                                    
*                                                                               
SAMREAD  XPROC SRDWA                                                            
*                                                                               
         ST    R1,SRDLOC                                                        
         ST    R0,SRDLEN                                                        
*                                                                               
         L     R6,CPDEVP           SAMWA ptr                                    
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*-                                                                              
*-       Handle fast ftp read separately.                                       
*-                                                                              
         IF    SAMFFAST,BEGIN      Fast ftp style...                            
         LCALL SNETREAD                                                         
         B     SAMREXIT                                                         
         END                                                                    
*-                                                                              
*-       Get the next line in transparent mode.                                 
*-                                                                              
         IF    SAMFTRAN,BEGIN      Transparent mode...                          
*-                                                                              
*-       Compatability note:                                                    
*-         In version 1 of the file transfer protocol Samson built              
*-         the transparent text lines itself, so we treat it like               
*-         regular text.  In version 2 and above Samson sends a                 
*-         continuous data stream with the transparent text in it.              
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  Old style transparent...                  
         ACALL INLINE              Get the next line segment                    
         IF    POS,'CLEAR R15; B SAMREXIT'  End of file, scram                  
         END                                                                    
*                                                                               
         ELSE  BEGIN               New style transparent...                     
         ACALL INTRAN              Transparent mode read                        
         IF    POS,'LA R15,4; B SAMREXIT'  End of file, scram                   
         END                                                                    
         END                                                                    
*-                                                                              
*-       Get the next line in text mode.                                        
*-                                                                              
         ELSE  BEGIN               Text mode...                                 
         ACALL INTEXT              Get the next text line                       
         IF    POS,'LA R15,4; B SAMREXIT'  End of file, scram                   
         END                                                                    
*-                                                                              
*-       If user tried to stop the file transfer then set the                   
*-         ATTN flag now.                                                       
*-                                                                              
         IF    SAMFBREAK,BEGIN     Stop the file transfer...                    
         L     R2,CVCURJCB                                                      
         WITH  (JCB,R2)                                                         
         SET   JCBFATTN            Set ATTN                                     
         END                                                                    
*-                                                                              
*-       Press the line and return it to the caller.                            
*-                                                                              
         L     R2,SAMLNO                                                        
         A     R2,CPDELTA                                                       
         ST    R2,SAMLNO          New lineno                                    
*                                                                               
SAMREXIT LABEL ,                                                                
         IF    (R15,Z),BEGIN       RETURN TEXT, LINE NUMBER                     
         L     R2,SRDLOC           MOVE TEXT TO LINE BUFFER                     
         L     R3,SRDLEN                                                        
         LR    R4,R1                                                            
         LR    R5,R0                                                            
         IF    (R5,GT,R3),'LR R5,R3'                                            
         MVCL  R2,R4                                                            
         L     R1,SRDLOC           RETURN LOC,LEN,LNO                           
         L     R2,SAMLNO                                                        
         PRETURN (R0,R2)                                                        
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMWRITE -- Routine to write the next line to a Samson file.                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - line location, length                                            
*      R2 - line number (ignored)                                               
*      Device work area contains information about the file.                    
*                                                                               
*    Only returns if ok.                                                        
*                                                                               
SAMWRITE XPROC                                                                  
         L     R6,CPDEVP           SAMWA ptr                                    
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*                                                                               
         FAIL  (R1,Z),SAMERR1,'Samson interface error.'                         
*                                                                               
* ** DEBUG ** SAMLINE buffer was formerly used as an unpress buffer.            
* we may be able to delete all samline buffer usage. but for now we             
* play it safe.                                                                 
*                                                                               
         COMMENT                   MOVE TEXT TO SAMLINE                         
         MVC   SAMLINE,CVBLANKS                                                 
         LR    R15,R0                                                           
         MOVE  R15,SAMLINE,@R1                                                  
*-                                                                              
*-       Convert our representation of special characters to real               
*-         special characters if we are dealing with APPLEASCII.                
*-                                                                              
         IF    SAMFASCII8,BEGIN    Appleascii...                                
         IF    (SAMFTRAN,OR,SAMFUFMT),EXIT  Transparent or Unfmt                
         SETMSG (R1),(R0)                                                       
         LA    R15,&LINESZ         Maximum line length                          
         LA    R2,2                Use APPLEASCII table                         
         VCALL UNFORML             Convert sequences to chars                   
         END                                                                    
*                                                                               
         LR    R4,R1               Save line loc...                             
         LR    R3,R0               ...and len                                   
*-                                                                              
*-       Handle fast ftp write separately.                                      
*-                                                                              
         IF    SAMFFAST,BEGIN      Fast ftp style...                            
         LCALL SNETWR                                                           
         B     SAMWEXIT                                                         
         END                                                                    
*-                                                                              
*-       Ask the user if he wants to stop if ATTN has been pressed.             
*-                                                                              
         IF    SAMFBREAK,BEGIN     Attn received...                             
         CLEAR SAMFBREAK           Reset ATTN flag                              
*-                                                                              
*-       Our message will erase the "(xxx lines written)" status                
*-         message, so we reset the flag saying a status message has            
*-         been written.                                                        
*-                                                                              
         CLEAR CPFSTMSG            Turn off status message flag                 
*-                                                                              
*-       Write out our own message.                                             
*-                                                                              
         TNUM  L:DSNLCNT           Current number of lines                      
         IF    (DSNLTOT,NZ),BEGIN  Give total line count too...                 
         TSEG  ' of '                                                           
         TNUM  L:DSNLTOT                                                        
         END                                                                    
         TSEG  ' lines have been written so far.'                               
         TSEG  CVBLANKS,20,CR      (Extra padding erases old msg)               
*                                                                               
         SETMSG 'Do you want to continue saving this file'                      
         VCALL YESNO               We want a YES or a NO                        
         IF    Z,EXIT              Yes, scram                                   
*                                                                               
         TSEG  'File transfer stopped, your file is only '                      
         ABORT 'partially saved.'                                               
         END                                                                    
*-                                                                              
*-       Seg write data packet header.                                          
*-                                                                              
         IF    (SAMSGLENF,Z),'ACALL SEGHEAD'  Packet header                     
*-                                                                              
*-       Transparent write data.                                                
*-                                                                              
         IF    SAMFTRAN,BEGIN      Transparent mode...                          
         LR    R15,R4              R4 = first character on line                 
         AR    R15,R3                                                           
         DECR  R15                 R15 = last character on line                 
         IF    ((R3,LT,2),OR,                                          *        
               ('CLC @R4(1),@R15',NE),OR,                              *        
               ((@R4,NE,'|'),AND,(@R4,NE,'@'),AND,                     *        
               (@R4,NE,'-'),AND,(@R4,NE,X'2D'))),BEGIN                          
         TSEG  'Line '                                                          
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         TSEG  ' is not valid TRANSPARENT data.',,CR                            
         ABORT 'SAVE command incomplete.'                                       
         END                                                                    
*-                                                                              
*-       This is a little tricky:                                               
*-                                                                              
*-       If the first character is an "@" then the data is in ASCII,            
*-          and if the first character is a "|" then it is in                   
*-          EBCDIC.                                                             
*-                                                                              
*-       For the Macintosh, if the first character is X'2D' then                
*-         the data is in ASCII, and if the first character is a "-"            
*-         then it is in EBCDIC.                                                
*-                                                                              
*-       We want it in EBCDIC so that it can later be translated to             
*-         ASCII by the seg routines.                                           
*-                                                                              
*-       A key factor here is that our ASCII to EBCDIC tables                   
*-         provide a 1-to-1 translation.                                        
*-                                                                              
         IF    ((@R4,EQ,'@'),OR,(@R4,EQ,X'2D')),BEGIN  ASCII...                 
         VCALL TOEBCDIC            If ASCII, convert                            
         END                                                                    
*-                                                                              
*-      Compatability note:  Samson file transfer protocol version 1            
*-        expected the "guard" characters to be present in the data             
*-        that was transferred down and also line separators between            
*-        each line.                                                            
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  Version 1...                              
         SEG   (R4),(R3)           Write data                                   
         SET   SAMFCTRL                                                         
         SEG   '\;'                Hard CR                                      
         CLEAR SAMFCTRL                                                         
         END                                                                    
*                                                                               
         ELSE  BEGIN               Version 2 and above...                       
         LA    R4,@R4+1            Skip over leading guard char                 
         SH    R3,=H'2'            Adjust length so no trailing                 
         SEG   (R4),(R3)           Just the data                                
         END                                                                    
*-                                                                              
*-       Write current packet out if it is too large.                           
*-                                                                              
         IF    (SAMSGLENF,GT,CPSAMBUFF),BEGIN  Write the packet...              
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR ,                   Write packet                                 
         ACALL SEGHEAD             Seg new packet header                        
         END                                                                    
         END                                                                    
*-                                                                              
*-       Text write data.                                                       
*-                                                                              
         ELSE  BEGIN               Text mode...                                 
*-                                                                              
*-       Seg end of previous line indication.                                   
*-                                                                              
         IF    SAMFWEOL,BEGIN      End of line needed...                        
         CLEAR R2                  Assume hard CR needed                        
         IF    SAMFSTRM,BEGIN      Write in STREAM format...                    
         IF    SAMFTRAN,EXIT       Ignore STREAM if TRANSPARENT                 
         IF    (SAMFWTXT,AND,(SAMLINE,NE,' ')),'LA R2,1'                        
         END                                                                    
*                                                                               
         IF    (R2,NZ),'SEG CVBLANKS,1'  Add a blank (soft CR)                  
         SET   SAMFCTRL                                                         
         SETMSG '\;'                Assume hard CR                              
         IF    (R2,NZ),'SETMSG "\,"'  Soft CR                                   
         SEG   (R1),(R0)           End of line terminator                       
         CLEAR SAMFCTRL                                                         
*                                                                               
         CLEAR SAMFWEOL+SAMFWTXT   Clear flags                                  
*-                                                                              
*-       Write current packet out if it is too large.                           
*-                                                                              
         IF    (SAMSGLENF,GT,CPSAMBUFF),BEGIN  Write the packet...              
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR ,                   Write packet                                 
         ACALL SEGHEAD             Seg new packet header                        
         END                                                                    
         END                                                                    
*-                                                                              
*-       Write the line text.                                                   
*-                                                                              
         SEG   (R4),(R3)           Line text                                    
*                                                                               
         SET   SAMFWEOL            Need to write line terminator                
         IF    (R3,NZ),'SET SAMFWTXT'  This line had some text on it            
         END                                                                    
*                                                                               
SAMWEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMCLOSE -- Routine to close a Samson file.                                  
*                                                                               
*    On entry:                                                                  
*      FFINFO dsect contains information about the file.                        
*                                                                               
SAMCLOSE XPROC                                                                  
         L     R6,CPDEVP           SAMWA ptr                                    
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*-                                                                              
*-       Fast ftp style close.                                                  
*-                                                                              
         IF    SAMFFAST,BEGIN      Fast ftp style...                            
         LCALL SNETCLS                                                          
         END                                                                    
*-                                                                              
*-       Write final write data packet (if write).                              
*-                                                                              
         ELSE  BEGIN               Regular style...                             
         IF    SAMFOPEN,BEGIN      File is open...                              
         IF    ^SAMFWRITE,EXIT     Not writing, scram                           
*                                                                               
         IF    SAMFWEOL,BEGIN      End of line terminator needed...             
         SET   SAMFCTRL                                                         
         SEG   '\;'                Always end with a HARD CR                    
         CLEAR SAMFCTRL                                                         
         CLEAR SAMFWEOL+SAMFWTXT   Clear eol flags                              
*                                                                               
         IF    (SAMSGLENF,GT,CPSAMBUFF),BEGIN  Write the packet...              
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
         END                                                                    
         END                                                                    
*                                                                               
         IF    (SAMSGLENF,Z),'ACALL SEGHEAD'  Packet header                     
*                                                                               
         ACALL SEGEOD              End of file                                  
*                                                                               
         ACALL SEGTRAIL            Write packet trailer                         
         SEGWR                                                                  
         END                                                                    
         END                                                                    
*-                                                                              
*-       Send path close packet.                                                
*-                                                                              
         CLEAR SAMFOPEN            File is closed                               
*                                                                               
         MVC   SAMSCMD,=C'PC'      Path close                                   
         ACALL SEGHEAD             Seg packet header                            
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*-                                                                              
*-       Release SAMWA if possible.                                             
*-                                                                              
         MVC   SAMWA(3),=C'OSM'    Invalidate SAMWA                             
         CLEAR CPDEVP                                                           
         VCALL MARKHEAP            Get current heap ptr                         
         IF    (R15,EQ,SAMNHEAP),BEGIN  We can reduce the heap...               
         L     R15,SAMOHEAP                                                     
         VCALL RELHEAP             Release SAMWA                                
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMDIALG -- Routine to send a Samson dialog packet and                       
*    return the reply.                                                          
*                                                                               
*    On entry:                                                                  
*       @R1 - SAMDPARM ptr                                                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*       0 - OK;      R1,R0 - returned data loc, len                             
*      nz - trouble; R1,R0 - error message                                      
*                                                                               
SAMDPWA  RECORD BEGIN                                                           
SAMDPTYP DS    2A                  Type text len, loc                           
SAMDPMSG DS    2A                  Message text len, loc                        
SAMDPPRM DS    2A                  Prompt text len, loc                         
SAMDPOPT DS    2A                  Option text len, loc                         
SAMDPRCD DS    2A                  Return code area len, loc                    
SAMDPRTX DS    2A                  Return text area len, len                    
SAMDPARM EQU   SAMDPTYP,*-SAMDPTYP,C'X'                                         
*                                                                               
SAMDXRC  DS    2A                  Actual return code ptrs                      
SAMDXRT  DS    2A                  Actual return text ptrs                      
         END                                                                    
*-                                                                              
SAMDIALG XPROC SAMDPWA                                                          
         LA    R5,SAMDPWA                                                       
         USING SAMDPWA,R5                                                       
         CLEAR SAMDPWA                                                          
*                                                                               
         MVC   SAMDPARM,@R1        Save parameters                              
*-                                                                              
*-       Must be at least dialog version 2.                                     
*-                                                                              
         IF    (CPSAMDV,LT,2),BEGIN  Non-samson or early Samson...              
         SETMSG 'NOT SUPPORTED'                                                 
         LA    R15,1                                                            
         B     SAMDIXIT                                                         
         END                                                                    
*-                                                                              
*-       Format a Samson dialog request.                                        
*-                                                                              
         VCALL MARKHEAP            Get current heap ptr                         
         LR    R2,R15                                                           
*                                                                               
         LH    R0,=AL2(L'SAMWA)                                                 
         VCALL GETHEAP             Get work area                                
         ST    R1,CPDEVP                                                        
         LR    R6,R1                                                            
         WITH  (SAMWA,R6)                                                       
         CLEAR SAMCLEAR                                                         
         MVC   SAMWA(3),=C'SAM'    Id                                           
*                                                                               
         ST    R2,SAMOHEAP         Save old heap ptr                            
         VCALL MARKHEAP            Get current heap ptr                         
         ST    R15,SAMNHEAP        Save new heap ptr                            
*                                                                               
         SEGINIT SAMWRBUF,,SAMSG,RTN=SAMSEG                                     
*                                                                               
         LA    R1,SAMWA                                                         
         AH    R1,=AL2(SAMINBUF-SAMWA)                                          
         LH    R0,=AL2(L'SAMINBUF)                                              
         SEGINIT (R1),(R0),.SAMINSG  Initialize input seg buffer                
*-                                                                              
*-       Send dialog parameters.                                                
*-                                                                              
         MVC   SAMSCMD,=C'DP'      Dialog parameters                            
*-                                                                              
*-       Version 1 CRC calculation was not correct, so we can not               
*-         request it.                                                          
*-                                                                              
         IF    (CPSAMPRO,LT,2),BEGIN  No CRC in version 1...                    
         CLEAR CPSAMFPCK           Version 1 can not do packed                  
         CLEAR CPSAMFCRC           Version 1 can not do CRC                     
         END                                                                    
*                                                                               
         ACALL SEGHEAD             Seg packet header                            
*                                                                               
         SEG   'TYPE='                                                          
         LM    R0,R1,SAMDPTYP      Dialog type                                  
         SEG   (R1),(R0)                                                        
         ACALL SEGSEP                                                           
*                                                                               
         SEG   'MESSAGE='                                                       
         LM    R0,R1,SAMDPMSG      Message text                                 
         SEG   (R1),(R0)                                                        
         ACALL SEGSEP                                                           
*                                                                               
         SEG   'PROMPT='                                                        
         LM    R0,R1,SAMDPPRM      Prompt text                                  
         SEG   (R1),(R0)                                                        
         ACALL SEGSEP                                                           
*                                                                               
         SEG   'OPTIONS='                                                       
         LM    R0,R1,SAMDPOPT      Options text                                 
         SEG   (R1),(R0)                                                        
         ACALL SEGSEP                                                           
*                                                                               
         ACALL SEGEOD                                                           
         ACALL SEGTRAIL            Seg packet trailer                           
         SEGWR                                                                  
*-                                                                              
*-       Process response.                                                      
*-                                                                              
         IF    (SAMRDLEN,NZ),BEGIN  Process response...                         
         LOOP  BEGIN                                                            
         ACALL INLINE              Get enviornment options                      
         IF    NZ,EXIT             Nothing left, scram                          
*                                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  SAMDIPRT            Process dialog info returned                 
         CLEAR R15                 Ignore errors                                
         END                                                                    
         END                                                                    
*                                                                               
         LA    R15,2               Assume error                                 
         LM    R0,R1,SAMDXRC       Error code string ptr                        
*                                                                               
         IF    ((R0,EQ,2),AND,(@R1,EQ,'OK')),BEGIN                              
         CLEAR R15                 A-ok                                         
         LM    R0,R1,SAMDXRT       Return code text ptr                         
         END                                                                    
*                                                                               
         B     SAMDIXIT            Return                                       
*                                                                               
*                                                                               
SAMDIXIT PRETURN (R0,R1)           Return string ptrs                           
         PEND                                                                   
*-                                                                              
*-       Returned DIALOG information.                                           
*-                                                                              
SAMDIPRT SCKW  RC,SAMDIRC                                                       
         SCKW  TEXT,SAMDITX                                                     
         SCKW  ,V(SCNNOOP)                                                      
*                                                                               
*                                                                               
SAMDIRC  PROC                                                                   
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
         LM    R2,R3,SAMDPRCD      Return code area                             
         LR    R15,R0                                                           
         CEIL  R15,R2                                                           
         MOVE  R15,@R3,@R1         Save return code text                        
         LR    R1,R3                                                            
         STM   R0,R1,SAMDXRC       Save return code ptrs                        
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
SAMDITX  PROC  ,                                                                
         SCINFO                                                                 
         ACALL SAMTRIM                                                          
         LM    R2,R3,SAMDPRTX      Return code area                             
         LR    R15,R0                                                           
         CEIL  R15,R2                                                           
         MOVE  R15,@R3,@R1         Save return code text                        
         LR    R1,R3                                                            
         STM   R0,R1,SAMDXRT       Save return code ptrs                        
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
         DROP  R5                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMECHO -- Routine to send a Samson echo packet and return                   
*    the reply.                                                                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - location, length of text to send (in ASCII)                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*       0 - OK; R1,R0 - returned data loc, len                                  
*      nz - trouble                                                             
*                                                                               
SECHWA   RECORD BEGIN                                                           
SECHTRM  DS    XL(L'CPTRM)         Saved CPTRM flags                            
         END                                                                    
*-                                                                              
SAMECHO  XPROC SECHWA                                                           
         LR    R5,R1               Data loc ptr                                 
         LR    R4,R0               Data len                                     
*                                                                               
         TCLEAR                                                                 
         MVC   SECHTRM,CPTRM       Save terminal I/O options                    
         CLEAR CPTRM               Set our options                              
         SET   CPFTRAN,CPFNMOD,CPFNONL,CPFNTYPE                                 
         SET   CPFCLEAN,CPFNECHO,CPFNPAU                                        
         MVC   CPTRMIN,=H'256'     Maximum amount of terminal input             
*-                                                                              
*-       Try to send the echo packet and get the response.                      
*-                                                                              
         LA    R3,3                Maximum loop count                           
         WHILE (R3,POS),BEGIN      Retry 3 times...                             
         TSEG  X'1B5C5C4545'       Echo packet (<esc>\\EE)                      
*                                                                               
         TSEG  (R5),(R4)           Echo data                                    
         TSEG  X'0D'               End of packet (CR)                           
         TMARK                                                                  
*                                                                               
         CLEAR R15                 Output buffer                                
         SETMSG L:CPSEGLOC,L:CPSEGLENF  Output packet                           
         ACALL SAMTRC              Save buffer for trace                        
*-                                                                              
*-       Get echo response.                                                     
*-                                                                              
         TREAD TIMEOUT=1000        Read and timeout in 10 secs                  
         BM    SECHEXIT            Trouble, scram                               
*                                                                               
         XPUSH R15,R1                                                           
         LA    R15,1               Input buffer                                 
         ACALL SAMTRC              Save buffer for trace                        
         XPOP  R15,R1                                                           
*                                                                               
         IF    (R0,GE,6),BEGIN     Long enough to be valid...                   
         NC    @R1(5),=5X'7F'      Turn of MSB                                  
         IF    (@R1,EQ,=X'1B5C5C4545'),SECHRESP  We have a response             
         END                                                                    
*                                                                               
         DECR  R3                  Countdown retries                            
         END                                                                    
*                                                                               
         CLEAR R0,R1               Nothing                                      
         LA    R15,999             Couldn't get a response RC                   
         B     SECHEXIT            Scram                                        
*-                                                                              
*-       Check echo response.                                                   
*-                                                                              
SECHRESP LA    R1,@R1+5            Skip over "<esc>\\EE"                        
         SH    R0,=H'5'            Keep length accurate                         
         IF    POS,'DECR R0'       Take off trailing CR                         
*                                                                               
SECHEXIT MVC   CPTRM,SECHTRM       Restore terminal I/O opts                    
         PRETURN (R0,R1)           Return echoed data ptrs                      
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*  RESOLVE SAMSON NAME                                                          
*                                                                               
*  PROCESS FILE NAME IN FFNAME IN FFINFO DSECT                                  
*  WE HAVE A FEW SIMPLE RULES (COMPARED TO IBM FILES):                          
*    IF QUOTED, WE UNQUOTE.                                                     
*    IF '*', WE EXPAND.                                                         
*    IF VOLUME NAME IN FFHOST, PREPEND TO FILE NAME.                            
*                                                                               
*  NOTE:                                                                        
*  CANONICAL FILE SAMSON FILE NAME INCLUDES <VOL>: PREFIX.                      
*                                                                               
*  NOTE/CAUTION:                                                                
*  'C:*' AND '* ON C' ARE NOT VALID FILE NAMES.                                 
*                                                                               
SMRWA    RECORD BEGIN                                                           
SMRNAME  DS    XL(L'FFHOST+L'FFNAME+16)                                         
         END                                                                    
*                                                                               
*                                                                               
SAMRESLV XPROC SMRWA                                                            
         LR    R6,R1                                                            
         WITH  (FFINFO,R6)                                                      
*                                                                               
         COMMENT                   NORMAL RESOLVED NAME IS FNAME                
         L     R2,FFNAMEL                                                       
         ST    R2,FFRNAMEL                                                      
         MOVE  R2,FFRNAME,FFNAME                                                
*                                                                               
         COMMENT                   IF VOLUME, PREPEND                           
         COMMENT ,                  (E.G. C:FILENAME)                           
         IF    (FFHOSTL,NZ),BEGIN                                               
         LA    R1,SMRNAME          BUILD NAME IN SMRNAME                        
         L     R2,FFHOSTL                                                       
         MOVE  R2,@R1,FFHOST                                                    
         A     R1,FFHOSTL                                                       
         MVI   @R1,C':'                                                         
         INCR  R1                                                               
         L     R2,FFNAMEL                                                       
         MOVE  R2,@R1,FFNAME                                                    
         L     R2,FFHOSTL          CALC NEW NAME LENGTH                         
         A     R2,FFNAMEL                                                       
         INCR  R2                                                               
         CEIL  R2,L'FFRNAME                                                     
         ST    R2,FFRNAMEL         MOVE NAME INTO FFRNAME                       
         MOVE  R2,FFRNAME,SMRNAME                                               
         END                                                                    
*                                                                               
         COMMENT                   IF *, EXPAND FILE NAME, AND                  
         COMMENT                     HOST NAME TOO IF NEEDED                    
         SETMSG FFNAME,L:FFNAMEL                                                
         IF    ((R0,EQ,1),AND,(@R1,EQ,'*')),BEGIN                               
         L     R2,FFPNAMEL                                                      
         ST    R2,FFRNAMEL                                                      
         MOVE  R2,FFRNAME,FFPNAME                                               
         END                                                                    
*                                                                               
         COMMENT                   IF QUOTED                                    
         SETMSG FFNAME,L:FFNAMEL                                                
         IF    (R0,POS),BEGIN                                                   
         IF    ((@R1,EQ,''''),OR,(@R1,EQ,'"')),BEGIN                            
         INCR  R1                                                               
         DECR  R0                                                               
         DECR  R0                                                               
         ST    R0,FFRNAMEL                                                      
         LR    R2,R0                                                            
         MOVE  R2,FFRNAME,@R1                                                   
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*                                                                               
*  SET FNAME                                                                    
*                                                                               
*  USE RESOLVED FILE NAME. SET VALUE IN SAMWA DSECT.                            
*                                                                               
*  NOTE/CAUTION !                                                               
*  SET FNAME USES RESOLVED FORM OF SAM FILE NAME SO                             
*  NAME RESOLVE MUST BE CALLED PRIOR TO THIS CALL.                              
*  WOULD IT NOT BE BETTER JUST TO ISSUE NRESOLVE CALL                           
*  FROM THIS ROUTINE.  BE BETTER TO BUNDLE THEM UP                              
*  TOGETHER. ??                                                                 
*                                                                               
*                                                                               
SETFNAME PROC                                                                   
         L     R6,CPFINFOP                                                      
         WITH  (FFINFO,R6)                                                      
         L     R5,CPDEVP                                                        
         WITH  (SAMWA,R5)                                                       
*                                                                               
         L     R2,FFRNAMEL                                                      
         ST    R2,SAMFNAMEL                                                     
         MOVE  R2,SAMFNAME,FFRNAME                                              
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SNETOPEN -- Routine to open a fast ftp network connection.                   
*    Called from SAMOPEN.                                                       
*                                                                               
SNETOPEN PROC                                                                   
         WITH  (SAMWA,R6)          Entry assumption                             
*                                                                               
         LA    R15,2                                                            
         SETMSG '[Opening direct TCP connection.]'                              
         ACALL SAMTRC              Save buffer for trace                        
*                                                                               
         CLEAR R0                  User UNET                                    
         VCALL NPATALLO            Allocate network path                        
         BNZ   SNOPNERR            Trouble, scram                               
         ST    R1,SAMUNET          Save UNET ptr                                
*                                                                               
         LR    R5,R1                                                            
         WITH  (UNET,R5)                                                        
         MVC   UNETRNAME,SAMRNAME  Set remote host IP addr                      
         LA    R15,UNET                                                         
         VCALL NPATOPEN            Passive open of network path                 
         BNZ   SNOPNERR            Trouble, scram                               
*-                                                                              
*-       Initialize encryption information.                                     
*-                                                                              
         IF    (SAMSEED,NZ),BEGIN  Do encryption...                             
         IF    CPGFSAMNFTPCRYPT,EXIT  Skip crypt, even if requested             
*                                                                               
         LA    R1,SAMSEED                                                       
         LA    R2,UNETINCRYPT                                                   
         VCALL SETSCKEY            Initialize input encryption                  
*                                                                               
         LA    R1,SAMSEED                                                       
         LA    R2,UNETOUTCRYPT                                                  
         VCALL SETSCKEY            Initialize output encryption                 
*                                                                               
         SET   UNETFCRYPT          Encryption/decryption now needed             
         END                                                                    
*-                                                                              
*-       Set appropriate NPATREAD options based on our options.                 
*-                                                                              
         IF    SAMFASCII8,'SET UNETFASCII8'  Set corresponding flag             
         IF    (SAMFTABS,OR,SAMFUFMT),'SET UNETFKEEPTABS'                       
*-                                                                              
*-       Set flag to check for (or send) the SAMDATA: header.                   
*-                                                                              
         SET   SAMFNETHDR          "SAMDATA:" header needed                     
*-                                                                              
*-       For READ TRANSPARENT the checking is done in the NPAT                  
*-         routine (hence the flag UNETFSAMDATA is set).                        
*-                                                                              
         IF    (SAMSCMD,EQ,'R'),BEGIN  Read...                                  
         IF    SAMFTRAN,BEGIN      Read transparent...                          
         CLEAR SAMFNETHDR                                                       
         SET   UNETFSAMDATA        Have low level routines check                
         END                                                                    
         END                                                                    
*-                                                                              
*-       Now send control packet to get Samson to read/write from               
*-         the separate TCP path.                                               
*-                                                                              
         MVI   SAMSCMD+1,C'C'      Read/write control                           
         ACALL SEGHEAD                                                          
         SEG   'IPADDR='                                                        
         SEGDC LC:UNETLIP          Our IP address                               
         SEG   '.'                                                              
         SEGDC LC:UNETLIP+1                                                     
         SEG   '.'                                                              
         SEGDC LC:UNETLIP+2                                                     
         SEG   '.'                                                              
         SEGDC LC:UNETLIP+3                                                     
         SEG   ','                                                              
         SEGDC L:UNETLPORT         Our port number                              
*                                                                               
         IF    UNETFCRYPT,'ACALL SEGSEP; SEG "CRYPT=1"'  Encryption             
*                                                                               
         ACALL SEGEOD              End of parameters                            
*                                                                               
         ACALL SEGTRAIL            Seg packet trailer                           
         SET   SAMFERET            Return even if error                         
         SEGWR                                                                  
         CLEAR SAMFERET            Reset error trapping                         
         IF    SAMFERC,BEGIN       Open error...                                
*                                                                               
* Don't close the path here. That sets up a failsoft when the EXT               
* module closes the path due to the open error.                                 
* (EXTOPEN->EXTCLOSE->SAMCLOSE->SNETCLS).                                       
*                                                                               
*        LA    R15,UNET                                                         
*        VCALL NPATCLS             Close network path                           
         LA    R15,4               Open error                                   
         B     SNOPEXIT            Scram                                        
         END                                                                    
*-                                                                              
*-       Wait for Samson to actually open the TCP connection.                   
*-                                                                              
         LA    R1,UNETSFOPEN       Wait for other side to open                  
         LA    R15,UNET                                                         
         VCALL NPATWAIT            Wait for open completion                     
         BNZ   SNOPNERR            Trouble, scram                               
*                                                                               
         MVC   SAMSCMD,=C'XX'      Safety -- force error                        
         CLEAR R15                 A-ok                                         
         B     SNOPEXIT                                                         
*-                                                                              
*-       Network error opening direct TCP connection.                           
*-                                                                              
SNOPNERR CLEAR SAMFFAST            Reset fast mode flag                         
         XPUSH R0,R1                                                            
         TSEG  'Samson error opening network fast file transfer '               
         TSEG  'connection ('                                                   
         XPOP  R0,R1                                                            
         TSEG  (R1),(R0)                                                        
         TSEG  ').',,CR                                                         
         B     CVABORT                                                          
*                                                                               
SNOPEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SNETREAD -- Routine to read the next line from the fast ftp                  
*    network connection.  Called from SAMREAD.                                  
*                                                                               
*    On entry:                                                                  
*      DEVICE work area contains information about the file.                    
*                                                                               
*    On exit, R15 (and cc):                                                     
*      R15=ZERO - address of pressed line (before lineno)                       
*      R15=NZ - end of file                                                     
*                                                                               
SNETREAD PROC                                                                   
         WITH  (SAMWA,R6)          Entry assumption                             
*-                                                                              
*-       For read operations send an end of file on our side                    
*-         right away (this makes cleanup a little faster                       
*-         and clues AMELIA in that we won't be sending any data;               
*-         so Amelia need not delay it's ACKs of incoming data.                 
*-                                                                              
         L     R5,SAMUNET                                                       
         WITH  (UNET,R5),BEGIN                                                  
         IF    ^UNETFOUTEOF,BEGIN  Send our end of file...                      
         LA    R1,=C'EOF'          Normal end of file                           
         LA    R15,UNET                                                         
         VCALL NPATCTRL            Send it                                      
         END                                                                    
         END                                                                    
*-                                                                              
*-       Get the next line.                                                     
*-                                                                              
NETRLOOP LOOP  BEGIN                                                            
         CLEAR R0                  0 = EBCDIC mode                              
         IF    SAMFASCII,'LA R0,1'  1 = ASCII mode                              
         L     R15,SAMUNET                                                      
         L     RAR,=V(NPATREAD)    Regular text mode                            
         IF    SAMFTRAN,'L RAR,=V(NPATXRD)'  Transparent                        
         BASR  RAR,RAR             Get the next line                            
         IF    (R15,Z),EXIT        We have the line, scram                      
*-                                                                              
*-       Normal end of file.                                                    
*-                                                                              
         IF    (@R1,EQ,'END OF FILE'),BEGIN  End of file...                     
         LA    R15,4                                                            
         B     NETREXIT                                                         
         END                                                                    
*-                                                                              
*-       Network error of some sort.                                            
*-                                                                              
         XPUSH R0,R1                                                            
         TSEG  'Network error while reading -- '                                
         XPOP  R0,R1                                                            
         TSEG  (R1),(R0),WR                                                     
         LA    R15,4                                                            
         B     NETREXIT                                                         
         END                                                                    
*-                                                                              
*-       The data sent via the direct TCP connection begins                     
*-         with the text "SAMDATA:" (provides a simple validity                 
*-         check).                                                              
*-                                                                              
         IF    SAMFNETHDR,BEGIN    Check for Samson header...                   
         IF    ((R0,LT,8),OR,(@R1,NE,'SAMDATA:')),BEGIN                         
         TSEG  'Network file transfer error, '                                  
         TSEG  'Samson protocol data header is missing.',,WR                    
         LA    R15,4                                                            
         B     NETREXIT                                                         
         END                                                                    
*                                                                               
         LA    R1,@R1+8            Skip past header                             
         SH    R0,=H'8'                                                         
         CLEAR SAMFNETHDR                                                       
         END                                                                    
*-                                                                              
*-       Do formatting character expansion for APPLEASCII data.                 
*-                                                                              
         IF    SAMFASCII8,BEGIN    Appleascii...                                
         IF    SAMFTRAN,EXIT       Transparent, don't do anything               
         IF    SAMFUFMT,EXIT       Unformatted, don't do anything               
         SETMSG (R1),(R0)                                                       
         LA    R2,2                Use APPLEASCII table                         
         IF    SAMFTEXTONLY,'LCR R2,R2'  We want TEXTONLY form                  
         LH    R15,=AL2(UNETBUF#-32)  Maximum line size                         
         VCALL FORMATL             Format special characters                    
         END                                                                    
*-                                                                              
*-       Return line to caller                                                  
*-                                                                              
         L      R2,SAMLNO                                                       
         A      R2,CPDELTA                                                      
         ST     R2,SAMLNO         New lineno                                    
         CLEAR  R15               Return pressed line ptr                       
*                                                                               
NETREXIT LABEL  ,                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SNETWR -- Routine to write the next line to the fast ftp                     
*    network connection.  Called from SAMWRITE.                                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - line location, length                                            
*      FFINFO dsect contains information about the file.                        
*                                                                               
*    Only returns if ok.                                                        
*                                                                               
SNETWR   PROC                                                                   
         WITH  (SAMWA,R6)          Entry assumption                             
*                                                                               
         L     R5,SAMUNET                                                       
         WITH  (UNET,R5)                                                        
         SEGDEF UNETOUTSG          Network output SEGCB                         
*-                                                                              
*-       The data sent via the direct TCP connection must begin                 
*-         with the text "SAMDATA:" (provides a simple validity                 
*-         check).                                                              
*-                                                                              
         IF    SAMFNETHDR,BEGIN    Start data with network header...            
         XPUSH R0,R1                                                            
         SEG   'SAMDATA:'          Add header first                             
         CLEAR SAMFNETHDR                                                       
         XPOP  R0,R1                                                            
         END                                                                    
*-                                                                              
*-       Add the new data line to the seg buffer.  The seg                      
*-         routines will automatically write the buffer if                      
*-         it overflows.                                                        
*-                                                                              
         IF    ^SAMFTRAN,BEGIN     Normal text mode...                          
         SEG   (R1),(R0)           Write line                                   
         SEG   X'0D'               CR                                           
         END                                                                    
*-                                                                              
*-       Transparent write data.                                                
*-                                                                              
         ELSE  BEGIN               Transparent mode...                          
         LR    R15,R1              R1 = first character on line                 
         AR    R15,R0                                                           
         DECR  R15                 R15 = last character on line                 
         IF    ((R0,LT,2),OR,                                          *        
               ('CLC @R1(1),@R15',NE),OR,                              *        
               ((@R1,NE,'|'),AND,(@R1,NE,'@'))),BEGIN                           
         TSEG  'Line '                                                          
         L     R0,CPLCNO                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         SETMSG ' is not valid TRANSPARENT data.'                               
         IF    ((@R4,EQ,'-'),OR,(@R4,EQ,X'2D')),BEGIN                           
         TSEG  ' has Macintosh transparent data which can not '                 
         SETMSG 'be saved over the net.'                                        
         END                                                                    
         TSEG  (R1),(R0),CR                                                     
         ABORT 'SAVE command incomplete.'                                       
         END                                                                    
*-                                                                              
*-       If the first character is an "@" then the data is in ASCII,            
*-         and if the first character is a "|" then it is in EBCDIC.            
*-                                                                              
         IF    (@R1,EQ,'|'),BEGIN  ASCII...                                     
         VCALL TOASCII             If EBCDIC, convert to ASCII                  
         END                                                                    
*                                                                               
         SET   UNETFNOXL           Don't translate data                         
         SH    R0,=H'2'            Deduct len of guard chars                    
         SEG   @R1+1,(R0)          Write line w/o translation                   
         CLEAR UNETFNOXL           Reset                                        
         END                                                                    
*-                                                                              
*-       Ask the user if he wants to stop if ATTN has been pressed.             
*-                                                                              
         L     R5,CVCURJCB                                                      
         WITH  (JCB,R5),BEGIN                                                   
         IF    JCBFATTN,BEGIN      Attn received...                             
         CLEAR JCBFATTN            Reset ATTN flag                              
*-                                                                              
*-       Our message will erase the "(xxx lines written)" status                
*-         message, so we reset the flag saying a status message                
*-         has been written.                                                    
*-                                                                              
         CLEAR CPFSTMSG            Turn off status message flag                 
*-                                                                              
*-       Write out our own message.                                             
*-                                                                              
         TNUM  L:DSNLCNT           Current number of lines                      
         IF    (DSNLTOT,NZ),BEGIN  Give total line count too...                 
         TSEG  ' of '                                                           
         TNUM  L:DSNLTOT                                                        
         END                                                                    
         TSEG  ' lines have been written so far.'                               
         TSEG  CVBLANKS,20,CR      (Extra padding erases old msg)               
*                                                                               
         SETMSG 'Do you want to continue saving this file'                      
         VCALL YESNO               We want a YES or a NO                        
         IF    Z,EXIT              Yes, scram                                   
*                                                                               
         TSEG  'File transfer stopped, your file is only '                      
         ABORT 'partially saved.'                                               
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SNETCLS -- Routine to close a fast ftp network connection.                   
*                                                                               
*    On entry:                                                                  
*      FFINFO dsect contains information about the file.                        
*                                                                               
SNETCLS  PROC                                                                   
         WITH  (SAMWA,R6)          Entry assumption                             
*-                                                                              
*-       Close any data connection.                                             
*-                                                                              
         IF    ('LT R5,SAMUNET',NZ),BEGIN  Data connection...                   
         WITH  (UNET,R5)                                                        
*                                                                               
         LA    R15,2                                                            
         SETMSG '[Closing direct TCP connection.]'                              
         ACALL SAMTRC              Save buffer for trace                        
*-                                                                              
*-       Send an end of file now if necessary.                                  
*-                                                                              
         IF    (UNETFOUTEOF+UNETFOUTABORT,Z),BEGIN  Still active...             
         IF    SAMFWRITE,BEGIN     Write last buffer...                         
         IF    (UNETOUTSGLENF,NZ),'SEGWR ,,UNETOUTSG'  Write buffer             
         END                                                                    
         SEGCLR ,UNETOUTSG         (Neatness)                                   
*                                                                               
         LA    R1,=C'EOF'          Normal end of file                           
         LA    R15,UNET                                                         
         VCALL NPATCTRL            Send our end of file                         
         END                                                                    
*-                                                                              
*-       Wait for an end of file from the remote host.                          
*-                                                                              
         IF    ^UNETFINEOF,BEGIN   Wait for remote end of file...               
         CLEAR R0                  No timeout                                   
         LA    R1,UNETSFDATA       Wait for abort or close                      
         LA    R15,UNET                                                         
         VCALL NPATWAIT            Wait for close                               
         IF    NZ,BEGIN            Screwy error...                              
         XPUSH R0,R1                                                            
         TSEG  'Samson fast ftp error: '                                        
         XPOP  R0,R1                                                            
         TSEG  (R1),(R0),WR                                                     
         END                                                                    
         END                                                                    
*-                                                                              
*-       Close and free the data connection.                                    
*-                                                                              
         LA    R15,UNET                                                         
         VCALL NPATCLS             Close and free data path                     
*-                                                                              
*-       Now send the read/write status request.                                
*-                                                                              
         MVC   SAMSCMD,=C'RS'      Assume "read status" packet                  
         IF    (CPCMNM,EQ,'SAV'),'MVC SAMSCMD,=C"WS"'  It's write               
         SEGCLR SAMSG              No options                                   
         ACALL SEGHEAD                                                          
         ACALL SEGTRAIL            Read/write status packet                     
         SEGWR                                                                  
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SEGHEAD -- Local routine to seg the Samson packet header.                    
*                                                                               
SEGHEAD  PROC                                                                   
         WITH  (SAMWA,R6)          (Entry assumption)                           
         SEGDEF SAMSG                                                           
*                                                                               
         SEGCLR                                                                 
*                                                                               
         SEG   X'27'               [ESC]                                        
         SEG   '\\SS'              Start of packet                              
*                                                                               
         SEGHX LH:SAMSSEQ,1        Sequence number                              
         SEGHX LC:CPSAMCOD,1       Encoding                                     
         SEG   SAMSCMD             Command/option                               
*                                                                               
         SEGHX LH:SAMSSEQ,1        Duplicate...                                 
         SEGHX LC:CPSAMCOD,1       ...header                                    
         SEG   SAMSCMD             ...information                               
*                                                                               
         SEG   ':'                 End of header                                
*                                                                               
         SET   SAMFDATA            Packet data follows                          
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SEGSEP -- Local routine to add a line separator to the packet.               
*                                                                               
SEGSEP   PROC                                                                   
         WITH  (SAMWA,R6)          (Entry assumption)                           
*                                                                               
         SET   SAMFCTRL                                                         
         SEG   '\;'                                                             
         CLEAR SAMFCTRL                                                         
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  SEGEOD -- Local routine to add a logical end of data to the                  
*    packet.                                                                    
*                                                                               
SEGEOD   PROC                                                                   
         WITH  (SAMWA,R6)          (Entry assumption)                           
*                                                                               
         SET   SAMFCTRL                                                         
         SEG   '\.'                                                             
         CLEAR SAMFCTRL                                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SEGTRAIL -- Local routine to seg the Samson packet trailer.                  
*                                                                               
SEGTRAIL PROC                                                                   
         WITH  (SAMWA,R6)          (Entry assumption)                           
*                                                                               
         CLEAR SAMFDATA            No longer in data mode                       
*                                                                               
         SEG   '\:'                Packet trailer                               
*                                                                               
         SEGHX L:SAMSGDL,2         Data length (low byte only)                  
*                                                                               
         L     R15,SAMSGSUM        Checksum/CRC                                 
         IF    CPSAMFCKS,'SEGHX (R15),2'  One byte checksum                     
         ELSEIF CPSAMFCRC,'SEGHX (R15),4'  Two byte CRC                         
*                                                                               
         SEG   X'0D'               CR                                           
         PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SAMSEG -- Local routine to write the SAMWA seg buffer as a                   
*    Samson packet.                                                             
*                                                                               
*    On entry:                                                                  
*      R15 - SEGCB ptr                                                          
*                                                                               
SSGWA    RECORD BEGIN                                                           
SSGFLAG  FLAG                                                                   
         FLAG  SSGFQUIET           - It was QUIET mode                          
*                                                                               
SSGTMOUT DS    F                   Timeout value (for read packet)              
*                                                                               
SSGCB    SEGCB ,                   Saved CPSEG                                  
*                                                                               
SSGTRM   DS    XL(L'CPTRM)         Saved CPTRM flags                            
         END                                                                    
*-                                                                              
SAMSEG   PROC  (R2,LSR),SSGWA                                                   
         CLEAR SSGWA                                                            
*                                                                               
         L     R6,CPDEVP                                                        
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
         SEGDEF SAMSG              (General default)                            
*                                                                               
         LR    R5,R15              SEGCB ptr                                    
         WITH  (SEGCB,R5)                                                       
***                                                                             
***  SEG                                                                        
***                                                                             
         IF    SEGCBSEG,BEGIN      SEG...                                       
         IF    ^SAMFSGTRAN,BEGIN   Translate to ASCII...                        
         FAIL  (R0,GT,L'SAMWKBUF),SAMERR2,'Samson interface error.'             
*                                                                               
         LR    R4,R0               Save text length                             
         MOVEL SAMWKBUF,@R1,(R4)   Copy text                                    
*-                                                                              
*-       First translate to ASCII.                                              
*-                                                                              
         SETMSG SAMWKBUF,(R4)                                                   
         ACALL OUTTRAN             Translate to ASCII                           
         END                                                                    
*-                                                                              
*-       If it's packet data, do the required encoding.                         
*-                                                                              
         IF    SAMFDATA,BEGIN      Packet data...                               
         IF    ^SAMFCTRL,BEGIN     Compress non-control data...                 
         IF    CPSAMF7BIT,'ACALL OUT7BIT'  7-bit format                         
         ELSEIF CPSAMFPCK,'ACALL OUTPACK'  Packed format                        
         ELSEIF CPSAMFHEX,'ACALL OUTHEX'  Hex format                            
         ELSE  'ACALL OUTDATA'     Standard data format                         
         END                                                                    
*-                                                                              
*-       Calculate checksum/CRC for packet data.                                
*-                                                                              
         L     R15,SAMSGDL                                                      
         AR    R15,R0                                                           
         ST    R15,SAMSGDL         Keep data length accurate                    
*                                                                               
         L     R15,SAMSGSUM                                                     
         IF    CPSAMFCKS,'ACALL CHECKSUM'  Calc checksum                        
         ELSEIF CPSAMFCRC,'ACALL CHECKCRC'  Calc CRC                            
         ST    R15,SAMSGSUM        Save new checksum/CRC                        
         END                                                                    
*                                                                               
         B     SEGEXIT                                                          
         END                                                                    
***                                                                             
***  SEGWR                                                                      
***                                                                             
         IF    SEGCBWR,BEGIN       SEGWR...                                     
         LH    R15,CPSAMTMO        Get timeout value                            
         MH    R15,=H'100'         Convert to .01 second increments             
         ST    R15,SSGTMOUT        Save timeout value for below                 
         B     SEGSEND                                                          
*-                                                                              
*-       If we are going to resend the last packet, then call                   
*-         INREADY to wait until no more data is being transmitted.             
*-                                                                              
SEGRSEND IF    SAMFNORETRY,BEGIN   No retrying wanted...                        
         LA    R15,4               Bad return code                              
         B     SEGEXIT             Scram                                        
         END                                                                    
*                                                                               
         ACALL INREADY             Wait for input to stop                       
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
SEGSEND  CLEAR R15                 Output buffer                                
         SETMSG L:SEGCBLOC,L:SEGCBLENF  Output packet                           
         ACALL SAMTRC              Save buffer for trace                        
*-                                                                              
*-       Send the Samson packet.                                                
*-                                                                              
         MVC   SSGCB,CPSEG         Save standard seg buffer info                
*                                                                               
         SEGINIT SAMWKBUF,,.CPSEG                                               
         MVC   CPSEGRTN,SSGCBRTN   Set appropriate rtn                          
*                                                                               
         MVC   SSGTRM,CPTRM        Save terminal I/O options                    
         IF    CPFQUIET,'SET SSGFQUIET'  It was QUIET                           
         CLEAR CPTRM               Set our options                              
         CLEAR CPFQUIET            Reset quiet                                  
         SET   CPFTRAN,CPFNMOD,CPFNONL,CPFNTYPE                                 
         SET   CPFCLEAN,CPFNECHO,CPFNPAU                                        
*-                                                                              
*-       Write all of the packet data except the last character,                
*-          the last character of the packet (a CR) will then be                
*-          used as prompt data.                                                
*-                                                                              
*-         The two exceptions are (1) if the amount of data is small            
*-          then write the packet as the prompt data; and (2) if it             
*-          is a high speed connection (speed=0) then write the                 
*-          packet the prompt data (better performance).                        
*-                                                                              
         SETMSG L:SEGCBLOC,L:SEGCBLENF  Packet data                             
*                                                                               
         IF    (R0,GT,64),BEGIN    We have a longish packet...                  
         IF    (CPSAMSPD,Z),EXIT   If network, then write as prompt             
         DECR  R0                  Don't write last byte                        
         LR    R2,R1                                                            
         AR    R2,R0               R2 = addr of last char                       
         TSEG  (R1),(R0),WR        Write all except last byte                   
         BM    CVABORT             Logging off, scram                           
         IF    POS,BEGIN           Write attn...                                
         END                                                                    
*                                                                               
         SETMSG @R2,1               Last character of packet                    
         END                                                                    
*                                                                               
         TSEG  (R1),(R0)           Add packet (or last char)                    
         TMARK                                                                  
*-                                                                              
*-       Read response packet.                                                  
*-                                                                              
SEGSREAD TREAD TIMEOUT=L:SSGTMOUT  Send and wait for response                   
*                                                                               
         MVC   CPSEG,SSGCB         Restore standard seg buffer info             
         MVC   CPTRM,SSGTRM        Restore terminal I/O options too             
         IF    SSGFQUIET,'SET CPFQUIET'  Restore QUIET                          
*                                                                               
         LTR   R2,R15              Test read return code                        
         IF    POS,BEGIN           Something is wrong...                        
         LA    R1,=CL16'ATTN'      Assume attn                                  
         IF    (R15,NEG),'LA R1,=CL16"DISCONNECT"'  Disconnect                  
         IF    (R15,EQ,101),'LA R1,=CL16"TIMEOUT"'  Timed out                   
         ACALL INPRETRY            Do error logging, etc.                       
         IF    (R2,NEG),CVABORT    Always abort if logging off                  
         B     SEGRSEND                                                         
         END                                                                    
*-                                                                              
*-       Process the Samson response packet.                                    
*-                                                                              
         ACALL INPROC              Process response packet                      
         BP    SEGRSEND            Bad stuff, resend packet                     
         IF    NEG,BEGIN           Do another read...                           
*-                                                                              
*-       Continue reading.                                                      
*-                                                                              
         IF    (R15,EQ,-8),'CLEAR SSGTMOUT'  ACK'd, no timeout now              
*                                                                               
         MVC   SSGCB,CPSEG         Save standard seg buffer info                
         SEGINIT SAMWKBUF,,.CPSEG                                               
         MVC   CPSEGRTN,SSGCBRTN   Set appropriate routine                      
         MVC   SSGTRM,CPTRM        Save terminal I/O options                    
         IF    CPFQUIET,'SET SSGFQUIET'  Remember if it was QUIET               
         CLEAR CPTRM               Set our options                              
         SET   CPFTRAN,CPFNMOD,CPFNONL  (Typeahead is OK here)                  
         SET   CPFCLEAN,CPFNECHO,CPFNPAU                                        
         CLEAR CPFQUIET            Reset QUIET                                  
*                                                                               
         B     SEGSREAD            Try reading again                            
         END                                                                    
*-                                                                              
*-       Kick packet sequence number.                                           
*-                                                                              
         LH    R15,SAMSSEQ                                                      
         LA    R15,@R15+1          Kick sequence number                         
         N     R15,=A(X'F')        Modulo 16                                    
         STH   R15,SAMSSEQ         Save new sequence number                     
*-                                                                              
*-       Process error packet.                                                  
*-                                                                              
         IF    (SAMSCMD,NE,SAMRCMD),BEGIN  Received different type...           
         IF    (SAMRCMD,EQ,'P'),BEGIN  Path status packet...                    
         IF    (SAMRCMD+1,EQ,'R'),SEGRSEND  Resend previous                     
*                                                                               
         TCCR                                                                   
         CLEAR R15                                                              
         ACALL INLINE              Get packet text                              
         IF    (R0,GT,8),BEGIN     We have a message...                         
         IF    ('CLC @R1(8),CVBLANKS',NE),'MVC CPERRID,@R1'                     
         LA    R1,@R1+8                                                         
         SH    R0,=H'8'                                                         
         TSEG  (R1),(R0)           Error message                                
         END                                                                    
*                                                                               
         SEGCLR                                                                 
         SET   SAMFERC             An error occurred                            
         IF    (SAMRCMD+1,EQ,'E'),'SET CPFERROR+CPFABORT'                       
         IF    (SAMRCMD+1,EQ,'A'),'SET CPFABORT'                                
         IF    SAMFERET,SEGEXIT    Return to caller                             
         B     CVNEXT              Scram                                        
         END                                                                    
*                                                                               
         SEGCLR                                                                 
         ABORT 'Samson interface error.'                                        
         END                                                                    
         END                                                                    
***                                                                             
***  SEGWR/SEGCLR                                                               
***                                                                             
         IF    (SEGCBWR,OR,SEGCBCLR),BEGIN  SEGWR/SEGCLR...                     
         CLEAR SAMSINIT                                                         
         CLEAR R15                 Assume A-OK                                  
         END                                                                    
*                                                                               
SEGEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INTEXT -- Local routine to get the next "text line" from a                   
*    Samson file.  This routine handles all splitting/wrapping                  
*    lines that are too long.  This routine also handles assembling             
*    lines that are split between multiple packets.                             
*                                                                               
*    On entry:                                                                  
*      SAMWA contains current buffer                                            
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok; R1,R0 - line loc, len                                            
*      4 - end of file                                                          
*                                                                               
INTEXT   PROC                                                                   
         L     R6,CPDEVP                                                        
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*                                                                               
         SEGDEF SAMINSG            Our input seg buffer                         
*-                                                                              
*-       Get the next data buffer if necessary.                                 
*-                                                                              
         IF    (SAMINSGLENF,Z),BEGIN  Get a new buffer...                       
         ACALL INLINE              Get the next line segment                    
         BP    INTXEXIT            End of file, scram                           
*                                                                               
         LR    R5,R15              Save return code                             
*                                                                               
         SEG   (R1),(R0)           Save line (or line segment)                  
*-                                                                              
*-       Handle partial line (continuation lines will follow).                  
*-                                                                              
         WHILE (R5,NEG),BEGIN      Partial line...                              
         IF    (SAMINSGLENF,GT,3500),EXIT  !! TEMP !!                           
         ACALL INLINE              Get the next line segment                    
         LR    R5,R15              Save return code                             
         SEG   (R1),(R0)           Add in next segment                          
         END                                                                    
         END                                                                    
*                                                                               
         SETMSG L:SAMINSGLOC,L:SAMINSGLENF  Current line                        
*-                                                                              
*-       Handle split and wrap here.  Split means split the line at             
*-         length SAMWRAPL and wrap means split the line at the last            
*-         blank before or at SAMWRAPL.                                         
*-                                                                              
         LH    R5,SAMWRAPL         Get WRAP length                              
         IF    (R0,LE,R5),BEGIN    No need to split/wrap...                     
         CLEAR SAMINSGLENF         Reset seg buffer                             
         END                                                                    
*-                                                                              
*-       Do wrap.                                                               
*-                                                                              
         ELSE  BEGIN               Need to split/wrap...                        
         IF    ^SAMFSPLT,BEGIN     Wrap at a blank...                           
         LA    R2,@R1(R5)          Last+1 position                              
         WHILE (R5,POS),BEGIN      Backscan for blank...                        
         IF    (@R2,EQ,' '),EXIT   Got it, scram                                
         DECR  R2                  Back up                                      
         DECR  R5                  One less char now                            
         END                                                                    
         IF    (R5,Z),'LH R5,SAMWRAPL'  If no blanks, use split len             
         END                                                                    
*                                                                               
         LR    R2,R1                                                            
         MOVEL SAMWKBUF,@R2,(R5)   Save our line                                
*                                                                               
         L     R0,SAMINSGLOC       R0 = start of buffer                         
         LR    R2,R0                                                            
         AR    R2,R5               R2 = unprocessed stuff in buffer             
         L     R1,SAMINSGLENF                                                   
         SR    R1,R5               R1 = length of remaining text                
*                                                                               
         IF    ^SAMFSPLT,BEGIN     Handle text after a wrap...                  
         WHILE (R1,POS),BEGIN      Trim leading blanks...                       
         IF    (@R2,NE,' '),EXIT   Stop at non-blank                            
         LA    R2,@R2+1            Next char                                    
         DECR  R1                  One less now                                 
         END                                                                    
         END                                                                    
*                                                                               
         ST    R1,SAMINSGLENF                                                   
         LR    R3,R1                                                            
         MVCL  R0,R2               Move data over                               
*                                                                               
         SETMSG SAMWKBUF,(R5)       This line                                   
         END                                                                    
*                                                                               
         CLEAR R15                 Set A-ok return code                         
*                                                                               
*                                                                               
INTXEXIT PRETURN (R0,R1)           Return data ptrs                             
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
         SEGDEF SAMSG              (General default)                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INTRAN -- Local routine to read the next transparent line from               
*    a Samson file.  (This routine will get another packet if                   
*    necessary.)                                                                
*                                                                               
*    On entry:                                                                  
*      SAMWA contains current buffer                                            
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok; R1,R0 - line loc, len                                            
*      4 - end of file                                                          
*                                                                               
INTWA    RECORD BEGIN                                                           
INTSG    SEGCB ,                   Working segcb                                
*                                                                               
INTEOFC  DS    CL2                 Work area for eof checking                   
INTBUF   DS    CL96                Must be at least 66 chars                    
         END                                                                    
*-                                                                              
INTRAN   PROC  INTWA                                                            
         CLEAR INTWA                                                            
*                                                                               
         L     R6,CPDEVP                                                        
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*                                                                               
         SEGINIT INTBUF,,INTSG                                                  
*-                                                                              
*-       Keep adding data to our "INTBUF" buffer until we have                  
*-         64 bytes.                                                            
*-                                                                              
         WHILE (INTSGLENF,LT,64),BEGIN  More work...                            
         L     R5,SAMINSGLOC       Input buffer ptr                             
         L     R4,SAMINSGLENF      Remaining input buffer length                
         LA    R15,64                                                           
         S     R15,INTSGLENF       Number of bytes we want                      
         CEIL  R4,R15              We only need this much                       
         SEG   (R5),(R4)           Add transparent data                         
*                                                                               
         AR    R5,R4                                                            
         ST    R5,SAMINSGLOC       Kick input buffer ptr                        
         L     R15,SAMINSGLENF                                                  
         SR    R15,R4                                                           
         ST    R15,SAMINSGLENF     Adjust remaining length                      
*-                                                                              
*-       Convert data from read buffer in to unpacked data in                   
*-         input buffer.                                                        
*-                                                                              
         IF    (R15,NP),BEGIN      Nothing left, get more data...               
         IF    (SAMRDLEN,Z),BEGIN  Get a new buffer...                          
         IF    SAMFEOF,INTEOF      We are at the end of file, scram             
*                                                                               
         ACALL SEGHEAD             Send another request packet                  
         ACALL SEGTRAIL                                                         
         SEGWR ,,.SAMSG                                                         
*                                                                               
         IF    (SAMRDLEN,Z),BEGIN  This is odd...                               
         TSEG  'Samson file transfer logic error '                              
         ABORT '(null data packet).'                                            
         END                                                                    
*                                                                               
         L     R5,SAMRDLOC         R5 = read data location                      
         LH    R4,SAMRDLEN         R4 = read data length                        
         IF    (R4,GE,2),BEGIN     Check for "\." eof sequence...               
         LA    R2,@R5(R4)          R2 = end of buffer                           
         SH    R2,=H'2'            Back up two chars                            
         MVC   INTEOFC,@R2                                                      
         NC    INTEOFC,=X'7F7F'                                                 
         IF    (INTEOFC,EQ,X'5C2E'),BEGIN  It's eof if it's "\."...             
         SH    R4,=H'2'            Don't count eof chars in length              
         STH   R4,SAMRDLEN         Save length w/o eof chars                    
         SET   SAMFEOF             Remember we are at eof                       
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         L     R5,SAMRDLOC         R5 = read data location                      
         LH    R4,SAMRDLEN         R4 = read data length                        
*!!TEMP!!CEIL  R4,512              Take a fair sized chunk                      
         LA    R3,SAMWA                                                         
         AH    R3,=AL2(SAMINBUF-SAMWA)  Addr of SAMINBUF                        
         MOVEL @R3,@R5,(R4)        Copy in read buffer text                     
*                                                                               
         LA    R5,@R5(R4)                                                       
         ST    R5,SAMRDLOC         Update current rdloc ptr                     
         LH    R15,SAMRDLEN                                                     
         SR    R15,R4                                                           
         STH   R15,SAMRDLEN        Adjust current rdlen count                   
*-                                                                              
*-       Do the required decoding of the packet data.                           
*-                                                                              
         SETMSG (R3),(R4)           Line work area                              
         IF    SAMRF7BIT,'ACALL IN7BIT'  7-bit format                           
         ELSEIF SAMRFPCK,'ACALL INPACK'  Packed format                          
         ELSEIF SAMRFHEX,'ACALL INHEX'  Hex format                              
         ELSE  'ACALL INDATA'                                                   
         ST    R1,SAMINSGLOC       Save input line...                           
         ST    R0,SAMINSGLENF      ...ptrs                                      
         END                                                                    
         END                                                                    
*-                                                                              
*-       Build the "transparent line" for the caller.                           
*-                                                                              
INTFLIN  L     R5,INTSGLOC                                                      
         L     R4,INTSGLENF                                                     
*                                                                               
         MVI   SAMWKBUF,C'@'       Starting guard character                     
         MVC   SAMWKBUF+1(64),@R5  Copy in transparent line                     
         LA    R2,SAMWKBUF+1(R4)                                                
         MVI   @R2,C'@'            Ending guard character                       
*                                                                               
         SETMSG SAMWKBUF,@R4+2      Returned line loc, len                      
         IF    ^SAMFASCII,'VCALL TOEBCDIC'  Convert to EBCDIC                   
*                                                                               
         PRETURN (R0,R1)           Return data ptrs                             
         CLEAR R15                 A-ok                                         
         B     INTEXIT             Scram                                        
*-                                                                              
*-       End of file reached.                                                   
*-                                                                              
INTEOF   LA    R15,4               Assume eof return code                       
         IF    (INTSGLENF,NZ),INTFLIN  We have some data                        
*                                                                               
INTEXIT  PEND                                                                   
*                                                                               
         SEGDEF SAMSG              (General default)                            
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INLINE -- Local routine to read the next line from a Samson                  
*    file.  (This routine will get another packet if necessary.)                
*                                                                               
*    On entry:                                                                  
*      SAMWA contains current buffer                                            
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok; R1,R0 - line loc, len                                            
*     -4 - R1,R0 - partial loc, len (next line will contain rem)                
*      4 - end of file                                                          
*                                                                               
INLWA    RECORD BEGIN                                                           
INLFLAG  FLAG                                                                   
         FLAG  INLFCONT            - Line is continued                          
*                                                                               
INLSEP   DS    CL2                 Working line separator chars                 
         END                                                                    
*-                                                                              
INLINE   PROC  INLWA                                                            
         CLEAR INLWA                                                            
*                                                                               
         L     R6,CPDEVP                                                        
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*-                                                                              
*-       Get the next data buffer if necessary.                                 
*-                                                                              
         IF    (SAMRDLEN,Z),BEGIN  Get a new buffer...                          
         ACALL SEGHEAD             Send another request packet                  
         ACALL SEGTRAIL                                                         
         SEGWR                                                                  
         IF    (SAMRDLEN,Z),BEGIN  This is odd...                               
         TSEG  'Samson file transfer logic error '                              
         ABORT '(null data packet).'                                            
         END                                                                    
         END                                                                    
*-                                                                              
*-       Get the next line in the data buffer.                                  
*-                                                                              
         L     R5,SAMRDLOC                                                      
         LH    R4,SAMRDLEN                                                      
         WHILE (R4,POS),BEGIN      Look for line terminator...                  
         LR    R15,R4                                                           
         CEIL  R15,256                                                          
         LA    R1,@R5(R15)                                                      
         L     R14,=A(ASCSTRT)                                                  
         DEX   R15,'TRT @R5(0),@R14'  Find ASCII \                              
         SR    R1,R5                                                            
*                                                                               
         AR    R5,R1               Kick...                                      
         SR    R4,R1               ...buffer ptrs                               
         IF    NP,EXIT                                                          
*                                                                               
         MVC   INLSEP,@R5                                                       
         L     R15,CVEB7TBL                                                     
         TR    INLSEP,@R15         Translate to EBCDIC                          
         IF    (INLSEP,EQ,'\'),BEGIN  Special sequence...                       
         LA    R5,@R5+1            Skip...                                      
         DECR  R4                  ...past \                                    
*-                                                                              
*-       "\;" and "\," are end of line sequences.                               
*-                                                                              
         CLEAR R15                                                              
         IF    ((INLSEP+1,EQ,';'),OR,(INLSEP+1,EQ,',')),'LA R15,1'              
         IF    (R15,NZ),BEGIN      End of line...                               
         LA    R5,@R5+1            Skip...                                      
         DECR  R4                  ...past ;                                    
*                                                                               
         L     R3,SAMRDLOC         Line location...                             
         LR    R2,R5                                                            
         SR    R2,R3                                                            
         SH    R2,=H'2'            ... and length                               
         MOVEL SAMWKBUF,@R3,(R2)                                                
         B     INLCOM                                                           
         END                                                                    
*-                                                                              
*-       "\." is end of file.                                                   
*-                                                                              
         IF    (INLSEP+1,EQ,'.'),BEGIN  End of file...                          
         CLEAR R0,R1,SAMRDLOC,SAMRDLEN                                          
         LA    R15,4               End of file                                  
         B     INLEXIT                                                          
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Packet ended with a partial line.                                      
*-                                                                              
         L     R3,SAMRDLOC         Line location...                             
         LR    R2,R5                                                            
         SR    R2,R3               ...and length                                
*                                                                               
         IF    (R2,POS),BEGIN      We have some text...                         
         SET   INLFCONT            The line is incomplete                       
         MOVEL SAMWKBUF,@R3,(R2)   Save the text                                
         END                                                                    
*                                                                               
*                                                                               
INLCOM   ST    R5,SAMRDLOC         Save updated...                              
         STH   R4,SAMRDLEN         ...buffer ptrs                               
*-                                                                              
*-       Do the required decoding of the packet data.                           
*-                                                                              
         SETMSG SAMWKBUF,(R2)       Line work area                              
         IF    SAMRF7BIT,'ACALL IN7BIT'  7-bit format                           
         ELSEIF SAMRFPCK,'ACALL INPACK'  Packed format                          
         ELSEIF SAMRFHEX,'ACALL INHEX'  Hex format                              
         ELSE  'ACALL INDATA'                                                   
*-                                                                              
*-       Finally, convert to EBCDIC if neccessary.                              
*-                                                                              
         XPUSH R0,R1               Save text ptrs                               
*                                                                               
         L     R2,CVEB7TBL         ASCII to EBCDIC xl table                     
         IF    SAMFASCII8,'L R2,CVEBCTBL'  8-bit ASCII version                  
         IF    SAMFTRAN,'L R2,CVEBCTBL'  For version 1 TRANSPARENT              
         WHILE (R0,POS),BEGIN      Translate text...                            
         LR    R15,R0                                                           
         CEIL  R15,256                                                          
         DEX   R15,'TR @R1(0),@R2'    To EBCDIC                                 
*                                                                               
         LA    R1,@R1+256                                                       
         SH    R0,=H'256'                                                       
         END                                                                    
*                                                                               
         XPOP  R0,R1               Restore text ptrs                            
*-                                                                              
*-       Usually INTRAN handles reading transparent lines and this              
*-         routine handles reading text lines.  However, for version            
*-         1 style transparent lines this routine is still called.              
*-         That is why we have to check for TRANSPARENT here and                
*-         skip the text line processing.                                       
*-                                                                              
         IF    SAMFTRAN,INLFIN     No text processing if transparent            
*-                                                                              
*-       Do tab expansion.                                                      
*-                                                                              
         IF    (^SAMFTABS,AND,^SAMFUFMT),BEGIN  Expand tabs...                  
         SETMSG (R1),(R0)                                                       
         LH    R15,=AL2(L'SAMWKBUF)  Maximum line size                          
         VCALL DETAB               Expand tabs                                  
         END                                                                    
*-                                                                              
*-       Do formatting character expansion for APPLEASCII data.                 
*-                                                                              
         IF    SAMFASCII8,BEGIN    Appleascii...                                
         IF    SAMFTRAN,EXIT       Transparent, don't do anything               
         IF    SAMFUFMT,EXIT       Unformatted, don't do anything               
         SETMSG (R1),(R0)                                                       
         LA    R2,2                Use APPLEASCII table                         
         IF    SAMFTEXTONLY,'LCR R2,R2'  We want TEXTONLY form                  
         LH    R15,=AL2(L'SAMWKBUF)  Maximum line size                          
         VCALL FORMATL             Format special characters                    
         END                                                                    
*                                                                               
INLFIN   CLEAR R15                 Set Rc                                       
         IF    INLFCONT,'LH R15,=H"-4"'  Continuation Rc                        
*                                                                               
INLEXIT  PRETURN (R0,R1)           Return data ptrs                             
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INREADY -- Local routine to do a terminal read for a few                     
*    seconds and confirm that no new input data has been sent.                  
*    This indicates that we are ready to resend a garbled packet.               
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      4 - data still coming, timed out                                         
*                                                                               
INRYWA   RECORD BEGIN                                                           
INRYSG   SEGCB ,                   Saved CPSEG                                  
*                                                                               
INRYTRM  DS    XL(L'CPTRM)         Saved CPTRM flags                            
         END                                                                    
*-                                                                              
INREADY  PROC  INRYWA                                                           
         WITH  (SAMWA,R6)          (Entry assumption)                           
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr.'                         
*                                                                               
         MVC   INRYSG,CPSEG        Save standard seg buffer info                
*                                                                               
         SEGINIT SAMWKBUF,,.CPSEG                                               
         MVC   CPSEGRTN,INRYSGRTN  Set appropriate rtn                          
*                                                                               
         MVC   INRYTRM,CPTRM       Save terminal I/O options                    
         CLEAR CPTRM               Set our options                              
         SET   CPFTRAN,CPFNMOD,CPFNONL,CPFNTYPE                                 
         SET   CPFCLEAN,CPFNECHO,CPFNPAU                                        
*-                                                                              
*-       Read with timeout of 3 seconds.                                        
*-                                                                              
         LA    R5,10               Maximum retry count                          
INRYLOOP WHILE (R5,POS),BEGIN      Keep looping...                              
         TREAD TIMEOUT=300         Read and wait for 3 seconds                  
         IF    (R15,NEG),INRYDONE  Logging off, scram                           
*                                                                               
         IF    ((R15,EQ,101),AND,(R0,Z)),BEGIN  We got data...                  
         CLEAR R15                 Set A-ok return code                         
         B     INRYDONE                                                         
         END                                                                    
*                                                                               
         LA    R15,300             Wait 3 second without reading                
         VCALL WAITER              Sit it out                                   
*                                                                               
         DECR  R5                  One less retry                               
         END                                                                    
*                                                                               
         LA    R15,4               We give up, timeout return code              
*                                                                               
INRYDONE MVC   CPSEG,INRYSG        Restore standard seg buffer info             
         MVC   CPTRM,INRYTRM       Restore terminal I/O options too             
*                                                                               
         LTR   R15,R15             Return code                                  
         BM    CVABORT             Logging off, scram                           
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INPROC -- Local routine to process a response packet.                        
*                                                                               
*    On entry:                                                                  
*      R1,R0 - packet loc, len                                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok; SAMWA contains response data buffer                              
*      4 - packet is no good, get it again                                      
*     -4 - keep waiting for response packet                                     
*     -8 - don't timeout, keep waiting for response                             
*                                                                               
INPWA    RECORD BEGIN                                                           
INPFLAG  FLAG                                                                   
*                                                                               
INPFOPT  FLAG  ,                   Options flag (from header)                   
*                                                                               
INPHEAD  DS    XL13                Working packet header                        
INPHOPT  EQU   INPHEAD+4,4,C'X'                                                 
INPHDUP  EQU   INPHEAD+8,4,C'X'                                                 
*                                                                               
INPTRAIL DS    XL8                 Working packet trailer                       
INPINIT  EQU   INPFLAG,*-INPFLAG,C'X'                                           
         END                                                                    
*-                                                                              
         MACRO                                                                  
&L       INERROR &ID                                                            
&L       LA    R1,=CL16'&ID'                                                    
         LCALL INPRETRY                                                         
         LA    R15,4                                                            
         B     INPEXIT                                                          
         MEND                                                                   
*-                                                                              
INPROC   PROC  INPWA                                                            
         WITH  (SAMWA,R6)          (Entry assumption)                           
*                                                                               
         CLEAR INPINIT                                                          
*-                                                                              
*-       Do input packet tracing.                                               
*-                                                                              
         LA    R15,1               Input buffer                                 
         SETMSG (R1),(R0)           Input packet loc, len                       
         ACALL SAMTRC              Make a trace entry                           
*-                                                                              
*-       Look for the response packet (ignore leading characters).              
*-                                                                              
         LR    R5,R1                                                            
         LR    R4,R0                                                            
*                                                                               
         WHILE (R4,POS),BEGIN      Go through data...                           
         MVC   INPHEAD,@R5                                                      
         L     R15,CVEB7TBL                                                     
         TR    INPHEAD,@R15        Translate to EBCDIC                          
         IF    (INPHEAD,EQ,'\\'),EXIT  Got header, scram                        
*                                                                               
         LA    R5,@R5+1                                                         
         DECR  R4                                                               
         END                                                                    
*                                                                               
         IF    (R4,LT,4),'INERROR TOOSHORT'  Bad packet                         
*-                                                                              
*-       Handle ACK packet type.                                                
*-                                                                              
         IF    (INPHEAD,EQ,'\\AA'),BEGIN  Explicit acknowledge...               
         LH    R15,=H'-8'          No timeouts now, go wait                     
         B     INPEXIT                                                          
         END                                                                    
*-                                                                              
*-       Handle NAK packet type.                                                
*-                                                                              
         IF    (INPHEAD,EQ,'\\NN'),BEGIN  Explicit nak...                       
         LA    R15,4               Retransmit our packet                        
         B     INPEXIT                                                          
         END                                                                    
*-                                                                              
*-       Handle "BREAK" packet type.                                            
*-                                                                              
         IF    (INPHEAD,EQ,'\\BB'),BEGIN  Break...                              
         SET   SAMFBREAK           Set BREAK request received                   
*                                                                               
         LH    R15,=H'-4'          Wait for something new                       
         B     INPEXIT                                                          
         END                                                                    
*-                                                                              
*-       Handle Response packet type (the most common case).                    
*-                                                                              
         IF    (INPHEAD,NE,'\\RR'),'INERROR BADPTYPE'  Bad ptype                
         IF    (R4,LT,L'INPHEAD),'INERROR NOHDR'  No header                     
*-                                                                              
*-       Process the response packet header.                                    
*-                                                                              
         IF    (INPHOPT,NE,INPHDUP),'INERROR BADHDR'  Bad header                
*                                                                               
         XTB   INPHOPT+1,1         Options flag                                 
         IF    NZ,'INERROR BAD-OPT-HEX'  Bad hex, scram                         
         STC   R15,INPFOPT         Save it                                      
*                                                                               
         XTB   INPHOPT,1           Sequence number                              
         IF    NZ,'INERROR BAD-SEQ-HEX'  Bad hex, scram                         
*                                                                               
         IF    (R15,NE,SAMSSEQ),BEGIN  Out of sequence...                       
         IF    (R15,EQ,SAMRSEQ),'INERROR PREV-SEQNO'  Got prev again            
         INERROR BAD-SEQNO         Shouldn't ever happen                        
         END                                                                    
*                                                                               
         IF    (INPHEAD+12,NE,':'),'INERROR BADFMT'  Bad format                 
*                                                                               
         LA    R5,@R5+L'INPHEAD    Skip past header                             
         SH    R4,=AL2(L'INPHEAD)                                               
*-                                                                              
*-       Process the response packet trailer (which contains CRC).              
*-                                                                              
         SH    R4,=H'2'                                                         
*                                                                               
         LOOP  BEGIN                                                            
         IF    (R4,NEG),'INERROR NOTRAILER'  No trailer                         
*                                                                               
         LA    R1,@R5(R4)                                                       
         MVC   INPTRAIL,@R1                                                     
         L     R15,CVEB7TBL                                                     
         TR    INPTRAIL,@R15       Translate to EBCDIC                          
         IF    (INPTRAIL,EQ,'\:'),EXIT  Got trailer, scram                      
*                                                                               
         DECR  R4                                                               
         END                                                                    
*-                                                                              
*-       Check for data accuracy.                                               
*-                                                                              
         XTB   INPTRAIL+2,2        Data length (low byte only)                  
         IF    NZ,'INERROR BADHEX'  Bad hex                                     
         LR    R0,R4                                                            
         N     R0,=A(X'FF')                                                     
         IF    (R0,NE,R15),'INERROR BADLEN'  Bad data length                    
*-                                                                              
*-       Strip high data bit if data path doesn't preserve the full             
*-         byte (as is the case with TELENET).                                  
*-                                                                              
         IF    (INPFOPT.SAMRF7BIT,OR,INPFOPT.SAMRFHEX),BEGIN                    
         SETMSG (R5),(R4)                                                       
         ACALL CLRHIBIT            Clear high bit on all data bytes             
         END                                                                    
*-                                                                              
*-       Verify data checksum/CRC.                                              
*-                                                                              
         CLEAR R15                                                              
         SETMSG (R5),(R4)           Packet data                                 
*                                                                               
         IF    INPFOPT.SAMRFCRC,BEGIN  Check CRC...                             
         ACALL CHECKCRC                                                         
         LR    R2,R15              Save calculated CRC                          
         XTB   INPTRAIL+4,4        Two byte CRC                                 
         IF    (R2,NE,R15),'INERROR CRC-ERROR'  CRC error                       
         END                                                                    
*                                                                               
         ELSEIF INPFOPT.SAMRFCKS,BEGIN  Check checksum...                       
         ACALL CHECKSUM                                                         
         LR    R2,R15              Save calculated checksum                     
         XTB   INPTRAIL+4,2        One byte checksum                            
         IF    (R2,NE,R15),'INERROR CKSUM-ERROR'  Checksum error                
         END                                                                    
*-                                                                              
*-    The packet has been received accurately, save header and data.            
*-                                                                              
         XTB   INPHOPT,1           Sequence number                              
         STH   R15,SAMRSEQ                                                      
         CLEAR SAMRFLAG            Clear our input state flags                  
         MVC   SAMRCODE,INPFOPT    Save encoding options                        
         MVC   SAMRCMD,INPHOPT+2   Save commands/options                        
*                                                                               
         FAIL  (R4,GT,L'SAMRDBUF),SAMERR3,'Samson interface error.'             
         LA    R2,SAMRDBUF-2000                                                 
         AH    R2,=H'2000'                                                      
         MOVEL @R2,@R5,(R4)        Save packet data                             
*                                                                               
         ST    R2,SAMRDLOC         Save data loc...                             
         STH   R4,SAMRDLEN         ...and len                                   
*-                                                                              
*-       We save this packet's encoding flags as OUR encoding flags,            
*-       so we will always send back packets in the form they were              
*-       sent to us.                                                            
*-                                                                              
*-       Note:                                                                  
*-         For version 1 compatability some versions of Samson will             
*-         set "7BIT,NOCHECK" encoding when sending a "Path                     
*-         parameters" packet response.  We will accept that packet,            
*-         but not latch the encoding to 7BIT,NOCHECK.  (Talk to Niz            
*-         or Aaron for more details as to why this is necessary.               
*-         If Version 1 of Samson has been stamped out then we                  
*-         would not need to play these games.)                                 
*-                                                                              
         IF    (SAMRCMD,NE,'PP'),BEGIN  Use received encoding...                
*-                                                                              
*-       This corrects a MacSamson 1.1 bug where encoding type 0                
*-       can be incorrectly returned...                                         
*-                                                                              
         IF    ((CPSAMPRO,LT,2),AND,(CPSAMTYP,EQ,'MACSAM')),EXIT                
*                                                                               
         MVC   CPSAMCOD,SAMRCODE   Use this encoding ourselves                  
         END                                                                    
*                                                                               
         CLEAR R15,SAMRCNT         Set rc & clear bad packet counter            
         B     INPEXIT                                                          
*                                                                               
INPEXIT  PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INPRETRY -- Local routine to handle a packet error condition                 
*     and abort the command if too many consecutive errors have                 
*     occurred.  This routine also logs the type of error in the                
*     WLOG.                                                                     
*                                                                               
*     On entry:                                                                 
*       R1 - 16 character error id                                              
*                                                                               
INPRETRY PROC                                                                   
         WITH  (SAMWA,R6)          (Entry assumption)                           
*                                                                               
         LR    R2,R1                                                            
*                                                                               
         TSEG  @R2,16,T            Error code                                   
         TSEG  ' packet receive error.'                                         
*-                                                                              
*-       If SAMSON DEBUG is set then also write the message out to              
*-         the user.                                                            
*-                                                                              
         IF    CPSAMFDEBUG,'TWRITE'  If debug, write to term too                
         ELSE  'TCLEAR'            Not debugging                                
*-                                                                              
*-       Count the number of consecutive errors and abort if there              
*-         is no hope.                                                          
*-                                                                              
         INCR  R15,SAMRCNT         Packet retry counter                         
         CLEAR R14                                                              
         D     R14,=F'5'           Modulo 5                                     
         IF    (R14,Z),BEGIN       Too many retransmissions...                  
         TCCR                                                                   
         TSEG  'There have been '                                               
         TNUM  LH:SAMRCNT                                                       
         TSEG  ' consecutive transmission errors.',,CR                          
         ABORT 'File transfer stopped.'                                         
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INDATA -- Local routine to convert standard packet data into                 
*    ASCII text.                                                                
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - converted text loc, len                                          
*              (the text is converted in place)                                 
*                                                                               
INDWA    RECORD BEGIN                                                           
INDPTRS  DS    2A                  Data len, loc                                
*                                                                               
INDHEX   DS    CL2                 Working hex convert area                     
         END                                                                    
*-                                                                              
INDATA   PROC  INDWA                                                            
*                                                                               
         STM   R0,R1,INDPTRS                                                    
         LR    R5,R1                                                            
         LR    R4,R0                                                            
*-                                                                              
*-       Convert any "\hex" characters back to their original                   
*-         format.                                                              
*-                                                                              
         WHILE (R4,POS),BEGIN      Go through data...                           
         LR    R15,R4                                                           
         CEIL  R15,256                                                          
         LA    R1,@R5(R15)                                                      
         DEX   R15,'TRT @R5(0),ASCSTRT'  Look for ASCII \                       
         SR    R1,R5               Number of chars until special                
*                                                                               
         AR    R5,R1               Kick working text ptrs                       
         SR    R4,R1                                                            
         IF    (R4,LT,3),EXIT                                                   
*                                                                               
         MVC   INDHEX,@R5+1        Save "hex" after "\"                         
         L     R15,CVEB7TBL                                                     
         TR    INDHEX,@R15         Translate to EBCDIC                          
         XTB   INDHEX,2                                                         
         IF    NZ,BEGIN            Bad hex, shouldn't happen...                 
         LA    R5,@R5+1            Skip past \                                  
         DECR  R4                                                               
         END                                                                    
*                                                                               
         ELSE  BEGIN               Process "\hh"...                             
         STC   R15,@R5             Save byte                                    
         SH    R4,=H'2'            Buffer is now two chars shorter              
         MOVEL @R5+1,@R5+3,(R4)    Move text over                               
         LA    R5,@R5+1            Next char                                    
*                                                                               
         L     R15,INDPTRS                                                      
         SH    R15,=H'2'                                                        
         ST    R15,INDPTRS         Keep total length accurate                   
         END                                                                    
         END                                                                    
*                                                                               
         LM    R0,R1,INDPTRS       Converted data len, loc                      
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INPACK -- Local routine to convert packed packet data into                   
*    ASCII text.                                                                
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - converted text loc, len                                          
*              (the text is converted in place)                                 
*                                                                               
INXWA    RECORD BEGIN                                                           
INXFLAG  FLAG                                                                   
*                                                                               
INXORIG  DS    A                   Data ptr on entry                            
*                                                                               
INXHEX   DS    CL2                 Working hex convert area                     
INXINIT  EQU   INXFLAG,*-INXFLAG,C'X'                                           
*                                                                               
INXBUF   DS    CL2048              Working buffer                               
         END                                                                    
*-                                                                              
INPACK   PROC  INXWA                                                            
         L     R6,CPDEVP           SAMWA ptr                                    
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*                                                                               
         CLEAR INXINIT                                                          
         ST    R1,INXORIG          Save data ptr for later                      
*                                                                               
         LR    R3,R0               R3 = remaining length                        
         LR    R4,R1               R4 = output buffer ptr                       
*-                                                                              
*-       Copy the text in to our working buffer.                                
*-                                                                              
         MOVEL INXBUF,@R4,(R3)     Save source buffer                           
         LA    R5,INXBUF           R5 = source buffer ptr                       
*-                                                                              
*-       Unpack data.                                                           
*-                                                                              
INXLOOP  WHILE (R3,POS),BEGIN      Go through data...                           
*-                                                                              
*-       Check for a "\", which starts all Samson escape sequences.             
*-                                                                              
         IF    ((@R5,EQ,X'5C'),OR,(@R5,EQ,X'DC')),BEGIN  \...                   
         MVC   INXHEX,@R5+1        Save possible "hex" digits                   
         NC    INXHEX,=X'7F7F'     Throw away MSBs                              
*-                                                                              
*-       Check for shift-in ("\(") or shift-out ("\)") sequence.                
*-                                                                              
         IF    ((INXHEX,EQ,X'28'),OR,(INXHEX,EQ,X'29')),BEGIN                   
         CLEAR SAMFIN8BIT          Assume not in 8-bit mode                     
         IF    (INXHEX,EQ,X'28'),'SET SAMFIN8BIT'  We are in 8-bit              
*                                                                               
         LA    R5,@R5+2            Skip past "\(" or "\)"                       
         SH    R3,=H'2'            Adjust remaining length                      
         B     INXLOOP                                                          
         END                                                                    
*-                                                                              
*-       Check for hex character ("\hh").                                       
*-                                                                              
         L     R15,CVEB7TBL                                                     
         TR    INXHEX,@R15         Convert hex digits to EBCDIC                 
         XTB   INXHEX,2            Convert to binary                            
         IF    NZ,BEGIN            Bad hex...                                   
         LA    R5,@R5+1            Skip past \                                  
         DECR  R3                  Decrement remaining length                   
         B     INXLOOP                                                          
         END                                                                    
*                                                                               
         STC   R15,@R4             Save data byte                               
         LA    R4,@R4+1            Kick output buffer ptr                       
         LA    R5,@R5+3            Kick input buffer ptr                        
         SH    R3,=H'3'            Decrement remaining length                   
         B     INXLOOP                                                          
         END                                                                    
*-                                                                              
*-       Check out data byte with MSB on.                                       
*-                                                                              
         LC    R15,@R5             Get data byte                                
         IF    (R15,GE,X'80'),BEGIN  MSB is on...                               
         IF    SAMFIN8BIT,EXIT     We are in 8-bit mode, scram                  
         N     R15,=A(X'7F')                                                    
         STC   R15,@R4             Save byte w/o MSB                            
         LA    R4,@R4+1            Kick output buffer ptr                       
*                                                                               
         LA    R15,X'20'           ASCII blank follows this char                
         END                                                                    
*                                                                               
         STC   R15,@R4             Save byte in output buffer                   
         LA    R4,@R4+1            Kick output buffer ptr                       
         LA    R5,@R5+1            Kick input buffer ptr                        
         DECR  R3                  Decrement remaining length                   
         END                                                                    
*                                                                               
*                                                                               
         L     R1,INXORIG          Return unpacked buffer loc...                
         LR    R0,R4                                                            
         SR    R0,R1               ...and length                                
         FAIL  (R0,LGT,2048),SAMERR4,'Samson interface error.'                  
         PRETURN (R0,R1)                                                        
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  IN7BIT -- Local routine to convert 7-bit packet data into                    
*    ASCII text.                                                                
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - converted text loc, len                                          
*              (the text is converted in place)                                 
*                                                                               
IN7WA    RECORD BEGIN                                                           
IN7FLAG  FLAG                                                                   
*                                                                               
IN7ORIG  DS    A                   Data ptr on entry                            
*                                                                               
IN7HEX   DS    CL2                 Working hex convert area                     
IN7INIT  EQU   IN7FLAG,*-IN7FLAG,C'X'                                           
*                                                                               
IN7BUF   DS    CL2048              Working buffer                               
         END                                                                    
*-                                                                              
IN7BIT   PROC  IN7WA                                                            
         L     R6,CPDEVP           SAMWA ptr                                    
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*                                                                               
         CLEAR IN7INIT                                                          
         ST    R1,IN7ORIG          Save data ptr for later                      
*                                                                               
         LR    R3,R0               R3 = remaining length                        
         LR    R4,R1               R4 = output buffer ptr                       
*-                                                                              
*-       Copy the text in to our working buffer.                                
*-                                                                              
*-         Note:  The MSB off all data bytes has already been zeroed            
*-          by INPROC calling CLRHIBIT.                                         
*-                                                                              
         MOVEL IN7BUF,@R4,(R3)     Save source buffer                           
         LA    R5,IN7BUF           R5 = source buffer ptr                       
*-                                                                              
*-       Unpack 7-bit data.                                                     
*-                                                                              
IN7LOOP  WHILE (R3,POS),BEGIN      Go through data...                           
*-                                                                              
*-       Check for a "\", which starts all Samson escape sequences.             
*-                                                                              
         IF    (@R5,EQ,X'5C'),BEGIN  \...                                       
*-                                                                              
*-       Check for msb-on ("\+") or msb-off ("\-") sequence.                    
*-                                                                              
         IF    ((@R5+1,EQ,X'2B'),OR,(@R5+1,EQ,X'2D')),BEGIN                     
         CLEAR SAMFINMSB           Assume msb is not on                         
         IF    (@R5+1,EQ,X'2B'),'SET SAMFINMSB'  Msb is on                      
*                                                                               
         LA    R5,@R5+2            Skip past "\+" or "\+"                       
         SH    R3,=H'2'            Adjust remaining length                      
         B     IN7LOOP                                                          
         END                                                                    
*-                                                                              
*-       Check for hex character ("\hh").                                       
*-                                                                              
         MVC   IN7HEX,@R5+1        Save possible "hex" digits                   
         L     R15,CVEB7TBL                                                     
         TR    IN7HEX,@R15         Convert hex digits to EBCDIC                 
         XTB   IN7HEX,2            Convert to binary                            
         IF    NZ,BEGIN            Bad hex...                                   
         LA    R5,@R5+1            Skip past \                                  
         DECR  R3                  Decrement remaining length                   
         B     IN7LOOP                                                          
         END                                                                    
*                                                                               
         STC   R15,@R4             Save data byte                               
         LA    R4,@R4+1            Kick output buffer ptr                       
         LA    R5,@R5+3            Kick input buffer ptr                        
         SH    R3,=H'3'            Decrement remaining length                   
         B     IN7LOOP                                                          
         END                                                                    
*-                                                                              
*-       Store data byte (and add MSB if necessary).                            
*-                                                                              
         MVC   @R4(1),@R5          Save byte in output buffer                   
         IF    SAMFINMSB,'SET @R4.X"80"'  Turn on MSB                           
         LA    R4,@R4+1            Kick output buffer ptr                       
         LA    R5,@R5+1            Kick input buffer ptr                        
         DECR  R3                  Decrement remaining length                   
         END                                                                    
*                                                                               
*                                                                               
         L     R1,IN7ORIG          Return unpacked buffer loc...                
         LR    R0,R4                                                            
         SR    R0,R1               ...and length                                
         FAIL  (R0,LGT,2048),SAMERR4,'Samson interface error.'                  
         PRETURN (R0,R1)                                                        
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  INHEX -- Local routine to convert ASCII hex digits into ASCII                
*    text.                                                                      
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - converted text loc, len                                          
*              (the text is converted in place)                                 
*                                                                               
INHEX    PROC  (R2,LSR)                                                         
         VCALL TOEBCDIC            Convert to EBCDIC                            
         VCALL HEXCONV             Hex to binary                                
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTDATA -- Local routine to convert ASCII text into it's                     
*    standard packed data format.                                               
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - converted text loc, len                                          
*              (the text is converted in place)                                 
*                                                                               
OUTDWA   RECORD BEGIN                                                           
OUTDFLAG FLAG                                                                   
*                                                                               
OUTDPTRS DS    2A                  Text len, loc                                
OUTDINIT EQU   OUTDFLAG,*-OUTDFLAG,C'X'                                         
*                                                                               
OUTDBUF  DS    XL2048              Working buffer                               
         END                                                                    
*-                                                                              
OUTDATA  PROC  OUTDWA                                                           
         CLEAR OUTDINIT                                                         
*                                                                               
         STM   R0,R1,OUTDPTRS      Save text ptrs for later                     
*-                                                                              
*-       Convert any "unsendable" characters to their alternate                 
*-         notation.                                                            
*-                                                                              
         LR    R5,R1                                                            
         LR    R4,R0                                                            
         WHILE (R4,POS),BEGIN      Go through text...                           
         LR    R15,R4                                                           
         CEIL  R15,256                                                          
         CLEAR R2                                                               
         LA    R1,@R5(R15)                                                      
         DEX   R15,'TRT @R5(0),SPECTRT'  Look for special chars                 
         SR    R1,R5               No. of chars until special                   
*                                                                               
         AR    R5,R1               Kick working text ptrs                       
         SR    R4,R1                                                            
*                                                                               
         IF    (R2,NZ),BEGIN       Found a special char...                      
         LC    R2,@R5              Special char                                 
         LR    R3,R5                                                            
         LA    R5,@R5+1            Skip past special char                       
         DECR  R4                                                               
         MOVEL OUTDBUF,@R5,(R4)    Save remaining text                          
*                                                                               
         MVI   @R3,C'\'            Convert to "\hex"                            
         BTX   @R3+1,2,(R2)                                                     
         SETMSG @R3,3                                                           
         ACALL OUTTRAN             Convert to ASCII                             
*                                                                               
         MOVEL @R5+2,OUTDBUF,(R4)  Restore remaining text                       
         LA    R5,@R5+2                                                         
         L     R15,OUTDPTRS        Adjust total text length                     
         LA    R15,@R15+2                                                       
         ST    R15,OUTDPTRS                                                     
         END                                                                    
         END                                                                    
*                                                                               
         LM    R0,R1,OUTDPTRS      Restore text ptrs                            
         FAIL  (R0,LGT,2048),SAMERR5,'Samson interface error.'                  
         PRETURN (R0,R1)           Return ptrs                                  
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTPACK -- Local routine to convert ASCII text into it's                     
*    packed format.                                                             
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - packed text loc, len                                             
*              (the text is packed in place)                                    
*                                                                               
OUTXWA   RECORD BEGIN                                                           
OUTXFLAG FLAG                                                                   
*                                                                               
OUTXORIG DS    A                   Data ptr on entry                            
OUTXINIT EQU   OUTXFLAG,*-OUTXFLAG,C'X'                                         
*                                                                               
OUTXBUF  DS    XL2048              Working buffer                               
         END                                                                    
*-                                                                              
OUTPACK  PROC  OUTXWA                                                           
         L     R6,CPDEVP           SAMWA ptr                                    
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*                                                                               
         CLEAR OUTXINIT                                                         
         ST    R1,OUTXORIG         Save data ptr for later                      
*                                                                               
         LR    R3,R0               R3 = remaining length                        
         LR    R4,R1               R4 = output buffer ptr                       
*-                                                                              
*-       Copy the text in to our working buffer.                                
*-                                                                              
         MOVEL OUTXBUF,@R4,(R3)    Save source buffer                           
         LA    R5,OUTXBUF          R5 = source buffer ptr                       
*                                                                               
         IF    SAMFSHIFT,OUTX8LP   We are in shifted mode now                   
***                                                                             
***  Send the data in packed mode.                                              
***                                                                             
OUTXLOOP WHILE (R3,POS),BEGIN      Go through text...                           
*-                                                                              
*-       Check for special character which must be sent as "\hh".               
*-                                                                              
         LC    R15,@R5             Get character                                
         LC    R14,SPECTRT(R15)    Is it a special charcter?                    
         IF    (R14,NZ),BEGIN      Yes, send it as hex...                       
         MVI   @R4,C'\'            Backslash                                    
         BTX   @R4+1,2,(R15)       Hex                                          
         L     R14,CVASCTBL                                                     
         TR    @R4(3),@R14         Translate to ASCII                           
         LA    R4,@R4+3            Kick output data ptr                         
         LA    R5,@R5+1            Kick input data ptr                          
         DECR  R3                  Decrement remaining length                   
         B     OUTXLOOP                                                         
         END                                                                    
*-                                                                              
*-       For packed data we use the MSB to indicate that a blank is             
*-         to follow this byte.  If the data byte itself already has            
*-         the MSB on then we must either send that byte as "\hh" or            
*-         shift in to 8-bit mode with the "\(" sequence.                       
*-                                                                              
         IF    ^@R5.X'80',BEGIN    MSB is not on in data byte...                
         MVC   @R4(1),@R5          Put the byte in the output buffer            
         IF    ((R3,GT,1),AND,(@R5+1,EQ,X'20')),BEGIN  Compress...              
         SET   @R4.X'80'           Turn the MSB on                              
         LA    R4,@R4+1            Kick output data ptr                         
         LA    R5,@R5+2            Kick input data ptr                          
         SH    R3,=H'2'            Decrement remaining length                   
         B     OUTXLOOP                                                         
         END                                                                    
*                                                                               
         LA    R4,@R4+1            Kick output data ptr                         
         LA    R5,@R5+1            Kick input data ptr                          
         DECR  R3                  Decrement remaining length                   
         B     OUTXLOOP                                                         
         END                                                                    
*-                                                                              
*-       This byte must be sent in an alternate mode, if any of the             
*-         next three bytes also need to be sent in an alternate                
*-         mode then switch to 8-bit mode.  Otherwise, just send                
*-         this byte using the "\hh" notation.                                  
*-                                                                              
         IF    (R3,GT,3),BEGIN     Maybe we should switch modes...              
         IF    @R5+1.X'80',OUTX8BIT                                             
         IF    @R5+2.X'80',OUTX8BIT                                             
         IF    @R5+3.X'80',OUTX8BIT                                             
         END                                                                    
*                                                                               
*                                                                               
         LC    R15,@R5             Get character                                
         MVI   @R4,C'\'            Backslash                                    
         BTX   @R4+1,2,(R15)       Hex                                          
         L     R14,CVASCTBL                                                     
         TR    @R4(3),@R14         Translate to ASCII                           
         LA    R4,@R4+3            Kick output data ptr                         
         LA    R5,@R5+1            Kick input data ptr                          
         DECR  R3                  Decrement remaining length                   
         B     OUTXLOOP                                                         
         END                                                                    
         B     OUTXDONE                                                         
***                                                                             
***  Send the data in 8-bit mode.                                               
***                                                                             
OUTX8BIT MVI   @R4,X'5C'           Ascii "\"                                    
         MVI   @R4+1,X'28'         Ascii "("                                    
         LA    R4,@R4+2            Kick ptr                                     
         SET   SAMFSHIFT           Remember we are 'shifted' now                
*                                                                               
*                                                                               
OUTX8LP  WHILE (R3,POS),BEGIN      Go through text...                           
*-                                                                              
*-       Check for special character which must be sent as "\hh".               
*-                                                                              
         LC    R15,@R5             Get character                                
         LC    R14,SPECTRT(R15)    Is it a special charcter?                    
         IF    (R14,NZ),BEGIN      Yes, send it as hex...                       
         MVI   @R4,C'\'            Backslash                                    
         BTX   @R4+1,2,(R15)       Hex                                          
         L     R14,CVASCTBL                                                     
         TR    @R4(3),@R14         Translate to ASCII                           
         LA    R4,@R4+3            Kick output data ptr                         
         LA    R5,@R5+1            Kick input data ptr                          
         DECR  R3                  Decrement remaining length                   
         B     OUTX8LP                                                          
         END                                                                    
*                                                                               
         MVC   @R4(1),@R5          Put the byte in the output buffer            
         LA    R4,@R4+1            Kick output data ptr                         
         LA    R5,@R5+1            Kick input data ptr                          
         DECR  R3                  Decrement remaining length                   
*-                                                                              
*-       If none of the next 4 characters have the MSB on, then                 
*-         switch back to packed mode.                                          
*-                                                                              
         IF    (R3,LT,4),OUTX8LP                                                
         IF    @R5.X'80',OUTX8LP                                                
         IF    @R5+1.X'80',OUTX8LP                                              
         IF    @R5+2.X'80',OUTX8LP                                              
         IF    @R5+3.X'80',OUTX8LP                                              
*                                                                               
         MVI   @R4,X'5C'           Ascii "\"                                    
         MVI   @R4+1,X'29'         Ascii ")"                                    
         LA    R4,@R4+2            Kick ptr                                     
         CLEAR SAMFSHIFT           Remember we are not 'shifted'                
         B     OUTXLOOP            Go back to packed mode                       
         END                                                                    
*                                                                               
*                                                                               
OUTXDONE L     R1,OUTXORIG         Return packed buffer loc...                  
         LR    R0,R4                                                            
         SR    R0,R1               ...and length                                
         FAIL  (R0,LGT,2048),SAMERR6,'Samson interface error.'                  
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUT7BIT -- Local routine to convert ASCII text into it's                     
*    7-bit format.                                                              
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - packed text loc, len                                             
*              (the text is packed in place)                                    
*                                                                               
OUT7WA   RECORD BEGIN                                                           
OUT7FLAG FLAG                                                                   
*                                                                               
OUT7ORIG DS    A                   Data ptr on entry                            
OUT7INIT EQU   OUT7FLAG,*-OUT7FLAG,C'X'                                         
*                                                                               
OUT7BUF  DS    XL2048              Working buffer                               
         END                                                                    
*-                                                                              
OUT7BIT  PROC  OUT7WA                                                           
         L     R6,CPDEVP           SAMWA ptr                                    
         WITH  (SAMWA,R6)                                                       
         FAIL  (SAMWA,NE,'SAM'),BADSAM,'Bad SAMWA ptr'                          
*                                                                               
         CLEAR OUT7INIT                                                         
         ST    R1,OUT7ORIG         Save data ptr for later                      
*                                                                               
         LR    R3,R0               R3 = remaining length                        
         LR    R4,R1               R4 = output buffer ptr                       
*-                                                                              
*-       Copy the text in to our working buffer.                                
*-                                                                              
         MOVEL OUT7BUF,@R4,(R3)    Save source buffer                           
         LA    R5,OUT7BUF          R5 = source buffer ptr                       
***                                                                             
***  Send the data in 7-bit mode.                                               
***                                                                             
OUT7LOOP WHILE (R3,POS),BEGIN      Go through text...                           
*-                                                                              
*-       Check for special character which must be sent as "\hh".               
*-                                                                              
         LC    R2,@R5              Get character                                
         LC    R14,SPECTRT(R2)     Is it a special charcter?                    
         IF    (R14,NZ),BEGIN      Yes, send it as hex...                       
         MVI   @R4,C'\'            Backslash                                    
         BTX   @R4+1,2,(R2)        Hex                                          
         L     R14,CVASCTBL                                                     
         TR    @R4(3),@R14         Translate to ASCII                           
         LA    R4,@R4+3            Kick output data ptr                         
         LA    R5,@R5+1            Kick input data ptr                          
         DECR  R3                  Decrement remaining length                   
         B     OUT7LOOP                                                         
         END                                                                    
*-                                                                              
*-       If the data byte has the high order bit set when we are                
*-          not in "msb on" mode (or vice-versa).                               
*-                                                                              
         IF    ((SAMFMSB,AND,(R2,LT,X'80')),OR,                        *        
               (^SAMFMSB,AND,(R2,GE,X'80'))),BEGIN                              
         FLIP  SAMFMSB             Toggle MSB on/off switch                     
*                                                                               
         MVI   @R4,X'5C'           \                                            
         MVI   @R4+1,X'2D'                "-"                                   
         IF    SAMFMSB,'MVI @R4+1,X"2B"'  "+"                                   
         LA    R4,@R4+2            Skip past "\+" or "\-"                       
         END                                                                    
*                                                                               
         MVC   @R4(1),@R5          Save output data byte                        
         NI    @R4,X'7F'           MSB is never set in 7bit mode                
         LA    R4,@R4+1            Kick output data ptr                         
         LA    R5,@R5+1            Kick input data ptr                          
         DECR  R3                  Decrement remaining length                   
         END                                                                    
*                                                                               
*                                                                               
         L     R1,OUT7ORIG         Return packed buffer loc...                  
         LR    R0,R4                                                            
         SR    R0,R1               ...and length                                
         FAIL  (R0,LGT,2048),SAMERR6,'Samson interface error.'                  
*                                                                               
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTHEX -- Local routine to convert ASCII text to hex format.                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - converted text loc, len                                          
*              (the text is expanded in place)                                  
*                                                                               
OUTHWA   RECORD BEGIN                                                           
OUTHFLAG FLAG                                                                   
*                                                                               
OUTHPTRS DS    2A                  Text len, loc                                
OUTHINIT EQU   OUTHFLAG,*-OUTHFLAG,C'X'                                         
*                                                                               
OUTHWORK DS    CL8                 BTX work area                                
*                                                                               
OUTHBUF  DS    XL2048              Working buffer                               
         END                                                                    
*-                                                                              
OUTHEX   PROC  OUTHWA                                                           
         CLEAR OUTHINIT                                                         
*                                                                               
         LR    R3,R1                                                            
         LR    R4,R0                                                            
         STM   R0,R1,OUTHPTRS      Save text ptrs for later                     
*-                                                                              
*-       Copy the text into our working buffer.                                 
*-                                                                              
         MOVEL OUTHBUF,@R3,(R4)                                                 
*-                                                                              
*-       Convert the text to (EBCDIC) hex digits.                               
*-                                                                              
         LA    R5,OUTHBUF          Source buffer                                
         WHILE (R4,POS),BEGIN      Go through text...                           
         BTX   OUTHWORK,,L:@R5                                                  
         LR    R2,R4                                                            
         CEIL  R2,4                Maximum number of bytes                      
*                                                                               
         LR    R15,R2                                                           
         AR    R15,R15             Digit count                                  
         DEX   R15,'MVC @R3(0),OUTHWORK'  Save digits                           
         LA    R3,@R15+1(R3)                                                    
*                                                                               
         LA    R5,@R5(R2)                                                       
         SR    R4,R2                                                            
         END                                                                    
*-                                                                              
*-       Convert EBCDIC hex digits to ASCII hex digits.                         
*-                                                                              
         LM    R0,R1,OUTHPTRS                                                   
         AR    R0,R0               Text length has doubled                      
         ACALL OUTTRAN             Convert to ASCII                             
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  OUTTRAN -- Local routine to translate EBCDIC text to ASCII.                  
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - translated text loc, len                                         
*              (the text is translated in place)                                
*                                                                               
OUTTRAN  PROC                                                                   
         L     R2,CVASCTBL         ASCII translate table                        
*                                                                               
         WHILE (R0,POS),BEGIN      Translate text...                            
         LR    R15,R0                                                           
         CEIL  R15,256                                                          
         DEX   R15,'TR @R1(0),@R2'    To ASCII                                  
*                                                                               
         LA    R1,@R1+256                                                       
         SH    R0,=H'256'                                                       
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CLRHIBIT -- Local routine to clear the high (x'80') bit on                   
*    all bytes.                                                                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - data loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - modified data loc, len (same ptrs as on entry)                   
*                                                                               
CLRHIBIT PROC                                                                   
         WHILE (R0,POS),BEGIN      Go through data bytes...                     
         LR    R15,R0                                                           
         CEIL  R15,256             Not too much                                 
*                                                                               
         DEX   R15,'NC @R1(0),=256X"7F"'  Clear high bit                        
*                                                                               
         LA    R1,@R1+256          Kick ptr                                     
         SH    R0,=H'256'          Decr remaining length                        
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*box                                                                            
*                                                                               
*  Stop on ASCII \ Table                                                        
*                                                                               
ASCSTRT  DC    XL256'00'                                                        
         ORG   ASCSTRT+X'5C'                                                    
         DC    X'FF'               ASCII \ (parity off)                         
         ORG   ASCSTRT+X'DC'                                                    
         DC    X'FF'               ASCII \ (parity on)                          
         ORG                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CHECKSUM -- Local routine to perform an 8-bit additive checksum.             
*                                                                               
*    On entry:                                                                  
*      R15 - old checksum                                                       
*      R1,R0 - data loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R15 - new checksum                                                       
*      R1,R0 - unchanged from entry                                             
*                                                                               
CHECKSUM PROC                                                                   
         CLEAR R2                  (For IC later)                               
*                                                                               
         WHILE (R0,POS),BEGIN      Go through data...                           
         IC    R2,@R1                                                           
         AR    R15,R2              Sum the byte                                 
*                                                                               
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
*                                                                               
         N     R15,=A(X'FF')       Only keep the low byte                       
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CHECKCRC -- Local routine to perform a 16-bit polynomial                     
*    cyclic redundancy check.  (This is supposed to be a                        
*    "standard CRC-16" calculation, those who are really curious                
*    about this code should talk with Mike Durket.)                             
*                                                                               
*    On entry:                                                                  
*      R15 - old CRC                                                            
*      R1,R0 - data loc, len                                                    
*                                                                               
*    On exit:                                                                   
*      R15 - new CRC                                                            
*      R1,R0 - unchanged from entry                                             
*                                                                               
CHECKCRC PROC                                                                   
         LR    R5,R15              Current CRC                                  
*-                                                                              
*-       Calculate CRC from data.                                               
*-                                                                              
         WHILE (R0,POS),BEGIN      Go through data...                           
*-                                                                              
*-       Step 1:                                                                
*-         Exclusive-OR the input byte with the low-order byte of               
*-         the old CRC to get X.                                                
*-                                                                              
         IC    R2,@R1              Input byte in low byte of R2                 
         XR    R2,R5               Exclusive or with old CRC                    
         N     R2,=A(X'FF')        Only keep low byte of R2                     
*-                                                                              
*-       Step 2:                                                                
*-         Shift the old CRC eight bits to the right.                           
*-         Note:  This shift is logical, not arithmetic.                        
*-                                                                              
         SRL   R5,8                                                             
*-                                                                              
*-       Step 3:                                                                
*-       Exclusive-OR the old CRC with the contents of the CRC table            
*-         entry for "X" we calculated in step 1.                               
*-                                                                              
         AR    R2,R2               Times 2 for halfword offset                  
         LH    R15,CRCTABLE(R2)    Get CRC entry                                
         N     R15,=A(X'FFFF')     We don't want sign propagation               
         XR    R5,R15              Exclusive or with old CRC                    
*                                                                               
         LA    R1,@R1+1            Next char                                    
         DECR  R0                                                               
         END                                                                    
*                                                                               
*                                                                               
         LR    R15,R5              Return CRC                                   
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CRCTABLE -- Halfword table used for CRC-16 calculations.                     
*                                                                               
CRCTABLE DS    0D                                                               
*                   0   1   2   3       4   5   6   7                           
         DC    X'0000C0C1C1810140',X'C30103C00280C241'   0 -                    
         DC    X'C60106C00780C741',X'0500C5C1C4810440'     -  F                 
         DC    X'CC010CC00D80CD41',X'0F00CFC1CE810E40'  10 -                    
         DC    X'0A00CAC1CB810B40',X'C90109C00880C841'     - 1F                 
         DC    X'D80118C01980D941',X'1B00DBC1DA811A40'  20 -                    
         DC    X'1E00DEC1DF811F40',X'DD011DC01C80DC41'     - 2F                 
         DC    X'1400D4C1D5811540',X'D70117C01680D641'  30 -                    
         DC    X'D20112C01380D341',X'1100D1C1D0811040'     - 3F                 
         DC    X'F00130C03180F141',X'3300F3C1F2813240'  40 -                    
         DC    X'3600F6C1F7813740',X'F50135C03480F441'     - 4F                 
         DC    X'3C00FCC1FD813D40',X'FF013FC03E80FE41'  50 -                    
         DC    X'FA013AC03B80FB41',X'3900F9C1F8813840'     - 5F                 
         DC    X'2800E8C1E9812940',X'EB012BC02A80EA41'  60 -                    
         DC    X'EE012EC02F80EF41',X'2D00EDC1EC812C40'     - 6F                 
         DC    X'E40124C02580E541',X'2700E7C1E6812640'  70 -                    
         DC    X'2200E2C1E3812340',X'E10121C02080E041'     - 7F                 
*                   0   1   2   3       4   5   6   7                           
         DC    X'A00160C06180A141',X'6300A3C1A2816240'  80 -                    
         DC    X'6600A6C1A7816740',X'A50165C06480A441'     - 8F                 
         DC    X'6C00ACC1AD816D40',X'AF016FC06E80AE41'  90 -                    
         DC    X'AA016AC06B80AB41',X'6900A9C1A8816840'     - 9F                 
         DC    X'7800B8C1B9817940',X'BB017BC07A80BA41'  A0 -                    
         DC    X'BE017EC07F80BF41',X'7D00BDC1BC817C40'     - AF                 
         DC    X'B40174C07580B541',X'7700B7C1B6817640'  B0 -                    
         DC    X'7200B2C1B3817340',X'B10171C07080B041'     - BF                 
         DC    X'500090C191815140',X'930153C052809241'  C0 -                    
         DC    X'960156C057809741',X'550095C194815440'     - CF                 
         DC    X'9C015CC05D809D41',X'5F009FC19E815E40'  D0 -                    
         DC    X'5A009AC19B815B40',X'990159C058809841'     - DF                 
         DC    X'880148C049808941',X'4B008BC18A814A40'  E0 -                    
         DC    X'4E008EC18F814F40',X'8D014DC04C808C41'     - EF                 
         DC    X'440084C185814540',X'870147C046808641'  F0 -                    
         DC    X'820142C043808341',X'410081C180814040'     - FF                 
         EJECT                                                                  
*-                                                                              
*-       SPECTRT -- Special character TRT table.                                
*-                                                                              
SPECTRT  DC    XL256'00'                                                        
         ORG   SPECTRT+X'0A'       LF (Ctrl-J)                                  
         DC    X'FF'                                                            
         ORG   SPECTRT+X'8A'                                                    
         DC    X'FF'                                                            
*                                                                               
         ORG   SPECTRT+X'0D'       CR (Ctrl-M)                                  
         DC    X'FF'                                                            
         ORG   SPECTRT+X'8D'                                                    
         DC    X'FF'                                                            
*                                                                               
         ORG   SPECTRT+X'5C'       \                                            
         DC    X'FF'                                                            
         ORG   SPECTRT+X'DC'                                                    
         DC    X'FF'                                                            
*                                                                               
         ORG   SPECTRT+X'11'       XON/XOFF (Ctrl-Q,S)                          
         DC    X'FF00FF'                                                        
         ORG   SPECTRT+X'91'                                                    
         DC    X'FF00FF'                                                        
*                                                                               
         ORG   SPECTRT+X'1C'       TIP esc (Ctrl- and friends)                 
         DC    X'FFFFFFFF'                                                      
         ORG   SPECTRT+X'9C'                                                    
         DC    X'FFFFFFFF'                                                      
*                                                                               
         ORG   SPECTRT+X'03'       Ctrl-C                                       
         DC    X'FF'                                                            
         ORG   SPECTRT+X'83'                                                    
         DC    X'FF'                                                            
*                                                                               
         ORG                                                                    
         EJECT                                                                  
*                                                                               
*  SAMTRIM                                                                      
*                                                                               
*  THIS IS THE SAME AS LRTRIM, EXCEPT IT ALSO TRIMS                             
*  LEADING '=' TOO.                                                             
*                                                                               
SAMTRIM  PROC                                                                   
         WHILE ((R0,POS),AND,((@R1,EQ,'='),OR,(@R1,EQ,' '))),BEGIN              
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
         VCALL RTRIM                                                            
         PRETURN (R0,R1)                                                        
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
         VLTORG                                                                 
         END   .                                                                
