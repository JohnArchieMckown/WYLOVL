VETS     TITLE 'WYLBUR''s VTAM Emulated Terminal Support'                       
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
WYLVETS  CSECT                                                                  
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
VTWAR    REG   R6                  Assumed in All Local Routines                
*                                                                               
VETS     IDENT 2025                11:49:37 01/25/02  (SLP)                     
*                                                                               
         SYSDEFN ,                 DEFINE INSTALLATION VALUES                   
         SPACE 2                                                                
&BRANCH  SETC  'YES'              BRANCH ENTRY TO VTAM YES OR NO                
         SPACE 2                                                                
         MACRO                                                                  
         APPLSYN  ,                GENERATE THE APPLICATION NAME                
         LCLA  &COUNT              SYNONYM TABLE                                
&COUNT   SETA  1                                                                
APPLTABL DATA  BEGIN                                                            
.APPLTAB DC    CL8'&SYSLIST(&COUNT,1)',CL8'&SYSLIST(&COUNT,2)'                  
&COUNT   SETA  &COUNT+1                                                         
         AIF   (&COUNT LE N'&SYSLIST).APPLTAB                                   
APPLEND  EQU   *                                                                
         END                                                                    
         MEND                                                                   
         SPACE                                                                  
*        APPLSYN  (ENTERED NAME,NAME OF APPLICATION)                            
         APPLSYN  (WYLBUR,WYLA),(WYL,WYLA),(TSO,SDTS),(TSOA,SDTS),     *        
               (IBMIN,IBM0MON2)                                                 
         EJECT                                                                  
*        Note: In The following comments, SEND and RECEIVE refer to             
*        communicating with the VTAM application - VTAM macros are              
*        used.  --  READ and WRITE refer to communicating with the              
*        ASCII terminal - TSEG macros are used.                                 
*                                                                               
*        OUTBOUND indicates data flow from the IBM Application                  
*        (VTAM RECEIVE)- to This Module - to MILTEN (TSEG WRITE)                
*        - to the User Terminal.                                                
*                                                                               
*        INBOUND indicates data flow from the User Terminal -                   
*        from MILTEN (READ) - to This Module - to the IBM APPLICATION           
*        - (VTAM SEND).                                                         
*                                                                               
*        Representative APPL definition statements are:                         
*                                                                               
*        A070   APPL AUTH=ACQ,EAS=2,VPACING=2,MODETAB=S3278,SESSLIM=YES         
*        A071   APPL AUTH=ACQ,EAS=2,VPACING=2,MODETAB=S3278,SESSLIM=YES         
*        A072   APPL AUTH=ACQ,EAS=2,VPACING=2,MODETAB=S3278,SESSLIM=YES         
*        A073   APPL AUTH=ACQ,EAS=2,VPACING=2,MODETAB=S3278,SESSLIM=YES         
*                                                                               
*        The "SESSLIM=YES" parameter is not required, but recommended.          
*                                                                               
*        Note that the same Mode Table is used as with real terminals.          
*                                                                               
*        The following non-standard Stanford AID codes are used                 
*                                                                               
*            AID     ESC Seq    Meaning                                         
*                                                                               
*            67      ESC-C      Clear-Screen                                    
*            65      ESC-A      ATTN                                            
*            83      ESC-S      PA1                                             
*            68      ESC-D      PA2                                             
*            70      ESC-F      PA3                                             
*                                                                               
         SPACE 3                                                                
         PUSH  DSECTS                                                           
*                                                                               
         CVT   DSECT=YES                                                        
         EJECT                                                                  
         COPY  CONTROL             Copy CV/CP                                   
         EJECT                                                                  
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         POP   DSECTS                                                           
 TITLE '                                           VTAM CONTROL BLOCKS'         
         PUSH  DSECTS                                                           
 TITLE '                                                    WYLBUR ACB'         
         IFGACB AM=VTAM                                                         
         POP   DSECTS                                                           
         SPACE                                                                  
IFGACB   DSECT ,                   ACB - WYLBUR EXTENSION                       
*                                                                               
ACBWOFFS EQU   *+16-IFGACB                                                      
         ORG   IFGACB+(ACBWOFFS+31)/32*32                                       
ACBWSTRT DS    0F                  START OF WYLBUR EXTENSION                    
ACBWNEXT DS    F                   PTR TO NEXT IN CHAIN (circular)              
ACBWVTWA DS    F                   PTR TO USER VTWA                             
ACBWFLAG FLAG  ,                   FLAGS                                        
         FLAG  ACBWON               ON = TERMINAL ENABLED                       
         FLAG  ACBWALLO             ON = TERMINAL ALLOCATED                     
         FLAG  ACBNAVAL             ON = NOT AVAILABLE (FOR SHOW VOPT)          
ACBWAPLT DS    X                   LENGTH OF APPLICATION NAME                   
ACBWAPPL DS    CL8                 APPLICATION NAME (terminal ID)               
ACBWPSLT DS    X                   LENGTH OF PASSWORD                           
ACBWPSWD DS    CL8                 PASSWORD                                     
ACBOLIST OPEN  (ACB),MF=L          LIST FOR OPEN MACRO                          
ACBNRRPL DS    A                   RPL FOR NORMAL FLOW RECEIVE DATA             
ACBNSRPL DS    A                   RPL FOR NORMAL FLOW SEND DATA                
ACBEIRPL DS    A                   RPL FOR EXPEDITED INPUT  & RESPONSES         
ACBEORPL DS    A                   RPL FOR EXPEDITED OUTPUT & RESPONSES         
ACBBTRPL DS    A                   PHONY RPL TO BREAK TERMINAL READ             
ACBWEND  DS    0F                  END OF WYLBUR EXTENSION                      
         SPACE                                                                  
ACB      EQU   IFGACB,ACBWSTRT-IFGACB,C'X'                                      
ACBWYL   EQU   IFGACB,ACBWEND-IFGACB,C'X'                                       
         PUSH DSECTS                                                            
 TITLE '                                                VTAM BIND AREA'         
         ISTDBIND                                                               
 TITLE '                                                      VTAM NIB'         
         ISTDNIB                                                                
 TITLE '                                        MVS PREFIXED SAVE AREA'         
         IHAPSA                                                                 
 TITLE '                                                    WYLBUR RPL'         
         IFGRPL AM=VTAM                                                         
         POP   DSECTS                                                           
         SPACE 3                                                                
IFGRPL   DSECT ,                   RPL - WYLBUR EXTENSION                       
*                                                                               
RPLWOFFS EQU   RPLSIGDA+4+16-IFGRPL                                             
         ORG   IFGRPL+(RPLWOFFS+31)/32*32                                       
RPLWSTRT DS    0F                  START OF WYLBUR EXTENSION                    
RPLWNEXT DS    A                   PTR TO NEXT RPL IN QUEUE                     
RPLWVTWA DS    A                   PTR TO VTWA                                  
RPLWEND  DS    0F                  END OF WYLBUR EXTENSION                      
         SPACE                                                                  
*                                  WYLBUR EQUATES                               
RPLNDR1  EQF RPLVTFL2,RPLNFME,C=' NOT DR1'                                      
RPLDR2   EQF RPLVTFL2,RPLRRN,C=' DR2'                                           
RPLERI   EQF RPLVTFL2,RPLEX,C=' ERROR INDICATOR'                                
RPLCDI   EQF RPLRH3,RPLCMD,C=' CHANGE DIRECTION COMMAND INDICATOR'              
RPLALT   EQF RPLRH3,RPLCSI,C=' ALTERNATE CHARACTER SET (1=ASCII)'               
RPLFMH   EQF RPLOPT12,RPLFMHDR,C=' FORMAT HEADER INDICATOR'                     
RPLCBITS EQF RPLCHN,RPLFIRST+RPLMIDLE+RPLLAST+RPLONLY,C=' CHAIN BITS'           
RPLCFE   EQF RPLCHN,RPLFIRST,C='  CHAIN FIRST ELEMENT'                          
RPLCME   EQF RPLCHN,RPLMIDLE,C='  CHAIN MIDDLE ELEMENT'                         
RPLCLE   EQF RPLCHN,RPLLAST,C='  CHAIN LAST ELEMENT'                            
RPLCOE   EQF RPLCHN,RPLONLY,C='  CHAIN ONLY ELEMENT'                            
RPLBBI   EQF RPLRH3,RPLBB,C=' BEGIN BRACKET INDICATOR'                          
RPLEBI   EQF RPLRH3,RPLEB,C=' END BRACKET INDICATOR'                            
RPLRSENS EQU RPLSSEI,4,C'X'        RECEIVE LOGICAL UNIT SENSE                   
RPLSSENS EQU RPLSSEO,4,C'X'        SEND LOGICAL UNIT SENSE                      
         SPACE                                                                  
RPL      EQU   IFGRPL,RPLWSTRT-IFGRPL,C'X'                                      
RPLWYL   EQU   IFGRPL,RPLWEND-IFGRPL,C'X'                                       
 TITLE 'LOCAL CONTROL BLOCKS                                      VTWA'         
WYLVETS  CSECT                                                                  
         SPACE                                                                  
***                                                                             
***  VTWA --                                                                    
***    Vtam terminal work area.  This control block is allocated                
***    when a user first creates a VTAM terminal session and                    
***    remains allocated to that user until a VLOGOFF command is                
***    issued, or until he logs off.                                            
***                                                                             
VTWA     RECORD BEGIN              Page work area                               
VTWID    DS    CL4                 SELF IDENTIFICATION ("VTWA")                 
*                                                                               
VTWFLAG1 FLAG                                                                   
         FLAG  VTWFUACT             USER IS ACTIVE                              
         FLAG  VTWF14B              14 BIT BUFFER ADDRESSING IN USE             
         FLAG  VTWFFMT              SCREEN IS FORMATED (HAS A FAC)              
         FLAG  VTWFHATT             ATTENTION RECEIVED FROM HOST                
         FLAG  VTWFFREZ             ERROR 10A RECEIVED - FREEZE SESSION         
         FLAG  VTWFRNXT             RENEX TRANSPARENCY MODE                     
         FLAG  VTWFALT              ALTERNATE SCREEN SIZE IN USE                
         FLAG  VTWFLPR              LAST PART OF RU RECEIVED                    
VTWFLAG2 FLAG                                                                   
         FLAG  VTWIWFDR             INBOUND WAITING FOR DEF RESP                
         FLAG  VTWFDR               TERMINAL MAY REQ DEF RESP                   
         FLAG  VTWFER               TERMINAL MAY REQ EXCEPT RESP                
         FLAG  VTWFBUSQ             BIND-UNBIND SEQUENCE                        
         FLAG  VTWFSHUT             SHUT DOWN REQUESTED                         
         FLAG  VTWFLOST             LOST TERM RECEIVED                          
         FLAG  VTWFCLNU             DO NO VTAM IO - CLEANUP                     
         FLAG  VTWFTEND             VTAM HAS ENDED                              
VTWFLAG3 FLAG                                                                   
         FLAG  VTWFWSCR             CHANGED SCREEN TO WRITE                     
         FLAG  VTWFRCDI             CHANGE DIRECTION RECEIVED                   
         FLAG  VTWFREBI             END BRACKET RECEIVED                        
         FLAG  VTWFSCDI             CHANGE DIRECTION TO SEND                    
         FLAG  VTWFSBBI             BEGIN BRACKET TO SEND                       
         FLAG  VTWFSDR              SEND DEFINITE RESPONSE                      
         FLAG  VTWFSR1              SEND DR1/ER1                                
         FLAG  VTWFSR2              SEND DR2/ER2                                
VTWFLAG4 FLAG                                                                   
         FLAG  VTWF3270             USER IS AT A REAL 3270 TERMINAL             
         FLAG  VTWFCOLOR            COLOR TERMINAL                              
         FLAG  VTWFHI               3270 EXTENDED ATTRIBUTES                    
         FLAG  VTWFGE               3270 GRAPHIC ESCAPE                         
         FLAG  VTWFBEL              BELL CHARACTER TO BE SENT                   
         FLAG  VTWFKLOK             KEYBOARD IS LOCKED                          
         SPACE                                                                  
VSSTATE  DS    X                   STATE OF THE VTAM SESSION                    
VSNOACB  EQS   VSSTATE,00           NO ACB ATTACHED                             
VSACBCLO EQS   VSSTATE,01           ACB CLOSED                                  
VSACBOPE EQS   VSSTATE,02           ACB OPENED                                  
VSWFBIND EQS   VSSTATE,03           WAITING FOR A BIND                          
VSWFSDT  EQS   VSSTATE,04           WAITING FOR SDT                             
VSCONT   EQS   VSSTATE,05           CONTENTION                                  
VSCONT1  EQS   VSSTATE,06           CONTENTION - KEYBOARD LOCKED                
VSCONT2  EQS   VSSTATE,07           CONTENTION - BID RECEIVED                   
VSINB    EQS   VSSTATE,08           INBOUND (TO APPL)                           
VSOUTB   EQS   VSSTATE,09           OUTBOUND (TO TERMINAL)                      
VSOUTBSS EQS   VSSTATE,10           OUTBOUND SIGNAL SENT                        
VSUNBIND EQS   VSSTATE,11           UNBIND RECEIVED                             
VSLOSTER EQS   VSSTATE,12           LOSTERM RECEIVED                            
VSCLEAN  EQS   VSSTATE,13           CLEANUP RECEIVED                            
VSVEND   EQS   VSSTATE,14           VTAM HAS ENDED                              
         SPACE                                                                  
POSTREAS FLAG  ,                   POST REASON                                  
         FLAG  POSTSDT              START DATA TRAFFIC RECEIVED                 
         FLAG  POSTSENC             SEND COMPLETED                              
         FLAG  POSTRCVC             RECEIVE COMPLETED                           
         FLAG  POSTBIND             BIND RECEIVED                               
         FLAG  POSTUBIR             UNBIND RECEIVED                             
         FLAG  POSTLOST             LOSTERM RECEIVED                            
         FLAG  POSTSHUT             SHUTDOWN RECEIVED                           
         SPACE                                                                  
VTWR     DS    X               COMMAND TO RESPOND TO IF VTWFSR1+VTWFSR2         
VTWRUD   EQS   VTWR,01              USER DATA                                   
VTWRCAN  EQS   VTWR,02              CANCEL                                      
VTWRLUS  EQS   VTWR,03              LUGICAL UNIT STATUS                         
VTWRBID  EQS   VTWR,04              BID                                         
         SPACE                                                                  
RS3270   DS    X                   READ STATE OF THE 3270                       
RSNORM   EQS   RS3270,1             NORMAL READ                                 
RSRETRYE EQS   RS3270,5             RETRY ENTER (USER AID)                      
RSRETRYR EQS   RS3270,6             RETRY READ  (QUERY)                         
         SPACE                                                                  
AID3270R DS    X                   AID CHARACTER RECEIVED                       
AID3270  DS    X                   3270 AID CHARACTER RECEIVED                  
VTWRCMD  DS    X                   READ COMMAND TO BE PROCESSED                 
VTWRMODE DS    X                   REPLY MODE (0,1, OR 2)                       
VTWQLIST DS    XL16                LIST FOR QUERY REPLY                         
*                                                                               
         DS    0F                                                               
VTWHEI   DS    H                   SCREEN HEIGHT CURRENT                        
VTWWID   DS    H                   SCREEN WIDTH                                 
VTWBUFL  DS    F                   Buffer length (height*width)                 
*                                                                               
VTWHEID  DS    H                   SCREEN HEIGHT DEFAULT                        
VTWWIDD  DS    H                   SCREEN WIDTH                                 
VTWBUFLD DS    F                   BUFFER LENGTH (HEIGHT*WIDTH)                 
*                                                                               
VTWHEIA  DS    H                   SCREEN HEIGHT ALTERNATE                      
VTWWIDA  DS    H                   SCREEN WIDTH                                 
VTWBUFLA DS    F                   BUFFER LENGTH (HEIGHT*WIDTH)                 
*                                                                               
VTWHEIT  DS    H                   SCREEN HEIGHT PHYSICAL TERMINAL              
VTWWIDT  DS    H                   SCREEN WIDTH                                 
*                                                                               
VTWBUFGC DS    F                   GETCORE SIZE OF SCREEN BUFFERS               
*                                                                               
VTWAECB  DS    F                   ECB FOR VTAM ASYNCHRONOUS OPERATIONS         
VTWSECB  DS    F                   ECB FOR IN=LINE WAITS                        
VTWBINDP DS    A                   POINTER TO BIND IMAGE                        
VTWAAPPL DS    CL8                 NAME OF PRIMARY LU                           
VTWACID  DS    F                   CID OF VTAM SESSION WITH APPLICATION         
VTWAACBP DS    A                   POINTER TO VTAM ACB                          
VTWANIBP DS    A                   POINTER TO VTAM NIB (WHEN PRESENT)           
VTWRSIZI DS    F                   VTAM RUSIZE INBOUND (TO APPLICATION)         
VTWRSIZO DS    F                   RUSIZE OUTBOUND (FROM APPLICATION)           
VTWIRUC  DS    F                   HEAD OF INBOUND RU CHAIN                     
VTWORUC  DS    F                   HEAD OF OUTBOUND RU CHAIN                    
VTWIBLST DS    F                   POINTER TO VTAM BUFFLST                      
VTWSRSEQ DS    H                   SEQ NUMBER TO RESPOND TO                     
VTWSSENS DS    F                   LU SENSE TO BE SENT                          
VTWRSENS DS    F                   RECEIVED LU SENSE | LU STATUS                
VTWSRTNC DS    0F                  SEND ABNORMAL RETURN CODES                   
VTWSRTN  DS    H                                                                
VTWSFDBK DS    H                                                                
VTWRRTNC DS    0F                  RECEIVE ABNORMAL RETURN CODES                
VTWRRTN  DS    H                                                                
VTWRFDBK DS    H                                                                
VTWCPSAV DS    F                   SAV CPR ON LOGON                             
VTWLNSAV DS    F                   SAV LINE NUMBER ON LOGON                     
*                                                                               
VTWICPOS DS    F                   Insert Cursor Index                          
*                                                                               
*  Screen image:                                                                
*     Each character that is to be displayed on the screen has                  
*     information in each of the following buffers. These buffers               
*     are maintained in 3270 format.                                            
*                                                                               
*     Field attribute characters (FAC) are stored as text.  They are            
*     identified as being less than X'40', but not Null (X'00').                
*     The X'02' bit (Reserved in IBM's definition) is turned on                 
*     when any FAC is stored, so that a X'00' FAC will not appear as            
*     a character "NULL".                                                       
*                                                                               
*   Because the Wylbur Model Terminal does not distinguish between              
*     NULL (X'00') and SPace (X'40'), NULLs will be changed to SPaces           
*     when data is read from the ASCII terminal, and trailing SPaces            
*     (in addition to NULLs) will be stripped from incoming fields.             
*                                                                               
VTWTEXTP DS    A                   Screen Text PTR                              
VTWHIP   DS    A                   Screen Highlight PTR                         
VTWCOLP  DS    A                   Screen Color PTR                             
VTWCSP   DS    A                   Screen Character Set                         
         END                                                                    
 TITLE 'LOCAL CONTROL BLOCKS                                      VTBH'         
***                                                                             
***  VTBH --                                                                    
***    VTAM TERMINAL BUFFER HEADER.  THIS CONTROL BLOCK IS PLACED               
***    BEFORE THE VTAM RU, IN ORDER TO FORM A CHAIN OF BUFFERS                  
***    IN MEMORY                                                                
***                                                                             
         SPACE 2                                                                
VTBHEAD  RECORD BEGIN              BUFFER HEADER                                
VTBID    DS    CL4                 SELF IDENTIFICATION ("VTBH")                 
VTBNEXT  DS    A                   POINTER TO NEXT BUFFER (0=LAST)              
VTBDLENG DS    H                   LENGTH OF DATA AREA IN BUFFER                
VTBCOUNT DS    H                   COUNT OF DATA IN BUFFER                      
VTBSEQNO DS    H                   VTAM SEQUENCE NUMBER                         
VTBFLAG1 FLAG  ,                   FLAGS                                        
         FLAG  VTBFPROC             THIS BUFFER HAS BEEN PROCESSED              
         FLAG  VTBFLIC              THIS BUFFER IS LAST IN CHAIN                
         FLAG  VTBFALT              ALTERNATE CHARACTER SET INDICATOR           
         FLAG  VTBFCDI              CHANGE DIRECTION INDICATOR RECEIVED         
         FLAG  VTBFBBI              THIS BUFFER IS BEGINNING OF BRACKET         
         FLAG  VTBFEBI              THIS BUFFER IS END OF BRACKET               
         DS    X                                                                
VTBDATA  DS    0X                  DATA FOR THE RU                              
         END                                                                    
 TITLE '                                                  LOCAL MACROS'         
         MACRO                                                                  
&LABEL   ERROR &STRING                                                          
&KSTRING SETA  K'&STRING                                                        
&LABEL   BAL   R15,ERR&SYSNDX                                                   
         DC    AL2(&KSTRING-2),C&STRING                                         
ERR&SYSNDX DS  0H                                                               
         MEND                                                                   
 TITLE 'User Command                  SETVOPT -- SET VOPTIONS command'          
*                                                                               
**  SETVOPT -- SET VOPTIONS Command.                                            
*                                                                               
*  SET VOPT [terminal_name[,number]] [,{ON|OFF}]                                
*                                                                               
*  "terminal_name" omitted enables|disables entire interface                    
*  "number" indicates number of consecutive terminals                           
*  "number" omitted defines only one terminal                                   
*  "ON" (default) defines and enables the terminals or interface                
*  "OFF" defines and disables the terminals or interface                        
*                                                                               
         SPACE                                                                  
         DATA  BEGIN                                                            
VETSFLG  FLAG  ,                   FLAGS                                        
         FLAG  VACTIVE             INTERFACE HAS BEEN REFERENCED                
         FLAG  VON                 INTERFACE IS ENABLED                         
         FLAG  SHOVA               FOR SHO VOPT (parm "A" specified)            
         FLAG  SHOVSHON            FOR SHO VOPT (some terminal shown)           
ACBPTR   DC    A(0)                POINTER TO ACB (TERMINAL) LIST               
LASTAACB DC    A(0)                POINTER TO LAST ASSIGNED                     
TERMNAME DC    CL8' '              WORK AREA FOR NEXTNAME                       
TERMILIM DC    F'0'                                                             
TERMNUMB DC    F'0'                                                             
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =  NUMBER OF TERMINALS                                              
**       R3 =  L'NAME                                                           
**       R4 =  NAME                                                             
**       R5 =  ACB                                                              
**       R6 =  ON/OFF REMEMBERANCE                                              
*                                                                               
         SPACE                                                                  
SETVOPT  GENTER                                                                 
*QSNAP 'ENTERED SETVOPT'                                                        
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'Command not yet available in '                                  
         ABORT 'production Wylbur.'                                             
         END                                                                    
*                                                                               
         IF    (^CPSFOPR),'ABORT "Invalid command"'                             
         SPACE                                                                  
         IF    (^VACTIVE),'SET VACTIVE+VON'        ACTIVATE INTERFACE           
         CLEAR R4,R2               NO NAME OR NUMBER YET                        
         LA    R6,1                DEFAULT ON                                   
         LOOP  BEGIN               BEGIN LOOP                                   
         SCAN  ,                   GET PARM                                     
         SCANCHK                                                                
         IF    (R0,Z),EXIT         EXIT NO MORE                                 
         IF    ((R0,EQ,X'2'),AND,((@R1,EQ,C'ON'),OR,(@R1,EQ,C'on'))),  *        
               'LA R6,1'                                                        
        ELSEIF ((R0,EQ,X'3'),AND,((@R1,EQ,C'OFF'),OR,(@R1,EQ,C'off'))),*        
               'CLEAR R6'                                                       
         ELSEIF (@R1,GE,X'F0'),BEGIN         IF NUMBER                          
         DTB   @R1,(R0)                                                         
         LR    R2,R15                                                           
         END   ,                             END NUMBER                         
         ELSE  BEGIN                         ELSE NAME                          
         LR    R3,R0                                                            
         CEIL  R3,8                                                             
         LR    R4,R1                                                            
         END   ,                             END NAME                           
         END   ,                             END LOOP                           
         SPACE                                                                  
         IF    (R4,ZERO),BEGIN               IF NO NAME                         
         IF    (R6,POS),'SET VON'                                               
         ELSE  'CLEAR VON'                                                      
         END   ,                             END NO NAME                        
         SPACE                                                                  
         ELSE  BEGIN                         ELSE NAME                          
         LR    R0,R3                                                            
         LR    R1,R4                                                            
         LCALL NEXTNAME                      GET THE FIRST NAME                 
         SPACE                                                                  
         WHILE (R1,NZ),BEGIN                 WHILE MORE TERMINALS               
         LCALL FINDNAME                      FIND THE ACB                       
         LTR   R5,R1                                                            
         WITH  (ACBWYL,R5)                                                      
         IF    (ZERO),BEGIN                  IF NO ACB                          
         ACALL GENACB                        GENERATE ONE                       
         LTR   R5,R1                                                            
         IF    (ZERO),'ABORT "GENACB FAILED"'                                   
         STC   R3,ACBWAPLT                   MOVE IN NAME                       
         MVC   ACBWAPPL,TERMNAME                                                
         LT    R1,ACBPTR                     ADD TO LIST                        
         IF    (ZERO),BEGIN                  IF EMPTY                           
         ST    R5,ACBWNEXT                                                      
         ST    R5,ACBPTR                                                        
         ST    R5,LASTAACB                                                      
         END   ,                             END EMPTY                          
         SPACE                                                                  
         ELSE  BEGIN                         ELSE ADD                           
         ST    R1,ACBWNEXT                                                      
         LR    R2,R1                                                            
         WITH  (ACBWYL,R2),BEGIN                                                
         WHILE (R1,NE,ACBWNEXT),'L R2,ACBWNEXT'                                 
         ST    R5,ACBWNEXT                                                      
         END                                                                    
         END   ,                             END ADD                            
         END   ,                             END NO ACB                         
         SPACE                                                                  
         IF    (R6,POS),'SET ACBWON'                                            
         ELSE  'CLEAR ACBWON'                                                   
         SPACE                                                                  
         CLEAR R0                                                               
         LCALL NEXTNAME                      GET NEXT NAME                      
         END   ,                             END MORE TERMINALS                 
         END   ,                             END NAME                           
         SPACE                                                                  
         B     CVNEXT                        RETURN                             
         DROP  BR                                                               
  TITLE  'VLOGCHK -- Check to see if VLOGONs are allowed'                       
*box                                                                            
*                                                                               
*  VLOGCHK -- Routine to check to see if VLOGONs are allowed.                   
*    Called from the VLOGON function.                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - allowed                                                              
*      1 - not allowed                                                          
*                                                                               
VLOGCHK  XPROC                                                                  
         IF    VON,'CLEAR R15'     VLOGONs are allowed                          
         ELSE  'LA R15,1'                                                       
         PEND                                                                   
  TITLE  'VSESCHK -- Check to see if a VLOGON session is active'                
*box                                                                            
*                                                                               
*  VSESCHK -- Routine to check to see if a VLOGON session is                    
*    currently active.  Called from the VSESSION function.                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - no                                                                   
*      1 - yes                                                                  
*                                                                               
VSESCHK  XPROC                                                                  
         IF    (CPVTWAP,Z),'CLEAR R15'  No session                              
         ELSE  'LA R15,1'          Yes, a session is active                     
         PEND                                                                   
 TITLE 'User Command                 SHOWVOPT -- SHOW VOPTIONS command'         
*                                                                               
**  SHOWVOPT -- SHOW VOPTIONS command.                                          
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 = FIRST ACB                                                         
**       R4 = USER CONTROL PAGE                                                 
**       R5 = ACB                                                               
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
SHOWVOPT GENTER                                                                 
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'Command not yet available in '                                  
         ABORT 'production Wylbur.'                                             
         END                                                                    
*                                                                               
         CLEAR SHOVA+SHOVSHON                                                   
         SCAN  ,                   GET PARM                                     
         SCANCHK                                                                
         IF    ((R0,POS),AND,(@R1,EQ,C'A')),'SET SHOVA'                         
         SPACE                                                                  
         TSEG  CVWYLSSN,,TB                                                     
         TSEG  'Interface  '                                                    
         IF    (VON),'TSEG "ON   "'                                             
         ELSE  'TSEG "OFF  "'                                                   
         IF    (^VACTIVE),'TSEG "Inactive",,CR'                                 
         SPACE                                                                  
         ELSE  BEGIN               ELSE INTERFACE IS ACTIVE                     
         TSEG  'Active',,CR                                                     
         L     R5,ACBPTR           R5 := TERMINAL ACB                           
         WITH  (ACBWYL,R5)                                                      
         LTR   R3,R5               SAVE FIRST ACB                               
         IF    (ZERO),'TSEG "No Terminals exist",,CR'                           
         ELSE  BEGIN               ELSE (TERMINALS EXIST)                       
         TSEG   'V-Terminal     Line Application',,CR                           
         LOOP  BEGIN               TERMINAL LOOP                                
         IF    (^SHOVA,OR,ACBWALLO),BEGIN    IF SHOW                            
         SET   SHOVSHON                                                         
         TSEG  ACBWAPPL                                                         
         TCOL  12                                                               
         IF    (ACBWON),'TSEG "ON  "'                                           
         ELSE  'TSEG "OFF "'                                                    
         IF    (ACBWALLO),BEGIN    IF ALLOCATED                                 
         L     R6,ACBWVTWA         R6 := A(USER VTWA)                           
         WITH  (VTWA,R6)                                                        
         L     R4,VTWCPSAV         R4 := USER CONTROL PAGE                      
         WITH  (CP,R4),'LH R2,CPSNO'                                            
         TNUM  (R2)                                                             
         TCOL   21                                                              
         IF    ((VTWAAPPL,EQ,X'00'),OR,(VTWAAPPL,EQ,X'40')),           X        
               'TSEG "   -- "'                                                  
         ELSE  'TSEG VTWAAPPL'                                                  
         TCR                                                                    
         SPACE                                                                  
         END   ,                   END ALLOCATED                                
         SPACE                                                                  
         ELSE  BEGIN               ELSE (NOT ALLOCATED)                         
         IF    (ACBNAVAL),'TSEG "V-Terminal not available"'                     
         TCR                                                                    
         END   ,                   END (NOT ALLOCATED)                          
         END   ,                             END SHOW                           
         SPACE                                                                  
         L     R5,ACBWNEXT         STEP TO NEXT TERMINAL                        
         IF    ((R5,ZERO),OR,(R5,EQ,R3)),EXIT                                   
         END   ,                   END TERMINAL LOOP                            
         SPACE                                                                  
         IF    (SHOVA,AND,^SHOVSHON),                                  X        
               'TSEG "No Allocated Terminals Exist",,CR'                        
         END   ,                   END TERMINALS EXIST                          
         END   ,                   END INTERFACE IS ACTIVE                      
         SPACE                                                                  
         B     CVNEXT              EXIT                                         
         DROP  BR                                                               
 TITLE '                        NEXTNAME -- Returns Next Terminal Name'         
*                                                                               
**  NEXTNAME -- Routine to return the next name of a terminal when              
**              the first name and binary count are known.                      
**                                                                              
*                                                                               
**    On entry:                                                                 
**      R0 = L'name for initial call                                            
**      R0 = 0 for sucessive calls                                              
**      R1 = @name for initial call                                             
**      r2 = 0 for only 1 terminal                                              
**      r2 = binary number of sucessive terminals                               
*                                                                               
**    On exit:                                                                  
**      R1 = @name of terminal, 8 characters blank filled                       
**      R0 = 0 indicates all applicable names have been delivered               
**                                                                              
** Note: Trailing digits in the name are incremented, until the number          
**       has been satisfied, or until all digits are "9".                       
**       The initialization call will always return the name entered,           
**       with trailing spaces.                                                  
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 = NUMBER OF TERMINALS (INITIAL CALL ONLY)                           
**       R3 = WORK                                                              
**       R4 = INDEX                                                             
**       R5 = INDEX LIMIT                                                       
**       R6 =                                                                   
*                                                                               
         SPACE                                                                  
NEXTNAME PROC  ,                   DELIVER NAME OF NEXT TERMINAL                
*QSNAP 'ENTERED NEXTNAME'                                                       
         IF    ('LTR R5,R0',NZ),BEGIN        IF INITIAL CALL                    
         MVC   TERMNAME,=X'4040404040404040'                                    
         CEIL  R5,8                                                             
         DEX   R5,'MVC TERMNAME(0),@R1'      SAVE NAME                          
         ST    R5,TERMILIM                   SAV INDEX LIMIT                    
         IF    (R2,NP),'LA R2,1'                                                
         ST    R2,TERMNUMB                                                      
         LA    R1,TERMNAME                                                      
         END   ,                             END INITIAL CALL                   
         SPACE                                                                  
TERM2ND  ELSE  BEGIN                         ELSE 2ND CALL                      
         CLEAR R1                                                               
         IF    (TERMNUMB,NZ),BEGIN           IF NUMBER NOT EXAUSTED             
         LA    R1,TERMNAME                                                      
         L     R4,TERMILIM                                                      
         LC    R3,TERMNAME(R4)               R3 := DEC DIGIT                    
         SPACE                                                                  
TERMLOOP WHILE ((R4,POS),AND,(R3,GE,X'F0')),BEGIN                               
         INCR  R3                            ADD 1                              
         IF    (R3,LE,X'F9'),BEGIN           IF NO CARRY                        
         STC   R3,TERMNAME(R4)                                                  
         LA    R1,TERMNAME                                                      
         EXIT  TERM2ND                       EXIT                               
         END   ,                             END NO CARRY                       
         ELSE  BEGIN                         ELSE CARRY                         
         IC    R3,=X'F0'                                                        
         STC   R3,TERMNAME(R4)                                                  
         DECR  R4                                                               
         IC    R3,TERMNAME(R4)                                                  
         END   ,                             END CARRY                          
         END   ,                             END TERMLOOP                       
         CLEAR R1                            CARRIED TOO FAR                    
         END   ,                             END NUMBER NOT EXHAUSTED           
         END   ,                             END 2ND CALL                       
         SPACE                                                                  
         DECR  R15,TERMNUMB                                                     
         PRETURN R1                                                             
         PEND                                                                   
 TITLE '                              FINDNAME -- Returns Terminal ACB'         
*                                                                               
**  FINDNAME -- Routine to return the ACB of a terminal when                    
**              the terminal name is known.                                     
**                                                                              
*                                                                               
**    On entry:                                                                 
**      TERMNAME contains the name of the terminal                              
*                                                                               
**    On exit:                                                                  
**      R1 = @ACB of the terminal                                               
**      R1 = 0 indicates the ACB does not exist                                 
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = STARTING ACB                                                      
**       R5 = CURRENT ACB                                                       
**       R6 =                                                                   
*                                                                               
         SPACE                                                                  
FINDNAME PROC  ,                   FIND ACB BASED ON NAME                       
*QSNAP 'ENTERED FINDNAME'                                                       
         CLEAR R1                                                               
         L     R5,ACBPTR                                                        
         LTR   R4,R5                                                            
         IF    (NZ),BEGIN          IF  SOME PRESENT                             
         WITH  (ACBWYL,R5)                                                      
         WHILE (TERMNAME,NE,ACBWAPPL),BEGIN  LOOP                               
         L     R5,ACBWNEXT                                                      
         IF    (R5,EQ,R4),EXIT                                                  
         END   ,                             END LOOP                           
         SPACE                                                                  
         IF    (TERMNAME,EQ,ACBWAPPL),'LR R1,R5'                                
         END   ,                   END SOME PRESENT                             
         SPACE                                                                  
         PRETURN R1                                                             
         PEND                                                                   
 TITLE 'User Command                 SHOWVSES -- SHOW VSESSION command'         
*                                                                               
**  SHOWVSES -- SHOW VSESSION command.                                          
*                                                                               
         SPACE                                                                  
SHOWVSES GENTER                                                                 
*QSNAP 'ENTERED SHOWVSES'                                                       
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'Command not yet available in '                                  
         ABORT 'production Wylbur.'                                             
         END                                                                    
*                                                                               
         TSEG  'VTWA at '                                                       
         THEX  L:CPVTWAP,8                                                      
*                                                                               
         B     CVNEXT                                                           
*                                                                               
         DROP  BR                                                               
 TITLE 'User Command                   SETVSES -- SET VSESSION command'         
*                                                                               
**  SETVSES -- SET VSESSION Command.                                            
*                                                                               
         SPACE                                                                  
SETVSES  GENTER                                                                 
*QSNAP 'ENTERED SETVSES'                                                        
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'Command not yet available in '                                  
         ABORT 'production Wylbur.'                                             
         END                                                                    
*                                                                               
         TSEG  'SET VSESSION is not implemented.'                               
         B     CVNEXT                                                           
*                                                                               
         DROP  BR                                                               
 TITLE 'User Command                          VLOGON -- VLOGON command'         
*                                                                               
**  VLOGON -- VLOGON Command.                                                   
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
VLOGON   GENTER                                                                 
*QSNAP 'ENTERED VLOGON'                                                         
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'VLOGON command not yet available in '                           
         ABORT 'production Wylbur.'                                             
         END                                                                    
*                                                                               
         LT    R6,CPVTWAP                                                       
         IF    NZ,BEGIN                                                         
         TSEG  'You are already logged on to a VTAM session.',,CR               
         ABORT 'Type VGO to continue that session.'                             
         END                                                                    
*                                                                               
         IF    (^VON),BEGIN                                                     
         ABORT 'The VLOGON interface is not active'                             
         END                                                                    
*                                                                               
         VCALL PAGETCHK            TERMINAL MUST BE PAGE MODE                   
*                                                                               
         LCALL LOGON               DO THE WORK (returns @VTWA in R6)            
         SPACE                                                                  
         SET CPFDISP                                                            
         L     BR,=A(MAINLINE)     BRANCH TO MAINLINE                           
         BR    BR                                                               
         LTORG                                                                  
 TITLE '                          LOGON -- Process the VLOGON command'          
*                                                                               
**   LOGON -- Routine to process the VLOGON command.  Called in order           
**            to obtain a work area.                                            
**                                                                              
**    On entry:                                                                 
**      logon parameters to be obtained.                                        
**                                                                              
**    On exit:                                                                  
**      R6 = @VTWA returned.                                                    
**      VLOGON control blocks have been obtained                                
**      and session has been requested.  The next                               
**      expected activity is the receipt of a BIND.                             
*                                                                               
         SPACE                                                                  
LOGONWA  RECORD BEGIN              WORK AREA                                    
MODENL   DS    F                   LENGTH OF LOGMODE_NAME                       
MODEN    DS    CL8                 LOGMODE_NAME                                 
UDATAL   DS    F                   LENGTH OF USER_DATA                          
UDATA    DS    A                   @ USER_DATA                                  
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 = RPL                                                               
**       R4 = NIB                                                               
**       R5 = ACB                                                               
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
LOGON    PROC  LOGONWA             PROCESS LOGON COMMAND                        
*QSNAP 'ENTERED LOGON'                                                          
         SPACE                                                                  
         CLEAR LOGONWA                                                          
         SPACE                                                                  
         ACALL GETVTWA             GET A VTWA                                   
         L     R6,CPVTWAP                                                       
         USING VTWA,R6                                                          
         SET VTWFUACT              SET THE USER ACTIVE                          
         SPACE                                                                  
*                                                                               
         SPACE                                                                  
         SCAN   ,                   GET THE APPLICATION NAME                    
         SCANCHK                                                                
         IF    (R0,Z),BEGIN                                                     
         ERROR 'MISSING APPLICATION NAME'                                       
         B     VLERROR                                                          
         END                                                                    
         SPACE                                                                  
         LR    R2,R0                                                            
         CEIL  R2,8                                                             
         DEX   R2,'MVC VTWAAPPL(0),@R1'  SAVE THE APPLICATION NAME              
         SPACE                                                                  
         OC    VTWAAPPL,=X'4040404040404040'  FORCE UPPER                       
         CLEAR R2                  CHECK FOR A SYNONYM                          
         L     R15,=A(APPLTABL)                                                 
SYNONYM  WHILE (R2,LT,APPLEND-APPLTABL),BEGIN                                   
         LA    R1,@R15(R2)                                                      
         CLC   VTWAAPPL,@R1                                                     
         IF    (EQ),'MVC VTWAAPPL,@R1+8; EXIT SYNONYM'                          
         LA    R2,@R2+16                                                        
         END   ,                                                                
         SPACE                                                                  
         TRT   VTWAAPPL,CHARCHK    CHECK FOR INVALID CHARACTERS                 
         IF    (NZ),BEGIN                                                       
         ERROR 'INVALID APPLICATION NAME'                                       
         B     VLERROR                                                          
         END                                                                    
         SPACE                                                                  
LOGPARMS LOOP  BEGIN,              GET ADDITIONAL PARMS                         
         SCAN  ,                                                                
         SCANCHK                                                                
         IF    (R0,Z),EXIT                                                      
         LR    R2,R0               PARM AVAILABLE                               
         IF    ((R2,EQ,=F'1'),AND,(@R1,EQ,C'M')),BEGIN  IF M=LOGMODE            
         SCAN  ,                                                                
         SCANCHK                                                                
         IF    (R0,Z),'EXIT LOGPARMS'                                           
         LR    R2,R0               LOGMODE NAME AVAILABLE                       
         CEIL  R2,8                                                             
         IF    (MODENL,ZERO),BEGIN                                              
         ST    R2,MODENL                                                        
         DEX   R2,'MVC MODEN(0),@R1'                                            
         OC    MODEN,=X'4040404040404040'  FORCE UPPER                          
         TRT   MODEN,CHARCHK       CHECK FOR INVALID CHARACTERS                 
         IF    (NZ),BEGIN                                                       
         ERROR 'INVALID LOGON_MODE NAME'                                        
         B     VLERROR                                                          
         END                                                                    
         SPACE                                                                  
         END   ,                                                                
         END   ,                                       END M=LOGMODE            
         SPACE                                                                  
         ELSE  BEGIN               ELSE USER DATA                               
         IF    (UDATAL,ZERO),BEGIN                                              
         IF    (@R1,EQ,X'7D'),BEGIN IF QUOTED STRING                            
         INCR  R1                  DEQUOTE THE STRING                           
         SL    R2,=F'2'                                                         
         END   ,                   END QUOTED STRING                            
         SPACE                                                                  
         ST    R2,UDATAL                                                        
         ST    R1,UDATA                                                         
         END   ,                                                                
         END   ,                   END USER DATA                                
         END   ,                   END GET ADDITIONAL PARMS                     
         SPACE                                                                  
*                                                                               
         ACALL GETACB              GET AN OPEN ACB                              
*                                                                               
         IF    (R1,NZ),VLERROR     ERROR IF NOT OPENED                          
         SPACE                                                                  
         COMMENT                   ELSE OPEN SUCCESSFUL                         
         SET   VSACBOPE            SET THE STATE                                
         USING ACB,R5              R5 := @ACB                                   
         ST    R5,VTWAACBP                                                      
         ST    R6,ACBWVTWA                                                      
         SPACE                                                                  
         L     R3,ACBNRRPL                                                      
         USING RPL,R3                                                           
         ST    R6,RPLWVTWA                                                      
         L     R3,ACBNSRPL                                                      
         ST    R6,RPLWVTWA                                                      
         L     R3,ACBEIRPL                                                      
         ST    R6,RPLWVTWA                                                      
         L     R3,ACBEORPL                                                      
         ST    R6,RPLWVTWA                                                      
         L     R3,ACBBTRPL                                                      
         ST    R6,RPLWVTWA                                                      
         SPACE                                                                  
*                                                                               
         LT    R4,VTWANIBP         GET THE NIB                                  
         IF    (ZERO),BEGIN        IF NIB NOT PRESENT                           
         LA    R2,NIBLNIB          R2 := L'NIB                                  
         LR    R0,R2                                                            
         VCALL GETCORE                                                          
         LR    R4,R1               R4 := @NIB                                   
         USING ISTDNIB,R4                                                       
         ST    R4,VTWANIBP                                                      
         SPACE                                                                  
         GENCB BLK=NIB,AM=VTAM,WAREA=(R4),LENGTH=(R2),PROC=KEEP,       *        
               USERFLD=0,MODE=RECORD,SDT=SYSTEM,RESPLIM=1,LISTEND=YES           
         FAIL  (R15,NZ),VLOGON,'GENERATE NIB REFUSED'                           
         END   ,                   END NIB NOT PRESENT                          
         SPACE                                                                  
*                                  DO A SETLOGON                                
*QSNAP 'DO A SETLOGON'                                                          
SLOGON   L     R3,ACBEORPL         R3 := @ RPL                                  
         USING RPL,R3                                                           
         SPACE                                                                  
         CLEAR VTWSECB                                                          
         SETLOGON RPL=(R3),OPTCD=(ASY,START),ECB=VTWSECB                        
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         CHECK RPL=(R3)                                                         
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,SLOGTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
SLOGTABL DC    A(SLOGNORM)         NORMAL                                       
         DC    A(SLOGERR)          ERROR SYNAD                                  
         DC    A(SLOGON)           RETRY                                        
         DC    A(SLOGERR)          ERROR INTEGRETY                              
         DC    A(SLOGENV)          ERROR ENVIRONMENT                            
         DC    A(SLOGERR)          ERROR LOGIC                                  
         DC    A(SLOGERR)          ERROR BAD RPL                                
         DC    A(SLOGACB)          ERROR ACB NOT OPEN                           
         SPACE 3                                                                
SLOGACB  LABEL                     ACB NOT OPEN                                 
         ACALL PATHBRKN                                                         
         SPACE                                                                  
SLOGENV  LABEL                     ENVIRONMENT ERROR                            
         IF    (R2,EQ,=A(X'000A')),'ACALL ERROR10A'  VTAM FAILED                
         IF   ((R2,EQ,=A(X'0003')),OR,            VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'000D')),OR,            ACB CLOSED           *        
               (R2,EQ,=A(X'000E'))),'ACALL PATHBRKN'   VTAM ERROR               
SLOGERR  LABEL                                                                  
         L     R3,RPLRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT SETLOGON,'UNEXPECTED VTAM RETURN CODE'                           
         SPACE 2                                                                
SLOGNORM LABEL                     NORMAL COMPLETION                            
         SPACE                                                                  
*                                  REQUEST THE SESSION                          
         SPACE                                                                  
REQSESS  MVC   NIBSYM,VTWAAPPL     APPLICATION TO LOGON TO                      
         IF    (MODENL,ZERO),'MVC NIBLMODE,=CL8"M2"'  LOGMODE TO USE            
         ELSE  'MVC NIBLMODE,MODEN'                                             
         SPACE                                                                  
*                                  REQUEST THE SESSION                          
         SET   VSWFBIND            SET STATE                                    
         SPACE                                                                  
*QSNAP 'DO A REQUEST SESSION'                                                   
         CLEAR VTWSECB,NIBCID,RPLRLEN                                           
         IF    (UDATAL,NZ),BEGIN   IF USER DATA                                 
         MVC   RPLAREA,UDATA                                                    
         MVC   RPLRLEN,UDATAL                                                   
         END   ,                   END USER DATA                                
         SPACE                                                                  
         REQSESS RPL=(R3),NIB=(R4),                                    *        
               AAREA=0,BRANCH=NO,OPTCD=(ASY,NQ),ECB=VTWSECB                     
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         CHECK RPL=(R3)                                                         
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,REQSTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
REQSTABL DC    A(REQSNORM)         NORMAL                                       
         DC    A(REQSERR)          ERROR SYNAD                                  
         DC    A(REQSESS)          RETRY                                        
         DC    A(REQSERR)          ERROR INTEGRETY                              
         DC    A(REQSENV)          ERROR ENVIRONMENT                            
         DC    A(REQSLOGC)         ERROR LOGIC                                  
         DC    A(REQSERR)          ERROR BAD RPL                                
         DC    A(REQSACB)          ERROR ACB NOT OPEN                           
         SPACE 3                                                                
REQSACB  LABEL                     ACB NOT OPEN                                 
         ACALL PATHBRKN                                                         
         SPACE 2                                                                
REQSENV  LABEL                     ENVIRONMENT ERROR                            
         IF    (R2,EQ,=A(X'000A')),'ACALL ERROR10A'  VTAM FAILED                
         IF   ((R2,EQ,=A(X'0000')),OR,            LU NOT AVAILABLE     *        
               (R2,EQ,=A(X'0002')),OR,            LU INHIBITED         *        
               (R2,EQ,=A(X'0012'))),BEGIN         INSTRUCTION FAILED            
         ERROR 'THE APPLICATION IS NOT AVAILABLE'                               
         B     VLERROR                                                          
         END                                                                    
         SPACE                                                                  
         IF   ((R2,EQ,=A(X'0003')),OR,            VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'000D')),OR,            ACB CLOSED           *        
               (R2,EQ,=A(X'000E'))),'ACALL PATHBRKN'   VTAM ERROR               
         B     REQSERR                                                          
         SPACE 2                                                                
REQSLOGC LABEL                     LOGIC ERROR                                  
         IF    (R2,EQ,=A(X'004B')),BEGIN     IF NOT FOUND                       
         ERROR 'LOGON_MODE ENTRY NOT FOUND'                                     
         B     VLERROR                                                          
         END   ,                             END NOT FOUND                      
         SPACE                                                                  
         B     REQSERR                                                          
         SPACE 2                                                                
REQSERR  LABEL                                                                  
         L     R3,RPLRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT REQSESS,'UNEXPECTED VTAM RETURN CODE'                            
         SPACE 2                                                                
VLERROR  LABEL                     VLOGON ERROR                                 
         CLEAR CPFDISP                                                          
         L2    R0,@R15                                                          
         LA    R1,@R15+2                                                        
         TSEG  (R1),(R0),CR        SEG THE ERROR MESSAGE                        
         ACALL FREEVTWA            ABANDON THE COMMAND                          
         ABORT ,                   RETURN TO WYLBUR                             
         SPACE 3                                                                
REQSNORM PRETURN R6                NORMAL COMPLETION                            
         PEND  ,                                                                
         DROP  R3,R4,R5,R6,BR                                                   
         LTORG                                                                  
         EJECT                                                                  
*                                                                               
*                                                                               
* THIS CHECKS THE APPLICATION AND LOGMODE NAME FOR BAD CHARACTERS               
*                                                                               
CHARCHK  DS        0XL256                                                       
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
         DC        X'FF0102030405060708090A0B0C0D0E0F'      00                  
         DC        X'101112131415161718191A1B1C1D1E1F'      10                  
         DC        X'202122232425262728292A2B2C2D2E2F'      20                  
         DC        X'303132333435363738393A3B3C3D3E3F'      30                  
         DC        X'004142434445464748494A4B4C4D4E4F'      40                  
         DC        X'505152535455565758595A5B5C5D5E5F'      50                  
         DC        X'606162636465666768696A6B6C6D6E6F'      60                  
         DC        X'707172737475767778797A7B7C7D7E7F'      70                  
         DC        X'808182838485868788898A8B8C8D8E8F'      80                  
         DC        X'909192939495969798999A9B9C9D9E9F'      90                  
         DC        X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'      A0                  
         DC        X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'      B0                  
         DC        X'C0000000000000000000CACBCCCDCECF'      C0                  
         DC        X'D0000000000000000000DADBDCDDDEDF'      D0                  
         DC        X'E0E10000000000000000EAEBECEDEEEF'      E0                  
         DC        X'00000000000000000000FAFBFCFDFEFF'      F0                  
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
*                                                                               
 TITLE 'User Command                        VLOGOFF -- VLOGOFF command'         
*                                                                               
**  VLOGOFF -- VLOGOFF Command.                                                 
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = @ PARAMETER                                                       
**       R5 = RPL                                                               
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
VLOGOFF  GENTER                                                                 
*QSNAP 'ENTERED VLOGOFF'                                                        
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'VLOGOFF command not yet available in '                          
         ABORT 'production Wylbur.'                                             
         END                                                                    
         SPACE                                                                  
         LT    R6,CPVTWAP          ESTABLISH THE VTWA                           
         USING VTWA,R6                                                          
         IF    (Z),BEGIN                                                        
         ABORT 'You are NOT Logged On to a VTAM application'                    
         END                                                                    
         SPACE                                                                  
         SET   VTWFUACT            SET USER ACTIVE                              
         SPACE                                                                  
         L     R5,VTWAACBP                   SEND A TERMSESS                    
         WITH  (ACB,R5),BEGIN                                                   
         IF    (R5,NZ),'L R5,ACBEORPL'       R5 := @ RPL                        
         END                                                                    
         USING (RPL,R5)                                                         
         IF    (R5,ZERO),TERMNORM               IF NO RPL, IGNORE               
         FAIL  (RPLACTIV,EQ,X'FF'),VLOGOFF,'RPL BUSY'                           
         SPACE                                                                  
         CLEAR RPLSSENS                                                         
         CLEAR RPLOPT6.RPLCOND,RPLOPT6.RPLNCOND,RPLOPT10.RPLUNBND               
         SPACE                                                                  
         SCAN   ,                   GET THE PARAMETER                           
         SCANCHK                                                                
         IF    (R0,Z),'SET RPLOPT6.RPLCOND'  IF NO PARAMETER, NORMAL            
         ELSE  BEGIN                                                            
         IF     (@R15,EQ,'F'),'SET RPLOPT10.RPLUNBND'        IF F               
         ELSEIF (@R15,EQ,'I'),'SET RPLOPT6.RPLNCOND'         IF I               
         ELSE   'SET RPLOPT6.RPLCOND'         ELSE NORMAL                       
         END                                                                    
         SPACE                                                                  
TERMSESS LABEL                                                                  
*QSNAP 'ABOUT TO DO A TERMSESS'                                                 
         CLEAR VTWSECB                                                          
         TERMSESS RPL=(R5),BRANCH=NO,OPTCD=(ASY,NSONCODE),ECB=VTWSECB           
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         CHECK RPL=(R5)                                                         
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,TERMTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
TERMTABL DC    A(TERMNORM)         NORMAL                                       
         DC    A(TERMERR)          ERROR SYNAD                                  
         DC    A(TERMSESS)         RETRY                                        
         DC    A(TERMERR)          ERROR INTEGRETY                              
         DC    A(TERMENV)          ERROR ENVIRONMENT                            
         DC    A(TERMLOGC)         ERROR LOGIC                                  
         DC    A(TERMERR)          ERROR BAD RPL                                
         DC    A(TERMACB)          ERROR ACB NOT OPEN                           
         SPACE 3                                                                
TERMACB  LABEL                     ACB NOT OPEN                                 
         ACALL PATHBRKN                                                         
         SPACE                                                                  
TERMENV  LABEL                     ENVIRONMENT ERROR                            
         IF    (R2,EQ,=A(X'000A')),'ACALL ERROR10A'  VTAM FAILED                
         IF   ((R2,EQ,=A(X'000D')),OR,            ACB CLOSED           *        
               (R2,EQ,=A(X'000E'))),'ACALL PATHBRKN'   VTAM ERROR               
TERMERR  LABEL                                                                  
         L     R3,RPLRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT TERMSESS,'UNEXPECTED VTAM RETURN CODE'                           
TERMLOGC LABEL                     LOGIC ERROR                                  
         IF    (R2,EQ,=A(X'0013')),'ACALL PROCLOST'    IF BAD CID               
         B     TERMERR                                                          
         SPACE 2                                                                
TERMNORM LABEL                     NORMAL COMPLETION                            
         IF    (RPLOPT10.RPLUNBND),'ACALL PROCLOST'  RETURNS TO VTAM            
         SPACE                                                                  
         B     VGO                 BRANCH TO VGO                                
         SPACE                                                                  
         DROP  R5,R6,BR                                                         
 TITLE 'User Command                            VATTN -- VATTN command'         
*                                                                               
**  VATTN -- VATTN command.                                                     
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
VATTN    GENTER                                                                 
*QSNAP 'ENTERED VATTN'                                                          
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'VATTN command not yet available in '                            
         ABORT 'production Wylbur.'                                             
         END                                                                    
         SPACE                                                                  
         LT    R6,CPVTWAP          ESTABLISH THE VTWA                           
         USING VTWA,R6                                                          
         IF    (Z),BEGIN                                                        
         TSEG  'You are NOT logged-on to a VTAM application'                    
         ABORT 'Type VLOGON name to LOGON.'                                     
         END                                                                    
         SPACE                                                                  
         SET   VTWFUACT            SET USER ACTIVE                              
         SPACE                                                                  
         ACALL SSIGNAL             SEND THE SIGNAL                              
         B     VGO                 BRANCH TO VGO                                
         SPACE                                                                  
         DROP  R6,BR                                                            
 TITLE 'User Command                                VGO -- VGO command'         
*                                                                               
**  VGO -- VGO Command.                                                         
*                                                                               
         SPACE                                                                  
VGO      GENTER                                                                 
*QSNAP 'ENTERED VGO'                                                            
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'VGO command not yet available in '                              
         ABORT 'production Wylbur.'                                             
         END                                                                    
         SPACE                                                                  
         LT    R6,CPVTWAP          ESTABLISH THE VTWA                           
         USING VTWA,R6                                                          
         IF    (Z),BEGIN                                                        
         TSEG  'YOU ARE NOT LOGGED-ON TO A VTAM APPLICATION',,CR                
         ABORT 'Type VLOGON name to LOGON.'                                     
         END                                                                    
         SPACE                                                                  
         SET   VTWFUACT            SET USER ACTIVE                              
         SET   CPFDISP                                                          
         IF    (VTWBUFL,ZERO),BEGIN    IF NO SCREEN BUFFER                      
         L     BR,=A(MAINLINE)         BRANCH TO MAINLINE                       
         BR    BR                                                               
         END                                                                    
         SPACE                                                                  
         LA    R0,1                    ELSE CLEAR THE SCREEN                    
         ACALL CLEARSCR                                                         
         SPACE                                                                  
         SET   VTWFWSCR                                                         
         IF    (^VSOUTB),'ACALL WRITESCR'                                       
         L     R15,=A(MAINLIN1)                                                 
         L     BR,=A(MAINLINE)                                                  
         BR    R15                 BRANCH TO MAINLNE1                           
*                                                                               
         DROP  R6,BR                                                            
 TITLE 'User Command                          VDEBUG -- VDEBUG command'         
*                                                                               
**  VDEBUG -- VDEBUG Command.                                                   
*                                                                               
         SPACE                                                                  
VDEBUG   GENTER                                                                 
*QSNAP 'ENTERED VDEBUG'                                                         
         IF    ^CVFTEST,BEGIN      Production Wylbur...                         
         TSEG  'VDEBUG command not yet available in '                           
         ABORT 'production Wylbur.'                                             
         END                                                                    
*                                                                               
*  VTAM COMMAND GOES HERE.                                                      
*                                                                               
         TSEG  'VDEBUG COMMAND GOES HERE!'                                      
         B     CVNEXT                                                           
*                                                                               
         DROP  BR                                                               
 TITLE 'WYLBUR Cleanup           VETSFREE - Release terminal work area'         
*                                                                               
**  VETSFREE -- Routine to release the Vtam terminal work                       
**    area if one is allocated.                                                 
**                                                                              
**    This routine is called when the user logs off.                            
*                                                                               
         SPACE                                                                  
VETSFREE XPROC                                                                  
         LT    R6,CPVTWAP          Is there a VTWA?                             
         IF    NZ,BEGIN                                                         
         ACALL FREEVTWA                                                         
         END                                                                    
         SPACE                                                                  
         PEND                                                                   
         LTORG                                                                  
         SPACE 3                                                                
         USING VTWA,VTWAR          ASSUMED IN ALL LOCAL ROUTINES                
 TITLE '                              MAINLINE -- Main processing loop'         
*                                                                               
**  MAINLINE -- This is the main processing loop.  It receives                  
**              commands from the host application, and causes them             
**              to be executed.  This generally involves reading                
**              and writing to the terminal.                                    
**                                                                              
*                                                                               
**    ENTRY is by BRANCH to MAINLINE or MAINLINE1 from the WYLBUR               
**    command routines VLOGON, VLOGOFF, VGO, and VATTN                          
**                                                                              
**      BR = @ MAINLINE                                                         
*                                                                               
**    Exit is by BRANCH to CVNEXT, and is made within proc                      
**    WRITESCR, PROCUBIR, PROCLOST, DOCONT, READSEND, or UPDATSCR               
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = @ RPL FOR SEND RESPONSE                                           
**       R5 = @ RPL FOR RECEIVE EXPEDITID                                       
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
MAINLINE LABEL                               MAINLINE FROM VLOGON               
         USING MAINLINE,BR                                                      
         SPACE                                                                  
*QSNAP 'MAINLINE'                                                               
MAINLINA LABEL                                                                  
*                                            CHECK REASON FOR POST              
         SPACE                                                                  
         IF     (POSTLOST),'CLEAR POSTLOST; ACALL PROCLOST'  LOSTERM            
         ELSEIF (POSTUBIR),'CLEAR POSTUBIR; ACALL PROCUBIR'  UNBIND             
         ELSEIF (POSTBIND),'CLEAR POSTBIND; ACALL PROCBIND'  BIND               
         ELSEIF (POSTSDT),'CLEAR POSTSDT; ACALL PROCSDT'     SDT                
         ELSEIF (POSTSENC),'CLEAR POSTSENC; ACALL PROCSENC'  SEND               
         ELSEIF (POSTRCVC),'CLEAR POSTRCVC; ACALL PROCRCVC'  RECEIVE            
         ELSEIF (POSTSHUT),'EXIT'                            SHUTDOWN           
         ELSE  BEGIN                         ELSE WAIT                          
         SPACE                                                                  
         LA    R0,1                                                             
         LA    R1,VTWAECB                                                       
         VCALL WAITECB                       => WAIT <=                         
         IF    (NZ),BEGIN                    IF ATTN                            
         CLEAR VTWFUACT,CPFDISP,VTWAECB   CLEAR USER ACTIVE                     
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         END   ,                             END ATTN                           
         SPACE                                                                  
         CLEAR VTWAECB                                                          
         B     MAINLINA                                                         
         END   ,                             END WAIT                           
         SPACE 2                                                                
MAINLIN1 LABEL                               MAINLIN1 FROM VGO                  
         SPACE                                                                  
         IF    (VTWRSENS,NZ),BEGIN           A SENSE HAS BEEN RECEIVED          
         SET   VSOUTB                        HOST RECOVERS                      
         CLEAR VTWFUACT,CPFDISP                                                 
         TSEG  'A Sense of '                                                    
         THEX  L:VTWRSENS,8                                                     
         TSEG  ' has been received from the Application',,CR                    
         TSEG  'Enter VGO to continue'                                          
         SPACE                                                                  
         CLEAR VTWRSENS                                                         
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         SPACE                                                                  
         END   ,                         END A SENSE HAS BEEN RECEIVED          
         SPACE 2                                                                
*                                           CHECK STATE OF VTAM SESSION         
         SPACE                                                                  
         IF     (VSOUTB),'ACALL DOOUTB'      OUTBOUND (FROM APPL)               
         ELSEIF (VSINB),'ACALL DOINB'        INBOUND (TO APPL)                  
         ELSEIF (VSOUTBSS),'ACALL DOOUTB'    OUTBOUND SIGNAL SENT               
         ELSEIF (VSCONT),'ACALL DOCONT'      CONTENTION                         
         ELSEIF (VSCONT1),'ACALL SRECEIVE'   CONTENTION-KEYBOARD LOCKED         
         ELSEIF (VSCONT2),'ACALL SENDRESP; ACALL SRECEIVE' BID RECEIVED         
         ELSE   'B MAINLINE'                                                    
         SPACE 2                                                                
*                                  MISCELLANEOUS CLEANUP                        
         SPACE 2                                                                
*                                  START THE EXPEDITED RECEIVE                  
         L     R5,VTWAACBP         WILL USUALLY NOT BE NEEDED                   
         WITH  (ACB,R5),'L R5,ACBEIRPL'                                         
         WITH  (RPL,R5),BEGIN                                                   
         IF    (RPLACTIV,Z),BEGIN  IF NOT ACTIVE                                
*QSNAP 'START RECEIVE EXPEDITED'                                                
         AIF   ('&BRANCH' EQ 'NO').MODE11                                       
         MODESET MODE=SUP              ********* ENTER SUPERVISOR STATE         
.MODE11  L     R2,=A(SRBROUT)                                                   
         RECEIVE RPL=(R5),                                             *        
               OPTCD=(ASY,CA,ANY,NIBTK,Q),AREALEN=0,                   *        
               RTYPE=(NDFSYN,DFASY,RESP),BRANCH=&BRANCH,EXIT=(R2)               
         LR    R2,R15                                                           
         MODESET MODE=PROB             ********* LEAVE SUPERVISOR STATE         
         SPACE                                                                  
*QSNAP (R2)                                                                     
         FAIL  (R2,NZ),MAINLINE,'RECEIVE EXPEDITED REFUSED'                     
         END                                                                    
         END   ,                   END NOT ACTIVE                               
         SPACE 2                                                                
         IF    (VTWFSHUT),BEGIN              IF SHUTDOWN COMPLETE               
SHUTC    CLEAR VTWFSHUT,POSTSHUT                                                
         L     R4,VTWAACBP                                                      
         WITH  (ACB,R4),'L R4,ACBEORPL'                                         
         WITH  (RPL,R4)            GET THE RPL                                  
         FAIL  (RPLACTIV,NZ),MAINLINE,'RESPONSE RPL NOT FREE'                   
         SPACE                                                                  
*QSNAP 'ABOUT TO START A SEND SHUTC'                                            
         CLEAR VTWSECB                                                          
         SEND  RPL=(R4),                                               *        
               OPTCD=(ASY,CA),ECB=VTWSECB,                             *        
               STYPE=REQ,CONTROL=SHUTC,BRANCH=NO                                
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         CHECK RPL=(R4)                                                         
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,SHUTTBLE(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
SHUTTBLE DC    A(MAINLIN3)         NORMAL                                       
         DC    A(SHUTERR)          ERROR SYNAD                                  
         DC    A(SHUTC)            RETRY                                        
         DC    A(MAINLIN3)         ERROR INTEGRETY                              
         DC    A(SHUTENV)          ERROR ENVIRONMENT                            
         DC    A(SHUTERR)          ERROR LOGIC                                  
         DC    A(SHUTERR)          ERROR BAD RPL                                
         DC    A(MAINLIN3)         ERROR ACB NOT OPEN                           
         SPACE 3                                                                
SHUTENV  LABEL                     ENVIRONMENT ERROR                            
         IF    (R2,EQ,=A(X'000A')),'ACALL ERROR10A'  VTAM FAILED                
         IF   ((R2,EQ,=A(X'0003')),OR,            VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'0007')),OR,            CANCELLED BY VARY    *        
               (R2,EQ,=A(X'0009')),OR,            LOGOFF RECEIVED      *        
               (R2,EQ,=A(X'000E'))),'ACALL PATHBRKN'    VTAM ERROR              
SHUTERR  LABEL                                                                  
         L     R3,RPLRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT MAINLINE,'SHUTC UNEXPECTED VTAM RETURN CODE'                     
         SPACE 2                                                                
MAINLIN3 LABEL                     SHUTC HAS BEEN SENT                          
         B     MAINLINE                                                         
         END   ,                   END SHUTDOWN COMPLETE                        
         SPACE 2                                                                
         IF    (VSCONT,OR,VSCONT1),'ACALL DOCONT'   IF CONTENTION STATE         
         B     MAINLINE                                                         
         SPACE                                                                  
         DROP  BR                                                               
 TITLE 'Post Routines           PROCRCVC -- Process RECEIVE completion'         
*                                                                               
**  PROCRCVC -- Routine to process the completion of a data RECEIVE             
**              (outbound) from the Application.                                
**                                                                              
**           The purpose of this routine is to handle error conditions.         
**                                                                              
**                                                                              
**    On entry:                                                                 
**      VTWORUC POINTS TO THE OUTBOUND BUFFER CHAIN                             
**      R6 = @ VTWA                                                             
*                                                                               
**    On exit:                                                                  
**      NO change of state.                                                     
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 = RTNCD & FDBK2                                                     
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 = @ BUFFERS                                                         
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
PROCRCVC PROC  ,                   PROCESS RECEIVE COMPLETION                   
*QSNAP 'ENTERED PROCRCVC'                                                       
         L     R2,VTWRRTNC         LOADS RTNCD AND FDBK2                        
         IF    (R2,NZ),BEGIN       IF ERROR                                     
         SPACE                                                                  
         L     R5,VTWORUC          RELEASE THE RECEIVE BUFFERS                  
         WITH  (VTBHEAD,R5)                                                     
         LR    R4,R5                                                            
         WHILE (R4,NZ),BEGIN       WHILE IN BUFFER                              
         LR    R5,R4                                                            
         L     R4,VTBNEXT                                                       
         LR    R1,R5                                                            
         FAIL  (VTBID,NE,C'VTBH'),PROCRCVC,'BAD OUTBOUND BUFFER'                
         VCALL FREECORE                                                         
         END   ,                   END IN BUFFERS                               
         SPACE                                                                  
         CLEAR VTWORUC                                                          
         SPACE 2                                                                
         IF   (R2,EQ,=A(X'0010000A')),'ACALL ERROR10A'     VTAM FAIL            
         SPACE                                                                  
         IF   ((R2,EQ,=A(X'00040003')),OR,                  EXR        *        
               (R2,EQ,=A(X'000C000C')),OR,                  CLEAR      *        
               (R2,EQ,=A(X'0010000D'))),RCVCRTN             CLOSED              
         SPACE                                                                  
         IF   ((R2,EQ,=A(X'000C000B')),OR,        SESSION TERMINATED   *        
               (R2,EQ,=A(X'00100003')),OR,        VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'00100007')),OR,        CANCELLED BY VARY    *        
               (R2,EQ,=A(X'00100009')),OR,        LOGOFF RECEIVED      *        
               (R2,EQ,=A(X'0010000E'))),'ACALL PATHBRKN'                        
         SPACE                                                                  
         L     R3,VTWRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT PROCRCVC,'UNEXPECTED VTAM RETURN CODE'                           
         END   ,                            END ERROR                           
RCVCRTN  LABEL                     RETURN                                       
         CLEAR VTWRRTNC                                                         
         PEND  ,                   RETURN                                       
 TITLE 'Post Routines   PROCSENC -- Routine to process SEND completion'         
*                                                                               
**  PROCSENC -- Routine to process the completion of a data SEND                
**              (inbound) to the Application.                                   
**                                                                              
**    On entry:                                                                 
**      VTWIRUC POINTS TO THE INBOUND BUFFER CHAIN                              
**      VTWIBLST POINTS TO THE VTAM BUFFLST IF USED                             
**      R6 = @ VTWA                                                             
*                                                                               
**    On exit:                                                                  
**      Inbound buffers have been freed.                                        
**      NO change of state.                                                     
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = @ BUFFERS                                                         
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
PROCSENC PROC  ,                   PROCESS SEND COMPLETION                      
*QSNAP 'ENTERED PROCSENC'                                                       
         LT    R1,VTWIBLST                                                      
         IF    (NZ),BEGIN          IF BUFFLST                                   
         VCALL FREECORE            FREE IT                                      
         CLEAR VTWIBLST                                                         
         END                                                                    
         SPACE                                                                  
         L     R4,VTWIRUC          CLEAN UP THE INBOUND BUFFERS                 
         WITH  (VTBHEAD,R4)                                                     
         LR    R2,R4                                                            
         WHILE (R2,NZ),BEGIN       WHILE IN BUFFER                              
         LR    R4,R2                                                            
         L     R2,VTBNEXT                                                       
         LR    R1,R4                                                            
         FAIL  (VTBID,NE,C'VTBH'),PROCSENC,'BAD INBOUND BUFFER'                 
         VCALL FREECORE                                                         
         END   ,                   END IN BUFFERS                               
         SPACE                                                                  
         CLEAR VTWIRUC                                                          
         SPACE 2                                                                
         L     R2,VTWSRTNC         LOADS RTNCD AND FDBK2                        
         IF    (R2,NZ),BEGIN       IF ERROR                                     
         IF   (R2,EQ,=A(X'0010000A')),'ACALL ERROR10A'     VTAM FAIL            
         IF    (R2,EQ,=A(X'0010000D')),SENDRTN             CLOSED               
         SPACE                                                                  
         IF   ((R2,EQ,=A(X'00100003')),OR,        VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'00100007')),OR,        CANCELLED BY VARY    *        
               (R2,EQ,=A(X'00100009')),OR,        LOGOFF RECEIVED      *        
               (R2,EQ,=A(X'0010000E'))),'ACALL PATHBRKN'                        
         SPACE                                                                  
         L     R3,VTWRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT PROCSENC,'UNEXPECTED VTAM RETURN CODE'                           
         END   ,                            END ERROR                           
         SPACE                                                                  
SENDRTN  LABEL                     RETURN                                       
         CLEAR VTWSRTNC                                                         
         PEND  ,                   RETURN                                       
 TITLE 'Post Routines  PROCSDT -- Start Data Traffic has been received'         
*                                                                               
**  PROCSDT -- Routine to process receipt of a  Start Data Traffic              
**             message from VTAM.                                               
*                                                                               
**    On entry:                                                                 
**      R6 = @ VTWA                                                             
*                                                                               
**    On exit:                                                                  
**      STATE HAS BEEN CHANGED TO VSCONT OR VSCONT1                             
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 = @RPL                                                              
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
PROCSDT  PROC  ,                   PROCESS START DATA TRAFFIC                   
*QSNAP 'ENTERED PROCSDT'                                                        
         COMMENT                   VTAM HAS ALREADY SENT RESPONSE               
         SPACE                                                                  
         IF    (VSWFSDT),BEGIN     IF WAITING FOR SDT                           
         IF    (VTWFKLOK),'SET VSCONT1'  SET CONTENTION                         
         ELSE  'SET VSCONT'                                                     
         CLEAR R0                                                               
         ACALL CLEARSCR            CLEAR THE SCREEN                             
         END   ,                    END WAITING FOR SDT                         
         SPACE                                                                  
         PEND  ,                   DOCONT WILL DO THE CONTENTION                
 TITLE 'Post Routines            PROCBIND -- Process receipt of a bind'         
*                                                                               
**  PROCBIND -- Routine to process the receipt of a BIND message                
**            from the  Application.                                            
**                                                                              
**    On entry:                                                                 
**      VTWBINDP points to the bind image                                       
**      R6 = @ VTWA                                                             
**                                                                              
*                                                                               
         DATA  BEGIN                                                            
*                                                                               
* MODEL TABLE ....SCREEN SIZE BY MODEL NUMBER                                   
*                                                                               
MODTAB   DC        0F'0',C'MOD#'                                                
         DC        H'12,80'            MODEL 1                                  
         DC        H'24,80'            MODEL 2                                  
         DC        H'32,80'            MODEL 3                                  
         DC        H'43,80'            MODEL 4                                  
         DC        H'27,132'           MODEL 5                                  
*                                                                               
*                                                                               
         END                                                                    
         SPACE 2                                                                
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 = @ RPL                                                             
**       R4 = BIND IMAGE ADDRESS | @ NIB                                        
**       R5 = @ ACB                                                             
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
PROCBIND PROC  ,                   PROCESS BIND                                 
*QSNAP 'ENTERED PROCBIND'                                                       
         LT    R4,VTWANIBP         GET A NIB                                    
         IF    (ZERO),BEGIN        IF NIB NOT PRESENT                           
         LA    R2,NIBLNIB          R2 := L'NIB                                  
         LR    R0,R2                                                            
         VCALL GETCORE                                                          
         LR    R4,R1               R4 := @NIB                                   
         ST    R4,VTWANIBP                                                      
         SPACE                                                                  
         GENCB BLK=NIB,AM=VTAM,WAREA=(R4),LENGTH=(R2),PROC=KEEP,       *        
               USERFLD=0,MODE=RECORD,SDT=SYSTEM,RESPLIM=1,LISTEND=YES           
         FAIL  (R15,NZ),PROCBIND,'GENERATE NIB REFUSED'                         
         END   ,                   END NIB NOT PRESENT                          
         SPACE                                                                  
         LT    R4,VTWBINDP         LOAD BIND IMAGE                              
         FAIL  (Z),PROCBIND,'NO BIND IMAGE AVAILABLE'                           
         WITH  (ISTDBIND,R4)                                                    
         MVC   VTWAAPPL,BINPRIMN   SAVE APPLICATION NAME                        
*QSNAP VTWAAPPL,8                                                               
*                                  CHECK THE BIND IMAGE                         
         IF    ((BINFM,NE,X'03'),OR,(BINTS,NE,X'03'),OR,               *        
               (BINLUP,NE,X'02')),BEGIN                                         
         ERROR 'BAD BIND'                                                       
         B     REFUBIND                                                         
         END   ,                                                                
         SPACE                                                                  
         CLEAR VTWFDR+VTWFER                                                    
         IF    (BINSECP.BINNYRSP),'SET VTWFDR+VTWFER'                           
         IF    (BINSECP.BINDFRSP),'SET VTWFDR'                                  
         IF    (BINSECP.BINEXRSP),'SET VTWFER'                                  
         LC    R0,BINSRUSZ         R0 := A MANSISSA                             
         LR    R1,R0               R1 := B EXPONENT                             
         SRL   R0,4                                                             
         N     R1,=F'15'                                                        
         SLL   R0,0(R1)                                                         
         ST    R0,VTWRSIZI                                                      
         LC    R0,BINPRUSZ         R0 := A MANSISSA                             
         LR    R1,R0               R1 := B EXPONENT                             
         SRL   R0,4                                                             
         N     R1,=F'15'                                                        
         SLL   R0,0(R1)                                                         
         ST    R0,VTWRSIZO                                                      
*                                                                               
* DECIDE ON SCREEN SIZE                                                         
*                                                                               
         TM        BINPRESZ,X'70'      ARE MOST BITS ON?                        
         IF        OFF,BEGIN                                                    
*                                                                               
* IF NO IT GOES BY THE MODEL NUMBER                                             
*                                                                               
         SR        R1,R1               CLEAR THIS FOR A SEC                     
         IC        R1,BINPRESZ         GET THE MODEL NUMBER                     
         SPACE                                                                  
         IF        (R1,EQ,=H'3'),BEGIN IF QUERY FOR SIZE                        
         MVC       VTWHEID(4),MODTAB+8 DEFAULT IS A MODEL 2                     
         SPACE                                                                  
         MVC       VTWWIDA,VTWWIDT     ALTERNATE WIDTH                          
         SPACE                                                                  
         LH        R2,VTWHEIT                                                   
         IF        (R2,LE,=H'27'),'STH R2,VTWHEIA'  STANDARD HEIGHTS            
         ELSEIF    (R2,EQ,=H'32'),'STH R2,VTWHEIA'                              
         ELSEIF    (R2,EQ,=H'43'),'STH R2,VTWHEIA'                              
         ELSEIF    (R2,EQ,=H'31'),'STH R2,VTWHEIA'                              
         ELSEIF    (R2,EQ,=H'50'),'STH R2,VTWHEIA'                              
         ELSEIF    (R2,EQ,=H'62'),'STH R2,VTWHEIA'                              
         ELSE      'DECR R2; STH R2,VTWHEIA'        ELSE ONE SMALLER            
         END       ,                   END QUERY FOR SIZE                       
         SPACE                                                                  
         ELSE      BEGIN                                                        
         IF        ((R1,Z),OR,(R1,GT,=H'2')),'LA R1,2' ASSUME M2                
         SLL       R1,2                4 BYTES EACH                             
         LA        R1,MODTAB(R1)       GET THE ADDRESS                          
         MVC       VTWHEIA(4),0(R1)    MOVE IT INTO THE SPOT                    
         MVC       VTWHEID(4),MODTAB+8 DEFAULT IS A MODEL 2                     
         END       ,                                                            
         END       ,                   END IT GOES BY MODEL NUMBER              
         SPACE                                                                  
*                                                                               
* IF ON THEN THE SCREEN SIZE IS SPECIFIED ANOTHER LOCATION                      
*                                                                               
         ELSE  BEGIN                                                            
         MVC       VTWHEID+1(1),BINSPRIR         MOVE IN ROWS                   
         MVC       VTWWIDD+1(1),BINSPRIC         AND THE COLS                   
         MVC       VTWHEIA+1(1),BINSALTR         MOVE IN ALTERNATE ROWS         
         MVC       VTWWIDA+1(1),BINSALTC         AND ALTERNATE COLS             
         END       ,                                                            
         SPACE                                                                  
         IF    (VTWHEID,ZERO),'MVC VTWHEID,=H"24"'   CHECK FOR ZERO             
         IF    (VTWWIDD,ZERO),'MVC VTWWIDD,=H"80"'                              
         IF    (VTWHEIA,ZERO),'MVC VTWHEIA,VTWHEID'                             
         IF    (VTWWIDA,ZERO),'MVC VTWWIDA,VTWWIDD'                             
         SPACE                                                                  
         LH    R2,VTWHEID                                                       
         MH    R2,VTWWIDD                                                       
         ST    R2,VTWBUFLD                                                      
         LH    R2,VTWHEIA                                                       
         MH    R2,VTWWIDA                                                       
         ST    R2,VTWBUFLA                                                      
         MVC   VTWHEI(8),VTWHEID                                                
         SPACE                                                                  
         L     R1,VTWBUFGC                                                      
         IF    (R2,LT,VTWBUFLD),'L R2,VTWBUFLD'                                 
         IF    (R2,GT,R1),BEGIN    IF BUFFERS NOT LARGE ENOUGH                  
         IF    (R1,NZ),BEGIN       IF OLD BUFFERS                               
         L     R1,VTWTEXTP                                                      
         VCALL FREECORE                                                         
         L     R1,VTWHIP                                                        
         VCALL FREECORE                                                         
         L     R1,VTWCOLP                                                       
         VCALL FREECORE                                                         
         L     R1,VTWCSP                                                        
         VCALL FREECORE                                                         
         END   ,                   END OLD BUFFERS                              
         SPACE                                                                  
*                                                                               
*  Now allocate and initialize screen buffers.                                  
*                                                                               
*                                                                               
         ST    R2,VTWBUFGC                                                      
*                                                                               
         LR    R0,R2                                                            
         VCALL GETCORE             Get text buffer                              
         ST    R1,VTWTEXTP         Save buffer ptr                              
*                                                                               
         LR    R0,R2                                                            
         VCALL GETCORE             GET Highlights buffer                        
         ST    R1,VTWHIP           Save buffer ptr                              
*                                                                               
         LR    R0,R2                                                            
         VCALL GETCORE             Get colors buffer                            
         ST    R1,VTWCOLP          Save buffer ptr                              
*                                                                               
         LR    R0,R2                                                            
         VCALL GETCORE             Get character set buffer                     
         ST    R1,VTWCSP           Save buffer ptr                              
*                                                                               
         END   ,                   END BUFFERS NOT LARGE ENOUGH                 
         SPACE                                                                  
         DROP  R4       AT THIS POINT WE ARE FINISHED WITH THE BIND             
         SPACE                                                                  
OPNSEC   L     R4,VTWANIBP         R4 := @NIB                                   
         WITH  (ISTDNIB,R4)                                                     
         L     R5,VTWAACBP         R5 := @ ACB                                  
         WITH  (ACB,R5)                                                         
         L     R3,ACBEORPL         R3 := @ RPL                                  
         WITH  (RPL,R3)                                                         
         SPACE                                                                  
*QSNAP 'ABOUT TO ACCEPT THE BIND'                                               
         MVC   NIBSYM,VTWAAPPL                                                  
         ST    R6,NIBUSER                                                       
         CLEAR VTWSECB,NIBCID                                                   
         OPNSEC RPL=(R3),NIB=(R4),BRANCH=NO,OPTCD=(ASY,CA),ECB=VTWSECB          
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         CHECK RPL=(R3)                                                         
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         L     R15,OPNSTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
OPNSTABL DC    A(OPNSNORM)         NORMAL                                       
         DC    A(OPNSERR)          ERROR SYNAD                                  
         DC    A(OPNSEC)           RETRY                                        
         DC    A(OPNSENV)          ERROR INTEGRETY                              
         DC    A(OPNSENV)          ERROR ENVIRONMENT                            
         DC    A(OPNSERR)          ERROR LOGIC                                  
         DC    A(OPNSERR)          ERROR BAD RPL                                
         DC    A(OPNSACB)          ERROR ACB NOT OPEN                           
         SPACE 3                                                                
OPNSACB  LABEL                     ACB NOT OPEN                                 
         ACALL PATHBRKN                                                         
         SPACE                                                                  
OPNSENV  LABEL                     ENVIRONMENT ERROR                            
         IF    (R2,EQ,=A(X'000A')),'ACALL ERROR10A'  VTAM FAILED                
         IF    (R2,EQ,=A(X'0000')),BEGIN          LU NOT AVAILABLE              
         ERROR 'THE APPLICATION IS NOT AVAILABLE'                               
         B     PROCBERR                                                         
         END                                                                    
         IF   ((R2,EQ,=A(X'0003')),OR,            VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'000D')),OR,            ACB CLOSED           *        
               (R2,EQ,=A(X'000E'))),'ACALL PATHBRKN'   VTAM ERROR               
OPNSERR  LABEL                                                                  
         L     R3,RPLRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT OPNSEC,'UNEXPECTED VTAM RETURN CODE'                             
         SPACE 2                                                                
OPNSENVI LABEL                     ENVIRONMENT EROR                             
         FAIL  (R2,ZERO),OPNSEC,'NO OUTSTANDING BIND'                           
         ERROR 'APPLICATION NO LONGER AVAILABLE'                                
         B     PROCBERR                                                         
OPNSNORM LABEL                     NORMAL COMPLETION                            
         MVC   VTWACID,RPLARG      SAVE THE SESSION ID                          
         LR    R1,R4                                                            
         VCALL FREECORE            FREE THE NIB                                 
         CLEAR R4,VTWANIBP                                                      
         SPACE                                                                  
*                                  SET DEFAULTS IN THE RPLS                     
         L     R3,ACBNSRPL          R3 := @ NORMAL FLOW SEND RPL                
         FAIL  (R3,Z),PROCBIND,'MISSING NS RPL'                                 
         MVC   RPLARG,VTWACID                                                   
         SPACE                                                                  
         L     R3,ACBNRRPL          R3 := @ NORMAL FLOW RECEIVE RPL             
         FAIL  (R3,Z),PROCBIND,'MISSING NR RPL'                                 
         MVC   RPLARG,VTWACID                                                   
         SPACE                                                                  
         L     R3,ACBEIRPL         R3 := @ EXPIDETED INPUT RPL                  
         FAIL  (R3,Z),PROCBIND,'MISSING EI RPL'                                 
         MVC   RPLARG,VTWACID                                                   
         SPACE                                                                  
         L     R3,ACBEORPL         R3 := @ EXPEDITED OUTPUT & RESPONSES         
         FAIL  (R3,Z),PROCBIND,'MISSING EO RPL'                                 
         MVC   RPLARG,VTWACID                                                   
         SPACE                                                                  
         IF    (VSWFBIND),'SET VSWFSDT'     WAIT FOR START DATA TRAFFIC         
         CLEAR R15                                                              
         EXIT  PROCBIND            NORMAL RETURN                                
         SPACE 3                                                                
REFUBIND LABEL                     REFUSE THE BIND                              
         SPACE                                                                  
         L     R4,VTWANIBP         R4 := @NIB                                   
         WITH  (ISTDNIB,R4)                                                     
         L     R5,VTWAACBP         R5 := @ ACB                                  
         WITH  (ACB,R5)                                                         
         L     R3,ACBEORPL         R3 := @ RPL                                  
         WITH  (RPL,R3)                                                         
         SPACE                                                                  
         CLEAR CPFDISP                                                          
         L2    R0,@R15                                                          
         LA    R1,@R15+2                                                        
         TSEG  (R1),(R0),CR        SEG THE ERROR MESSAGE                        
         SPACE                                                                  
*QSNAP 'REFUSE THE BIND'                                                        
         MVC   NIBSYM,VTWAAPPL                                                  
         CLEAR VTWSECB,NIBCID                                                   
         SESSIONC RPL=(R3),NIB=(R4),OPTCD=(ASY,CA),ECB=VTWSECB,        *        
               CONTROL=BIND,STYPE=RESP,RESPOND=(EX,FME)                         
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         ACALL FREEVTWA                                                         
         SPACE                                                                  
         ABORT ,                                                                
         SPACE                                                                  
PROCBERR LABEL                     ERROR                                        
         CLEAR CPFDISP                                                          
         L2    R0,@R15                                                          
         LA    R1,@R15+2                                                        
         TSEG  (R1),(R0),CR        SEG THE ERROR MESSAGE                        
         SPACE                                                                  
         ACALL FREEVTWA                                                         
         SPACE                                                                  
         ABORT ,                   RETURN TO  WYLBUR                            
         PEND                                                                   
         LTORG                                                                  
 TITLE 'Post Routines                       PROCUBIR - UNBIND received'         
*                                                                               
**  PROCUBIR -- UNBIND received - clean up the control blocks.                  
**                                                                              
**  This is a normal LOGOFF from an application                                 
**                                                                              
**    On entry:                                                                 
**      R6 = @ VTWA                                                             
*                                                                               
**    On exit:                                                                  
**      Return user to Wylbur                                                   
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
PROCUBIR PROC  ,                   UNBIND RECEIVED                              
*QSNAP 'ENTERED PROCUBIR'                                                       
         CLEAR CPFDISP                                                          
         IF    (VSWFSDT,OR,VSWFBIND),EXIT    BR CLSDST PASS                     
         TSEG  'You have been Logged-Off from the '                             
         TSEG  'VTAM application',,CR                                           
         TSEG  'Returning to Wylbur'                                            
         SPACE                                                                  
         ACALL FREEVTWA                                                         
         SPACE                                                                  
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         PEND                                                                   
 TITLE 'Post Routines            PROCLOST- LOSTERM or CLEANUP received'         
*                                                                               
**  PROCLOST -- LOSTERM or CLEANUP received.                                    
**  ALSO CALLED BY "VLOGOFF F"                                                  
**                                                                              
**    On entry:                                                                 
**      R6 = @ VTWA                                                             
*                                                                               
**    On exit:                                                                  
**      Return user to Wylbur                                                   
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
PROCLOST PROC  ,                   LOSTERM or CLEANUP received                  
*QSNAP 'ENTERED PROCLOST'                                                       
         CLEAR CPFDISP                                                          
         TSEG  'You have been disconnected from the '                           
         TSEG  'VTAM application',,CR                                           
         TSEG  'Returning to Wylbur'                                            
         SPACE                                                                  
         ACALL FREEVTWA                                                         
         SPACE                                                                  
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         PEND                                                                   
 TITLE 'State Routines       DOOUTB -- Do Outbound Terminal Processing'         
*                                                                               
**  DOOUTB -- Routine to do outbound terminal message processing                
**                                                                              
**    On entry:                                                                 
**      R6 = @ VTWA                                                             
**      VTWORUC POINTS TO BUFFER CHAIN                                          
**                                                                              
*                                                                               
         SPACE                                                                  
DOOUTBWA RECORD BEGIN                                                           
DOOUT345 DS    3F                  REGISTER 3,4,5 SAVE                          
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 = COUNT REMAINING IN STRUCTURED FIELD                               
**       R4 = INPUT BUFFER DATA INDEX | @ RPL                                   
**       R5 = INPUT BUFFER ADDRESS                                              
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
         MACRO                                                                  
         INCR4O ,                  INCREMENT R4 AND STEP TO NEXT BUFFER         
         LA    R4,@R4+1                                                         
         IF    (R4,GE,VTBCOUNT),BEGIN                                           
         SET   VTBFPROC            SET THIS BUFFER PROCESSED                    
         CLEAR R4                                                               
         L     R5,VTBNEXT                                                       
         WHILE ((R5,NZ),AND,(VTBCOUNT,ZERO)),'L R5,VTBNEXT'                     
         END                                                                    
         DECR  R3                                                               
         MEND                                                                   
         SPACE 2                                                                
DOOUTB   PROC  DOOUTBWA            DO OUTBOUND TERMINAL PROCESSING              
*QSNAP 'ENTERED DOOUTB'                                                         
         CLEAR DOOUTBWA                                                         
         CLEAR R1,R0,VTWFRNXT                                                   
DOOUTB1  ACALL PRCESSCR            UPDATE THE SCREEN IMAGE                      
         SPACE                                                                  
         IF    (NZ),BEGIN          IF ERROR                                     
         LR    R4,R1                                                            
         LR    R5,R0                                                            
         B     DOOERROR                                                         
         END                                                                    
         SPACE                                                                  
         LR     R4,R1              R4 := INDEX                                  
         LTR    R5,R0              R5 := @ BUFFER                               
         WITH  (VTBHEAD,R5)                                                     
         IF    (NZ),BEGIN          IF MORE OUTPUT TO WRITE                      
         L     R3,=A(X'7FFFFFF')   R3 := L'STRUCTURE                            
         SPACE                                                                  
         IF    (VTWFRNXT),BEGIN    IF RENEX TRANSPARENCY MODE                   
*QSNAP 'RENEX TRANSPARENCY'                                                     
         LA    R1,VTBDATA(R4)                                                   
         FAIL  (@R1,NE,X'70'),DOOUTB,'RENEX NOT X70'                            
         INCR4O                    STEP TO NEXT DATA CHARACTER                  
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050001"); B DOOERROR'           
         SET   CPFTRAN            SET TRANSPARENT DATA                          
         WHILE (R5,NZ),BEGIN                                                    
         LA    R1,VTBDATA(R4)                                                   
         LH    R0,VTBCOUNT                                                      
         WHILE (R0,POS),BEGIN                                                   
         LR    R2,R0                                                            
         IF    (R2,GT,255),'LA R2,255'                                          
         DEX   R2,'TR @R1(0),EVENPAR'        TRANSLATE TO EVEN PARITY           
         LA    R2,@R2+1                                                         
         AR    R1,R2                                                            
         SR    R0,R2                                                            
         END                                                                    
         SPACE                                                                  
         LA    R1,VTBDATA(R4)                                                   
         LH    R0,VTBCOUNT                                                      
         SR    R0,R4                                                            
         TSEG  (R1),(R0)           WRITE DATA                                   
         CLEAR R4                                                               
         L     R5,VTBNEXT                                                       
         END                                                                    
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
         CLEAR R15                 Indicate output buffer                       
         SETMSG L:CPSEGLOC,L:CPSEGLENF                                          
         VCALL VIEWTRC             Do any tracing                               
         SPACE                                                                  
         TWRITE                                                                 
         END   ,                   END RENEX TRANSPARENCY MODE                  
         SPACE                                                                  
         ELSEIF (VTWRCMD,NZ),'CLEAR R5' IF READ COMMAND                         
         SPACE                                                                  
         ELSE  BEGIN               ELSE STRUCTURED FIELD                        
         STM   4,5,DOOUT345+4                                                   
         LC    R2,VTBDATA(R4)      GET LENGTH                                   
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050002"); B DOOERROR'           
         SLL   R2,8                                                             
         IC    R2,VTBDATA(R4)                                                   
         IF    (R2,NZ),'LR R3,R2'                                               
         ST    R3,DOOUT345                                                      
         S     R3,=F'1'            ALREADY PROCESSED 2 BYTES                    
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050003"); B DOOERROR'           
         LC    R2,VTBDATA(R4)      GET STRUCTURE ID                             
         SPACE 3                                                                
         IF    (R2,EQ,=A(X'03')),BEGIN       IF ERASE/RESET                     
*QSNAP 'ERASE/RESET'                                                            
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050048"); B DOOERROR'           
         IC    R2,VTBDATA(R4)      GET IMPLICIT PARTITION SIZE                  
         N     R2,=A(X'80000000')                                               
         IF    (ZERO),'CLEAR VTWFALT; MVC VTWHEI(8),VTWHEID'                    
         ELSE  'SET VTWFALT; MVC VTWHEI(8),VTWHEIA'                             
         CLEAR VTWRMODE                                                         
         CLEAR R0                                                               
         ACALL CLEARSCR                      DO THE ERASE                       
         END   ,                             END ERASE/RESET                    
         SPACE 3                                                                
         ELSEIF (R2,EQ,=A(X'01')),BEGIN      IF READ PARTITION                  
*QSNAP 'READ PARTITION'                                                         
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050004"); B DOOERROR'           
         LC    R2,VTBDATA(R4)      GET PARTITION ID                             
         SPACE 2                                                                
         IF    (R2,EQ,=A(X'00')),BEGIN       IF READ PARTITION ZERO             
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050046"); B DOOERROR'           
         LC    R2,VTBDATA(R4)                GET TYPE                           
         IF     (R2,EQ,=A(X'6E')),'MVI VTWRCMD,X"6E"'  IF READ MOD ALL          
         ELSEIF (R2,EQ,=A(X'F2')),'MVI VTWRCMD,X"F2"'  IF READ BUFFER           
         ELSEIF (R2,EQ,=A(X'6E')),'MVI VTWRCMD,X"F6"'  IF READ MODIFIED         
         ELSE   'L R15,=A(X"10050047"); B DOOERROR' ELSE BAD TYPE               
         END   ,                             END READ PARTITION ZERO            
         SPACE 2                                                                
         ELSEIF (R2,EQ,=A(X'FF')),BEGIN      IF READ PARTITION QUERY            
         SPACE                                                                  
         IF    (RSRETRYE),'L R15,=A(X"10050006"); B DOOERROR'                   
         SET   RSRETRYR                                                         
         CLEAR VTWQLIST                                                         
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050007"); B DOOERROR'           
         LC    R2,VTBDATA(R4)      GET TYPE OF QUERY                            
         IF    (R2,EQ,=F'2'),'MVC VTWQLIST(7),=X"808185868788A6"'               
*  SUMMARY, USABLE AREA, CHAR SET, COLOR, HIGH, R M, IMPLICIT PARTITION         
         SPACE                                                                  
         ELSEIF (R2,EQ,=F'3'),BEGIN          IF Q LIST                          
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050008"); B DOOERROR'           
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050009"); B DOOERROR'           
         CLEAR R1                                                               
         WHILE ((R4,NZ),AND,(R3,POS),AND,(R1,LT,=A(L'VTWQLIST))),BEGIN          
         LC    R0,VTBDATA(R4)                                                   
         STC   R0,VTWQLIST(R1)                                                  
         INCR4O                                                                 
         LA    R1,@R1+1                                                         
         END                                                                    
         END   ,                             END Q LIST                         
         SPACE                                                                  
         ELSE  'L R15,=A(X"10050010"); B DOOERROR'                              
         SPACE                                                                  
         ACALL SENDQR              SEND THE QUERY RESPONSE                      
         CLEAR VTWFRCDI                                                         
         END   ,                   END READ PARTITION QUERY                     
         SPACE 2                                                                
         ELSE  'L R15,=A(X"10050005"); B DOOERROR' BAD PARTITION ID             
         END   ,                   END READ PARTITION                           
         SPACE 3                                                                
         ELSEIF (R2,EQ,=A(X'09')),BEGIN      IF SET REPLY MODE                  
*QSNAP 'SET REPLY MODE'                                                         
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050049"); B DOOERROR'           
         LC    R2,VTBDATA(R4)      GET PARTITION ID                             
         IF    (R2,NE,=A(X'00')),'L R15,=A(X"10050050"); B DOOERROR'            
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050051"); B DOOERROR'           
         LC    R2,VTBDATA(R4)                GET MODE                           
         IF    (R2,EQ,=A(X'00')),'MVI VTWRMODE,X"00"'                           
         ELSEIF (R2,EQ,=A(X'01')),'MVI VTWRMODE,X"01"'                          
         ELSEIF (R2,EQ,=A(X'02')),'MVI VTWRMODE,X"02"'                          
         ELSE   'L R15,=A(X"10050052"); B DOOERROR'                             
         INCR4O  ,                           READ NEXT CHARACTER                
         IF    ((R5,Z),OR,(R3,Z)),DOOUTB2    SHOULD BE NONE                     
         L     R15,=A(X'10050053')           ERROR: FIELD TOO LONG              
         B     DOOERROR                                                         
         B     DOOUTB2                                                          
         END   ,                             END SET REPLY MODE                 
         SPACE 3                                                                
         ELSEIF (R2,EQ,=A(X'0F')),BEGIN      IF 0FXX                            
         INCR4O                                                                 
         IF    ((R5,Z),OR,(R3,Z)),'L R15,=A(X"10050054"); B DOOERROR'           
         LC    R2,VTBDATA(R4)      GET SECOND CHARACTER OF ID                   
         IF    (R2,EQ,=A(X'02')),WRITESF     IF DESTINATION/ORG                 
         IF    (R2,EQ,=A(X'1F')),WRITESF     IF OEM DATA                        
         L     R15,=A(X'10050055')           OTHER 0FXX                         
         B     DOOERROR                                                         
         END   ,                             END 0FXX                           
         SPACE 3                                                                
         ELSEIF (R2,EQ,=A(X'D0')),BEGIN      IF DATA TRANSFER                   
WRITESF  LABEL                     WRITE ENTIRE STRUCTURED FIELD                
*QSNAP 'WRITE ENTIRE STRUCTURED FIELD'                                          
         LM    R3,R5,DOOUT345                                                   
         SET   CPFTRAN                       SET TRANSPARENT                    
         WHILE ((R5,NZ),AND,(R3,POS)),BEGIN                                     
         LA    R1,VTBDATA(R4)                                                   
         LH    R0,VTBCOUNT                                                      
         SR    R0,R4                                                            
         IF    (R0,GT,R3),'LR R0,R3'                                            
         SR    R3,R0               STEP COUNTERS                                
         AR    R4,R0                                                            
         TSEG  (R1),(R0)                                                        
         IF    (R4,GE,VTBCOUNT),'SET VTBFPROC; L R5,VTBNEXT; CLEAR R4'          
         END   ,                                                                
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
         CLEAR R15                 Indicate output buffer                       
         SETMSG L:CPSEGLOC,L:CPSEGLENF                                          
         VCALL VIEWTRC             Do any tracing                               
         SPACE                                                                  
         TWRITE                                                                 
         END   ,                   END DATA TRANSFER                            
         SPACE 3                                                                
         ELSE  BEGIN               ELSE UNKNOWN                                 
*QSNAP 'UNKNOWN STRUCTURED FIELD'                                               
         L     R15,=A(X'10050056')                                              
         B     DOOERROR                                                         
         END   ,                   END UNKNOWN                                  
         SPACE 3                                                                
         IF    (R5,POS),'INCR4O'   ADVANCE TO NEXT STRUCTURED FIELD             
DOOUTB2  LTR   R0,R5                                                            
         IF    (NZ),BEGIN          IF MORE DATA                                 
         LR    R1,R4                                                            
         B     DOOUTB1                                                          
         END   ,                   END MORE DATA                                
         END   ,                   END STRUCTURED FIELD                         
         END   ,                   END MORE OUTPUT TO WRITE                     
         SPACE                                                                  
DOODONE  LABEL                     WE ARE NOW DONE WITH THE DATA                
         IF    (CPFTRAN,AND,^VTWFRNXT),'CLEAR CPFTRAN'                          
         SPACE                                                                  
         IF    (VTWFWSCR),'ACALL WRITESCR'                                      
         L     R5,VTWORUC          CLEAN UP THE RECEIVE BUFFERS                 
         WITH  (VTBHEAD,R5)                                                     
         LR    R2,R5                                                            
         WHILE (R2,NZ),BEGIN       WHILE IN BUFFER                              
         LR    R5,R2                                                            
         L     R2,VTBNEXT                                                       
         LR    R1,R5                                                            
         FAIL  (VTBID,NE,C'VTBH'),DOOUTB,'BAD OUTBOUND BUFFER'                  
         VCALL FREECORE                                                         
         END   ,                   END IN BUFFERS                               
         SPACE                                                                  
         CLEAR VTWORUC                                                          
         DROP  R5                                                               
         SPACE                                                                  
         IF    (^VTWFRCDI*^VTWFREBI),BEGIN   IF NOT CHANGE STATE                
*                                            CONTINUE OUTBOUND                  
         IF    (^VSOUTB,AND,^VSOUTBSS),DOOEXIT                                  
         ACALL SENDRESP                                                         
         ACALL SRECEIVE                      START ANOTHER RECEIVE              
         SPACE                                                                  
         END   ,                             END NOT CHANGE STATE               
         SPACE                                                                  
         ELSE  BEGIN                         STATE HAS CHANGED                  
         IF    (VTWFREBI),BEGIN    IF END BRACKET                               
         SET   RSNORM                                                           
         IF    (VTWFKLOK),'SET VSCONT1'  SET CONTENTION                         
         ELSE  'SET VSCONT'                                                     
         END   ,                   END END BRACKET                              
         SPACE 2                                                                
         ELSE  BEGIN               ELSE CHANGE DIRECTION                        
         SET   VSINB                                                            
         IF    (RSRETRYR),DOOEXIT                                               
         IF    (VTWRCMD,NZ),BEGIN  IF EXPLICIT READ COMMAND                     
         ACALL SENDSCR             SEND SCREEN TO APPLICATION                   
         END   ,                   END EXPLICIT READ COMMAND                    
         SPACE                                                                  
         ELSE  BEGIN                                                            
         SET   RSNORM                                                           
         ACALL READSEND            READ THE TERMINAL AND SEND TO APPL           
         END                                                                    
         CLEAR VTWFRCDI                                                         
         END   ,                   END CHANGE DIRECTION                         
         END   ,                         END STATE HAS CHANGED                  
         SPACE                                                                  
         B     DOOEXIT             RETURN                                       
         SPACE 2                                                                
DOOERROR LABEL                     ERROR ROUTINE                                
         WITH  (VTBHEAD,R5)        ASSUMED                                      
*QSNAP 'DOOERROR'                                                               
*QSNAP (R0,R1,R2,R3,R4,R15)                                                     
*QSNAP VTBHEAD,200                                                              
         IF    (^VTWFSR1*^VTWFSR2),DOODONE                                      
         IF    (VTWSSENS,Z),BEGIN  SEND A NEGATIVE RESPONSE                     
         ST    R15,VTWSSENS        R15 = NEW SENSE CODE                         
         MVC   VTWSRSEQ,VTBSEQNO                                                
         SET   VTWRUD                                                           
         END                                                                    
         SPACE                                                                  
         L     R5,VTWORUC          CLEAN UP THE RECEIVE BUFFERS                 
         WITH  (VTBHEAD,R5)                                                     
         LR    R2,R5                                                            
         WHILE (R2,NZ),BEGIN       WHILE IN BUFFER                              
         LR    R5,R2                                                            
         L     R2,VTBNEXT                                                       
         LR    R1,R5                                                            
         FAIL  (VTBID,NE,C'VTBH'),DOOUTB,'BAD OUTBOUND BUFFER'                  
         VCALL FREECORE                                                         
         END   ,                   END IN BUFFERS                               
         SPACE                                                                  
         CLEAR VTWORUC                                                          
         DROP  R5                                                               
         SPACE 3                                                                
DOOEXIT  LABEL ,                   EXIT                                         
*                                  SEND RESPONSE                                
         L     R5,VTWSSENS         REMEMBER SENSE                               
         ACALL SENDRESP            SEND THE RESPONSE                            
         SPACE                                                                  
         IF    (R5,NZ),BEGIN       IF NEG RESPONSE                              
         ACALL SRECEIVE            START ANOTHER RECEIVE                        
         IF    (^VSCONT,AND,^VSCONT1,AND,^VSCONT2),'SET VSOUTB'                 
         END   ,                   END NEG RESPONSE                             
         PEND  ,                   RETURN                                       
         LTORG                                                                  
         EJECT                                                                  
*                                                                               
*                                                                               
* THIS IS THE RENEX TRANSPARENCY EVEN PARITY TABLE                              
*                                                                               
EVENPAR  DS        0XL256                                                       
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
         DC        X'008182038405068788090A8B0C8D8E0F'      00                  
         DC        X'901112931495961718999A1B9C1D1E9F'      10                  
         DC        X'A02122A324A5A62728A9AA2BAC2D2EAF'      20                  
         DC        X'30B1B233B43536B7B8393ABB3CBDBE3F'      30                  
         DC        X'C04142C344C5C64748C9CA4BCC4D4ECF'      40                  
         DC        X'50D1D253D45556D7D8595ADB5CDDDE5F'      50                  
         DC        X'60E1E263E46566E7E8696AEB6CEDEE6F'      60                  
         DC        X'F07172F374F5F67778F9FA7BFC7D7EFF'      70                  
         DC        X'008182038405068788090A8B0C8D8E0F'      80                  
         DC        X'901112931495961718999A1B9C1D1E9F'      90                  
         DC        X'A02122A324A5A62728A9AA2BAC2D2EAF'      A0                  
         DC        X'30B1B233B43536B7B8393ABB3CBDBE3F'      B0                  
         DC        X'C04142C344C5C64748C9CA4BCC4D4ECF'      C0                  
         DC        X'50D1D253D45556D7D8595ADB5CDDDE5F'      D0                  
         DC        X'60E1E263E46566E7E8696AEB6CEDEE6F'      E0                  
         DC        X'F07172F374F5F67778F9FA7BFC7D7EFF'      F0                  
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
*                                                                               
 TITLE 'State Routines               DOCONT -- Set up Contention State'         
*                                                                               
**  DOCONT -- Routine to Set up Contention State                                
**                                                                              
**    On entry:                                                                 
**      R6 = @ VTWA                                                             
**                                                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = @ BUFFER                                                          
**       R5 = @ RPL                                                             
**       R6 = VTWA                                                              
*                                                                               
**       Note: This routine may be called when the user has                     
**       just entered the "GO" or "ATTN" command.                               
*                                                                               
         SPACE                                                                  
DOCONT   PROC  ,                   SET UP CONTENTION STATE                      
*QSNAP 'ENTERED DOCONT'                                                         
         CLEAR VTWFREBI+VTWFRCDI                                                
         SPACE                                                                  
*QSNAP 'RECEIVE FOR CONTENTION STATE'                                           
         ACALL SRECEIVE                                                         
         SPACE                                                                  
         IF    (VTWFKLOK),BEGIN    IF LOCKED                                    
*QSNAP 'KEYBOARD LOCKED'                                                        
         SET   VSCONT1                                                          
         EXIT  DOCONT                                                           
         END   ,                   END LOCKED                                   
         SPACE                                                                  
         IF    (POSTBIND+POSTUBIR),'EXIT DOCONT' EXIT IF BIND HAPPENED          
         SET CPFDISP                                                            
         IF    (^VSOUTB),BEGIN     IF NOT ALREADY RECEIVED                      
*QSNAP 'ABOUT TO READ FROM TERMINAL FOR CONTENTION'                             
DOCONT1  TREAD ,                   READ FROM THE TERMINAL                       
         SPACE                                                                  
********************************************************************            
*                          WE NOW HAVE A CONTENTION STATE          *            
********************************************************************            
         SPACE                                                                  
*QSNAP (R0,R1,R15)                                                              
         IF    (NEG),BEGIN         IF LOGGING OFF                               
         ACALL FREEVTWA                                                         
         SPACE                                                                  
         CLEAR CPFDISP                                                          
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT                                                           
         END   ,                   END LOGGING OFF                              
         END   ,                   END NOT ALREADY RECEIVED                     
         SPACE                                                                  
         IF    (VSOUTB),BEGIN      IF ENDED BY BREAK                            
         COMMENT                   APPLICATION HAS GAINED BRACKET               
*QSNAP 'APPLICATION GAINS BRACKET'                                              
         B     DOCEXIT                                                          
         END   ,                   END ENDED BY BREAK                           
         SPACE                                                                  
         IF    (VSCONT,OR,VSINB),BEGIN       IF TERMINAL GAINS BRACKET          
*QSNAP 'TERMINAL GAINS BRACKET'                                                 
*QSNAP @R1,255                                                                  
         SET   VSINB,VTWFSBBI                                                   
         ACALL UPDATSCR            UPDATE SCREEN & SEND TO APPLICATION          
         IF    (AID3270R,EQ,X'FE'),'ACALL SSIGNAL'      ESC-A RECEIVED          
         IF    (AID3270R,GE,X'FE'),DOCONT1       BR NOT RECOGNIZED AID          
         EXIT  DOCONT                                                           
         END   ,                   END TERMINAL GAINS BRACKET                   
         SPACE                                                                  
         COMMENT                   ELSE OTHER RECEIVED                          
*QSNAP 'OTHER SENSED - BID'                                                     
         SPACE                                                                  
DOCEXIT  LABEL ,                   EXIT                                         
         ACALL SENDRESP            SEND THE RESPONSE                            
         PEND  ,                   RETURN                                       
         LTORG                                                                  
 TITLE 'State Routines                       DOINB -- Complete Inbound'         
*                                                                               
**  DOINB -- Conplete Inbound                                                   
**           Set state to Outbound                                              
**           Start a Receive from the Application                               
**                                                                              
**    On entry:                                                                 
**      R6 = @ VTWA                                                             
**                                                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
DOINB    PROC  ,                   DO INBOUND - COMPLETE INBOUND                
*QSNAP 'ENTERED DOINB'                                                          
         SET   VSOUTB              SET STATE TO OUTBOUND                        
         SPACE                                                                  
         ACALL SRECEIVE            START A RECEIVE                              
         SPACE                                                                  
         PEND  ,                   RETURN                                       
 TITLE '             READSEND -- READ Terminal and SEND to Application'         
*                                                                               
**  READSEND -- Read Terminal and Send to Application                           
**                                                                              
**    On entry:                                                                 
**      R6 = @ VTWA                                                             
**                                                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**       Note: This routine is normally called from DOOUTB,                     
**       but may be called from MAINLINE when the user has                      
**       just entered the "VGO" or "VATTN" command.                             
*                                                                               
         SPACE                                                                  
READSEND PROC  ,                   READ TERMINAL - SEND TO APPLICATION          
*QSNAP 'ENTERED READSEND'                                                       
RSEND1   LABEL                                                                  
*QSNAP 'RESEND1'                                                                
         ACALL SENDRESP                                                         
         SET   VSINB                                                            
         IF    (VTWFHATT),SENDNULL                                              
         IF    (VTWRCMD,NZ),'ACALL SENDSCR'  IF 3270 READ COMMAND               
         ELSE  BEGIN                                                            
*QSNAP 'ABOUT TO READ FROM THE TERMINAL'                                        
         TREAD ,                   READ FROM THE TERMINAL                       
*QSNAP (R0,R1,R15)                                                              
*QSNAP @R1,32                                                                   
         IF    (NEG),BEGIN         IF LOGGING OFF                               
         ACALL FREEVTWA                                                         
         SPACE                                                                  
         CLEAR CPFDISP                                                          
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT                                                           
         END   ,                   END LOGGING OFF                              
         SPACE                                                                  
         IF    (^VSINB),'B READSENX'                                            
         IF    (R15,EQ,X'65'),BEGIN  IF ENDED BY BREAK                          
SENDNULL L     R5,VTWAACBP         SEND A NULL CDI TO APPLICATION               
         WITH  (ACB,R5),'L R5,ACBNSRPL'                                         
         WITH  (RPL,R5)                                                         
         FAIL  (RPLACTIV,NZ),READSEND,'RPL NOT FREE'                            
         SPACE                                                                  
*QSNAP 'SEND NULL CDI'                                                          
         AIF   ('&BRANCH' EQ 'NO').MODE4                                        
         MODESET MODE=SUP              ********* ENTER SUPERVISOR STATE         
.MODE4   L     R2,=A(SRBROUT)                                                   
         SEND  RPL=(R5),RECLEN=0,                                      *        
               OPTCD=(ASY,CA,NBUFFLST),BRACKET=(NBB,NEB) ,             *        
               CHAIN=ONLY,CHNGDIR=CMD,                                 *        
               STYPE=REQ,CONTROL=DATA,BRANCH=&BRANCH,EXIT=(R2)                  
         LR    R2,R15                                                           
         MODESET MODE=PROB             ********* LEAVE SUPERVISOR STATE         
         SPACE                                                                  
         IF    (R2,Z),'B READSENX'           RETURN                             
         SPACE                                                                  
         KAPUT  READSEND,'SEND REFUSED'                                         
         END   ,                   END ENDED BY BREAK                           
         SPACE 2                                                                
         ACALL UPDATSCR            UPDATE SCREEN & SEND TO APPLICATION          
         IF    (AID3270R,EQ,X'FE'),'ACALL SSIGNAL'      ESC-A RECEIVED          
         IF    (AID3270R,GE,X'FE'),RSEND1        BR NOT RECOGNIZED AID          
         END                                                                    
         SPACE                                                                  
READSENX CLEAR VTWFHATT                                                         
         PEND  ,                   RETURN                                       
         LTORG                                                                  
 TITLE '      UPDATSCR -- Routine to update screen image from terminal'         
*                                                                               
**  UPDATSCR -- Routine to update the 3270 screen image with data read          
**              from the terminal, and send it to the application.              
**                                                                              
**    On entry:                                                                 
**      R0,R1,R15  Contain indicate results of the last terminal read           
**                                                                              
**    On exit:                                                                  
**      Data has been sent to the application                                   
*                                                                               
         SPACE                                                                  
UPDATSWA RECORD BEGIN              WORK AREA                                    
SCANA    DS    A                   @ AREA TO SCAN                               
SCANL    DS    F                   LENGTH TO SCAN                               
LSCANND  DS    F                   LENGTH JUST SCANNED                          
SCRENLOC DS    F                   CURRENT SCREEN ADDRESS                       
ENDFAC   DS    A                   @ ENDING FAC                                 
NPARMS   DS    F                   NUMBER OF CSI PARMS                          
UPDSCRF  FLAG  ,                   FLAGS                                        
         FLAG  UNFORMAT             UNFORMATTED SCREEN                          
         FLAG  MFDATA               MODIFIED FIELD DATA EXPECTED                
         FLAG  PROTECT              PROTECTED FIELD                             
         FLAG  WRAPTOP              FIELD WRAPS ON TOP                          
         FLAG  FIELDFUL             THE FIELD IS FULL - IGNORE DATA             
STOPCHAR DS    X                   STOPPING CHARACTER                           
PRIVPRE  DS    X                   PRIVATE PREFEX (<)                           
CSIFUNC  DS    X                   CSI FUNCTION CODE                            
PARMS    DS    64H                 CSI PARMS                                    
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R0,R1   = MOVE TO ADDRESS, LENGTH                                      
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6      = VTWA                                                         
**       R14,R15 = MOVE FROM ADDRESS, LENGTH                                    
*                                                                               
         SPACE                                                                  
UPDATSCR PROC  UPDATSWA            UPDATE SCREEN                                
*QSNAP 'ENTERED UPDATSCR'                                                       
         IF    (R15,POS),BREAK     BR RC FROM TREAD WAS ATTN                    
         CLEAR UPDATSWA                                                         
         SPACE                                                                  
         ST    R1,SCANA            SET UP INITIAL SCAN AREA                     
         ST    R0,SCANL                                                         
         SPACE                                                                  
         IF    (VTWFRNXT,OR,CPFTRAN),BEGIN  IF TRANSPARENT DATA                 
TRANSPAR CLEAR R5                                                               
         WITH  (VTBHEAD,R5)                                                     
         WHILE ('LT R2,SCANL',POS),BEGIN     WHILE DATA TO MOVE                 
         L     R4,VTWRSIZI                   GET THE NEXT BUFFER                
         LA    R0,@R4+VTBDATA-VTBHEAD                                           
         VCALL GETCORE                                                          
         IF    (VTWIRUC,Z),'ST R1,VTWIRUC'                                      
         ELSE  'ST R1,VTBNEXT'                                                  
         LR    R5,R1                                                            
         XC    VTBHEAD(VTBDATA-VTBHEAD),VTBHEAD                                 
         MVC   VTBID,=C'VTBH'                                                   
         STH   R4,VTBDLENG                                                      
         SPACE                                                                  
         LA    R0,VTBDATA          R0  := TO ADDRESS                            
         LR    R1,R4                                                            
         L     R14,SCANA           R14 := FROM ADDRESS                          
         LR    R15,R1                                                           
         CEIL  R15,R2                                                           
         STH   R15,VTBCOUNT                                                     
         SPACE                                                                  
         LR    R3,R14                                                           
         AR    R3,R15                                                           
         ST    R3,SCANA                                                         
         LCR   R3,R15                                                           
         AR    R3,R2                                                            
         ST    R3,SCANL                                                         
         SPACE                                                                  
         MVCL  R0,R14              MOVE THE DATA                                
         END   ,                   END DATA TO MOVE                             
         SPACE                                                                  
         ACALL SENDCHAN            SEND TO APPLICATION                          
         CLEAR CPFTRAN                                                          
         EXIT  UPDATSCR            RETURN                                       
         END   ,                             END TRANSPARENT DATA               
         EJECT                                                                  
         COMMENT                   CHECK FOR UNFORMATTED SCREEN                 
         CLEAR R1                                                               
         ACALL FINDNFAC                                                         
         IF    (NZ),BEGIN          IF NO FAC FOUND                              
         SET   UNFORMAT            SET UNFORMATTED                              
         END                                                                    
         SPACE                                                                  
SCAN     LABEL                     SCANNER LOOP                                 
         L     R3,SCANA                                                         
         L     R2,SCANL                                                         
         IF    (R2,NP),UPDAEND     IF NO MORE, END PROCESSING                   
         SPACE                                                                  
         CLEAR LSCANND,STOPCHAR,PRIVPRE                                         
         WHILE (R2,POS),BEGIN      WHILE MORE TO SCAN                           
         CEIL  R2,256                                                           
         DEX   R2,'TRT @R3(0),UPDTABL'                                          
         IF    (NZ),BEGIN          IF FOUND                                     
         STC   R2,STOPCHAR         SAVE THE STOP CHAR                           
         SR    R1,R3               R1 =  LENGTH SCANNED                         
         LR    R14,R1                                                           
         A     R14,LSCANND         R14 = TOTAL LENGTH SCANNED                   
         ST    R14,LSCANND                                                      
         LCR   R1,R1                                                            
         A     R1,SCANL                                                         
         ST    R1,SCANL            R1  = REMAINING TO SCAN                      
         B     MOVEDATA                                                         
         END   ,                   END FOUND                                    
         SPACE                                                                  
         ELSE  BEGIN               ELSE NOT FOUND                               
         LA    R2,@R2+1                                                         
         LA    R3,@R3+R2           R3 = NEW START                               
         A     R2,LSCANND                                                       
         ST    R2,LSCANND                                                       
         LCR   R2,R2               MAKE NEGATIVE                                
         A     R2,SCANL            R2 = REMAIN TO SCAN                          
         END   ,                   END NOT FOUND                                
         END   ,                   END MORE TO SCAN                             
         SPACE 3                                                                
MOVEDATA LABEL                     FIRST MOVE THE DATA STRING                   
         L     R15,LSCANND                                                      
         IF    (R15,POS),BEGIN               IF DATA TO MV                      
         CLEAR MFDATA                                                           
         IF    ((^PROTECT*^FIELDFUL),OR,(UNFORMAT)),BEGIN                       
         L     R1,SCANA            CONVERT TRAILING BLANKS TO NULLS             
         LR    R2,R15              R2 := COUNT                                  
         AR    R1,R2                                                            
         DECR  R1                  R1 := CHARACTER ADDRESS                      
         WHILE ((R2,POS),AND,('CLI @R1,X"40"',EQ)),BEGIN                        
         MVI   @R1,X'00'                                                        
         DECR  R1                                                               
         DECR  R2                                                               
         END                                                                    
         SPACE                                                                  
         L     R0,SCRENLOC         R0 := STARTING TO LOCATION                   
         SPACE                                                                  
         IF    (WRAPTOP+UNFORMAT),BEGIN      IF WRAP TOP                        
         L     R1,VTWBUFL                                                       
         SR    R1,R0                                                            
         SPACE                                                                  
         L     R14,SCANA           R14 := FROM ADDRESS                          
*                                        R15 = FROM COUNT                       
         SPACE                                                                  
         IF    (R1,GT,R15),'LR R1,R15'                                          
         ELSE  'LR R15,R1'                                                      
         LR    R2,R1                                                            
         A     R2,SCANA                                                         
         ST    R2,SCANA                                                         
         LCR   R2,R1                                                            
         A     R2,LSCANND                                                       
         ST    R2,LSCANND                                                       
         SPACE                                                                  
         LR    R2,R0               MOVE THE DATA   R2 = SCREENLOC               
         LR    R3,R1                               R3 = LENGTH                  
         A     R0,VTWTEXTP                                                      
         MVCL  R0,R14                                                           
         LR    R0,R2               CLEAR THE CHARACTER ATTRIBUTES               
         LR    R1,R3                                                            
         CLEAR R14,R15                                                          
         A     R0,VTWHIP                                                        
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCOLP                                                       
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCSP                                                        
         MVCL  R0,R14                                                           
         SPACE                                                                  
         CLEAR SCRENLOC,R0,WRAPTOP                                              
         END   ,                             END WRAP TOP                       
         SPACE                                                                  
         L     R14,SCANA           MOVE THE BOTTOM HALF                         
         LT    R15,LSCANND                                                      
         IF    (POS),BEGIN         IF MORE DATA                                 
         L     R1,ENDFAC                                                        
         SR    R1,R0                                                            
         SPACE                                                                  
         IF    (R1,GT,R15),'LR R1,R15'                                          
         ELSE  'LR R15,R1'                                                      
         LR    R2,R1                                                            
         A     R2,SCRENLOC                                                      
         ST    R2,SCRENLOC                                                      
         LR    R2,R1                                                            
         A     R2,SCANA                                                         
         ST    R2,SCANA                                                         
         LCR   R2,R1                                                            
         A     R2,LSCANND                                                       
         ST    R2,LSCANND                                                       
         SPACE                                                                  
         LR    R2,R0               MOVE THE DATA                                
         LR    R3,R1                                                            
         A     R0,VTWTEXTP                                                      
         MVCL  R0,R14                                                           
         LR    R0,R2               CLEAR THE CHARACTER ATTRIBUTES               
         LR    R1,R3                                                            
         CLEAR R14,R15                                                          
         A     R0,VTWHIP                                                        
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCOLP                                                       
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCSP                                                        
         MVCL  R0,R14                                                           
         END   ,                   END MORE DATA                                
         SPACE                                                                  
         L     R1,LSCANND                                                       
         IF    (R1,POS),BEGIN      IF DATA REMAINING                            
         SET   FIELDFUL                                                         
         LR    R2,R1               IGNORE IT                                    
         A     R2,SCANA                                                         
         ST    R2,SCANA                                                         
         CLEAR LSCANND                                                          
         END   ,                   END DATA REMAINING                           
         SPACE                                                                  
         IF    (SCRENLOC,GE,VTWBUFL),'CLEAR SCRENLOC'                           
         IF    (SCRENLOC,EQ,ENDFAC),'SET FIELDFUL'                              
         IF    (LT),'BAL R5,MOVENULL' IF MORE FIELD                             
         END   ,                                                                
         END   ,                   END DATA TO MOVE                             
         SPACE 3                                                                
         IF    (MFDATA),'BAL R5,MOVENULL' IF MF DATA EXPECTED                   
         SPACE 3                                                                
         LC    R15,STOPCHAR        PROCESS STOPPING CHARACTER                   
         IF    (R15,EQ,X'27'),ESC            ESC                                
         IF    (R15,EQ,X'FF'),BEGIN          IGNORE CHARACTER                   
         INCR  R1,SCANA                                                         
         DECR  R1,SCANL                                                         
         END                                                                    
         SPACE                                                                  
         IF    (R15,EQ,X'40'),BLANK          STORE BLANK                        
         IF    (R15,EQ,X'3B'),CSI            CSI                                
         IF    (R15,ZERO),UPDAEND            END OF DATA                        
         B     BLANK                         UNRECOGNIZED, STORE BLANK          
         SPACE 3                                                                
BLANK    LABEL                     INVALID CHARACTER - STORE BLANK              
         L     R2,SCRENLOC                                                      
         LR    R1,R2               STORE THE BLANK                              
         A     R1,VTWTEXTP                                                      
         MVI   @R1,X'40'                                                        
         LR    R1,R2               CLEAR THE ATTRIBUTES                         
         A     R1,VTWHIP                                                        
         MVI   @R1,X'00'                                                        
         LR    R1,R2                                                            
         A     R1,VTWCOLP                                                       
         MVI   @R1,X'00'                                                        
         LR    R1,R2                                                            
         A     R1,VTWCSP                                                        
         MVI   @R1,X'00'                                                        
         SPACE                                                                  
         LA    R2,@R2+1                                                         
         IF    (R2,GE,VTWBUFL),'CLEAR R2'                                       
         ST    R2,SCRENLOC                                                      
         IF    (R2,EQ,ENDFAC),'SET FIELDFUL'                                    
         INCR  R1,SCANA                                                         
         DECR  R1,SCANL                                                         
         B     SCAN                                                             
         SPACE 3                                                                
ESC      LABEL                     PROCESS ESCAPE CHARACTER                     
         L     R1,SCANA                                                         
         LC    R2,@R1+1            R2 := ESC PARM                               
         IF    (R2,EQ,C'['),BEGIN  IF CSI                                       
         STC   R2,PRIVPRE                                                       
         INCR  R1,SCANA                                                         
         DECR  R1,SCANL                                                         
         B     CSI                                                              
         END   ,                   END CSI                                      
         SPACE                                                                  
         B     BLANK               ELSE STORE BLANK                             
         SPACE 3                                                                
CSI      LABEL                     PROCESS CSI                                  
         CLEAR PRIVPRE                                                          
         DECR  R1,SCANL                                                         
         INCR  R1,SCANA                                                         
         IF    ((@R1,EQ,C'<'),OR,(@R1,EQ,C'='),OR,(@R1,EQ,C'>'),OR,(@R1*        
               ,EQ,C'?')),BEGIN    IF LOCAL PREFEX                              
         MVC   PRIVPRE,@R1                                                      
         INCR  R1,SCANA                                                         
         DECR  R2,SCANL                                                         
         END   ,                   END LOCAL PREFEX                             
         SPACE                                                                  
         XC    PARMS(128),PARMS    CLEAR ALL THE PARMS FOR NOW                  
         CLEAR R3                  COUNTER                                      
         IF    ((@R1,LT,C'0'),AND,(@R1,GT,C',')),CSIDONE                        
CSILOOP  LA    R0,10               LENGTH TO SCAN                               
         VCALL DTB                 CALL WYLBUR CONV ROUTINE                     
         STH   R15,PARMS(R3)       STORE THIS PARM                              
         LA    R3,2(,R3)           INCREMENT COUNTER                            
         IF    ((@R1,NE,C';'),AND,(@R1,NE,C',')),CSIDONE                        
         LA    R1,1(,R1)           POINT PAST SEMI                              
         CH    R3,=H'128'          TOO MANY PARMS?                              
         BL    CSILOOP             LOOP IF NOT                                  
CSIDONE  LR    R15,R3              CALCULATE # OF PARMS                         
         SRL   R15,1                                                            
         ST    R15,NPARMS                                                       
         LC    R2,@R1              R2 = FUNCTION CHAR                           
         STC   R2,CSIFUNC                                                       
         LA    R1,@R1+1            STEP PAST FUNCTION CHAR                      
         LR    R0,R1               FIND LENGTH SCANNED                          
         S     R0,SCANA                                                         
         ST    R1,SCANA                                                         
         LCR   R0,R0                                                            
         A     R0,SCANL                                                         
         ST    R0,SCANL                                                         
         SPACE                                                                  
         IF    (PRIVPRE,EQ,C'<'),BEGIN                                          
         IF    (R2,EQ,=A(C'V')),AID          AID CHARACTER                      
         IF    (R2,EQ,=A(C'C')),READCA       ADDRESS AT END OF READ             
         IF    (R2,EQ,=A(C'R')),MODIFYF      MODIFIED FIELD ADDRESS             
         END                                                                    
         B     SCAN                          ELSE IGNORE                        
         SPACE 2                                                                
MODIFYF  LABEL                     MODIFIED FIELD                               
         LH    R1,PARMS            R1 = ROW                                     
         IF    (R1,POS),'DECR R1'                                               
         MH    R1,VTWWID                                                        
         LH    R5,PARMS+2          R5 = COL                                     
         IF    (R5,POS),'DECR R5'                                               
         AR    R5,R1               R5 = BUFFER ADDRESS                          
         IF    (R5,GE,VTWBUFL),'CLEAR R5'                                       
         ST    R5,SCRENLOC                                                      
         SPACE                                                                  
         IF    (UNFORMAT),SCAN     IF UNFORMATTED, IGNORE FIELDS                
         CLEAR PROTECT+WRAPTOP+FIELDFUL                                         
         L     R1,SCRENLOC         FIND THE START OF THE FIELD                  
         ACALL FINDPFAC                                                         
         IF    (NE),BEGIN          IF NOT FOUND, BOTTOM WRAPS                   
         L     R1,VTWBUFL                                                       
         ACALL FINDPFAC                                                         
         IF    (NE),'SET UNFORMAT' IF UNFORMATTED SCREEN                        
         SPACE                                                                  
         ELSE  BEGIN               ELSE START REALLY WRAPS                      
         L     R2,VTWTEXTP                                                      
         AR    R2,R1                                                            
         TM    @R2,X'20'                                                        
         IF    (ON),'SET PROTECT'  IF PROTECTED                                 
         ELSE  BEGIN               ELSE PROCESS FIELD                           
         OI    @R2,X'01'           SET MODIFIED TAG                             
         SET   MFDATA                                                           
         CLEAR R1                                                               
         ACALL FINDNFAC                                                         
         ST    R1,ENDFAC                                                        
         END   ,                   END MODIFIED FIELD                           
         END   ,                   END START REALLY WRAPS                       
         END   ,                   END START WRAPS                              
         SPACE                                                                  
         ELSE  BEGIN               ELSE NORMAL FIELD                            
         L     R2,VTWTEXTP                                                      
         AR    R2,R1                                                            
         TM    @R2,X'20'                                                        
         IF    (ON),'SET PROTECT'  IF PROTECTED                                 
         ELSE  BEGIN               ESLE UNPROTECTED                             
         OI    @R2,X'01'           SET MODIFIED TAG                             
         SET   MFDATA                                                           
         LA    R1,@R1+1                                                         
         ACALL FINDNFAC                                                         
         IF    (NE),BEGIN          IF TOP WRAPS                                 
         SET   WRAPTOP                                                          
         CLEAR R1                                                               
         ACALL FINDNFAC                                                         
         END   ,                   END TOP WRAPS                                
         END   ,                   END UNPROTECTED                              
         ST    R1,ENDFAC                                                        
         END   ,                   END NORMAL FIELD                             
         B     SCAN                                                             
         SPACE 2                                                                
READCA   LABEL                     UPDATE READ CURSOR ADDRESS                   
         LH    R1,PARMS            R1 = ROW                                     
         IF    (R1,POS),'DECR R1'                                               
         MH    R1,VTWWID                                                        
         LH    R5,PARMS+2          R5 = COL                                     
         IF    (R5,POS),'DECR R5'                                               
         AR    R5,R1               R5 = BUFFER ADDRESS                          
         IF    (R5,GE,VTWBUFL),'L R5,VTWBUFL; DECR R5'                          
         ST    R5,VTWICPOS         STORE AS INSERT CURSOR ADDRESS               
         B     SCAN                                                             
         SPACE 2                                                                
AID      LABEL                     READ AID CHARACTER                           
         LH    R1,PARMS            R1 := AID CHARACTER                          
         CEIL  R1,255                                                           
         IF    (R1,EQ,=F'130'),BEGIN IF <BREAK>                                 
BREAK    CLEAR VTWFUACT,CPFDISP   CLEAR USER ACTIVE                             
         IF    (VTWFSBBI),BEGIN    IF CONTENTION                                
         SET   VSCONT                                                           
         CLEAR VTWFSBBI                                                         
         END   ,                   END CONTENTION                               
         SPACE                                                                  
         ELSE  'SET VSOUTB'        ESLE STILL OUTBOUND                          
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         END   ,                    END <BREAK>                                 
         SPACE                                                                  
         IC    R1,AIDTABL(R1)                                                   
         IF    (R1,EQ,X'88'),'B TRANSPAR'    BR STRUCTURED FIELD                
         STC   R1,AID3270R                                                      
         IF    (R1,NE,X'FF'),'STC R1,AID3270'                                   
         SET   RSRETRYE,VTWFKLOK                                                
         B     SCAN                                                             
         SPACE 3                                                                
*                                                                               
*  This routine suplies NULLS for a modified field,                             
*  when no data or short data has been received.                                
*                                                                               
*  It is patterened after the MOVEDATA routine.                                 
*                                                                               
MOVENULL LABEL                     MOVE NULLS IN PLACE OF DATA                  
         CLEAR MFDATA                                                           
         IF    (^PROTECT*^FIELDFUL),BEGIN    IF NULLS TO MOVE                   
         L     R0,SCRENLOC         R0 := STARTING TO LOCATION                   
         SPACE                                                                  
         IF    (WRAPTOP+UNFORMAT),BEGIN      IF WRAP TOP                        
         L     R1,VTWBUFL                                                       
         SR    R1,R0                                                            
         SPACE                                                                  
         CLEAR R14,R15             R14 := FROM ADDRESS                          
*                                    R15 = FROM COUNT                           
         SPACE                                                                  
         LR    R2,R0               MOVE NULLS                                   
         LR    R3,R1                                                            
         A     R0,VTWTEXTP                                                      
         MVCL  R0,R14                                                           
         LR    R0,R2               CLEAR THE CHARACTER ATTRIBUTES               
         LR    R1,R3                                                            
         A     R0,VTWHIP                                                        
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCOLP                                                       
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCSP                                                        
         MVCL  R0,R14                                                           
         SPACE                                                                  
         CLEAR SCRENLOC,R0,WRAPTOP                                              
         END   ,                             END WRAP TOP                       
         SPACE                                                                  
         CLEAR R14,R15             MOVE THE BOTTOM HALF                         
         L     R1,ENDFAC                                                        
         SR    R1,R0                                                            
         SPACE                                                                  
         LR    R2,R1                                                            
         A     R2,SCRENLOC                                                      
         ST    R2,SCRENLOC                                                      
         SPACE                                                                  
         LR    R2,R0               MOVE NULLS                                   
         LR    R3,R1                                                            
         A     R0,VTWTEXTP                                                      
         MVCL  R0,R14                                                           
         LR    R0,R2               CLEAR THE CHARACTER ATTRIBUTES               
         LR    R1,R3                                                            
         CLEAR R14,R15                                                          
         A     R0,VTWHIP                                                        
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCOLP                                                       
         MVCL  R0,R14                                                           
         LR    R0,R2                                                            
         LR    R1,R3                                                            
         A     R0,VTWCSP                                                        
         MVCL  R0,R14                                                           
         SPACE                                                                  
         SET   FIELDFUL                                                         
         IF    (SCRENLOC,GE,VTWBUFL),'CLEAR SCRENLOC'                           
         END   ,                   END NULLS TO MOVE                            
         BR    R5                  RETURN                                       
         SPACE 3                                                                
UPDAEND  LABEL                     END OF PROCESSING                            
         IF    (MFDATA),'BAL R5,MOVENULL' IF MF DATA EXPECTED                   
         IF    (AID3270R,LT,X'FE'),'ACALL SENDSCR' SEND SCREEN TO APPPL         
         PEND  ,                   RETURN                                       
         LTORG                                                                  
         EJECT                                                                  
*                                                                               
*                                                                               
* THIS IS THE INPUT TRT TABLE                                                   
*                                                                               
UPDTABL  DS        0XL256                                                       
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
         DC        X'0040404040404040FF40404040404040'      00                  
         DC        X'40404040404040404040404040404040'      10                  
         DC        X'40404040404040274040404040404040'      20                  
         DC        X'40404040404040404040403B40404040'      30                  
         DC        X'00000000000000000000000000000000'      40                  
         DC        X'00000000000000000000000000000000'      50                  
         DC        X'00000000000000000000000000000000'      60                  
         DC        X'00000000000000000000000000000000'      70                  
         DC        X'00000000000000000000000000000000'      80                  
         DC        X'00000000000000000000000000000000'      90                  
         DC        X'00000000000000000000000000000000'      A0                  
         DC        X'00000000000000000000000000000000'      B0                  
         DC        X'00000000000000000000000000000000'      C0                  
         DC        X'00000000000000000000000000000000'      D0                  
         DC        X'00000000000000000000000000000000'      E0                  
         DC        X'00000000000000000000000000000000'      F0                  
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
*                                                                               
*                                                                               
* THIS IS THE AID EQUIVALENCE TABLE.  THIS GIVE THE IBM CODE                    
* FOR THE AID RECEIVED                                                          
*                                                                               
AIDTABL  DS        0XL256                                                       
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
         DC        X'7DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      00                  
         DC        X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      10                  
         DC        X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      20                  
         DC        X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      30                  
         DC        X'FFFEFF6D6EFF6BFFFFFFFFFFFFFFFFFF'      40                  
         DC        X'FFFFFF6CFFFFFFFFFFFFFFFFFFFFFFFF'      50                  
         DC        X'FFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFF'      60                  
         DC        X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      70                  
         DC        X'FFFFFFFFFFFFFFFF88FFFFFFFFFFFFFF'      80                  
         DC        X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      90                  
         DC        X'FF6D7E6A7F7DE67D88E8606C6E6BFFFF'      A0                  
         DC        X'E77D7D7D7D7D7D7D7D7D7D7D7D7D7D7D'      B0                  
         DC        X'FFFFFFFFFFFFFFFFFFF1F2F3F4F5F6F7'      C0                  
         DC        X'F8F97A7B7CC1C2C3C4C5C6C7C8C94A4B'      D0                  
         DC        X'4CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      E0                  
         DC        X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'      F0                  
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
*                                                                               
*  X'FF' indicates unrecognized AID, X'EF' indicates ATTN                       
 TITLE '     PRCESSCR -- Routine to update 3270 buffer image from host'         
*                                                                               
**  PRCESSCR -- Routine to process received buffer updates                      
**            from the  Application, and update the 3270 buffer image.          
**                                                                              
**    On entry:                                                                 
**      VTWOBRUC points to the first buffer header                              
**      R1 = Offset in data to start processing                                 
**      R0 = 0 Start processing with first buffer                               
**      R0 = @ Buffer to start processing structure                             
**                                                                              
**    On exit: R15 = 0 or contains error sense code                             
**             R0  = @ current beffer                                           
**             R0  = 0 if entire buffer was screen data                         
**             R1  = Data offset of non screen structured field                 
**                   or offset of X'70' for RENEX Transparent Data              
**    The following indicates that additional proceessing must be done:         
**       R0 ^= 0      Indicates non screen output to be done                    
**       VTWRCMD ^= 0 Indicates a READ command to be processed                  
**       VTWFRNXT ON  Indicates RENEX transparency mode                         
**                                                                              
** => Note: This routine may be called from the Receive Dispatcher              
**          Routine, so that the screen image may be updated                    
**          while the user is NOT active. <=                                    
*                                                                               
         SPACE                                                                  
PRCSWA   RECORD BEGIN             WORK AREA                                     
PRCSSCRF DS    F                   FULL WORD SCRATCH AREA                       
PRCSFLEN DS    F                   STRUCTURED FIELD LENGTH                      
RCVPAIRC DS    H                   SFE, SA, MF PAIR COUNT                       
RCVCAHI  DS    X                   CHARACTER HIGHLIGHT                          
RCVCACOL DS    X                   CHARACTER COLOR                              
RCVCACS  DS    X                   CHARACTER CHARACTER SET                      
PRCSFLA  FLAG  ,                   FLAGS                                        
         FLAG  LASTFACP             LAST FAC WAS PROTECTED                      
         FLAG  GESC                 NEXT CHARACTER FROM F1 SET                  
         FLAG  PTEN                 PROGRAM TAB ORDER ENTERS NULLS              
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 = CHARACTER BEING PROCESSED                                         
**       R3 = SCREEN CURRENT INDEX                                              
**       R4 = INPUT BUFFER DATA INDEX                                           
**       R5 = INPUT BUFFER ADDRESS                                              
**       R6 = VTWA                                                              
*                                                                               
         EJECT                                                                  
         MACRO                                                                  
         INCR4 ,                   INCREMENT R4 AND STEP TO NEXT BUFFER         
         BAL   R14,INCR4                                                        
         MEND                                                                   
         SPACE                                                                  
         MACRO                                                                  
         INCR3 ,                   INCREMENT R3 AND WRAP TO ZERO                
         LA    R3,@R3+1                                                         
         IF    (R3,GE,VTWBUFL),'CLEAR R3'                                       
         MEND                                                                   
         SPACE 2                                                                
PRCESSCR PROC  PRCSWA           PROCESS RECEIVED SCREEN UPDATES                 
*QSNAP 'ENTERED PRCESSCR'                                                       
         CLEAR PRCSWA,VTWFRNXT                                                  
         MVC   PRCSFLEN,=A(X'7FFFFFFF')                                         
*                                                                               
         LR    R4,R1               R4 = BUFFER DATA INDEX                       
         IF    ('LTR R5,R0',NZ),PRCSTR                                          
         L     R5,VTWORUC          R5=BUFFER BASE                               
         WITH  (VTBHEAD,R5)                                                     
         WHILE ((R5,NZ),AND,(VTBCOUNT,ZERO)),'L R5,VTBNEXT'                     
         IF    ('LTR R0,R5',ZERO),'CLEAR R1,R15; B PSCREXIT'                    
         SPACE                                                                  
         LC    R2,VTBDATA(R4)      GET FIRST CHARACTER                          
*                                  SHOULD BE A COMMAND                          
         IF    (R2,EQ,X'F3'),BEGIN           IF STRUCTURED FIELD                
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050015"); LR R0,R5; B PSCREXIT'                
PRCSTR   LABEL                     RECEIVE STRUCTURE                            
         LR    R1,R4               SAV OFFSET TO STRUCTURED FILED               
         LR    R0,R5               AND BUFFER ADDRESS                           
         LC    R2,VTBDATA(R4)       GET COUNT                                   
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050016"); LR R0,R5; B PSCREXIT'                
         SLL   R2,8                                                             
         IC    R2,VTBDATA(R4)                                                   
         IF    (R2,Z),'L R2,=A(X"7FFFFFFF")'                                    
         S     R2,=F'1'            ALREADY PROCESSED 2 BYTES                    
         ST    R2,PRCSFLEN                                                      
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050017"); LR R0,R5; B PSCREXIT'                
         LC    R2,VTBDATA(R4)                                                   
         IF    (R2,NE,X'40'),BEGIN           IF NOT SCREEN                      
         CLEAR R15                                                              
         B     PSCREXIT                                                         
         END   ,                             END NOT SCREEN                     
         SPACE                                                                  
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050018"); LR R0,R5; B PSCREXIT'                
         LC    R2,VTBDATA(R4)                                                   
         IF    (R2,NZ),BEGIN                 IF NOT PARTITION 0                 
         L     R15,=A(X'10050019')  PID > MAXIMUM                               
         LR    R0,R5                                                            
         B     PSCREXIT                                                         
         END   ,                             END NOT PARTITION 0                
         SPACE                                                                  
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050020"); LR R0,R5; B PSCREXIT'                
         LC    R2,VTBDATA(R4)       GET COMMAND                                 
         END   ,                             END STRUCTURED FIELD               
         SPACE                                                                  
         ELSE  'MVC PRCSFLEN,=A(X"7FFFFFFF")'                                   
         SPACE                                                                  
         IF   ((R2,EQ,X'F2'),OR,                                       *        
               (R2,EQ,X'F6'),OR,                                       *        
               (R2,EQ,X'6E')),BEGIN         IF READ COMMAND                     
         STC   R2,VTWRCMD                                                       
         LR    R1,R4                                                            
         LR    R0,R5                                                            
         CLEAR R15                                                              
         B     PSCREXIT                                                         
         END   ,                             END READ COMMAND                   
         SPACE                                                                  
*                                            ELSE WRITE COMMAND                 
         IF    (R2,EQ,X'6F'),BEGIN           IF ERASE ALL UNPROTECTED           
         CLEAR LASTFACP,VTWICPOS                                                
         CLEAR R3                            START FROM ZERO                    
         L     R14,VTWTEXTP                  FIND FAC                           
         LC    R15,@R14                      FIRST TRY LOC 0                    
         IF    ((R15,LT,X'40'),AND,(R15,NZ)),BEGIN                              
         LA    R0,X'20'                      IF LOC 0 IS A FAC                  
         NR    R0,R15                                                           
         IF    (Z),BEGIN           IF UNPROTECTED                               
         NI    @R14,B'11111110'                                                 
         END   ,                   END UNPROTECTED                              
         ELSE  'SET LASTFACP'                                                   
         SPACE                                                                  
         LA    R3,@R3+1                                                         
         END   ,                             END LOC 0 IS A FAC                 
         SPACE                                                                  
         ELSE  BEGIN                         ELSE LOC 0 ^ A FAC                 
         L     R1,VTWBUFL                    PROTECTION IS WRAPPED              
         ACALL FINDPFAC                      FIND HIGHEST FAC                   
         IF    (EQ),BEGIN          IF FOUND                                     
         L     R14,VTWTEXTP                                                     
         LA    R14,@R14(R1)                                                     
         LC    R15,@R14                                                         
         LA    R0,X'20'                                                         
         NR    R0,R15                                                           
         IF    (Z),BEGIN           IF UNPROTECTED                               
         ST    R1,VTWICPOS                                                      
         NI    @R14,B'11111110'                                                 
         END   ,                   END UNPROTECTED                              
         ELSE  'SET LASTFACP'                                                   
         END   ,                   END FOUND                                    
         END   ,                             END LOC 0 ^ A FAC                  
         SPACE                                                                  
         WHILE (R3,LT,VTWBUFL),BEGIN         ERASE LOOP                         
         LR    R1,R3                                                            
         ACALL FINDNFAC                                                         
         IF    (NE),'L R1,VTWBUFL'                                              
         CLEAR R0                                                               
         IF    (^LASTFACP),'ACALL REPEATOA'                                     
         LR    R3,R1                                                            
         SPACE                                                                  
         IF    (R3,LT,VTWBUFL),BEGIN                                            
         L     R14,VTWTEXTP                                                     
         LA    R14,@R14(R3)                                                     
         LC    R15,@R14                                                         
         LA    R0,X'20'                                                         
         NR    R0,R15                                                           
         IF    (Z),BEGIN           IF UNPROTECTED                               
         CLEAR LASTFACP                                                         
         IF    (R3,LT,VTWICPOS),'ST R3,VTWICPOS'                                
         NI    @R14,B'11111110'                                                 
         END   ,                   END UNPROTECTED                              
         SPACE                                                                  
         ELSE  'SET LASTFACP'                                                   
         END                                                                    
         INCR  R3                            STEP SCREEN POSITION               
         END   ,                             END ERASE LOOP                     
         SPACE                                                                  
         SET   RSNORM                                                           
         CLEAR AID3270,VTWFKLOK                                                 
         LR    R1,R3                                                            
         LR    R0,R5                                                            
         CLEAR R15                                                              
         SET   VTWFWSCR                                                         
         B     PSCREXIT                                                         
         END   ,                             END ERASE ALL UNPROTECTED          
         SPACE                                                                  
         ELSE  BEGIN                         ELSE ^ EAU                         
         IF   ((R2,EQ,X'F5'),OR,                                       *        
               (R2,EQ,X'7E')),BEGIN          IF ERASE                           
         IF    (R2,EQ,X'F5'),'CLEAR VTWFALT; MVC VTWHEI(8),VTWHEID'             
         ELSE  'SET VTWFALT; MVC VTWHEI(8),VTWHEIA'                             
         CLEAR R0                                                               
         ACALL CLEARSCR                      DO THE ERASE                       
         END   ,                             END ERASE                          
         SPACE                                                                  
         ELSE  BEGIN                         ELSE ^ ERASE                       
         IF    (R2,NE,X'F1'),BEGIN           IF NOT WRITE                       
         L     R15,=A(X'10030021')  INVALID CMD BYTE                            
         LR    R0,R5                                                            
         B     PSCREXIT                                                         
         END   ,                             END NOT WRITE                      
         END   ,                             END ^ ERASE                        
         END   ,                             END ^ EAU                          
         SPACE                                                                  
         INCR4                     PROCESS THE WCC                              
         IF    (Z),'L R15,=A(X"10050022"); LR R0,R5; B PSCREXIT'                
         LC    R2,VTBDATA(R4)                                                   
         LA    R1,X'04'                                                         
         NR    R1,R2                                                            
         IF    (NZ),'SET VTWFBEL'                                               
         LA    R1,X'02'                                                         
         NR    R1,R2                                                            
         IF    (NZ),'CLEAR VTWFKLOK,AID3270'                                    
         LA    R1,X'40'                                                         
         NR    R1,R2                                                            
         IF    (NZ),'CLEAR AID3270,VTWRMODE; SET RSNORM'                        
         LA    R1,X'01'                                                         
         NR    R1,R2                                                            
         IF    (NZ),BEGIN          IF RESET MDT                                 
         L     R2,VTWBUFL                                                       
         L     R3,VTWTEXTP                                                      
         CLEAR R1                                                               
         WHILE (R1,LT,R2),BEGIN              RESET LOOP                         
         ACALL FINDNFAC                                                         
         IF    (NE),EXIT                                                        
         LA    R15,@R3(R1)                                                      
         NI    @R15,B'11111110'                                                 
         LA    R1,@R1+1                                                         
         END   ,                             END RESET LOOP                     
         SET   RSNORM                                                           
         END   ,                   END RESET MDT                                
         CLEAR PTEN                                                             
         SPACE                                                                  
         INCR4                     GET THE FIRST SCREEN DATA                    
         IF    (Z),BEGIN                                                        
         SET   VTWFWSCR                                                         
         IF    ('LTR R0,R5',NZ),PRCSTR    IF MORE INPUT, NEXT STRUCTURE         
         CLEAR  R1,R15                                                          
         B     PSCREXIT                                                         
         END                                                                    
         SPACE                                                                  
         CLEAR R3                  R3 = DISPLAY BUFFER OFFSET                   
         SPACE                                                                  
         LC    R2,VTBDATA(R4)      PROCESS FIRST DATA CHARACTER                 
         IF    (R2,EQ,X'70'),BEGIN           IF RENEX TRANSPARENT               
         SET   VTWFRNXT            SET RENEX TRANSPARENT                        
         LR    R0,R5                                                            
         LR    R1,R4                                                            
         CLEAR R15                                                              
         B     PSCREXIT                                                         
         END   ,                             END RENEX TRANSPARENT              
         SPACE                                                                  
         SET   VTWFWSCR                                                         
         EJECT                                                                  
         LOOP  BEGIN                         PROCESS SCREEN ORDER LOOP          
         IF    ((R2,GE,X'40'),OR,(R2,ZERO)),DISPLAYC    ^ SCREEN ORDER          
         SPACE                                                                  
         IF    (R2,EQ,X'1D'),BEGIN          *IF START FIELD (SF)*               
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050023"); LR R0,R5; B PSCREXIT'                
         LC    R2,VTBDATA(R4)                                                   
         N     R2,=A(X'3F')                                                     
         O     R2,=F'2'            MAKE FAC NON NULL                            
         L     R1,VTWTEXTP         TEXT BUFFER                                  
         STC   R2,@R1(R3)                                                       
         CLEAR R2                                                               
         L     R1,VTWHIP           HIGHLIGHT BUFFER                             
         STC   R2,@R1(R3)                                                       
         L     R1,VTWCOLP          COLOR BUFFER                                 
         STC   R2,@R1(R3)                                                       
         L     R1,VTWCSP           CHARACTER SET                                
         STC   R2,@R1(R3)                                                       
         INCR3                                                                  
         CLEAR PTEN                                                             
         END   ,                             END START FILED                    
         SPACE                                                                  
         ELSEIF (R2,EQ,X'29'),BEGIN         *IF START FIELD EXTENDED*           
         LA    R2,2                CLEAR ATTRIBUTES                             
         L     R1,VTWTEXTP         TEXT BUFFER                                  
         STC   R2,@R1(R3)                                                       
         CLEAR R2                                                               
         L     R1,VTWHIP           HIGHLIGHT BUFFER                             
         STC   R2,@R1(R3)                                                       
         L     R1,VTWCOLP          COLOR BUFFER                                 
         STC   R2,@R1(R3)                                                       
         L     R1,VTWCSP           CHARACTER SET                                
         STC   R2,@R1(R3)                                                       
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050024"); LR R0,R5; B PSCREXIT'                
         LC    R1,VTBDATA(R4)                                                   
         STC   R1,RCVPAIRC+1       NUMBER OF PAIRS                              
         WHILE (R1,POS),BEGIN      PROCESS PAIRS                                
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050025"); LR R0,R5; B PSCREXIT'                
         LC    R2,VTBDATA(R4)                                                   
         LR    R0,R5                                                            
         CLEAR R1                                                               
         IF     (R2,EQ,X'C0'),'L R1,VTWTEXTP' FIELD                             
         ELSEIF (R2,EQ,X'41'),'L R1,VTWHIP'   HIGHLIGHT                         
         ELSEIF (R2,EQ,X'42'),'L R1,VTWCOLP'  COLOR                             
         ELSEIF (R2,EQ,X'43'),'L R1,VTWCSP'   CHARACTER SET                     
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050026"); LR R0,R5; B PSCREXIT'                
         IF    (R1,Z),'L R15,=A(X"10050027"); LR R0,R5; B PSCREXIT'             
         LC    R2,VTBDATA(R4)                                                   
         IF    (R1,EQ,VTWTEXTP),BEGIN                                           
         N     R2,=A(X'3F')                                                     
         O     R2,=F'2'            MAKE FAC NON NULL                            
         END                                                                    
         SPACE                                                                  
         STC   R2,@R1(R3)                                                       
         DECR  R1,RCVPAIRC                                                      
         END   ,                   END PROCESS PAIRS                            
         INCR3                                                                  
         CLEAR PTEN                                                             
         END   ,                   END START FIELD EXTENDED                     
         SPACE                                                                  
         ELSEIF (R2,EQ,X'11'),BEGIN         *IF SBA*                            
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050028"); LR R0,R5; B PSCREXIT'                
         LC    R1,VTBDATA(R4)                                                   
         SLL   R1,8                                                             
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050029"); LR R0,R5; B PSCREXIT'                
         IC    R1,VTBDATA(R4)                                                   
         ACALL DISTOBUF                                                         
         IF    (R1,GE,VTWBUFL),                                        *        
               'L R15,=A(X"10050045"); LR R0,R5; B PSCREXIT'                    
         LR    R3,R1                                                            
         CLEAR PTEN                                                             
         END   ,                             END SBA                            
         SPACE                                                                  
         ELSEIF (R2,EQ,X'28'),BEGIN         *IF SET ATTRIBUTE (SA)*             
         INCR4                                                                  
         LC    R2,VTBDATA(R4)                                                   
         CLEAR R1                                                               
         IF    (R2,ZERO),BEGIN                                                  
         CLEAR (RCVCAHI,3)         ALL DEFAULT                                  
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050030"); LR R0,R5; B PSCREXIT'                
         END                                                                    
         SPACE                                                                  
         ELSE  BEGIN                                                            
         IF     (R2,EQ,X'41'),'LA R1,RCVCAHI'  HIGHLIGHT                        
         ELSEIF (R2,EQ,X'42'),'LA R1,RCVCACOL' COLOR                            
         ELSEIF (R2,EQ,X'43'),'LA R1,RCVCACS'  CHARACTER SET                    
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050031"); LR R0,R5; B PSCREXIT'                
         IF    (R1,Z),'L R15,=A(X"10050032"); LR R0,R5; B PSCREXIT'             
         LC    R2,VTBDATA(R4)                                                   
         STC   R2,@R1                                                           
         END                                                                    
         SPACE                                                                  
         CLEAR PTEN                                                             
         END   ,                             END SET ATTRIBUTE (SA)             
         EJECT                                                                  
         ELSEIF (R2,EQ,X'2C'),BEGIN         *IF MODIFY FIELD (MF)*              
         L     R1,VTWTEXTP         VERIFY EXISTANCE OF FAC                      
         LC    R14,@R1(R3)                                                      
         IF    ((R14,Z),OR,(R14,GE,X'40')),                            *        
               'L R15,=A(X"10050033"); LR R0,R5; B PSCREXIT'                    
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050034"); LR R0,R5; B PSCREXIT'                
         LC    R1,VTBDATA(R4)                                                   
         STC   R1,RCVPAIRC+1       NUMBER OF PAIRS                              
         WHILE (R1,POS),BEGIN      PROCESS PAIRS                                
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050035"); LR R0,R5; B PSCREXIT'                
         LC    R2,VTBDATA(R4)                                                   
         CLEAR R1                                                               
         IF     (R2,EQ,X'C0'),'L R1,VTWTEXTP' FIELD                             
         ELSEIF (R2,EQ,X'41'),'L R1,VTWHIP'   HIGHLIGHT                         
         ELSEIF (R2,EQ,X'42'),'L R1,VTWCOLP'  COLOR                             
         ELSEIF (R2,EQ,X'43'),'L R1,VTWCSP'   CHARACTER SET                     
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050036"); LR R0,R5; B PSCREXIT'                
         IF    (R1,Z),'L R15,=A(X"10050037"); LR R0,R5; B PSCREXIT'             
         LC    R2,VTBDATA(R4)                                                   
         IF    (R1,EQ,VTWTEXTP),BEGIN                                           
         N     R2,=A(X'3F')                                                     
         O     R2,=F'2'            MAKE FAC NON NULL                            
         END                                                                    
         SPACE                                                                  
         STC   R2,@R1(R3)                                                       
         DECR  R1,RCVPAIRC                                                      
         END   ,                   END PROCESS PAIRS                            
         INCR3                                                                  
         CLEAR PTEN                                                             
         END   ,                             END MODIFY FIELD (MF)              
         SPACE                                                                  
         ELSEIF (R2,EQ,X'13'),BEGIN         *IF INSERT CURSOR (IC)*             
         ST    R3,VTWICPOS                   SAVE THE CURSOR POSITION           
         CLEAR PTEN                                                             
         END   ,                             END INSERT CURSOR                  
         SPACE                                                                  
         ELSEIF (R2,EQ,X'05'),BEGIN         *IF PROGRAM TAB (PT)*               
         LOOP  BEGIN               BEGIN LOOP                                   
         LR    R1,R3                                                            
         ACALL FINDNFAC                                                         
         IF    (NE),'L R1,VTWBUFL'                                              
         IF    (PTEN),BEGIN        IF PROGRAM TAB ENTERS NULL                   
         CLEAR R0                                                               
         ACALL REPEATOA                                                         
         END   ,                   END PROGTAM TAB ENTERS NULL                  
         SPACE                                                                  
         LR    R3,R1                                                            
         IF    (R3,GE,VTWBUFL),BEGIN                                            
         CLEAR R3                                                               
         B     PTDONE                                                           
         END                                                                    
         SPACE                                                                  
         L     R14,VTWTEXTP                                                     
         LA    R14,@R14(R3)                                                     
         TM    @R14,X'20'          TEST PROTECTED                               
         IF    (ZERO),EXIT                                                      
         END   ,                   END LOOP                                     
         INCR3                                                                  
PTDONE   END   ,                             END PROGRAM TAB                    
         SPACE                                                                  
         ELSEIF (R2,EQ,X'3C'),BEGIN         *IF REPEAT TO ADDRESS (RA)*         
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050038"); LR R0,R5; B PSCREXIT'                
         LC    R1,VTBDATA(R4)                                                   
         SLL   R1,8                                                             
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050039"); LR R0,R5; B PSCREXIT'                
         IC    R1,VTBDATA(R4)                                                   
         ACALL DISTOBUF            R1 = STOP ADDRESS                            
         IF    (R1,GT,VTWBUFL),                                        *        
               'L R15,=A(X"10050047"); LR R0,R5; B PSCREXIT'                    
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050040"); LR R0,R5; B PSCREXIT'                
         LC    R0,VTBDATA(R4)       R2 = CHARACTER TO REPEAT                    
         IF    (R2,EQ,X'08'),BEGIN           IF GRAPHIC ESCAPE                  
         SET   GESC                          SET THE FLAG                       
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050041"); LR R0,R5; B PSCREXIT'                
         LC    R0,VTBDATA(R4)                 GET THE CHARACTER                 
         END   ,                             END GRAPHIC ESCAPE                 
         SPACE                                                                  
         IF    ((R0,NZ),AND,(R0,LT,X'40')),'LA R0,X"40"'                        
         IF    (GESC),'ICM R0,B"1000",=X"F1"; CLEAR GESC'                       
         ELSE  'ICM R0,B"1000",RCVCACS'                                         
         ICM   R0,B'0100',RCVCACOL                                              
         ICM   R0,B'0010',RCVCAHI                                               
         SPACE                                                                  
*                                            DO THE REPEAT                      
         IF    (R1,LE,R3),BEGIN    IF WRAP                                      
         ST    R0,PRCSSCRF         SAVE IN SCRATCH AREA                         
         LR    R2,R1               SAVE IN R2                                   
         L     R1,VTWBUFL                                                       
         ACALL REPEATOA                                                         
         L     R0,PRCSSCRF                                                      
         LR    R1,R2                                                            
         CLEAR R3                                                               
         END   ,                   END WRAP                                     
         ACALL REPEATOA                                                         
         LR    R3,R1                                                            
         IF    (R3,GE,VTWBUFL),'CLEAR R3'                                       
         CLEAR PTEN                                                             
         END   ,                             END REPEAT TO ADDRESS              
         SPACE                                                                  
         ELSEIF (R2,EQ,X'12'),BEGIN        *IF ERASE UNPROTECTED (EUA)*         
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050042"); LR R0,R5; B PSCREXIT'                
         LC    R1,VTBDATA(R4)                                                   
         SLL   R1,8                                                             
         INCR4                                                                  
         IF    (Z),'L R15,=A(X"10050043"); LR R0,R5; B PSCREXIT'                
         IC    R1,VTBDATA(R4)                                                   
         ACALL DISTOBUF                                                         
         LR    R2,R1               R2 = ENDING POSITION                         
         IF    (R2,GT,VTWBUFL),                                        *        
               'L R15,=A(X"10050044"); LR R0,R5; B PSCREXIT'                    
         CLEAR LASTFACP                                                         
         LR    R1,R3               FIND PREVIOUS FAC                            
         ACALL FINDPFAC                                                         
         IF    (NE),'L R1,VTWBUFL; ACALL FINDPFAC'                              
         IF    (EQ),BEGIN                                                       
         L     R14,VTWTEXTP                                                     
         LA    R15,@R14(R1)                                                     
         TM    @R15,X'20'                                                       
         IF    (ON),'SET LASTFACP'                                              
         END                                                                    
         SPACE                                                                  
*                                            ERASE                              
         IF    (R2,LE,R3),BEGIN              IF WRAP                            
         L     R14,VTWTEXTP                  DO HIGH PART                       
         L     R15,@R14(R3)                                                     
         IF    ((R15,LT,X'40'),AND,(R15,NZ)),'LA R1,@R1+1'                      
         WHILE (R3,LT,VTWBUFL),BEGIN         ERASE LOOP                         
         LR    R1,R3                                                            
         ACALL FINDNFAC                                                         
         IF    (NE),'L R1,VTWBUFL'                                              
         CLEAR R0                                                               
         IF    (^LASTFACP),'ACALL REPEATOA'                                     
         LR    R3,R1                                                            
         IF    (R3,LT,VTWBUFL),BEGIN                                            
         L     R14,VTWTEXTP                                                     
         LA    R15,@R14(R3)                                                     
         TM    @R15,X'20'                                                       
         IF    (NO),'CLEAR LASTFACP'                                            
         ELSE  'SET LASTFACP'                                                   
         END                                                                    
         INCR  R3                            STEP SCREEN POSITION               
         END   ,                             END ERASE LOOP                     
         CLEAR R3                                                               
         END   ,                             END WRAP                           
         SPACE                                                                  
         L     R14,VTWTEXTP                  DO LOW PART                        
         LC    R15,@R14(R3)                                                     
         IF    ((R15,LT,X'40'),AND,(R15,NZ)),BEGIN                              
         LA    R0,X'20'                                                         
         NR    R0,R15                                                           
         IF    (NO),'CLEAR LASTFACP'                                            
         ELSE  'SET LASTFACP'                                                   
         INCR  R3                                                               
         END                                                                    
         SPACE                                                                  
         WHILE (R3,LT,R2),BEGIN              ERASE LOOP                         
         LR    R1,R3                                                            
         ACALL FINDNFAC                                                         
         IF    (NE),'L R1,VTWBUFL'                                              
         IF    (R1,GT,R2),'LR R1,R2'                                            
         CLEAR R0                                                               
         IF    (^LASTFACP),'ACALL REPEATOA'                                     
         LR    R3,R1                                                            
         IF    (R3,LT,R2),BEGIN                                                 
         L     R14,VTWTEXTP                                                     
         LA    R15,@R14(R3)                                                     
         TM    @R15,X'20'                                                       
         IF    (NO),'CLEAR LASTFACP'                                            
         ELSE  'SET LASTFACP'                                                   
         END                                                                    
         INCR  R3                            STEP SCREEN POSITION               
         END   ,                             END ERASE LOOP                     
         IF    (R3,GE,VTWBUFL),'CLEAR R3'                                       
         END   ,                             END ERASE UNPROTECTED              
         SPACE                                                                  
         ELSEIF (R2,EQ,X'08'),BEGIN         *IF GRAPHIC ESCAPE (GE)*            
         IF    (VTWFGE),'SET GESC'                                              
         END                                                                    
         SPACE                                                                  
         ELSE  BEGIN                       *ELSE DISPLAYABLE CHARACTER*         
         LA    R2,X'40'                      MAKE IT A SPACE                    
DISPLAYC LABEL                               DISPLAY THE CHARACTER              
         L     R1,VTWTEXTP         TEXT                                         
         STC   R2,@R1(R3)                                                       
         L     R1,VTWHIP           HIGHLIGHT                                    
         IC    R2,RCVCAHI                                                       
         STC   R2,@R1(R3)                                                       
         L     R1,VTWCOLP          COLOR                                        
         IC    R2,RCVCACOL                                                      
         STC   R2,@R1(R3)                                                       
         L     R1,VTWCSP           CHARACTER SET                                
         IF    (GESC),'LA R2,X"F1"; CLEAR GESC'                                 
         ELSE  'IC R2,RCVCACS'                                                  
         STC   R2,@R1(R3)                                                       
         INCR3                                                                  
         SET   PTEN                                                             
         END   ,                             END DISPLAYABLE CHARACTER          
         SPACE                                                                  
*                                            STEP TO NEXT CHARACTER             
         INCR4                                                                  
         IF    (Z),EXIT                                                         
         LC    R2,VTBDATA(R4)      LOAD NEXT CHARACTER                          
         END   ,                   END PROCESS SCREEN ORDER LOOP                
         SPACE 2                                                                
         IF    ('LTR R0,R5',NZ),PRCSTR    IF MORE INPUT, NEXT STRUCTURE         
         CLEAR R1,R15                                                           
PSCREXIT PRETURN (R0,R1)                                                        
         EXIT                                                                   
         SPACE                                                                  
INCR4    LABEL ,                   INCREMENT R4 AND STEP TO NEXT BUFFER         
         LA    R4,@R4+1                                                         
         IF    (R4,GE,VTBCOUNT),BEGIN                                           
         SET   VTBFPROC            SET THIS BUFFER PROCESSED                    
         CLEAR R4                                                               
         L     R5,VTBNEXT                                                       
         WHILE ((R5,NZ),AND,(VTBCOUNT,ZERO)),'L R5,VTBNEXT'                     
         END                                                                    
         L     R15,PRCSFLEN                                                     
         S     R15,=F'1'                                                        
         ST    R15,PRCSFLEN        (Z) = NO MORE IN STRUCTURE                   
         IF    (NZ),'LTR R5,R5'    (Z) = NO MORE BUFFERS                        
         BR    R14                 RETURN                                       
         SPACE                                                                  
         PEND                                                                   
         LTORG                                                                  
 TITLE '  FINDNFAC -- Routine to Find the Next FAC in the Screen Image'         
*                                                                               
** FINDNFAC - Routine to find the next Field Attribute                          
**            Character in the 3270 buffer image.                               
**                                                                              
**    On entry:                                                                 
**      R1 = current buffer index                                               
**      R6 = @VTWA                                                              
**      VTWTEXTP = pointer to screen buffer                                     
**      VTWBUFL  = Buffer Length                                                
**                                                                              
**    On exit: R1  = -1 If no FAC is encountered before end of buffer.          
**             R1  = Buffer Index of next FAC character. If R1 points           
**                   to a FAC on input, R1 is not changed.                      
**             CC  = (EQ) If Found, (NE) If Not Found                           
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R1 = BUFFER INDEX                                                      
**       R2 = BUFFER CHARACTER                                                  
**       R3 =                                                                   
**       R4 = BUFFER LENGTH                                                     
**       R5 = @BUFFER                                                           
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
FINDNFAC PROC  ,                   FIND THE NEXT FAC                            
         CLEAR R2                                                               
         L     R5,VTWTEXTP                                                      
         L     R4,VTWBUFL                                                       
         WHILE (R1,LT,R4),BEGIN                                                 
         IC    R2,@R5(R1)                                                       
         IF    ((R2,LT,X'40'),AND,(R2,NZ)),                            *        
               'CLEAR R15; B FINDNXIT'                                          
         LA    R1,@R1+1                                                         
         END                                                                    
         LA    R15,1               NOT FOUND                                    
         L     R1,=F'-1'                                                        
FINDNXIT PRETURN R1                                                             
         PEND  ,                   RETURN                                       
 TITLE '                   FINDPFAC-- Routine to find the previous FAC'         
*                                                                               
** FINDPFAC - Routine to find the previous Field Attribute                      
**            character in the 3270 buffer image.                               
**                                                                              
**    On entry:                                                                 
**      R1 = current buffer index                                               
**      R6 = @VTWA                                                              
**      VTWTEXTP = pointer to screen buffer                                     
**                                                                              
**    On exit: R1  = -1 If no FAC is encountered before start of buffer         
**             R1  = Buffer index of previous FAC character. If R1              
**                   points to a FAC on input, R1 is not changed.               
**             CC  = (EQ) If Found, (NE) If Not Found                           
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R1 = BUFFER index                                                      
**       R2 = BUFFER CHARACTER                                                  
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 = @BUFFER                                                           
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
FINDPFAC PROC  ,                   FIND THE PREVIOUS FAC                        
         CLEAR R2                                                               
         L     R5,VTWTEXTP                                                      
         WHILE (R1,NNEG),BEGIN                                                  
         IC    R2,@R5(R1)                                                       
         IF    ((R2,LT,X'40'),AND,(R2,NZ)),                            *        
               'CLEAR R15; B FINDPXIT'                                          
         S     R1,=F'1'                                                         
         END                                                                    
         LA    R15,1               NOT FOUND                                    
         L     R1,=F'-1'                                                        
FINDPXIT PRETURN R1                                                             
         PEND  ,                   RETURN                                       
 TITLE '  REPEATOA -- Routine to Repeat to Address in the Screen Image'         
*                                                                               
** REPEATOA - Routine to Repeat To Address - place multiple instances           
**            of a Character in the 3270 buffer image, including                
**            attributes. This routine stops at the end of the buffer,          
**            it will NOT wrap.                                                 
**                                                                              
**    On entry:                                                                 
**      R0 = Character to store, and Attributes as:                             
**           CS|COL|HI|Text                                                     
**      R1 = Ending Buffer Index +1                                             
**      R3 = Current Buffer Index                                               
**      R6 = @VTWA                                                              
**      VTWTEXTP etc = pointer to screen buffer                                 
**      VTWBUFL  = Buffer Length                                                
**                                                                              
**    On exit: CC  = (EQ) If Performed, (NE) If No characters placed            
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R0 = CHARACTER TO INSERT (FROM ENTRY)                                  
**       R1 = ENDING BUFFER INDEX+1 FROM ENTRY)                                 
**       R2 = WORKING BUFFER INDEX                                              
**       R3 = CURRENT BUFFER INDEX (FROM ENTRY)                                 
**       R4 = BUFFER LENGTH                                                     
**       R5 = @BUFFER                                                           
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
REPEATOA PROC  ,                   REPEAT TO ADDRESS                            
         L     R4,VTWBUFL                                                       
         IF    (R1,GT,R4),'LR R1,R4'                                            
         LR    R2,R1               R2 := ENDING POSITION +1                     
         SR    R2,R3               R2 := ENDING+1 - START                       
         IF    (R2,LT,=F'1'),'LA R15,1; EXIT REPEATOA'                          
         SPACE                                                                  
         L     R5,VTWTEXTP         TEXT                                         
         LR    R2,R3               R2 := START                                  
         WHILE (R2,LT,R1),BEGIN    R1 = END+1                                   
         STC   R0,@R5(R2)                                                       
         LA    R2,@R2+1                                                         
         END                                                                    
         SPACE                                                                  
         SRL   R0,8                                                             
         L     R5,VTWHIP           HIGHLIGHT                                    
         LR    R2,R3                                                            
         WHILE (R2,LT,R1),BEGIN                                                 
         STC   R0,@R5(R2)                                                       
         LA    R2,@R2+1                                                         
         END                                                                    
         SPACE                                                                  
         SRL   R0,8                                                             
         L     R5,VTWCOLP          COLOR                                        
         LR    R2,R3                                                            
         WHILE (R2,LT,R1),BEGIN                                                 
         STC   R0,@R5(R2)                                                       
         LA    R2,@R2+1                                                         
         END                                                                    
         SPACE                                                                  
         SRL   R0,8                                                             
         L     R5,VTWCSP           CHARACTER SET                                
         LR    R2,R3                                                            
         WHILE (R2,LT,R1),BEGIN                                                 
         STC   R0,@R5(R2)                                                       
         LA    R2,@R2+1                                                         
         END                                                                    
         SPACE                                                                  
         PRETURN R1                                                             
         CLEAR R15                                                              
         PEND  ,                   RETURN                                       
         LTORG                                                                  
 TITLE '              SENDSCR -- Routine to send screen to application'         
*                                                                               
**  SENDSCR -- Routine to send 3270 buffer image to the application.            
**                                                                              
**  Note: Orders and data from partition zero, are never transmitted            
**        as a structured field.                                                
**                                                                              
**    On entry:                                                                 
**      VTWTEXTP = @ 3270 screen buffer                                         
**      VTWBUFL  = length of above                                              
**      VTWICPOS = current insert cursor buffer position                        
**      VTWRCMD  = read command received (zero if none)                         
**      RS3270   = the hardware Read State                                      
**      AID3270  = AID received                                                 
**      VTWRMODE = Reply Mode (1,2,or 3)                                        
**                                                                              
**    On exit: R15 = 0 or points to error message.                              
*                                                                               
         SPACE                                                                  
SENDSWA  RECORD BEGIN                                                           
SENDTYPE DS    X                   SEND TYPE                                    
SENDFS   EQS   SENDTYPE,1           SEND FULL SCREEN                            
SENDMF   EQS   SENDTYPE,2           SEND MODIFIED FIELDS                        
SENDSF   EQS   SENDTYPE,3           SEND SHORT FORM                             
SENDVCNT DS    X                   COUNT FOR SFE                                
SENDVLOC DS    A                   LOCATION TO PUT COUNT FOR SFE                
SENDSP   DS    F                   STARTING PONT IN BUFFER                      
SENDEP   DS    F                   ENDING POINT IN BUFFER                       
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 = CHARACTER BEING PROCESSED                                         
**       R3 = SCREEN CURRENT INDEX                                              
**       R4 = OUTPUT BUFFER DATA INDEX                                          
**       R5 = OUTPUT BUFFER ADDRESS                                             
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
         MACRO                                                                  
         INCR4S ,                  INCREMENT R4 AND STEP TO NEXT BUFFER         
         LA    R4,@R4+1                                                         
         IF    (R4,GE,VTBDLENG),BEGIN                                           
         STH   R4,VTBCOUNT                                                      
         L     R4,VTWRSIZI                   GET THE NEXT BUFFER                
         LA    R0,@R4+VTBDATA-VTBHEAD                                           
         VCALL GETCORE                                                          
         ST    R1,VTBNEXT                                                       
         LR    R5,R1                                                            
         XC    VTBHEAD(VTBDATA-VTBHEAD),VTBHEAD                                 
         MVC   VTBID,=C'VTBH'                                                   
         STH   R4,VTBDLENG                                                      
         CLEAR R4                                                               
         END                                                                    
         MEND                                                                   
         SPACE                                                                  
SENDSCR  PROC  SENDSWA             SEND SCREEN TO THE APPLICATION               
*QSNAP 'ENTERED SENDSCR'                                                        
         CLEAR SENDSWA                                                          
         SPACE                                                                  
         L     R4,VTWRSIZI                   GET THE FIRST BUFFER               
         LA    R0,@R4+VTBDATA-VTBHEAD                                           
         VCALL GETCORE                                                          
         LR    R5,R1                         R5 := @ BUFFER                     
         WITH  (VTBHEAD,R5)                                                     
         XC    VTBHEAD(VTBDATA-VTBHEAD),VTBHEAD                                 
         MVC   VTBID,=C'VTBH'                                                   
         STH   R4,VTBDLENG                                                      
         ST    R5,VTWIRUC                    CHAIN IT                           
         CLEAR R4                                                               
         SPACE                                                                  
         MVI   VTBDATA,X'60'                 AID = NONE                         
*                                  FIND TYPE TO PERFORM                         
         IF    (VTWRCMD,NZ),BEGIN            IF READ COMMAND                    
         IF    (VTWRCMD,EQ,X'F6'),BEGIN      IF READ MODIFIED                   
         IF    (RSRETRYE),'B USEAID'         BR IF IF RETRY ENTER               
         ELSE  'SET SENDMF'                                                     
         END   ,                             END READ MODIFIED                  
         SPACE                                                                  
         ELSEIF (VTWRCMD,EQ,X'6E'),'SET SENDMF'  IF RMA                         
         ELSEIF (VTWRCMD,EQ,X'F2'),'SET SENDFS'  IF RB                          
         END   ,                             END READ COMMAND                   
         SPACE                                                                  
USEAID   ELSE  BEGIN                             ELSE RM                        
         MVC   VTBDATA(1),AID3270            USE THE AID                        
         IF   ((AID3270,EQ,X'6C'),OR,                    IF PA1 OR     *        
               (AID3270,EQ,X'6E'),OR,(AID3270,EQ,X'6B')),   PA2 OR PA3 *        
               'SET SENDSF'                  SET SHORT FORM                     
         SPACE                                                                  
         ELSEIF (AID3270,EQ,X'6D'),BEGIN                    IF CLEAR            
         SET   SENDSF                                                           
         CLEAR VTWFALT                       SET DEFAULT SIZE                   
         MVC   VTWHEI(8),VTWHEID                                                
         CLEAR VTWRMODE                                                         
         CLEAR R0                                                               
         ACALL CLEARSCR                      DO THE ERASE                       
         END   ,                             END CLEAR                          
         SPACE                                                                  
         ELSE  'SET SENDMF'                  ELSE MODIFIED FIELDS               
         END   ,                             END RM                             
         SPACE                                                                  
         L     R1,VTWICPOS                   FINISH PREFEX                      
         ACALL BUFTODIS                                                         
         ST2   R1,VTBDATA+1                                                     
         LA    R4,3                                                             
         SPACE                                                                  
         IF    (SENDSF),'LA R4,1; B SENDSEND'   BR SHORT FORM                   
         SPACE                                                                  
         CLEAR R1                            FIND FIRST FAC                     
         ACALL FINDNFAC                                                         
         IF    (R1,NEG),'CLEAR R1'           R1 = STARTING POINT                
         IF    (SENDFS),'CLEAR R1'                                              
         LR    R3,R1                                                            
         SPACE                                                                  
         ST    R1,SENDSP                                                        
         MVC   SENDEP,VTWBUFL                                                   
         SPACE                                                                  
SENDFBLO LOOP  BEGIN                         FULL BUFFER LOOP                   
SENDBHLO WHILE (R3,LT,SENDEP),BEGIN          BOTTOM HALF LOOP                   
         L     R15,VTWTEXTP                                                     
         LC    R2,@R15(R3)                                                      
         IF    (R2,LT,X'40'),BEGIN           IF FAC OR NULL                     
         IF    (R2,Z),BEGIN                  IF NULL                            
         IF    (^SENDFS),NEXTCH                                                 
         B     SENDCH                                                           
         END   ,                             END NULL                           
         SPACE                                                                  
*                                                  ELSE (R2=FAC)                
         IF    (SENDFS),BEGIN                IF FULL SCREEN                     
         IF    (VTWRMODE,ZERO),BEGIN         IF REPLY MODE 0                    
         LA    R1,X'1D'                      SF ORDER                           
         STC   R1,VTBDATA(R4)                                                   
         INCR4S                                                                 
         N     R2,=A(B'00111101')            REMOVE NON-NULL FLAG               
         STC   R2,VTBDATA(R4)                ATTRIBUTE                          
         INCR4S                                                                 
         END   ,                             END REPLY MODE 0                   
         SPACE                                                                  
*              Note: For Reply Mode 2, character level attributes are           
*              not handled properly.                                            
         SPACE                                                                  
         ELSE  BEGIN                         ELSE REPLY MODE OTHER              
         LA    R1,X'29'                      SFE ORDER                          
         STC   R1,VTBDATA(R4)                                                   
         INCR4S                                                                 
         LA    R1,VTBDATA(R4)                R1 := A(COUNT CHARACTER)           
         ST    R1,SENDVLOC                                                      
         INCR4S                                                                 
         CLEAR SENDVCNT                                                         
         SPACE                                                                  
         N     R2,=A(B'00111101')            REMOVE NON-NULL FLAG               
         IF    (NZ),BEGIN                                                       
         LA    R1,X'C0'                                                         
         STC   R1,VTBDATA(R4)                                                   
         INCR4S                                                                 
         STC   R2,VTBDATA(R4)                                                   
         INCR4S                                                                 
         INCR  R1,SENDVCNT                                                      
         END                                                                    
         SPACE                                                                  
         L     R15,VTWHIP                                                       
         LC    R2,@R15(R3)                                                      
         IF    (R2,NZ),BEGIN                 IF HIGHLIGHTING                    
         LA    R1,X'41'                                                         
         STC   R1,VTBDATA(R4)                                                   
         INCR4S                                                                 
         STC   R2,VTBDATA(R4)                                                   
         INCR4S                                                                 
         INCR  R1,SENDVCNT                                                      
         END                                                                    
         SPACE                                                                  
         L     R15,VTWCOLP                                                      
         LC    R2,@R15(R3)                                                      
         IF    (R2,NZ),BEGIN                 IF COLOR                           
         LA    R1,X'42'                                                         
         STC   R1,VTBDATA(R4)                                                   
         INCR4S                                                                 
         STC   R2,VTBDATA(R4)                                                   
         INCR4S                                                                 
         INCR  R1,SENDVCNT                                                      
         END                                                                    
         SPACE                                                                  
         L     R15,VTWCSP                                                       
         LC    R2,@R15(R3)                                                      
         IF    (R2,NZ),BEGIN                 IF CHARACTER SET                   
         LA    R1,X'43'                                                         
         STC   R1,VTBDATA(R4)                                                   
         INCR4S                                                                 
         STC   R2,VTBDATA(R4)                                                   
         INCR4S                                                                 
         INCR  R1,SENDVCNT                                                      
         END                                                                    
         SPACE                                                                  
         LC    R1,SENDVCNT                                                      
         L     R15,SENDVLOC                                                     
         STC   R1,@R15                                                          
         END   ,                             END REPLY MODE OTHER               
         END   ,                             END FULL SCREEN                    
         SPACE                                                                  
         ELSE  BEGIN                         ELSE SEND MF                       
         LA    R0,B'1'                                                          
         NR    R0,R2                                                            
         IF    (ZERO),BEGIN        IF NOT MODIFIED                              
         LR    R1,R3               SKIP THIS FIELD                              
         LA    R1,@R1+1                                                         
         ACALL FINDNFAC                                                         
         LTR   R3,R1                                                            
         IF    (NEG),BEGIN                                                      
         MVC   SENDEP,SENDSP                                                    
         CLEAR R1                                                               
         ACALL FINDNFAC                                                         
         LR    R3,R1                                                            
         IF    (R3,GE,SENDEP),'EXIT SENDFBLO'                                   
         END                                                                    
         B     SENDBHLO                                                         
         END   ,                   END NOT MODIFIED                             
         SPACE                                                                  
         LA    R1,X'11'                      SBA ORDER                          
         STC   R1,VTBDATA(R4)                                                   
         INCR4S                                                                 
         LR    R1,R3                                                            
         LA    R1,@R1+1                                                         
         IF    (R1,GE,VTWBUFL),'CLEAR R1'                                       
         ACALL BUFTODIS                                                         
         LR    R2,R1                                                            
         LA    R15,VTBDATA(R4)                                                  
         STCM  R2,B'10',@R15                 ADDRESS                            
         INCR4S                                                                 
         LA    R15,VTBDATA(R4)                                                  
         STCM  R2,B'01',@R15                                                    
         INCR4S                                                                 
         END   ,                             END SEND MF                        
         END   ,                             END FAC OR NULL                    
         SPACE                                                                  
SENDCH   ELSE  BEGIN                         ELSE CHARACTER                     
         STC   R2,VTBDATA(R4)                                                   
         INCR4S                                                                 
         END   ,                             END CHARACTER                      
         SPACE                                                                  
NEXTCH   LA    R3,@R3+1                                                         
         END   ,                             END BOTTOM HALF LOOP               
         SPACE                                                                  
         IF    (R3,LE,SENDSP),'EXIT SENDFBLO'                                   
         MVC   SENDEP,SENDSP                                                    
         CLEAR R3                                                               
         END   ,                             END FULL BUFFER LOOP               
         SPACE                                                                  
SENDSEND STH   R4,VTBCOUNT                                                      
         LCALL SENDCHAN                      SEND THE DATA CHAIN                
         CLEAR VTWRCMD                                                          
         PEND  ,                             RETURN                             
 TITLE '          SENDQR -- Routine to send Query Reply to Application'         
*                                                                               
**  SENDQR -- Routine to format and send Query Responses to the                 
**            Application                                                       
**                                                                              
**    On entry:                                                                 
**      VTWQLIST = list of replies to be sent                                   
**                                                                              
**    On exit: R15 = 0 or points to error message.                              
**             Terminal Read State set to Retry Read                            
*                                                                               
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 = VTWQLIST INDEX                                                    
**       R4 = OUTPUT BUFFER DATA INDEX                                          
**       R5 = OUTPUT BUFFER ADDRESS                                             
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
         MACRO                                                                  
         CHECKSPA ,                CHECK SPACE AND STEP TO NEXT BUFFER          
         IF    (R1,GE,VTBDLENG),BEGIN                                           
         STH   R4,VTBCOUNT                                                      
         L     R4,VTWRSIZI                   GET THE NEXT BUFFER                
         LA    R0,@R4+VTBDATA-VTBHEAD                                           
         VCALL GETCORE                                                          
         ST    R1,VTBNEXT                                                       
         LR    R5,R1                                                            
         XC    VTBHEAD(VTBDATA-VTBHEAD),VTBHEAD                                 
         MVC   VTBID,=C'VTBH'                                                   
         STH   R4,VTBDLENG                                                      
         CLEAR R4                                                               
         END                                                                    
         MEND                                                                   
         SPACE                                                                  
SENDQR   PROC  ,                   SEND QUERY REPLY                             
*QSNAP 'ENTERED SENDQR'                                                         
         L     R4,VTWRSIZI                   GET THE FIRST BUFFER               
         LA    R0,@R4+VTBDATA-VTBHEAD                                           
         VCALL GETCORE                                                          
         LR    R5,R1                         R5 := @ BUFFER                     
         WITH  (VTBHEAD,R5)                                                     
         XC    VTBHEAD(VTBDATA-VTBHEAD),VTBHEAD                                 
         MVC   VTBID,=C'VTBH'                                                   
         STH   R4,VTBDLENG                                                      
         ST    R5,VTWIRUC                    CHAIN IT                           
         CLEAR R4                                                               
         SPACE                                                                  
         MVI   VTBDATA,X'88'                 STRUCTURED FIELD                   
         LA    R4,1                                                             
         CLEAR R3                                                               
         SPACE                                                                  
         WHILE (R3,LT,=A(L'VTWQLIST)),BEGIN  QUERY LOOP                         
         LC    R2,VTWQLIST(R3)                                                  
         SPACE                                                                  
         IF    (R2,EQ,X'85'),BEGIN           IF CHARACTER SET                   
         IF    (VTWFGE),BEGIN      IF GE BEING SIMULATED                        
         LA    R1,@R4+27                                                        
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(13),=X'001B81858200,0910,0000000007'                         
         MVC   @R1+13(14),=X'00000000650025,0100F1017E0136'                     
         LA    R4,@R4+27                                                        
         END   ,                   END GE BEING SIMULATED                       
         SPACE                                                                  
         ELSE  BEGIN               ELSE NOT GE                                  
         LA    R1,@R4+20                                                        
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(13),=X'001481850200,0910,0000000007'                         
         MVC   @R1+13(07),=X'00000000650025'                                    
         LA    R4,@R4+20                                                        
         END   ,                   END NOT GE                                   
         END   ,                             END CHARACTER SET                  
         SPACE                                                                  
         ELSEIF (R2,EQ,X'86'),BEGIN          IF COLOR                           
         IF    (^VTWFCOLOR),EXIT                                                
         LA    R1,@R4+22                                                        
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(8),=X'001681860008,00F4'                                     
         MVC   @R1+8(14),=X'F1F1,F2F2,F3F3,F4F4,F5F5,F6F6,F7F7'                 
         LA    R4,@R4+22                                                        
         END   ,                             END COLOR                          
         SPACE                                                                  
         ELSEIF (R2,EQ,X'87'),BEGIN          IF HIGHLIGHTING                    
         IF    (^VTWFHI),EXIT                                                   
         LA    R1,@R4+X'0D'                                                     
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(X'0D'),=X'000D81,8704,00F0,F1F1,F2F2,F4F4'                   
         LA    R4,@R4+X'0D'        '                                            
         END   ,                             END HIGHLIGHTING                   
         SPACE                                                                  
         ELSEIF (R2,EQ,X'88'),BEGIN          IF REPLY MODES                     
         LA    R1,@R4+X'06'                                                     
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(X'06'),=X'000681,880001'                                     
         LA    R4,@R4+X'06'                                                     
         END   ,                             END REPLY MODES                    
         SPACE                                                                  
         ELSEIF (R2,EQ,X'81'),BEGIN          IF USABLE AREA                     
         LA    R1,@R4+23                                                        
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(6),=X'00178181,0100'                                         
         LA    R4,@R4+6                                                         
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(2),VTWWIDA                                                   
         MVC   @R1+2(2),VTWHEIA                                                 
         IF    (VTWBUFLD,GT,VTWBUFLA),BEGIN                                     
         MVC   @R1(2),VTWWIDD                                                   
         MVC   @R1+2(2),VTWHEID                                                 
         END                                                                    
         LA    R4,@R4+4                                                         
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(11),=X'00,000A02E5,0002006F,090C'                            
         LA    R4,@R4+11                                                        
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(2),VTWBUFGC+2                                                
         LA    R4,@R4+2            '                                            
         END   ,                             END USABLE AREA                    
         SPACE                                                                  
         ELSEIF (R2,EQ,X'A6'),BEGIN          IF IMPLICIT PARTITION              
         LA    R1,@R4+X'17'                                                     
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(9),=X'001181A6,0000,0B0100'                                  
         LA    R4,@R4+9                                                         
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(2),VTWWIDD                                                   
         MVC   @R1+2(2),VTWHEID                                                 
         MVC   @R1+4(2),VTWWIDA                                                 
         MVC   @R1+6(2),VTWHEIA                                                 
         LA    R4,@R4+8                                                         
         END   ,                             END IMPLICIT PARTITION             
         SPACE                                                                  
         ELSEIF (R2,EQ,X'80'),BEGIN          IF SUMMARY                         
         LA    R1,@R4+11                                                        
         CHECKSPA                                                               
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(11),=X'000B8180,808185868788A6'                              
         LA    R4,@R4+11                                                        
         END   ,                             END SUMMARY                        
         SPACE                                                                  
         LA    R3,@R3+1                                                         
         END   ,                             END QUERY LOOP                     
         SPACE 2                                                                
         IF    ((R4,LE,=F'1'),AND,(R5,EQ,VTWIRUC)),BEGIN   IF NONE              
         LA    R1,VTBDATA(R4)                                                   
         MVC   @R1(4),=X'000481FF'           SEND NULL                          
         LA    R4,@R4+4                                                         
         END   ,                                           END NONE             
         SPACE 2                                                                
         STH   R4,VTBCOUNT                                                      
         SET   RSRETRYR                                                         
         SPACE                                                                  
*QSNAP VTBHEAD,107                                                              
         LCALL SENDCHAN                      SEND THE DATA CHAIN                
         PEND  ,                             RETURN                             
 TITLE '       SENDCHAN -- Routine to SEND buffer chain to application'         
*                                                                               
**  SENDCHAN -- Routine to send inbound buffer (RU) chain                       
**              to the application.                                             
**                                                                              
**    On entry:                                                                 
**      VTWIRUC  = Head of inbound RU chain                                     
**      VTWFERP1 = ON if 3270 ERP1 state is being simulated                     
**      VTWFSBBI = ON if currently between brackets                             
**                                                                              
**    ON EXIT:                                                                  
*                                                                               
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 = @ RPL                                                             
**       R4 = @ VTAM BUFFLIST                                                   
**       R5 = @ BUFFER                                                          
**       R6 = VTWA                                                              
*                                                                               
         SPACE 3                                                                
         RECORD BEGIN                                                           
         ISTBLENT                                                               
         END                                                                    
         SPACE 3                                                                
SENDCHAN PROC  ,                   SEND RU CHAIN                                
*QSNAP 'ENTERED SENDCHAN'                                                       
         LCALL SENDRESP                                                         
         SPACE                                                                  
         L     R3,VTWAACBP                   GET THE RPL                        
         WITH  (ACB,R3),'L R3,ACBNSRPL'                                         
         WITH  (RPL,R3)                                                         
         FAIL  (RPLACTIV,NZ),SENDCHAN,'SEND RPL NOT FREE'                       
         SPACE                                                                  
         L     R5,VTWIRUC          R5 : @ FIRST BUFFER                          
         WITH  (VTBHEAD,R5)                                                     
         IF    (VTBNEXT,NZ),BEGIN  IF MORE THAN ONE RU                          
         SET   RPLOPT6.RPLBUFFL    SET BUFFER LIST                              
         SET   RPLOPT7.RPLLMPEO    SET LMPEO                                    
         LA    R2,1                COUNT THE BUFFERS                            
         WHILE (VTBNEXT,NZ),'LA R2,@R2+1; L R5,VTBNEXT'                         
         MH    R2,=Y(L'BLENT)                                                   
         ST    R2,RPLRLEN                                                       
         LR    R0,R2                                                            
         VCALL GETCORE                                                          
         LR    R4,R1               R4 := @ BUFFER LIST                          
         WITH  (ISTBLENT,R4)                                                    
         ST    R4,RPLAREA                                                       
         ST    R4,VTWIBLST                                                      
         L     R5,VTWIRUC                                                       
         SPACE                                                                  
         WHILE (R5,NZ),BEGIN                                                    
         CLEAR BLENT                                                            
         LA    R1,VTBDATA                                                       
         ST    R1,BLEAREA                                                       
         MVC   BLERLEN+2(2),VTBCOUNT                                            
*QSNAP @R1,8                                                                    
         LA    R4,BLENT+L'BLENT                                                 
         L     R5,VTBNEXT                                                       
         END                                                                    
         END   ,                   END MORE THAN ONE RU                         
         SPACE                                                                  
         ELSE  BEGIN               ELSE ONLY ONE                                
         CLEAR RPLOPT6.RPLBUFFL    CLEAR BUFFER LIST                            
         CLEAR RPLOPT7.RPLLMPEO    CLEAR LMPEO                                  
         LA    R1,VTBDATA                                                       
         ST    R1,RPLAREA                                                       
*QSNAP @R1,8                                                                    
         LH    R1,VTBCOUNT                                                      
         ST    R1,RPLRLEN                                                       
         END   ,                   END ONLY ONE                                 
         SPACE                                                                  
         IF    (VTWFSBBI),'SET RPLBBI'                                          
         ELSE  'CLEAR RPLBBI'                                                   
         SPACE                                                                  
*QSNAP 'ABOUT TO START A SEND CHAIN'                                            
         AIF   ('&BRANCH' EQ 'NO').MODE5                                        
         MODESET MODE=SUP              ********* ENTER SUPERVISOR STATE         
.MODE5   L     R4,=A(SRBROUT)                                                   
         SEND  RPL=(R3),OPTCD=(ASY,CA),                                *        
               RESPOND=(EX,FME,NRRN),                                  *        
               STYPE=REQ,CONTROL=DATA,CHNGDIR=CMD,POST=SCHED,EXIT=(R4),*        
               BRANCH=&BRANCH                                                   
         LR    R2,R15                                                           
         MODESET MODE=PROB             ********* LEAVE SUPERVISOR STATE         
         SPACE                                                                  
*QSNAP (R2)                                                                     
         IF    (R2,Z),'EXIT SENDCHAN'        RETURN                             
         SPACE                                                                  
         KAPUT  SENDCHAN,'SEND REFUSED'                                         
         SPACE                                                                  
         PEND                                                                   
 TITLE '       SENDRESP -- Routine to SEND RESPONSE to the application'         
*                                                                               
**  SENDRESP -- Routine to send response to the application.                    
**                                                                              
**    On entry:                                                                 
**      VTWFSR1, VTWFSR2, VTWSSENS, and VTWR contain parameters                 
**      for the response.                                                       
**                                                                              
**    ON EXIT: Response has geen sent.                                          
*                                                                               
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = @ RPL                                                             
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE 3                                                                
SENDRESP PROC  ,                   SEND RESPONSE                                
*QSNAP 'ENTERED SENDRESP'                                                       
*QSNAP (RAR)                                                                    
         IF    (VTWFSR1+VTWFSR2),BEGIN       IF RESPONSE TO SEND                
         IF    (('LT R15,VTWSSENS',NZ),OR,(VTWFSDR)),BEGIN                      
         SPACE                                                                  
RESP1    L     R4,VTWAACBP                                                      
         WITH  (ACB,R4),'L R4,ACBEORPL'                                         
         WITH  (RPL,R4)            GET THE RPL                                  
         FAIL  (RPLACTIV,NZ),SENDRESP,'RESPONSE RPL NOT FREE'                   
         SPACE                                                                  
         CLEAR RPLNDR1+RPLDR2+RPLERI,RPLCNTRL   CLEAR THE INDICATORS            
         MVC   RPLSEQNO,VTWSRSEQ                                                
         SPACE                                                                  
         IF    (R15,NZ),BEGIN      IF EXCEPTION RESPONSE TO SEND                
         ST    R15,RPLSSENS                                                     
         SET   RPLERI                                                           
         IF    (VTWFREBI),BEGIN    AND END BRACKET                              
         SET   RSNORM                                                           
         IF    (VTWFSDR),'SET VSOUTB'        BRACKET TERMINATION RULE 1         
         ELSE  BEGIN                                                            
         IF    (VTWFKLOK),'SET VSCONT1'  SET CONTENTION                         
         ELSE  'SET VSCONT'                                                     
         END                                                                    
         END   ,                   END AND END BRACKET                          
         END   ,                   END EXCEPTION RESPONSE TO SEND               
         SPACE                                                                  
         IF    (^VTWFSR1),'SET RPLNDR1'                                         
         IF    (VTWFSR2),'SET RPLDR2'                                           
         IF     (VTWRUD),'SET RPLCNTDF.RPLDATA'                                 
         ELSEIF (VTWRCAN),'SET RPLCNTDF.RPLCNCEL'                               
         ELSEIF (VTWRLUS),'SET RPLCNTDC.RPLLUS'                                 
         ELSEIF (VTWRBID),'SET RPLCNTDC.RPLBID'                                 
         SPACE                                                                  
*QSNAP 'ABOUT TO START A SEND RESPONSE'                                         
*QSNAP RPLSSENS,4                                                               
         CLEAR VTWSECB                                                          
         SEND  RPL=(R4),                                               *        
               OPTCD=(ASY,CA),BRACKET=(NBB,NEB),ECB=VTWSECB,           *        
               STYPE=RESP,BRANCH=NO                                             
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         CHECK RPL=(R4)                                                         
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,RESPTBLE(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
RESPTBLE DC    A(SREXIT)           NORMAL                                       
         DC    A(RESPERR)          ERROR SYNAD                                  
         DC    A(RESP1)            RETRY                                        
         DC    A(SREXIT)           ERROR INTEGRETY                              
         DC    A(RESPENV)          ERROR ENVIRONMENT                            
         DC    A(SREXIT)           ERROR LOGIC                                  
         DC    A(RESPERR)          ERROR BAD RPL                                
         DC    A(SREXIT)           ERROR ACB NOT OPEN                           
         SPACE 3                                                                
RESPENV  LABEL                     ENVIRONMENT ERROR                            
         IF    (R2,EQ,=A(X'000A')),'ACALL ERROR10A'  VTAM FAILED                
         IF   ((R2,EQ,=A(X'0003')),OR,            VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'0007')),OR,            CANCELLED BY VARY    *        
               (R2,EQ,=A(X'0009')),OR,            LOGOFF RECEIVED      *        
               (R2,EQ,=A(X'000E'))),'ACALL PATHBRKN'   VTAM ERROR               
RESPERR  LABEL                                                                  
         L     R3,RPLRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT SENDRESP,'UNEXPECTED VTAM RETURN CODE'                           
         SPACE 2                                                                
         END                                                                    
         END   ,                   END RESPONSE TO SEND                         
         SPACE                                                                  
SREXIT   LABEL                                                                  
         CLEAR VTWFSR1+VTWFSR2+VTWFSDR,VTWSSENS,VTWSRSEQ                        
         PEND  ,                   RETURN                                       
 TITLE '     PATHBRKN -- Routine to issue Path Broaken message to user'         
*                                                                               
**  PATHBRKN -- Routine to issue Path Broaken message to user                   
**                                                                              
**    On entry:                                                                 
**      no entry parameters.                                                    
**                                                                              
**    ON EXIT:                                                                  
**       Message has been written to user                                       
**       VTWA has been cleared                                                  
**       Control is returned to Wylbur                                          
*                                                                               
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE 3                                                                
PATHBRKN PROC  ,                   PATH BROAKEN                                 
*QSNAP 'ENTERED PATHBRKN'                                                       
         CLEAR CPFDISP                                                          
         TSEG  'Your VTAM path has been broaken',,CR                            
         TSEG  'Returning to Wylbur'                                            
         SPACE                                                                  
         ACALL FREEVTWA                                                         
         SPACE                                                                  
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         SPACE                                                                  
         PEND  ,                   NOT EXECUTED                                 
 TITLE '                 ERROR10A -- Routine to handle 0100 000A error'         
*                                                                               
**  ERROR10A -- Routine to issue Catastrophic VTAM failure message              
**                                                                              
**    On entry:                                                                 
**      no entry parameters.                                                    
**                                                                              
**    ON EXIT:                                                                  
**       Message has been written to user                                       
**       Session has been Frozen                                                
**       VTWA has been disconnected from user                                   
**       Control is returned to Wylbur                                          
*                                                                               
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
         SPACE 3                                                                
ERROR10A PROC  ,                   CATASTROPHIC VTAM ERROR                      
*QSNAP 'ENTERED ERROR10A'                                                       
         SET   VTWFFREZ                                                         
         CLEAR CPFDISP                                                          
         TSEG  'There has been a catastrophic VTAM failure',,CR                 
         TSEG  'Returning to Wylbur'                                            
         SPACE                                                                  
         ACALL FREEVTWA                                                         
         SPACE                                                                  
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         SPACE                                                                  
         PEND  ,                   NOT EXECUTED                                 
         LTORG                                                                  
 TITLE '                              Model Terminal Control Sequences'         
         DATA  BEGIN                                                            
***                                                                             
***  Model terminal control sequences.                                          
***                                                                             
$CSI     EQU   *,2,C'X'            Control sequence prefix                      
$LCSI    DC    X'27AD4C'           Local control sequence introducer            
$CS      DC    X'27AD8627ADF2D1'   Home & clear screen                          
$CSVTAM  DC    X'27AD86'           Home cursor (and that's all!)                
$CREM    DC    X'27ADD1'           Clear from cursor to end screen              
$BCT     DC    C'Z'                Blank count                                  
$FPROT   DC    X'27AD4CF1C6'       Protected field                              
$FPROTS  DC    X'27AD4CF15EF1F1C6' Protected skip field                         
$FUNPROT DC    X'27AD4CC6'         Unprotected field                            
$FEND    DC    X'27AD4CC5'         End of field                                 
$SETRULE DC    X'275DF2'           Set ruling alternate char set                
$SI      DC    X'0F'               SHIFT IN TO NORMAL CHAR SET                  
$SO      DC    X'0E'               SHIFT OUT TO ALTERNATE CHAR SET              
$BEL     DC    X'2F'               Ring the Bell                                
*                                                                               
$SETTAB  DC    X'27AD4CE6'         Set a tab here                               
$SETTRIG DC    X'27AD4CC9'         Set a trigger point here                     
$SETTROW DC    X'27AD4CC7'         Set a trigger row                            
$SETFBLK DC    X'27AD4C81'         Set an FBLOCK point                          
$SETLBLK DC    X'27AD4C82'         Set an LBLOCK point                          
$SETHOME DC    X'27AD4CC8'         Set a home point                             
$ALTHOME DC    X'27AD4CC1'         Set an alternate home point                  
$SETTOP  DC    X'27AD4CE3'         Set top point                                
$SETBOT  DC    X'27AD4CC2'         Set bottom point                             
$CLRMSG  DC    X'27AD4CF5D4'       Clear message area                           
$SETMSG  DC    X'27AD4CD4'         Set message area                             
*                                                                               
$CLRTABS DC    X'27AD4CF5E6'       Clear all tabs                               
$CLRTRIG DC    X'27AD4CF5C9'       Clear all trigger points                     
$CLRTROW DC    X'27AD4CF5C7'       Clear all trigger rows                       
$CLRBLK  DC    X'27AD4C81'         Clear marked block points                    
$CLRFMT  EQU   $CLRTABS,*-$CLRTABS,C'X'                                         
*                                                                               
$SEM     DC    C'S'                Set editing mode                             
$RFC     DC    C'V'                Report ending function code                  
$RCP     DC    C'C'                Report ending cursor position                
$RFP     DC    C'R'                Report cursor position                       
*                                                                               
         END                                                                    
 TITLE ' CLEARSCR -- Routine to clear the screen of the ASCII Terminal'         
*                                                                               
**  CLEARSCR -- Routine to clear the internal screen image buffers              
**              and TSEG CLEAR sequences to the ASCII terminal.                 
**                                                                              
**    On entry:                                                                 
**      VTWAR = @VTWA                                                           
**      R0=0  Clear external screen and internal buffers                        
**      R0^=0 Clear only external screen                                        
*                                                                               
         SPACE                                                                  
CLEARSCR PROC  ,                   CLEAR THE SCREEN                             
*QSNAP 'ENTERED CLEARSCR'                                                       
         CLEAR VTWF14B             CLEAR 14 BIT ADDRESSING                      
         IF    (VTWBUFL,GT,=A(X'FFF')),'SET VTWF14B'                            
         SPACE                                                                  
         IF    (R0,ZERO),BEGIN     IF CLEAR INTERNAL                            
         CLEAR VTWICPOS                                                         
         L     R4,VTWBUFGC                                                      
         L     R14,VTWTEXTP        GET TEXT BUFFER                              
         ZOT   @R14,(R4)           CLEAR BUFFER                                 
*                                                                               
         L     R14,VTWHIP          GET HIGHLIGHTS BUFFER                        
         ZOT   @R14,(R4)           CLEAR BUFFER                                 
*                                                                               
         L     R14,VTWCOLP         GET COLORS BUFFER                            
         ZOT   @R14,(R4)           CLEAR BUFFER                                 
*                                                                               
         L     R14,VTWCSP          GET CHARACTER SET BUFFER                     
         ZOT   @R14,(R4)           CLEAR BUFFER                                 
*                                                                               
         END   ,                   END CLEAR INTERNAL                           
         SPACE                                                                  
         IF    (^VTWFUACT),'EXIT CLEARSCR'                                      
         SPACE                                                                  
*                                                                               
*  Calculate real terminal screen height and width.                             
*                                                                               
         L     R5,CPTTYPEP                                                      
         WITH  (TTYPE,R5),BEGIN                                                 
         BEGIN ,                   HEIGHT                                       
         LTH   R15,CPSHEI          Get session default                          
         IF    NZ,EXIT             Got it, scram                                
         LTH   R15,TTYHEI          Terminal height                              
         IF    NZ,EXIT             Got it, scram                                
         LA    R15,24              Universal default                            
         END                                                                    
         STH   R15,VTWHEIT         SAVE HEIGHT                                  
*                                                                               
         BEGIN ,                   WIDTH                                        
         LTH   R15,CPSWID          Get session default                          
         IF    NZ,EXIT             Got it, scram                                
         LTH   R15,TTYWID          Terminal width                               
         IF    NZ,EXIT             Got it, scram                                
         LA    R15,80              Universal default                            
         END                                                                    
         STH   R15,VTWWIDT         SAVE WIDTH                                   
         SPACE                                                                  
         IF    (TTYFCOLOR),'SET VTWFCOLOR'   IF COLOR TERMINAL                  
         ELSE  'CLEAR VTWFCOLOR'                                                
         END                                                                    
         SPACE                                                                  
         IF    ((VTWHEI,GT,VTWHEIT),OR,(VTWWID,GT,VTWWIDT)),BEGIN               
         ACALL FREEVTWA                                                         
         CLEAR CPFDISP                                                          
         ABORT 'Real terminal screen is smaller than simulated 3270.'           
         END                                                                    
         SPACE                                                                  
         TMARK                                                                  
         IF    (VTWF3270),'TSEG $CS'                                            
         ELSE  BEGIN                                                            
         TSEG  $LCSI               RESET SCREEN IMAGE                           
         LH    R2,VTWHEI                                                        
         TNUM  (R2)                                                             
         TSEG  ';'                                                              
         LH    R2,VTWWID                                                        
         TNUM  (R2)                                                             
         TSEG  ';'                                                              
         LH    R2,VTWWIDT                                                       
         TNUM  (R2)                                                             
         TSEG  'i'                                                              
         END                                                                    
         SPACE                                                                  
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
         CLEAR R15                 Indicate output buffer                       
         SETMSG L:CPSEGLOC,L:CPSEGLENF                                          
         VCALL VIEWTRC             Do any tracing                               
         SPACE                                                                  
*QSNAP 'ABOUT TO TWRITE'                                                        
 L R15,CPSEGBP                                                                  
         TWRITE ,                  FLUSH SEG BUFFER TO TERMINAL                 
*QSNAP (R15)                                                                    
         IF    (R15,POS),BEGIN     IF ATTN                                      
         CLEAR VTWFUACT,CPFDISP    CLEAR USER ACTIVE                            
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         END                                                                    
         PEND                                                                   
 TITLE '         WRITESCR -- Routine to write screen to ASCII terminal'         
*                                                                               
**  WRITESCR -- Routine to write a 3270 buffer image to the ASCII               
**              (model) terminal.                                               
**                                                                              
**    On entry:                                                                 
**      VTWAR = @VTWA                                                           
**                                                                              
**    On exit: R15 = 0 or points to error message.                              
*                                                                               
         SPACE                                                                  
WRITEWA  RECORD BEGIN                                                           
ENDOFLIN DS    F                   END OF CURRENT LINE                          
TRANSLAT DS    A                   @ CURRENT TRANSLATE TABLE                    
WRITEF   FLAG  ,                   FLAGS                                        
         FLAG  CSISTART                                                         
         FLAG  PRIVATE                                                          
         FLAG  BRIGHT                                                           
         FLAG  SETTAB                                                           
         FLAG  HOMESET                                                          
FLDFAC   DS    X                                                                
FLDHI    DS    X                                                                
FLDCOL   DS    X                                                                
FLDCS    DS    X                                                                
LASTHI   DS    X                                                                
LASTCOL  DS    X                                                                
LASTCS   DS    X                                                                
SOSET    DS    X                                                                
WSCRATCH DS    X                   SCRATCH AREA                                 
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 = FIELD ATTRIBUTE | CHARACTER BEING PROCESSED                       
**       R3 = CHARACTER ATTRIBUTE BEING PROCESSED                               
**       R4 =                                                                   
**       R5 = SCREEN BUFFER INDEX                                               
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
WRITESCR PROC  WRITEWA             WRITE THE SCREEN TO THE TERMINAL             
*QSNAP 'ENTERED WRITESCR'                                                       
         CLEAR WRITEWA,VTWFWSCR                                                 
         SET CPFDISP                                                            
         TMARK                                                                  
         TSEG  $CLRTABS                                                         
         L     R1,VTWBUFL                                                       
         ACALL FINDPFAC                                                         
         IF    (NZ),'CLEAR (FLDFAC,4)'       IF NO FAC IN BUFFER                
         SPACE                                                                  
         ELSE  BEGIN                         ELSE FAC IN BUFFER                 
         LR    R5,R1                                                            
         MVC    LASTHI(3),=X'FFFFFF' FORCE HIGHLIGHT CHANGE                     
*                                  SAVE THE FIELD ATTRIBUTES                    
         L     R1,VTWTEXTP                   ACCESS THE FAC                     
         LC    R2,@R1(R5)                                                       
         STC   R2,FLDFAC                                                        
         LA    R1,X'0C'                                                         
         NR    R1,R2                                                            
         IF    ((Z),OR,(R1,EQ,X'04')),BEGIN  IF  NORMAL                         
         CLEAR BRIGHT                                                           
         CLEAR PRIVATE                                                          
         END   ,                             END NORMAL                         
         SPACE                                                                  
         ELSEIF (R1,EQ,X'08'),BEGIN          IF BRIGHT                          
         SET BRIGHT                                                             
         CLEAR PRIVATE                                                          
         END   ,                             END BRIGHT                         
         SPACE                                                                  
         ELSE  BEGIN                         ELSE PRIVATE                       
         CLEAR BRIGHT                                                           
         SET PRIVATE                                                            
         END   ,                             END PRIVATE                        
         SPACE                                                                  
         L     R1,VTWHIP           ACCESS THE HIGHLIGHT                         
         LC    R3,@R1(R5)                                                       
         STC   R3,FLDHI            SAVE THE FIELD HIGHLIGHT                     
         SPACE                                                                  
         L     R1,VTWCOLP          ACCESS THE COLOR                             
         LC    R3,@R1(R5)                                                       
         STC   R3,FLDCOL           SAVE THE FIELD COLOR                         
         SPACE                                                                  
         L     R1,VTWCSP           ACCESS THE CHARACTER SET                     
         LC    R3,@R1(R5)                                                       
         STC   R3,FLDCS            SAVE THE CHARACTER SET                       
         SPACE                                                                  
         END   ,                   END FAC IN BUFFER                            
         EJECT                                                                  
         CLEAR R5                  R5 = BUFFER INDEX                            
         WHILE (R5,LT,VTWBUFL),BEGIN         BUFFER LOOP                        
         LR    R1,R5                                                            
         LCALL SEGCURS                       POSITION CURSOR                    
         LR    R2,R5                                                            
         AH    R2,VTWWID                                                        
         ST    R2,ENDOFLIN                                                      
         SPACE                                                                  
         WHILE (R5,LT,ENDOFLIN),BEGIN        LINE LOOP                          
         L     R1,VTWTEXTP                   ACCESS THE CHARACTER               
         LC    R2,@R1(R5)                                                       
         SPACE                                                                  
         IF    ((R2,NZ),AND,(R2,LT,X'40')),BEGIN       FIELD ATTRIBUTE          
         TMARK                                                                  
         IF    (^VTWF3270),BEGIN             IF FAC NOT OCCUPIES SPACE          
         IF    ('TM FLDFAC,X"20"',OFF),'TSEG  $FPROT'  PROTECT THE FAC          
         END   ,                             END FAC NOT OCCUPIES SPACE         
         SPACE                                                                  
         TSEG  $CSI                                                             
*                                  WRITE THE FAC SPACE                          
         TSEG  'm '                RESET HIGHLIGHT, OUTPUT BLANK                
         MVC    LASTHI(2),=X'FFFF' FORCE HIGHLIGHT CHANGE                       
         SPACE                                                                  
*                                  SAVE THE FIELD ATTRIBUTES                    
         STC   R2,FLDFAC                                                        
         LA    R1,X'0C'                                                         
         NR    R1,R2                                                            
         IF    ((Z),OR,(R1,EQ,X'04')),BEGIN  IF  NORMAL                         
         CLEAR BRIGHT                                                           
         CLEAR PRIVATE                                                          
         END   ,                             END NORMAL                         
         SPACE                                                                  
         ELSEIF (R1,EQ,X'08'),BEGIN          IF BRIGHT                          
         SET BRIGHT                                                             
         CLEAR PRIVATE                                                          
         IF    (VTWF3270),'TSEG $CSI; TSEG "1m"'                                
         END   ,                             END BRIGHT                         
         SPACE                                                                  
         ELSE  BEGIN                         ELSE PRIVATE                       
         CLEAR BRIGHT                                                           
         SET PRIVATE                                                            
         IF    (VTWF3270),'TSEG $CSI; TSEG "8m"'                                
         END   ,                             END PRIVATE                        
         SPACE                                                                  
         L     R1,VTWHIP           ACCESS THE HIGHLIGHT                         
         LC    R3,@R1(R5)                                                       
         STC   R3,FLDHI            SAVE THE FIELD HIGHLIGHT                     
         SPACE                                                                  
         L     R1,VTWCOLP          ACCESS THE COLOR                             
         LC    R3,@R1(R5)                                                       
         STC   R3,FLDCOL           SAVE THE FIELD COLOR                         
         SPACE                                                                  
         L     R1,VTWCSP           ACCESS THE CHARACTER SET                     
         LC    R3,@R1(R5)                                                       
         EX    R3,'CLI FLDCS,0'                                                 
         IF    (NE),BEGIN          IF CHARACTER SET CHANGE                      
         STC   R3,FLDCS            SAVE THE CHARACTER SET                       
         IF    (LASTCS,ZERO),'MVI LASTCS,X"FF"'                                 
         END   ,                   END CHARACTER SET CHANGE                     
         SPACE                                                                  
         TSEG  $LCSI               START THE FIELD                              
         LA    R1,X'20'                                                         
         NR    R1,R2               R2 = FIELD FAC                               
         IF    (NZ),BEGIN          IF PROTECTED                                 
         TSEG  '1'                                                              
         CLEAR SETTAB                                                           
         LA    R1,=A(X'10')                                                     
         NR    R1,R2                                                            
         IF    (NZ),'TSEG ";12"'   IF AUTO SKIP                                 
         END   ,                   END PROTECTED                                
         SPACE                                                                  
         ELSE  BEGIN               ELSE UNPROTECTED                             
         SET   SETTAB                                                           
         LA    R1,X'10'                                                         
         NR    R1,R2                                                            
         IF    (NZ),'TSEG "3"'     IF NUMERIC                                   
         ELSE  'TSEG "2"'          ELSE ACCEPT ALL                              
         END   ,                   END UNPROTECTED                              
         SPACE                                                                  
         TSEG  'F'                 START FIELD FINAL                            
         IF    (SETTAB),BEGIN      IF UNPROTECTED                               
         TSEG  $SETTAB                                                          
         IF    (^HOMESET),BEGIN    IF HOME HAS NOT BEEN SET                     
         SET   HOMESET                                                          
         TSEG  $SETHOME                                                         
         END   ,                   END HOME HAS NOT BEEN SET                    
         END   ,                   END UNPROTECTED                              
         END   ,                                   END FIELD ATTRUBUTE          
         SPACE 2                                                                
         ELSE  BEGIN                            ELSE DISPLAY CHARACTER          
         CLEAR CSISTART                                                         
         L     R1,VTWHIP           ACCESS THE HIGHLIGHT                         
         LC    R3,@R1(R5)                                                       
         EX    R3,'CLI LASTHI,0'                                                
         IF    NE,BEGIN            IF HIGHLIGHT CHANGE                          
         TMARK                                                                  
         STC   R3,LASTHI                                                        
         IF    (R3,ZERO),'IC R3,FLDHI'  IF FIELD INHERIT                        
         SPACE                                                                  
         IF    (BRIGHT),'TSEG $CSI; TSEG "1"' BRIGHT                            
         ELSE  'TSEG $CSI; TSEG "0"'          NORMAL                            
         SET   CSISTART                                                         
         SPACE                                                                  
         IF     (R3,EQ,X'F1'),'TSEG ";5"'     BLINK                             
         ELSEIF (R3,EQ,X'F2'),'TSEG ";7"'     REVERSE VIDEO                     
         ELSEIF (R3,EQ,X'F4'),'TSEG ";4"'     UNDERSCORE                        
         SPACE                                                                  
         IF    (PRIVATE),'TSEG ";8"'          IF BLANKED                        
         SPACE                                                                  
         END   ,                   END HIGHLIGHT CHANGE                         
         SPACE                                                                  
         L     R1,VTWCOLP          ACCESS THE COLOR                             
         LC    R3,@R1(R5)                                                       
         EX    R3,'CLI LASTCOL,0'                                               
         IF    NE,BEGIN            IF COLOR CHANGE                              
         STC   R3,LASTCOL                                                       
         IF    (R3,ZERO),'IC R3,FLDCOL' IF FIELD INHERIT                        
         SPACE                                                                  
         IF    (^CSISTART),'TMARK; TSEG $CSI; SET CSISTART'                     
         ELSE  'TSEG ";"'                                                       
         SPACE                                                                  
         IF     (R3,ZERO),'TSEG "38"'         DEFAULT                           
         ELSEIF (R3,EQ,X'F1'),'TSEG "34"'     BLUE                              
         ELSEIF (R3,EQ,X'F2'),'TSEG "31"'     RED                               
         ELSEIF (R3,EQ,X'F3'),'TSEG "35"'     PINK                              
         ELSEIF (R3,EQ,X'F4'),'TSEG "32"'     GREEN                             
         ELSEIF (R3,EQ,X'F5'),'TSEG "36"'     TURQUOISE                         
         ELSEIF (R3,EQ,X'F6'),'TSEG "33"'     YELLOW                            
         ELSEIF (R3,EQ,X'F7'),'TSEG "37"'     WHITE                             
         SPACE                                                                  
         END   ,                   END COLOR CHANGE                             
         SPACE                                                                  
         IF    (CSISTART),'TSEG "m"'          SEG SGR FINAL                     
         SPACE                                                                  
         L     R1,VTWCSP           ACCESS THE CHARACTER SET                     
         LC    R3,@R1(R5)                                                       
         EX    R3,'CLI LASTCS,0'                                                
         IF    NE,BEGIN            IF CHARACTER SET CHANGE                      
         TMARK                                                                  
         STC   R3,LASTCS                                                        
         CLEAR TRANSLAT                                                         
         IF    (R3,ZERO),'IC R3,FLDCS' IF FIELD INHERIT                         
         SPACE                                                                  
         IF    (R3,ZERO),'TSEG $SI'          DEFAULT                            
         ELSE   BEGIN                        ELSE SHIFT-OUT SET                 
         EX    R3,'CLI SOSET,0'                                                 
         IF    (NE),BEGIN                                                       
         STC   R3,SOSET                                                         
         LR    R4,R3                                                            
         IF    (R3,EQ,X'F1'),'LA R4,X"F2"'   IF IBM APL/TEXT:                   
         TSEG  =X'275D',2                    SET SO CHARACTER SET               
         STC   R4,WSCRATCH                                                      
         TSEG  WSCRATCH,1                                                       
         END                                                                    
         IF    (R3,EQ,X'F1'),'MVC TRANSLAT,=A(APLTEXT)'                         
         TSEG  $SO                                                              
         END   ,                             END SHIFT-OUT SET                  
         END   ,                   END CHARACTER SET CHANGE                     
         SPACE                                                                  
*                                  NOW OUTPUT THE CHARACTER                     
*                                  R2 = THE CHARACTER                           
         IF    (R2,ZERO),'LA R2,X"40"' CHANGE NULL TO BLANK                     
         L     R15,TRANSLAT                                                     
         IF    (R15,NZ),'IC R2,@R15(R2)' IF NEED TO TRANSLATE                   
         STC   R2,WSCRATCH                                                      
         TSEG  WSCRATCH,1                                                       
         END   ,                   END DISPLAY CHARACTER                        
         SPACE                                                                  
         LA    R5,@R5+1            STEP INDEX                                   
         END   ,                   END OF LINE LOOP                             
         SPACE                                                                  
         END   ,                   END OF BUFFER LOOP                           
         SPACE                                                                  
         TMARK                                                                  
         IF    (VTWFBEL),'TSEG $BEL; CLEAR VTWFBEL'                             
         L     R1,VTWICPOS         INSERT CURSOR                                
         LCALL SEGCURS                                                          
         SPACE                                                                  
*-                                                                              
*-       Do output buffer tracing.                                              
*-                                                                              
         CLEAR R15                 Indicate output buffer                       
         SETMSG L:CPSEGLOC,L:CPSEGLENF                                          
         VCALL VIEWTRC             Do any tracing                               
         SPACE                                                                  
*QSNAP 'ABOUT TO TWRITE'                                                        
 L R15,CPSEGBP                                                                  
         TWRITE ,                  FLUSH SEG BUFFER TO TERMINAL                 
*QSNAP (R15)                                                                    
         IF    (R15,POS),BEGIN     IF ATTN                                      
         CLEAR VTWFUACT,CPFDISP    CLEAR USER ACTIVE                            
*QSNAP 'RETURN TO WYLBUR'                                                       
         B     CVNEXT              RETURN TO WYLBUR                             
********************************************************************            
*                 CONTROL HAS BEEN RETURNED TO WYLBUR              *            
********************************************************************            
         END                                                                    
         SPACE                                                                  
         CLEAR R15                                                              
         PEND                                                                   
 TITLE '        SEGCURS -- Routine to seg cursor addressing characters'         
*                                                                               
**  SEGCURS -- Routine to seg cursor addressing characters.                     
**                                                                              
**    On entry:                                                                 
**      R1 - BUFFER OFFSET RELATIVE TO ZERO                                     
**                                                                              
**  Note: Row and columns are relative to one (not zero).                       
*                                                                               
         SPACE                                                                  
SEGCURS  PROC  ,                   SEG CURSOR POS TO TERMINAL                   
         LR    R5,R1               SAVE POSITION                                
         CLEAR R4                                                               
*                                                                               
         LH    R2,VTWWID           DIVIDE BY WIDTH OF 3270                      
         DR    R4,R2                                                            
         LA    R4,@R4+1            R4 = COLLUMN                                 
         LA    R5,@R5+1            R5 = ROW                                     
*                                                                               
         TSEG  $CSI                Start of sequence                            
         TNUM  (R5)                ROW (HORIZONTAL)                             
         TSEG  ';'                                                              
         TNUM  (R4)                COLUMN (VERTICAL)                            
         TSEG  'f'                 Position cursor verb                         
         PEND                                                                   
*                                                                               
         LTORG                                                                  
 TITLE '                                WRITESCR -- Translation Tables'         
         SPACE 3                                                                
*                                                                               
*                                                                               
* This is the table for the IBM "F1" APL/TEXT II character set                  
* (Translation is to the Stanford "F2" Ruling character set                     
*                                                                               
         SPACE 3                                                                
APLTEXT  DS        0XL256                                                       
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
         DC        X'00404040404040404040404040404040'      00                  
         DC        X'40404040404040404040404040404040'      10                  
         DC        X'40404040404040404040404040404040'      20                  
         DC        X'40404040404040404040404040404040'      30                  
         DC        X'40C1C2C3C4C5C6C7C8C9404040404040'      40                  
         DC        X'40D1D2D3D4D5D6D7D8D9404040404040'      50                  
         DC        X'4040E2E3E4E5E6E7E8E9404040404040'      60                  
         DC        X'40404040404040404040404040404040'      70                  
         DC        X'406D887A7BA740404040616FA893946E'      80                  
         DC        X'407C6C97997E40404040404079408760'      90                  
         DC        X'9886985F4040404040404040A5ADA95F'      A0                  
         DC        X'404040404040404040404040A6BD4FA7'      B0                  
         DC        X'404040799493A3A5D0404040405F405F'      C0                  
         DC        X'404040959192A4A6C040404040404040'      D0                  
         DC        X'40F1F2F34040404040404040405F405F'      E0                  
         DC        X'F0F1F2F3F4F5F6F7F8F94040405F5F40'      F0                  
*                     0 1 2 3 4 5 6 7 8 9 A B C D E F                           
*                                                                               
 TITLE '          BUFTODIS-- Translate buffer address to display bytes'         
*                                                                               
**  BUFTODIS -- Routine to translate binary buffer address                      
**              to 3270 display characters                                      
**                                                                              
**    On entry:                                                                 
**      R1 - Buffer Offset Relative To ZERO                                     
**                                                                              
**    On exit:                                                                  
**      R1 - 3270 characters in 2 low order positions                           
*                                                                               
         SPACE                                                                  
BUFTODIS PROC  ,                   TRANSLATE BUFFER BINARY TO DISPLAY           
         CL    R1,=A(X'3FFF')                                                   
         FAIL  (GT),BUFTODIS,'BUFFER ADDRESS > 14-BIT'                          
         IF    ((VTWF14B),OR,(R1,GT,=A(X'FFF'))),'SET VTWF14B'                  
*                           14-BIT VALUE IS ALREADY PROPERLY FOREMATTED         
         SPACE                                                                  
         ELSE  BEGIN                         DO 12-BIT                          
         LA    R5,X'3F'               LOAD LOW ORDER 6 BITS                     
         NR    R5,R1                                                            
         LA    R4,X'FC0'              LOAD HI ORDER 6 BITS                      
         NR    R4,R1                                                            
         SRL   R4,6                                                             
         IC    R5,DCHARTAB(R5)     LOOKUP CHARACTER                             
         IC    R4,DCHARTAB(R4)                                                  
         LR    R1,R5               FORM RESULT                                  
         SLL   R4,8                                                             
         OR    R1,R4                                                            
         END   ,                             END DO 12-BIT                      
         SPACE                                                                  
         CLEAR R15                                                              
         PRETURN R1                                                             
         PEND                                                                   
         SPACE                                                                  
DCHARTAB OTR3270                   DISPLAY CHARACTER TABLE                      
 TITLE '          DISTOBUF-- Translate display bytes to buffer address'         
*                                                                               
**  DISTOBUF -- Routine to translate 3270 display characters                    
**              to binary buffer address                                        
**                                                                              
**    On entry:                                                                 
**      R1 - 3270 characters in 2 low order positions                           
**                                                                              
**    On exit:                                                                  
**      R1 - Buffer Offset Relative to ZERO                                     
*                                                                               
         SPACE                                                                  
DISTOBUF PROC  ,                                                                
         L     R5,=A(X'C000')                                                   
         NR    R5,R1                                                            
         IF    (ZERO),BEGIN                  IF 14-BIT                          
         N     R1,=A(X'3FFF')                ISOLATE 14-BITS                    
         SET   VTWF14B                                                          
         END   ,                             END 14-BIT                         
         SPACE                                                                  
         ELSE  BEGIN                         ELSE 12-BIT                        
         L     R4,=A(X'3F00')           LOAD HI ORDER 6 BITS                    
         NR    R4,R1                                                            
         SRL   R4,2                                                             
         N     R1,=A(X'3F')           ISOLATE LOW ORDER 6 BITS                  
         OR    R1,R4                  FORM RESULT                               
         END   ,                             END 12-BIT                         
         SPACE                                                                  
         PRETURN R1                EXIT                                         
         CLEAR R15                                                              
         PEND                                                                   
 TITLE '                         SRECEIVE - Start a data receive going'         
*                                                                               
**  SRECEIVE -- Routine to start a data receive going                           
**                                                                              
**    On entry:                                                                 
**      No entry parameters                                                     
**                                                                              
**    On exit:                                                                  
**      Receive has been started                                                
*                                                                               
**  Note: May be called from a Dispatcher Routine                               
*                                                                               
         SPACE                                                                  
SRECEIVE PROC  ,                   START A DATA RECEIVE                         
*QSNAP 'ENTERED SRECEIVE'                                                       
*QSNAP (RAR)                                                                    
         L     R4,VTWAACBP                                                      
         WITH  (ACB,R4),'L R4,ACBNRRPL'                                         
         WITH  (RPL,R4)            GET THE RPL                                  
         IF    (RPLACTIV,Z),BEGIN                                               
         L     R5,RPLAREA                                                       
         L     R3,RPLBUFL                                                       
         IF    (R5,Z),BEGIN                                                     
         L     R3,VTWRSIZO                                                      
         LA    R2,@R3+VTBDATA-VTBHEAD                                           
         LR    R0,R2                                                            
         VCALL GETCORE             GET A BUFFER                                 
         LR    R5,R1                                                            
         END                                                                    
         ELSE  'S R5,=A(VTBDATA-VTBHEAD)'                                       
         WITH  (VTBHEAD,R5)                                                     
         XC    VTBHEAD(VTBDATA-VTBHEAD),VTBHEAD                                 
         MVC   VTBID,=C'VTBH'                                                   
         STH   R3,VTBDLENG                                                      
         SPACE                                                                  
*QSNAP 'START RECEIVE DATA'                                                     
         AIF   ('&BRANCH' EQ 'NO').MODE6                                        
         MODESET MODE=SUP              ********* ENTER SUPERVISOR STATE         
.MODE6   L     R2,=A(SRBROUT)                                                   
         RECEIVE RPL=(R4),AREA=VTBDATA,AREALEN=(R3),                   *        
               OPTCD=(ASY,CA,ANY,NIBTK,Q),                             *        
               RTYPE=(DFSYN,NDFASY,NRESP),BRANCH=&BRANCH,EXIT=(R2)              
         LR    R2,R15                                                           
         MODESET MODE=PROB             ********* LEAVE SUPERVISOR STATE         
         SPACE                                                                  
*QSNAP (R2)                                                                     
         IF    (R2,Z),'EXIT SRECEIVE'        RETURN                             
         SPACE                                                                  
         KAPUT  DRCVE,'****ERROR CODE - RECEIVE REFUSED'                        
         END                                                                    
         SPACE                                                                  
         PEND                                                                   
 TITLE '                           SSIGNAL - Start a send signal going'         
*                                                                               
**  SSIGNAL -- Routine to send an ATTN signal                                   
**                                                                              
**    On entry:                                                                 
**      No entry parameters                                                     
**                                                                              
**    On exit:                                                                  
**      SIGNAL has been sent                                                    
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 = RPL                                                               
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
SSIGNAL  PROC  ,                   SEND A SIGNAL                                
*QSNAP 'ENTERED SSIGNAL'                                                        
         IF    (VSOUTBSS),'EXIT'   DO NOT SEND TWICE                            
VATTN1   L     R5,VTWAACBP                   SEND A SIGNAL                      
         WITH  (ACB,R5),'L R5,ACBEORPL'      R5 := @ RPL                        
         USING RPL,R5                                                           
         FAIL  (RPLACTIV,EQ,X'FF'),VATTN,'RPL BUSY'                             
         SPACE                                                                  
*QSNAP 'ABOUT TO SEND A SIGNAL'                                                 
         CLEAR VTWSECB                                                          
         SEND  RPL=(R5),STYPE=REQ,CONTROL=SIGNAL,CHNGDIR=NCMD,         *        
               SIGDATA=X'00010000',BRANCH=NO,OPTCD=(ASY,CA),ECB=VTWSECB         
         CLEAR R0                                                               
         LA    R1,VTWSECB                                                       
         VCALL WAITECB                                                          
         SPACE                                                                  
         CHECK RPL=(R5)                                                         
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,SIGLTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
SIGLTABL DC    A(SIGLNORM)         NORMAL                                       
         DC    A(SIGLERR)          ERROR SYNAD                                  
         DC    A(VATTN1)           RETRY                                        
         DC    A(SIGLNORM)         ERROR INTEGRETY                              
         DC    A(SIGLENV)          ERROR ENVIRONMENT                            
         DC    A(SIGLERR)          ERROR LOGIC                                  
         DC    A(SIGLERR)          ERROR BAD RPL                                
         DC    A(SIGLNORM)         ERROR ACB NOT OPEN                           
         SPACE 3                                                                
SIGLENV  LABEL                     ENVIRONMENT ERROR                            
         IF    (R2,EQ,=A(X'000A')),'ACALL ERROR10A'  VTAM FAILED                
         IF   ((R2,EQ,=A(X'0003')),OR,            VTAM HALT ISSUED     *        
               (R2,EQ,=A(X'0007')),OR,            CANCELLED BY VARY    *        
               (R2,EQ,=A(X'0009')),OR,            LOGOFF RECEIVED      *        
               (R2,EQ,=A(X'000E'))),'ACALL PATHBRKN'     VTAM ERROR             
SIGLERR  LABEL                                                                  
         L     R3,RPLRSENS                                                      
         ACALL FREEVTWA                                                         
         KAPUT SSIGNAL,'UNEXPECTED VTAM RETURN CODE'                            
         SPACE 2                                                                
SIGLNORM LABEL                     NORMAL COMPLETION                            
         IF    (VSOUTB),'SET VSOUTBSS'       SET OUTBOUND SIGNAL SENT           
         SPACE                                                                  
         PEND                                                                   
 TITLE '                          GETVTWA -- Create terminal work area'         
*                                                                               
**  GETVTWA -- ROUTINE TO CREATE AND INITIALIZE A VTAM TERMINAL                 
**  WORK AREA.                                                                  
**                                                                              
**    On exit:                                                                  
**       CPVTWAP - address of user's VTWA                                       
*                                                                               
         SPACE                                                                  
GETVTWA  PROC  ,                   GET A VTWA                                   
*QSNAP 'ENTERED GETVTWA'                                                        
         FAIL  (CPVTWAP,NZ),GETVTWA,'VTWA ALREADY ALLOCATED.'                   
*                                                                               
         LA    R0,L'VTWA                                                        
         VCALL GETCORE             Get memory for VTWA                          
         LR    R6,R1                                                            
*        WITH  (VTWA,R6)                                                        
*                                                                               
         ZOT   VTWA                                                             
         MVC   VTWID,=C'VTWA'     SET SELF-IDENTIFICATION                       
*                                                                               
*  Calculate screen height and width.                                           
*                                                                               
         L     R5,CPTTYPEP                                                      
         WITH  (TTYPE,R5),BEGIN                                                 
         BEGIN ,                   HEIGHT                                       
         LTH   R15,CPSHEI          Get session default                          
         IF    NZ,EXIT             Got it, scram                                
         LTH   R15,TTYHEI          Terminal height                              
         IF    NZ,EXIT             Got it, scram                                
         LA    R15,24              Universal default                            
         END                                                                    
         STH   R15,VTWHEIT         SAVE HEIGHT                                  
*                                                                               
         BEGIN ,                   WIDTH                                        
         LTH   R15,CPSWID          Get session default                          
         IF    NZ,EXIT             Got it, scram                                
         LTH   R15,TTYWID          Terminal width                               
         IF    NZ,EXIT             Got it, scram                                
         LA    R15,80              Universal default                            
         END                                                                    
         STH   R15,VTWWIDT         SAVE WIDTH                                   
         SPACE                                                                  
         IF    (TTYFCOLOR),'SET VTWFCOLOR'   IF COLOR TERMINAL                  
         IF    (TTYFVTAM),'SET VTWF3270'     IF 3270 TERMINAL                   
         IF    (CPSTTYPE,NE,C'3278B'),'SET VTWFHI+VTWFGE'  3270 EA              
         END                                                                    
*                                                                               
         ST    CPR,VTWCPSAV                                                     
         ST    R6,CPVTWAP          Save VTWA ptr                                
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'LH R0,JCBSEQ'                                         
         ST    R0,VTWLNSAV         SAVE LINE NUMBER                             
         PEND                                                                   
 TITLE '             FREEVTWA - Free the VTWA and other control blocks'         
*                                                                               
** FREEVTWA -- Free the VTWA and associated control blocks.                     
*              Closes the ACB.                                                  
*                                                                               
* INPUT: none                                                                   
*                                                                               
* OUTPUT: VTWA has been freed                                                   
*                                                                               
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
*                                                                               
         SPACE                                                                  
FREEVTWA PROC  ,                   FREE THE VTWA                                
*QSNAP 'ENTERED FREEVTWA'                                                       
         LT    R6,CPVTWAP                                                       
         IF    (Z),'EXIT FREEVTWA'                                              
         SPACE                                                                  
         IF    (VTWFFREZ),BEGIN    IF SESSION FROZEN                            
         CLEAR CPVTWAP             DISCONNECT VTWA                              
         EXIT  FREEVTWA            RETURN                                       
         END   ,                   END SESSION FROZEN                           
         SPACE                                                                  
         ACALL FREEACB             CLOSE AND FREE THE ACB                       
         SPACE                                                                  
         L     R1,VTWIBLST         CHECK INBOUND BUFFERS                        
         CLEAR VTWIBLST                                                         
         IF    (R1,NZ),BEGIN       IF BUFFLST                                   
         VCALL FREECORE            FREE IT                                      
         END                                                                    
         SPACE                                                                  
         L     R4,VTWIRUC          CLEAN UP THE INBOUND BUFFERS                 
         CLEAR VTWIRUC                                                          
         WITH  (VTBHEAD,R4)                                                     
         LR    R2,R4                                                            
         WHILE (R2,NZ),BEGIN       WHILE IN BUFFER                              
         LR    R4,R2                                                            
         L     R2,VTBNEXT                                                       
         LR    R1,R4                                                            
         FAIL  (VTBID,NE,C'VTBH'),FREEVTWA,'BAD INBOUND BUFFER'                 
         VCALL FREECORE                                                         
         END   ,                   END IN BUFFERS                               
         SPACE                                                                  
         L     R4,VTWORUC          CLEAN UP THE RECEIVE BUFFERS                 
         CLEAR VTWORUC                                                          
         WITH  (VTBHEAD,R4)                                                     
         LR    R2,R4                                                            
         WHILE (R2,NZ),BEGIN       WHILE IN BUFFER                              
         LR    R4,R2                                                            
         L     R2,VTBNEXT                                                       
         LR    R1,R4                                                            
         FAIL  (VTBID,NE,C'VTBH'),FREEVTWA,'BAD OUTBOUND BUFFER'                
         VCALL FREECORE                                                         
         END   ,                   END IN BUFFERS                               
         SPACE                                                                  
         L     R1,VTWBINDP         CHECK BIND IMAGE                             
         CLEAR VTWBINDP                                                         
         IF    (R1,NZ),BEGIN                                                    
         FREEMAIN RC,LV=36,A=(R1)                                               
         END                                                                    
         SPACE                                                                  
         L     R1,VTWANIBP         CHECK NIB                                    
         CLEAR VTWANIBP                                                         
         IF    (R1,NZ),BEGIN                                                    
         VCALL FREECORE                                                         
         END                                                                    
         SPACE                                                                  
         L     R1,VTWTEXTP         SCREEN BUFFERS                               
         CLEAR VTWTEXTP                                                         
         IF    (R1,NZ),BEGIN                                                    
         VCALL FREECORE                                                         
         END                                                                    
         SPACE                                                                  
         L     R1,VTWHIP                                                        
         CLEAR VTWHIP                                                           
         IF    (R1,NZ),BEGIN                                                    
         VCALL FREECORE                                                         
         END                                                                    
         SPACE                                                                  
         L     R1,VTWCOLP                                                       
         CLEAR VTWCOLP                                                          
         IF    (R1,NZ),BEGIN                                                    
         VCALL FREECORE                                                         
         END                                                                    
         SPACE                                                                  
         L     R1,VTWCSP                                                        
         CLEAR VTWCSP                                                           
         IF    (R1,NZ),BEGIN                                                    
         VCALL FREECORE                                                         
         END                                                                    
         SPACE                                                                  
         CLEAR CPVTWAP             THE VTWA ITSELF                              
         LR    R1,R6                                                            
         VCALL FREECORE                                                         
         SPACE                                                                  
         PEND                                                                   
         LTORG                                                                  
 TITLE '                                 GENACB - Generate an VTAM ACB'         
*                                                                               
** GENACB -- Generate an VTAM ACB                                               
**                                                                              
** GENERATES THE VTAM ACB AND RPL CONTROL BLOCKS                                
**                                                                              
** INPUT:  none                                                                 
**                                                                              
** OUTPUT: R1 = @ACBWYL                                                         
** OUTPUT: R1 = 0 if generate failed                                            
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = @ RPL                                                             
**       R5 = @ ACB                                                             
**       R6 =                                                                   
*                                                                               
         SPACE                                                                  
GENACB   PROC  ,                   GENERATE THE ACB                             
*QSNAP 'ENTERED GENACB'                                                         
*                                            GENERATE THE ACB                   
         LA    R0,L'ACBWYL                                                      
         GETMAIN R,LV=(0)                    ACB MUST BE BELOW 16M              
         LR    R5,R1                                                            
         WITH  (ACB,R5)                                                         
         CLEAR (ACBWSTRT,ACBWEND-ACBWSTRT)                                      
         MVI   ACBOLIST,X'80'                                                   
         LA    R3,ACBWAPLT                                                      
         SPACE                                                                  
         GENCB AM=VTAM,BLK=ACB,WAREA=(R5),LENGTH=L'ACB,                *        
               EXLST=ALIST,APPLID=(R3)                                          
         FAIL  (R15,NZ),GETACB,'GENACB REFUSED'                                 
         SPACE                                                                  
*                                            GENERATE THE RPLS                  
         SPACE                                                                  
         LA    R0,L'RPLWYL         GENERATE THE DATA RPLS                       
         VCALL GETCORE                                                          
         LR    R4,R1                                                            
         WITH  (RPL,R4)                                                         
         ST    R4,ACBNSRPL                                                      
         CLEAR (RPLWSTRT,RPLWEND-RPLWSTRT)                                      
         SPACE                                                                  
         GENCB AM=VTAM,BLK=RPL,WAREA=(R4),LENGTH=L'RPL,ACB=(R5),       *        
               POST=SCHED,OPTCD=(ASY,CA),EXIT=SRBROUT,                 *        
               RESPOND=(EX,FME,NRRN),                                  *        
               STYPE=REQ,CONTROL=DATA,CHNGDIR=CMD,BRANCH=&BRANCH                
         FAIL  (R15,NZ),GETACB,'GEN NS RPL REFUSED'                             
         SPACE                                                                  
         LA    R0,L'RPLWYL                                                      
         VCALL GETCORE                                                          
         LR    R4,R1                                                            
         ST    R4,ACBNRRPL                                                      
         CLEAR (RPLWSTRT,RPLWEND-RPLWSTRT)                                      
         SPACE                                                                  
         GENCB AM=VTAM,BLK=RPL,WAREA=(R4),LENGTH=L'RPL,ACB=(R5),       *        
               OPTCD=(ASY,CA,ANY,NIBTK,Q),EXIT=SRBROUT,                *        
               RTYPE=(DFSYN,NDFASY,NRESP),BRANCH=&BRANCH                        
         FAIL  (R15,NZ),GETACB,'GEN NR RPL REFUSED'                             
         SPACE                                                                  
         LA    R0,L'RPLWYL         GENERATE THE EXPEDITED INPUT RPL             
         VCALL GETCORE                                                          
         LR    R4,R1                                                            
         ST    R4,ACBEIRPL                                                      
         CLEAR (RPLWSTRT,RPLWEND-RPLWSTRT)                                      
         SPACE                                                                  
         GENCB AM=VTAM,BLK=RPL,WAREA=(R4),LENGTH=L'RPL,ACB=(R5),       *        
               OPTCD=(ASY,CA,ANY,NIBTK,Q),AREALEN=0,EXIT=SRBROUT,      *        
               RTYPE=(NDFSYN,DFASY,RESP),BRANCH=&BRANCH                         
         FAIL  (R15,NZ),GETACB,'GEN EI RPL REFUSED'                             
         SPACE                                                                  
         LA    R0,L'RPLWYL         GENERATE THE EXPEDITED OUTPUT RPL            
         VCALL GETCORE                                                          
         LR    R4,R1                                                            
         ST    R4,ACBEORPL                                                      
         CLEAR (RPLWSTRT,RPLWEND-RPLWSTRT)                                      
         SPACE                                                                  
         GENCB AM=VTAM,BLK=RPL,WAREA=(R4),LENGTH=L'RPL,ACB=(R5),       *        
               POST=SCHED,OPTCD=(ASY,CA)                                        
         FAIL  (R15,NZ),GETACB,'GEN EO RPL REFUSED'                             
         SPACE                                                                  
         LA    R0,L'RPLWYL     GENERATE THE PHONY BREAK TERMINAL RPL            
         VCALL GETCORE                                                          
         LR    R4,R1                                                            
         ST    R4,ACBBTRPL                                                      
         CLEAR RPLWYL                                                           
         ST    R5,RPLDACB                                                       
         SPACE                                                                  
         LR    R1,R5                         NORMAL RETURN                      
         PRETURN R1                                                             
         PEND                                                                   
         LTORG                                                                  
 TITLE '                                       GETACB - Get a VTAM ACB'         
*                                                                               
** GETACB -- GET A VTAM ACB                                                     
**                                                                              
** GETS A VTAM ACB AND RPL CONTROL BLOCKS FROM THE POOL                         
**                                                                              
** INPUT:  R6 = @ VTWA                                                          
**                                                                              
** OUTPUT: R1 = 0 OPEN SUCCESSFUL, R5 = @ ACBWYL                                
**         R1 = @ERROR MESSAGE, VTWA NOT UPDATED                                
**         R0 = L'ERROR MESSAGE                                                 
*                                                                               
         SPACE                                                                  
GETACBWA RECORD BEGIN                                                           
FIRSTTRI DS    A                   FIRST ACB TRIED                              
         END                                                                    
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 = @ LASTAACB                                                        
**       R4 = @ RPL                                                             
**       R5 = @ ACB                                                             
**       R6 = VTWA                                                              
*                                                                               
         SPACE                                                                  
GETACB   PROC  GETACBWA            GET THE ACB                                  
*QSNAP 'ENTERED GETACB'                                                         
         WITH  (ACBWYL,R5)                                                      
         SPACE                                                                  
         L     R3,=A(LASTAACB)                                                  
         LT    R5,@R3                                                           
         IF    (ZERO),BEGIN                                                     
         ERROR 'NO VLOGON TERMINALS DEFINED'                                    
         B     GETACBR                                                          
         END                                                                    
         SPACE                                                                  
         ST    R5,FIRSTTRI                                                      
         B     GETACB2                                                          
         SPACE                                                                  
GETACB1  WHILE (ACBWNEXT,NE,FIRSTTRI),BEGIN GETACB1     FIND AN ACB             
         L     R5,ACBWNEXT         STEP TO NEXT                                 
GETACB2  IF    (ACBWON,AND,^ACBWALLO),GETACB3                                   
         END   ,                      END GETACB1 LOOP                          
         SPACE                                                                  
         IF    (ACBWNEXT,EQ,FIRSTTRI),BEGIN                                     
         ERROR 'ALL VLOGON TERMINALS ARE IN USE'                                
         B     GETACBR                                                          
         END                                                                    
         SPACE                                                                  
         FAIL  (ACB,NE,X'A020'),GETACB,'OPEN NOT ACB'                           
         SPACE                                                                  
GETACB3  LABEL                                        FOUND ONE                 
         SET   ACBNAVAL           PRESET NOT AVAILABLE FOR SHO VOPT             
         OPEN  ((R5)),MF=(E,ACBOLIST)                                           
*QSNAP 'ACB OPENED'                                                             
*QSNAP ACBERFLG,1                                                               
         SPACE                                                                  
         IF    (^ACBOFLGS.ACBOPEN),BEGIN     IF OPEN FAIL                       
         IF    (ACBERFLG,EQ,ACBONVRT),BEGIN                                     
         ERROR 'OPEN FAILED - NOT ENOUGH VTAM STORAGE'                          
         B     GETACBR                                                          
         END                                                                    
         SPACE                                                                  
         IF    (ACBERFLG,EQ,X'24'),BEGIN                                        
         ERROR 'OPEN FAILED - INCORRECT SYSTEM PASSWORD'                        
         B     GETACBR                                                          
         END                                                                    
         SPACE                                                                  
         IF    (ACBERFLG,EQ,ACBOANAT),BEGIN                                     
         ERROR 'VTAM NOT INCLUDED IN OPERATING SYSTEM'                          
         B     GETACBR                                                          
         END                                                                    
         SPACE                                                                  
         IF    ((ACBERFLG,EQ,ACBOAHLT),OR,(ACBERFLG,EQ,ACBOVINA)),BEGIN         
         ERROR 'VTAM NOT ACTIVE'                                                
         B     GETACBR                                                          
         END                                                                    
         SPACE                                                                  
         IF    ((ACBERFLG,EQ,ACBOAVFY),OR,(ACBERFLG,EQ,ACBOANSN),OR,   *        
               (ACBERFLG,EQ,ACBOAPLE)),'B GETACB1'                              
         COMMENT INVALID VTAM TERMINAL NAME                                     
         SPACE                                                                  
         IF    (ACBERFLG,EQ,ACBOAPNM),'B GETACB1'                               
         COMMENT NO MATCHING VTAM TERMINAL NAME                                 
         SPACE                                                                  
         IF    (ACBERFLG,EQ,ACBOAPAA),' B GETACB1'                              
         COMMENT VTAM TERMINAL ID ALREADY ACTIVE                                
         SPACE                                                                  
         IF    (ACBERFLG,EQ,ACBOUNDF),BEGIN                                     
         ERROR 'OPEN ERROR - IBM SYSTEM ERROR'                                  
         B     GETACBR                                                          
         END                                                                    
         SPACE                                                                  
         FAIL  ((ACBERFLG,EQ,ACBOACT),OR,(ACBERFLG,EQ,ACBCBUSY)),      *        
               VLOGON,'ACB ALREADY OPENED'                                      
         SPACE                                                                  
         ERROR 'UNKNOWN OPEN RETURN'                                            
         B     GETACBR                                                          
         END   ,                             END OPEN FAIL                      
         SPACE                                                                  
*                                            ELSE OPEN SUCCESSFUL               
         CLEAR ACBNAVAL                                                         
         SET   ACBWALLO                                                         
         ST    R5,@R3 LASTAACB                                                  
         WITH  (RPL,R1)                                                         
         L     R1,ACBNRRPL                   SET RPLS NOT ACTIVE                
         CLEAR RPLACTIV                                                         
         L     R1,ACBNSRPL                                                      
         CLEAR RPLACTIV                                                         
         L     R1,ACBEIRPL                                                      
         CLEAR RPLACTIV                                                         
         L     R1,ACBEORPL                                                      
         CLEAR RPLACTIV                                                         
         CLEAR R1                            SET SUCCESSFUL RETURN              
GETACBR  PRETURN (R0,R1)                     RETURN                             
         PRETURN R5                                                             
         PEND                                                                   
 TITLE '             FREEACB - Close the ACB and mark it not allocated'         
*                                                                               
** FREEACB -- Close the ACB.                                                    
*             Mark the ACB as not allocated.                                    
*                                                                               
* INPUT: none                                                                   
*                                                                               
* OUTPUT: ACB has been closed                                                   
*                                                                               
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 = @ ACB                                                             
**       R6 = VTWA                                                              
*                                                                               
*                                                                               
         SPACE                                                                  
FREEACB  PROC  ,                   FREE THE ACB                                 
*QSNAP 'ENTERED FREEACB'                                                        
         LT    R5,VTWAACBP                                                      
         IF    (Z),'EXIT FREEACB'                                               
         WITH  (ACB,R5)                                                         
         SPACE                                                                  
         BEGIN ,                          CLOSE THE ACB                         
         IF    (ACB,NE,X'A020'),EXIT                                            
*QSNAP 'ABOUT TO CLOSE ACB'                                                     
         CLOSE ((R5)),MF=(E,ACBOLIST)                                           
         L     R15,=F'50'          .5 second wait                               
         VCALL WAITER              ALLOW DISPATCHER ROUTINES TO EXECUTE         
         END   ,                          END CLOSE THE ACB                     
         SPACE                                                                  
         CLEAR ACBWALLO                   MARK NOT ALLOCATED                    
         SPACE                                                                  
         PEND                                                                   
         DROP  R6,R11                                                           
         LTORG                                                                  
 TITLE 'Dispatcher Routines                   VTAMDISP - Entry Routine'         
*                                                                               
**  VTAMDISP - This Wylbur Dispatcher routine is scheduled from                 
**             a VTAM SRB whenever an asynchronous RPL operation                
**             completes.  See SRBROUT at the end of this assembly.             
**                                                                              
**                                                                              
**    On entry:                                                                 
**      CVR = @ CV                                                              
**      CVVTAMQH = @ RPL                                                        
**                                                                              
**    On exit: Normal environment has been established and                      
**             the proper dispatcher routine has been executed.                 
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = RPL                                                               
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
*                                                                               
         SPACE                                                                  
VTAMDISP XPROC  ,               DISPATCHER ROUTINES ENTRY                       
         LOOP  BEGIN               DISPATCHER LOOP                              
         SPACE                                                                  
         LOOP  BEGIN               REMOVE RPL FROM Q                            
         WITH  (RPL,R2)                                                         
         LM    R2,R3,CVVTAMQH                                                   
         IF    (R2,ZERO),'EXIT VTAMDISP'                                        
         LT    R4,RPLWNEXT                                                      
         IF    (Z),'CLEAR R5'                                                   
         ELSE  'LR R5,R3'                                                       
         CDS   R2,R4,CVVTAMQH                                                   
         IF    (EQ),EXIT                                                        
         END   ,                   END REMOVE RPL                               
         SPACE                                                                  
         LR    R4,R2                                                            
         WITH  (RPL,R4)                                                         
         L     R6,RPLWVTWA                                                      
         USING (VTWA,R6)                                                        
         L     CPR,VTWCPSAV                                                     
         USING (CP,CPR)                                                         
         SPACE                                                                  
         IF    (RPLREQ.RPLRCVCD),BEGIN             IF RECEIVE                   
         IF    (^RPLSRTYP.RPLNFSYN),'LCALL DRCVE'                               
         ELSE  'LCALL DRCVERE'                                                  
         END   ,                                   END RECEIVE                  
         SPACE                                                                  
         ELSEIF (RPLREQ.RPLSNDCD),'LCALL DSENDE'   IF SEND                      
         SPACE                                                                  
         ELSEIF (RPLREQ,EQ,X'01'),'LCALL DBREAK'   IF BREAK TERMINAL            
         SPACE                                                                  
         ELSE  'KAPUT VTAMDISP,"UNIDENTIFIED RPL REQ CODE"'                     
         END   ,                   END DISPATCH LOOP                            
         SPACE                                                                  
         PEND                                                                   
 TITLE 'Dispatcher Routines                      DRCVE - Receive Ended'         
*                                                                               
**  DRCVE -- Asynchronous routine to process normal flow receive                
**           completions, from the application.  If user is                     
**           NOT active, updates the 3270 screen image.                         
**                                                                              
**                                                                              
**    On entry:                                                                 
**      R4 = @ RPL WHICH COMPLETED (CHECK HAS NOT BEEN DONE)                    
**      R6 = @ VTWA                                                             
**                                                                              
**    On exit: VTWERRR contains 0 or @ error message.                           
**             VTWAECB and POSTREAS posted if END OF CHAIN.                     
**             VTWORUC points to head of received message chain.                
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = RPL                                                               
**       R5 = DATA BUFFER                                                       
**       R6 = VTWA                                                              
*                                                                               
*                                                                               
         SPACE                                                                  
DRCVE    PROC  ,                PROCESS RECEIVE SCREEN ENDING                   
*QSNAP '*ENTERED DRCVE'                                                         
         WITH  (RPL,R4)                                                         
         SPACE                                                                  
         L     R5,RPLAREA                                                       
         S     R5,=A(VTBDATA-VTBHEAD)                                           
         WITH  (VTBHEAD,R5)                                                     
         SPACE                                                                  
         CHECK RPL=(R4)                                                         
         MVC   VTBSEQNO,RPLSEQNO                                                
         SPACE                                                                  
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
*QSNAP RPLRH3,8                                                                 
         SPACE                                                                  
         L     R15,DRCVTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
DRCVTABL DC    A(DRCVNORM)         NORMAL                                       
         DC    A(DRCVSNAD)         ERROR SYNAD                                  
         DC    A(DRCVSRCV)         RETRY                                        
         DC    A(DRCVERR)          ERROR INTEGRETY                              
         DC    A(DRCVERR)          ERROR ENVIRONMENT                            
         DC    A(DRCVERR)          ERROR LOGIC                                  
         DC    A(DRCVERR)          ERROR BAD RPL                                
         DC    A(DRCVEXIT)         ERROR ACB NOT OPEN                           
         SPACE 3                                                                
DRCVSNAD LABEL                     SYNAD ERROR                                  
         IF    (R2,EQ,X'03'),BEGIN           IF EXR                             
         IF    (VTWSSENS,Z),BEGIN                                               
         MVC   VTWSSENS,RPLRSENS                                                
         MVC   VTWSRSEQ,RPLSEQNO                                                
         IF    (RPLCNTDF.RPLCNCEL),'SET VTWRCAN'                                
         ELSEIF (RPLCNTDC.RPLLUS),'SET VTWRLUS'                                 
         ELSEIF (RPLCNTDC.RPLBID),'SET VTWRBID'                                 
         ELSE  'SET VTWRUD'                                                     
         END                                                                    
         B     DRCVNORM                                                         
         END   ,                             END EXR                            
         SPACE                                                                  
DRCVERR  LABEL                               ERROR RECEIVED                     
         IF    (VTWRRTNC,Z),BEGIN                                               
         STH   R1,VTWRRTN          SAVE RETURN CODES                            
         STH   R2,VTWRFDBK                                                      
         END   ,                             END ERROR RECEIVED                 
         SPACE                                                                  
DRCVNORM LABEL                     NORMAL COMPLETION                            
         L     R1,RPLRLEN          SAVE DATA COUNT                              
         L     R2,RPLBUFL                                                       
         IF    (R1,GT,R2),'CLEAR VTWFLPR; STH R2,VTBCOUNT'                      
         ELSE  BEGIN               IF LAST PART                                 
         SET   VTWFLPR                                                          
         STH   R1,VTBCOUNT                                                      
         IF    (RPLCLE+RPLCOE),'SET VTBFLIC'                                    
         END   ,                   END LAST PART                                
         SPACE                                                                  
         CLEAR VTWFRCDI                                                         
         IF    (RPLBBI),'SET VTBFBBI'                                           
         IF    (RPLEBI),'SET VTBFEBI,VTWFREBI'                                  
         IF    (RPLCDI),'SET VTBFCDI,VTWFRCDI'                                  
         IF    (RPLALT),'SET VTBFALT'                                           
         MVC   VTWSRSEQ,RPLSEQNO                                                
         IF    (^RPLNDR1),'SET VTWFSR1'                                         
         IF    (RPLDR2),'SET VTWFSR2'                                           
         SET   VTWRUD                                                           
         IF    (^RPLERI),'SET VTWFSDR'                                          
*                                            FIND COMMAND TYPE                  
         SPACE 2                                                                
         IF    (RPLCNTDF.RPLDATA),BEGIN      IF USER DATA                       
*QSNAP '*USER DATA'                                                             
*QSNAP VTBDATA                                                                  
DRCVEUD  IF    (VSCONT,OR,VSCONT1,OR,VSCONT2),BEGIN  IF CONTENTION              
         IF    (^RPLBBI),DRCVSRCV  IF NOT BB IGNORE                             
         SET   VSOUTB                                                           
         SPACE                                                                  
         IF    (VTWFUACT),BEGIN    IF USER IS ACTIVE                            
         L     R0,VTWLNSAV         BREAK THE TERMINAL READ                      
         VCALL TBREAK                                                           
         END   ,                   END USER IS ACTIVE                           
         END   ,                                    END CONTENTION              
         SPACE                                                                  
         ELSEIF (RPLBBI),BEGIN     IF NOT CONTENTION AND BBI                    
         SET VTWRUD                                                             
         IF    (^VTWFSR1*^VTWFSR2),'SET VTWFSR1'                                
         MVC   VTWSSENS,=X'080B0000' BRACKET RACE ERROR                         
         CLEAR VTBCOUNT                                                         
         END   ,                  END NOT CONTENTION AND BBI                    
         SPACE                                                                  
DRCVEUD1 LABEL                                                                  
         CLEAR VTBNEXT                                                          
         CLEAR RPLAREA             UNCHAIN FROM RPL                             
         L     R1,VTWORUC          ADD TO BUFFER CHAIN                          
         IF    ('LTR R2,R1',ZERO),'ST R5,VTWORUC'                               
         ELSE  BEGIN                                                            
         WITH  (VTBHEAD,R1)                                                     
         WHILE (R2,NZ),'LR R1,R2; L R2,VTBNEXT'                                 
         ST    R5,VTBNEXT                                                       
         END   ,                                                                
         SPACE                                                                  
         IF    (^VTBFLIC),DRCVSRCV IF NOT LAST IN CHAIN                         
         SPACE                                                                  
         IF    (VTWFUACT),BEGIN    IF USER ACTIVE                               
         SET   POSTRCVC                                                         
         POST  VTWAECB             POST AND EXIT                                
         B     DRCVEXIT                                                         
         END   ,                   END USER ACTIVE                              
         SPACE 3                                                                
*                                  USER NOT ACTIVE                              
         ELSE  BEGIN                                                            
         SPACE                                                                  
         CLEAR R1                                                               
         ACALL PRCESSCR            PROCESS THE SCREEN                           
         SPACE                                                                  
         IF    ((NZ),OR,(R1,NZ),OR,(VTWRCMD,NZ),OR,(VTWFRNXT)),BEGIN            
         SET   POSTRCVC            IF ERROR OR MORE PROCESSING NEEDED           
         B     DRCVEXIT            EXIT                                         
         END                                                                    
         SPACE                                                                  
         IF    (VTWFRCDI),'B DRCVEXIT' IF CDI, EXIT                             
         L     R5,VTWORUC          ELSE FREE THE BUFFERS                        
         WITH  (VTBHEAD,R5)                                                     
         LR    R2,R5                                                            
         WHILE (R2,NZ),BEGIN       WHILE IN BUFFERS                             
         LR    R5,R2                                                            
         L     R2,VTBNEXT                                                       
         LR    R1,R5                                                            
         FAIL  (VTBID,NE,C'VTBH'),DRCVE,'BAD OUTBOUND BUFFER'                   
         VCALL FREECORE                                                         
         END   ,                   END IN BUFFERS                               
         CLEAR VTWORUC                                                          
         SPACE                                                                  
         B     DRCVSRCV            START A NEW RECEIVE                          
         END   ,                   END USER NOT ACTIVE                          
         END   ,                             END USER DATA                      
         SPACE 2                                                                
         ELSEIF (RPLCNTDF.RPLCNCEL),BEGIN    IF CANCEL                          
*QSNAP '*CANCEL'                                                                
         SET   VTWRCAN                                                          
         L     R1,VTWORUC                    ADD TO BUFFER CHAIN                
         IF    ('LTR R2,R1',ZERO),'ST R5,VTWORUC'                               
         ELSE  BEGIN                                                            
         WITH  (VTBHEAD,R1)                                                     
         WHILE (R2,NZ),'LR R1,R2; L R2,VTBNEXT'                                 
         ST    R5,VTBNEXT                                                       
         END   ,                                                                
         CLEAR VTBNEXT                                                          
         CLEAR RPLAREA             UNCHAIN FROM RPL                             
         SPACE                                                                  
         SET   VTBFLIC             CANCEL ACTS AS LAST IN CHAIN                 
         SPACE                                                                  
         L     R5,VTWORUC          SET DATA COUNTS TO ZERO                      
         WHILE (R5,NZ),'CLEAR VTBCOUNT; L R5,VTBNEXT'                           
         SPACE                                                                  
         IF    (VTWFUACT),BEGIN    IF USER ACTIVE                               
         SET   POSTRCVC                                                         
         POST  VTWAECB             POST AND EXIT                                
         B     DRCVEXIT                                                         
         END   ,                   END USER ACTIVE                              
         SPACE 3                                                                
         ELSE  BEGIN               ELSE USER NOT ACTIVE                         
         IF    (VTWFRCDI),'B DRCVEXIT' IF CDI, EXIT                             
         B     DRCVSRCV             ELSE START A NEW RECEIVE                    
         END   ,                   END USER NOT ACTIVE                          
         END   ,                             END CANCEL                         
         SPACE 2                                                                
         ELSEIF (RPLCNTDC.RPLLUS),BEGIN      IF LUS                             
*QSNAP '*LUS'                                                                   
         SET   VTWRLUS                                                          
         MVC   VTWRSENS,RPLRSENS             SAVE THE SENSE                     
         CLEAR VTBCOUNT                                                         
         B     DRCVEUD1            HANDLE AS USER DATA                          
         END   ,                             END LUS                            
         SPACE 2                                                                
         ELSEIF (RPLCNTDC.RPLBID),BEGIN      IF BID                             
*QSNAP '*BID'                                                                   
         SET VTWRBID                                                            
         IF    (^VTWFSR1*^VTWFSR2),'SET VTWFSR1'                                
         IF    (VSCONT,OR,VSCONT1,OR,VSCONT2),BEGIN   IF CONTENTION             
         CLEAR VTWSSENS           SET POSITIVE RESPONSE                         
         SET   VSCONT2                                                          
         IF    (VTWFUACT),BEGIN    IF USER IS ACTIVE                            
         L     R0,VTWLNSAV         BREAK THE TERMINAL READ                      
         VCALL TBREAK                                                           
         END   ,                   END USER IS ACTIVE                           
         END   ,                                     END CONTENTION             
         SPACE                                                                  
         ELSE  BEGIN               ELSE ERROR                                   
         MVC   VTWSSENS,=X'08130000' PERMISSION DENIED                          
         END   ,                   END ERROR                                    
         SPACE                                                                  
         CLEAR VTBCOUNT                                                         
         B     DRCVEUD1            HANDLE AS USER DATA                          
         END   ,                             END BID                            
         SPACE 2                                                                
         ELSE  BEGIN                         IF ANYTHING ELSE                   
         CLEAR VTBCOUNT                                                         
         B     DRCVEUD             HANDLE AS USER DATA                          
         END   ,                             END ENYTHING ELSE                  
         SPACE 2                                                                
DRCVSRCV LABEL                     START ANOTHER RECEIVE                        
*QSNAP '*START RECEIVE DATA FROM DISPATCHER ROUTINE'                            
         ACALL SRECEIVE                                                         
         SPACE                                                                  
DRCVEXIT LABEL                                                                  
         PEND                                                                   
 TITLE 'Dispatcher Routines                        DSENDE - Send Ended'         
*                                                                               
**  DSENDE -- Asynchronous routine to process normal flow send                  
**            completions, to the application.                                  
**                                                                              
**                                                                              
**    On entry:                                                                 
**      R4 = @ RPL WHICH COMPLETED (CHECK HAS NOT BEEN DONE)                    
**      R6 = @ VTWA                                                             
**                                                                              
**    On exit: VTWAECB and POSTREAS posted                                      
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = RPL                                                               
**       R5 = DATA BUFFER                                                       
**       R6 = VTWA                                                              
*                                                                               
*                                                                               
         SPACE                                                                  
DSENDE   PROC  ,                PROCESS SEND SCREEN ENDING                      
*QSNAP '*ENTERED DSENDE'                                                        
         WITH  (RPL,R4)                                                         
         SPACE                                                                  
         L     R5,RPLAREA                                                       
         S     R5,=A(VTBDATA-VTBHEAD)                                           
         WITH  (VTBHEAD,R5)                                                     
         SPACE                                                                  
         CHECK RPL=(R4)                                                         
         SPACE                                                                  
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,DSENTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
DSENTABL DC    A(DSENNORM)         NORMAL                                       
         DC    A(DSENERR)          ERROR SYNAD                                  
         DC    A(DSENRTRY)         RETRY                                        
         DC    A(DSEINTEG)         ERROR INTEGRETY                              
         DC    A(DSENEXIT)         ERROR ENVIRONMENT                            
         DC    A(DSELOGIC)         ERROR LOGIC                                  
         DC    A(DSENERR)          ERROR BAD RPL                                
         DC    A(DSENEXIT)         ERROR ACB NOT OPEN                           
         SPACE 3                                                                
DSEINTEG LABEL                     INTEGRITY ERROR                              
         IF    (R2,EQ,X'0B'),DSENEXIT                                           
         IF    ((R2,EQ,X'0C'),OR,(R2,EQ,X'0D')),DSENNORM                        
         B     DSENERR                                                          
         SPACE                                                                  
DSELOGIC LABEL                     LOGIC ERROR                                  
         IF    ((R2,EQ,X'12'),OR,(R2,EQ,X'13')),DSENEXIT                        
DSENERR  LABEL                                         ERROR RETURNED           
         IF    (VTWSRTNC,Z),BEGIN                                               
         STH   R1,VTWSRTN          SAVE RETURN CODES                            
         STH   R2,VTWSFDBK                                                      
         END                                                                    
         SPACE 2                                                                
DSENNORM LABEL                     NORMAL COMPLETION                            
         CLEAR VTWFSBBI            WE ARE IN BRACKET                            
         SPACE                                                                  
         SET   POSTSENC                                                         
         POST  VTWAECB             POST AND EXIT                                
         B     DSENEXIT                                                         
         SPACE 3                                                                
DSENRTRY LABEL                     RETRY THE SEND                               
*QSNAP '*RESTART THE SEND DATA'                                                 
         AIF   ('&BRANCH' EQ 'NO').MODE8                                        
         MODESET MODE=SUP              ********* ENTER SUPERVISOR STATE         
.MODE8   EXECRPL RPL=(R4)                                                       
         LR    R2,R15                                                           
         MODESET MODE=PROB             ********* LEAVE SUPERVISOR STATE         
         SPACE                                                                  
*QSNAP (R2)                                                                     
         IF    (R2,Z),'B DSENEXIT'           RETURN                             
         SPACE                                                                  
         KAPUT  DSENDE,'RESTART SEND REFUSED'                                   
         SPACE                                                                  
DSENEXIT LABEL                                                                  
         PEND                                                                   
 TITLE 'Dispatcher Routines DRCVERE - Receive Expedited and RESP Ended'         
*                                                                               
**  DRCVERE -- Asynchronous routine to process Expedited Flow and               
**             Response receive completion.                                     
**                                                                              
**                                                                              
**    On entry:                                                                 
**      R4 = @ RPL WHICH COMPLETED (CHECK HAS NOT BEEN DONE)                    
**      R6 = @ VTWA                                                             
**                                                                              
**    On exit: Appropriate flags are set in VTWA, and the                       
**             receive is re-started.                                           
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = RPL                                                               
**       R5 =                                                                   
**       R6 = VTWA                                                              
*                                                                               
*                                                                               
         SPACE                                                                  
DRCVERE  PROC  ,                PROCESS RECEIVE EXP FLOW AND RESP               
*QSNAP '*ENTERED DRCVERE'                                                       
         WITH  (RPL,R4)                                                         
         SPACE                                                                  
         CHECK RPL=(R4)                                                         
         SPACE                                                                  
         CLEAR R2                                                               
         IF    (R15,GT,=H'4'),'LH R1,=H"28"'                                    
         ELSE  BEGIN                                                            
         IF    (R0,EQ,=H'24'),'LR R1,R0'                                        
         ELSE  BEGIN                                                            
         LC    R1,RPLRTNCD         R1 := RTNCD                                  
         IC    R2,RPLFDB2          R2 := FDBK2                                  
         END                                                                    
         END                                                                    
         CEIL  R1,28                                                            
*QSNAP (R1,R2)                                                                  
         SPACE                                                                  
         L     R15,DRERTABL(R1)                                                 
         BR    R15                 BRANCH TO PROCESS                            
DRERTABL DC    A(DRERNORM)         NORMAL                                       
         DC    A(DRERSNAD)         ERROR SYNAD                                  
         DC    A(DREREXIT)         RETRY                                        
         DC    A(DREREXIT)         ERROR INTEGRETY                              
         DC    A(DREREXIT)         ERROR ENVIRONMENT                            
         DC    A(DREREXIT)         ERROR LOGIC                                  
         DC    A(DREREXIT)         ERROR BAD RPL                                
         DC    A(DREREXIT)         ERROR ACB NOT OPEN                           
         SPACE 3                                                                
DRERSNAD LABEL                     SYNAD ERROR                                  
         IF    (R2,EQ,X'04'),NEGRESP                                            
         B     DREREXIT                                                         
         SPACE                                                                  
DRERNORM LABEL                     NORMAL COMPLETION                            
         SPACE                                                                  
         IF    (RPLSRTYP.RPLRRESP),BEGIN     IF RESPONSE                        
         IF    (RPLERI),BEGIN      IF NEG RESPONSE                              
NEGRESP  MVC   VTWRSENS,RPLRSENS                                                
         B     DRERRCV             BR TO RESTART RECEIVE                        
         END   ,                   END NEG RESPONSE                             
         END   ,                             END RESPONSE                       
         SPACE                                                                  
         IF    (RPLSRTYP.RPLDFASY),BEGIN     IF EXPEDITED FLOW                  
         IF    (RPLCNTDC.RPLSIGNL),BEGIN     IF SIGNAL                          
*QSNAP '*SIGNAL'                                                                
         IF    (RPLSIGDA,EQ,X'0001'),BEGIN   IF ATTN                            
         SET   VTWFHATT                                                         
         IF    (VSINB),BEGIN                 IF STATE IS INBOUND                
         L     R0,VTWLNSAV         SEND BREAK TO BREAK TERMINAL READ            
         VCALL TBREAK                                                           
         END   ,                             END STATE INBOUND                  
         END   ,                             END ATTN                           
         END   ,                             END SIGNAL                         
         SPACE                                                                  
         ELSEIF (RPLCNTSC.RPLSHUTD),BEGIN    IF SHUTDOWN                        
*QSNAP '*SHUTD'                                                                 
         SET   VTWFSHUT,POSTSHUT                                                
         POST  VTWAECB                       POST                               
         SPACE                                                                  
         END   ,                             END SHUTDOWN                       
         END   ,                             END EXPEDITIE FLOW                 
         SPACE                                                                  
*                                            IGNORE ANYTHING ELSE               
         SPACE                                                                  
DRERRCV  LABEL                               RESTART THE RECEIVE                
*QSNAP '*START RECEIVE EXPEDITED'                                               
         AIF   ('&BRANCH' EQ 'NO').MODE7                                        
         MODESET MODE=SUP              ********* ENTER SUPERVISOR STATE         
.MODE7   L     R2,=A(SRBROUT)                                                   
         RECEIVE RPL=(R4),                                             *        
               OPTCD=(ASY,CA,ANY,NIBTK,Q),AREALEN=0,                   *        
               RTYPE=(NDFSYN,DFASY,RESP),BRANCH=&BRANCH,EXIT=(R2)               
         LR    R2,R15                                                           
         MODESET MODE=PROB             ********* LEAVE SUPERVISOR STATE         
         SPACE                                                                  
*QSNAP (R2)                                                                     
         IF    (R2,Z),'EXIT DRCVERE'         RETURN                             
         SPACE                                                                  
         KAPUT  DRCVERE,'RECEIVE REFUSED'                                       
         SPACE                                                                  
DREREXIT LABEL                                                                  
         PEND                                                                   
 TITLE 'Dispatcher Routines              DBREAK - Issue Terminal BREAK'         
*                                                                               
**  DBREAK -- Asynchronous routine to issue BREAK to terminal                   
**            Used when an UNBIND is received on the VTAM session.              
**            No check is done to insure that terminal is actually              
**            in a read state.                                                  
**                                                                              
**                                                                              
**    On entry:                                                                 
**      R4 = @ RPL                                                              
**      R6 = @ VTWA                                                             
**                                                                              
**    ON EXIT: BREAK HAS BEEN SENT TO TERMINAL.                                 
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = @RPL                                                              
**       R5 = @ACB                                                              
**       R6 = VTWA                                                              
*                                                                               
*                                                                               
         SPACE                                                                  
DBREAK   PROC  ,                ISSUE TERMINAL BREAK                            
*QSNAP '*ENTERED DBREAK'                                                        
         WITH  (RPL,R4)                                                         
         L     R5,RPLDACB          IS ACB STILL OPEN                            
         WITH  (ACB,R5)                                                         
         IF    (ACBOFLGS.ACBOPEN),BEGIN IF ACB IS OPEN                          
         IF    (VTWFUACT),BEGIN    IF USER IS ACTIVE                            
         L     R0,VTWLNSAV         BREAK THE TERMINAL READ                      
         VCALL TBREAK                                                           
         END   ,                   END USER IS ACTIVE                           
         END   ,                        END ACB IS OPEN                         
         SPACE                                                                  
         PEND                                                                   
         DROP                                                                   
 TITLE 'ACB Exit Routines                       EXLST - Address vector'         
*                                  ACB EXIT LIST - ADDRESS VECTOR               
         SPACE 6                                                                
ALIST    EXLST AM=VTAM,TPEND=TPEND,LOSTERM=LOSTERM,SCIP=SCIP,          *        
               NSEXIT=NSEXIT                                                    
 TITLE 'ACB Exit Routines                  TPEND - Teleprocesing Ended'         
*                                                                               
**  TPEND -- IRB Asynchronous routine which receives control when               
**           VTAM termintes.                                                    
**                                                                              
**    On entry:                                                                 
**      R1  = @ parameter list                                                  
**      R14 = address to return to                                              
**      R15 = address of entry                                                  
**      There is NO R13 save area                                               
**                                                                              
**    On exit: MAINLINE is posted.                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = RETURN ADDRESS                                                    
**       R5 = @ ACB                                                             
**       R6 = @ VTWA                                                            
*                                                                               
         SPACE                                                                  
TPEND    LABEL                     VTAM IS ENDING                               
         LR    BR,R15                                                           
         USING TPEND,BR                                                         
*QSNAP '*ENTERED TPEND'                                                         
         LR    R4,R14                                                           
         L     R5,@R1                                                           
         USING ACB,R5                                                           
         L     R6,ACBWVTWA                                                      
         USING VTWA,R6                                                          
         L     CPR,VTWCPSAV                                                     
         USING CP,CPR                                                           
         L     CVR,=V(CV)                                                       
         USING CV,CVR                                                           
         SPACE                                                                  
         SET   VSVEND,VTWFTEND,POSTLOST  SET THE VTAM STATE                     
         POST  VTWAECB             POST MAINLINE                                
         SPACE                                                                  
         LR    R14,R4              RETURN                                       
         BR    R14                                                              
         SPACE                                                                  
         DROP                                                                   
 TITLE 'ACB exit Routines                      LOSTERM - Lost Terminal'         
*                                                                               
**  LOSTERM -- IRB Asynchronous routine which receives control when             
**             the application program is terminated.                           
**                                                                              
**    On entry:                                                                 
**      R1  = @ parameter list                                                  
**      R14 = address to return to                                              
**      R15 = address of entry                                                  
**      There is NO R13 save area                                               
**                                                                              
**    On exit: MAINLINE is posted.                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 = RETURN ADDRESS                                                    
**       R5 = @ ACB                                                             
**       R6 = @ VTWA                                                            
*                                                                               
         SPACE                                                                  
LOSTERM  LABEL                     LOST TERMINAL                                
         LR    BR,R15                                                           
         USING LOSTERM,BR                                                       
*QSNAP '*ENTERED LOSTERM'                                                       
         LR    R4,R14                                                           
         L     R5,@R1                                                           
         USING ACB,R5                                                           
         L     R6,ACBWVTWA                                                      
         USING VTWA,R6                                                          
         L     CPR,VTWCPSAV                                                     
         USING CP,CPR                                                           
         L     CVR,=V(CV)                                                       
         USING CV,CVR                                                           
         SPACE                                                                  
         SET   VSLOSTER,VTWFLOST,POSTLOST   SET THE STATE                       
         POST  VTWAECB             POST MAINLINE                                
         LR    R14,R4              RETURN                                       
         BR    R14                                                              
         SPACE                                                                  
         DROP                                                                   
 TITLE 'ACB Exit Routines    SCIP - Session Control Inbound Processing'         
*                                                                               
**  SCIP -- IRB Asynchronous routine which receives control when                
**          certian session control information is received                     
**                                                                              
**    On entry:                                                                 
**      R1  = @ parameter list                                                  
**      R14 = address to return to                                              
**      r15 = address of entry                                                  
**      There is NO R13 save area                                               
**                                                                              
**    On exit: MAINLINE is posted.                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 =                                                                   
**       R3 =                                                                   
**       R4 =                                                                   
**       R5 = @ ACB                                                             
**       R6 = @ VTWA                                                            
**       R7 = BR                                                                
**       R8 = RETURN ADDRESS                                                    
**       R9 = @ RU                                                              
*                                                                               
         SPACE                                                                  
SCIP     LABEL                     SESSION CONTROL RECEIVED                     
         LR    BR,R15                                                           
         USING SCIP,BR                                                          
*QSNAP '*ENTERED SCIP'                                                          
         LR    R8,R14                                                           
         L     R5,@R1                                                           
         USING ACB,R5                                                           
         L     R6,ACBWVTWA                                                      
         USING VTWA,R6                                                          
         L     CPR,VTWCPSAV                                                     
         USING CP,CPR                                                           
         L     CVR,=V(CV)                                                       
         USING CV,CVR                                                           
         L     R3,@R1+16                                                        
         USING RPL,R3                                                           
         SPACE                                                                  
         L     R9,RPLAREA          R9 := @ RU                                   
         SPACE                                                                  
         IF    (RPLCNTDC.RPLTBIND),BEGIN     IF BIND                            
*QSNAP '*BIND RECEIVED'                                                         
         IF    (VTWFBUSQ),'CLEAR VTWFBUSQ'                                      
         ELSE  'SET VTWFBUSQ'                                                   
         L     R9,@R1+12           R9 := @ BIND IMAGE                           
         WITH  (ISTDBIND,R9)                                                    
         IF    ('LT R1,VTWBINDP',Z),BEGIN                                       
         GETMAIN R,LV=36           GET AREA FOR BIND IMAGE                      
         SPACE                                                                  
         IF    (R15,Z),'ST R1,VTWBINDP'                                         
         ELSE  'CLEAR R1'                                                       
         END                                                                    
         SPACE                                                                  
         IF    (R1,NZ),BEGIN                                                    
         MVC   @R1(36),ISTDBIND    COPY THE BIND IMAGE                          
         END                                                                    
         SPACE                                                                  
         SET   VSWFSDT,POSTBIND    SET THE VTAM STATE                           
         POST  VTWAECB             POST MAINLINE                                
         END   ,                             END BIND                           
         SPACE                                                                  
         ELSEIF (RPLCNTDC.RPLTUNBD),BEGIN    IF UNBIND                          
*QSNAP '*UNBIND RECEIVED'                                                       
         IF     (@R9+1,EQ,X'01'),'SET VSUNBIND' IF NORMAL LOGOFF                
         ELSEIF (@R9+1,EQ,X'02'),BEGIN          ELSE CLSDST PASS                
*QSNAP '*PASS'                                                                  
         IF    (^VTWFBUSQ),BEGIN             IF MISSING UNBIND                  
         B     SCIPRETN                      IGNORE                             
         END   ,                             END MISSING UNBIND                 
         SPACE                                                                  
         SET   VSWFBIND                                                         
         CLEAR VTWFBUSQ                                                         
         END   ,                                END CLSDST PASS                 
         SPACE                                                                  
         ELSE   'SET VSLOSTER,VTWFLOST'                                         
         SPACE                                                                  
         SET   POSTUBIR                                                         
         POST  VTWAECB             POST MAINLINE                                
         IF    (VTWFUACT),BEGIN    IF USER IS ACTIVE                            
*                                  BREAK THE TERMINAL READ                      
         L     R1,VTWAACBP                                                      
         WITH  (ACB,R1),'L R1,ACBBTRPL'   SCHEDULE DISPATCHER ROUTINE           
         WITH  (RPL,R1)                   USING THE PHONY RPL                   
         MVI   RPLREQ,X'01'               FUNNY CODE                            
         SPACE                                                                  
         DROP  R5                                                               
         LOOP  BEGIN               QUEUE THE RPL                                
         CLEAR RPLWNEXT                                                         
         LM    R2,R3,CVVTAMQH                                                   
         LTR   R4,R2                                                            
         IF    (Z),'LR R4,R1; LR R5,R1'                                         
         ELSE  BEGIN                                                            
         WITH  (RPL,R3),'ST R1,RPLWNEXT'                                        
         LR    R5,R1                                                            
         END                                                                    
         CDS   R2,R4,CVVTAMQH                                                   
         IF    (EQ),EXIT                                                        
         END   ,                   END QUEUE THE RPL                            
         SPACE                                                                  
         POST  CVECB                                                            
         END   ,                   END USER IS ACTIVE                           
         SPACE                                                                  
         END   ,                             END UNBIND                         
         SPACE                                                                  
         ELSEIF (RPLCNTSC.RPLSDT),BEGIN      IF START DATA TRAFFIC              
*QSNAP '*START DATA TRAFFIC RECEIVED'                                           
         IF    (^VSWFSDT),SCIPRETN           IF NOT WAITING, IGNORE             
         SET   POSTSDT                                                          
         IF    (VTWFKLOK),'SET VSCONT1'  SET CONTENTION                         
         ELSE  'SET VSCONT'                                                     
         POST  VTWAECB                                                          
         END   ,                             END START DATA TRAFFIC             
         SPACE                                                                  
         ELSEIF (RPLCNTSC.RPLCLEAR),BEGIN    IF CLEAR                           
*QSNAP '*CLEAR RECEIVED'                                                        
         B     SCIPRETN                      IGNORE                             
         END                                                                    
         SPACE                                                                  
         ELSEIF (RPLCNTSC.RPLSTSN),BEGIN     IF STSN                            
*QSNAP '*STSN RECEIVED'                                                         
         B     SCIPRETN                      IGNORE                             
         END                                                                    
         SPACE                                                                  
SCIPRETN LR    R14,R8              RETURN                                       
         BR    R14                                                              
         SPACE                                                                  
         DROP                                                                   
 TITLE 'ACB Exit Routines        NSEXIT - Network Services RU recdived'         
*                                                                               
**  NSEXIT -- IRB Asynchronous routine which receives control when              
**            certian Network Service Request Units are received.               
**                                                                              
**    On entry:                                                                 
**      R1  = @ parameter list                                                  
**      R14 = address to return to                                              
**      r15 = address of entry                                                  
**      There is NO R13 save area                                               
**                                                                              
**    On exit: MAINLINE is posted.                                              
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 = @ RU                                                              
**       R3 = @ RPL                                                             
**       R4 = RETURN ADDRESS                                                    
**       R5 = @ ACB                                                             
**       R6 = @ VTWA                                                            
*                                                                               
         SPACE                                                                  
NSEXIT   LABEL                     NETWORK SERVICE RU RECEIVED                  
         LR    BR,R15                                                           
         USING NSEXIT,BR                                                        
*QSNAP '*ENTERED NSEXIT'                                                        
         LR    R4,R14                                                           
         L     R5,@R1                                                           
         USING ACB,R5                                                           
         L     R6,ACBWVTWA                                                      
         USING VTWA,R6                                                          
         L     CPR,VTWCPSAV                                                     
         USING CP,CPR                                                           
         L     CVR,=V(CV)                                                       
         USING CV,CVR                                                           
         L     R3,@R1+16                                                        
         USING RPL,R3                                                           
         SPACE                                                                  
         L     R2,RPLAREA          R2 := @ RU                                   
         SPACE                                                                  
         IF    (@R2,EQ,X'810629'),BEGIN      IF CLEANUP                         
*QSNAP '*CLEANUP RECEIVED'                                                      
         SET   VSCLEAN,VTWFCLNU,POSTLOST                                        
         END                                                                    
         SPACE                                                                  
         ELSEIF (@R2,EQ,X'81062003'),BEGIN   IF NOTIFY                          
*QSNAP '*NOTIFY RECEIVED'                                                       
         SET   VSCLEAN,VTWFCLNU,POSTLOST                                        
         END                                                                    
         SPACE                                                                  
         ELSEIF (@R2,EQ,X'010604'),BEGIN     IF NSPE (PROCEDURE ERROR)          
*QSNAP '*NSPE RECEIVED'                                                         
         SET   VSCLEAN,VTWFCLNU,POSTLOST                                        
         END                                                                    
         SPACE                                                                  
         ELSE  BEGIN                         ELSE NOT UNDERSTOOD                
         CLEAR R0                                                               
         LA    R15,4               NOT UNDERSTOOD                               
         LR    R14,R4              RETURN                                       
         BR    R14                                                              
         END                                                                    
         SPACE                                                                  
         POST  VTWAECB             POST MAINLINE                                
         CLEAR R0,R15              UNDERSTOOD                                   
         LR    R14,R4              RETURN                                       
         BR    R14                                                              
         SPACE                                                                  
         DROP                                                                   
 TITLE 'SRB Exit Routine                 SRBROUT - RPL operation ended'         
*                                                                               
**  SRBROUT -- SRB Asynchronous routine which is dispatched by VTAM             
**              when an asynchronous SEND or RECEIVE RPL operation              
**              completes.                                                      
**                                                                              
**    On entry:                                                                 
**      R1  = @ RPL                                                             
**      R14 = address to return to                                              
**      R15 = address of entry                                                  
**      There is NO R13 save area                                               
**                                                                              
**    ON EXIT: VTAMDISP is scheduled to run as a dispatcher routine             
**             using the RPL as a Q element.                                    
*                                                                               
         SPACE                                                                  
*                                                                               
**    REGISTER USE FOR THIS ROUTINE:                                            
**       R2 = OLD CVVTAMQH                                                      
**       R3 = OLD CVVTAMQT                                                      
**       R4 = NEW CVVTAMQH                                                      
**       R5 = NEW CVVTAMQT                                                      
**       R6 = @ RPL                                                             
**       R8 = R14 SAVE                                                          
*                                                                               
         SPACE                                                                  
SRBROUT  LABEL                     RPL HAS COMPLETED                            
         LR    BR,R15                                                           
         USING SRBROUT,BR                                                       
         LR    R8,R14                                                           
         L     CVR,=V(CV)                                                       
         USING CV,CVR                                                           
         LR    R6,R1                                                            
         USING RPL,R6                                                           
         SPACE                                                                  
         LOOP  BEGIN               QUEUE THE RPL                                
         CLEAR RPLWNEXT                                                         
         LM    R2,R3,CVVTAMQH                                                   
         LTR   R4,R2                                                            
         IF    (Z),'LR R4,R6; LR R5,R6'                                         
         ELSE  BEGIN                                                            
         WITH  (RPL,R3),'ST R6,RPLWNEXT'                                        
         LR    R5,R6                                                            
         END                                                                    
         CDS   R2,R4,CVVTAMQH                                                   
         IF    (EQ),EXIT                                                        
         END   ,                   END QUEUE THE RPL                            
         SPACE                                                                  
         AIF   ('&BRANCH' EQ 'NO').MODE9                                        
LOCK     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               *        
               RELATED=(LOCAL,AUTHPATH(UNLOCK))                                 
         POST  CVECB,LINKAGE=BRANCH  Post WYLBUR                                
UNLOCK   SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          *        
               RELATED=(LOCAL,AUTHPATH(LOCK))                                   
         AGO   .MODE10                                                          
.MODE9   POST  CVECB                 Branch enter post Wylbur                   
.MODE10  LR    R14,R8                                                           
         BR    R14                 RETURN                                       
         DROP                                                                   
         SPACE                                                                  
         VLTORG                                                                 
         END .                                                                  
