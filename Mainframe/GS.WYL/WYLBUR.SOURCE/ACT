ACT      TITLE 'WYLBUR''s Active File Routines'                                 
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
WYLACT   CSECT                                                                  
ACT      IDENT 2025                11:49:19 01/25/02  (SLP)                     
*                                                                               
*   Modification history                                                        
*                                                                               
*     9-Mar-1995   M. Durket                                                    
*                                                                               
*     Make sure that every new active file contains not only                    
*     an AINFO record, but also a VIEW record. This should                      
*     prevent the WYLBUR CPU loops and multiple active file                     
*     logic errors resulting from attempts to ACTXPUT the                       
*     VIEW record when the active file space is full.                           
*                                                                               
*     See the comments in the ACTOPEN routine for how to                        
*     reproduce the bug.                                                        
*                                                                               
*     Additionally, make sure the CLRMULT updates the CPATCLR                   
*     value. Also, make sure that CLRMULT doesn't do an ACTOPEN                 
*     without first checking to see if an ACTPURGE should be done.              
*     In the case above, WYLBUR would still continue to loop on                 
*     the save of the active files in the case of disconnect,                   
*     because SIGNOFF issues the SAVE command with a CLEAR option.              
*     This causes CLRMULT to be called, and CLRMULT automatically               
*     picks the first non-cleared active file (which won't be the               
*     case here) or opens a new empty one (which is the case and                
*     causes ACTOPEN to bomb on the ACTXPUT of the AINFO record).               
*                                                                               
*     Sheesh.                                                                   
*                                                                               
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
         SPACE 2                                                                
         SYSDEFN ,                 Define installation params                   
         SPACE 2                                                                
         LCLA  &PATMAX             Max. pattern length                          
&PATMAX  SETA  200                 (An arbitrary number)                        
         SPACE 2                                                                
         PUSH  DSECTS                                                           
         COPY  CONTROL             Copy CV/CP                                   
*                                                                               
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         EJECT                                                                  
DISKWA   RECORD BEGIN                                                           
         DIOWAHDR ,                Define just common part                      
DECB     EQU   *-*                 Dummy decb ptr                               
         END                                                                    
         POP   DSECTS                                                           
         TITLE 'ACTIVE File DSECTS'                                             
***                                                                             
***  AINFO -- Active File Information                                           
***                                                                             
AINFO    RECORD BEGIN                                                           
AINA     AINFO                                                                  
         END                                                                    
         EJECT                                                                  
*                                                                               
*    LNINFO -- Line Prefix Information                                          
*                                                                               
*      This information is saved in extended edit files in this                 
*      format.  Be careful not to change this format without                    
*      making sure that extended edit file don't change.                        
*                                                                               
*  ** CAUTION **                                                                
*  NOTE:                                                                        
*  AS OF OCTOBER 1990,  THIS INFO IS NO LONGER USED OR KEPT.                    
*  THIS INFO (IE. TIME OF CHANGE, USER WHO DID CHANGE) IS                       
*  NO LONGER SAVED AS A PREFIX WITH EACH LINE OF THE ACTIVE                     
*  FILE.   BECAUSE WE CANNOT CHANGE EXTENDED EDIT FILES,                        
*  THIS FIELD IS NOW ** SET TO ZEROS ** IN ALL FUTURE                           
*  EXTENDED EDIT FILES.                                                         
*                                                                               
*  THE IMPLEMENTATION OF THE ABOVE IS MINIMAL, WE DO NOT                        
*  SAVE THE PREFIX WITH EACH LINE OF THE ACTIVE FILE.  BUT                      
*  ALL THE CODE THAT DEALS WITH EXTENDED EDIT FILES REMAINS.                    
*  WE CAN NOT AX IT UNTIL WE GET RID OF EXTENDED EDIT FORMAT                    
*  WHICH REQUIRES ANOTHER METHOD FOR SAVING MULTIPLE ACTIVE                     
*  FILES AND REQUIRES A METHOD OF DEALING WITH EXISTING                         
*  EDIT FORMAT FILES.  AT SOME POINT (WHEN EXTENDED EDIT                        
*  FILES ARE AXED), IT WOULD BE GOOD TO GET RID OF ALL THIS                     
*  IRRELEVANT PREFIX CODE.  AND SUCH IS THAT.                                   
*  UND DAT ISH DAS.                                                             
*                                                                               
*                                                                               
LNINFO   RECORD BEGIN                                                           
*LNFLAG  FLAG                                                                   
*        FLAG  (LNFMARK,X'40')     - Line has been changed                      
*LNID    DS    CL3                 User id                                      
*LNCLCK  DS    F                   High order word of CLOCK                     
         DS    8X                  ALWAYS ZEROS, NOT USED                       
         END                                                                    
         TITLE 'SHOW AINFO Command'                                             
*box                                                                            
*                                                                               
*  SHOWAINF -- SHOW AINFO Command.                                              
*                                                                               
SHOWAINF XPROC ,                                                                
         VCALL COLLOPTS                                                         
*-                                                                              
*-       Get Active file master page-number for later.                          
*-                                                                              
         LA    R15,CPTEXT          Active file record group                     
         VCALL XGETINFO            Get master page number                       
         LR    R5,R0               Save pageno for later                        
*-                                                                              
*-       Give Active file information.                                          
*-                                                                              
         TSEG  'Active file record group information:',,CR                      
         TCR                                                                    
*                                                                               
         TSEG  '  Split factor = '                                              
         CLEAR R0                                                               
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSPLT            Get split factor                             
         TNUM  (R15)                                                            
         TSEG  '/128',,CR                                                       
*                                                                               
         TSEG  '  Number of TEXT    Actives = '                                 
         TNUM  L:CPATTEXT                                                       
         TCR                                                                    
*                                                                               
         TSEG  '  Number of TEMP    Actives = '                                 
         TNUM  L:CPATTEMP                                                       
         TCR                                                                    
*                                                                               
         TSEG  '  Number of cleared Actives = '                                 
         TNUM  L:CPATCLR                                                        
         TCR                                                                    
*                                                                               
         TSEG  '  Highest Active file number = '                                
         TNUM  L:CPACTMAX                                                       
         TSEG  ' (current='                                                     
         TNUM  L:CPACTNO                                                        
         TSEG  ')'                                                              
         TCR                                                                    
         TCR                                                                    
*                                                                               
         TSEG  '  Total number of lines = '                                     
         TNUM  L:CPATLINS                                                       
         TCR                                                                    
*                                                                               
         TSEG  '  Total number of bytes = '                                     
         TNUM  L:CPATBYTS                                                       
         TCR                                                                    
         TCR                                                                    
*                                                                               
         TSEG  '  Master page number = '                                        
         THEX  (R5),8                                                           
         TCR                                                                    
         TCR                                                                    
*                                                                               
         IF    CPFDUMP,CVNEXT      Forget validity check prompt                 
         SETMSG 'Do validity check'                                             
         VCALL YESREQ                                                           
         TSEG  'Checking... '                                                   
         TMARK ,                   (Avoid NL)                                   
         TWRITE                                                                 
         BNZ   CVABORT                                                          
*                                                                               
         XPUSH ,,L'CPTEXT,PTR=R15  Dummy RG area                                
         LR    R0,R5               Master page number                           
         LA    R1,=CL4'TEXT'       Id                                           
         LA    R2,=C'....'         No special options                           
         VCALL RGCHECK             Validity check record group                  
         IF    Z,'TSEG "OK"'                                                    
         ELSE  BEGIN                                                            
         LR    R2,R15                                                           
         TSEG  'Error (at '                                                     
         THEX  (R2),8                                                           
         TSEG  ')'                                                              
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
*                                                                               
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         TITLE 'Active File Utility Routines'                                   
*box                                                                            
*                                                                               
*  ACTRESET -- Routine to reset Active file record group.                       
*    Called at user initialization and by "CLEAR ACTS RESET".                   
*                                                                               
*    No entry/exit parameters.                                                  
*                                                                               
ACTRESET XPROC ,                                                                
*-                                                                              
*-       Delete Active file record group.                                       
*-         Do this first, in case something in the record group is              
*-         messed up.                                                           
*-                                                                              
         LA    R15,CPTEXT          Active file record group                     
         VCALL FREERG              Delete old record group info                 
*                                                                               
         LA    R0,4                                                             
         LA    R1,=CL4'TEXT'                                                    
         LA    R2,=CL4'.R..'                                                    
         LA    R15,CPTEXT          Active file record group                     
         VCALL INITRG              Initialize                                   
*                                                                               
         LA    R0,128-16           Fill up text pages                           
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSPLT            Set split factor                             
*-                                                                              
*-       Reset control information too.                                         
*-                                                                              
         IF    (CPACTNO,Z),BEGIN   First time through...                        
         MVC   CPACTNO,=F'1'                                                    
         MVC   CPACTMAX,=F'1'                                                   
         END                                                                    
*                                                                               
         CLEAR CPATTEXT,CPATTEMP,CPATCLR  No Active files                       
         CLEAR CPATBYTS,CPATLINS                                                
         IF    CPAFDEF,BEGIN       We had a non-empty Active file...            
         INCR  R15,CPACTMAX        Kick Active file number                      
         ST    R15,CPACTNO         Set current Active file                      
         END                                                                    
*                                                                               
         L     R0,CPACTNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Make sure current is current!                
*                                                                               
         CLEAR CPAINFO             Initialize AINFO                             
         MVC   CPANAME,=CL8'NEW'   File name                                    
         MVC   CPATYPE,=CL8'TEXT'  File type                                    
         MVC   CPACLNO,=F'-1000'   Current lineno                               
*                                                                               
         CLEAR R0,R1                                                            
         VCALL SETVINFO            Initialize view position                     
*-                                                                              
*-       Delete OOPS record set in misc-16 record group.                        
*-                                                                              
         LA    R0,CP#OOPS                                                       
         LA    R15,CPRG16          Misc record group                            
         VCALL XDELSET             Delete OOPS lines                            
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
AOPENWA  RECORD BEGIN                                                           
AOPENINF DS    XL(L'AINFO)         Working AINFO area                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTOPEN -- Routine to create a new Active file.                              
*                                                                               
*    On entry:                                                                  
*      nothing                                                                  
*                                                                               
*    On exit:                                                                   
*      current Active file will be the new Active file                          
*                                                                               
ACTOPEN  XPROC AOPENWA                                                          
*-                                                                              
*-       Make a new Active file and assign a set number to it.                  
*-                                                                              
         INCR  R5,CPACTMAX         Assign highest set number so far             
*                                                                               
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch to new set                            
         LR    R3,R15              Save previous set number                     
*                                                                               
         LA    R15,AOPENINF                                                     
         WITH  (AINFO,R15),BEGIN                                                
         CLEAR AINFO                                                            
         MVC   AINANAME,=CL8'NEW'  File name                                    
         MVC   AINATYPE,=CL8'TEXT'  File type                                   
         MVC   AINACLNO,=F'-1000'  Current lineno                               
         END                                                                    
*                                                                               
         LA    R2,=CL4'INFO'       Information data key                         
         SETMSG AOPENINF                                                        
         ACALL ACTXPUT             Save record                                  
*                                                                               
*   Ensure that there is always a VIEW record. This should                      
*   eliminate the WYLBUR multiple active file logic error                       
*   that occurs when:                                                           
*                                                                               
*   A) You have multiple active files                                           
*   B) You've never VIEWed anything at all since you logged on                  
*   C) The active file space is now full                                        
*   D) You issue a VIEW command.                                                
*                                                                               
*   This will cause a WYLBUR CPU loop, because ACTXPUT can't                    
*   put a VIEW record in.                                                       
         XPUSH ,,128,PTR=R1                                                     
         MVC   0(128,R1),CVBLANKS                                               
         LA    R0,128                                                           
         VCALL GETVINFO            Get at least a dummy record                  
         LA    R0,128              Restore the full length                      
         LA    R2,=CL4'VIEW'       Record key                                   
         ACALL ACTXPUT             Add record                                   
*                                                                               
         LR    R0,R3               Previous set number                          
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch back to previous set                  
*-                                                                              
*-       Now pick the newly created Active file.                                
*-                                                                              
         L     R2,CPACTNO          Previous Active                              
         L     R3,CPANXNO          Current Active's next                        
*                                                                               
         LR    R15,R5              Active file number                           
         ACALL ACTPICK             Select this file                             
*                                                                               
         ST    R2,CPAPRNO          Set previous Active file                     
         ST    R3,CPANXNO          Set next Active file                         
*-                                                                              
*-       Update forward and back links in neighboring AINFO's.                  
*-                                                                              
         LA    R4,AOPENINF                                                      
         WITH  (AINFO,R4)                                                       
*                                                                               
         LT    R15,CPAPRNO         Get previous Active file                     
         IF    NZ,BEGIN                                                         
         SETMSG AINFO                                                           
         ACALL ACTGINFO            Get info                                     
         FAIL  NZ,AOPEN1,'Multiple Active file logic problem.'                  
*                                                                               
         ST    R5,AINANXNO         Set forward link                             
*                                                                               
         L     R15,CPAPRNO                                                      
         SETMSG AINFO                                                           
         ACALL ACTSINFO            Update info                                  
         FAIL  NZ,AOPEN2,'Multiple Active file logic problem.'                  
         END                                                                    
*                                                                               
*                                                                               
         LT    R15,CPANXNO         Get next Active file info                    
         IF    NZ,BEGIN                                                         
         SETMSG AINFO                                                           
         ACALL ACTGINFO            Get info                                     
         FAIL  NZ,AOPEN3,'Multiple Active file logic problem.'                  
*                                                                               
         ST    R5,AINAPRNO         Set backward link                            
*                                                                               
         L     R15,CPANXNO                                                      
         SETMSG AINFO                                                           
         ACALL ACTSINFO            Update info                                  
         FAIL  NZ,AOPEN4,'Multiple Active file logic problem.'                  
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
ACLSWA   RECORD BEGIN                                                           
ACLSAINF DS    CL(L'AINFO)         Working AINFO area                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTCLOSE -- Routine to close the current Active file and                     
*    go back to previously opened one.                                          
*                                                                               
*    On entry:                                                                  
*      nothing                                                                  
*                                                                               
*    On exit:                                                                   
*      current Active file will be a previously opened Active file              
*                                                                               
ACTCLOSE XPROC ACLSWA                                                           
         L     R5,CPAPRNO          Previously opened Active                     
*-                                                                              
*-       Find previously opened Active file.                                    
*-                                                                              
         WHILE (R5,NZ),BEGIN       Get previous Active...                       
         LR    R15,R5                                                           
         SETMSG ACLSAINF                                                        
         ACALL ACTGINFO            Get Active file info                         
         IF    NZ,BEGIN                                                         
         ABORT 'Multiple Active file logic problem (ACTCLOSE).'                 
         END                                                                    
         LA    R4,ACLSAINF                                                      
         WITH  (AINFO,R4)                                                       
         IF    ^AINAFCLR,EXIT      We found one, scram                          
         L     R5,AINAPRNO                                                      
         END                                                                    
*-                                                                              
*-       Now pick the previous Active file we found.                            
*-                                                                              
         IF    (R5,NZ),BEGIN       No previous Active...                        
         IF    ^CPAFLOCK,BEGIN     Not locked...                                
         SET   CPAFCLR             This active is now cleared                   
         IF    (CPALNCT,NZ),BEGIN  Keep Active counts accurate...               
         IF    (CPATYPE,EQ,'TEMP'),'DECR R15,CPATTEMP'                          
         ELSE  'DECR R15,CPATTEXT'                                              
         END                                                                    
         INCR  R15,CPATCLR         Count cleared Actives                        
         END                                                                    
*                                                                               
         LR    R15,R5                                                           
         ACALL ACTPICK             Go back to new Active                        
         END                                                                    
*-                                                                              
*-       No previous Active file; do a CLEAR ACTIVE.                            
*-                                                                              
         ELSE  BEGIN                                                            
         SET   CPFCLEAR+CPFNWARN   CLEAR NOWARN                                 
         ACALL CLRTEXT             Get a clear active                           
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTPICK -- Routine to select a new Active file.  This routine                
*    also updates the AINFO information in the CP.                              
*                                                                               
*    On entry:                                                                  
*      R15 - Set number of the new Active file                                  
*                                                                               
*    On exit, R15 (and CC):                                                     
*        0 - Active file requested does not exist                               
*      pos - R15 = Previous Active file set number                              
*                                                                               
APICKWA  RECORD BEGIN                                                           
APICKMSG DS    CL128               Working message area                         
         END                                                                    
*-                                                                              
ACTPICK  XPROC APICKWA                                                          
         LTR   R5,R15              Save set number                              
         FAIL  Z,ACTPICK,'ACTPICK logic error.'                                 
*-                                                                              
*-       Save AINFO for the current Active file.                                
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         SETMSG CPAINFO                                                         
         ACALL ACTXPUT             Save AINFO                                   
*-                                                                              
*-       Save current view position if we are viewing this                      
*-         Active file.                                                         
*-                                                                              
         ACALL ACTVSAVE            Save view position                           
*                                                                               
         IF    (R5,EQ,CPACTNO),'LR R15,R5; EXIT ACTPICK'  Simple                
*-                                                                              
*-       Make sure the new Active file already exists.  An existing             
*-         Active file will always have lines in it's record set                
*-         (even a null Active file will have an "INFO" control                 
*-         record).                                                             
*-                                                                              
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XCHKSET             Any lines in Active?                         
         IF    Z,EXIT,ACTPICK      No, does not exist                           
*-                                                                              
*-       Switch to the new Active file and restore AINFO.                       
*-                                                                              
         ST    R5,CPACTNO          Set current Active file number               
*                                                                               
         LR    R0,R5                                                            
         LA    R15,CPTEXT                                                       
         VCALL XSETSET             Select new Active file                       
         LR    R5,R15              Previous set number                          
*-                                                                              
*-       Restore AINFO for new Active file.                                     
*-                                                                              
         LA    R2,=CL4'INFO'       Control record's ID                          
         SETMSG CPAINFO             Put AINFO here                              
         LA    R15,CPTEXT          Active file record group                     
         VCALL XGET                Restore AINFO                                
*-                                                                              
*-       Handle case where a cleared Active is picked.                          
*-                                                                              
         IF    CPAFCLR,BEGIN       Unclear the active...                        
         CLEAR CPAFCLR             Uncleared                                    
         DECR  R15,CPATCLR         One less cleared Active file                 
         IF    (CPALNCT,NZ),BEGIN  We have lines...                             
         IF    (CPATYPE,EQ,'TEMP'),'INCR R15,CPATTEMP'                          
         ELSE  'INCR R15,CPATTEXT'                                              
         END                                                                    
         END                                                                    
*                                                                               
*                                                                               
         LR    R15,R5              Previous set number                          
         PEND  ,                                                                
         EJECT                                                                  
APREVWA  RECORD BEGIN                                                           
APREVTYP DS    CL8                 Active file type                             
*                                                                               
APREVINF DS    XL(L'AINFO)         AINFO                                        
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTPREV -- Routine to select the previous Active file.                       
*                                                                               
*    On entry:                                                                  
*      R1 - @ 8 char Active file type to match (zeros=matches all)              
*      R15- Need active file number before this                                 
*                                                                               
*    On exit, R15 (and cc):                                                     
*        0 - No previous Active file                                            
*      pos - R15 = Previous Active file set number                              
*                                                                               
ACTPREV  XPROC APREVWA                                                          
         CLEAR APREVWA                                                          
         IF    (R1,NZ),'MVC APREVTYP,@R1'  Save Active file type                
*                                                                               
         LR    R5,R15                                                           
*-                                                                              
*-       Save AINFO if the current Active file is empty so that we              
*-         will guarantee that the current Active file record set is            
*-         not empty.                                                           
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         SETMSG CPAINFO                                                         
         ACALL ACTXPUT             Save AINFO                                   
*                                                                               
*                                                                               
         LOOP  BEGIN               Find previous...                             
         DECR  R5                                                               
*                                                                               
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLASTSET            Get previous set number                      
         IF    NZ,'CLEAR R15; EXIT ACTPREV'                                     
         LR    R5,R0               Save Active file no                          
*                                                                               
         SETMSG APREVINF            Put AINFO here                              
         LR    R15,R5                                                           
         ACALL ACTGINFO            Get this Active's AINFO                      
         FAIL  NZ,APREVERR,'Multiple Active file error (ACTPREV).'              
         LA    R4,APREVINF                                                      
         WITH  (AINFO,R4)                                                       
         IF    (APREVTYP,Z),EXIT   Matches anything                             
         IF    (^AINAFCLR,AND,(AINATYPE,EQ,APREVTYP)),EXIT                      
         END                                                                    
*                                                                               
*                                                                               
         LR    R15,R5              Return Active file number                    
         PEND  ,                                                                
         EJECT                                                                  
ANEXTWA  RECORD BEGIN                                                           
ANEXTTYP DS    CL8                 Active file type                             
*                                                                               
ANEXTINF DS    XL(L'AINFO)         AINFO                                        
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTNEXT -- Routine to select the next Active file.                           
*                                                                               
*    On entry:                                                                  
*      R1 - @ 8 char Active file type to match (zeros=matches all)              
*      R15- need next Active file after this one                                
*                                                                               
*    On exit, R15 (and cc):                                                     
*        0 - No next Active file                                                
*      pos - R15 = Next Active file set number                                  
*                                                                               
ACTNEXT  XPROC ANEXTWA                                                          
         CLEAR ANEXTWA                                                          
         IF    (R1,NZ),'MVC ANEXTTYP,@R1'  Save Active file type                
*                                                                               
         LR    R5,R15                                                           
*-                                                                              
*-       Save AINFO if the current Active file is empty so that we              
*-         will guarantee that the current Active file record set is            
*-         not empty.                                                           
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         SETMSG CPAINFO                                                         
         ACALL ACTXPUT             Save AINFO                                   
*                                                                               
*                                                                               
         LOOP  BEGIN               Find next...                                 
         LA    R5,@R5+1                                                         
*                                                                               
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XFRSTSET            Get next set number                          
         IF    NZ,'CLEAR R15; EXIT ACTNEXT'                                     
         LR    R5,R0               Save Active file no                          
*                                                                               
         SETMSG ANEXTINF            Put AINFO here                              
         LR    R15,R5                                                           
         ACALL ACTGINFO            Get this Active's AINFO                      
         FAIL  NZ,ANEXTERR,'Multiple Active file error (ACTNEXT).'              
         LA    R4,ANEXTINF                                                      
         WITH  (AINFO,R4)                                                       
         IF    (ANEXTTYP,Z),EXIT   Matches everything                           
         IF    (^AINAFCLR,AND,(AINATYPE,EQ,ANEXTTYP)),EXIT                      
         END                                                                    
*                                                                               
*                                                                               
         LR    R15,R5              Return Active file number                    
         PEND  ,                                                                
         EJECT                                                                  
AFRSTWA  RECORD BEGIN                                                           
AFRSTTYP DS    CL8                 Active file type                             
*                                                                               
AFRSTINF DS    XL(L'AINFO)         AINFO                                        
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTFIRST -- Routine to select the first Active file.                         
*                                                                               
*    On entry:                                                                  
*      R1 - @ 8 char Active file type to match (zero=matches all)               
*      R15- find active file number greater than or equal to this               
*                                                                               
*    On exit, R15 (and cc):                                                     
*        0 - No previous Active file                                            
*      pos - R15 = First Active file set number                                 
*                                                                               
ACTFIRST XPROC AFRSTWA                                                          
         CLEAR AFRSTWA                                                          
         IF    (R1,NZ),'MVC AFRSTTYP,@R1'  Save Active file type                
*                                                                               
         LR    R5,R15              Initialize set number                        
*-                                                                              
*-       Save AINFO if the current Active file is empty so that we              
*-         will guarantee that the current Active file record set is            
*-         not empty.                                                           
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         SETMSG CPAINFO                                                         
         ACALL ACTXPUT             Save AINFO                                   
*                                                                               
*                                                                               
         LOOP  BEGIN               Find first...                                
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XFRSTSET            Get next set number                          
         IF    NZ,'CLEAR R15; EXIT ACTFIRST'                                    
         LR    R5,R0               Save Active file no                          
*                                                                               
         SETMSG AFRSTINF            Put AINFO here                              
         LR    R15,R5                                                           
         ACALL ACTGINFO            Get this Active's AINFO                      
         FAIL  NZ,AFRSTERR,'Multiple Active file error (ACTFRST).'              
         LA    R4,AFRSTINF                                                      
         WITH  (AINFO,R4)                                                       
         IF    (AFRSTTYP,Z),EXIT   Matches everything                           
         IF    (^AINAFCLR,AND,(AINATYPE,EQ,AFRSTTYP)),EXIT                      
*                                                                               
         LA    R5,@R5+1            Try next Active file number                  
         END                                                                    
*                                                                               
*                                                                               
         LR    R15,R5              Return Active file number                    
         PEND  ,                                                                
         EJECT                                                                  
ALASTWA  RECORD BEGIN                                                           
ALASTTYP DS    CL8                 Active file type                             
*                                                                               
ALASTINF DS    XL(L'AINFO)         AINFO                                        
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTLAST -- Routine to select the last Active file.                           
*                                                                               
*    On entry:                                                                  
*      R1 - @ 8 char Active file type to match (zeros=matches all)              
*      R15- find Active file before this one (-1 = last possible)               
*                                                                               
*    On exit, R15 (and cc):                                                     
*        0 - No next Active file                                                
*      pos - R15 = Last Active file set number                                  
*                                                                               
ACTLAST  XPROC ALASTWA                                                          
         CLEAR ALASTWA                                                          
         IF    (R1,NZ),'MVC ALASTTYP,@R1'  Save Active file type                
*                                                                               
         LR    R5,R15                                                           
         IF    (R5,LGT,CPACTMAX),'L R5,CPACTMAX'                                
*-                                                                              
*-       Save AINFO if the current Active file is empty so that we              
*-         will guarantee that the current Active file record set is            
*-         not empty.                                                           
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         SETMSG CPAINFO                                                         
         ACALL ACTXPUT             Save AINFO                                   
*                                                                               
*                                                                               
         LOOP  BEGIN               Find previous...                             
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLASTSET            Get previous set number                      
         IF    NZ,'CLEAR R15; EXIT ACTLAST'                                     
         LR    R5,R0               Save Active file no                          
*                                                                               
         SETMSG ALASTINF            Put AINFO here                              
         LR    R15,R5                                                           
         ACALL ACTGINFO            Get this Active's AINFO                      
         FAIL  NZ,ALASTERR,'Multiple Active file error (ACTLAST).'              
         LA    R4,ALASTINF                                                      
         WITH  (AINFO,R4)                                                       
         IF    (ALASTTYP,Z),EXIT   Matches everything                           
         IF    (^AINAFCLR,AND,(AINATYPE,EQ,ALASTTYP)),EXIT                      
*                                                                               
         DECR  R5                  Try previous Active file                     
         END                                                                    
*                                                                               
*                                                                               
         LR    R15,R5              Return Active file number                    
         PEND  ,                                                                
         EJECT                                                                  
ADELWA   RECORD BEGIN                                                           
ADELINF  DS    XL(L'AINFO)         Working AINFO area                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTDEL -- Routine to actually delete an Active file.  Note that              
*    normally commands only "CLEAR" Active files and the ACTPURGE               
*    routine handles actually deleting old cleared Actives when                 
*    the user has a lot of space allocated.                                     
*                                                                               
*    On entry:                                                                  
*      R15 - Active file number to delete                                       
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      pos - Active file number doesn't exist                                   
*                                                                               
ACTDEL   XPROC ADELWA                                                           
         LR    R5,R15                                                           
*                                                                               
         SETMSG ADELINF                                                         
         ACALL ACTGINFO            Get info on this Active file                 
         IF    NZ,EXIT             Error, forget it                             
         LA    R4,ADELINF                                                       
         WITH  (AINFO,R4)                                                       
*                                                                               
         IF    ^AINAFCLR,BEGIN     Only delete cleared Actives...               
         LA    R15,20              Forget it                                    
         EXIT  ACTDEL                                                           
         END                                                                    
*-                                                                              
*-       Delete the cleared Active file.                                        
*-                                                                              
         DECR  R15,CPATCLR         One less cleared Active file                 
*                                                                               
         L     R15,CPATLINS        Adjust...                                    
         S     R15,AINALNCT        ...total                                     
         ST    R15,CPATLINS        ...line count                                
*                                                                               
         L     R15,CPATBYTS        Adjust...                                    
         S     R15,AINABYCT        ...total                                     
         ST    R15,CPATBYTS        ...byte count                                
*-                                                                              
*-       Make sure no marked block left pointing to deleted active.             
*-                                                                              
         IF    (R5,EQ,CPBLKACT),'CLEAR CPBLKACT'                                
*                                                                               
*                                                                               
         L     R2,AINAPRNO                                                      
         L     R3,AINANXNO                                                      
*                                                                               
         IF    (R3,NZ),BEGIN       We have a next...                            
         SETMSG AINFO                                                           
         LR    R15,R3                                                           
         ACALL ACTGINFO            Get next                                     
         FAIL  NZ,ACTDEL1,'Multiple Active file logic error'                    
         ST    R2,AINAPRNO         Update back ptr                              
         SETMSG AINFO                                                           
         LR    R15,R3                                                           
         ACALL ACTSINFO            Update AINFO                                 
         FAIL  NZ,ACTDEL2,'Multiple Active file logic error'                    
         END                                                                    
*                                                                               
         IF    (R2,NZ),BEGIN       We have a prev...                            
         SETMSG AINFO                                                           
         LR    R15,R2                                                           
         ACALL ACTGINFO            Get prev                                     
         FAIL  NZ,ACTDEL3,'Multiple Active file logic error'                    
         ST    R3,AINANXNO         Update forward ptr                           
         SETMSG AINFO                                                           
         LR    R15,R2                                                           
         ACALL ACTSINFO            Update AINFO                                 
         FAIL  NZ,ACTDEL3,'Multiple Active file logic error'                    
         END                                                                    
*                                                                               
         VCALL GETCPU              Current CPU time                             
         LR    R4,R1               Save total                                   
*                                                                               
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XDELSET             Delete Active file                           
*                                                                               
         LA    R0,CP#OOPS          Oops lines are kept here                     
         LA    R15,CPRG16          Misc record group                            
         VCALL XSETSET                                                          
         XPUSH ,,32,PTR=R3                                                      
         CLEAR (@R3,16)            First record                                 
         MVC   @R3+16(16),=16X'FF'  Last record                                 
         ST    R5,@R3              Active file number                           
         ST    R5,@R3+16           Ditto                                        
         LA    R0,@R3              R0 = key of first record                     
         LA    R1,@R3+16           R1 = key of last record                      
         CLEAR R2                  (Don't span sets)                            
         LA    R15,CPRG16          Misc record group                            
         VCALL XDELRECS            Delete OOPS lines                            
         XPOP  ,,32                                                             
*                                                                               
         VCALL GETCPU              Ending CPU time                              
         SR    R1,R4               CPU time take for XDELSET                    
         IF    POS,BEGIN           Valid...                                     
         L     R4,CVRCPUTM         Dispatch starting time                       
         AR    R4,R1               This deducts XDELSET time                    
         ST    R4,CVRCPUTM         Update                                       
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTFULL -- Routine to determine if the Active file area is                   
*    full.                                                                      
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - not full (normal)                                                    
*      4 - full                                                                 
*                                                                               
ACTFULL  XPROC ,                                                                
         CLEAR R15                                                              
         IF    (CPATBYTS,GT,=A(CPATLIM#-32768)),'LA R15,4'  Full                
         PEND  ,                                                                
         EJECT                                                                  
APURGEWA RECORD BEGIN                                                           
APURINF  DS    XL(L'AINFO)         Working AINFO area                           
*                                                                               
APURBYCT DS    F                   Prev Active's byte count                     
APURLNCT DS    F                   Prev Active's line count                     
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTPURGE -- Routine to purge (delete) old cleared Active files               
*    if the user is using a lot of Active file space.  We will                  
*    purge the oldest cleared Active file and continue with more                
*    recent cleared Active files until the user is under the file               
*    space threshold.                                                           
*                                                                               
*    We will never delete the most recently cleared Active file.                
*    This means that the user can guarantee that he can retreive                
*    the last Active file he cleared; and there is a "best effort"              
*    to keep older cleared Active files around.  Now is that                    
*    user-friendly to the max or what!                                          
*                                                                               
*    If the user only has one huge cleared Active file and we are               
*    going to run the risk of running out of space then we will                 
*    purge the most recently cleared Active file.                               
*                                                                               
ACTPURGE PROC  APURGEWA                                                         
*-                                                                              
*-       Check to see if it's time to purge cleared Actives.                    
*-                                                                              
         IF    (CPATBYTS,LE,=A(CPATMAX#)),APUREXIT  Scram                       
*-                                                                              
*-       Go through and purge the old cleared Actives.                          
*-                                                                              
         CLEAR R5                  Working Active file number                   
*                                                                               
         LOOP  BEGIN                                                            
         IF    (CPATBYTS,LE,=A(CPATMIN#)),APUREXIT  No probs, scram             
*                                                                               
         IF    (CPATBYTS,LT,=A(CPATBIG#)),BEGIN  Keep one cleared...            
         IF    (CPATCLR,LE,1),APUREXIT  No eligible cleared Actives             
         END                                                                    
*                                                                               
         LA    R5,@R5+1            Next Active file                             
*                                                                               
         LR    R0,R5                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XFRSTSET            Get next Active file no                      
         IF    NZ,EXIT             Nothing left, scram                          
         LR    R5,R0               Save Active file number                      
*                                                                               
         SETMSG APURINF             Put AINFO here                              
         LR    R15,R5                                                           
         ACALL ACTGINFO                                                         
         FAIL  NZ,APURERR1,'Multiple Active file logic problem.'                
         LA    R4,APURINF                                                       
         WITH  (AINFO,R4)                                                       
*                                                                               
         IF    AINAFCLR,BEGIN      Delete it...                                 
         LR    R15,R5                                                           
         ACALL ACTDEL              Actually delete the Active file              
         FAIL  NZ,APURERR2,'Multiple Active file logic problem.'                
         END                                                                    
         END                                                                    
*                                                                               
APUREXIT PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTGINFO -- Routine to return the Active file information record             
*    to the caller.                                                             
*                                                                               
*    On entry:                                                                  
*      R1,R0 - AINFO loc, len                                                   
*      R15 - Active file set number                                             
*                                                                               
*    On exit, R15 (and cc):                                                     
*          0   = ok                                                             
*          pos = no such Active file                                            
*                                                                               
ACTGINFO XPROC ,                                                                
*-                                                                              
*-       Return AINFO from CP if request is for current Active file.            
*-                                                                              
         IF    (R15,EQ,CPACTNO),BEGIN  Asking about current...                  
         LR    R2,R1                                                            
         LR    R3,R0                                                            
         LA    R4,CPAINFO                                                       
         LA    R5,L'CPAINFO                                                     
         MVCL  R2,R4               Copy CPAINFO to caller's area                
*                                                                               
         CLEAR R5                  Return code, A-ok                            
         END                                                                    
*                                                                               
         ELSE  BEGIN               Otherwise read info...                       
*-                                                                              
*-       Switch to requested set number.                                        
*-                                                                              
         XPUSH R0,R1                                                            
*                                                                               
         LR    R0,R15                                                           
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch to new set                            
         LR    R3,R15              Save previous set number                     
*-                                                                              
*-       Get AINFO record.                                                      
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         XPOP  R0,R1               Data buffer                                  
         LA    R15,CPTEXT          Active file record group                     
         VCALL XGET                Get INFO record                              
         LR    R5,R15              Save return code                             
*-                                                                              
*-       Restore previous set number.                                           
*-                                                                              
         LR    R0,R3                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch back to previous set                  
         END                                                                    
*                                                                               
         LR    R15,R5              Return code                                  
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTSINFO -- Routine to set the Active file information.                      
*                                                                               
*    On entry:                                                                  
*      R1,R0 - AINFO loc, len                                                   
*      R15 - Active file set number                                             
*                                                                               
*    On exit, R15 (and cc):                                                     
*          0   = ok                                                             
*                                                                               
ACTSINFO XPROC ,                                                                
*-                                                                              
*-       Set AINFO in CP if request is for current Active file.                 
*-                                                                              
         IF    (R15,EQ,CPACTNO),BEGIN  Asking about current...                  
         LR    R2,R1                                                            
         LR    R3,R0                                                            
         LA    R4,CPAINFO                                                       
         LA    R5,L'CPAINFO                                                     
         MVCL  R4,R2               Copy to CPAINFO                              
*                                                                               
         CLEAR R5                  Return code, A-ok                            
         END                                                                    
*                                                                               
         ELSE  BEGIN               Otherwise set "INFO" record...               
*-                                                                              
*-       Switch to requested set number.                                        
*-                                                                              
         XPUSH R0,R1                                                            
*                                                                               
         LR    R0,R15                                                           
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch to new set                            
         LR    R3,R15              Save previous set number                     
*-                                                                              
*-       Set AINFO record.                                                      
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         XPOP  R0,R1               Data buffer                                  
         ACALL ACTXPUT             Put INFO record                              
*-                                                                              
*-       Restore previous set number.                                           
*-                                                                              
         LR    R0,R3                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch back to previous set                  
         END                                                                    
*                                                                               
         CLEAR R15                 Return code                                  
         PEND  ,                                                                
         EJECT                                                                  
AVSAVEWA RECORD BEGIN                                                           
AVSAVMSG DS    CL128               Message area                                 
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTVSAVE -- Routine to save the view position in the current                 
*    Active file.                                                               
*                                                                               
*    On entry:                                                                  
*      nothing (current Active file assumed)                                    
*                                                                               
*    On exit:                                                                   
*      0 - ok                                                                   
*                                                                               
ACTVSAVE XPROC AVSAVEWA                                                         
         MVC   AVSAVMSG,CVBLANKS   Blank area to full length MPD                
         SETMSG AVSAVMSG                                                        
         VCALL GETVINFO            Get current view info                        
         IF    Z,BEGIN             We are viewing this Active...                
         LA    R2,=CL4'VIEW'       (Four char "line-number")                    
         SETMSG AVSAVMSG            Save the full length (MPD)                  
         ACALL ACTXPUT             Add record                                   
         END                                                                    
         PEND  ,                                                                
         EJECT                                                                  
AVRESTWA RECORD BEGIN                                                           
AVRESMSG DS    CL128               Message area                                 
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTVREST -- Routine to restore the previous view position                    
*    in the current Active file.                                                
*                                                                               
*    On entry:                                                                  
*      nothing (current Active file assumed)                                    
*                                                                               
*    On exit:                                                                   
*      0 - ok                                                                   
*                                                                               
ACTVREST XPROC AVRESTWA                                                         
         LA    R2,=CL4'VIEW'                                                    
         SETMSG AVRESMSG                                                        
         LA    R15,CPTEXT          Active file record group                     
         VCALL XGET                Get info line                                
         IF    NZ,'CLEAR R0,R1'                                                 
         ELSE  BEGIN                                                            
         VCALL RTRIM               Trim it back MPD                             
         END                                                                    
         VCALL SETVINFO            Set view position                            
*                                                                               
         CLEAR R15                 A-ok                                         
         PEND  ,                                                                
         EJECT                                                                  
ADUPWA   RECORD BEGIN                                                           
ADUPLINE DS    CL(&LINESZ)         Working line text area                       
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTDUP -- Routine to copy the contents of the Active file                    
*    specified into the current Active file.                                    
*                                                                               
*    On entry:                                                                  
*      R15 - Active file number of source Active file                           
*                                                                               
*    Returns only if OK.                                                        
*                                                                               
ACTDUP   XPROC ADUPWA                                                           
         LR    R4,R15              Source Active file number                    
*-                                                                              
*-       Copy the lines by calling GETLINE/PUTLINE.                             
*-                                                                              
         CLEAR R5                  Working line-number                          
*                                                                               
         LOOP  BEGIN               Go for it...                                 
         LR    R15,R5              Line-number                                  
         SETMSG ADUPLINE            Line text                                   
         LR    R2,R4               Active file number                           
         ACALL GETLINEX            Get line text                                
         IF    NEG,EXIT            All done, scram                              
*                                                                               
         L     R5,CPLCNO           Line-number                                  
*                                                                               
         LR    R15,R5                                                           
         ACALL PUTLINE             Add line to current Active                   
*                                                                               
         A     R5,CVONE            Next line                                    
         IF    (R5,GT,CVMAXLNO),EXIT  All done                                  
         END                                                                    
*                                                                               
         CLEAR R15                 Set good RC (tidy)                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTXPUT -- Routine to do an XPUT into the Active file.                       
*    This routine is used to put control "lines" (such as the                   
*    AINFO) in to the Active file.  Regular data lines are added                
*    via PUTLINE (not by this code).                                            
*                                                                               
*    Special care is taken to first try an in place replacement                 
*    of the line, so we won't get tripped up trying to replace                  
*    an AINFO record in an Active file which is full.  (See                     
*    comments in XREPLACE in the RECS modules for more info.)                   
*                                                                               
*    On entry:                                                                  
*      R1,R0 - data loc, len                                                    
*      @R2 - key data ptr (lineno)                                              
*                                                                               
*    Returns only if OK.                                                        
*                                                                               
ACTXPUT  PROC  ,                                                                
         LR    R6,R1                                                            
         LR    R5,R0                                                            
*-                                                                              
*-       First try in place replacement of line.                                
*-                                                                              
         LA    R15,CPTEXT          Active file record group                     
         VCALL XREPLACE            Replace the line                             
         BZ    ACTPEXIT            A-ok, scram                                  
*-                                                                              
*-       It didn't work, so now try a regular put of the line.                  
*-                                                                              
         SETMSG (R6),(R5)           Line data                                   
         LA    R3,=C'....'         Default options                              
         LA    R15,CPTEXT          Active file record group                     
         VCALL XPUTLINE            Add/replace line                             
         BZ    ACTPEXIT            It worked, scram                             
*-                                                                              
*-       We can't add the line.                                                 
*-                                                                              
         IF    (R15,NE,4),'ABORT "Active file logic error."'                    
*                                                                               
         LA    R15,=CL8'ACTFULL'                                                
         VCALL LOGCMD                                                           
*                                                                               
         ABORT 'Active file space is full.'                                     
*                                                                               
*                                                                               
ACTPEXIT PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTPFX -- Routine to set the Active file prefix information                  
*    if appropriate.                                                            
*                                                                               
ACTPFX   XPROC ,                                                                
         IF    CPLFLG3.CPFSET,BEGIN  Set prefix...                              
         VCALL SETPFXNS            Set prefix                                   
*                                                                               
         IF    (CPANAME,EQ,=CL8'NEW'),BEGIN  Set Active name...                 
         IF    (CPAFNAMEL,GT,0),BEGIN                                           
*                                                                               
         COMMENT                   IF SMALL NAME                                
         IF    (CPAFNAMEL,LE,L'CPANAME),BEGIN                                   
         L     R2,CPAFNAMEL                                                     
         MVC   CPANAME,CVBLANKS                                                 
         MOVE  R2,CPANAME,CPAFNAME Set name                                     
         B     SETPDONE                                                         
         END   ,                                                                
*                                                                               
         COMMENT                   TRY MEMBER                                   
         SETMSG CPAFNAME,L:CPAFNAMEL                                            
         VCALL RETFMEM                                                          
         LR    R2,R0                                                            
         IF    (R2,POS),BEGIN                                                   
         CEIL  R2,L'CPANAME                                                     
         MVC   CPANAME,CVBLANKS                                                 
         MOVE  R2,CPANAME,@R1      Set name                                     
         B     SETPDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   LOOK FOR '.' PART OF NAME                    
         LA    R1,CPAFNAME                                                      
         LR    R2,R1                                                            
         A     R2,CPAFNAMEL                                                     
         LR    R3,R2                                                            
         DECR  R3                                                               
         WHILE ((R3,GT,R1),AND,(@R3,NE,'.'),AND,(@R3,NE,'/')),BEGIN             
         DECR  R3                                                               
         END                                                                    
         INCR  R3                                                               
         SR    R2,R3                                                            
         IF    (R2,POS),BEGIN                                                   
         CEIL  R2,L'CPANAME                                                     
         MVC   CPANAME,CVBLANKS                                                 
         MOVE  R2,CPANAME,@R3      Set name                                     
         B     SETPDONE                                                         
         END                                                                    
*                                                                               
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
SETPDONE LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTDISP -- Routine to display Active file info.                              
*                                                                               
*    On entry:                                                                  
*      R15 - Active file number                                                 
*      R1  - AINFO ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - OK                                                                   
*      nz- attn/logging off (TSTAT return code)                                 
*                                                                               
ACTDISP  XPROC ,                                                                
         LR    R5,R1                                                            
         WITH  (AINFO,R5)                                                       
*                                                                               
         LR    R4,R15              Active file number                           
*-                                                                              
*-       Give information display.                                              
*-                                                                              
         SETMSG CVBLANKS,2                                                      
         IF    (R4,EQ,CPACTNO),'SETMSG "=>"'  Current                           
         TSEG  (R1),(R0)                                                        
*                                                                               
         TNUM  (R4),4              Active file number                           
         TSEG  CVBLANKS,1                                                       
*                                                                               
         TSEG  AINANAME,,B         Active file name                             
*-                                                                              
*-       Active file title.                                                     
*-                                                                              
         IF    (AINATITL,NZ),BEGIN  Titled Active file...                       
         TSEG  AINATITL,,T                                                      
         END                                                                    
*                                                                               
         ELSEIF (AINAFNAMEL,NE,0),BEGIN  From dsname is a title                 
         TSEG  'From '                                                          
         COMMENT                   FILE NAME                                    
         SETMSG AINAFNAME,L:AINAFNAMEL                                          
         VCALL RETFNAME                                                         
         IF    ((R0,GE,11),AND,(@R1,EQ,'WYL.'),AND,                    X        
               (@R1+6,EQ,'.'),AND,(@R1+10,EQ,'.'),AND,                 X        
               (CPSGRP,EQ,@R1+4),AND,(CPSUSER,EQ,@R1+7)),BEGIN                  
         LA    R1,@R1+11           Skip past the standard prefix                
         SH    R0,=H'11'                                                        
         END                                                                    
         TSEG  (R1),(R0)                                                        
         COMMENT                   #MEMBER, IF ANY                              
         SETMSG AINAFNAME,L:AINAFNAMEL                                          
         VCALL RETFMEM                                                          
         IF    (R0,POS),BEGIN                                                   
         XPUSH R0,R1                                                            
         TSEG  '#'                                                              
         XPOP  R0,R1                                                            
         TSEG  (R1),(R0)                                                        
         END                                                                    
         COMMENT                   ON HOST, IF ANY                              
         IF    (AINAHOSTL,NE,0),BEGIN                                           
         TSEG  ' on '                                                           
         TSEG  AINAHOST,L:AINAHOSTL                                             
         END                                                                    
         END                                                                    
*-                                                                              
*-       General information.                                                   
*-                                                                              
         TCOL  45                                                               
         TNUM  L:AINALNCT,6                                                     
         TSEG  ' lines'                                                         
*                                                                               
         IF    (CPSPROJ,EQ,'ACTDEBUG'),BEGIN  Very temporary...                 
         TSEG  ', '                                                             
         TNUM  L:AINABYCT                                                       
         TSEG  ' bytes'                                                         
*                                                                               
         IF    AINAFDEF,'TSEG " (defined)"'                                     
         END   ,                   End of very temporary code                   
*                                                                               
         IF    (AINACHCT,NZ),BEGIN                                              
         TSEG  ', '                                                             
         TNUM  L:AINACHCT                                                       
         TSEG  ' changes'                                                       
         END                                                                    
*                                                                               
         IF    (AINATYPE,NE,=CL8'TEXT'),BEGIN                                   
         TSEG  ' ('                                                             
         TSEG  AINATYPE,,T                                                      
         TSEG  ')'                                                              
         END                                                                    
*                                                                               
         IF    AINAFCLR,'TSEG " (Cleared)"'                                     
         IF    AINAFPRT,'TSEG " (Protected)"'                                   
         IF    AINAFLOCK,'TSEG " (Locked)"'                                     
*                                                                               
         TCR   ,                   (TCR sets return code)                       
         PEND  ,                                                                
         EJECT                                                                  
ARCVYWA  RECORD BEGIN                                                           
ARCVYINF DS    XL(L'CPAINFO)       Working AINFO area                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ACTRCVY -- Routine to re-build Active file information from                  
*    the Active file record group.  This routine is called in                   
*    user mode when the Active file record group has already                    
*    been recovered, but other things like the AINFO and Active                 
*    file stack have not yet been built.                                        
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      nz- error of some sort                                                   
*                                                                               
ACTRCVY  XPROC ARCVYWA                                                          
*-                                                                              
*-       Initialize Active file information.                                    
*-                                                                              
         CLEAR CPACTNO             Initialized in loop below                    
         CLEAR CPACTMAX                                                         
*-                                                                              
*-       Check out the Active files.  Rebuild AINFO in case the most            
*-        current AINFO was not written out when the previous WYLBUR            
*-        went down.  In general, as few assumptions as possible are            
*-         made about the Active file.  We do know at least that the            
*-      record group is OK, otherwise the RGCHECK in INIT would have            
*-         failed and we would have skipped this user.                          
*-                                                                              
         CLEAR R5                  Current set number                           
ACTRLOOP LOOP  BEGIN               Go through Actives...                        
         LA    R0,@R5+1                                                         
         LA    R15,CPTEXT          Active file record group                     
         VCALL XFRSTSET            Get first/next set number                    
         IF    NZ,EXIT             All done, scram                              
         LR    R5,R0               Save current set number                      
*-                                                                              
*-       Fix up Active file info.                                               
*-                                                                              
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch to this Active file                   
*                                                                               
         CLEAR ARCVYINF            Pre-zero AINFO (in case none)                
         LA    R2,=CL4'INFO'       Get info record                              
         SETMSG ARCVYINF            Put AINFO record here                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XGET                Get it (if possible)                         
*                                                                               
         LA    R6,ARCVYINF                                                      
         WITH  (AINFO,R6)                                                       
*                                                                               
         IF    (AINANAME,Z),'MVC AINANAME,=CL8"NEW"'  File name                 
         IF    (AINATYPE,Z),'MVC AINATYPE,=CL8"TEXT"'  File type                
*-                                                                              
*-       Re-calculate AINFO fields from actual data.                            
*-                                                                              
         CLEAR AINAFLNO                                                         
         LA    R2,AINAFLNO                                                      
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLINE            Get actual first line-number                 
         IF    (AINAFLNO,GT,CVMAXLNO),'CLEAR AINAFLNO'  No Active               
*                                                                               
         MVC   AINALLNO,CVMAXLNO                                                
         LA    R2,AINALLNO                                                      
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLAST            Get actual last line-number                  
*                                                                               
         LA    R0,AINAFLNO         First line-number                            
         LA    R1,AINALLNO         Last line-number                             
         CLEAR R2                  (Only this record set)                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XCNTRECS            Count records                                
         ST    R15,AINALNCT        Save line count                              
         A     R15,CPATLINS        Total lines in all Actives                   
         ST    R15,CPATLINS        Save total                                   
         ST    R0,AINABYCT         Save byte count                              
         A     R0,CPATBYTS         Total bytes in all Actives                   
         ST    R0,CPATBYTS         Save total                                   
*                                                                               
         MVC   AINACLNO,=F'-1000'  Current lineno                               
         CLEAR AINACHCT            Reset change count                           
*                                                                               
         CLEAR AINAPRNO,AINANXNO   Clear links                                  
*-                                                                              
*-       Keep Active file counts accurate.                                      
*-                                                                              
         IF    (AINATYPE,EQ,'CLEARED'),BEGIN  OLDWYL compatible...              
         SET   AINAFCLR                                                         
         MVC   AINATYPE,=CL8'TEXT'                                              
         END                                                                    
*                                                                               
         IF    AINAFCLR,'INCR R15,CPATCLR'                                      
*                                                                               
         ELSE  BEGIN                                                            
         IF    (AINALNCT,NZ),BEGIN                                              
         IF    (AINATYPE,EQ,'TEMP'),'INCR R15,CPATTEMP'                         
         ELSE  BEGIN                                                            
         MVC   AINATYPE,=CL8'TEXT' Make sure it's TEXT                          
         INCR  R15,CPATTEXT        Active file count                            
         ST    R5,CPACTNO          Save current Active file number              
*                                                                               
         COMMENT                   DO LONG VERSION OF MVC                       
*        MVC   CPAINFO,AINFO       Save current AINFO                           
         XPUSH R2,R5                                                            
         LA    R2,CPAINFO                                                       
         LA    R3,L'CPAINFO                                                     
         LA    R4,AINFO                                                         
         LA    R5,L'AINFO                                                       
         MVCL  R2,R4                                                            
         XPOP  R2,R5                                                            
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         ST    R5,CPACTMAX         Save highest Active file number              
*-                                                                              
*-       Update AINFO record for this Active file.                              
*-                                                                              
         LA    R2,=CL4'INFO'                                                    
         LA    R15,CPTEXT          Active file record group                     
         VCALL XDELETE             First delete record                          
*                                                                               
         SETMSG AINFO                                                           
         LA    R15,CPTEXT          Active file record group                     
         VCALL XPUT                Add AINFO record                             
*  Don't bother checking the XPUT return code here, because                     
*  there is nothing we should do if the PUT failed for any reason.              
         END                                                                    
*-                                                                              
*-    No Active files to recover, build a default empty Active file.            
*-                                                                              
         IF    (CPACTNO,Z),BEGIN   No default active found...                   
         INCR  R15,CPACTMAX        New active file number                       
         ST    R15,CPACTNO         Ditto                                        
*                                                                               
         CLEAR CPAINFO                                                          
         MVC   CPANAME,=CL8'DUMMY'                                              
         MVC   CPATYPE,=CL8'TEXT'                                               
         MVC   CPACLNO,=F'-1000'   No current lineno                            
         END                                                                    
*-                                                                              
*-       Finally, switch into default Active file.                              
*-                                                                              
         L     R0,CPACTNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch into default                          
*                                                                               
         CLEAR R15                 Set good rc                                  
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CHKACT - Check for empty ACTIVE file.                                        
*                                                                               
*  On Exit:                                                                     
*       R15 - cc=zero, null ACTIVE file                                         
*             cc=nz, ACTIVE file is not empty                                   
*                                                                               
*                                                                               
CHKACT   XPROC ,                                                                
         L     R15,CPALNCT         Current active file line count               
         PEND  ,                                                                
         EJECT                                                                  
ACLRWA   RECORD BEGIN                                                           
ACLRINFO DS    XL(L'AINFO)         Working AINFO area                           
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  CLRACTS -- Routine to clear all Active files.                                
*                                                                               
*    Returns only if all Active files have been changed.                        
*                                                                               
CLRACTS  XPROC ACLRWA                                                           
         CLEAR ACLRWA                                                           
*-                                                                              
*-       If CLEAR was specified then it's OK to CLEAR the unchanged             
*-         Actives.                                                             
*-                                                                              
         IF    CPFKEEP,BEGIN       KEEP...                                      
         ABORT 'KEEP option not allowed here.'                                  
         END                                                                    
*                                                                               
         IF    CPFCLEAR,BEGIN      CLEAR...                                     
         ACALL CLRMULT             Go to it                                     
         END                                                                    
*-                                                                              
*-       Ask the user if it's ok to clear the remaining Actives.                
*-                                                                              
         IF    (CPATTEXT,NZ),BEGIN                                              
         TSEG  'You still have '                                                
         IF    CPFCLEAR,'TSEG "changed "'                                       
         TSEG  'Active file(s):',,CR                                            
*-                                                                              
*-       Show Active files from lowest to highest.                              
*-                                                                              
         CLEAR R4                  Start at first possible                      
*                                                                               
         LOOP  BEGIN               Go through Actives...                        
         LA    R1,=CL8'TEXT'                                                    
         LR    R15,R4                                                           
         ACALL ACTNEXT             Get next Active file number                  
         IF    Z,EXIT              No more, scram                               
*                                                                               
         LR    R4,R15                                                           
         SETMSG ACLRINFO                                                        
         ACALL ACTGINFO            Get AINFO for this Active file               
         FAIL  NZ,ADISPERR,'Multiple Active file logic error.'                  
*                                                                               
         LA    R3,ACLRINFO                                                      
         WITH  (AINFO,R3)                                                       
         LR    R15,R4                                                           
         SETMSG AINFO                                                           
         ACALL ACTDISP             Show info from this Active file              
         IF    NZ,EXIT             Attn, scram                                  
         END                                                                    
*                                                                               
         SETMSG 'OK to Clear'                                                   
         VCALL YESREQ              We need a YES                                
*                                                                               
         SET   CPFCLEAR+CPFNWARN   Clear ALL Actives                            
         ACALL CLRMULT             Do it                                        
         END                                                                    
*                                                                               
         CLEAR R0,R1                                                            
         VCALL SETVINFO            Initialize view position                     
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CLRMULT -- Routine to clear all text Active files.                           
*                                                                               
CLRMULT  XPROC ,                                                                
*-                                                                              
*-       Go through Actives.                                                    
*-                                                                              
         CLEAR R4                  R4 = Active file to return to                
         IF    (CPATYPE,NE,=CL8'TEXT'),'L R4,CPACTNO'                           
*                                                                               
         LA    R5,1                Start at the very beginning                  
         LOOP  BEGIN                                                            
         LA    R1,=CL8'TEXT'       Active file type to match                    
         LR    R15,R5                                                           
         ACALL ACTFIRST            Find next Active file                        
         IF    Z,EXIT                                                           
         ACALL ACTPICK             Pick it                                      
*                                                                               
         L     R5,CPACTNO          Current Active file number                   
         LA    R5,@R5+1            For loop                                     
*                                                                               
         LH    R15,CPWRNCNT        User's WARN=xxx count                        
         IF    (^CPFNWARN,AND,                                         *        
               ((R15,NZ),AND,(CPACHCT,GE,R15))),BEGIN  Don't clear              
         IF    (R4,Z),'L R4,CPACTNO'  Remember Active file number               
         END                                                                    
*                                                                               
         ELSE  BEGIN               Clear this Active file...                    
*-                                                                              
*-       Clear this active file.                                                
*-                                                                              
         IF    ^CPAFLOCK,BEGIN     Not locked...                                
         SET   CPAFCLR             Mark it cleared                              
         IF    (CPALNCT,NZ),BEGIN                                               
         IF    (CPATYPE,EQ,'TEMP'),'DECR R15,CPATTEMP'                          
         ELSE  'DECR R15,CPATTEXT'                                              
         INCR  R15,CPATCLR         Update cleared actives MPD                   
         END                                                                    
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R0,R1                                                            
         VCALL SETVINFO            Initialize view position                     
*-                                                                              
*-       Return to a previous Active file if there is one we                    
*-         didn't clear.  Otherwise open a new empty Active file.               
*-                                                                              
         IF    ('LTR R15,R4',NZ),'VCALL ACTPICK'  Select it                     
         ELSE  'ACALL ACTOPEN'                                                  
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
CTXTWA   RECORD BEGIN                                                           
CTXA     AINFO ,                   Working AINFO area                           
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CLRTEXT -- Routine to clear or keep the current Active file.                 
*    This routine will ask the user what to do if CLEAR/KEEP                    
*    is not explicit.                                                           
*                                                                               
*    On exit:                                                                   
*      The current Active file will be empty.                                   
*                                                                               
CLRTEXT  XPROC CTXTWA                                                           
*-                                                                              
*-       CLEAR/KEEP the current Active file.                                    
*-                                                                              
         IF    (CPGFCLR,AND,^CPFKEEP),'SET CPFCLEAR'  CLEAR default             
*-                                                                              
*-       If the Active file has changed always ask if ok to clear.              
*-                                                                              
         LH    R15,CPWRNCNT        User's WARN=xxx count                        
         IF    (^CPFNWARN,AND,                                         *        
               ((R15,NZ),AND,(CPACHCT,GE,R15))),BEGIN  Warn...                  
         IF    (CPACHCT,NZ),'CLEAR CPFCLEAR'  Reset CLEAR                       
         END                                                                    
*-                                                                              
*-       Re-use the current Active file if it is empty.                         
*-                                                                              
         IF    ^CPAFLOCK,BEGIN     Not locked...                                
         IF    (CPALNCT,Z),CLRREUSE  Re-use this Active if empty                
         END                                                                    
*-                                                                              
*-       Ask the user what to do if CLEAR/KEEP is not explicit.                 
*-                                                                              
         IF    (CPFCLEAR+CPFKEEP,Z),BEGIN  Ask user what to do...               
         IF    (CPACHCT,NZ),BEGIN  Changed Active file...                       
         TSEG  'Active '                                                        
         TNUM  L:CPACTNO                                                        
         TSEG  CVBLANKS,1                                                       
         TSEG  CPANAME,,T                                                       
         TSEG  ' has '                                                          
         TNUM  L:CPACHCT                                                        
         SETMSG ' changes.'                                                     
         IF    (CPACHCT,EQ,1),'SETMSG " change."'                               
         TSEG  (R1),(R0),CR                                                     
         END                                                                    
*                                                                               
         SCPUSH ,                                                               
CXRLOOP  TREAD 'OK to Clear (Yes/No/Keep)',,Q                                   
         BNZ   CVNOACTN            BREAK                                        
         SCINIT (R1),(R0)                                                       
         SCAN  CLRTPRT             Look for Yes/No/Keep                         
         SCANCHK                                                                
         IF    (R15,EQ,8),CXRLOOP                                               
         CLEAR R15                                                              
         SCPOP ,                                                                
         END                                                                    
*-                                                                              
*-       Clear the current Active file.                                         
*-                                                                              
*-         Note that "clearing" the Active file consists of                     
*-         setting the cleared flag.  This allows the user to                   
*-         recover accidentally cleared Active files.                           
*-                                                                              
         IF    CPFCLEAR,BEGIN      Clear...                                     
         IF    CPAFLOCK,EXIT       Locked, forget it                            
         SET   CPAFCLR             Active is cleared                            
         IF    (CPATYPE,EQ,'TEMP'),'DECR R15,CPATTEMP'                          
         ELSE  'DECR R15,CPATTEXT'                                              
         INCR  R15,CPATCLR         Count cleared Actives                        
         END                                                                    
*-                                                                              
*-       Use the current Active file if it's empty;                             
*-         otherwise open a new Active file.                                    
*-                                                                              
         LA    R1,=CL8'TEXT'                                                    
         L     R15,=F'-1'                                                       
         ACALL ACTLAST             Find last Active file                        
         IF    Z,'ACALL ACTOPEN'   Open a new Active file                       
*                                                                               
         ELSE  BEGIN                                                            
         ACALL ACTPICK             Pick last Active file                        
         IF    CPAFDEF+CPAFLOCK,BEGIN  We need to open new...                   
         ACALL ACTOPEN                                                          
         END                                                                    
         END                                                                    
*-                                                                              
*-       Always reset the AINFO.                                                
*-                                                                              
CLRREUSE LABEL ,                                                                
         MVC   CTXAPRNO,CPAPRNO    Preserve...                                  
         MVC   CTXANXNO,CPANXNO    ...these                                     
         MVC   CTXATYPE,CPATYPE    ...fields                                    
         CLEAR CPAINFO             Initialize AINFO                             
         MVC   CPAPRNO,CTXAPRNO    Preserve...                                  
         MVC   CPANXNO,CTXANXNO    ...these                                     
         MVC   CPATYPE,CTXATYPE    ...fields                                    
*                                                                               
         MVC   CPANAME,=CL8'NEW'                                                
         MVC   CPACLNO,=F'-1000'   No current lineno                            
*                                                                               
         CLEAR R0,R1                                                            
         VCALL SETVINFO            Initialize view position                     
*                                                                               
*                                                                               
         CLEAR CPFKEEP+CPFCLEAR    Reset pending flags                          
*                                                                               
         PEND  ,                                                                
***                                                                             
***  OK to Clear prompt options.                                                
***                                                                             
CLRTPRT  SCKW  ,CXRMSG,NULL                                                     
         SCKW  YES,CXRCLEAR                                                     
         SCKW  Y,CXRCLEAR                                                       
         SCKW  OK,CXRCLEAR                                                      
         SCKW  NO,CXRABORT                                                      
         SCKW  N,CXRABORT                                                       
         SCKW  KEEP,CXRKEEP,A                                                   
         SCKW  K,CXRKEEP                                                        
         SCKW  QUIT,CXRABORT,A                                                  
         SCKW  Q,CXRABORT                                                       
         SCKW  ,CXRMSG                                                          
*                                                                               
CXRMSG   PROC  ,                                                                
         TSEG  'Answer YES, NO or KEEP.',,CR                                    
         LA    R15,8                                                            
         PEND  ,                                                                
*                                                                               
CXRCLEAR PROC  ,                                                                
         SET   CPFCLEAR,(CPFKEEP,OFF)                                           
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
CXRKEEP  PROC  ,                                                                
         SET   CPFKEEP,(CPFCLEAR,OFF)                                           
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
CXRABORT PROC  ,                                                                
         B     CVNOACTN            No action taken                              
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
GLINFOWA RECORD BEGIN                                                           
GXINORIG DS    F                   Original line-number requested               
GXINLNO  DS    F                   Working line-number                          
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  GETLINFO -- Routine to get a line from the Active file.                      
*                                                                               
*  ** NOTE: **                                                                  
*  AS OF OCTOBER 1990, THIS INFORMATION IS NO LONGER KEPT.                      
*  THIS ROUTINE JUST RETURNS ZEROS TO INFO AREA.                                
*                                                                               
*    On entry:                                                                  
*      R15 - line-number of line to get                                         
*      R1,R0 - put line info here (loc, len)                                    
*                                                                               
*    On exit:                                                                   
*      R1 - AREA ZEROED UP TO (CEIL R0,L'LNINFO) BYTES                          
*                                                                               
*                                                                               
GETLINFO XPROC GLINFOWA                                                         
*                                                                               
         CEIL  R0,L'LNINFO         ZERO A MAXIMUM OF L'LINFO BYTES              
*                                                                               
         COMMENT                   ZERO AREA OF L'LNINFO BYTES                  
         LR    R2,R1               loc,len for result                           
         LR    R3,R0                                                            
         CLEAR R5                  zero length, w/ zero pad char                
         MVCL  R2,R4               zero area w/zero pad                         
*                                                                               
         PRETURN (R0)              Return accurate length                       
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
GLNOWA   RECORD BEGIN                                                           
GLNOORIG DS    F                   Original line-number requested               
GLNOLNO  DS    F                   Working line-number                          
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  GETLNO -- Routine to match a line-number in the Active file.                 
*                                                                               
*    On entry:                                                                  
*      R15 - line-number of line to match                                       
*                                                                               
*    On exit, R15 (and cc):                                                     
*     -4 - past end of file; CPLCNO set to CVMAXLNO                             
*      0 - ok; line-number is in CPLCNO                                         
*      4 - not found; next line-number is in CPLCNO                             
*                                                                               
GETLNO   XPROC GLNOWA                                                           
         ST    R15,GLNOORIG        Save original line-number                    
         ST    R15,GLNOLNO         Save working line-number                     
*                                                                               
         ST    R15,GLNOORIG        Save line-number                             
         ST    R15,GLNOLNO         Ditto                                        
*                                                                               
         LA    R15,CPTEXT                                                       
         LA    R2,GLNOLNO                                                       
         VCALL XLOCLINE            Locate line                                  
*                                                                               
         IF    NZ,BEGIN            Past end of file...                          
         MVC   CPLCNO,CVHILNO      Set max possible                             
         LH    R15,=H'-4'          Past eof                                     
         END                                                                    
*                                                                               
         ELSE  BEGIN               Found the line...                            
         IF    (GLNOLNO,LGT,CVMAXLNO),BEGIN                                     
         MVC   CPLCNO,CVHILNO      Set max possible                             
         LH    R15,=H'-4'          Set return code                              
         END                                                                    
         ELSE  BEGIN               We have a line...                            
         L     R2,GLNOLNO                                                       
         IF    (R2,NE,GLNOORIG),'LA R15,4'  We are returning next               
         ST    R2,CPLCNO           Save for caller                              
         END                                                                    
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
GLINEWA  RECORD BEGIN                                                           
GLINORIG DS    F                   Original line-number requested               
GLINLNO  DS    F                   Working line-number                          
GLINRGX3 DS    3F                  Working R15-R1 save area                     
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  GETLINEX -- Extended version of GETLINE.  This routine can                   
*    get a line from any Active file.                                           
*                                                                               
*    On entry:                                                                  
*      R15 - line-number of line to get                                         
*      R1 - put line text here (&LINESZ bytes)                                  
*      R2 - Active file number (0 means current)                                
*                                                                               
*    On exit, R15 (and cc):                                                     
*     -4 - past end of file                                                     
*      0 - ok; R1,R0 = line loc, len                                            
*      4 - not found; R1,R0 = next line loc, len                                
*                                                                               
*      CPLCNO contains the line-number.                                         
*                                                                               
GETLINEX XPROC ,                                                                
         ACALL GETLBASE            --> Join common code                         
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETLINE -- Routine to get a line from the current Active file.               
*                                                                               
*    On entry:                                                                  
*      R15 - line-number of line to get                                         
*      R1 - put line text here (&LINESZ bytes)                                  
*                                                                               
*    On exit, R15 (and cc):                                                     
*     -4 - past end of file                                                     
*      0 - ok; R1,R0 = line loc, len                                            
*      4 - not found; R1,R0 = next line loc, len                                
*                                                                               
*      CPLCNO contains the line-number.                                         
*                                                                               
GETLINE  XPROC ,                                                                
         CLEAR R2                  Current Active file                          
         ACALL GETLBASE                                                         
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         SPACE                                                                  
*-                                                                              
*-       Common GETLINE/GETLINEX entry is here.                                 
*-                                                                              
*-       SEE COMMENTS ABOVE                                                     
*-                                                                              
*-                                                                              
GETLBASE PROC  GLINEWA                                                          
*                                                                               
         LR    R4,R1                                                            
         ST    R15,GLINORIG        Save line-number                             
         ST    R15,GLINLNO         Ditto                                        
*-                                                                              
*-       Switch Active files if necessary.                                      
*-         Note that since we are only reading the Active file                  
*-         we don't need to go through the ACTPICK logic.                       
*-                                                                              
         LTR   R6,R2               Different than current Active?               
         IF    NZ,BEGIN            Yes...                                       
         STM   R15,R1,GLINRGX3     Save regs                                    
         LR    R0,R2                                                            
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch Actives                               
         LR    R6,R15              Save previous Active file number             
         LM    R15,R1,GLINRGX3     Restore regs                                 
         END                                                                    
*-                                                                              
*-       Get the line contents.                                                 
*-                                                                              
         LA    R15,CPTEXT          Active file record group                     
         LA    R2,GLINLNO                                                       
         VCALL XLOCLINE            Locate line                                  
*                                                                               
         IF    NZ,BEGIN            Past end of file...                          
         MVC   CPLCNO,CVHILNO      Set max possible                             
         LH    R15,=H'-4'          Past eof                                     
         END                                                                    
*                                                                               
         ELSE  BEGIN               Found the line...                            
         IF    (GLINLNO,LGT,CVMAXLNO),BEGIN                                     
         MVC   CPLCNO,CVHILNO      Set max possible                             
         LH    R15,=H'-4'          Set return code                              
         END                                                                    
         ELSE  BEGIN               We have a line...                            
         LR    R2,R1               Data address                                 
         CEIL  R0,&LINESZ                                                       
         LR    R3,R0               Data length                                  
         O     R3,=A(X'40000000')  Pad with blanks                              
         LA    R5,&LINESZ                                                       
         MVCL  R4,R2               Move in data (and blank pad)                 
*                                                                               
         L     R2,GLINLNO                                                       
         IF    (R2,NE,GLINORIG),'LA R15,4'  We are returning next               
         ST    R2,CPLCNO           Save for caller                              
         END                                                                    
         END                                                                    
*-                                                                              
*-       Past end of file, return null line.                                    
*-                                                                              
         IF    (R15,NEG),BEGIN     Past end of file...                          
         MVC   @R4(&LINESZ),CVBLANKS                                            
         CLEAR R0                                                               
         END                                                                    
*-                                                                              
*-       Switch back to original Active file if necessary.                      
*-                                                                              
         IF    (R6,NZ),BEGIN       We need to switch back...                    
         STM   R15,R1,GLINRGX3                                                  
         LR    R0,R6               Previous Active file number                  
         LA    R15,CPTEXT          Active file record group                     
         VCALL XSETSET             Switch back                                  
         LM    R15,R1,GLINRGX3                                                  
         END                                                                    
*                                                                               
*                                                                               
         PRETURN (R0)              Return accurate length                       
         PEND  ,                                                                
         EJECT                                                                  
PLINEWA  RECORD BEGIN                                                           
PLINLNO  DS    F                   Working line-number                          
PLINLEN  DS    F                   Text data length                             
PLINPTRS DS    2A                  Working line loc, len                        
*                                                                               
PLINOPT  DS    CL4                 Option flags                                 
*                                                                               
PLINTEXT DS    CL(&LINESZ)         Line text                                    
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  PUTLINEX -- Routine to add/replace a line in the Active file.                
*    This entry point is used when the caller needs to pass special             
*    options.                                                                   
*                                                                               
*    On entry:                                                                  
*      R15   - line-number                                                      
*      R1,R0 - line text loc, len                                               
*      @R2   - four character options flags:                                    
*                 "...." - nothing special                                      
*                 "I..." - Insert mode only                                     
*                 "R..." - Replace mode only                                    
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*     -4 - can't insert/replace because of option setting                       
*                                                                               
PUTLINEX XPROC ,                                                                
         ACALL PUTLBASE            --> Join common code                         
         PEND  ,                   (Never executed)                             
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PUTLINE -- Routine to add/replace a line in the Active file.                 
*                                                                               
*    On entry:                                                                  
*      R15 - line-number                                                        
*      R1,R0 - line text loc, len                                               
*                                                                               
*    Returns only if ok.                                                        
*                                                                               
PUTLINE  XPROC ,                                                                
         LA    R2,=C'....'         Set option flags                             
         ACALL PUTLBASE                                                         
         PEND                                                                   
         SPACE                                                                  
*-                                                                              
*-       Common PUTLINE/PUTLINEX entry is here.                                 
*-                                                                              
*-       SEE COMMENTS ABOVE                                                     
*-                                                                              
*-                                                                              
PUTLBASE PROC  PLINEWA                                                          
*                                                                               
         MVC   PLINOPT,@R2         Save option settings                         
         ST    R15,PLINLNO         Save line-number                             
         IF    ((R15,NEG),OR,(R15,GT,CVMAXLNO)),BEGIN                           
         ABORT 'Can''t add line.  Line '                                        
         L     R0,PLINLNO                                                       
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         ABORT ' is not a valid line-number.'                                   
         END                                                                    
*                                                                               
         IF    CPAFPRT,BEGIN       Protected Active file...                     
         ABORT 'This Active file can not be modified.'                          
         END                                                                    
*                                                                               
         IF    (R0,NEG),'CLEAR R0'                                              
         CEIL  R0,&LINESZ          Make sure length is within bounds            
*-                                                                              
*-       Trim trailing blanks.                                                  
*-                                                                              
         LR    R15,R1                                                           
         AR    R15,R0                                                           
         DECR  R15                                                              
         IF    (R0,POS),BEGIN      Trim trailing blanks...                      
PUTLTRIM IF    (@R15,NE,' '),EXIT  Done, scram                                  
         DECR  R15                 Back up                                      
         BCT   R0,PUTLTRIM         Loop back                                    
         END                                                                    
*                                                                               
         ST    R0,PLINLEN          Save text length                             
*-                                                                              
*-       If it's an empty Active file save the creation time/date.              
*-                                                                              
         IF    (CPALNCT,Z),BEGIN   Empty Active file...                         
         MVC   CPAICLK,CPCLCK      Save creation TOD                            
         IF    (CPATYPE,EQ,'TEMP'),'INCR R15,CPATTEMP'                          
         ELSE  'INCR R15,CPATTEXT'  Count number of Actives                     
         ACALL ACTPFX              Set the prefix if USE                        
         END                                                                    
*-                                                                              
*-       Now copy the line text.                                                
*-                                                                              
         LA    R4,PLINTEXT         Our line text area                           
         LR    R5,R0                                                            
         LR    R2,R1               Caller's line text ptr                       
         LR    R3,R0                                                            
         MVCL  R4,R2               Copy line text                               
*                                                                               
*                                                                               
         LA    R1,PLINTEXT         Start of data                                
         STM   R0,R1,PLINPTRS      Save data loc, len                           
*-                                                                              
*-       Check for Active file too large.                                       
*-                                                                              
         IF    (CPATBYTS,GT,=A(CPATMAX#)),BEGIN  Big Active...                  
         ACALL ACTPURGE            Try to purge old cleared actives             
*                                                                               
         IF    (CPATBYTS,GT,=A(CPATLIM#)),BEGIN  Tina's too too much            
         LA    R15,=CL8'ACTFULL'                                                
         VCALL LOGCMD                                                           
         ABORT 'Active file space is full.'                                     
         END                                                                    
         END                                                                    
*-                                                                              
*-       We need to know if we are replacing the line to maintain               
*-         the line and byte counts.                                            
*-                                                                              
*-                                                                              
*-       Add/replace line.                                                      
*-                                                                              
         LA    R3,PLINOPT          Option flags                                 
         LA    R2,PLINLNO                                                       
         LM    R0,R1,PLINPTRS                                                   
         LA    R15,CPTEXT          Active file record group                     
         VCALL XPUTLINE            Save line in ACTIVE file                     
         IF    NZ,BEGIN            Error...                                     
         IF    (R15,EQ,12),'LH R15,=H"-4"; B PUTLEXIT'  Ins/Rep                 
         LA    R15,=CL8'ACTFULL'                                                
         VCALL LOGCMD                                                           
         ABORT 'Active file space is full.'                                     
         END                                                                    
*                                                                               
         ELSE  BEGIN               OK...                                        
         IF    (R0,NL),BEGIN       IF REPLACE, FIX COUNTS                       
         DECR  R15,CPATLINS                                                     
         DECR  R15,CPALNCT                                                      
*                                                                               
         L     R15,CPATBYTS                                                     
         SR    R15,R0                                                           
         ST    R15,CPATBYTS                                                     
         L     R15,CPABYCT                                                      
         SR    R15,R0                                                           
         ST    R15,CPABYCT                                                      
         END                                                                    
*                                                                               
         SET   CPAFDEF             Active is defined now                        
         INCR  R15,CPATLINS        Total lines for all Actives                  
         INCR  R15,CPALNCT         Keep accurate line count                     
         IF    (R15,EQ,1),'MVC CPAFLNO,PLINLNO; MVC CPALLNO,PLINLNO'            
         IF    (PLINLNO,LT,CPAFLNO),'MVC CPAFLNO,PLINLNO'  First                
         IF    (PLINLNO,GT,CPALLNO),'MVC CPALLNO,PLINLNO'  Last                 
*                                                                               
         L     R15,CPATBYTS                                                     
         A     R15,PLINLEN                                                      
         ST    R15,CPATBYTS        New total for all Actives                    
*                                                                               
         L     R15,CPABYCT                                                      
         A     R15,PLINLEN                                                      
         ST    R15,CPABYCT         New total byte count                         
*                                                                               
         MVC   CPSTLNO,PLINLNO     Save last lineno STOWed                      
         L     R0,PLINLNO          Line-number being changed                    
         VCALL PAGEMARK            Mark it if in current page                   
         END                                                                    
*                                                                               
*                                                                               
         CLEAR R15                 Set good return code                         
PUTLEXIT PEND  ,                                                                
         EJECT                                                                  
PUTCB    RECORD 'PUTCB'            PUTBYTES control block                       
*                                                                               
ASCII$LF EQU   X'0A',,C'N'         ASCII line-feed                              
ASCII$CR EQU   X'0D',,C'N'         ASCII carriage-return                        
*                                                                               
$LF      EQU   1,,C'N'             Our code for line-feed                       
$CR      EQU   2,,C'N'             Our code for carriage return                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PUTBYTES -- Routine to put a stream of bytes in to the Active                
*    file based on the options specified in the PUTWA.                          
*                                                                               
*    Note:  This routine currently assumes that the data is an                  
*      ASCII stream of bytes.  If it were ever necessary, a flag                
*      could be added to the PUTCB saying that the data was in                  
*      EBCDIC.                                                                  
*                                                                               
*    On entry:                                                                  
*      R1,R0 - buffer loc, len  (R0 = -1 = flush buffer request)                
*      R15 - PUTCB ptr                                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      4 - time to stop (count exhausted, stop text match, etc.)                
*                                                                               
PUTBWA   RECORD BEGIN                                                           
PUTBLPTR DS    A                   Start of line ptr                            
PUTBLLEN DS    H                   Working line length                          
PUTBINIT EQU   PUTBLPTR,*-PUTBLPTR,C'X'                                         
*                                                                               
PUTBMAXL EQU   2048,,C'N'          Maximum buffer size we can handle            
PUTBAREA DS    XL(L'PUTRESBF+PUTBMAXL)  Working buffer                          
         END                                                                    
*-                                                                              
PUTBYTES XPROC PUTBWA                                                           
         CLEAR PUTBINIT                                                         
*                                                                               
         LR    R6,R15              PUTCB ptr                                    
         WITH  (PUTCB,R6)                                                       
         LR    R5,R1               Save buffer loc...                           
         LR    R4,R0               ...and len                                   
*-                                                                              
*-       Set PUTCB defaults if they have not already been set.                  
*-                                                                              
         IF    (PUTMAXLN,Z),'MVC PUTMAXLN,=AL2(&LINESZ)'  Set max               
         IF    (PUTLNO,Z),'VCALL ENDLNO; ST R0,PUTLNO'  END lineno              
         IF    ^CPFTYPED,'SET PUTFACTCT'  Non-typed command                     
*-                                                                              
*-       Flush buffer request.                                                  
*-                                                                              
         IF    (R4,NEG),BEGIN      Empty buffer...                              
         SETMSG PUTRESBF,LH:PUTRESLN  Residual text                             
*                                                                               
         IF    ('LTR R15,R0',POS),BEGIN  Translate data...                      
         IF    ^PUTFTRAN,BEGIN     Don't translate the data                     
         MOVE  R15,PUTBAREA,@R1    Make a copy of the data                      
         LA    R1,PUTBAREA         Copy of the line                             
         L     R2,CVEB7TBL         ASCII-7 to EBCDIC translate table            
         EX    R15,'TR @R1(0),@R2'  Translate ASCII to EBCDIC                   
         END                                                                    
*                                                                               
         L     R15,PUTLNO          Line-number                                  
         VCALL PUTLINE             Add it to the Active file                    
         IF    ^PUTFACTCT,'INCR R15,CPACHCT; SET PUTFACTCT'  Change             
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         B     PBYTEXIT            Scram                                        
         END                                                                    
*-                                                                              
*-       Build our working buffer.                                              
*-                                                                              
         LA    R0,PUTBAREA         Start of our buffer                          
         LH    R1,PUTRESLN         Length of previous residual data             
         IF    (R1,POS),BEGIN      We have residual data...                     
         LA    R2,PUTRESBF         Residual buffer                              
         LR    R3,R1                                                            
         MVCL  R0,R2               Copy in residual data                        
         END                                                                    
*                                                                               
         LR    R1,R4               Data length                                  
         LR    R2,R5               Original data ptr                            
         LR    R3,R1                                                            
         MVCL  R0,R2               Copy data                                    
*                                                                               
         LA    R5,PUTBAREA         R5 = start of data ptr                       
         AH    R4,PUTRESLN         R4 = total buffer length                     
         CLEAR PUTRESLN            Reset residual length                        
*                                                                               
         ST    R5,PUTBLPTR         Set start of line ptr                        
         CLEAR PUTBLLEN            Reset line length                            
*-                                                                              
*-       Look for ending character.                                             
*-                                                                              
         LOOP  BEGIN               Look for ending character...                 
         LTR   R15,R4              Length of data remaining                     
         IF    NP,EXIT             All done, scram                              
*                                                                               
         CEIL  R15,256                                                          
         LA    R1,@R5(R15)                                                      
         CLEAR R2                  Pre-clear; TRT sets low byte                 
         DEX   R15,'TRT @R5(0),PBYTTRT'  Look for ending character              
         LR    R3,R1                                                            
         SR    R3,R5               Length to skip                               
         IF    POS,'CLEAR PUTFGOTCR'  Data invalidates LF check                 
*                                                                               
         LH    R15,PUTBLLEN        Current line length                          
         AR    R15,R3              New line length                              
         STH   R15,PUTBLLEN        Save it                                      
*                                                                               
         IF    (R2,NZ),'LA R3,@R3+1'  Length includes ending char               
         AR    R5,R3               Skip past line                               
         SR    R4,R3               Adjust length accordingly                    
*-                                                                              
*-       The line can either end with CR, CR/LF or just LF.                     
*-         Some special processing is needed here to avoid                      
*-         treating "CRLF" as two line terminators.                             
*-                                                                              
         IF    (R2,EQ,$CR),BEGIN   Stopped on CR...                             
         SET   PUTFGOTCR           Must check next byte for LF                  
         END                                                                    
*                                                                               
         ELSEIF (R2,EQ,$LF),BEGIN  Stopped on LF...                             
         IF    PUTFGOTCR,BEGIN     Ignore LF after CR...                        
         CLEAR PUTFGOTCR           Reset LF check flag                          
         ST    R5,PUTBLPTR         Line starts after LF                         
         CLEAR R2                  Don't stop here                              
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  'CLEAR PUTFGOTCR'   Reset CR found flag                          
*                                                                               
         IF    (R2,NZ),BEGIN       We have a complete line...                   
         CLEAR R15                 Standard PUTBLINE options                    
         SETMSG L:PUTBLPTR,LH:PUTBLLEN  Line text                               
         ACALL PUTBLINE            Save this line                               
         BNZ   PBYTEXIT            Time to stop, scram                          
*                                                                               
         ST    R5,PUTBLPTR         Set new start of line ptr                    
         CLEAR PUTBLLEN            Reset line length                            
         END                                                                    
         END                                                                    
*-                                                                              
*-       Handle last partial line in the buffer.  PUTBLINE                      
*-         will save the last little bit of the buffer in the                   
*-         "PUTRESBF", it will then be prepended to our next input.             
*-                                                                              
         IF    (PUTBLLEN,NZ),BEGIN  We have some final text...                  
         LA    R15,1               Save last line in "residual" buf             
         SETMSG L:PUTBLPTR,LH:PUTBLLEN  Line text                               
         ACALL PUTBLINE            Save line                                    
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok return code                             
PBYTEXIT PEND  ,                                                                
*-                                                                              
*-       Ending characters.                                                     
*-                                                                              
PBYTTRT  DC    256X'00'            Non-zero for ending chars                    
         ORG   PBYTTRT+ASCII$LF                                                 
         DC    AL1($LF)            LF                                           
         ORG   PBYTTRT+ASCII$LF+128                                             
         DC    AL1($LF)            LF (with parity on)                          
         ORG   PBYTTRT+ASCII$CR                                                 
         DC    AL1($CR)            CR                                           
         ORG   PBYTTRT+ASCII$CR+128                                             
         DC    AL1($CR)            CR (with parity on)                          
         ORG                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PUTBLINE -- Local routine to save a line of text in the Active               
*    file.  This is a subroutine of PUTBYTES which handles                      
*    wrapping/splitting the line if it is too long, and also                    
*    handles translation and stop character checking.                           
*                                                                               
*    On entry:                                                                  
*      R15 - flag: 0=normal                                                     
*                  1=save last line in residual buffer                          
*      R1,R0 - line loc, len                                                    
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      4 - time to stop (count exhausted, stop text match, etc.)                
*                                                                               
PLINWA   RECORD BEGIN                                                           
PLINFLAG FLAG                                                                   
         FLAG  PLINFWRAP           - We have wrapped this line                  
         FLAG  PLINFRESIDUAL       - Save line in residual buffer               
PLININIT EQU   PLINFLAG,*-PLINFLAG,C'X'                                         
*                                                                               
PLINAREA DS    CL(PUTBMAXL)        Working line area                            
         END                                                                    
*-                                                                              
PUTBLINE PROC  PLINWA                                                           
         CLEAR PLININIT                                                         
         IF    (R15,NZ),'SET PLINFRESIDUAL'  Set option flag                    
*                                                                               
         WITH  (PUTCB,R6)          Entry assumption                             
*                                                                               
         LR    R5,R1               Line loc...                                  
         LR    R4,R0               ...and length                                
*-                                                                              
*-       Copy line text.                                                        
*-                                                                              
         CEIL  R4,L'PLINAREA       Just for safety                              
         MOVEL PLINAREA,@R5,(R4)   Copy the line                                
         LA    R5,PLINAREA         Our line ptr                                 
*-                                                                              
*-       Expand tab character to blanks if necessary.                           
*-                                                                              
         IF    ^PUTFTABS,BEGIN     Expand tabs...                               
         SETMSG @R5,(R4)            Line area                                   
         LCR   R0,R0               Flag: data is in ASCII                       
         LA    R15,L'PLINAREA      Maximum buffer length                        
         VCALL DETAB               Expand any tabs                              
         LR    R4,R0               Updated line length                          
         END                                                                    
*-                                                                              
*-       If the line is too long split/wrap it and add multiple                 
*-         lines.                                                               
*-                                                                              
         WHILE (R4,GT,PUTMAXLN),BEGIN  Too big for us...                        
         SET   PLINFWRAP           We have wrapped this line                    
         LH    R3,PUTMAXLN         Split length                                 
*-                                                                              
*-       Back scan for a blank if WRAP (and not SPLIT).                         
*-                                                                              
         IF    PUTFWRAP,BEGIN      Wrap at a blank...                           
         LA    R2,@R5(R3)          Last+1 position                              
         WHILE (R3,POS),BEGIN      Backscan for blank...                        
         IF    ((@R2,EQ,X'20'),OR,(@R2,EQ,X'A0')),EXIT  ASCII blank             
         DECR  R2                  Back up                                      
         DECR  R3                  One less char now                            
         END                                                                    
*                                                                               
         IF    (R3,Z),'LH R3,PUTMAXLN'  If no blanks, use split len             
         END                                                                    
*-                                                                              
*-       Add the first half of the wrapped line to the Active file.             
*-                                                                              
         IF    ('LTR R15,R3',POS),BEGIN  Translate data...                      
         IF    PUTFTRAN,EXIT       Don't translate the data                     
         L     R2,CVEB7TBL         ASCII-7 to EBCDIC translate table            
         DEX   R15,'TR @R5(0),@R2'  Translate ASCII to EBCDIC                   
         END                                                                    
*                                                                               
         L     R15,PUTLNO          Line-number                                  
         SETMSG @R5,(R3)            Text                                        
         ACALL PUTLINE             Add it to the Active file                    
         IF    ^PUTFACTCT,'INCR R15,CPACHCT; SET PUTFACTCT'  Change             
*                                                                               
         L     R15,PUTLNO          Current lineno                               
         AL    R15,CPDELTA         Add delta for next lineno                    
         ST    R15,PUTLNO          Save new lineno                              
*                                                                               
         IF    (PUTCOUNT,NZ),BEGIN  We are counting lines...                    
         DECR  R15,PUTCOUNT        One less line to go                          
         IF    (R15,NP),'LA R15,4; B PLINEXIT'  All done, scram                 
         END                                                                    
*                                                                               
         AR    R5,R3               Kick buffer ptr                              
         SR    R4,R3               Adjust remaining length                      
*                                                                               
         IF    PUTFWRAP,BEGIN      Handle text after a wrap...                  
         WHILE (R4,POS),BEGIN      Trim leading blanks...                       
         IF    ((@R5,NE,X'20'),AND,(@R5,NE,X'A0')),EXIT  Non-blank              
         LA    R5,@R5+1            Next char                                    
         DECR  R4                  One less now                                 
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Save the last line in the residual buffer.                             
*-                                                                              
         IF    PLINFRESIDUAL,BEGIN  Save line in residual buffer...             
         STH   R4,PUTRESLN         Save length                                  
         MOVE  R4,PUTRESBF,@R5     Save text                                    
         B     PLINOK              All done                                     
         END                                                                    
*-                                                                              
*-       Translate line from ASCII to EBCDIC.                                   
*-                                                                              
         IF    ('LTR R15,R4',POS),BEGIN  Translate data...                      
         IF    PUTFTRAN,EXIT       Don't translate it                           
         L     R2,CVEB7TBL         ASCII-7 to EBCDIC translate table            
         DEX   R15,'TR @R5(0),@R2'  Translate ASCII to EBCDIC                   
         END                                                                    
*-                                                                              
*-       Check for line which matches STOP text.                                
*-                                                                              
         IF    PUTFSTOP,BEGIN      We have STOP text...                         
         IF    PLINFWRAP,EXIT      It's wrapped, don't check                    
         LH    R15,PUTSTLEN        Stop check text                              
         IF    (R4,NE,R15),EXIT    Our line isn't long enough                   
         IF    ((R15,Z),AND,(R4,Z)),PLINMAT  Matching null line                 
         CMPR  R15,PUTSTOP,PLINAREA  Does it match?                             
         IF    EQ,BEGIN            Yes, time to stop...                         
PLINMAT  LA    R15,4               Stop now                                     
         B     PLINEXIT            Scram                                        
         END                                                                    
         END                                                                    
*-                                                                              
*-       Add the line to the Active file.                                       
*-                                                                              
         L     R15,PUTLNO          Line-number                                  
         SETMSG @R5,(R4)            Text                                        
         VCALL PUTLINE             Add it to the Active file                    
         IF    ^PUTFACTCT,'INCR R15,CPACHCT; SET PUTFACTCT'  Change             
*                                                                               
         L     R15,PUTLNO          Current lineno                               
         AL    R15,CPDELTA         Add delta for next lineno                    
         ST    R15,PUTLNO          Save new lineno                              
*                                                                               
         IF    (PUTCOUNT,NZ),BEGIN  We are counting lines...                    
         DECR  R15,PUTCOUNT        One less line to go                          
         IF    (R15,NP),'LA R15,4; B PLINEXIT'  All done, scram                 
         END                                                                    
*                                                                               
PLINOK   CLEAR R15                 A-ok                                         
PLINEXIT PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PREVLNO -- Routine to get lineno of line before CPLCNO (if any).             
*                                                                               
*    On entry:                                                                  
*      CPLCNO - find line-number before this one                                
*                                                                               
*    On exit, R15 (and cc):                                                     
*     -8 - CPLCNO is line zero (CPLCNO unchanged)                               
*     -4 - CPLCNO is before first line-number (CPLCNO unchanged)                
*      0 - ok; CPLCNO contains previous line-number                             
*                                                                               
*                                                                               
PREVLNO  XPROC ,                                                                
         IF    (CPLCNO,NZ),BEGIN   Locate previous lineno...                    
         LA    R2,CPLCNO           Line-number is here                          
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCPREV            Get previous line-number                     
         IF    NZ,'LH R15,=H"-4"'  No previous line-number                      
         END                                                                    
*                                                                               
         ELSE  'LH R15,=H"-8"'     It's line zero                               
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
DRNGWA   RECORD BEGIN                                                           
DRNGFRST DS    F           [Order] First line-number to delete                  
DRNGLAST DS    F           [Order] Last line-number to delete                   
DRNGTEMP DS    F                   Working line-number                          
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  DELRANGE -- Routine to delete a range of lines.                              
*                                                                               
*    On entry:                                                                  
*      R0 - first line-number to delete                                         
*      R1 - last line-number to delete                                          
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ok                                                                   
*      NZ- range doesn't exist                                                  
*                                                                               
DELRANGE XPROC DRNGWA                                                           
         STM   R0,R1,DRNGFRST      Save first, last linenos                     
*-                                                                              
*-       Single line range, just get info on the single line.                   
*-                                                                              
         IF    (R0,EQ,R1),BEGIN    Get line/byte count for line...              
         MVC   DRNGTEMP,DRNGFRST                                                
         LA    R2,DRNGTEMP                                                      
         LA    R15,CPTEXT                                                       
         VCALL XLOCLINE            Locate old line                              
         IF    NZ,EXIT,DELRANGE    Line doesn't exist, scram                    
         IF    (DRNGTEMP,NE,DRNGFRST),'LA R15,4; EXIT DELRANGE'                 
         LA    R15,1               One line                                     
         END                                                                    
*-                                                                              
*-       Multiple line range, get line/byte counts.                             
*-                                                                              
         ELSE  BEGIN                                                            
         ACALL CNTRANGE            Get line and byte counts                     
         IF    Z,BEGIN             Range doesn't exist...                       
         LA    R15,4               Set return code                              
         EXIT  DELRANGE                                                         
         END                                                                    
         END                                                                    
*-                                                                              
*-       Update line and byte counts.                                           
*-         R15 = number of lines                                                
*-         R0  = byte count of all lines                                        
*-                                                                              
         L     R2,CPATLINS                                                      
         SR    R2,R15              Line count for all Actives                   
         ST    R2,CPATLINS                                                      
*                                                                               
         L     R2,CPALNCT                                                       
         SR    R2,R15              New line count for this Active               
         ST    R2,CPALNCT                                                       
*                                                                               
         L     R15,CPATBYTS        Total byte count for all Actives             
         SR    R15,R0              Deduct for line being deleted                
         ST    R15,CPATBYTS        Save new count                               
*                                                                               
         L     R15,CPABYCT         Byte count                                   
         SR    R15,R0              Deduct for line being deleted                
         ST    R15,CPABYCT         Save new count                               
*-                                                                              
*-       Delete single line.                                                    
*-                                                                              
         IF    (DRNGFRST,EQ,DRNGLAST),BEGIN  Single line range...               
         LA    R2,DRNGFRST         @lineno                                      
         LA    R15,CPTEXT          Active file record group                     
         VCALL XDELETE             Delete the line                              
         FAIL  NZ,DELRNG2,'DELRANGE logic error.'                               
         END                                                                    
*-                                                                              
*-       Delete range of lines.                                                 
*-                                                                              
         ELSE  BEGIN               Delete range of lines...                     
         LA    R0,DRNGFRST         @first lineno                                
         LA    R1,DRNGLAST         @last lineno                                 
         CLEAR R2                  (Don't span record groups)                   
         LA    R15,CPTEXT          Active file record group                     
         VCALL XDELRECS            Delete the range                             
         FAIL  NZ,DELRNG1,'DELRANGE logic error.'                               
         END                                                                    
*-                                                                              
*-       Update Active file information.                                        
*-                                                                              
         IF    (CPALNCT,NZ),BEGIN  Check first/last linenos...                  
         IF    (DRNGFRST,LE,CPAFLNO),BEGIN  Deleted first line...               
         CLEAR CPAFLNO                                                          
         LA    R2,CPAFLNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLINE            Get first line-number                        
         FAIL  NZ,DELRFIR,'DELRANGE logic error.'                               
         END                                                                    
*                                                                               
         IF    (DRNGLAST,GE,CPALLNO),BEGIN  Deleted last line...                
         MVC   CPALLNO,CVMAXLNO    Highest possible lineno                      
         LA    R2,CPALLNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLAST            Get last line-number                         
         FAIL  NZ,DELRLAST,'DELRANGE logic error.'                              
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Active file is empty...                      
         CLEAR CPAFLNO,CPALLNO     Reset first, last linenos                    
         CLEAR CPACHCT             Reset change count                           
         IF    (CPATYPE,EQ,'TEMP'),'DECR R15,CPATTEMP'                          
         ELSE  'DECR R15,CPATTEXT' Keep Active file count accurate              
         END                                                                    
*-                                                                              
*-       Inform page manager of deleted lines.                                  
*-                                                                              
         LM    R0,R1,DRNGFRST      First, last line-numbers                     
         VCALL PAGEDEL             Delete linenos from page image               
*                                                                               
         CLEAR R15                 A-ok                                         
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
CHOPWA   RECORD BEGIN                                                           
*                                                                               
CHOPFLAG FLAG                                                                   
*                                                                               
CHOPLNO  DS    F                   Existing line-number                         
CHOPNLNO DS    F                   New line-number                              
*                                                                               
CHOPLEN  DS    H                   Existing line length                         
CHOPNLEN DS    H                   New line length                              
CHOPCOL  DS    H                   Split column                                 
CHOPINIT EQU   CHOPFLAG,*-CHOPFLAG,C'X'                                         
*                                                                               
*                                                                               
CHOPLIN  DS    CL(&LINESZ)         Existing line                                
         DS    XL(&PRESSZ-&LINESZ)                                              
*                                                                               
CHOPNLIN DS    CL(&LINESZ)         New line                                     
         DS    XL(&PRESSZ-&LINESZ)                                              
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  CHOPLINE -- Routine to split a line.                                         
*                                                                               
*    On entry:                                                                  
*      R0 - column to chop line at                                              
*           (new line will begin at this column)                                
*      R15- line-number of line to split                                        
*                                                                               
*    On exit, R15 (and cc):                                                     
*     -4 - line doesn't exist; past end of file                                 
*      0 - ok; R0 - old line-number; R1 - newly created line-number             
*      4 - line doesn't exist                                                   
*                                                                               
CHOPLINE XPROC CHOPWA                                                           
         CLEAR CHOPINIT                                                         
*                                                                               
         LR    R6,R0               Column to split at                           
         FLOOR R6,1                                                             
         CEIL  R6,&LINESZ          (Better safe than sorry)                     
         STH   R6,CHOPCOL          Save split column                            
         DECR  R6                  We need column-1                             
*                                                                               
         ST    R15,CHOPLNO                                                      
         LA    R1,CHOPLIN                                                       
         ACALL GETLINE             Get the line                                 
         IF    Z,BEGIN             Got it...                                    
         STH   R0,CHOPLEN                                                       
*                                                                               
         LA    R0,1                Just adding one line                         
         L     R15,CHOPLNO         Add it after this lineno                     
         ACALL CHKLINES            Get a new lineno                             
         ST    R15,CHOPLNO         Old line-number (in case renum)              
         AR    R15,R1                                                           
         ST    R15,CHOPNLNO        New line-number to use                       
*                                                                               
         LA    R1,CHOPLIN          Text after split                             
         AR    R1,R6                                                            
         LH    R15,CHOPLEN                                                      
         SR    R15,R6                                                           
         IF    NEG,'CLEAR R15'                                                  
         STH   R15,CHOPNLEN        New line length                              
         MOVE  R15,CHOPNLIN,@R1    New line text                                
*-                                                                              
*-       Add the second line first, in case something goes wrong.               
*-                                                                              
         L     R15,CHOPNLNO                                                     
         SETMSG CHOPNLIN,LH:CHOPNLEN                                            
         ACALL PUTLINE             Add the new line                             
*-                                                                              
*-       Now replace the first line.                                            
*-                                                                              
         IF    (R6,LT,CHOPLEN),BEGIN  Need to replace it...                     
         L     R15,CHOPLNO                                                      
         SETMSG CHOPLIN,(R6)                                                    
         ACALL PUTLINE             Replace the first line                       
         END                                                                    
*-                                                                              
*-       Adjust the cursor and block pointers if necessary.                     
*-                                                                              
         IF    (CPVLNO,EQ,CHOPLNO),BEGIN  Cursor check...                       
         LH    R15,CPVCOL                                                       
         SR    R15,R6                                                           
         IF    NP,EXIT             Nothing has changed, scram                   
         CEIL  R15,&LINESZ                                                      
         STH   R15,CPVCOL          Set new cursor column                        
         MVC   CPVLNO,CHOPNLNO     ... and cursor line                          
         END                                                                    
*                                                                               
         IF    (CPBLKACT,EQ,CPACTNO),BEGIN  Block interactions...               
         IF    (CPFBKLNO,EQ,CHOPLNO),BEGIN  FBLOCK check...                     
         LH    R15,CPFBKCOL                                                     
         SR    R15,R6                                                           
         IF    NP,EXIT             Nothing has changed, scram                   
         CEIL  R15,&LINESZ                                                      
         STH   R15,CPFBKCOL        Set new FBLOCK column                        
         MVC   CPFBKLNO,CHOPNLNO   ... and FBLOCK line                          
         SET   CPVFMARK            Block has changed                            
         END                                                                    
*                                                                               
         IF    (CPLBKLNO,EQ,CHOPLNO),BEGIN  LBLOCK check...                     
         IF    ((CPLBKCOL,NZ),AND,(CPLBKCOL,LT,R6)),EXIT                        
*                                                                               
         LTH   R15,CPLBKCOL                                                     
         IF    NZ,BEGIN            Adjust ending column...                      
         SR    R15,R6                                                           
         FLOOR R15,1                                                            
         CEIL  R15,&LINESZ                                                      
         STH   R15,CPLBKCOL        Set new LBLOCK column                        
         END                                                                    
         MVC   CPLBKLNO,CHOPNLNO   Set new LBLOCK line                          
         SET   CPVFMARK            Block has changed                            
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                 Set RC                                       
         END                                                                    
*                                                                               
         L     R0,CHOPLNO          Existing line's line-number                  
         L     R1,CHOPNLNO         New line's line-number                       
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
JOINWA   RECORD BEGIN                                                           
*                                                                               
JOINFLAG FLAG                                                                   
*                                                                               
JOINOFLG FLAG                                                                   
         FLAG  (JOINFREV,2)        - Use next's line-number                     
         FLAG  (JOINFTRM,1)        - Trim leading blanks                        
*                                                                               
JOINMAXL DS    H                   Maximum allowable line length                
*                                                                               
JOINLNO  DS    F                   Existing line-number                         
JOINNLNO DS    F                   Next line-number                             
*                                                                               
JOINLEN  DS    H                   Existing line length                         
JOINNLEN DS    H                   Next line length                             
JOINBCNT DS    H                   Trimmed blank count                          
JOININIT EQU   JOINFLAG,*-JOINFLAG,C'X'                                         
*                                                                               
*                                                                               
JOINLIN  DS    CL(&LINESZ)         Existing line                                
         DS    XL(&PRESSZ-&LINESZ)                                              
*                                                                               
JOINNLIN DS    CL(&LINESZ)         Next line                                    
         DS    XL(&PRESSZ-&LINESZ)                                              
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  JOINLINE -- Routine to join two lines.                                       
*                                                                               
*    On entry:                                                                  
*      R0 - Flag:  0=normal;                                                    
*                  1=trim leading blanks                                        
*                  2=use next line's line-number                                
*      R1 - Maximum line length allowed (0=max)                                 
*      R15- Line number; the next line will be joined to this one.              
*                                                                               
*    On exit, R15 (and cc):                                                     
*     -4 - Line or next line doesn't exist; past end of file.                   
*      0 - Ok; R1=line-number of joined line                                    
*      4 - Line doesn't exist                                                   
*     20 - Line would be too long; no action taken                              
*                                                                               
JOINLINE XPROC JOINWA                                                           
         CLEAR JOININIT                                                         
*                                                                               
         STC   R0,JOINOFLG         Save options                                 
         IF    ((R1,LT,1),OR,(R1,GT,&LINESZ)),'LA R1,&LINESZ'                   
         STH   R1,JOINMAXL         Save max length                              
         ST    R15,JOINLNO                                                      
*                                                                               
         LA    R1,JOINLIN                                                       
         ACALL GETLINE             Get the line                                 
         IF    Z,BEGIN             Got it...                                    
*-                                                                              
*-   Force two blanks at the end of a sentence.  (Just add one blank            
*-         here, the other is the separator.)                                   
*-                                                                              
         IF    (R0,NZ),BEGIN                                                    
         LR    R15,R1                                                           
         AR    R15,R0                                                           
         DECR  R15                 Last character in line                       
         IF    ((@R15,EQ,'.'),OR,(@R15,EQ,'?'),OR,                     *        
               (@R15,EQ,'!'),OR,(@R15,EQ,':')),'INCR R0'                        
         END                                                                    
*                                                                               
         STH   R0,JOINLEN          Line length                                  
*                                                                               
         LA    R15,1                                                            
         A     R15,JOINLNO         Next line-number                             
         LA    R1,JOINNLIN                                                      
         ACALL GETLINE             Get the next line                            
         IF    NEG,EXIT            No next line, scram                          
         STH   R0,JOINNLEN                                                      
         MVC   JOINNLNO,CPLCNO                                                  
*                                                                               
         IF    JOINFTRM,BEGIN      Trim leading blanks...                       
         CLEAR R15                                                              
         WHILE ((R0,POS),AND,(@R1,EQ,' ')),BEGIN                                
         LA    R15,@R15+1          Leading blank count                          
         LA    R1,@R1+1                                                         
         DECR  R0                                                               
         END                                                                    
         IF    (R15,Z),EXIT        No leading blanks, scram                     
         STH   R15,JOINBCNT        Save trimmed blank count                     
         STH   R0,JOINNLEN         New length                                   
         LR    R15,R0                                                           
         MOVE  R15,JOINNLIN,@R1    Move text over                               
         END                                                                    
*                                                                               
         LH    R2,JOINLEN                                                       
         IF    (R2,LT,&LINESZ),BEGIN                                            
         IF    ((R2,Z),OR,(JOINNLEN,Z)),EXIT  No separator needed               
         LA    R1,JOINLIN(R2)                                                   
         MVI   @R1,C' '            Separating blank                             
         LA    R2,@R2+1                                                         
         STH   R2,JOINLEN          Save updated line length                     
         END                                                                    
*                                                                               
         LR    R0,R2                                                            
         AH    R0,JOINNLEN         New total length                             
         LA    R15,20              Preset bad RC                                
         IF    (R0,GT,JOINMAXL),EXIT  Too long, scram                           
*                                                                               
         LA    R3,JOINLIN(R2)                                                   
         LH    R15,JOINNLEN                                                     
         MOVE  R15,@R3,JOINNLIN    Join the line text                           
*                                                                               
         IF    JOINFREV,'FLIP (JOINLNO,JOINNLNO)'  Use next's lineno            
*                                                                               
         L     R15,JOINLNO                                                      
         SETMSG JOINLIN,(R0)                                                    
         ACALL PUTLINE             Add new joined line                          
*                                                                               
         L     R0,JOINNLNO                                                      
         LR    R1,R0                                                            
         ACALL DELRANGE            Delete second line                           
*-                                                                              
*-       Adjust the cursor and block pointers if necessary.                     
*-                                                                              
         LH    R2,JOINLEN          Text before joined line                      
*                                                                               
         IF    (CPVLNO,EQ,JOINNLNO),BEGIN  Cursor check...                      
         LH    R15,CPVCOL          Starting col in old line                     
         SH    R15,JOINBCNT        Adjust for trimmed blanks                    
         IF    NP,'LA R15,1'       Not too far                                  
         AR    R15,R2              Adjust for new line                          
         FLOOR R15,1                                                            
         CEIL  R15,&LINESZ                                                      
         STH   R15,CPVCOL          Save new cursor column                       
         MVC   CPVLNO,JOINLNO      ... and line-number                          
         END                                                                    
*                                                                               
         IF    (CPBLKACT,EQ,CPACTNO),BEGIN  Block interactions...               
         IF    (CPFBKLNO,EQ,JOINNLNO),BEGIN  FBLOCK check...                    
         LH    R15,CPFBKCOL        Starting col in old line                     
         SH    R15,JOINBCNT        Adjust for trimmed blanks                    
         IF    NP,'LA R15,1'       Not too far                                  
         AR    R15,R2              Adjust for new line                          
         FLOOR R15,1                                                            
         CEIL  R15,&LINESZ                                                      
         STH   R15,CPFBKCOL        Save new FBLOCK column                       
         MVC   CPFBKLNO,JOINLNO    ... and line-number                          
         SET   CPVFMARK            Block has changed                            
         END                                                                    
*                                                                               
         IF    (CPLBKLNO,EQ,JOINNLNO),BEGIN  LBLOCK check...                    
         LTH   R15,CPLBKCOL        Ending column in old line                    
         IF    NZ,BEGIN                                                         
         SH    R15,JOINBCNT        Adjust for trimmed blanks                    
         IF    NP,'LA R15,1'       Not too far                                  
         AR    R15,R2              Adjust for new line                          
         FLOOR R15,1                                                            
         CEIL  R15,&LINESZ                                                      
         END                                                                    
         STH   R15,CPLBKCOL        Save new LBLOCK column                       
         MVC   CPLBKLNO,JOINLNO    ... and line-number                          
         SET   CPVFMARK            Block has changed                            
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR R15                 A-ok                                         
         END                                                                    
*-                                                                              
*-       Finish up.                                                             
*-                                                                              
         L     R1,JOINLNO          Joined line-number                           
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         EJECT                                                                  
CNTWA    RECORD BEGIN                                                           
CNTFIRST DS    F           [Order] First line-number                            
CNTLAST  DS    F           [Order] Last line-number                             
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  CNTRANGE -- Routine to count the number of lines in a range.                 
*                                                                               
*    On entry:                                                                  
*      R0 - first line-number in range                                          
*      R1 - last line-number in range                                           
*                                                                               
*    On exit:                                                                   
*      R15 (and CC) - no. of lines in range                                     
*      R0 - total byte count of all lines in range                              
*           (byte count is for text only (not linenos))                         
*                                                                               
CNTRANGE XPROC CNTWA                                                            
         STM   R0,R1,CNTFIRST      Save first and last linenos                  
*                                                                               
         LA    R15,CPTEXT          Initialize line counter                      
         LA    R0,CNTFIRST         Initialize byte counter                      
         LA    R1,CNTLAST                                                       
         CLEAR R2                                                               
         VCALL XCNTRECS            Count lines and bytes                        
         PRETURN (R0)                                                           
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
CHKWA    RECORD BEGIN                                                           
CHKLNCNT DS    F                   Number of lines to be added                  
CHKAREA  DS    F                   Size of renumber area                        
CHKSTART DS    F                   Start of range to renumber                   
CHKEND   DS    F                   End of range to renumber                     
CHKLINE  DS    F                   Line after which to insert                   
CHKANCOR DS    F                   Line to anchor area enlargement              
CHKCNT   DS    F                   Number of range increases                    
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  CHKLINES -- Routine to verify that there are enough new                      
*    line-numbers to add new lines.  This routine will renumber                 
*    existing lines to provide enough space, if necessary.                      
*                                                                               
*    On entry:                                                                  
*      R15 - line-number; caller wants to add lines after this one              
*      R0  - number of lines to be added                                        
*                                                                               
*    On exit:                                                                   
*      R15 - line-number; same as on entry                                      
*            (unless there was a renumber)                                      
*      R1  - delta to use                                                       
*                                                                               
*                                                                               
*  Note:                                                                        
*    - 1st we see if lines will fit in space,  if not we look                   
*      for a range that will hold lines if renumbered                           
*    - The area for renumbering grows as follows 1, 1*2, 1*2*4,                 
*      1*2*4*8, 1*2*4*8*16,,, etc,,, this is fast!                              
*    - The area to be renumbered is renumbered in 2 parts,                      
*      before and after the line to be inserted.                                
*    - This routine has a few hard coded dependecies,  .01 is                   
*      the minimum delta accepted (change only with caution!).                  
*      Also the minimum area renumbered starts at 1 regardless                  
*      of users delta.                                                          
*                                                                               
*                                                                               
CHKLINES XPROC CHKWA                                                            
*                                                                               
         COMMENT                                                                
         CLEAR CHKWA                                                            
         ST    R0,CHKLNCNT                                                      
         ST    R15,CHKLINE                                                      
*                                                                               
         COMMENT                   Check entry parms                            
         IF    (R15,LGE,CVMAXLNO),BEGIN  Be reasonable...                       
         ABORT 'You can''t have lines after line &MAXLNO'                       
         END                                                                    
         FAIL  (R0,NP),AUTONUM1,'Auto-number for zero lines'                    
*-                                                                              
*-       1st, check if lines will fit with no renumbering                       
*-                                                                              
         COMMENT                   Get next line number                         
         L     R15,CHKLINE                                                      
         A     R15,CVONE                                                        
         ACALL GETLNO              Get existing line-number                     
         L     R1,CPLCNO                                                        
         IF    NEG,BEGIN                                                        
         L     R1,CVHILNO                                                       
         END                                                                    
         ST    R1,CHKEND                                                        
*                                                                               
         COMMENT                   Calculate if lines will fit                  
         CLEAR R2                                                               
         L     R3,CHKEND                                                        
         S     R3,CHKLINE          R2-R3 - area for new line                    
         DECR  R3                                                               
         L     R1,CHKLNCNT         R1 - new lines + 1                           
         INCR  R1                                                               
         DR    R2,R1                                                            
         LR    R1,R3                                                            
         IF    (R1,GE,CHKMIND),CHKLDONE   If lines fit, we're done              
*-                                                                              
*-                                                                              
*-   2nd try, loop trying to fit in larger ranges, we renumber lines            
*-         if needed                                                            
*-                                                                              
         COMMENT                   Find first integer line number               
         COMMENT                     before or at line to insert                
         L     R1,CPDELTA                                                       
         FLOOR R1,1000             1.000 is minimum renuber area                
         ST    R1,CHKAREA          (renumber area increment)                    
         CLEAR R2                                                               
         L     R3,CHKLINE                                                       
         DR    R2,R1                                                            
         MR    R2,R1                                                            
         ST    R3,CHKANCOR         save this line as anchor                     
*                                                                               
         COMMENT                   Loop looking for range to                    
         COMMENT                   renumber                                     
         L     R1,CHKANCOR                                                      
         IF    (R1,NP),BEGIN                                                    
         CLEAR R1                                                               
         END                                                                    
         IF    ((R1,Z),AND,(CHKLINE,GE,10)),BEGIN                               
         LA    R1,10               avoid line 0, (niz's folly)                  
         END                                                                    
         ST    R1,CHKSTART         set up start/end of range                    
         L     R1,CHKANCOR                                                      
         A     R1,CHKAREA                                                       
         IF    (R1,LGT,CVHILNO),BEGIN                                           
         L     R1,CVHILNO                                                       
         END                                                                    
         ST    R1,CHKEND                                                        
         WHILE (CHKCNT,LT,20),BEGIN    Loop                                     
*                                                                               
         COMMENT                   Count lines in range                         
         L     R0,CHKSTART                                                      
         L     R1,CHKEND                                                        
         ACALL CNTRANGE                                                         
         LR    R1,R15                                                           
         A     R1,CHKLNCNT                                                      
         INCR  R1                  R1 - total line to put in range+1            
         CLEAR R2                                                               
         L     R3,CHKEND                                                        
         S     R3,CHKSTART                                                      
         DECR  R3                  R3 - length of range -1                      
         DR    R2,R1                                                            
*                                                                               
* !!! If lines fit in range! renumber it !                                      
         IF    (R3,GE,CHKMIND),BEGIN  R3 - MAXIMUM RAW DELTA                    
         L     R0,CHKSTART                                                      
         L     R1,CHKEND                                                        
         L     R2,CHKLINE                                                       
         COMMENT R3 - RAW DELTA                                                 
         L     R4,CHKLNCNT                                                      
         ACALL AUTONUMB            renumber area !                              
         ST    R1,CHKLINE          returns new line-number/delta                
         LR    R1,R0                                                            
         B     CHKLDONE                                                         
         END                                                                    
*                                                                               
*  If lines don't fit, enlarge range and loop                                   
         COMMENT                   get new start/end lines                      
         L     R1,CHKEND           enlarge end of range                         
         A     R1,CHKAREA                                                       
         IF    (R1,LGT,CVHILNO),BEGIN                                           
         L     R1,CVHILNO                                                       
         END                                                                    
         ST    R1,CHKEND                                                        
         IF    (CHKCNT,GT,3),BEGIN    after a couple of tries,                  
         L     R1,CHKSTART            enlarge area at start too                 
         S     R1,CHKAREA                                                       
         IF    (R1,NP),BEGIN                                                    
         CLEAR R1                                                               
         END                                                                    
         IF    ((R1,Z),AND,(CHKLINE,GE,10)),BEGIN                               
         LA    R1,10               avoid line 0, (niz's folly)                  
         END                                                                    
         ST    R1,CHKSTART                                                      
         END                                                                    
*                                                                               
         COMMENT                   Increase enlarge area                        
         L     R1,CHKAREA                                                       
         L     R2,CHKCNT                                                        
         INCR  R2                                                               
         ST    R2,CHKCNT              increment try count                       
         WHILE (R2,POS),BEGIN                                                   
         AR    R1,R1                                                            
         DECR  R2                                                               
         IF    (R1,LGT,CVHILNO),BEGIN                                           
         L     R1,CVHILNO                                                       
         END                                                                    
         END                                                                    
         ST    R1,CHKAREA                                                       
         END   ,                   continue to loop                             
*                                                                               
         COMMENT                   Auto number infinite loop                    
         FAIL  (R0,EQ,R0),AUTONUM2,'Page auto-number loop'                      
*                                                                               
CHKLDONE LABEL ,                   R1 - RAW DELTA                               
         FAIL  (R1,LT,10),AUTONUM3,'Bad delta for auto-number'                  
         IF    (R1,GE,10),' LA R0,10 '                                          
         IF    (R1,GE,100),' LA R0,100 '                                        
         IF    (R1,GE,1000),' LA R0,1000 '                                      
         IF    (R1,GE,CPDELTA),' L R0,CPDELTA '                                 
         LR    R1,R0               R1 - RETURN DELTA                            
         L     R15,CHKLINE         R15 - RETURN LINE NUMBER                     
         PRETURN (R1)                                                           
         PEND  ,                                                                
*                                                                               
         COMMENT                   Minimum acceptable delta is .01              
CHKMIND  DC    F'10'               DO NOT CHANGE !!  if you change              
         COMMENT                   CHKLINES routine may not work                
         EJECT                                                                  
ANWA     RECORD BEGIN                                                           
ANSTART  DS    F                   START OF RANGE                               
ANEND    DS    F                   END OF RANGE                                 
ANLINE   DS    F                   LINE NUMBER TO INSERT AFTER                  
ANDELTA  DS    F                   RAW DELTA TO USE                             
ANLNCNT  DS    F                   COUNT OF LINES TO BE INSERTED                
ANCNT1   DS    F                   COUNT BEFORE LINE                            
ANCNT2   DS    F                   COUNT AFTER LINE                             
ANNEWLN  DS    F                   NEW LINE NUMBER TO INS AFTER                 
ANNEWEND DS    F                   NEW START FOR LINES AFTER                    
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*                                                                               
*  AUTONUMB - NUMBER RANGE, OPENING UP AN INSERT AREA                           
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - START OF RANGE                                                     
*       R1 - END OF RANGE                                                       
*       R2 - LINE NUMBER TO INSERT AFTER                                        
*       R3 - RAW DELTA FOR RENUMBER  (MUST BE >= .01)                           
*       R4 - LINES TO INSERT (FOR VALIDITY CHECKING)                            
*                                                                               
*  ON EXIT:                                                                     
*       R0 - DELTA TO USE FOR INSERT                                            
*       R1 - LINE TO INSERT AFTER (MAY OR MAY NOT BE SAME)                      
*                                                                               
*  NOTE: THE RANGE IS RENUMBERED IN TWO PARTS THE PART BEFORE                   
*    THE PLACE TO INSERT AND THE PART AFTER THE PLACE TO INSERT.                
*    THIS, IN EFFECT, OPENS UP A RANGE FOR INSERTING LINES.                     
*  NOTE: CALLER TO THIS ROUTINE MUST GUARANTEE, THAT THE GIVEN                  
*    RANGE WILL HOLD ALL THE OLD+NEW LINES USING THE DELTA                      
*    SPECIFIED.  IF NOT, THIS ROUTINE WILL FAIL.                                
*                                                                               
*                                                                               
*                                                                               
AUTONUMB PROC  ANWA                                                             
*                                                                               
         CLEAR ANWA                                                             
         ST    R0,ANSTART                                                       
         ST    R1,ANEND                                                         
         ST    R2,ANLINE                                                        
         ST    R3,ANDELTA                                                       
         ST    R4,ANLNCNT                                                       
*                                                                               
         COMMENT                   COUNT LINES BEFORE, AFTER                    
         L     R0,ANSTART                                                       
         L     R1,ANLINE                                                        
         ACALL CNTRANGE                                                         
         ST    R15,ANCNT1                                                       
         L     R0,ANLINE                                                        
         A     R0,CVONE                                                         
         L     R1,ANEND                                                         
         DECR  R1                                                               
         ACALL CNTRANGE                                                         
         ST    R15,ANCNT2                                                       
*                                                                               
         COMMENT                   GET GOOD DELTA FROM RAW                      
         L     R1,ANDELTA                                                       
         FAIL  (R1,LT,10),AUTONUM3,'Bad delta for auto-number'                  
         LR    R0,R1                                                            
         IF    (R1,GE,10),' LA R0,10 '                                          
         IF    (R1,GE,100),' LA R0,100 '                                        
         IF    (R1,GE,1000),' LA R0,1000 '                                      
         IF    ((R1,GE,CPDELTA),AND,(CPDELTA,GT,1000)),BEGIN                    
         LA    R0,CPDELTA                                                       
         END                                                                    
         ST    R0,ANDELTA                                                       
*                                                                               
         COMMENT                   CALCULATE SOME NEW LINE NUMBERS              
         CLEAR R2                  CALCULAT NEW LINE TO INSERT AFTER            
         L     R3,ANCNT1           = START+(COUNT-1)*DELTA                      
         DECR  R3                                                               
         L     R1,ANDELTA                                                       
         MR    R2,R1                                                            
         A     R3,ANSTART                                                       
         ST    R3,ANNEWLN          NEW LINE TO INSERT AFTER                     
         COMMENT                                                                
         CLEAR R2                  CALCULATE START FOR END LINES                
         L     R3,ANCNT2           = END-COUNT*DELTA                            
         L     R1,ANDELTA                                                       
         MR    R2,R1                                                            
         L     R1,ANEND                                                         
         SR    R1,R3                                                            
         ST    R1,ANNEWEND         NEW START OF LAST LINES                      
*                                                                               
         COMMENT                   NUMBER BEFORE FIRST                          
         IF    (ANNEWLN,LE,ANLINE),BEGIN                                        
         L     R0,ANSTART                                                       
         L     R1,ANLINE                                                        
         L     R2,ANDELTA                                                       
         L     R3,ANSTART                                                       
         IF    (ANCNT1,NE,0),BEGIN                                              
         ACALL NUMRANGE                                                         
         FAIL  NZ,AUTONUM4,'Bad NUMRANGE call by page auto-number'              
         FAIL  (R2,NE,ANDELTA),AUTONUM3,'Bad delta for auto-number'             
         FAIL  (R0,NE,ANNEWLN),AUTONUM6,'Bad page auto-number calc'             
         END                                                                    
         L     R0,ANLINE                                                        
         A     R0,CVONE                                                         
         L     R1,ANEND                                                         
         DECR  R1                                                               
         L     R2,ANDELTA                                                       
         L     R3,ANNEWEND                                                      
         IF    (ANCNT2,NE,0),BEGIN                                              
         ACALL NUMRANGE                                                         
         FAIL  NZ,AUTONUM4,'Bad NUMRANGE call by page auto-number'              
         FAIL  (R2,NE,ANDELTA),AUTONUM3,'Bad delta for auto-number'             
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   NUMBER AFTER FIRST                           
         IF    (ANNEWLN,GT,ANLINE),BEGIN                                        
         L     R0,ANLINE                                                        
         A     R0,CVONE                                                         
         L     R1,ANEND                                                         
         DECR  R1                                                               
         L     R2,ANDELTA                                                       
         L     R3,ANNEWEND                                                      
         IF    (ANCNT2,NE,0),BEGIN                                              
         ACALL NUMRANGE                                                         
         FAIL  NZ,AUTONUM4,'Bad NUMRANGE call by page auto-number'              
         FAIL  (R2,NE,ANDELTA),AUTONUM3,'Bad delta for auto-number'             
         END                                                                    
         L     R0,ANSTART                                                       
         L     R1,ANLINE                                                        
         L     R2,ANDELTA                                                       
         L     R3,ANSTART                                                       
         IF    (ANCNT1,NE,0),BEGIN                                              
         ACALL NUMRANGE                                                         
         FAIL  NZ,AUTONUM4,'Bad NUMRANGE call by page auto-number'              
         FAIL  (R2,NE,ANDELTA),AUTONUM3,'Bad delta for auto-number'             
         FAIL  (R0,NE,ANNEWLN),AUTONUM6,'Bad page auto-number calc'             
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   MAKE SURE NEW LINES FIT                      
         L     R0,ANNEWLN          R0 - START OF AREA FOR INSERT                
         A     R0,CVONE                                                         
         CLEAR R2                                                               
         L     R3,ANLNCNT                                                       
         L     R1,ANDELTA                                                       
         MR    R2,R1                                                            
         L     R1,ANNEWLN                                                       
         AR    R1,R3               R1 - END OF AREA FOR INSERT                  
         ACALL CNTRANGE            COUNT LINES IN RANGE                         
         FAIL  (R15,NZ),AUTONUM8,'Page auto-number logic error'                 
*                                                                               
         COMMENT                   RETURN                                       
         L     R0,ANDELTA                                                       
         L     R1,ANNEWLN                                                       
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         PEND  ,                                                                
         EJECT                                                                  
NUMRWA   RECORD BEGIN                                                           
NUMFLAG  FLAG                                                                   
         FLAG  NUMFCALC            - Delta has been calculated                  
*                                                                               
NUMRFRST DS    F           [Order] Start of range                               
NUMRLAST DS    F           [Order] End of range                                 
NUMRDELT DS    F           [Order] Delta factor                                 
NUMRSTRT DS    F           [Order] New starting lineno                          
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  NUMRANGE -- Routine to re-number range of lines in the                       
*    Active file.                                                               
*                                                                               
*    On entry:                                                                  
*       R0 - start of range                                                     
*       R1 - end of range                                                       
*       R2 - delta factor (0 = calculate best)                                  
*       R3 - new starting lineno, (-1 if none)                                  
*                                                                               
*    On Exit:                                                                   
*       R0 - last line-number in re-numbered range (if CC=zero)                 
*       R2 - actual delta used                                                  
*      R15 - CC=zero, success                                                   
*            RC=4  - bad delta (never given--handled internally)                
*            RC=8  - no lines found                                             
*            RC=12 - bad range                                                  
*            RC=16 - rounding error (number times)                              
*                                                                               
*                                                                               
NUMRANGE XPROC NUMRWA                                                           
         CLEAR NUMRWA                                                           
         STM   R0,R3,NUMRFRST      Save number parameters                       
*-                                                                              
*-       Calculate the best possible delta if 0 was supplied.                   
*-                                                                              
NUMRETRY IF    (NUMRDELT,Z),BEGIN  Calculate best delta...                      
         L     R0,NUMRFRST         First line                                   
         L     R1,NUMRLAST         Last line                                    
         ACALL CNTRANGE            R15 = number of lines in range               
         FAIL  Z,NUMRANG1,'NUMRANGE logic error.'                               
*                                                                               
         CLEAR R2                                                               
         L     R3,NUMRFRST                                                      
         IF    (NUMRSTRT,GT,R3),'L R3,NUMRSTRT'                                 
         S     R3,NUMRLAST                                                      
         LCR   R3,R3               Distance between line range                  
         A     R3,CVONE            Include the last lineno                      
         IF    NEG,'LA R15,12; B NUMREXIT'  Can't be done                       
         DR    R2,R15              Calc acceptable delta                        
         LTR   R1,R3               R1 = delta                                   
         IF    Z,'LA R15,12; B NUMREXIT'  Can't be done                         
         VCALL SELDELTA            Choose good delta value                      
         ST    R1,NUMRDELT         Save new delta                               
         LR    R2,R1                                                            
         PRETURN (R2)              Return actual delta used                     
         SET   NUMFCALC            It's been calculated                         
         END                                                                    
*-                                                                              
*-       Do the renumber.                                                       
*-                                                                              
         LM    R0,R3,NUMRFRST      Pick up range and parms                      
         LA    R15,CPTEXT          Active file record group                     
         VCALL NNUMBER             Re-number                                    
*                                                                               
         IF    (R15,EQ,4),BEGIN    Delta too large...                           
         FAIL  NUMFCALC,NUMRANGE,'NUMRANGE logic error.'                        
         CLEAR NUMRDELT            Re-calculate best delta                      
         B     NUMRETRY                                                         
         END                                                                    
*                                                                               
         IF    (R15,Z),BEGIN       Number sucessful...                          
         PRETURN (R0)              Return last lineno                           
*-                                                                              
*-   Update our FIRST,LAST line-numbers (in case they have changed).            
*-                                                                              
         CLEAR CPAFLNO                                                          
         LA    R2,CPAFLNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLINE            Get first line-number                        
         FAIL  NZ,NUMRFIR,'NUMRANGE logic error.'                               
*                                                                               
         MVC   CPALLNO,CVMAXLNO    Highest possible lineno                      
         LA    R2,CPALLNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLAST            Get last line-number                         
         FAIL  NZ,NUMRLST,'NUMRANGE logic error.'                               
*                                                                               
         CLEAR R15                 A-ok                                         
         END                                                                    
*                                                                               
NUMREXIT PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  NUMFACT -- Routine to re-number range of lines in the                        
*    Active file by multiplying/adding a factor to the existing                 
*    line-numbers.                                                              
*                                                                               
*    On entry:                                                                  
*       R0 - start of range                                                     
*       R1 - end of range                                                       
*       R2 - signed addition factor                                             
*       R3 - multiplication factor (-1 if none)                                 
*                                                                               
*    On Exit:                                                                   
*       R0 - last line-number in re-numbered range (if CC=zero)                 
*      R15 - CC=zero, success                                                   
*            RC=4  - bad PLUS/TIMES                                             
*            RC=8  - no lines found                                             
*            RC=12 - bad range                                                  
*            RC=16 - rounding error (number times)                              
*                                                                               
*                                                                               
NUMFACT  XPROC ,                                                                
         LA    R15,CPTEXT          Active file record group                     
         VCALL NNUMFACT            Re-number                                    
         IF    ((R15,Z),OR,(R15,EQ,16)),BEGIN  Number successful...             
         PRETURN (R0)              Return last lineno                           
*-                                                                              
*-   Update our FIRST,LAST line-numbers (in case they have changed).            
*-                                                                              
         CLEAR CPAFLNO                                                          
         LA    R2,CPAFLNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLINE            Get first line-number                        
         FAIL  NZ,NUMRFIR,'NUMRANGE logic error.'                               
*                                                                               
         MVC   CPALLNO,CVMAXLNO    Highest possible lineno                      
         LA    R2,CPALLNO                                                       
         LA    R15,CPTEXT          Active file record group                     
         VCALL XLOCLAST            Get last line-number                         
         FAIL  NZ,NUMRLST,'NUMRANGE logic error.'                               
*                                                                               
         CLEAR R15                 A-ok                                         
         END                                                                    
*                                                                               
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         TITLE 'CHumps Get/Put Lines Interface Routines'                        
*box                                                                            
*                                                                               
*  NOTE !!!                                                                     
*  The routines below provide access to the active file.                        
*  Routines use  a RECS-like interface, they bypass the RANGE                   
*  processor and do not use or set any active file range                        
*  variables (eg. CURRENT).  These routines present a common                    
*  interface for the lower level GETLINE, PUTLINE routines.                     
*  (written by the chump, for all chumps!)                                      
*                                                                               
         SPACE 3                                                                
*box                                                                            
*                                                                               
*                                                                               
*  GTLINE - Get line from ACTIVE file                                           
*                                                                               
*  ON ENTRY:                                                                    
*      @R1 - line area                                                          
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - line length                                                        
*       R1 - line location                                                      
*      @R2 - line number                                                        
*      R15 - CC=zero, got line                                                  
*            CC=nz, line not found                                              
*                                                                               
*                                                                               
GTLINE   XPROC ,                                                                
         LR    R4,R2               @R4 - line number                            
*                                                                               
         COMMENT                   Get line                                     
         L     R15,0(R4)           Shuffle registers                            
         COMMENT R1-BUFFER                                                      
         LR    R2,R3                                                            
         ACALL GETLINEX                                                         
         IF    Z,BEGIN                                                          
         MVC   0(L'CPLCNO,R4),CPLCNO                                            
         CLEAR R15                                                              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PRETURN (R0)                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTNEXT - Get next line from ACTIVE file                                      
*                                                                               
*  ON ENTRY:                                                                    
*      @R1 - line area                                                          
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - line length                                                        
*       R1 - line location                                                      
*      @R2 - line number                                                        
*      R15 - CC=zero, got line                                                  
*            CC=nz, line not found                                              
*                                                                               
*                                                                               
GTNEXT   XPROC ,                                                                
         LR    R4,R2               @R4 - line number                            
*                                                                               
         COMMENT                   Get line                                     
         L     R15,0(R4)           Shuffle registers                            
         A     R15,=F'1'           Bump to NEXT line number                     
*        VCALL ADDER               *** Poor mans ADDER above                    
         COMMENT R1-BUFFER                                                      
         LR    R2,R3                                                            
         ACALL GETLINEX                                                         
         IF    NL,BEGIN                                                         
         MVC   0(L'CPLCNO,R4),CPLCNO                                            
         CLEAR R15                                                              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PRETURN (R0)                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTPREV - Get previous line from ACTIVE file                                  
*                                                                               
*  ON ENTRY:                                                                    
*      @R1 - line area                                                          
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - line length                                                        
*       R1 - line location                                                      
*      @R2 - line number                                                        
*      R15 - CC=zero, got line                                                  
*            CC=nz, line not found                                              
*                                                                               
*                                                                               
GTPREV   XPROC ,                                                                
         LR    R4,R2               @R4 - line number                            
*                                                                               
         COMMENT                   Get active file specified                    
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN             If active doesn't exist,                     
         LA    R15,4               line not found                               
         B     PREVDONE                                                         
         END                                                                    
         LR    R3,R15              R3 - former active file                      
         END                                                                    
*                                                                               
         COMMENT                   Get previous line no                         
         MVC   CPLCNO,0(R4)                                                     
         ACALL PREVLNO                                                          
*                                                                               
         COMMENT                   If previous line, get it                     
         IF    Z,BEGIN                                                          
         MVC   0(L'CPLCNO,R4),CPLCNO                                            
         L     R15,0(R4)                                                        
         COMMENT R1-BUFFER                                                      
         ACALL GETLINE                                                          
         IF    Z,BEGIN                                                          
         MVC   0(L'CPLCNO,R4),CPLCNO                                            
         CLEAR R15                                                              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   If no previous line, return nz cc            
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   Reset Active file, if need be                
         IF    (R3,NZ),BEGIN                                                    
         XPUSH R15                                                              
         LR    R15,R3                                                           
         VCALL ACTPICK                                                          
         IF    Z,BEGIN             If we can't restore it                       
         BOMB                                                                   
         END                                                                    
         XPOP  R15                                                              
         END                                                                    
*                                                                               
PREVDONE LABEL ,                                                                
         PRETURN (R0)                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTFRST - Get first line from ACTIVE file                                     
*                                                                               
*  ON ENTRY:                                                                    
*      @R1 - line area                                                          
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - line length                                                        
*       R1 - line location                                                      
*      @R2 - line number                                                        
*      R15 - CC=zero, got line                                                  
*            CC=nz, line not found                                              
*                                                                               
*                                                                               
GTFRST   XPROC ,                                                                
         LR    R4,R2               @R4 - line number                            
*                                                                               
         COMMENT                   Get line                                     
         L     R15,0(R4)           Shuffle registers                            
         COMMENT R1-BUFFER                                                      
         LR    R2,R3                                                            
         ACALL GETLINEX                                                         
         IF    NL,BEGIN                                                         
         MVC   0(L'CPLCNO,R4),CPLCNO                                            
         CLEAR R15                                                              
         END                                                                    
         ELSE  BEGIN                                                            
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         PRETURN (R0)                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTLAST - Get next line from ACTIVE file                                      
*                                                                               
*  ON ENTRY:                                                                    
*      @R1 - line area                                                          
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - line length                                                        
*       R1 - line location                                                      
*      @R2 - line number                                                        
*      R15 - CC=zero, got line                                                  
*            CC=nz, line not found                                              
*                                                                               
*                                                                               
GTLAST   XPROC ,                                                                
*                                                                               
         COMMENT                   Get line                                     
         ACALL GTLINE                                                           
         IF    NZ,BEGIN                                                         
         ACALL GTPREV                                                           
         END                                                                    
*                                                                               
         PRETURN (R0)                                                           
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  CHECKLN - Check line number                                                  
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - line number                                                        
*       R1 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=Zero, line exists                                               
*            CC=NZ, line not found                                              
*                                                                               
*                                                                               
*                                                                               
GTLNWA   RECORD BEGIN                                                           
GTLNLNO  DS    F                   Line number                                  
GTLNTEXT DS    CL(&LINESZ)         Line text buffer                             
         END                                                                    
*                                                                               
*                                                                               
CHECKLN  XPROC GTLNWA                                                           
         LR    R3,R1               R3 - active file number                      
         ST    R0,GTLNLNO          Save line number                             
*                                                                               
         COMMENT                                                                
         LA    R1,GTLNTEXT                                                      
         LA    R2,GTLNLNO                                                       
         COMMENT R3 - ACTNO                                                     
         ACALL GTLINE                                                           
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTNEXTLN - get next line number                                              
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - line number                                                        
*       R1 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - Next line number  (r15=0)                                          
*      R15 - CC=Zero, line exists                                               
*            CC=NZ, line not found                                              
*                                                                               
*                                                                               
*                                                                               
GTNEXTLN XPROC GTLNWA                                                           
         LR    R3,R1               R3 - active file number                      
         ST    R0,GTLNLNO          Save line number                             
*                                                                               
         COMMENT                                                                
         LA    R1,GTLNTEXT                                                      
         LA    R2,GTLNLNO                                                       
         COMMENT R3 - ACTNO                                                     
         ACALL GTNEXT                                                           
         IF    Z,BEGIN                                                          
         L     R0,GTLNLNO                                                       
         PRETURN (R0)                                                           
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTPREVLN - get prev line number                                              
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - line number                                                        
*       R1 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - Prev line number  (r15=0)                                          
*      R15 - CC=Zero, line exists                                               
*            CC=NZ, line not found                                              
*                                                                               
*                                                                               
*                                                                               
GTPREVLN XPROC GTLNWA                                                           
         LR    R3,R1               R3 - active file number                      
         ST    R0,GTLNLNO          Save line number                             
*                                                                               
         COMMENT                                                                
         LA    R1,GTLNTEXT                                                      
         LA    R2,GTLNLNO                                                       
         COMMENT R3 - ACTNO                                                     
         ACALL GTPREV                                                           
         IF    Z,BEGIN                                                          
         L     R0,GTLNLNO                                                       
         PRETURN (R0)                                                           
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTFRSTLN - get first line number in range                                    
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - line number (start of range)                                       
*       R1 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - First line number  (r15=0)                                         
*      R15 - CC=Zero, line exists                                               
*            CC=NZ, line not found                                              
*                                                                               
*                                                                               
*                                                                               
GTFRSTLN XPROC GTLNWA                                                           
         LR    R3,R1               R3 - active file number                      
         ST    R0,GTLNLNO          Save line number                             
*                                                                               
         COMMENT                                                                
         LA    R1,GTLNTEXT                                                      
         LA    R2,GTLNLNO                                                       
         COMMENT R3 - ACTNO                                                     
         ACALL GTFRST                                                           
         IF    Z,BEGIN                                                          
         L     R0,GTLNLNO                                                       
         PRETURN (R0)                                                           
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTLASTLN - get last line number in range                                     
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - line number (end of range)                                         
*       R1 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - Last line number  (r15=0)                                          
*      R15 - CC=Zero, line exists                                               
*            CC=NZ, line not found                                              
*                                                                               
*                                                                               
*                                                                               
GTLASTLN XPROC GTLNWA                                                           
         LR    R3,R1               R3 - active file number                      
         ST    R0,GTLNLNO          Save line number                             
*                                                                               
         COMMENT                                                                
         LA    R1,GTLNTEXT                                                      
         LA    R2,GTLNLNO                                                       
         COMMENT R3 - ACTNO                                                     
         ACALL GTLAST                                                           
         IF    Z,BEGIN                                                          
         L     R0,GTLNLNO                                                       
         PRETURN (R0)                                                           
         END                                                                    
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  GTENDLN - Get END line number for specified active file                      
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - not used                                                           
*       R1 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*       R0 - end line number (r15=0)                                            
*      R15 - CC=Zero, line exists                                               
*            CC=NZ, error, error msg tseg'd                                     
*                                                                               
*                                                                               
GTENDLN  XPROC ,                                                                
*                                                                               
         LR    R3,R1               R3 - active file number                      
*                                                                               
         COMMENT                   If current active file,                      
         IF    (R3,Z),BEGIN                                                     
         ACALL ENDLNO                                                           
         IF    NZ,BEGIN                                                         
         TSEG  'Invalid line number (too large)'                                
         L     R0,=F'-1000'                                                     
         LA    R15,4                                                            
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   If different active file                     
         IF    (R3,NZ),BEGIN                                                    
*                                                                               
         COMMENT                   Switch to new active file                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         TSEG  'Specified active file does not exist. '                         
         L     R0,=F'-1000'                                                     
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN               Got new active ok                            
         LR    R3,R15                                                           
*                                                                               
         COMMENT                   Get ending line number                       
         ACALL ENDLNO                                                           
         IF    NZ,BEGIN                                                         
         TSEG  'Invalid line number (too large)'                                
         L     R0,=F'-1000'                                                     
         LA    R15,4                                                            
         END                                                                    
*                                                                               
         COMMENT                   Restore old active file                      
         XPUSH R15,R1                                                           
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         BOMB                                                                   
         END                                                                    
         XPOP  R15,R1                                                           
         END   , of got new act                                                 
         END   , of new act specified                                           
*                                                                               
         PRETURN (R0)                                                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  PTLINE - Put line, multiple ACTIVE interface                                 
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - text length                                                        
*       R1 - text location                                                      
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=Zero, line put                                                  
*            CC=NZ, line not put, error msg tseg'd.                             
*                                                                               
*                                                                               
*                                                                               
PTLINE   XPROC ,                                                                
*                                                                               
         LR    R4,R1               R4,R5 - text loc, len                        
         LR    R5,R0                                                            
         L     R2,0(R2)            R2 - line number                             
*                                                                               
         COMMENT                   Check line number                            
         IF    ((R2,NEG),OR,(R2,GT,CVMAXLNO)),BEGIN                             
         TSEG  'Invalid line number (negative or too large)'                    
         LA    R15,4                                                            
         B     PTLNDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   Switch to new active,,                       
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         TSEG  'Active file specified does not exist. '                         
         LA    R15,4                                                            
         B     PTLNDONE                                                         
         END                                                                    
         LR    R3,R15                                                           
         END                                                                    
*                                                                               
         COMMENT                   Put text                                     
         LR    R15,R2                                                           
         LR    R0,R5                                                            
         LR    R1,R4                                                            
         ACALL PUTLINE                                                          
*                                                                               
         COMMENT                   Restore old active                           
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         BOMB                                                                   
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   All ok                                       
         CLEAR R15                                                              
*                                                                               
PTLNDONE LABEL ,                   All done                                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  PTAPPEND  - Append line, multiple ACTIVE interface                           
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - text length                                                        
*       R1 - text location                                                      
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=Zero, line put                                                  
*            CC=NZ, line not put, error msg tseg'd.                             
*                                                                               
*                                                                               
*                                                                               
PTAPPEND XPROC ,                                                                
*                                                                               
         LR    R4,R1               R4,R5 - text loc, len                        
         LR    R5,R0                                                            
*                                                                               
         COMMENT                   Switch to new active,,                       
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         TSEG  'Active file specified does not exist. '                         
         LA    R15,4                                                            
         B     PTAPDONE                                                         
         END                                                                    
         LR    R3,R15                                                           
         END                                                                    
*                                                                               
         COMMENT                   Get END line number                          
         ACALL ENDLNO                                                           
         IF    NZ,BEGIN            If END too large,                            
         IF    (R3,NZ),BEGIN       Restore old active if any, give              
         LR    R15,R3              error message and exit                       
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         BOMB                                                                   
         END                                                                    
         END                                                                    
         TSEG  'Invalid line number (too large)'                                
         LA    R15,4                                                            
         B     PTAPDONE                                                         
         END                                                                    
         LR    R2,R0               R2 - END line number                         
*                                                                               
         COMMENT                   Append text                                  
         LR    R15,R2                                                           
         LR    R0,R5                                                            
         LR    R1,R4                                                            
         ACALL PUTLINE                                                          
*                                                                               
         COMMENT                   Restore old active                           
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         BOMB                                                                   
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   All ok                                       
         CLEAR R15                                                              
*                                                                               
PTAPDONE LABEL ,                   All done                                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  REPLINE - REPLACE LINE, multiple ACTIVE interface                            
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - text length                                                        
*       R1 - text location                                                      
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=Zero, line put                                                  
*            CC=NZ, line not put, error msg tseg'd.                             
*                                                                               
*                                                                               
*                                                                               
REPLINE  XPROC ,                                                                
*                                                                               
         LR    R4,R1               R4,R5 - text loc, len                        
         LR    R5,R0                                                            
         L     R2,0(R2)            R2 - line number                             
*                                                                               
         COMMENT                   Check line number                            
         IF    ((R2,NEG),OR,(R2,GT,CVMAXLNO)),BEGIN                             
         TSEG  'Invalid line number (negative or too large)'                    
         LA    R15,4                                                            
         B     REPLDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   Switch to new active,,                       
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         TSEG  'Active file specified does not exist. '                         
         LA    R15,4                                                            
         B     REPLDONE                                                         
         END                                                                    
         LR    R3,R15                                                           
         END                                                                    
*                                                                               
         COMMENT                   Put text                                     
         LR    R15,R2                                                           
         LR    R0,R5                                                            
         LR    R1,R4                                                            
         LA    R2,=C'R...'         REPLACE only                                 
         ACALL PUTLINE                                                          
*                                                                               
         COMMENT                   Restore old active                           
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         BOMB                                                                   
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   All ok                                       
         CLEAR R15                                                              
*                                                                               
REPLDONE LABEL ,                   All done                                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*                                                                               
*  INSLINE - INSERT LINE, multiple ACTIVE interface                             
*                                                                               
*  ON ENTRY:                                                                    
*       R0 - text length                                                        
*       R1 - text location                                                      
*      @R2 - line number                                                        
*       R3 - active file number (zero=current)                                  
*                                                                               
*  ON EXIT:                                                                     
*      R15 - CC=Zero, line put                                                  
*            CC=NZ, line not put, error msg tseg'd.                             
*                                                                               
*                                                                               
*                                                                               
INSLINE  XPROC ,                                                                
*                                                                               
         LR    R4,R1               R4,R5 - text loc, len                        
         LR    R5,R0                                                            
         L     R2,0(R2)            R2 - line number                             
*                                                                               
         COMMENT                   Check line number                            
         IF    ((R2,NEG),OR,(R2,GT,CVMAXLNO)),BEGIN                             
         TSEG  'Invalid line number (negative or too large)'                    
         LA    R15,4                                                            
         B     INSLDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   Switch to new active,,                       
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         TSEG  'Active file specified does not exist. '                         
         LA    R15,4                                                            
         B     INSLDONE                                                         
         END                                                                    
         LR    R3,R15                                                           
         END                                                                    
*                                                                               
         COMMENT                   Put text                                     
         LR    R15,R2                                                           
         LR    R0,R5                                                            
         LR    R1,R4                                                            
         LA    R2,=C'I...'         INSERT only                                  
         ACALL PUTLINE                                                          
*                                                                               
         COMMENT                   Restore old active                           
         IF    (R3,NZ),BEGIN                                                    
         LR    R15,R3                                                           
         ACALL ACTPICK                                                          
         IF    Z,BEGIN                                                          
         BOMB                                                                   
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   All ok                                       
         CLEAR R15                                                              
*                                                                               
INSLDONE LABEL ,                   All done                                     
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         TITLE 'STOW Routine'                                                   
STOWWA   RECORD BEGIN                                                           
STOWLNO  DS    F                   Working line-number                          
STOWPTRS DS    2A                  Line loc, len                                
STOWTEXT DS    CL(&LINESZ)         Working line text area                       
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  STOW -- For compatability only!  New callers should use the                  
*    PUTLINE routine.  This routine will add/replace a line in                  
*    the Active file.                                                           
*                                                                               
*    On entry:                                                                  
*      R1 - pressed line ptr (before lineno)                                    
*                                                                               
*      CPLFLG4:                                                                 
*        CPFSTINS - insert mode only                                            
*        CPFSTREP - replace mode only                                           
*                                                                               
*    On exit, R15 (and CC):                                                     
*     -4 - replace/insert mode prevented STOW                                   
*      0 - OK                                                                   
*                                                                               
STOW     XPROC STOWWA                                                           
         LR    R15,R1              Pressed line ptr                             
         LA    R1,STOWTEXT         Put unpressed line here                      
         VCALL UNPRESS             Unpress                                      
         ST    R15,STOWLNO         Save line-number                             
         STM   R0,R1,STOWPTRS      Save line text ptrs                          
*-                                                                              
*-       Set correct PUTLINEX insert/replace mode.                              
*-                                                                              
         LA    R2,=C'....'         No special PUTLINEX options                  
         IF    CPLFLG4.CPFSTINS,'LA R2,=C"I..."'  Insert mode only              
         IF    CPLFLG4.CPFSTREP,'LA R2,=C"R..."'  Replace mode only             
*-                                                                              
*-       Add the line to the Active file.                                       
*-                                                                              
         L     R15,STOWLNO         Set line-number                              
         LM    R0,R1,STOWPTRS      Line text ptrs                               
         ACALL PUTLINEX            Add the line to the Active file              
*  PUTLINEX sets the return code for the STOW caller.                           
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LASTLINE -- Routine to write the last line-number added to the               
*    ACTIVE file.                                                               
*                                                                               
LASTLINE XPROC ,                                                                
         IF    ('LT R15,CPSTLNO',^NEG),BEGIN  Give lineno message...            
         IF    ^CPLFLG5.CPFNLST,EXIT  Not needed if line was listed             
         IF    ^CPFTYPED,EXIT      Don't if not typed command                   
*                                                                               
         TSEG  'Line '                                                          
         L     R0,CPSTLNO                                                       
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         TSEG  ' is the last line'                                              
         SETMSG '.'                                                             
         IF    (CPCMNM,EQ,'COP'),'SETMSG " copied."'                            
         IF    (CPCMNM,EQ,'MOV'),'SETMSG " moved."'                             
         TSEG  (R1),(R0),CR                                                     
         END                                                                    
         PEND                                                                   
         DROP  BR                                                               
         TITLE 'Edit Format validity check routine'                             
*box                                                                            
*                                                                               
*  EDITCK -- Routine to check the validity of an edit format line.              
*                                                                               
*    On entry:                                                                  
*      R1 - edit format line ptr (before lineno)                                
*                                                                               
*    On exit, R15 (and CC):                                                     
*      0 - ok (R1 - intact, R0 - pressed line len)                              
*      4 - truncated to &LINESZ (R1-intact, R0-pressed line len)                
*     -4 - invalid edit format (R1 - msg ptr, R0 - msg len)                     
*                                                                               
EDITCK   XPROC ,                                                                
         IF    (@R1,LGT,CVMAXLNO),BEGIN                                         
         SETMSG 'Line-number is too big.'                                       
         B     EDITERR                                                          
         END                                                                    
         LC    R5,@R1+4            Count byte                                   
         ST    R5,@R8+4            Save len in r0                               
         LA    R1,@R1+4+1          Past lineno and count byte                   
         AR    R5,R1               End of pressed line                          
         CLEAR R6                  Unpress len accumulator                      
         LA    R4,X'0F'            For "and" in loop                            
         CLEAR R15                 For "ic" in loop                             
         WHILE (R1,LT,R5),BEGIN                                                 
         IC    R15,@R1             Control byte                                 
         LR    R0,R15                                                           
         SRL   R0,4                Blank count                                  
         AR    R6,R0                                                            
         NR    R15,R4              Text count                                   
         AR    R6,R15                                                           
         IF    (R6,GT,&LINESZ),BEGIN                                            
         SR    R6,R0                                                            
         SR    R6,R15              Back up                                      
         SH    R6,=AL2(&LINESZ)                                                 
         LCR   R6,R6               No. of chars till max                        
         IF    ('SR R6,R0',POS),BEGIN  Room for partial text...                 
         IC    R3,@R1                                                           
         N     R3,=X'000000F0'     Reset no. of text bytes                      
         OR    R3,R6               Text byte count                              
         STC   R3,@R1                                                           
         LA    R1,1+@R6(R1)        Add in control byte & text                   
         END                                                                    
         L     R15,@R8+4+4                                                      
         LA    R15,@R15+4          Skip past lineno                             
         SR    R1,R15              Calc len                                     
         DECR  R1                  Not including len byte                       
         STC   R1,@R15             Update len byte                              
         LR    R0,R1                                                            
         PRETURN (R0)              Return pressed length                        
         LA    R15,4                                                            
         B     EDITEXIT                                                         
         END                                                                    
         LA    R1,1+@R15(R1)       Bump pressed ptr                             
         END                                                                    
         CLEAR R15                 Assume good rtn code                         
         IF    (R1,NE,R5),BEGIN                                                 
         SETMSG 'Invalid edit format line.'                                     
EDITERR  PRETURN (R0,R1)           Return error msg ptrs                        
         LA    R15,4                                                            
         LCR   R15,R15                                                          
         END                                                                    
EDITEXIT PEND  ,                                                                
         TITLE 'UNPRESS Routine'                                                
*box                                                                            
*                                                                               
*  UNPRESS -- Unpresses a line in WYLBUR edit format.                           
*                                                                               
*    On entry:                                                                  
*      R15- pressed line ptr (before lineno)                                    
*      R1 - unpress area (at least &LINESZ bytes)                               
*                                                                               
*    On exit:                                                                   
*      R1,R0 - unpress loc, len                                                 
*      R15   - WYLBUR line-number                                               
*                                                                               
UNPRESS  XPROC ,                                                                
         MVC   CPDOUB(4),@R15      Make aligned line-no available               
         MVI   @R1,C' '            Blank return area                            
         MVC   @R1+1(&LINESZ-1),@R1                                             
         LA    R1,@R1              Make sure 1st byte clear                     
         LCR   R0,R1               Set r0 for length calc at end                
         LC    R5,@R15+4           Get total line length                        
         LTR   R5,R5               Is it a null line                            
         BZ    FINUNP              Br yes                                       
         LA    R6,X'0F'            Put mask in R2                               
         LA    R2,1                Set R2 for bxle step                         
         DECR  R5                  Set R5 so that end of line                   
         LA    R3,@R15(R5)         Point R3 to end for bxle                     
MORECH   IC    R5,@R15+5           Get blank-char control byte                  
         LR    R4,R5               Put in R4 also                               
         SRL   R5,4                Shift to get blank count                     
         AR    R1,R5               Move output ptr over blanks                  
         NR    R4,R6               Mask to get non-blank count                  
         BZ    ALLBLS              No move if zero count                        
         LR    R5,R4               Put count in R5                              
         DEX   R5,'MVC @R1(0),@R15+6' Move text to output                       
         AR    R15,R4              Bump input ptr past text                     
         AR    R1,R4               Bump output ptr past text                    
ALLBLS   BXLE  R15,R2,MORECH       Add 1 (in R2) to input ptr                   
*                       (in R15) and branch if <= end (in R3)                   
* note that this now falls through even for an invalid pressed                  
*      line.  for a valid line (R3+1) must equal R15 but there                  
*      is no reason to check because there is no good recovery                  
*      if the line happens to be invalid.                                       
FINUNP   L     R15,CPDOUB          Line-no to R15                               
         AR    R0,R1               Calc total length of line                    
         PRETURN (R0)                                                           
         PEND  ,                                                                
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LENCHKM -- Routine to check to see if a line is too long and                 
*    issue a warning message if it is.                                          
*                                                                               
*    Entry/exit parameters are the same as LENCHK below.                        
*                                                                               
LENCHKM  XPROC ,                                                                
         ACALL LENCHK              Check for long line                          
*                                                                               
         XPUSH R15,R1                                                           
         ACALL LMSGCHK             Write out warning msg (maybe)                
         XPOP  R15,R1                                                           
         PRETURN (R0,R1)                                                        
         PEND                                                                   
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LENCHK -- Routine to check to see if a line is too long.  This               
*    routine will also issue a warning message if the line is                   
*    longer than the current length.                                            
*                                                                               
*    On entry:                                                                  
*      R15 - lineno                                                             
*      R1,R0 - line loc, length                                                 
*                                                                               
*    On exit:                                                                   
*      R15 - lineno (same as on entry)                                          
*      R1,R0 - line loc, length (trailing blanks trimmed)                       
*                                                                               
LENCHK   XPROC ,                                                                
         LR    R6,R15                                                           
*                                                                               
         LR    R15,R0                                                           
         AR    R15,R1                                                           
         DECR  R15                                                              
         WHILE ((R0,POS),AND,(@R15,EQ,' ')),'DECR R15; DECR R0'                 
*                                                                               
         LR    R5,R1                                                            
         LR    R4,R0                                                            
*-                                                                              
*-       Line was truncated.                                                    
*-                                                                              
         IF    (R4,GT,&LINESZ),BEGIN  Too long...                               
         LA    R4,&LINESZ          Truncate the line                            
         TSEG  'Truncated to &LINESZ characters in line '                       
         LR    R0,R6                                                            
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0),CR        Line-number                                  
         B     LENCEXIT                                                         
         END                                                                    
*-                                                                              
*-       Count the number of lines over warning length.                         
*-                                                                              
         IF    CPFTYPED,BEGIN      Check for warning message...                 
         IF    CPVFPAGE,EXIT       Don't give message in page mode              
         LTH   R15,CPLLEN          Local line warning length                    
         IF    Z,'LH R15,CPLENGTH'                                              
         IF    (R4,GT,R15),BEGIN   Issue the warning...                         
         INCR  R15,CPLENWRN        Count number of lines over length            
         ST    R6,CPLENLNO         Save lineno over length                      
         IF    (R4,GT,CPLENMAX),'STH R4,CPLENMAX'  Save longest len             
         END                                                                    
         END                                                                    
*                                                                               
LENCEXIT SETMSG (R5),(R4)           Line loc, len                               
         PRETURN (R0,R1)                                                        
         LR    R15,R6              Lineno                                       
         PEND                                                                   
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LCHKMSG -- Routine to write a line length warning message, if                
*    needed.  Called at the end of a command (by COMM).                         
*                                                                               
LMSGCHK  XPROC ,                                                                
         LTH   R2,CPLENWRN         Number of lines over length                  
         IF    POS,BEGIN           Write a warning message...                   
*-                                                                              
*-       Only one line exceeded the warning length.                             
*-                                                                              
         IF    (R2,EQ,1),BEGIN     Only one long line...                        
         TNUM  LH:CPLENMAX                                                      
         TSEG  ' characters in line '                                           
         L     R0,CPLENLNO                                                      
         VCALL CVEXNO                                                           
         END                                                                    
*-                                                                              
*-       Multiple lines exceeded the warning length.                            
*-                                                                              
         ELSE  BEGIN               Lots of lines...                             
         TNUM  (R2)                                                             
         TSEG  ' lines over '                                                   
*                                                                               
         LTH   R15,CPLLEN          Local line warning length                    
         IF    Z,'LH R15,CPLENGTH'                                              
         TNUM  (R15)                                                            
         TSEG  ' characters (longest was '                                      
         TNUM  LH:CPLENMAX                                                      
         SETMSG ' characters).'                                                 
         END                                                                    
*                                                                               
         TSEG  (R1),(R0),CR                                                     
*                                                                               
         CLEAR CPLENWRN,CPLENLNO,CPLENMAX  Reset                                
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  BR                                                               
         EJECT                                                                  
* TEST DETRNG ,,, NEED NEW DETRNG ... DEBUG                                     
         TITLE 'DETRNG Routine'                                                 
         COPY  ASRWA                                                            
         EJECT                                                                  
*                                                                               
*   scan range                                                                  
*                                                                               
*   type help range for details                                                 
*                                                                               
*   set cpfall flag to allow range to default to all                            
*   if not specified. (eg. list command does this)                              
*                                                                               
*                                                                               
*   note:                                                                       
*   many range specification errors, return via CVERROR                         
*                                                                               
*   note:                                                                       
*   this routine scans a range specification.  this is                          
*   done by a 'finite state' type algorithm.  each scan                         
*   table represents a 'state' (more or less).  we scan                         
*   by scanning using the various scan tables.  we have                         
*   (a) general scan, (b) explicit range scan, and                              
*   (c) associtive (string) range sckws and code in this                        
*   order.                                                                      
*                                                                               
*   note:                                                                       
*   this routine scans a range specification.  it sets                          
*   up cp flags and cp areas with the range specification                       
*   info.  this info is used by the range processor to                          
*   determine what lines constitute the range.  we note                         
*   that the fields set in the cp are somewhat poorly                           
*   documented.  unfortunately that is still the case.                          
*   as it has been said ..                                                      
*      real programmers don't comment.  read the code.                          
*                                                                               
*                                                                               
DRWA     RECORD BEGIN                                                           
DRFLAG   FLAG  ,                                                                
         FLAG  DRFAND              AND                                          
         FLAG  DRFOR               OR                                           
         FLAG  DRFIN               IN                                           
DRFLAG2  FLAG  ,                   PER STRING FLAGS                             
         FLAG  DRFNOT              NOT                                          
         FLAG  DRFCTEXT            C'TEXT'                                      
         FLAG  DRFHEX              HEX                                          
         FLAG  DRFPAT              PATTERN                                      
DRFLAG3  FLAG  ,                   COMPLETION FLAGS                             
         FLAG  DRFNEEDS            NEED STRING FLAG                             
         FLAG  DRFNEEDX            NEED EXPLICIT RANGE FLAG                     
         END                                                                    
*                                                                               
*                                                                               
NDETRNG  XPROC DRWA                                                             
         LA    R6,DRWA                                                          
         USING DRWA,R6                                                          
         CLEAR DRWA                                                             
*                                                                               
         COMMENT                   SET UP RANGE FLAGS                           
         CLEAR CPLFLG1.CPFALLV     TURN OFF ALL FLAG                            
         CLEAR CPSTAD                                                           
         CLEAR CPFRDRNG                                                         
         SET   CPFEXPRG            Set explicit range                           
         CLEAR CPMDLN                                                           
*                                                                               
         COMMENT                   EXTERNAL                                     
         IF    CPFRDEXT,BEGIN                                                   
         CLEAR CPFSLN              Set default                                  
         MVC   CPFSLN+4,CVMAXLNO   All for external file                        
         END                                                                    
*                                                                               
         COMMENT                   EXEC                                         
         ELSEIF CPFRDEXE,BEGIN                                                  
         VCALL EXECHK              Make sure there is an EXEC file              
         VCALL EXFRSTLN            Get FIRST lineno                             
         ST    R0,CPFSLN           Save FIRST                                   
         VCALL EXLASTLN            Get LAST lineno                              
         ST    R0,CPLSLN           Save LAST                                    
         END                                                                    
*                                                                               
         COMMENT                   ACTIVE                                       
         ELSE  BEGIN                                                            
         IF    (CPALNCT,Z),BEGIN   Active file is empty                         
         VCALL ITSNIL                                                           
         END                                                                    
         MVC   CPFSLN(8),CPAFLNO   Save FIRST,LAST linenos                      
         END                                                                    
*                                                                               
         COMMENT                   SCAN RANGE                                   
         SCAN  DRPRT               Scan                                         
         SCANCHK                                                                
*                                                                               
         COMMENT                   CHECK COMPLETION FLAGS                       
         IF    DRFNEEDS,BEGIN                                                   
         ERROR 'Missing range.  Quoted string expected. '                       
         END                                                                    
         IF    DRFNEEDX,BEGIN                                                   
         ERROR 'Missing explicit range.'                                        
         END                                                                    
*                                                                               
         COMMENT                   CHANGE LINKS IN STRING LIST                  
         COMMENT                   FROM BACKWARDS TO FORWARDS                   
         USING ASRWA,R5                                                         
         L     R5,CPSTAD                                                        
         CLEAR R4                                                               
         WHILE (R5,NZ),BEGIN                                                    
         L     R3,ASRPTR                                                        
         ST    R4,ASRPTR                                                        
         LA    R4,ASRWA                                                         
         LR    R5,R3                                                            
         END                                                                    
         ST    R4,CPSTAD                                                        
         DROP  R5                                                               
*                                                                               
         CLEAR R15                                                              
         PEND  ,                                                                
         EJECT                                                                  
*                                                                               
*  RANGE SCKW TABLES                                                            
*  1ST LEVEL                                                                    
*                                                                               
DRPRT    SCKW  ,NULLRNG,NULL                                                    
         SCKW  ALL,DRALL                                                        
         SCKW  ,EXSYMLN,SYMLN      EXPLICIT RANGE                               
         SCKW  BLOCK,EXRBLK,A      EXPLICIT RANGE                               
         SCKW  ,HVVSTR,V(MQUOTE)   ASSOCIATIVE RANGE                            
         SCKW  X,HVVHEX            ASSOCIATIVE RANGE                            
         SCKW  C,HVVCTEX           ASSOCIATIVE RANGE                            
         SCKW  P,HVVPAT            ASSOCIATIVE RANGE                            
         SCKW  ^,SETNOT            ASSOCIATIVE RANGE                            
         SCKW  ^X,HVVNHEX          ASSOCIATIVE RANGE                            
         SCKW  ^C,HVVNCTEX         ASSOCIATIVE RANGE                            
         SCKW  ^P,HVVNPAT          ASSOCIATIVE RANGE                            
         SCKW  ,MISSRNG                                                         
*                                                                               
*                                                                               
NULLRNG  PROC  ,                                                                
*                                                                               
         COMMENT                   IF ALL DEFAULT ALLOWED, DO IT                
         IF    CPLFLG1.CPFALL,BEGIN                                             
         CLEAR CPLFLG1.CPFALL      Turn off CPFALL if default range             
         SET   CPLFLG1.CPFALLV                                                  
         END                                                                    
         ELSE  BEGIN                                                            
         ERROR 'Missing range. '                                                
         END                                                                    
*                                                                               
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
MISSRNG  PROC  ,                                                                
*                                                                               
         COMMENT                   IF ALL DEFAULT ALLOWED, DO IT                
         IF    CPLFLG1.CPFALL,BEGIN                                             
         CLEAR CPLFLG1.CPFALL      Turn off CPFALL if default range             
         SET   CPLFLG1.CPFALLV                                                  
         END                                                                    
         ELSE  BEGIN                                                            
         ERROR 'Missing range. '                                                
         END                                                                    
*                                                                               
         COMMENT                   TOKEN NOT PART OF RANGE, BACKUP              
         SCBKUP                                                                 
*                                                                               
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
*                                                                               
DRALL    PROC  ,                                                                
         CLEAR DRFNEEDX                                                         
         SET   CPLFLG1.CPFALLV                                                  
         LA    R15,4                                                            
         PEND  ,                                                                
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*  EXPLICIT RANGE SCKWS                                                         
*                                                                               
EXRNG    SCKW  ,MISSEXR,NULL       EXPLICIT RANGE                               
         SCKW  BLOCK,EXRBLK                                                     
         SCKW  ALL,EXRALL                                                       
         SCKW  ,EXSYMLN,SYMLN                                                   
         SCKW  ,BADXRNG                                                         
*                                                                               
EXRNGDIS SCKW  ,EXDSYMLN,SYMLN     EXPLICIT RANGE (DISJOINT PART)               
         SCKW  ,EXRDONE                                                         
*                                                                               
*  EXPLICIT RANGE ROUTINES                                                      
*                                                                               
MISSEXR  PROC  ,                   MISSING EXPLICIT RANGE                       
         ERROR 'Missing explicit range.'                                        
         PEND                                                                   
*                                                                               
BADXRNG  PROC  ,                                                                
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid.  Expecting explicit range.'                          
         PEND                                                                   
*                                                                               
EXRBLK   PROC  ,                   BLOCK                                        
         CLEAR DRFNEEDX                                                         
         IF    ((CPCMNM,EQ,'PRI'),OR,(CPCMNM,EQ,'RUN')),BEGIN                   
         SCBKUP                                                                 
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN                                                            
         L     R0,CPFBKLNO         FBLOCK lineno                                
         L     R1,CPLBKLNO         LBLOCK lineno                                
         IF    (CPVFHIDE,OR,(CPBLKACT,Z)),BEGIN                                 
         ERROR 'BLOCK is not defined.'                                          
         END                                                                    
         IF    (R0,EQ,R1),'SET CPFONEL'                                         
         ST    R0,CPFSLN           Set first lineno                             
         ST    R1,CPLSLN           Set last lineno                              
         SETSCKWS EXRNGDIS                                                      
         CLEAR R15                                                              
         END                                                                    
         PEND                                                                   
*                                                                               
EXRALL   PROC  ,                                                                
         CLEAR DRFNEEDX                                                         
         SET   CPLFLG1.CPFALLV                                                  
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
EXSYMLN  PROC  ,                   SYMBOLIC LINE                                
         CLEAR DRFNEEDX                                                         
         USING NSCNCB,R2                                                        
         ST    R0,CPFSLN                                                        
         ST    R0,CPLSLN                                                        
         ACALL DOXLINE2            LOOK FOR  X/Y OR X (Y)                       
         IF    (R15,Z),BEGIN                                                    
         IF    (R0,NEG),BEGIN      IF RANGE X'C000000' FLAG ON,                 
         N     R0,=X'0FFFFFFF'     WE NEED TO CLEAR IT                          
         END                                                                    
         ST    R0,CPLSLN                                                        
         END                                                                    
         ELSE  BEGIN                                                            
         SET   CPFONEL                                                          
         END                                                                    
         SETSCKWS EXRNGDIS                                                      
         CLEAR R15                                                              
         PEND                                                                   
         DROP  R2                                                               
*                                                                               
EXRDONE  PROC  ,                   SOMETHING OTHER THAN RANGE, QUIT             
         SCBKUP                                                                 
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
EXDSYMLN PROC  ,                   DISJOINT RANGE SPECIFICATION                 
         USING NSCNCB,R2                                                        
         CLEAR CPFONEL             ??? HERE AND ELSEWHERE ??                    
         IF    CPFMODS,'VCALL NOTVALID'                                         
         SET   CPFDSJNT                                                         
         L     R3,CPMDLN                                                        
         IF    (R3,GE,10),BEGIN                                                 
         ERROR 'Too many line-numbers.',,MANYLNOS                               
         END                                                                    
         SLL   R3,2                                                             
         ST    R0,CPMDAD(R3)                                                    
         L     R3,CPMDLN                                                        
         INCR  R3                                                               
         ST    R3,CPMDLN                                                        
         ACALL DOXLINE2            LOOK FOR X/Y OR X (Y)                        
         IF    (R15,Z),BEGIN                                                    
         L     R3,CPMDLN                                                        
         IF    (R3,GE,10),BEGIN                                                 
         ERROR 'Too many line-numbers.',,MANYLNOS                               
         END                                                                    
         SLL   R3,2                                                             
         ST    R0,CPMDAD(R3)                                                    
         L     R3,CPMDLN                                                        
         INCR  R3                                                               
         ST    R3,CPMDLN                                                        
         END                                                                    
         CLEAR R15                                                              
         PEND                                                                   
         DROP  R2                                                               
         EJECT                                                                  
*                                                                               
*  PROCESS X/Y RANGE, OR X (Y) RANGE                                            
*                                                                               
*  ON ENTRY: X SCANNED, AND R0 = X VALUE                                        
*  ON EXIT: R0 = Y VALUE, WITH FLAGS SET FOR X/Y OR X (Y) FORM                  
*           R15 = 0 IF X/Y OR X (Y), R15 = NZ OTHERWISE                         
*           SCAN CONTROL BLOCK UPDATED IF X/Y OR X (Y)                          
*                                                                               
DOXLINE2 PROC  ,                                                                
         LR    R4,R0                                                            
         SCPUSH ,                                                               
         SCAN ,                                                                 
         SCANCHK                                                                
         COMMENT                   IF X/Y RANGE                                 
         IF    ((R0,EQ,1),AND,(@R1,EQ,'/')),BEGIN                               
         CLEAR CPFONEL                                                          
         SCAN  EX2SYMLN                                                         
         LR    R0,R3                                                            
         IF    (R3,LT,R4),BEGIN                                                 
         ERROR 'Invalid range.  Line-numbers are decreasing.'                   
         END                                                                    
         O     R0,=X'C0000000'  X/Y RANGE                                       
         CLEAR R15                                                              
         END                                                                    
         COMMENT                   IF X (Y) RANGE                               
         ELSEIF ((@R1,EQ,'('),AND,(R0,GT,2)),BEGIN                              
         CLEAR CPFONEL                                                          
         SCPUSH ,                                                               
         INCR  R1                                                               
         DECR  R0                                                               
         DECR  R0                                                               
         SCINIT (R1),(R0)                                                       
         SCAN  EX2COUNT                                                         
         SCANCHK                                                                
         SCPOP ,                                                                
         LR    R0,R3                                                            
         O     R0,=X'40000000'                                                  
         CLEAR R15                                                              
         END                                                                    
         COMMENT                   IF NONE OF ABOVE,                            
         ELSE  BEGIN                                                            
         SCPOP ,                                                                
         LR    R0,R4                                                            
         LA    R15,4                                                            
         END                                                                    
         PRETURN R0                                                             
         PEND                                                                   
*                                                                               
EX2SYMLN SCKW  ,MIS2LINE,NULL                                                   
         SCKW  ,EX2LINE,SYMLN                                                   
         SCKW  ,NOT2LINE                                                        
*                                                                               
EX2COUNT SCKW  ,MISCOUNT,NULL                                                   
         SCKW  ,EXCOUNT,I                                                       
         SCKW  ,NOTCOUNT                                                        
*                                                                               
MIS2LINE PROC  ,                                                                
         ERROR '/: invalid.  Incomplete range. '                                
         PEND  ,                                                                
*                                                                               
EX2LINE  PROC  ,                                                                
         LR    R3,R0                                                            
         PRETURN R3                                                             
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
NOT2LINE PROC  ,                                                                
         VCALL NOTVALID                                                         
         PEND                                                                   
*                                                                               
MISCOUNT PROC  ,                                                                
         ERROR '( ): invalid.  Incomplete range. '                              
         PEND  ,                                                                
*                                                                               
EXCOUNT  PROC  ,                                                                
         LR    R3,R0                                                            
         SCAN  ,                                                                
         IF    (R0,NZ),'VCALL NOTVALID'                                         
         PRETURN R3                                                             
         LA    R15,4                                                            
         PEND  ,                                                                
*                                                                               
NOTCOUNT PROC  ,                                                                
         VCALL NOTVALID                                                         
         PEND  ,                                                                
         EJECT                                                                  
*                                                                               
*  ASSOCIATIVE RANGE STUFF                                                      
*                                                                               
*                                                                               
DRSTR    SCKW  ,MISSQSTR,NULL                                                   
         SCKW  ,HVVSTR,V(MQUOTE)                                                
         SCKW  X,HVVHEX                                                         
         SCKW  C,HVVCTEX                                                        
         SCKW  P,HVVPAT                                                         
         SCKW  ^,SETNOT                                                         
         SCKW  ^X,HVVNHEX                                                       
         SCKW  ^C,HVVNCTEX                                                      
         SCKW  ^P,HVVNPAT                                                       
         SCKW  ,INCMPSTR                                                        
*                                                                               
DRSTR2   SCKW  ,MISSQSTR,NULL                                                   
         SCKW  ,HVVSTR,V(MQUOTE)                                                
         SCKW  X,HVVHEX                                                         
         SCKW  C,HVVCTEX                                                        
         SCKW  P,HVVPAT                                                         
         SCKW  ,INCMPSTR                                                        
*                                                                               
DRSTR3   SCKW  ,MISSQSTR,NULL                                                   
         SCKW  ,HVVSTR,V(MQUOTE)                                                
         SCKW  ,INCMPSTR                                                        
*                                                                               
DRCOL    SCKW  ,HVVCOL1,PI,&LINESZ                                              
         SCKW  IN,HVVIN                                                         
         SCKW  AND,HVVAND                                                       
         SCKW  OR,HVVOR                                                         
         SCKW  ,HVVOCCR,V(MPAREN)                                               
         SCKW  ,DRDONE                                                          
*                                                                               
DRCOL2   SCKW  /,HVVCOL2,(P,PI),&LINESZ                                         
         SCKW  IN,HVVIN                                                         
         SCKW  AND,HVVAND                                                       
         SCKW  OR,HVVOR                                                         
         SCKW  ,HVVOCCR,V(MPAREN)                                               
         SCKW  ,DRDONE                                                          
*                                                                               
DRCOL3   SCKW  IN,HVVIN                                                         
         SCKW  AND,HVVAND                                                       
         SCKW  OR,HVVOR                                                         
         SCKW  ,HVVOCCR,V(MPAREN)                                               
         SCKW  ,DRDONE                                                          
*                                                                               
DROLIST  SCKW  ,GTTAMOD,PI                                                      
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
DROLIST2 SCKW  /,GTTBMOD,(P,PI)                                                 
         SCKW  ,GTTAMOD,PI                                                      
         SCKW  ,V(SCNINVAL)                                                     
*                                                                               
DRIN     SCKW  IN,HVVIN                                                         
         SCKW  ,DRDONE                                                          
         EJECT                                                                  
         QLTORG                                                                 
         EJECT                                                                  
*                                                                               
*  ASSOCIATIVE RANGE PROCESSING ROUTINES                                        
*                                                                               
MISSQSTR PROC  ,                                                                
         ERROR 'Missing range.  Quoted string expected. '                       
         PEND                                                                   
*                                                                               
INCMPSTR PROC  ,                                                                
         TSEG  'Missing quoted string. ',,CR                                    
         VCALL NOTVALID                                                         
         PEND                                                                   
*                                                                               
DRDONE   PROC  ,                                                                
         SCBKUP                                                                 
         LA    R15,4                                                            
         PEND                                                                   
*                                                                               
* the following code handles the scan of strings in a range                     
* the registers used by this code are:                                          
*        R3 = 0 for 'string' or 4 for ^'string'                                 
*        R4 = 0 for first string, 8 if and is used or 16 for or                 
*        R5 = pointer to current string work area                               
*                                                                               
* NOTE ABOVE NOW SET FROM FLAGS.  (YUCK AND MUCK, WAS ONCE WORSE)               
*                                                                               
*                                                                               
HVVAND   PROC  ,                                                                
         IF    DRFOR,BEGIN                                                      
         ERROR 'Mixed AND/OR is not allowed in a range.',,MIXANDOR              
         END                                                                    
         SET   DRFAND                                                           
         CLEAR DRFLAG2                                                          
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR                                                         
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
HVVOR    PROC  ,                                                                
         IF    DRFAND,BEGIN                                                     
         ERROR 'Mixed AND/OR is not allowed in a range.',,MIXANDOR              
         END                                                                    
         SET   DRFOR                                                            
         CLEAR DRFLAG2                                                          
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR                                                         
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
HVVIN    PROC                                                                   
         SET   DRFIN                                                            
         SET   DRFNEEDX                                                         
         SETSCKWS EXRNG                                                         
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
SETNOT   PROC  ,                                                                
         SET   DRFNOT                                                           
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR2                                                        
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
HVVCTEX  PROC                                                                   
         SET   DRFCTEXT                                                         
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR3           SCAN STRING                                  
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
HVVNCTEX PROC                                                                   
         SET   DRFNOT                                                           
         SET   DRFCTEXT                                                         
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR3           SCAN STRING                                  
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
HVVHEX   PROC                                                                   
         SET   DRFHEX                                                           
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR3           SCAN STRING                                  
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
HVVNHEX  PROC                                                                   
         SET   DRFNOT                                                           
         SET   DRFHEX                                                           
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR3           SCAN STRING                                  
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
HVVPAT   PROC                                                                   
         SET   DRFPAT                                                           
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR3           SCAN STRING                                  
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
HVVNPAT  PROC                                                                   
         SET   DRFNOT                                                           
         SET   DRFPAT                                                           
         SET   DRFNEEDS                                                         
         SETSCKWS DRSTR3           SCAN STRING                                  
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
*  HAVE STRING                                                                  
*                                                                               
         USING ASRWA,R5                                                         
*                                                                               
HVVSTR   PROC  ,                                                                
         IF    DRFIN,BEGIN         EXPL. RANGE EXPECTED ("IN" SCANND)           
         ERROR 'Missing explicit range. '                                       
         END                                                                    
         CLEAR CPFRDRNG                                                         
         SET   CPFSTRRG            Set associative range                        
         CLEAR DRFNEEDS            CLEAR NEED STRING FLAG                       
         L     R5,CPSTAD           R5 IS LAST ASRWA POINTER                     
         IF    (R5,NZ),BEGIN                                                    
         CLEAR R4                                                               
         IF    (DRFAND),'LA R4,8'                                               
         IF    (DRFOR),'LA R4,16'                                               
         AH    R4,ASRBVAL          Calc. string type                            
         STH   R4,ASRBVAL          Save (in prev. asrwa)                        
         END                                                                    
*-                                                                              
*-       GET A RANGE INFO AREA FROM HEAP, AND LINK IT TO OTHER AREAS            
*-                                                                              
         XPUSH R0,R1               Save scan pointers                           
         LR    R3,R0               String len (with quotes and all)             
         LA    R0,L'ASRWA+(@R3-2)  Range work area max length                   
         IF    (DRFPAT),BEGIN                                                   
         LA    R0,L'ASRWA+&PATMAX+10  Max. (w/slop)                             
         END   ,                                                                
         VCALL GETHEAP             Returns, r1 - addr, r0 - length              
         LA    R3,ASRWA            R3 - PREVIOUS ASRWA                          
         LR    R5,R1               R5 - NEW ASRWA                               
         CLEAR ASRWA               Init                                         
         ST    R3,ASRPTR-ASRWA(R1) Set backward link                            
         ST    R5,CPSTAD           (we later change to forward links)           
         XPOP  R0,R1                                                            
*-                                                                              
*-       SET UP RANGE INFO                                                      
*-                                                                              
         CLEAR R3                                                               
         IF    (DRFNOT),' LA R3,4 '                                             
         STH   R3,ASRBVAL          Save string type                             
*                                                                               
         IF    (DRFCTEXT),BEGIN    C'STRING'                                    
         SET   ASRFLAG.ASRFTEXT    Indicate ignore case                         
         LA    R15,ASRSTRNG        Put string here ...                          
         VCALL DEQSTR              Remove quotes                                
         IF    M,'VCALL NOTVALID'                                               
         LTR   R15,R0                                                           
         IF    NP,EXIT             Nothing, scram                               
         L     R14,CVUPPTBL                                                     
         DEX   R15,'TR @R1(0),@R14'    convert to caps                          
         END                                                                    
*                                                                               
         ELSEIF (DRFPAT),BEGIN                                                  
         SET   ASRFLAG.ASRFPAT     Indicate Pattern                             
         LA    R15,ASRSTRNG        Put string here ...                          
         ACALL PENCODE             Encode the pattern                           
         STH   R15,ASRPLEN         Save minumum match len                       
         END                                                                    
*                                                                               
         ELSEIF (DRFHEX),BEGIN               Hex...                             
         LA    R15,ASRSTRNG        Put string here ...                          
         VCALL HEXSTR                                                           
         IF    NEG,'TSEG (R1),(R0); ERROR ": invalid hex.",,INVHEX'             
         END                                                                    
*                                                                               
         ELSE  BEGIN               SIMPLE STRING ...                            
         LA R15,ASRSTRNG                                                        
         VCALL DEQSTR                                                           
         IF    M,'VCALL NOTVALID'                                               
         END                                                                    
*                                                                               
         LTR   R15,R0              Resulting string len                         
         IF    Z,'SET ASRFLAG.ASRFBLKR'  set null string                        
         ELSE  'DECR R0; STH R0,ASRSTRLN'  save string len-1                    
*                                                                               
         SETSCKWS DRCOL            SCAN FOR COL OPTIONS                         
         CLEAR R15                                                              
         PEND                                                                   
         EJECT                                                                  
HVVCOL1  PROC  ,                                                                
         L     R5,CPSTAD                                                        
         IF    ((R0,NP),OR,(R0,GT,&LINESZ-1)),BEGIN                             
         ERROR 'Invalid column specification.'                                  
         END                                                                    
         S     R0,=F'1'            Reduce by one                                
         STH   R0,ASRSCOL          Save start position                          
         LH    R2,ASRSTRLN         String len                                   
         AR    R2,R0               Plus start                                   
         CH    R2,=AL2(&LINESZ-1)  Possible?                                    
         IF    H,'VCALL NOTVALID'  No                                           
         OI    ASRFLAG,ASRFONER    Set string start pos given                   
         TM    ASRFLAG,ASRFBLKR    Was this blank (null) string                 
         IF    O,'VCALL NOTVALID'  Yes, start position invalid                  
         SETSCKWS DRCOL2                                                        
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
HVVCOL2  PROC  ,                                                                
         L     R5,CPSTAD                                                        
         SH    R0,ASRSCOL          Length + one containing str                  
         IF    NP,'VCALL NOTVALID' Ng                                           
         IF    ^ASRFLAG.ASRFPAT,BEGIN                                           
         SH    R0,ASRSTRLN         Length possible start chars                  
         IF    NP,BEGIN                                                         
         SETMSG 'String is too long to fit within specified columns.'           
         ERROR (R1),(R0),BIGSTRRG                                               
         END                                                                    
         END   ELSE,BEGIN                                                       
         SH    R0,ASRPLEN          Length possible start chars                  
         AH    R0,=H'1'            Adjust                                       
         IF    NP,BEGIN                                                         
         SETMSG 'String is too long to fit within specified columns.'           
         ERROR (R1),(R0),BIGSTRRG                                               
         END                                                                    
         END   ,                                                                
         STH   R0,ASRCOMP          Stor max no. of compares                     
         XI    ASRFLAG,ASRFLIMR+ASRFONER  set for limited scan                  
         SETSCKWS DRCOL3                                                        
         CLEAR R15                                                              
         PEND                                                                   
*                                                                               
         DROP  R5                                                               
*                                                                               
         EJECT                                                                  
*                                                                               
*  PROCESS OCCURANCE LIST IN PARENS                                             
*  OR WE ARE AT END OF RANGE SPECIFICATION                                      
*                                                                               
*  NOTE:                                                                        
*  FOR SOME REASON, OCCURANCE LIST IS REFERED TO IN CODE AS MOD                 
*  LIST, SO COMMENTS ABOUT GTTAMOD ARE SAME AS GOTAOCCURANCE                    
*                                                                               
HVVOCCR  PROC  ,                                                                
*                                                                               
         COMMENT                   IF NOT (..,  END RANGE SCAN                  
         IF    (@R1,NE,'('),BEGIN                                               
         SCBKUP                                                                 
         LA    R15,4                                                            
         EXIT                                                                   
         END                                                                    
*                                                                               
         COMMENT                   SCAN INSIDE PARENS (OCCUR L.)                
         SCPUSH ,                Temp detrng ptr save                           
         SH    R0,=H'2'            Strip pars                                   
         IF    NP,'VCALL NOTVALID' Invalid msg                                  
         LA    R1,@R1+1            Kick ptr                                     
         SCINIT (R1),(R0)          Init inside parens                           
         SET   CPFMODS             Set mod indicator                            
         SR    R5,R5               Zero mod count                               
         ST    R5,CPMDLN           Init                                         
         LA    R4,CPMDAD-4         And set addr                                 
         SCAN  DROLIST             SCAN OCCURANCE LIST                          
         SCANCHK                   Done                                         
         SCPOP                                                                  
         SETSCKWS DRIN                                                          
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
GTTAMOD  PROC  ,                                                                
         L     R5,CPMDLN                                                        
         IF    (R5,GE,10),BEGIN                                                 
         ERROR 'Range modification list too big. (>10)'                         
         END                                                                    
         LR    R4,R5                                                            
         SLL   R4,2                                                             
         STH   R0,CPMDAD(R4)                                                    
         STH   R0,CPMDAD+2(R4)                                                  
         IF    (R5,POS),BEGIN                                                   
         LR    R4,R5                                                            
         DECR  R4                                                               
         SLL   R4,2                                                             
         CH    R0,CPMDAD+2(R4)                                                  
         IF    NH,BEGIN                                                         
         ERROR 'Range modification list not ascending. '                        
         END                                                                    
         END                                                                    
         L     R5,CPMDLN                                                        
         INCR  R5                                                               
         ST    R5,CPMDLN                                                        
         SETSCKWS DROLIST2         Look for slash or next mod                   
         CLEAR R15                                                              
         PEND  ,                                                                
*                                                                               
GTTBMOD  PROC  ,                                                                
         L     R4,CPMDLN                                                        
         DECR  R4                                                               
         SLL   R4,2                                                             
         CH    R0,CPMDAD(R4)                                                    
         IF    NH,BEGIN                                                         
         ERROR 'Range modification list not ascending. '                        
         END                                                                    
         STH   R0,CPMDAD+2(R4)                                                  
         SETSCKWS DROLIST                                                       
         CLEAR R15                                                              
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
         QLTORG ,                  ,,, DEBUG OF DETRNG                          
         TITLE 'DETRNG Routine'                                                 
         EJECT                                                                  
         AIF   (&$PCODE).NODETRNG                                               
*                                                                               
*  OLD DETRNG  (RANGE SCANNING)                                                 
*                                                                               
ZDETRNG  XENTER R2,R8,40                                                        
         CLEAR CPLFLG1.CPFALLV     ALL not defaulted (yet)                      
*                                                                               
         COMMENT                   Where is range to be selected                
         IF    CPFRDEXT,SETEXT     Branch if external                           
         IF    CPFRDEXE,SETEXEC    Branch if execute                            
         IF    CPFRDACT,SETACT                                                  
*                                  otherwise, it is active file                 
SETACT   IF    (CPALNCT,Z),ITSNIL  Active file is empty                         
         MVC   CPFSLN(8),CPAFLNO   Save FIRST,LAST linenos                      
         B     NOTNIL                                                           
*                                                                               
SETEXT   CLEAR CPFSLN              Set default                                  
         MVC   CPFSLN+4,CVMAXLNO   All for external file                        
         B     NOTNIL                                                           
*                                                                               
SETEXEC  VCALL EXECHK              Make sure there is an EXEC file              
         VCALL EXFRSTLN            Get FIRST lineno                             
         ST    R0,CPFSLN           Save FIRST                                   
         VCALL EXLASTLN            Get LAST lineno                              
         ST    R0,CPLSLN           Save LAST                                    
*                                                                               
NOTNIL   CLEAR CPFRDRNG                                                         
         SET   CPFEXPRG            Set explicit range                           
         LA    R6,HVFRSNO          Set for line number found                    
         LA    R2,EXRPRT0          First prt addr                               
         CLEAR R3                  Set R3 for normal string                     
         CLEAR R4                  Set R4 for first string                      
DETSCAN  OSCSAVE ,                 Save temp detrng scan pointers               
         LR    R1,R2               Set current prt addr                         
GOSCAN   OSCAN (R1)                Scan                                         
         BM    CVNVALID            Ng                                           
*                                                                               
CKIFLPRM IF    ^CPFSTRRG,BEGIN     Not string range...                          
         IF    ^CPLFLG1.CPFALL,BEGIN                                            
         TSEG  'Missing range'                                                  
         MVC   CPERRID,=CL8'MISSRNG'                                            
         SETMSG '.'                                                             
         IF    (CPCMNM,EQ,'D'),'SETMSG " for DELETE."'                          
         IF    (CPCMNM,EQ,'J'),'SETMSG " for JOIN."'                            
         IF    (CPCMNM,EQ,'S'),'SETMSG " for SPLIT."'                           
         IF    (CPCMNM,EQ,'R'),'SETMSG " for REPLACE."'                         
         IF    (CPCMNM,EQ,'MOV'),'SETMSG " for MOVE."'                          
         IF    (CPCMNM,EQ,'ALI'),'SETMSG " for ALIGN."'                         
         IF    (CPCMNM,EQ,'JUS'),'SETMSG " for JUSTIFY."'                       
         IF    (CPCMNM,EQ,'CEN'),'SETMSG " for CENTER."'                        
         B     CVERRMSG                                                         
         END                                                                    
         CLEAR CPLFLG1.CPFALL      Turn off default indicator                   
         SET   CPLFLG1.CPFALLV     ALL was specified/defaulted                  
         END                                                                    
RESTORS  OSCRSTR                                                                
         B     DETXIT                                                           
*                                                                               
DETALL   SET   CPLFLG1.CPFALLV     ALL specified (explicitly)                   
DETXIT   XEXIT                                                                  
         EJECT                                                                  
* the following code handles the scan of strings in a range                     
* the registers used by this code are:                                          
*        R3 = 0 for 'string' or 4 for ^'string'                                 
*        R4 = 0 for first string, 8 if and is used or 16 for or                 
*        R5 = pointer to current string work area                               
*                                                                               
         USING ASRWA,R5                                                         
*                                                                               
SETNOTT  LA    R3,4                set R3 for ^'string'                         
         LA    R2,EXRPRTA          Set to next prt to use                       
SCANSTR  OSCAN (R2)                Scan next token                              
         B     CVNVALID            Error if nothing                             
*                                                                               
HAVAND   LA    R0,8                Set for "and" found                          
         B     HAVANDOR            Go to common and/or code                     
*                                                                               
HAVOR    LA    R0,16               Set for "or" found                           
HAVANDOR CLEAR R3                  set R3 for normal 'string'                   
         LA    R2,RNGPRT5A         Set R2 to next prt to use                    
         CR    R0,R4               Check for mixed and-or                       
         BE    SCANSTR             Ok if same                                   
         LTR   R4,R4               Is this first and-or                         
         LR    R4,R0               Set R4 to and-or                             
         BE    SCANSTR             Ok if first and-or                           
         ERROR 'Mixed AND/OR is not allowed in a range.',,MIXANDOR              
*                                                                               
HAVNHEX  LA    R3,4                set R3 for ^'string'                         
HAVHEX   LA    R15,4               This is hex                                  
         B     HAVASSC1                                                         
*                                                                               
HAVNTEX  LA    R3,4                set R3 for ^c'string'                        
HAVTEX   LH    R15,=H'-4'          THIS IS T'STRING'                            
         B     HAVASSC1                                                         
*                                                                               
HAVNPAT  LA    R3,4                set R3 for ^p'string'                        
HAVPAT   LH    R15,=H'-8'          This is P'string'                            
         B     HAVASSC1                                                         
*                                                                               
HAVASSC  CLEAR R15                 String (not hex)                             
HAVASSC1 IF    (R2,Z),CVNVALID     Expl. range expected ("in" scanned)          
         IF    ((R3,Z),AND,(R4,Z)),BEGIN  first string...                       
         IF    ((@R1,NE,''''),AND,(@R1,NE,'"')),CKIFLPRM                        
         END                                                                    
*-                                                                              
*-       GET A RANGE INFO AREA FROM HEAP                                        
*-                                                                              
         XPUSH R0,R1               Save scan pointers                           
         LR    R2,R0               String len (with quotes and all)             
         LA    R0,L'ASRWA+(@R2-2)  Range work area max length                   
         IF    (R15,EQ,-8),BEGIN                                                
         LA    R0,L'ASRWA+&PATMAX+10  Max. (w/slop)                             
         END   ,                                                                
         VCALL GETHEAP             Returns, r1 - addr, r0 - length              
         IF    ('LTR R14,R4',Z),BEGIN  first string in range...                 
         ST    R1,CPSTAD           Save first asrwa ptr                         
         CLEAR CPFRDRNG                                                         
         SET   CPFSTRRG            Set associative range                        
         END                                                                    
         ELSE  BEGIN               Otherwise, link up new asrwa...              
         AH    R14,ASRBVAL         Calc. string type                            
         STH   R14,ASRBVAL         Save (in prev. asrwa)                        
         ST    R1,ASRPTR           Set forward link                             
         END                                                                    
         LR    R5,R1               Point R5 to new asrwa                        
         CLEAR ASRWA               Init                                         
         XPOP  R0,R1                                                            
*-                                                                              
*-       SET UP RANGE INFO                                                      
*-                                                                              
         STH   R3,ASRBVAL          Save string type                             
         IF    (R15,NP),BEGIN      'str' or c'str' or p'str'                    
         IF    Z,'LA R15,ASRSTRNG; VCALL DEQSTR; BM CVNVALID'                   
         ELSEIF (R15,EQ,-4),BEGIN  c'string'...                                 
         SET   ASRFLAG.ASRFTEXT    Indicate ignore case                         
         LA    R15,ASRSTRNG        Put string here ...                          
         VCALL DEQSTR              Remove quotes                                
         BM    CVNVALID                                                         
         LTR   R15,R0                                                           
         IF    NP,EXIT             Nothing, scram                               
         L     R14,CVUPPTBL                                                     
         DEX   R15,'TR @R1(0),@R14'    convert to caps                          
         END   ELSE,BEGIN                                                       
         SET   ASRFLAG.ASRFPAT     Indicate Pattern                             
         LA    R15,ASRSTRNG        Put string here ...                          
         ACALL PENCODE             Encode the pattern                           
         STH   R15,ASRPLEN         Save minumum match len                       
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Hex...                                       
         LA    R15,ASRSTRNG        Put string here ...                          
         VCALL HEXSTR                                                           
         IF    NEG,'TSEG (R1),(R0); ERROR ": invalid hex.",,INVHEX'             
         END                                                                    
         LTR   R15,R0              Resulting string len                         
         IF    Z,'SET ASRFLAG.ASRFBLKR'  set null string                        
         ELSE  'DECR R0; STH R0,ASRSTRLN'  save string len-1                    
*                                                                               
         LA    R2,RNGPRT2          Next prt                                     
         B     DETSCAN                                                          
         EJECT                                                                  
HAVSOM2  DECR  R15                 Reduce by one                                
         STH   R15,ASRSCOL         Save start position                          
         LH    R2,ASRSTRLN         String len                                   
         AR    R2,R15              Plus start                                   
         CH    R2,=AL2(&LINESZ-1)  Possible?                                    
         BH    CVNVALID            No                                           
         OI    ASRFLAG,ASRFONER    Set string start pos given                   
         TM    ASRFLAG,ASRFBLKR    Was this blank (null) string                 
         BO    CVNVALID            Yes, start position invalid                  
         LA    R2,RNGPRT3          Set next prt                                 
         B     DETSCAN             Go scan                                      
*                                                                               
HAVSOM3  SH    R15,ASRSCOL         Length + one containing str                  
         BNP   CVNVALID            Ng                                           
         IF    ^ASRFLAG.ASRFPAT,BEGIN                                           
         SH    R15,ASRSTRLN        Length possible start chars                  
         BNP   BAD2NDCL                                                         
         END   ELSE,BEGIN                                                       
         SH    R15,ASRPLEN         Length possible start chars                  
         AH    R15,=H'1'           Adjust                                       
         BNP   BAD2NDCL                                                         
         END   ,                                                                
         STH   R15,ASRCOMP         Stor max no. of compares                     
         XI    ASRFLAG,ASRFLIMR+ASRFONER  set for limited scan                  
         LA    R2,RNGPRT5          Set next prt                                 
         B     DETSCAN             Go scan                                      
*                                                                               
         DROP  R5                                                               
*                                                                               
BAD2NDCL SETMSG 'String is too long to fit within specified columns.'           
         MVC   CPERRID,=CL8'BIGSTRRG'                                           
         B     CVERRMSG                                                         
         EJECT                                                                  
HAVSOM4  CLI   @R1,C'('            Need left-paren                              
         BNE   CKIFLPRM            No                                           
HAVMODS  OSCSAVE ,                 Temp detrng ptr save                         
         SH    R0,=H'2'            Strip pars                                   
         BNP   CVNVALID            Invalid msg                                  
         LA    R1,@R1+1            Kick ptr                                     
         OSCINIT (R1),(R0)         Init inside parens                           
         SET   CPFMODS             Set mod indicator                            
         SR    R5,R5               Zero mod count                               
         ST    R5,CPMDLN           Init                                         
         LA    R6,CPMDAD-4         And set addr                                 
NXMDSCN  OSCAN MODPRTA             Scan for a mod                               
         B     FINMOD              Done                                         
*                                                                               
GOTAMOD  LA    R5,@R5+1            Count                                        
         CH    R5,=H'10'           10 is max                                    
         BH    CVNVALID            Ng                                           
         CH    R15,@R6+2           Are mods ascending                           
         BNH   CVNVALID            Branch no, illegal                           
         LA    R6,4(R6)            Set addr                                     
         STH   R15,@R6             Store                                        
         STH   R15,@R6+2           Assume no slash                              
         OSCAN MODPRTB             Look for slash or next mod                   
*                                                                               
FINMOD   ST    R5,CPMDLN           Store number of mods                         
         OSCRSTR ,                 Restore temp saved detrng ptrs               
         LA    R1,RNGPRT6          Set next prt addr                            
         B     GOSCAN              Go scan                                      
*                                                                               
GOTBMOD  CH    R15,@R6+2           Is it legal?                                 
         BL    CVNVALID            No                                           
         STH   R15,@R6+2           Store                                        
         B     NXMDSCN             Go for more                                  
         EJECT                                                                  
HAVEXPL  CLEAR R2                  Set for "in" & 1st time                      
         LA    R6,HVFRSNO          Set for line number found                    
         OSCSAVE ,                 Save current scan pointers                   
         OSCAN EXRPRT1             Look for 1st explicit range itm              
         ERROR 'Missing explicit range.'                                        
*                                                                               
HVFRSNO  SET   CPFONEL             Assume only one lineno specified             
         ST    R0,CPFSLN           Set 1st line no.                             
         MVC   CPLSLN,CPFSLN       Set one line range default                   
SCANGAN  MVC   @R8+32(8),CPTELL    Save pointer before this range               
         OSCSAVE ,                 Save temp detrng scan pointers               
         LA    R6,NUMSET           Set addr for line number                     
         OSCAN EXSLPRT             Look for slash                               
         B     DETXIT                                                           
*                                                                               
HVLSTNO  CLEAR CPFONEL             Reset only one lineno specified              
         ST    R0,CPLSLN           Store ending lineno                          
         CLC   CPLSLN,CPFSLN       Make sure eorange not les                    
         BNL   SCANGEN             Ok, goascan on                               
HVINVAL  LM    R1,R2,CPSAVE        Get last token pointer                       
         LA    R2,0(R1,R2)         Save pointer past token                      
         OSCRSTR @R8+32            Reset before this range                      
         OSCTELL (R1),(R0)         Get pointer before range                     
         LR    R0,R2               Calculate length                             
         SR    R0,R1               Of prompt message                            
         TSEG  (R1),(R0)           Put out bad range                            
         MVC   CPERRID,=CL8'BADRNG'                                             
         ERROR ': bad range (line-numbers are decreasing).'                     
         EJECT                                                                  
*-                                                                              
*-       BLOCK is the same as FBLOCK/LBLOCK.                                    
*-                                                                              
HAVBLOCK IF    ((CPCMNM,EQ,'PRI'),OR,(CPCMNM,EQ,'RUN')),BEGIN                   
         VCALL SCNRES              Don't allow block for PRINT/RUN              
         END                                                                    
*                                                                               
         L     R0,CPFBKLNO         FBLOCK lineno                                
         L     R1,CPLBKLNO         LBLOCK lineno                                
*                                                                               
         IF    (CPVFHIDE,OR,(CPBLKACT,Z)),BEGIN                                 
         ERROR 'BLOCK is not defined.'                                          
         END                                                                    
*                                                                               
         ST    R0,CPFSLN           Set first lineno                             
         ST    R1,CPLSLN           Set last lineno                              
*                                                                               
         B     SCANGEN                                                          
         EJECT                                                                  
SCANGEN  OSCSAVE                                                                
SCANGEN1 LA    R6,NUMSET           Set addr for line number                     
         OSCAN EXRPRT3             Scan for disjoint item                       
         B     DETXIT              Finished                                     
NUMSET   IF    CPFDSJNT,NTFRST     Disjoint set?                                
         IF    CPFMODS,CVNVALID    Mods used?                                   
         SET   CPFDSJNT            Set disjoint                                 
         CLEAR CPFONEL             Reset only one lineno specified              
         XC    CPMDLN,CPMDLN       Start count                                  
NTFRST   BAL   R3,SETMOD           Count                                        
         ST    R0,CPMDAD-4(R2)     Store line-no                                
         B     SCANGAN             More?                                        
*                                                                               
SETMOD   L     R2,CPMDLN           Get current number count                     
         LA    R2,@R2+1            Increment                                    
         CH    R2,=H'10'           More than max allowed                        
         BH    SETMODB             Branch yes                                   
         ST    R2,CPMDLN           Save new count                               
         SLL   R2,2                Shift for index                              
         BR    R3                  Return                                       
*                                                                               
SETMODB  TSEG  'Too many line-numbers.',,B                                      
         MVC   CPERRID,=CL8'MANYLNOS'                                           
         B     CVNVALID                                                         
         EJECT                                                                  
GOTXSLS  LA    R1,EXRPRT2          Set prt addr                                 
         LA    R6,HVLSTNO          Set addr for line number                     
         IF    ^CPFDSJNT,RGHTWUN   Right addr?                                  
         LA    R6,NUMBSET          Set other                                    
RGHTWUN  OSCAN (R1)                Scan                                         
         B     CVABSENT            Need something                               
*                                                                               
NUMBSET  BAL   R3,SETMOD           Count                                        
         ST    R0,CPMDAD-4(R2)     Save line number                             
         LA    R2,CPMDAD-8(R2)     Point to start of range                      
         OI    4(R2),FRNGTYP       Set normal two line range                    
         C     R0,@R2              Test valid range                             
         BNL   SCANGEN             More?                                        
         B     HVINVAL             Go report error                              
*                                                                               
TSTCNT   CLI   @R1,C'('            Is it count                                  
         BNE   RESTORS             No                                           
         OSCSAVE ,                 Save current position                        
         SH    R0,=H'2'            Reduce count for ()                          
         BNP   CVNVALID            Invalid if negative                          
         LA    R1,@R1+1            Point past (                                 
         OSCINIT (R1),(R0)         Init scanner                                 
         OSCAN CNTPRT              Scan for count                               
         B     CVNVALID            Invalid if none                              
*                                                                               
CNTOK    CLEAR CPFONEL             Reset only one lineno specified              
         LR    R4,R15              Save count                                   
         OSCAN ,                   See if anything else                         
         OSCRSTR ,                 Restore scanner                              
         BP    CVNVALID            Yes, invalid                                 
         IF    CPFDSJNT,CNTOK1     Branch if disjoint                           
         ST    R4,CPLSLN           Save count                                   
         OI    CPLSLN,FRNGTYP-X'80'  indicate count range                       
         B     SCANGEN1            Go scan on                                   
*                                                                               
CNTOK1   BAL   R3,SETMOD           Count                                        
         ST    R4,CPMDAD-4(R2)     Save count                                   
         LA    R2,CPMDAD-4(R2)     Point to save address                        
         OI    @R2,FRNGTYP-X'80'   Indicate count range                         
         B     SCANGEN1            Scan on                                      
         EJECT                                                                  
RNGPRT2  OSCKW ,HAVSOM2,PI,&LINESZ                                              
         OSCKW ,RNGPRT5,PUSH                                                    
*                                                                               
RNGPRT3  OSCKW /,HAVSOM3,(P,PI),&LINESZ                                         
RNGPRT5  OSCKW IN,HAVEXPL                                                       
         OSCKW AND,HAVAND                                                       
         OSCKW OR,HAVOR                                                         
         OSCKW ,HAVSOM4                                                         
*                                                                               
RNGPRT6  OSCKW IN,HAVEXPL                                                       
         OSCKW ,CKIFLPRM                                                        
*                                                                               
MODPRTB  OSCKW /,GOTBMOD,(P,PI)                                                 
MODPRTA  OSCKW ,GOTAMOD,PI                                                      
         OSCKW ,V(INVALID)                                                      
*                                                                               
RNGPRT5A OSCKW ^,SETNOTT                                                        
         OSCKW X,HAVHEX,P                                                       
         OSCKW ^X,HAVNHEX,P                                                     
         OSCKW C,HAVTEX,P                                                       
         OSCKW ^C,HAVNTEX,P                                                     
         OSCKW P,HAVPAT,P                                                       
         OSCKW ^P,HAVNPAT,P                                                     
         OSCKW ,HAVASSC                                                         
*                                                                               
EXRPRT0  OSCKW ^,SETNOTT                                                        
         OSCKW ^X,HAVNHEX,P                                                     
         OSCKW ^C,HAVNTEX,P                                                     
         OSCKW ^P,HAVNPAT,P                                                     
EXRPRT1  OSCKW ALL,DETALL                                                       
         OSCKW BLOCK,HAVBLOCK,A                                                 
         OSCKW ,V(LNENOPRT),PUSH                                                
EXRPRTA  OSCKW X,HAVHEX,P                                                       
         OSCKW C,HAVTEX,P                                                       
         OSCKW P,HAVPAT,P                                                       
         OSCKW ,HAVASSC                                                         
*                                                                               
EXRPRT2  OSCKW ,V(LNENOPRT),PUSH                                                
         OSCKW ,V(INVALID)                                                      
*                                                                               
EXSLPRT  OSCKW /,GOTXSLS                                                        
         OSCKW ,V(LNENOPRT),PUSH                                                
         OSCKW ,TSTCNT                                                          
*                                                                               
EXRPRT3  OSCKW ,V(LNENOPRT),PUSH                                                
         OSCKW ,RESTORS                                                         
*                                                                               
CNTPRT   OSCKW ,CNTOK,PI,32767                                                  
         OSCKW ,V(INVALID)                                                      
.NODETRNG ANOP                                                                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ENDLNO -- Routine to return the value of the END                             
*    line-number.                                                               
*                                                                               
*    On exit:                                                                   
*      R0 - END line-number                                                     
*      R1 - Suggested delta                                                     
*      R15- z=OK; neg=no next END lineno possible                               
*                                                                               
ENDLNO   XPROC                                                                  
         L     R1,CPALLNO          Get LAST line-number                         
         LR    R0,R1               Last line-number                             
         L     R1,CPDELTA          Delta                                        
         VCALL LOWMULT                                                          
         VCALL ADDER                                                            
         IF    NEG,'L R0,=F"-1000"'  No more linenos possible                   
         PRETURN (R0,R1)                                                        
         CLEAR R15                                                              
         IF    (R0,NEG),'LR R15,R0'  No END lineno                              
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ACTCHK -- Routine to make sure that there is an Active file.                 
*                                                                               
*    On exit:                                                                   
*      Returns only if there is an Active file.                                 
*                                                                               
ACTCHK   XPROC                                                                  
         LT    R15,CPALNCT         Is there an Active file?                     
         IF    Z,BEGIN                                                          
         ACALL ITSNIL              No, scram (no return)                        
         END                                                                    
         PEND                                                                   
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ITSNIL -- Give "No ACTIVE file" message.                                     
*                                                                               
ITSNIL   XPROC                                                                  
*-                                                                              
*-       This can be removed in about a month (it's 2/8/90) now.                
*-       The code is left in here, in case it has to be patched to              
*-       re-activate it.   "Niz"                                                
*-                                                                              
         IF    (R0,NE,R0),BEGIN    !!!                                          
         VCALL ORVCPASS            !!! Return command if wanted                 
         END   ,                   !!!                                          
*                                                                               
         TSEG  'No ACTIVE file.',,CR                                            
         MVC   CPERRID,=CL8'NOACTIVE'                                           
*                                                                               
         IF    (CPCMNM,EQ,'SPE'),BEGIN  SPELL command...                        
         TSEG  '(The command "GUESS word" can be used to '                      
         TSEG  'check the spelling of a word.)',,CR                             
         END                                                                    
         B     CVABORT                                                          
         PEND  ,                                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
***********************************************************************         
*   PENCODE -- Encode the Pattern String                                        
*                                                                               
*   On entry:   R1,R0 - Pattern string descriptor                               
*               R15 -> Area to put encoded pattern string                       
*   On exit:    R1,R0 - Encoded Pattern string descriptor                       
*               R15 - Holds length of minimum match                             
***********************************************************************         
PCWA     RECORD BEGIN                                                           
PCPTR    DS    F                                                                
PCAREA   DS    CL(&LINESZ)                                                      
         END                                                                    
*                                                                               
PENCODE  PROC  PCWA                                                             
         LR    R3,R15              R3 -> Pattern constuction area               
         LA    R6,@R3+&PATMAX      Arbitrary maximum                            
         LA    R15,PCAREA          R15 -> Area for dequoted string              
         VCALL DEQSTR              Dequote the string                           
*        IF    M,'VCALL NOTVALID'  Invalid string ...                           
         IF    M,BEGIN                                                          
         ERROR 'Missing (invalid) quotes for pattern string.'                   
         END                                                                    
         IF    (R0,NP),PENCODEX    Zip - let DETRNG handle null string          
         SPACE 1                                                                
         LR    R4,R3               R4 -> Pattern constuction area               
         ST    R3,PCPTR            Save pointer to start of encoding            
         CLEAR R3                  Clear minimun match length                   
         WHILE (R0,NZ),BEGIN       Process pattern ...                          
         IF    ((@R1,NE,'<'),OR,((@R1,EQ,'<<'),AND,(R0,GE,2))),BEGIN            
         CLEAR R15                 Clear literal string length                  
         MVI   @R4,C'L'            Flag entry as literal                        
         LA    R2,2(R4)            Skip to literal hold area                    
         IF    (R2,GT,R6),' ACALL PATMAXL'  Check limit                         
         WHILE (R0,POS),BEGIN                                                   
         IF    ((@R1,EQ,'<'),OR,(@R1,EQ,'>')),BEGIN                             
         IF    (((@R1,EQ,'<<'),OR,(@R1,EQ,'>>')),AND,(R0,GE,2)),BEGIN           
         MVC   @R2(1),@R1          Move the caret                               
         INCR  R15                 We moved one char ...                        
         INCR  R2                  Skip to next pattern slot                    
         IF    (R2,GT,R6),' ACALL PATMAXL'  Check limit                         
         LA    R1,2(R1)            Skip over carets                             
         SH    R0,=H'2'            Adjust len                                   
         END   ELSE,BEGIN                                                       
         IF    (@R1,EQ,'<'),PATLEND                                             
         ACALL PUNBAL              Unbalanced carets ...                        
         END   ,                                                                
         END   ELSE,BEGIN                                                       
         MVC   @R2(1),@R1          Move character                               
         INCR  R15                 We moved one char ...                        
         INCR  R2                  Skip to next pattern slot                    
         IF    (R2,GT,R6),' ACALL PATMAXL'  Check limit                         
         INCR  R1                  Skip to next parm char                       
         DECR  R0                  Drop count                                   
         END   ,                                                                
         END   ,                                                                
PATLEND  STC   R15,@R4+1           Set pattern data length                      
         AR    R3,R15              Add length into minimum match                
         LR    R4,R2               Update pattern construction start            
         END   ,                                                                
         IF    ((@R1,EQ,'<'),AND,(R0,NZ)),BEGIN  Generic segment ...            
         INCR  R1                  Skip over "<"                                
         DECR  R0                  Drop count                                   
         IF    (R0,Z),' ACALL PUNBAL' need more than this ...                   
         IF    (@R1,EQ,'>'),' ACALL PATNULL ' Null pattern ...                  
         MVI   @R4,C'P'            Move pattern char                            
         LA    R2,2(R4)            Skip to generic area                         
         IF    (R2,GT,R6),' ACALL PATMAXL'  Check limit                         
         CLEAR R5                  Clear len for pattern seg                    
         WHILE ((@R1,NE,'>'),AND,(R0,NZ)),BEGIN                                 
         IF    (@R1,EQ,'<'),' ACALL PUNBAL' Unbalanced carets ...               
         ACALL GETGEN              Get next generic                             
         IF    ((R15,EQ,255),OR,(@R1,EQ,'X'),OR,(@R1,EQ,'x')),BEGIN             
         IF    (R5,NZ),BEGIN       Need to close last segment                   
         STC   R5,@R4+1            Set previous segment len                     
         AR    R3,R5               Add into min match len                       
         LR    R4,R2               Skip to next segment slot                    
         MVI   @R4,C'P'            Start new pattern segment                    
         END   ,                                                                
         STC   R15,@R4+1           Set the segment length                       
         IF    (R15,EQ,255),'INCR R3'                                           
         ELSE  'AR R3,R15'                                                      
         MVC   @R4+2(1),@R1        Set the generic                              
         OI    @R4+2,X'40'         Force upper case                             
         LA    R4,3(R4)            Start a new segment                          
         MVI   @R4,C'P'            Start new pattern segment                    
         LA    R2,2(R4)            Skip to pattern slot                         
         IF    (R2,GT,R6),' ACALL PATMAXL'  Check limit                         
         CLEAR R5                  Clear segment data len                       
         END   ELSE,BEGIN                                                       
         AR    R5,R15              Add size to pattern len                      
         MVC   @R2(1),@R1          Move generic                                 
         OI    @R2,X'40'           Force upper case                             
         IF    (R15,GT,1),BEGIN    Ripple multiples ...                         
         DECR  R15                 We already moved one                         
         DEX   R15,'MVC @R2+1(*-*),@R2'                                         
         AH    R15,=H'2'           Adjust back to real length                   
         END   ,                                                                
         LA    R2,0(R15,R2)        Skip to next pattern slot                    
         IF    (R2,GT,R6),' ACALL PATMAXL'  Check limit                         
         END   ,                                                                
         INCR  R1                  Skip to next input char                      
         DECR  R0                  Adjust count                                 
         END   ,                                                                
         IF    (R5,NZ),BEGIN       Need to close out segment                    
         STC   R5,@R4+1            Set previous segment len                     
         AR    R3,R5               Add into min match len                       
         LR    R4,R2               Skip to next segment slot                    
         END   ,                                                                
         IF    ((R0,NZ),AND,(@R1,EQ,'>')),BEGIN                                 
         INCR  R1                  Skip over ">"                                
         DECR  R0                  Drop count                                   
         END   ,                                                                
         ELSE  ' ACALL PUNBAL'     Unbalanced carets                            
         END   ,                                                                
         END   ,                                                                
         MVI   @R4,C'$'            Flag end of pattern string                   
         LR    R15,R3              Return minimum match length                  
         L     R1,PCPTR            R1 -> Start of encoded pattern str           
         LR    R0,R4               Load endpoint address                        
         SR    R0,R1               Compute length of encoded string             
         INCR  R0                  Adjust ...                                   
         INCR  R0                                                               
PENCODEX PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         SPACE 2                                                                
*                                                                               
* GETGEN -- Get next generic from pattern parms                                 
*                                                                               
*  On exit:  R1 -> Generic                                                      
*            R15 = Repetition factor                                            
*                                                                               
GETGEN   PROC  ,                                                                
         IF    (@R1,EQ,'*'),BEGIN                                               
         INCR  R1                  Skip to next char                            
         DECR  R0                  Adjust length                                
         IF    (R0,NP),' ACALL INCOMPLT'    Need a generic ...                  
         LA    R15,255             Load special len                             
         END   ELSE,BEGIN                                                       
         VCALL DTB                 Look for repetition value                    
         IF    (R15,Z),'LA R15,1'  Use one if none given                        
         IF    (R15,GE,&PATMAX),' ACALL PATMAXL' Don't mess with this           
         LR    R14,R2              Copy current pattern slot ptr                
         AR    R14,R15             Compute future slot ptr                      
         IF    (R14,GT,R6),' ACALL PATMAXL' Check length                        
         IF    (R0,NP),' ACALL INCOMPLT'    No generic after rep                
         END   ,                                                                
         MVC   CPDOUB(1),@R1       Copy the generic                             
         OI    CPDOUB,X'40'        Force upper case                             
         IF    (CPDOUB,EQ,'A'),GENOK                                            
         IF    (CPDOUB,EQ,'N'),GENOK                                            
         IF    (CPDOUB,EQ,'S'),GENOK                                            
         IF    (CPDOUB,EQ,'B'),GENOK                                            
         IF    (CPDOUB,EQ,'C'),GENOK                                            
         IF    (CPDOUB,EQ,'X'),GENOK                                            
         ERROR 'Bad generic character specification (must be A,N,S,B,C *        
               or X).',,PATGENBD                                                
GENOK    PRETURN (R0,R1)                                                        
         PEND  ,                                                                
*                                                                               
*                                                                               
PATNULL  PROC  ,                                                                
  ERROR 'Generics are required between angle brackets.',,PATNULL                
         PEND  ,                                                                
PUNBAL   PROC  ,                                                                
  ERROR 'Unbalanced angle brackets in generic pattern.',,PATUNBAL               
         PEND  ,                                                                
INCOMPLT PROC  ,                                                                
  ERROR 'Missing generic following repetition factor.',,PATMISG                 
         PEND  ,                                                                
PATMAXL  PROC  ,                                                                
  ERROR 'Pattern specification is too long to use.',,PATOMAX                    
         PEND  ,                                                                
         SPACE 2                                                                
         QLTORG                                                                 
         TITLE 'READ RANGE (formerly DESPOT) Routine'                           
         EJECT                                                                  
*                                                                               
**                                                                              
**  DESPOT - OLD INTERFACE TO READ RANGE                                        
**                                                                              
**  ON ENTRY:  R15 - ONE BYTE FLAGS, 3 BYTES CO-ROUTINE ADDRESS                 
**                                                                              
**                                                                              
**  SEE READ RANGE (RDRNG) ROUTINE.                                             
**                                                                              
**                                                                              
*                                                                               
DESPOT   XPROC                                                                  
         LR    R0,R15                                                           
         SRL   R0,24                                                            
         LR    R1,R15                                                           
         SLL   R1,8                                                             
         SRL   R1,8                                                             
         VCALL RDRNG                                                            
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RDRNG (READ RANGE) the new DESPOT.                                           
*                                                                               
*  ON ENTRY:                                                                    
*        R0 - FLAGS, DESCRIBED BELOW                                            
*        R1 - CO-ROUTINE ADDRESS, THIS ROUTINE RECEIVES                         
*             CONTROL EACH TIME A LINE IN THE RANGE IS LOCATED.                 
*                                                                               
*  R0 contais a flag byte with the following codes:                             
*     DESRTRN = X'80' - means leave DESPOT with return                          
*     DESNRTN = X'00' - means leave DESPOT and return for next cmd              
*    LEXATRTN = X'40' - means use EXLOCATE                                      
*    LXCATRTN = X'60' - means use LXCATE                                        
*    LOCATRTN = X'00' - means use LOCATE                                        
*                                                                               
*    UNPRST,PREST WILL BE REMOVED FOR RDRNG (DESPOT) ABOUT 5/91                 
*    BY GG.SCH,,, ALL RDRNG CALLS WILL RETURN UNPRESSED                         
*       PREST = X'00' - return pressed line (R15 points to it)                  
*      UNPRST = X'01' - return unpressed line (R1=loc, R0=len)                  
*                                                                               
*                                                                               
*    DESABORT = X'04' - means that attention can interrupt range                
*    DESABORT = X'00' - means that attention will be ignored                    
*                                                                               
*  Both explicit and associative ranges are handled.                            
*                                                                               
*                                                                               
RRWA     RECORD BEGIN                                                           
RRFLAGS  FLAG  ,                                                                
RRSELECT FLAG  ,                                                                
         FLAG  RRACT                                                            
         FLAG  RREXEC                                                           
         FLAG  RRFROM                                                           
RRRTNAD  DS    A                                                                
RRFSLN   DS    2F                  FIRST LINE INFO                              
RRLINELN DS    F                   LINE LEN                                     
RRLINE   DS    XL(&PRESSZ+256)     UNPRESSED LINE                               
RRLINE2  DS    XL(&PRESSZ+256)     LINE WORK AREA (UPPER CASE LINE)             
         END                                                                    
*                                                                               
*                                                                               
RDRNG    XPROC RRWA                                                             
         CLEAR RRWA                                                             
         SET   CPFLSKIP            Set line skipped for first                   
         STC   R0,RRFLAGS                                                       
         ST    R1,RRRTNAD                                                       
         IF    (RRFLAGS.LXCATRTN,O),'SET RRFROM' digest flags                   
         ELSEIF (RRFLAGS.LEXATRTN,O),' SET RREXEC'                              
         ELSE  'SET RRACT'                                                      
         MVC   RRFSLN(8),CPFSLN    Save first range element                     
         TM    CPLFLG4,CPFDESRT    Re-entry to despot                           
         BO    DESPOTRE            Branch yes to set next line                  
         CLEAR R2                                                               
         ST    R2,CPCOUNT          No lines yet                                 
         ST    R2,CPOCCURS         Ditto                                        
         STH   R2,CPMDLN           Set no disjoints yet                         
         IF    CPFNCUR,NEWROUND    Br if not to update curr line ptr            
         IF    RRFROM,NEWROUND     Do external, exec active ..                  
         IF    RREXEC,DOEXEC                                                    
         MVC   CPACLNO,=F'-1000'   Set invalid * for active file                
         B     NEWROUND            Go initialize range                          
*                                                                               
DESPOTRE TM    CPLFLG4,CPFDESET    Test if cpnwln also set                      
         BZ    KICKNEX1            Br no                                        
* a re-entry to despot has been made specifying the next line                   
*   to use.  now any count range or occurrence count must be                    
*   updated to allow one extra line in the range.                               
         TM    CPLSLN,FRNGTYP      Is it a count range                          
         BZ    DESPOTR1            Br no                                        
         LH    R1,CPLSLN+2         Get the old count                            
         A     R1,CVONE            Add one to count                             
         STH   R1,CPLSLN+2         Save the new count                           
DESPOTR1 IF    ^CPFMODS,TSTKICK    Is this an occurrence count                  
         L     R1,CPOCCURS         Get occurrence count                         
         DECR  R1                  Reduce by one                                
         ST    R1,CPOCCURS         Save new count                               
         B     TSTKICK             Now go process                               
*                                                                               
DOEXEC   MVI   CPEXLINE,X'F0'      Set invalid * for exec file                  
NEWROUND MVC   CPNWLN,CPFSLN       Setup for start                              
         SPACE 1                                                                
*-                                                                              
*-       Get next line from ACTIVE/EXEC/External file.                          
*-                                                                              
*-                                                                              
         SPACE 1                                                                
GETNEXT  LABEL ,                   LOOP THRU LINES                              
*                                                                               
         COMMENT                   ACTIVE FILE                                  
         IF    RRACT,BEGIN                                                      
         L     R15,CPNWLN          Line-number to get                           
         LA    R1,RRLINE           Put line here                                
         ACALL GETLINE             Get line text                                
         BM    QUESFIN             End of file, scram                           
         ST    R0,RRLINELN                                                      
         MVC   CPNWLN,CPLCNO       Save line-number                             
         IF    (CPNWLN,GT,CPLSLN),QUESFIN  All done, scram                      
         END                                                                    
*                                                                               
         COMMENT                   EXEC FILE                                    
         IF    RREXEC,BEGIN                                                     
         LA    R1,RRLINE           Put line text here                           
         LA    R2,CPNWLN           Line-number to get                           
         VCALL EXFRST              Get line                                     
         BNZ   QUESFIN             End of file, scram                           
         ST    R0,RRLINELN                                                      
         MVC   CPLCNO,CPNWLN       Save line-number                             
         IF    (CPNWLN,GT,CPLSLN),QUESFIN  All done, scram                      
         END                                                                    
*                                                                               
*  NOTE:                                                                        
*  OLDIBM EXTREAD REQUIRES CPNWLN BE SET PROPERLY; SO DO NOT                    
*  DIDDLE WITH CPNWLN UNTIL OLDIBM (WYLBUR DISK) CODE IS                        
*  REMOVED IN FAVOR OF WINGS                                                    
*                                                                               
         COMMENT                   FROM EXTERNAL FILE                           
         IF    RRFROM,BEGIN                                                     
         MVC   RRLINE(&LINESZ),CVBLANKS   Pre blank line                        
         LA    R1,RRLINE           Put line text here                           
         LA    R0,&LINESZ          Max line length                              
         L     R3,CPNWLN           Min line-number to get                       
         VCALL EXTREAD             Get external line                            
         COMMENT                   Loop in line no. is too small                
         WHILE ((R15,Z),AND,(R2,LT,R3)),BEGIN                                   
         MVC   RRLINE(&LINESZ),CVBLANKS   Pre blank line                        
         LA    R1,RRLINE                                                        
         LA    R0,&LINESZ                                                       
         VCALL EXTREAD                                                          
         END                                                                    
         IF    (R15,NZ),QUESFIN    End of file, scram                           
         ST    R0,RRLINELN         Save line len                                
         ST    R2,CPLCNO           Save line number                             
         ST    R2,CPNWLN                                                        
         IF    (R2,GT,CVMAXLNO),BEGIN                                           
         ERROR 'Delta too big.  Command incomplete.'                            
         END                                                                    
         IF    (R2,GT,CPLSLN),QUESFIN  All done, scram                          
         END                                                                    
*                                                                               
*        Check for ATTN.                                                        
*                                                                               
         IF    RRFLAGS.DESABORT,BEGIN  It's abortable...                        
         XPUSH R15,,*                                                           
         VCALL TIDLEWR             Write buffer if idle for a while             
         XPOP  R15,,*                                                           
         END                                                                    
*                                                                               
         L     R2,CVCURJCB         Get JCB to test for abort                    
         WITH  (JCB,R2),BEGIN                                                   
         IF    JCBFATTN,BEGIN      Abort...                                     
         IF    ^RRFLAGS.DESABORT,EXIT  Not allowed to abort                     
         ACALL RNGABORT            Write aborted message                        
*                                                                               
         MVC   CPFSLN(8),RRFSLN    Reset first range element                    
         IF    ^RRFLAGS.DESRTRN,CVABORT  No return, scram                       
         LA    R15,4               Set attn rc                                  
         B     FINITO1                                                          
         END                                                                    
         END                                                                    
*                                                                               
         IF    CPFRQUIT,FINITO     Stop processing lines now                    
*                                                                               
         IF    CPFSTRRG,LOCSTR     Associative type range                       
         B     TRNSMIT                                                          
*                                                                               
LOCSTR   LABEL ,                                                                
         L     R6,CPSTAD           Get first string work area                   
         USING ASRWA,R6                                                         
NEXSTR1  IF    ASRFLAG.ASRFTEXT,BEGIN  text match requires extra...             
         LTR   R15,R0                                                           
         IF    POS,BEGIN           Get a copy of the line...                    
         MVC   RRLINE2(&LINESZ),@R1  Local copy (incl. trail blanks)            
         L     R1,CVUPPTBL                                                      
         DEX   R15,'TR RRLINE2(0),@R1'  Convert to caps                         
         SETMSG RRLINE2,(R0)                                                    
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   PROCESS BLANK LINES                          
         LTR   R3,R0               Count = 0, blankline                         
         IF    NP,BEGIN            IF BLANK LINE,,,                             
         TM    ASRFLAG,ASRFBLKR    Is this blank line rnage                     
         BO    STRFND              Yes, go to string found                      
         B     STRNFND            No, go to string not found                    
         END                                                                    
         COMMENT                   IF NOT BLANK, AND WE WANTED BLANK            
         TM    ASRFLAG,ASRFBLKR    Blank lines?                                 
         BO    STRNFND            Yes - not in range                            
*                                                                               
         COMMENT                   PROCESS PATTERN MATCH                        
         IF    ASRFLAG.ASRFPAT,BEGIN                                            
         ACALL PMATCH                                                           
         IF    (R15,Z),STRFND                                                   
         IF    (R15,NZ),STRNFND                                                 
         END                                                                    
*                                                                               
         COMMENT                   PROCESS STANDARD STRING MATCH                
         ACALL STRMATCH                                                         
         IF    (R15,Z),STRFND                                                   
         IF    (R15,NZ),STRNFND                                                 
*                                                                               
         COMMENT                   NO OTHER OPTIONS                             
         BOMB                                                                   
         EJECT                                                                  
*                                                                               
* string has not been found in line -- this test is 'success' if                
* string not wanted or 'unsuccess' if string wanted                             
*                                                                               
STRNFND  LH    R5,ASRBVAL          Pick up branch index                         
*        B     *+4(R5)             Go to proper branch                          
*        B     KICKNEX   unsuccess For last strng - not in range                
*        B     QUESLIN   success for last string - line in range                
*        B     KICKNEX   unsuccess - Line not in range for and                  
*        B     NEXSTRNG  success - Get next string for and                      
*        B     NEXSTRNG  unsuccess - Get next string for or                     
*        B     QUESLIN   success - Line in range for or                         
         IF    (R5,EQ,0),KICKNEX                                                
         IF    (R5,EQ,4),QUESLIN                                                
         IF    (R5,EQ,8),KICKNEX                                                
         IF    (R5,EQ,12),NEXSTRNG                                              
         IF    (R5,EQ,16),NEXSTRNG                                              
         IF    (R5,EQ,20),QUESLIN                                               
         BOMB  , MUST BE ONE OF ABOVE                                           
*                                                                               
* string has been found in line -- this test is 'success' if                    
* string wanted or 'unsuccess' if string not wanted                             
*                                                                               
STRFND   LH    R5,ASRBVAL          Pick up branch index                         
*        B     *+4(R5)             Go to proper branch                          
*        B     QUESLIN   success for last string - line in range                
*        B     KICKNEX   unsuccess For last strng - not in range                
*        B     NEXSTRNG  success - Get next string for and                      
*        B     KICKNEX   unsuccess - Line not in range for and                  
*        B     QUESLIN   success - Line in range for or                         
*        B     NEXSTRNG  unsuccess - Get next string for or                     
*                                                                               
         IF    (R5,EQ,0),QUESLIN                                                
         IF    (R5,EQ,4),KICKNEX                                                
         IF    (R5,EQ,8),NEXSTRNG                                               
         IF    (R5,EQ,12),KICKNEX                                               
         IF    (R5,EQ,16),QUESLIN                                               
         IF    (R5,EQ,20),NEXSTRNG                                              
         BOMB  , MUST BE ONE OF ABOVE                                           
*                                                                               
NEXSTRNG L     R6,ASRPTR           Point to next string area                    
         LA    R1,RRLINE           Restore pointers to line                     
         L     R0,RRLINELN                                                      
         B     NEXSTR1             Go do next string                            
         EJECT                                                                  
* the current line passes all string range tests - now process                  
*        any occurrence counts                                                  
QUESLIN  LA    R1,RRLINE           Set R1 to unpressed                          
         IF    ^CPFMODS,TRNSMIT    Mods                                         
         L     R2,CPOCCURS         Increase occurance count                     
         LA    R2,@R2+1                                                         
         ST    R2,CPOCCURS                                                      
         LA    R15,CPMDAD          Addr of mods                                 
         L     R14,CPMDLN          Count                                        
TRYNXMD  CH    R2,@R15             Less not in                                  
         BL    KICKNEX                                                          
         CH    R2,@R15+2           Gtr not in                                   
         BL    TRNSMIT             Got one                                      
         BE    TRNSMATE            Got one                                      
TRYMRMD  LA    R15,@R15+4          Kick ptr                                     
         BCT   R14,TRYNXMD         More                                         
         B     QUESFIN             No, go finish up                             
*                                                                               
TRNSMATE BCT   R14,TRNSMIT         Test for more mods                           
         MVC   CPLSLN,CPNWLN       Force as last line                           
         B     TRNSMIT             Now transmit the record                      
         EJECT                                                                  
*                                                                               
*  SEND LINE TO CO-ROUTINE                                                      
*                                                                               
TRNSMIT  IF    ^CPFNCUR,BEGIN      do update current line ptr                   
         IF    RRACT,BEGIN                                                      
         MVC   CPACLNO,CPLCNO      Update current for active file               
         END                                                                    
         IF    RREXEC,BEGIN                                                     
         MVC   CPEXLINE,CPLCNO     Update current exec line                     
         END                                                                    
         END                                                                    
         INCR  R15,CPCOUNT         Count number of lines found                  
         SET   CPFSOME             Set something                                
*                                                                               
*  LOAD REGS AND CALL CO-ROUTINE !                                              
*                                                                               
*                                                                               
         LA    R1,RRLINE                                                        
         L     R0,RRLINELN                                                      
         LR    R15,R1              ** DEBUG ** WHAT SHOULD R15 BE ??            
         L     R15,CPLCNO          ** DEBUG ** LINE NO SOUNDS GOOD.             
         L     R14,RRRTNAD         CO-ROUTINE ADDRESS                           
         CALLRTNP R14              CALL ROUTINE VIA POINTER IN R14              
*                                                                               
         COMMENT , ** DEBUG **    SOMEDAY R15=NZ WILL ABORT RANGE               
*        IF    (R15,NZ),...                                                     
*                                                                               
*                                                                               
*                                                                               
         CLEAR CPFLSKIP            Set no lines skipped flag                    
TSTKICK  IF    RRFROM,BEGIN        EXTERNAL FILE ...nal...                      
         CLEAR CPNWLN              Always get next available line               
         B     TSTRNGTP            Go test if end of range                      
         END                                                                    
*                                                                               
         TM    CPLFLG4,CPFDESET    Has cpnwln been set by work                  
         BZ    KICKNEX1            Branch no                                    
         NI    CPLFLG4,255-CPFDESET  Yes, reset flag                            
         L     R0,CPNWLN           Load value of cpnwln                         
         B     TSTRNGTP            Go test if at end of range                   
         DROP  ASRWA                                                            
*                                                                               
KICKNEX  SET   CPFLSKIP            Set line skipped in range                    
KICKNEX1 LA    R1,1                Increment line no                            
         L     R0,CPNWLN           Pickup last line no sent                     
         VCALL ADDER                                                            
         BM    QUESFIN             Too big.                                     
         ST    R0,CPNWLN           Set for next locate                          
TSTRNGTP TM    CPLSLN,FRNGTYP      Test count or explicit end                   
         BZ    GOTNEX              Branch explicit end                          
         LH    R1,CPLSLN+2         Get remaining count                          
         BCT   R1,GOTCNT           Decr and br if not end                       
         B     QUESFIN             Go test if finished                          
*                                                                               
GOTCNT   STH   R1,CPLSLN+2         Save remaining count                         
         B     GETNEXT                                                          
*                                                                               
GOTNEX   C     R0,CPLSLN           Unless too big                               
         BNH   GETNEXT             Do next                                      
QUESFIN  IF    ^CPFDSJNT,FINISH    Disjoint or done                             
         LH    R1,CPMDLN           Disjoint length                              
         LA    R2,@R1+1            Plus 1 into R2                               
         CH    R2,CPMDLN+2         Done?                                        
         BH    FINISH              Yes                                          
         SLL   R1,2                Displacement into list                       
         LA    R1,CPMDAD(R1)       Addr item                                    
         MVC   CPFSLN(8),@R1       Move line nos                                
         BE    DUNWUN              Finished                                     
         TM    CPLSLN,FRNGTYP      One line range?                              
         BZ    DUNWUN              Yes                                          
         LA    R2,@R2+1            Kick counter                                 
         BNO   DUNTWO              Branch if count range                        
         NI    CPLSLN,255-FRNGTYP  Put into legal line no                       
         B     DUNTWO              Finish off                                   
DUNWUN   MVC   CPLSLN,CPFSLN       Set e-o-range                                
DUNTWO   STH   R2,CPMDLN           Restore counter                              
         SET   CPFLSKIP            Set line skipped in range                    
         B     NEWROUND            Do next sub-range                            
         EJECT                                                                  
FINISH   MVC   CPFSLN(8),RRFSLN    Reset first range element                    
         IF    CPFSOME,FINITO      Set not void range                           
*                                                                               
         IF    ^CPFTYPED,FINITO    Skip msg if not-typed                        
*                                                                               
         SETMSG 'No lines in range.'                                            
         IF    ^CPFSTRRG,BEGIN     Explicit range...                            
         IF    RRFROM,BEGIN        Nothing in external file...                  
         IF    ((CPFSLN,NZ),OR,(CPLSLN,NE,CVMAXLNO)),EXIT                       
         B     FINITO              No lines in ext file, skip msg               
         END                                                                    
*                                                                               
         SETMSG 'Lines'                                                         
         IF    ^CPFDSJNT,BEGIN     Only one range...                            
         IF    (CPFSLN,EQ,CPLSLN),'DECR R0'  Only one lineno                    
     ELSEIF    ((CPLSLN.FRNGTYP,NZ),AND,(CPLSLN+2,EQ,=H'1')),'DECR R0'          
         END                                                                    
         TSEG  (R1),(R0),B                                                      
         ACALL SEGRNG                                                           
         TSEG  ' not in '                                                       
         CLEAR R0                                                               
         IF    RREXEC,'SETMSG "EXEC "'                                          
         IF    RRFROM,'SETMSG "EXTERNAL "'                                      
         TSEG  (R1),(R0)                                                        
         SETMSG 'file.'                                                         
         END                                                                    
*                                                                               
FINTS    TSEG  (R1),(R0),CR                                                     
FINITO   TM    RRFLAGS,DESRTRN     Leave                                        
         BZ    CVNEXT                                                           
         CLEAR R15                 Set range ended ok                           
FINITO1  CLEAR CPFRQUIT            Clear range stopped flag                     
         PEND  ,                                                                
         DROP  BR                                                               
         EJECT                                                                  
         USING ASRWA,R6                                                         
***********************************************************************         
** String Match -- Match literal string to line                                 
**                                                                              
**  On Entry:  R1,R0 -> Unpressed line    R6 -> ASRWA                           
**  ON EXIT: R15=0, IF MATCH,,, R15=NZ, IF NO MATCH                             
**                                                                              
**                                                                              
***********************************************************************         
STRMWA   RECORD BEGIN                                                           
SMTRTTAB DS    XL256                                                            
         END                                                                    
*                                                                               
*                                                                               
STRMATCH PROC  STRMWA                                                           
         CLEAR STRMWA                                                           
         LH    R5,ASRSTRLN         r5 is length of comapre string               
         TM    ASRFLAG,ASRFONER                                                 
         IF    O,BEGIN             if starting column, do compare               
         AH    R1,ASRSCOL          Point to the starting column                 
         EX    R5,' CLC @R1(0),ASRSTRNG'  Do the compare                        
         BE    STRYMAT             Br if string found                           
         B     STRNMAT             Br to string not found                       
         END                                                                    
         COMMENT                   SCAN FOR FIRST MATCH CHAR                    
         LC    R15,ASRSTRNG        Get first char.                              
         LA    R15,SMTRTTAB(R15)   Pt to table slot                             
         MVI   @R15,4              Set to stop                                  
         TM    ASRFLAG,ASRFLIMR    Search all line or limit                     
         IF    O,BEGIN             IF STRING HAS 2 COL LIMITS                   
         COMMENT                   SET LIMIT OF SCAN                            
         AH    R1,ASRSCOL          Point to correct first col                   
         LH    R3,ASRCOMP          Set no. of compares                          
         B     CHKIT               Now go do search                             
         END                                                                    
         CH    R3,=AL2(&LINESZ)    Max chars?                                   
         BNL   CHKIT               Yes                                          
         LA    R3,@R3+1            End scan at no. chars plus one               
CHKIT    LA    R15,0(R3,R5)        Last start +(len-1) le &linesz               
         CH    R15,=AL2(&LINESZ)   Compare                                      
         BNH   MTRT0               Ok                                           
         LA    R3,&LINESZ          Fixup                                        
         SR    R3,R5                                                            
*                                                                               
MTRT0    DECR  R3                  -1 for execute                               
MTRT     LR    R4,R1               Save start pointer                           
         EX    R3,'TRT @R1(0),SMTRTTAB' try to match first char                 
         IF    Z,STRNMAT             nope -- >                                  
         COMMENT                     got first char match                       
         EX    R5,' CLC @R1(0),ASRSTRNG'  try string match                      
         BE    STRYMAT               got match -->                              
         LA    R1,@R1+1            Pt to next scan pos.                         
         LR    R2,R1               Get stop pt + 1                              
         SR    R2,R4               Calculate #chars. scanned                    
         SR    R3,R2               Are we finished?                             
         BNM   MTRT                No, continue on                              
         B     STRNMAT             Yes - We tried                               
*                                                                               
STRNMAT  LABEL                                                                  
         LA    R15,4                                                            
         B     STRMDONE                                                         
*                                                                               
STRYMAT  LABEL ,                                                                
         CLEAR R15                                                              
         B     STRMDONE                                                         
*                                                                               
STRMDONE LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
***********************************************************************         
** PMATCH -- Pattern match line to pattern string                               
**                                                                              
**  On entry:  R1,R0 -> Unpressed line                                          
**             R6    -> ASRWA                                                   
**  ON EXIT: R15=0, IF MATCH,,, R15=NZ, IF NO MATCH                             
**                                                                              
**                                                                              
***********************************************************************         
PMWA     RECORD BEGIN                                                           
PMR0     DS    F                                                                
PMR1     DS    F                                                                
PMFLAG   FLAG  ,                   - Flags                                      
         FLAG  PMWILD                  Wild card in effect                      
         FLAG  PMFIRST                 First match performed                    
PMGLINE  DS    XL(&LINESZ)         - Generic copy of current line               
         END                                                                    
         SPACE 2                                                                
*********                                                                       
*** Encode a working copy of the line to generics                               
*********                                                                       
PMATCH   PROC  PMWA                                                             
         CLEAR PMWA                                                             
         ST    R0,PMR0                                                          
         ST    R1,PMR1                                                          
         IF    ('LTR R15,R0',POS),BEGIN                                         
         MVC   PMGLINE(&LINESZ),@R1 Local copy (incl. trl. blanks)              
         DEX   R15,'TR PMGLINE(0),GENTBL' Translate to generics ...             
         END   ,                                                                
         LA    R2,PMGLINE          R2 -> Start of generic line                  
         SPACE 2                                                                
*********                                                                       
*** Adjust working portion of line based on column specs                        
*********                                                                       
         SET   PMWILD+PMFIRST      First match/starting wild                    
         SPACE 1                                                                
         IF    ASRFLAG.ASRFONER,BEGIN  Specific starting column ...             
         AH    R1,ASRSCOL          Adjust to proper starting col                
         AH    R2,ASRSCOL          Ditto for generic line                       
         CLEAR PMWILD  Don't assume starting wild card                          
         END   ,                                                                
         SPACE 1                                                                
         IF    ASRFLAG.ASRFLIMR,BEGIN  Specific column range ...                
         AH    R1,ASRSCOL          Adjust to proper starting col                
         AH    R2,ASRSCOL          Ditto for generic line                       
         LH    R0,ASRCOMP          Load proper length                           
         END   ,                                                                
         SPACE 2                                                                
*********                                                                       
*** Match the pattern to whatever piece of line is left                         
*********                                                                       
PRECURSE LA    R4,ASRSTRNG         R4 -> Pattern string                         
         SPACE 1                                                                
         WHILE ((@R4,NE,'$'),AND,(R0,POS)),BEGIN  Process pattern               
         IF    (@R4,EQ,'L'),BEGIN  Literal segment ...                          
         IF    PMWILD,BEGIN        Wild card ...                                
PATLOOP1 ACALL PATSEEK             Find first character                         
         IF    NEG,PNMAT           Didn't find starting char                    
         AR    R2,R15              Adjust generic line accordingly              
         END   ,                                                                
         LC    R3,@R4+1            Load comparison length                       
         DEX   R3,'CLC @R1(*-*),@R4+2' Check for our string                     
         IF    NE,BEGIN            Didn't find it ...                           
         IF    (ASRFLAG.ASRFONER,AND,PMFIRST),PNMAT                             
         CLEAR PMFIRST             No longer first match                        
         IF    ^PMWILD,BEGIN                                                    
         IF    ASRFLAG.ASRFONER,PNMAT                                           
         SET   PMWILD                                                           
         B     PRECURSE                                                         
         END   ,                                                                
         INCR  R1                  Skip to next char                            
         INCR  R2                  (Ditto for generic line)                     
         DECR  R0                  Adjust length                                
         B     PATLOOP1            Loop back                                    
         END   ,                                                                
         CLEAR PMFIRST             No longer first match                        
         INCR  R3                  Get back real matched length                 
         LA    R1,0(R1,R3)         Skip over matched part                       
         LA    R2,0(R2,R3)         Ditto for generic string                     
         SR    R0,R3               Compute # chars left in line                 
         CLEAR PMWILD              Wild card is now done                        
         END   ,                                                                
         ELSEIF (@R4+2,EQ,'X'),BEGIN                                            
         LC    R3,@R4+1            Load the repetition factor                   
         IF    (R3,EQ,255),BEGIN                                                
         SET   PMWILD              Wild card in effect                          
         LA    R3,1                Always skip one                              
         END   ,                                                                
         AR    R1,R3               Skip over specified # chars                  
         AR    R2,R3               Ditto for generics                           
         SR    R0,R3               Adjust length                                
         END   ELSE,BEGIN          Pattern segment ...                          
         IF    PMWILD,BEGIN        Wild card ...                                
PATLOOP2 ST    R1,PMR1             Save R1 for a bit                            
         LR    R1,R2               Scan the generic line                        
         ACALL PATSEEK             Find first character                         
         LR    R2,R1               Restore to proper pointer                    
         L     R1,PMR1             Restore R1                                   
         IF    (R15,NEG),PNMAT     Didn't find starting generic                 
         AR    R1,R15              Adjust char line accordingly                 
         END   ,                                                                
         LC    R3,@R4+1            Load comparison length                       
         IF    (R3,EQ,255),'LA R3,1' Just compare first for now                 
         DEX   R3,'CLC @R2(*-*),@R4+2' Check for our string                     
         IF    NE,BEGIN            Didn't find  it ...                          
         IF    (ASRFLAG.ASRFONER,AND,PMFIRST),PNMAT                             
         CLEAR PMFIRST             No longer first match                        
         IF    ^PMWILD,BEGIN                                                    
         IF    ASRFLAG.ASRFONER,PNMAT                                           
         SET   PMWILD                                                           
         B     PRECURSE                                                         
         END   ,                                                                
         INCR  R1                  Skip to next char                            
         INCR  R2                  (Ditto for generic line)                     
         DECR  R0                  Adjust length                                
         B     PATLOOP2            Loop back                                    
         END   ,                                                                
         CLEAR PMFIRST             No longer first match                        
         LC    R3,@R4+1            Get back match length                        
         IF    (R3,EQ,255),BEGIN   A "don't care" length ...                    
         WHILE (('CLC @R2(1),@R4+2',EQ),AND,(R0,NZ)),BEGIN                      
         INCR  R1                  Skip to next char                            
         INCR  R2                  Ditto for generic line                       
         DECR  R0                  Adjust Length                                
         END   ,                                                                
         END   ELSE,BEGIN                                                       
         LA    R1,0(R3,R1)         Skip over matched part                       
         LA    R2,0(R3,R2)         Ditto for generic string                     
         SR    R0,R3               Compute # chars left in line                 
         END   ,                                                                
         CLEAR PMWILD              Wild card is now done                        
         END   ,                                                                
         LC    R3,@R4+1            Load segment data length                     
         IF    ((R3,EQ,255),OR,(@R4+2,EQ,'X')),'LA R3,1'                        
         LA    R4,2(R3,R4)         Skip to next segment                         
         END   ,                                                                
         SPACE 2                                                                
         IF    (@R4,EQ,'$'),BEGIN                                               
         L     R0,PMR0             Restore original R0                          
         B     PYMAT               We found it!                                 
         END   ,                                                                
         SPACE 1                                                                
*                                                                               
PYMAT    LABEL ,                                                                
         CLEAR R15                                                              
         B     PMATDONE                                                         
*                                                                               
PNMAT    LABEL ,                                                                
         LA    R15,4                                                            
         B     PMATDONE                                                         
*                                                                               
PMATDONE LABEL ,                                                                
         PEND  ,                                                                
         EJECT                                                                  
*********                                                                       
*   Seek Subroutine                                                             
*                                                                               
*   On Entry: R4 -> Pattern Descriptor                                          
*             R1 -> String start                                                
*             R0 =  String length                                               
*                                                                               
*   On Exit:  (R15 NEG) Not there                                               
*             (R15 POS) R1 -> String Start                                      
*                       R0 =  Remaining string length                           
*                       R15 = Number of character skipped                       
********                                                                        
PSWA     RECORD BEGIN                                                           
PSSTART  DS    A                                                                
PSTRTTAB DS    XL256                                                            
         END                                                                    
*                                                                               
*                                                                               
PATSEEK  PROC  PSWA                                                             
         CLEAR PSWA                                                             
         LC    R5,@R4+1            Pick up compare length                       
         IF    (R5,EQ,255),'LA R5,1'                                            
         IF    (R5,GT,R0),'LA R15,4; LCR R15,R15; B SEEKDONE'                   
         LC    R15,@R4+2           Pick up first char                           
         LA    R15,PSTRTTAB(R15)   Point to table slot                          
         MVI   @R15,4              Set to stop                                  
         LR    R3,R0               Copy line length                             
         SR    R3,R5               Compute length to perfrom TRT                
         ST    R1,PSSTART          Save starting address                        
         EX    R3,'TRT @R1(0),PSTRTTAB'                                         
         IF    NZ,BEGIN            A hit ...                                    
         LR    R15,R1              Copy character loc                           
         S     R15,PSSTART         Compute characters skipped                   
         SR    R0,R15              Compute characters left                      
         INCR  R0                  Adjust ...                                   
         END   ,                                                                
         ELSE  'LA R15,4; LCR R15,R15 '  Not there ...                          
         SPACE 1                                                                
SEEKDONE LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  RNGABORT -- Routine to stop the command and tell the user                    
*    where the range was stopped.                                               
*                                                                               
RNGABORT XPROC ,                                                                
         CLEAR CPFNONL             Reset NONL                                   
         TCCR                                                                   
         MVC   CPERRID,=CL8'ABORTRNG'                                           
         TSEG  'Range stopped before line '                                     
         L     R0,CPNWLN           Get abort line number                        
         VCALL CVEXNO              Convert to printable format                  
         TSEG  (R1),(R0),CR                                                     
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SEGRNG -- Local routine to format explicit range used.                       
*                                                                               
SEGRNG   PROC  ,                                                                
         L     R0,CPFSLN                                                        
         VCALL CVEXNO              First lineno                                 
         TSEG  (R1),(R0)                                                        
         IF    (CPLSLN.FRNGTYP,NZ),BEGIN  Occurrance...                         
         TSEG  '('                                                              
         TNUM  LH:CPLSLN+2                                                      
         TSEG  ')'                                                              
         END                                                                    
         ELSE  BEGIN               Last line...                                 
         IF    (CPFSLN,EQ,CPLSLN),EXIT  Same as first, scram                    
         TSEG  '/'                                                              
         L     R0,CPLSLN                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         END                                                                    
*                                                                               
         IF    CPFDSJNT,BEGIN      Disjoint range...                            
         CLEAR R2                                                               
         WHILE ('CH R2,CPMDLN+2',LT),BEGIN  More ranges...                      
         TSEG  ', '                                                             
         LR    R15,R2                                                           
         LA    R2,@R2+1                                                         
         SLL   R15,2                                                            
         LA    R3,CPMDAD(R15)                                                   
         L     R0,@R3                                                           
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         IF    ('CH R2,CPMDLN+2',GE),EXIT                                       
         MVC   CPDOUB(4),@R3+4                                                  
         NI    CPDOUB,255-FRNGTYP  Zot flags                                    
         IF    (@R3+4.FRNGTYP,ONES),BEGIN  Last line...                         
         LA    R2,@R2+1                                                         
         TSEG  '/'                                                              
         L     R0,CPDOUB                                                        
         VCALL CVEXNO                                                           
         TSEG  (R1),(R0)                                                        
         END                                                                    
         IF    (@R3+4.FRNGTYP,MIX),BEGIN  Occurrance...                         
         LA    R2,@R2+1                                                         
         TSEG  '('                                                              
         TNUM  L:CPDOUB                                                         
         TSEG  ')'                                                              
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PEND  ,                                                                
         SPACE 2                                                                
*-                                                                              
*-  GENTBL -- Translate table for EBCDIC to generic conversion.                 
*-                                                                              
         SPACE                                                                  
*                0123456789ABCDEF                                               
*                                                                               
GENTBL   DC    C'CCCCCCCCCCCCCCCC'   0                                          
         DC    C'CCCCCCCCCCCCCCCC'   1                                          
         DC    C'CCCCCCCCCCCCCCCC'   2                                          
         DC    C'CCCCCCCCCCCCCCCC'   3                                          
         DC    C'BCCCCCCCCCSSSSSS'   4                                          
         DC    C'SCCCCCCCCCSSSSSS'   5                                          
         DC    C'SSCCCCCCCCCSSSSS'   6                                          
         DC    C'CCCCCCCCCSSSSSSS'   7                                          
         DC    C'CAAAAAAAAACCCCCC'   8                                          
         DC    C'CAAAAAAAAACCCCCC'   9                                          
         DC    C'CCAAAAAAAACCCSCC'   A                                          
         DC    C'CCCCCCCCCCCCCSCC'   B                                          
         DC    C'SAAAAAAAAACCCCCC'   C                                          
         DC    C'SAAAAAAAAACCCCCC'   D                                          
         DC    C'SCAAAAAAAACCCCCC'   E                                          
         DC    C'NNNNNNNNNNCCCCCC'   F                                          
*                                                                               
         QLTORG                                                                 
         TITLE 'LOCATE Routine'                                                 
LOCWA    RECORD BEGIN                                                           
LOCLNO   DS    F                   Line-number to find                          
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  LOCATE -- For compatability only!  New callers should use the                
*    GETLINE routine.  The Active file is no longer kept in                     
*    pressed format so in order to return a pressed line to the                 
*    caller we get a little heap space and build a pressed line.                
*                                                                               
*    On entry:                                                                  
*      R1 - ptr to line-number                                                  
*                                                                               
*    On exit:                                                                   
*      R15 - points to a "pressed line image"                                   
*      CPLCNO - line-number of located line                                     
*                                                                               
*     Return flags (in 1st byte CPDRPT):                                        
*      CPFNTYT - X'80' - ACTIVE file is empty.                                  
*      CPFHIGH - X'40' - locate line higher than any preexisting                
*                        with CPLCNO not set                                    
*      CPFMTCH - X'08' - locate line matches an existing lineno                 
*                                                                               
LOCATE   XPROC LOCWA                                                            
         MVC   LOCLNO,@R1          Save line-number                             
*-                                                                              
*-       Get the line text, press it and save it in the heap for the            
*-         caller.                                                              
*-                                                                              
         MVI   CPDRPT,0            Reset error flag byte                        
*                                                                               
         L     R15,LOCLNO                                                       
         L     R1,CPPRESSL         Get press buffer (heap space)                
         IF    (R1,Z),BEGIN                                                     
         LA    R0,&PRESSZ                                                       
         VCALL GETHEAP                                                          
         ST    R1,CPPRESSL                                                      
         END                                                                    
         ACALL GETLINE             Get line                                     
         IF    NEG,BEGIN           Line-number is too high...                   
         SET   CPDRPT.CPFHIGH                                                   
         LA    R15,CPTEXT          Active file record group                     
         LA    R0,1                Set number 1 (temporary)                     
         VCALL XCHKSET             Any lines at all?                            
         IF    Z,'SET CPDRPT.CPFNTYT'  No                                       
         END                                                                    
*                                                                               
         ELSE  BEGIN               Found a line...                              
         IF    (R15,Z),'SET CPDRPT.CPFMTCH'  Matched exactly                    
         L     R15,CPLCNO          Located line-number                          
         VCALL PRESS               Press line                                   
         END                                                                    
*                                                                               
         L     R15,CPPRESSL        Always return same area                      
         PEND                                                                   
         TITLE 'LOCATE line in Exec File'                                       
LEXWA    RECORD BEGIN                                                           
LEXLNO   DS    F                   Line-number to find                          
LEXTEMP  DS    F                   Working line-number                          
LEXWLINE DS    CL(&LINESZ)         Working line text area                       
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  EXLOCATE -- For compatability only!  New callers should use the              
*    EXGET/EXNEXT routines in EXEC module.                                      
*                                                                               
*    Paramaters and returns are the same as for LOCATE routine.                 
*                                                                               
*    On entry:                                                                  
*      R1 - ptr to line-number                                                  
*                                                                               
*    On exit:                                                                   
*      R15 - points to a "pressed line image"                                   
*      CPLCNO - line-number of located line                                     
*                                                                               
EXLOCATE XPROC LEXWA                                                            
         MVC   LEXLNO,@R1          Save line-number                             
*-                                                                              
*-       Get the line text, press it and save it in the heap for the            
*-         caller.                                                              
*-                                                                              
         MVI   CPDRPT,0            Reset error flag byte                        
*                                                                               
         MVC   LEXTEMP,LEXLNO      Line-number                                  
         LA    R2,LEXTEMP                                                       
         L     R1,CPPRESSL         Get press buffer (heap space)                
         IF    (R1,Z),BEGIN                                                     
         LA    R0,&PRESSZ                                                       
         VCALL GETHEAP                                                          
         ST    R1,CPPRESSL                                                      
         END                                                                    
         VCALL EXFRST              Get exec line                                
         IF    NZ,'SET CPDRPT.CPFHIGH'  Higher than last line                   
*                                                                               
         ELSE  BEGIN                                                            
         IF    (LEXTEMP,EQ,LEXLNO),'SET CPDRPT.CPFMTCH'  Matched                
         L     R15,LEXTEMP         Located line-number                          
         ST    R15,CPLCNO          LOCATE must set CPLCNO                       
         VCALL PRESS               Press line                                   
         END                                                                    
*                                                                               
         L     R15,CPPRESSL        Always return same area                      
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         TITLE 'MATLINE Routine'                                                
MATWA    RECORD BEGIN                                                           
*                                                                               
MATFLAG  FLAG                                                                   
         FLAG  MATFMAT             - This line matches range                    
         FLAG  MATFAND             - AND-type range                             
         FLAG  MATFME              - This element matches                       
         FLAG  MATFWILD            - Wild card in effect                        
         FLAG  MATFIRST            - First match performed                      
*                                                                               
MATPCOL  DS    H                   Colum number must be after this              
MATCOL   DS    H                   First matching column (or zero)              
*                                                                               
MATPTR   DS    A                   Text line loc                                
MATRPTR  DS    A                   Rendition shadow buffer ptr                  
MATSAVE1 DS    A                   Local save                                   
MATSAVE2 DS    A                   Local save                                   
MATSTART DS    A                   Local save                                   
MATPBEG  DS    A                   Offset to start highlighting                 
*                                                                               
MATTLINE DS    CL(&LINESZ)         Copy of text line (for c'...')               
MATRLINE DS    XL(&LINESZ)         Working rendition buffer                     
*                                                                               
MATTRTTB DS    XL256               TRT table area                               
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  MATLINE -- Routine to highlight any text on a line that is part              
*    of the current associative range.  This routine is called by               
*    the page manager for the VIEW command.                                     
*                                                                               
*    On entry:                                                                  
*      CPLCNO - line-number                                                     
*      R1     - line loc (must be &LINESZ long)                                 
*      R2     - rendition line buffer or zero                                   
*                 (this shadows the line buffer ptr in R1)                      
*      R15    - column must be after this for a match                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0   - no match                                                           
*      pos - column number of first match                                       
*                                                                               
*    Note:  The X'02' bit is set for every character of the matched             
*           string in the rendition buffer.                                     
*                                                                               
MATLINE  XPROC MATWA                                                            
         CLEAR MATWA                                                            
*                                                                               
         STH   R15,MATPCOL         Must match column after this                 
         CLEAR MATCOL              Returned first match column                  
*                                                                               
         ST   R1,MATPTR            Save original line text ptr                  
         ST    R2,MATRPTR          Save rendition buffer ptr                    
*                                                                               
         CLEAR MATRLINE            Initialize rendition buffer                  
*                                                                               
         IF    ^CPFSTRRG,MATSEXIT  Not an associative range                     
*-                                                                              
*-       Check to see if the line-number is in explicit range.                  
*-                                                                              
         L     R6,CPLCNO           Our line-number                              
*                                                                               
         IF    (R6,GE,CPFSLN),BEGIN  It could be in bounds...                   
         IF    (CPLSLN.FRNGTYP,MIX),MATLOK  Assume "(m)" is a match             
         IF    (R6,LE,CPLSLN),MATLOK  It matches                                
         END                                                                    
*                                                                               
         IF    CPFDSJNT,BEGIN      Disjoint range...                            
         CLEAR R2                                                               
         WHILE ('CH R2,CPMDLN+2',LT),BEGIN  More ranges...                      
         LR    R15,R2                                                           
         LA    R2,@R2+1                                                         
         SLL   R15,2                                                            
         LA    R3,CPMDAD(R15)      Explicit range entry                         
         L     R15,@R3                                                          
*                                                                               
         IF    (('CH R2,CPMDLN+2',GE),OR,                              *        
               (@R3+4.FRNGTYP,Z)),BEGIN  Line n...                              
         IF    (R6,EQ,R15),MATLOK  Match                                        
         END                                                                    
*                                                                               
         ELSEIF (@R3+4.FRNGTYP,MIX),BEGIN  Lines n(m)...                        
         LA    R2,@R2+1                                                         
         IF    (R6,GE,R15),MATLOK  Assume it matches                            
         END                                                                    
*                                                                               
         ELSE  BEGIN               Lines n/m...                                 
         LA    R2,@R2+1                                                         
         MVC   CPDOUB(4),@R3+4     Ending lineno                                
         CLEAR CPDOUB.FRNGTYP      Zot flags                                    
         IF    ((R6,GE,R15),AND,('C R6,CPDOUB',LE)),MATLOK  Match               
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         B     MATSEXIT            Not in the explicit range                    
*-                                                                              
*-       Match strings in the associative range.                                
*-                                                                              
MATLOK   L     R6,CPSTAD                                                        
         USING ASRWA,R6                                                         
*                                                                               
         IF    ((ASRBVAL,EQ,8),OR,(ASRBVAL,EQ,12)),BEGIN  AND...                
         SET   MATFMAT+MATFAND     AND-type range                               
         END                                                                    
MATLOOP  IF    ASRFLAG.ASRFPAT,MATPLINE Pattern matching ...                    
         EJECT 1                                                                
*********************************************************************           
*  Process a regular string range element.                                      
*********************************************************************           
         L     R5,MATPTR           Text line loc                                
         IF    ASRFLAG.ASRFTEXT,BEGIN  Copy line to ignore case...              
         MVC   MATTLINE,@R5        Make a working copy                          
         L     R1,CVUPPTBL                                                      
         TR    MATTLINE,@R1        Convert to upper case                        
*                                                                               
         LA    R5,MATTLINE         Set new line loc ptr                         
         END                                                                    
         LA    R4,&LINESZ                                                       
*                                                                               
         CLEAR MATFME              Assume element won't match                   
*                                                                               
         IF    ASRFLAG.ASRFBLKR,MATNEXT  Ignore blank range                     
*                                                                               
         LH    R15,ASRSTRLN                                                     
         SR    R4,R15              Adjust length (for last compare)             
*                                                                               
         LC    R15,ASRSTRNG        First char of string                         
         LA    R15,MATTRTTB(R15)   Table position                               
         MVI   @R15,4              Set to stop                                  
*                                                                               
         LR    R1,R5               Working text ptr                             
*                                                                               
         IF    ASRFLAG.ASRFONER+ASRFLIMR,BEGIN  Limited columns...              
         AH    R1,ASRSCOL          Adjust for starting column                   
         SH    R4,ASRSCOL                                                       
*                                                                               
         IF    ASRFLAG.ASRFONER,'LA R4,1'  Only check this column               
         IF    ASRFLAG.ASRFLIMR,'CEIL R4,ASRCOMP'  Limit last column            
         END                                                                    
*                                                                               
         WHILE (R4,POS),BEGIN      Look for the string...                       
         LR    R3,R1                                                            
         DECR  R4                                                               
         EX    R4,'TRT @R1(0),MATTRTTB'  Match first char                       
         BZ    MATNEXT             No match, go get next string                 
MATCLC   LH    R15,ASRSTRLN                                                     
         EX    R15,' CLC   @R1(*-*),ASRSTRNG '                                  
         IF    EQ,BEGIN            Matched...                                   
         SET   MATFME              Text matches this element                    
         SR    R1,R5               Offset to matched string                     
         LA    R15,@R1+1           Matching column number                       
         IF    ((MATCOL,Z),AND,(R15,GT,MATPCOL)),BEGIN  Match...                
         STH   R15,MATCOL          Save first matching column                   
         END                                                                    
*                                                                               
         LA    R15,MATRLINE        Working rendition buffer                     
         AR    R15,R1                                                           
         LH    R2,ASRSTRLN         String length                                
         EX    R2,'OC @R15(0),MATHIGH'  Highlight the entire string             
*                                                                               
         LR    R1,R3               Advances one char                            
         END                                                                    
*                                                                               
         SR    R3,R1                                                            
         LCR   R3,R3               Length scanned                               
         LA    R1,@R1+1            Past last char matched                       
         SR    R4,R3               New length (note DECR above)                 
         END                                                                    
*                                                                               
MATNEXT  LABEL ,                                                                
         B     MATNEXTR            On to next string range                      
         EJECT 1                                                                
*********************************************************************           
** MATPLINE -- Pattern match line to pattern string                             
*********************************************************************           
         SPACE 2                                                                
*********                                                                       
*** Encode a working copy of the line to generics                               
*********                                                                       
MATPLINE L     R1,MATPTR           Load pointer to line                         
         LA    R0,&LINESZ          Load line length                             
         MVC   MATTLINE,@R1        Local copy                                   
         L     R15,=A(GENTBL)      Load pointer to generic table                
         TR    MATTLINE,@R15       Translate to generics ...                    
         LA    R2,MATTLINE         R2 -> Start of generic line                  
         CLEAR MATFME              Assume element won't match                   
         IF    ASRFLAG.ASRFBLKR,MATNEXTR Ignore blank range                     
         SPACE 2                                                                
*********                                                                       
*** Adjust working portion of line based on column specs                        
*********                                                                       
         SET   MATFWILD,MATFIRST   First match, starting wild                   
         SPACE 1                                                                
         IF    ASRFLAG.ASRFONER,BEGIN  Specific starting column ...             
         AH    R1,ASRSCOL          Adjust to proper starting col                
         AH    R2,ASRSCOL          Ditto for generic line                       
         CLEAR MATFWILD            Don't assume starting wild card              
         END   ,                                                                
         SPACE 1                                                                
         IF    ASRFLAG.ASRFLIMR,BEGIN  Specific column range ...                
         AH    R1,ASRSCOL          Adjust to proper starting col                
         AH    R2,ASRSCOL          Ditto for generic line                       
         LH    R0,ASRCOMP          Load proper length                           
         END   ,                                                                
         SPACE 2                                                                
*********                                                                       
*** Match the pattern to whatever piece of line is left                         
*********                                                                       
MATRECUR CLEAR MATPBEG             Reset match start offset                     
         SPACE 1                                                                
         LA    R4,ASRSTRNG         R4 -> Pattern string                         
         WHILE ((@R4,NE,'$'),AND,(R0,POS)),BEGIN  Process pattern               
         IF    (@R4,EQ,'L'),BEGIN  Literal segment ...                          
         IF    MATFWILD,BEGIN      Wild card ...                                
MATLOOP1 LABEL ,                                                                
         ACALL MATSEEK             Find first character                         
         IF    NEG,MATNEXTR        Didn't find starting char                    
         AR    R2,R15              Adjust generic line accordingly              
         END   ,                                                                
         LC    R3,@R4+1            Load comparison length                       
         DEX   R3,'CLC @R1(*-*),@R4+2' Check for our string                     
         IF    NE,BEGIN            Didn't find it ...                           
         IF    (ASRFLAG.ASRFONER,AND,MATFIRST),MATNEXTR                         
         CLEAR MATFIRST            No longer first match                        
         IF    ^MATFWILD,BEGIN                                                  
         IF    ASRFLAG.ASRFONER,MATNEXTR                                        
         SET   MATFWILD                                                         
         B     MATRECUR                                                         
         END   ,                                                                
         INCR  R1                  Skip to next char                            
         INCR  R2                  (Ditto for generic line)                     
         DECR  R0                  Adjust length                                
         B     MATLOOP1            Loop back                                    
         END   ,                                                                
         CLEAR MATFIRST            No longer first match                        
         INCR  R3                  Get back real matched length                 
         LA    R15,MATWA                                                        
         ACALL MATSETR             Set the rendition buffer                     
         LA    R1,0(R1,R3)         Skip over matched part                       
         LA    R2,0(R2,R3)         Ditto for generic string                     
         SR    R0,R3               Compute # chars left in line                 
         CLEAR MATFWILD            Wild card is now done                        
         END   ,                                                                
         ELSEIF (@R4+2,EQ,'X'),BEGIN                                            
         LA    R15,MATWA                                                        
         ACALL MATSETR             Set the rendition buffer                     
         LC    R3,@R4+1            Load the repetition factor                   
         IF    (R3,EQ,255),BEGIN                                                
         SET   MATFWILD            Wild card in effect                          
         LA    R3,1                Always skip one                              
         END   ,                                                                
         AR    R1,R3               Skip over specified # chars                  
         AR    R2,R3               Ditto for generics                           
         SR    R0,R3               Adjust length                                
         END   ELSE,BEGIN          Pattern segment ...                          
         IF    MATFWILD,BEGIN      Wild card ...                                
MATLOOP2 ST    R1,MATSAVE1         Save R1 for a bit                            
         LR    R1,R2               Scan the generic line                        
         ACALL MATSEEK             Find first character                         
         LR    R2,R1               Restore to proper pointer                    
         L     R1,MATSAVE1         Restore R1                                   
         IF    (R15,NEG),MATNEXTR  Didn't find starting generic                 
         AR    R1,R15              Adjust char line accordingly                 
         END   ,                                                                
         LC    R3,@R4+1            Load comparison length                       
         IF    (R3,EQ,255),'LA R3,1' Just compare first for now                 
         DEX   R3,'CLC @R2(*-*),@R4+2' Check for our string                     
         IF    NE,BEGIN            Didn't find  it ...                          
         IF    (ASRFLAG.ASRFONER,AND,MATFIRST),MATNEXTR                         
         CLEAR MATFIRST            No longer first match                        
         IF    ^MATFWILD,BEGIN                                                  
         IF    ASRFLAG.ASRFONER,MATNEXTR                                        
         SET   MATFWILD                                                         
         B     MATRECUR                                                         
         END   ,                                                                
         INCR  R1                  Skip to next char                            
         INCR  R2                  (Ditto for generic line)                     
         DECR  R0                  Adjust length                                
         B     MATLOOP2            Loop back                                    
         END   ,                                                                
         CLEAR MATFIRST            No longer first match                        
         LC    R3,@R4+1            Get back match length                        
         IF    (R3,EQ,255),BEGIN   A "don't care" length ...                    
         CLEAR R3                  Reset so we can count                        
         WHILE (('CLC @R2(1),@R4+2',EQ),AND,(R0,NZ)),BEGIN                      
         INCR  R3                  Count the match                              
         INCR  R2                  Ditto for generic line                       
         DECR  R0                  Adjust Length                                
         END   ,                                                                
         LA    R15,MATWA                                                        
         ACALL MATSETR             Set the rendition buffer                     
         AR    R1,R3               Adjust text pointer                          
         LA    R3,255              Reload "don't care" length                   
         END   ELSE,BEGIN                                                       
         LA    R15,MATWA                                                        
         ACALL MATSETR             Set the rendition buffer                     
         LA    R1,0(R3,R1)         Skip over matched part                       
         LA    R2,0(R3,R2)         Ditto for generic string                     
         SR    R0,R3               Compute # chars left in line                 
         END   ,                                                                
         CLEAR MATFWILD            Wild card is now done                        
         END   ,                                                                
         LC    R3,@R4+1            Load segment data length                     
         IF    ((R3,EQ,255),OR,(@R4+2,EQ,'X')),'LA R3,1'                        
         LA    R4,2(R3,R4)         Skip to next segment                         
         END   ,                                                                
         SPACE 2                                                                
         IF    (@R4,EQ,'$'),BEGIN                                               
         SET   MATFME              We found it!                                 
         LR    R3,R1               Copy text loc                                
         S     R3,MATPTR           Convert to offset                            
         IF    MATFWILD,'LA R3,&LINESZ'                                         
         S     R3,MATPBEG          And then to length of pattern match          
         INCR  R3                  Adjust (MATPBEG was not offset)              
         LA    R15,MATRLINE        Point to rendition buffer                    
         A     R15,MATPBEG         And then to highlight start                  
         DECR  R15                 Adjust (MATPBEG was not offset)              
         TDEX  R3,'OC @R15(*-*),MATHIGH' Highlight matched text                 
         IF    ASRFLAG.ASRFONER,MATNEXTR                                        
         B     MATRECUR            Scan rest of line                            
         END   ,                                                                
         SPACE 1                                                                
         B     MATNEXTR            Oh well, we tried ...                        
         EJECT 1                                                                
MATNEXTR IF    MATFAND,BEGIN       AND range...                                 
         IF    ^MATFME,BEGIN       One element didn't match...                  
         CLEAR MATFMAT             Then it's no match                           
         B     MATSEXIT            Scram                                        
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               OR range...                                  
         IF    MATFME,'SET MATFMAT'  Matched                                    
         END                                                                    
*                                                                               
         L     R6,ASRPTR           Next string range                            
         LTR   R6,R6                                                            
         BNZ   MATLOOP             Go back                                      
*                                                                               
MATSEXIT LABEL ,                                                                
*                                                                               
         CLEAR R15                 Set no match return code                     
         IF    MATFMAT,BEGIN       Matched range...                             
         LT    R15,MATRPTR         Rendition buffer                             
         IF    NZ,'OC @R15(L"MATRLINE),MATRLINE'  Highlight our stuff           
         LH    R15,MATCOL          Return first matched column                  
         END                                                                    
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
         DROP  ASRWA                                                            
         EJECT                                                                  
*********                                                                       
*   Seek Subroutine                                                             
*                                                                               
*   On Entry: R4 -> Pattern Descriptor                                          
*             R1 -> String start                                                
*             R0 =  String length                                               
*                                                                               
*   On Exit:  (R15 NEG) Not there                                               
*             (R15 POS) R1 -> String Start                                      
*                       R0 =  Remaining string length                           
*                       R15 = Number of character skipped                       
********                                                                        
MSWA     RECORD BEGIN                                                           
MSSTART  DS    A                                                                
MSTRTTAB DS    XL256                                                            
         END                                                                    
*                                                                               
*                                                                               
MATSEEK  PROC  MSWA                                                             
         CLEAR MSWA                                                             
         LC    R5,@R4+1            Pick up compare length                       
         IF    (R5,EQ,255),'LA R5,1'                                            
         IF    (R5,GT,R0),'LA R15,4; LCR R15,R15; B MATSEEKD'                   
         LC    R15,@R4+2           Pick up first char                           
         LA    R15,MSTRTTAB(R15)   Point to table slot                          
         MVI   @R15,4              Set to stop                                  
         LR    R3,R0               Copy line length                             
         SR    R3,R5               Compute length to perfrom TRT                
         ST    R1,MSSTART          Save starting address                        
         EX    R3,'TRT @R1(0),MSTRTTAB'                                         
         IF    NZ,BEGIN            A hit ...                                    
         LR    R15,R1              Copy character loc                           
         S     R15,MSSTART         Compute characters skipped                   
         SR    R0,R15              Compute characters left                      
         INCR  R0                  Adjust ...                                   
         END   ,                                                                
         ELSE  'LA R15,4; LCR R15,R15' Not there ...                            
         SPACE 1                                                                
MATSEEKD LABEL ,                                                                
         PRETURN (R0,R1)                                                        
         PEND  ,                   Return to caller                             
         DROP  R6                                                               
         SPACE 2                                                                
*********                                                                       
*  MATSETR -- Set rendition buffer for matched portion                          
*                                                                               
*  On entry: R1 -> Start of matched text                                        
*            R15 - MATWA                                                        
*                                                                               
*********                                                                       
MATSETR  PROC  ,                                                                
         LR    R6,R15                                                           
         USING MATWA,R6                                                         
         S     R1,MATPTR           Offset to matched string                     
         LA    R15,@R1+1           Matching column number                       
         IF    ((MATCOL,Z),AND,(R15,GT,MATPCOL)),'STH R15,MATCOL'               
         IF    (MATPBEG,Z),'INCR R1; ST R1,MATPBEG' Starting rend. off.         
         PEND  ,                                                                
         DROP  R6                                                               
*                                                                               
MATHIGH  DC    (&LINESZ)X'02'      Highlight bit "or" buffer                    
*                                                                               
         QLTORG                                                                 
         TITLE 'PRESS Routine'                                                  
PRSWA    RECORD BEGIN                                                           
         XSA   R2,R8                                                            
*                                                                               
PRSTOTAL DS    F                   CPU time work area                           
PRSPTR   DS    A                   Input line ptr                               
PRSLINE  DS    XL(&PRESSZ)         Room for a pressed line                      
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  PRESS -- Routine to press a line into edit format.                           
*                                                                               
*    On entry:                                                                  
*      R1,R0 - text loc, len (area should be &PRESSZ long)                      
*      R15 - line-number                                                        
*                                                                               
*    On exit:                                                                   
*      R1 - pressed line ptr (pressed text is returned in the                   
*           same place that R1 pointed to on entry)                             
*      R0 - pressed line count (not including line-number)                      
*                                                                               
PRESS    XPROC PRSWA                                                            
         ST    R1,PRSPTR           Save orig line ptr                           
         ST    R15,PRSLINE         Put line-no into pressed                     
         CEIL  R0,&LINESZ          Not too big                                  
*                                                                               
         CLEAR R6                  Start output count                           
         LA    R13,PRSLINE+4                                                    
         LTR   R5,R0               Set and test input count                     
         BNP   ALLBL               Blank line                                   
         LA    R3,@R1              Set input pointer (zero 1st byte)            
         CLEAR R1                  Make sure high order byte is zero            
         LA    R0,15               Set constant 15 into reg                     
         LA    R2,1                Set const 1 into reg (will remain)           
         DECR  R5                  Set to ex trt inst                           
*                                                                               
OVER     EX    R5,'TRT @R3(0),BLTRT'  Find a non-blank                          
         BZ    ALLBL               None                                         
         SR    R1,R3               Length blank string to R1                    
         LR    R4,R1               And to R4                                    
         AR    R3,R1               Move pointer                                 
         SR    R5,R1               Decrease counter                             
         EX    R5,'TRT @R3(0),NBTRT'  Find next blank                           
         BNZ   EVALA               None                                         
         LA    R1,1(R3,R5)         Pretend its after interesting strng          
EVALA    CR    R4,R0               Blank string over 15?                        
         BH    EVALB               Yes                                          
         SLL   R4,4                Move blank str len to left half-byt          
         SR    R1,R3               Length non-blank string to R1                
         LA    R6,1(R6,R1)         Add non-bl ct & ct-byte to counter           
         SR    R5,R1               Decrease counter                             
EVALC    CR    R1,R0               Over 15 non-blanks?                          
         BH    EVALD               Yes                                          
         OR    R4,R1               Combine blank & non-blank counts             
         STC   R4,@R13+1           Store count-byte                             
         DEX   R1,'MVC @R13+2(0),@R3'  move non-blanks                          
         LA    R13,@R1+2(R13)      Move output pointer                          
         LA    R3,1(R3,R1)         Reset pointer (in)                           
         LTR   R5,R5               Any more?                                    
         BP    OVER                Yes                                          
         B     ALLBL                                                            
*                                                                               
EVALB    MVI   @R13+1,X'F0'        Set a blank-only count byte                  
         AR    R6,R2               Kick counter                                 
         AR    R13,R2              Kick pointer                                 
         SR    R4,R0               Reduce blank count by 15                     
         B     EVALA               Another round                                
EVALD    OR    R4,R0               Combine bl & non-bl counts                   
         STC   R4,@R13+1           Insert non-bl count byte                     
         SR    R1,R0               Reduce remaining non-bl count by 15          
         SR    R4,R4               Zero remaining bl count                      
         MVC   @R13+2(15),@R3      Move a non-blank string                      
         AR    R3,R0               Move pointer                                 
         AR    R6,R2               Count control char                           
         LA    R13,@R13+16         Increase count by 16                         
         B     EVALC               More?                                        
*                                                                               
ALLBL    STC   R6,PRSLINE+4        Store total pressed count                    
         L     R1,PRSPTR           Return addr for pressed line                 
         LA    R5,@R6+5-1          MVC count                                    
         EX    R5,'MVC @R1(0),PRSLINE'  move pressed (without line-no)          
         LTR   R0,R6               Set pressed count return                     
         PRETURN (R0,R1)                                                        
         PEND  ,                                                                
*                                                                               
BLTRT    DC    256X'01'            Skip blank TRT table                         
         ORG   BLTRT+C' '                                                       
         DC    X'00'                                                            
         ORG                                                                    
*                                                                               
NBTRT    DC    256X'00'            Skip non-blank TRT table                     
         ORG   NBTRT+C' '                                                       
         DC    X'01'                                                            
         ORG                                                                    
*                                                                               
         QLTORG                                                                 
*                                                                               
         VLTORG                                                                 
         END   .                                                                
