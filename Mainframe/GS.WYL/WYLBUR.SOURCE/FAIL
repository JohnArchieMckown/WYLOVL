FAIL     TITLE 'WYLBUR''s Dump Formatter and Internal Commands'                 
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
         SYSDEFN                                                                
         GBLC  &DMPCLAS,&DMPFORM   (See SYSDEFN)                                
WYLFAIL  CSECT                                                                  
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
FAIL     IDENT 2025                11:49:23 01/25/02  (SLP)                     
         SPACE 2                                                                
         TITLE 'DSECTS'                                                         
         PUSH  OFF                                                              
         MACRO                                                                  
&L       TLOC  &ADDR,&LEN                                                       
&L      $L     R15,&ADDR,ERR='LOCATION missing'                                 
        $LA    R0,&LEN                                                          
         ACALL TLOC                                                             
         MEND                                                                   
*                                                                               
         MACRO                                                                  
&L       TPSW  &ADDR,&LEN                                                       
&L       TLOC  &ADDR,&LEN                                                       
         MEND                                                                   
*                                                                               
         MACRO                                                                  
&L       TCORE &LOC,&LEN,&NOADDR,&ADJUST=0                                      
&L       SETMSG &LOC,&LEN                                                       
        $LA    R15,&ADJUST                                                      
         AIF   ('&NOADDR' EQ '').SKIPLCR                                        
         LCR   R0,R0                                                            
.SKIPLCR ACALL TCORE                                                            
         MEND                                                                   
*                                                                               
         MACRO                                                                  
&L       SETCC &CHAR                                                            
&L       L     R15,=A(PRTCC)                                                    
         MVI   @R15,C'&CHAR'                                                    
         MEND                                                                   
*                                                                               
         MACRO                                                                  
&L       SYMBOLS &CSECT=YES                                                     
         LCLA  &PN,&PL,&FLG                                                     
         LCLB  &FCSE                                                            
         LCLC  &VCON,&NAME,&LEN                                                 
         LCLC  &V                                                               
&V       SETC  'V'                                                              
         AIF   ('&L' EQ '').NOLBL                                               
&L       DS    0F                                                               
.NOLBL   ANOP                                                                   
&FCSE    SETB  ('&CSECT' EQ 'YES')                                              
&FLG     SETA  &FCSE*X'80'                                                      
&PN      SETA  0                                                                
.NXTCS   AIF   (&PN GE N'&SYSLIST).EXIT                                         
&PN      SETA  &PN+1                                                            
&LEN     SETC  '30*1024'                                                        
&VCON    SETC  '&SYSLIST(&PN)'                                                  
&NAME    SETC  '&VCON'                                                          
         AIF   (N'&SYSLIST(&PN) LE 1).NOTFANC                                   
         AIF   (N'&SYSLIST(&PN) EQ 2).FANCY                                     
         AIF   (N'&SYSLIST(&PN) EQ 3).LENF                                      
         MNOTE 4,'&SYSLIST(&PN) - IGNORED, ONLY TWO ARGS ALLOWED'               
         AGO   .NXTCS                                                           
.LENF    AIF   ('&SYSLIST(&PN,3)' EQ '').FANCY                                  
&LEN     SETC  '&SYSLIST(&PN,3)'                                                
.FANCY   ANOP                                                                   
&VCON    SETC  '&SYSLIST(&PN,1)'                                                
&NAME    SETC  '&VCON'                                                          
         AIF   ('&SYSLIST(&PN,2)' EQ '').SKPN                                   
&NAME    SETC  '&SYSLIST(&PN,2)'                                                
.SKPN    ANOP                                                                   
&PL      SETA  K'&NAME                                                          
         AGO   .GEN                                                             
.NOTFANC ANOP                                                                   
&PL      SETA  K'&SYSLIST(&PN)                                                  
.GEN     AIF   (&PL EQ 0).NXTCS                                                 
         AIF   ('&VCON' NE '0').GENA                                            
&V       SETC  'A'                                                              
.GENA    ANOP                                                                   
         DC    AL1(&FLG),&V.L3(&VCON),Y(&LEN,0),CL8'&NAME'                      
         AGO   .NXTCS                                                           
.EXIT    MEND                                                                   
*                                                                               
         MACRO                                                                  
&L       SYMINIT &SYM,&LOC,&RTN=SYMINITA                                        
&L       SETMSG '&SYM'                                                          
         SYSLR R2,&LOC,OP=L                                                     
         LCALL &RTN                                                             
         MEND                                                                   
         POP   PRINT                                                            
*                                                                               
         PUSH  DSECTS                                                           
         COPY  CONTROL             Copy cv/cp                                   
         TITLE 'DSECTS'                                                         
         COPY  RSCGROUP                                                         
         EJECT                                                                  
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
         EJECT                                                                  
SEGCB    RECORD 'SEGCB'                                                         
         EJECT                                                                  
         IHASDWA                                                                
         EJECT                                                                  
         IEFZB4D0 ,                Dynalloc (svc99) mapping                     
         IEFZB4D2 ,                Dynalloc (svc99) mapping                     
         EJECT                                                                  
         DCBD  DEVD=DA,DSORG=PS                                                 
DCB      EQU   IHADCB,,C'X'                                                     
         EJECT                                                                  
         CVT   DSECT=YES                                                        
         EJECT                                                                  
USERCVT  RECORD 'USERCVT'                                                       
         EJECT                                                                  
         IKJTCB                                                                 
         EJECT                                                                  
RB       EQU   RBSECT                                                           
         IKJRB                                                                  
         EJECT                                                                  
CDE      EQU   CDENTRY                                                          
         IHACDE                                                                 
         EJECT                                                                  
         POP   DSECTS                                                           
         EJECT                                                                  
EPIE     RECORD BEGIN                                                           
EPIEID   DS    F                   'EPIE' ID                                    
EPIEUSER DS    F                   USER SUPPLIED PARM LIST                      
EPIEREGS DS    16F                 USER REGESTERS AT INTERRUPTION               
EPIEPSW  DS    2F                  USER PSW AT INTERRUPTION                     
EPIECC   EQU   EPIEPSW+1,1         PSW CC                                       
EPIEIA   EQU   EPIEPSW+4,4         PSW INSTRUCTION ADDRESS                      
EPIEILC  DS    H                   INSTRUCTION LENGTH CODE                      
EPIEIC   DS    H                   INTERRUPTION CODE                            
* FOLLOWED BY RESERVED FIELDS.                                                  
         END                                                                    
         EJECT                                                                  
         COPY  TP                                                               
         SPACE 4                                                                
TRE      RECORD BEGIN              Trace table entry                            
TRENAME  DS    CL8                 Name                                         
TREFLGS  FLAG  ,                   Flags                                        
         FLAG  TREFDEF             - trace entry contains data                  
         FLAG  TREFENTR            - "enter" type trace entry                   
         FLAG  TREFDATA            - data present in 'tredata'                  
*                                                                               
         DS    X                   Reserved                                     
*                                                                               
TRERGMSK DS    H                   Register print masks                         
TREREGS  DS    16F                 All registers                                
TREADDR  EQU   TREREGS+(R12*4),4   Addr of trace call, not R12                  
TREENTR  EQU   TREREGS+(R7*4),4    Entry addr (for "entry" calls)               
TRELAT   EQU   TREENTR,1,C'X'      Entry flag- if zero, trace name              
*                                  is at treaddr-8                              
*                                                                               
         DS    F                   Reserved                                     
*                                                                               
TREDATA  DS    D                   Trace data (if trefdata is set)              
*                                                                               
TRENEXT  EQU   *                   Addr of next trace entry                     
         END                                                                    
         EJECT                                                                  
         COPY  SYMBOL                                                           
         SPACE 2                                                                
LOC      RECORD BEGIN                                                           
LOCADDR  DS    F                   Address                                      
LOCCSECT DS    CL8                 Name of closest csect (or blanks)            
LOCSYM   DS    CL8                 Name of closest non-csect                    
LOCCSOFS DS    H                   Offset from csect                            
LOCSYOFS DS    H                   Offset from symbol                           
         END                                                                    
         TITLE 'WYLBUR''s Dump Formatter'                                       
WYLFAIL  CSECT                                                                  
         DATA  BEGIN                                                            
INITFLGS FLAG  SORTED              Local flag                                   
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  FAILINIT -- Called at initialization (by INIT) to set up the                 
*    trace table and dump formatter.                                            
*                                                                               
*    On entry:                                                                  
*      R0 - no. of trace entries to generate (0=disable)                        
*                                                                               
FAILINIT XENTER                                                                 
*-                                                                              
*-       Build the trace table.                                                 
*-                                                                              
         IF    (R0,P),BEGIN        Build trace table...                         
         MH    R0,=AL2(L'TRE)      Times entry size for no. of bytes            
         GETMAIN R,LV=(0)          Get enough core                              
         ST    R1,TRCSTRT          Save starting addr                           
         ST    R1,TRCNEXT          Init next entry ptr                          
         LR    R2,R1               Starting addr                                
         LR    R3,R0               No. of bytes                                 
         AR    R0,R1               Calc ending addr                             
         ST    R0,TRCEND           Save trace table ending addr                 
*                                                                               
         CLEAR R1                  Pad char of zero                             
         MVCL  R2,R0               Init trace table to zeros                    
         SET   CVFTRC              Trace table in use                           
         END                                                                    
*-                                                                              
*-       Set the CSA cleanup ESTAE exit.                                        
*-                                                                              
         ESTAE CLEANFIN,PURGE=NONE,ASYNCH=YES,TERM=YES                          
         IF    (R15,NZ),BEGIN      Can't setup ESTAE...                         
         WTO   'ESTAE cleanup exit not set.'                                    
         END                                                                    
*-                                                                              
*-      Set the dump formatter ESTAE exit.  The ESTAE exits will get            
*-     entered from the most recently set to the least recently set.            
*-                                                                              
         IF    ^CVFNSTAE,BEGIN     Set stae exits...                            
         ESTAE CLOSEFIN,PURGE=NONE,ASYNCH=YES,TERM=YES                          
         IF    (R15,NZ),BEGIN      Can't setup ESTAE...                         
         WTO   'ESTAE close exit not set.'                                      
         END                                                                    
*                                                                               
         ESTAE ESTAE,PURGE=NONE,ASYNCH=YES,TERM=YES                             
         IF    (R15,NZ),BEGIN      Do if error from stae                        
         WTO   'ESTAE dump formatter exit not set.'                             
         END                                                                    
         END                                                                    
*-                                                                              
*-       Set up the symbol table so we have ascending addresses.                
*-                                                                              
         LT    R5,=A(SYMBOLS)      Addr of symbol table                         
         BZ    INITNOTB                                                         
         LOOP  BEGIN                                                            
         SET   SORTED              Assume data is sorted                        
         LR    R4,R5               Copy symbol table ptr                        
         USING SYMBOL,R4                                                        
         LOOP  BEGIN                                                            
         IF    (SYMADDR,GT,.SYMNEXT+(SYMADDR-SYMBOL)),BEGIN                     
         FLIP  (SYMBOL,SYMNEXT)    Interchange table entries                    
         CLEAR SORTED              Set data not yet sorted                      
         END                                                                    
         LA    R4,SYMNEXT          Next entry                                   
         UNTIL SYMFEND,END                                                      
         UNTIL SORTED,END                                                       
         DROP  SYMBOL                                                           
INITNOTB XEXIT                                                                  
         DROP  BR                                                               
         EJECT 1                                                                
*box                                                                            
*                                                                               
*  SYMINIT is called at initialization to fill in symbol table                  
*  Entries whose addresses were not available earlier.  An example              
*  of this would be WVOL (which is LOADed).                                     
*                                                                               
SYMINIT  XENTER                                                                 
         SYMINIT WVOL,CVVOLIST     Initialize WVOL entry                        
*                                                                               
*  The symbol table must now be re-sorted.  Earlier sorting still               
*  necessary in case of fail in init.                                           
         IF    ('LT R6,=A(SYMBOLS)',NZ),BEGIN                                   
         LOOP  BEGIN                                                            
         SET   SORTED              Assume sorted data                           
         LR    R5,R6               R5-->Symbols                                 
         USING SYMBOL,R5                                                        
         LOOP  BEGIN                                                            
         IF    (SYMADDR,GT,.SYMNEXT+(SYMADDR-SYMBOL)),BEGIN                     
         FLIP  (SYMBOL,SYMNEXT)    Fire burn and cauldron bubble                
         CLEAR SORTED              Not done yet                                 
         END                                                                    
         LA    R5,SYMNEXT          R5-->Next entry                              
         UNTIL SYMFEND,END         Do whole table...                            
         UNTIL SORTED,END          ...until a pass where no changes             
         DROP  SYMBOL                                                           
*                                                                               
*  If now any entries have no addresses, complain                               
         WITH  (SYMBOL,R6),BEGIN   R6 still points to symbol                    
         WHILE (SYMADDR,Z),BEGIN                                                
         MVC   NOSYM(8),SYMNAME                                                 
         TSEG  NOSYM               Log it                                       
         XWTO                                                                   
         LA    R6,SYMNEXT          R6-->Next entry                              
         END                                                                    
         END                                                                    
         END                                                                    
         XEXIT                                                                  
SYMINITA LABEL ,                                                                
         LR    R3,RAR              Save return                                  
         IF    ('ACALL FINDSYM',NZ),'ST3 R2,@R15+1'                             
         BR    R3                                                               
*                                                                               
NOSYMM   DC    CL8'?',C' was not found'                                         
NOSYM    EQU   NOSYMM,*-NOSYMM                                                  
*                                                                               
         QLTORG                                                                 
         DROP  BR                                                               
         EJECT                                                                  
***                                                                             
***  WTO Seg Control Block.                                                     
***    (Pointed to by CVWTOSEG.  See XWTO macro.)                               
***                                                                             
         ENTRY WTOSG                                                            
WTOSG    SEGCB WTOSGBUF,,RTN=XWTORTN                                            
*                                                                               
WTOSGBUF DS    CL80                WTO seg buffer                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  XWTORTN -- Routine to do WTOs.  This routine is entered as a                 
*    SEG exit routine, with the SEGCB containing a flag indicating              
*    what kind of action is desired.                                            
*                                                                               
*    On entry:                                                                  
*      R15 - SEGCB ptr                                                          
*                                                                               
XWTOWA   RECORD BEGIN                                                           
XWTOS    SEGCB                                                                  
*                                                                               
XWTOWORK DS    F                   Working fullword                             
*                                                                               
         DS    0F                                                               
XWTOPAD  DS    F                   Padder                                       
XWTOHDR  DS    H                   MCS header (length)                          
XWTOMCS  DS    H                   MCS flags                                    
         ORG   XWTOPAD                                                          
         DS    H                   Padder                                       
XWTOPARM DS    X                   MILSERV: Must be zero                        
XWTOACCT DS    CL5                 MILSERV: Account (uuugg)                     
XWTOPFX  EQU   XWTOPARM,*-XWTOPARM,C'X'                                         
         ORG                                                                    
XWTOSBUF DS    CL120               Work buffer                                  
         END                                                                    
*-                                                                              
XWTORTN  PROC  XWTOWA                                                           
*                                                                               
         LR    R6,R15                                                           
         WITH  (SEGCB,R6)                                                       
*-                                                                              
*-       SEGCR/SEGWR.                                                           
*-                                                                              
         IF    (SEGCBCR,OR,SEGCBWR),BEGIN  Write...                             
*-                                                                              
*-       Do WTO.                                                                
*-                                                                              
         CLEAR CVWTOLID            Reset WTO id                                 
*                                                                               
         SEGINIT XWTOSBUF,,XWTOS                                                
         IF    ^CVWTOFNOPFX,BEGIN  Prefix is OK...                              
         IF    CVWTOFUPFX,BEGIN    User prefix...                               
         SEG   'Line '                                                          
         L     R2,CVCURJCB                                                      
         WITH  (JCB,R2),'SEGDC LH:JCBSEQ; SEG " "'                              
         SEG   CPSGRP                                                           
         SEG   '.'                                                              
         SEG   CPSUSER                                                          
         SEG   ': '                                                             
         END                                                                    
*                                                                               
         ELSE  BEGIN               Wylbur prefix...                             
         SEG   '*** '                                                           
         SEGTB CVWYLSSN            (WYLBUR)                                     
         SEG   '*** '                                                           
         END                                                                    
         END                                                                    
*                                                                               
         SEGT  L:SEGCBLOC,L:SEGCBLENF  Message text                             
*                                                                               
         MVC   XWTOWORK,=X'00004000'  Routcde=2                                 
**       IF    CVFTEST,'MVC XWTOWORK,=X"00000020"'      Rout=11                 
         IF    CVWTOFWTL,'MVC XWTOWORK,=X"00000020"'    WTL                     
         IF    CVWTOFACTION,'MVC XWTOWORK,=X"80004000"' Desc=1                  
         IF    (XWTOWORK+2,EQ,=X'4000'),BEGIN  Change routes...                 
         IF    CVWTOFTAPE,'MVC XWTOWORK+2(2),=X"2000"'  Rout=3                  
         END                                                                    
         SEG   XWTOWORK            Add MCS suffix                               
*                                                                               
         L     R15,XWTOSLENF       Total text length                            
         STH   R15,XWTOHDR         Save length in MCS header                    
         MVC   XWTOMCS,=X'8000'    MCS flags (rout suffix present)              
*                                                                               
         LA    R1,XWTOHDR                                                       
         WTO   MF=(E,(1))          Do WTO                                       
         ST    R1,CVWTOLID         Save WTO id                                  
*-                                                                              
*-       Do MILSERV NOTIFY (for test systems).                                  
*-                                                                              
         IF    (CVNOTIFY,NZ),BEGIN  We have an account to notify...             
         IF    CVWTOFWTL,EXIT      Just a WTL, forget it                        
*                                                                               
         SEGCLR                                                                 
         SEG   'From '                                                          
         SEGT  CVWYLSSN            (WYLBUR)                                     
         SEG   ': '                                                             
         SEGT  L:SEGCBLOC,L:SEGCBLENF  Message text                             
*                                                                               
         CLEAR XWTOPARM            Clear MILSERV parm                           
         MVC   XWTOACCT,CVNOTIFY   Set notification account                     
         LA    R0,L'XWTOPFX        MILSERV prefix                               
         A     R0,XWTOSLENF        Total MILSERV parm length                    
*                                                                               
         MILSERV XWTOPARM,(R0),LA:2  Send message to the owner                  
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TRC -- Trace routine.  Normally invoked by XTRACE macro.                     
*    non-standard linkage conventions allow us to do the trace                  
*    without altering the contents of any registers.  (See CV                   
*    brancher CVTRC).                                                           
*                                                                               
         SPACE 2                                                                
         ENTRY TRC                                                              
TRC      BASE                                                                   
*-                                                                              
*-       Call DEBUG trace routine before FAIL processes trace.                  
*-                                                                              
         VCALL TRAPTRC             Call DEBUG trace routine                     
*                                                                               
         L     R5,CVLNKRTN         Return address                               
         LR    R3,R5               Save for later                               
         USING TP,R5                                                            
         LA    R1,TPEND            Return addr (past inline data)               
         IF    TPFKAPUT*TPFMSG,'LA R1,TPENDK'  adjust if kaput msg              
         ST    R1,CVLNKRTN         Save real return addr                        
         IF    CVFTRC,BEGIN        Do if trace table enabled...                 
*-                                                                              
*-       Make sure it's the mother task that is being traced.                   
*-                                                                              
         L     R15,CVTPTR                                                       
         WITH  (CVT,R15),'L R15,CVTTCBP'  TCB words                             
         L     R15,@R15+4          Our TCB ptr                                  
         IF    (R15,NE,CVTCBP),BEGIN                                            
         L     R15,CVLNKRGS+(R7*4)                                              
         END                                                                    
*                                                                               
         IF    ('LT R4,TRCNEXT',Z),EXIT  exit if no entries                     
         WITH  (TRE,R4)                                                         
         CLEAR TRE                 Init to zero                                 
         SET   TREFDEF             Trace entry defined                          
         MVC   TRENAME,TPNAME      Id                                           
         MVC   TRERGMSK,TPRGMSK    Save register print mask                     
         MVC   TREREGS(16*4),CVLNKRGS  save registers                           
         IF    (TPNAME,EQ,'ENTRY   '),BEGIN                                     
         SET   TREFENTR            Enter type entry                             
         L     R3,TREENTR          Use this as callers addr                     
         IF    (TRELAT,NZ),EXIT    don't have routine name                      
         L     R15,TREENTR         Entry addr                                   
         SH    R15,=H'8'           minus eight for caller's name                
         MVC   TRENAME,@R15        Save that as trace name                      
         END                                                                    
         ELSEIF (TPNAME,EQ,'PGMCHK'),BEGIN  ESPIE program check...              
         L     R2,TREREGS+(R1*4)   R1 on entry to XTRACE is EPIE                
         WITH  (EPIE,R2)                                                        
         L     R3,EPIEIA           Right half of PSW                            
         MVC   TREREGS(16*4),EPIEREGS  Restore all regs                         
         MVC   TRENAME,=CL8'S0C?'  OS style                                     
         LH    R15,EPIEIC          Int code                                     
         N     R15,=XL4'F'         Isolate                                      
         STC   R15,TRENAME+3                                                    
         OI    TRENAME+3,C'0'      Make it printable                            
*                                                                               
         QSNAP 'Program check.'                                                 
         QSNAP 'S0Cx'                                                           
         QSNAP TRENAME             S0Cx                                         
         QSNAP 'PSW instruction address xxxxxxxx'                               
         QSNAP (R3)                PSW ia                                       
         QSNAP 'Registers R0-R15'                                               
         QSNAP TREREGS,64                                                       
         END                                                                    
*                                                                               
         ST    R3,TREADDR          Adjust                                       
         IF    TPFDATA,BEGIN       Do if trace data...                          
         SET   TREFDATA            Indicate data present                        
         MVC   TREDATA,CVTRCDAT    Move in data                                 
         END                                                                    
         IF    TPFKAPUT,BEGIN      Save off stuff if kaput call                 
         MVC   KAPCODE,TRENAME     Kaput id                                     
         ST    R3,KAPRTN           Calling addr                                 
         MVC   KAPREGS(16*4),TREREGS  Save a copy of gprs                       
         CLEAR TRERGMSK                                                         
         END                                                                    
*                                                                               
         LA    R15,TRENEXT         Addr of next entry                           
         IF    (R15,GE,TRCEND),'L R15,TRCSTRT'  Reset to top                    
         ST    R15,TRCNEXT         Update ptr                                   
         END                                                                    
*-                                                                              
*-       Standard return                                                        
*-                                                                              
         IF    ^TPFKAPUT,CVEXIT    Return if not a kaput call                   
*-                                                                              
*-       KAPUT abend exit                                                       
*-                                                                              
         SET   CVENTOFF                                                         
         MVC   KAPTEXT,=C'Kaput'                                                
         CLEAR KAPMSG              No kaput msg                                 
         IF    TPFMSG,BEGIN        Do if msg text given...                      
         SETMSG L3:TPMSGADR+1,LC:TPMSGLEN                                       
         STM   R0,R1,KAPMSG        Save msg ptrs                                
         END                                                                    
         SET   FKAPUT              Set kaput abend for later                    
         LA    R1,1                Abend code                                   
         IF    TPFDUMP,'O R1,=A(X"80000000")'  Set for dump                     
         IF    TPFNREST,'O R1,=A(X"40000000")' Step abend--no restart           
ABEND    QSNAP 'Kaput...'                                                       
         QSNAP TPNAME                                                           
         ABEND (1)                                                              
         B     ABEND                                                            
         DROP  TP,BR                                                            
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
TRCAREA  DS    0F                                                               
TRCNEXT  DC    A(*-*)              Next trace entry ptr                         
TRCSTRT  DC    A(*-*)              Trace table start ptr                        
TRCEND   DC    A(*-*)              Trace table end ptr                          
*                                                                               
FLAGS    DC    X'00'                                                            
FKAPUT   EQU   FLAGS,X'80',1       - Kaput type abend                           
*                                                                               
KAPTEXT  DS    CL5                 Kaput/Abend                                  
KAPCODE  DS    CL8                 Kaput id                                     
KAPMSG   DS    2F                  Kaput msg loc, len                           
KAPRTN   DS    A                   Addr of kaput call                           
KAPREGS  DS    16F                 Gprs at kaput call                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWWLNS -- SHOW WLINE/WLINES command.                                       
*      (A non-priv'd version of SHOW WJCB).                                     
*                                                                               
         ENTRY SHOWWLIN                                                         
SHOWWLIN MVI   CPCMNM,C'X'         Flag                                         
*                                                                               
SHOWWLNS XPROC                                                                  
         CLEAR R5                  Default is to show all lines                 
         SCAN  SHWLINP                                                          
         SCANCHK                                                                
*                                                                               
         IF    ((CPCMNM,EQ,'X'),AND,(R5,Z)),BEGIN  Show my line...              
         L     R5,CVCURJCB                                                      
         END                                                                    
*-                                                                              
*-       Show a specifc line.                                                   
*-                                                                              
         IF    (R5,NZ),BEGIN       Show JCB of specific line...                 
         WITH  (JCB,R5)                                                         
         IF    JCBWFSO,BEGIN                                                    
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         SETMSG ' is not logged on.'                                            
         B     CVNXTMSG                                                         
         END                                                                    
         LR    R1,R5               JCB addr                                     
         ACALL WLINDISP                                                         
         B     CVNEXT                                                           
         END                                                                    
*-                                                                              
*-       Show all lines.                                                        
*-                                                                              
         L     R2,CVFJCB                                                        
         LOOP  BEGIN                                                            
         WITH  (JCB,R2)                                                         
         IF    (JCBACCT,NZ),BEGIN                                               
         LR    R1,R2                                                            
         ACALL WLINDISP            Display WLINE info                           
         IF    ('TSTAT',NZ),CVABORT                                             
         END                                                                    
         LA    R2,JCBNEXT                                                       
         UNTIL (R2,GE,CVLJCB),END                                               
         B     CVNEXT                                                           
         PEND                                                                   
*                                                                               
SHWLINP  SCKW  ,SHWLLNO,I,5000                                                  
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
SHWLLNO  PROC                                                                   
         MH    R0,=AL2(L'JCB)                                                   
         L     R5,CVFJCB                                                        
         AR    R5,R0                                                            
         IF    (R5,GE,CVLJCB),'VCALL NOTVALID'                                  
         PRETURN (R5)                                                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WLINDISP -- Routine to format Wylbur line info.                              
*                                                                               
*    On entry:                                                                  
*      R1 - JCB addr                                                            
*                                                                               
WLINDISP PROC                                                                   
         SEGDEF CPSEG-CP(CPR)                                                   
*                                                                               
         LR    R5,R1                                                            
         WITH  (JCB,R5)                                                         
         IF    JCBWFSO,WLINEXIT    Skip logged off user                         
         SEG   'Line'                                                           
         SEGDC LH:JCBSEQ,5                                                      
         IF    (JCBACCT,NZ),BEGIN                                               
         SEG   CVBLANKS,1                                                       
         SEG   JCBGRP                                                           
         SEG   '.'                                                              
         SEG   JCBUSER                                                          
         END                                                                    
*-                                                                              
*-       Display CPU time used so far.                                          
*-                                                                              
         IF    ('LT R4,JCBCPX',POS),BEGIN  CP in core...                        
         WITH  (CP,R4)                                                          
*                                                                               
         SEGDEF CPSEG-CP(CPR)                                                   
         SEG   '  CPU='                                                         
         L     R15,JCBWCPU         CPU time in tu's                             
*        IF    (R15,LGT,X'FFFFFFF'),BEGIN  Dangerously large...                 
*        SEG   '999999!!'                                                       
*        END                                                                    
*                                                                               
*        ELSE  BEGIN               Format CPU time...                           
         CLEAR R14                                                              
         D     R14,=F'384'         Convert to .01 sec                           
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         XPUSH ,,8,PTR=R2                                                       
         BTR   (R2),(8,2),(R15)                                                 
         SEG   (R1),(R0)                                                        
         XPOP  ,,8                                                              
         SEG   ' (unadjusted)'                                                  
*        END                                                                    
*                                                                               
         SEG   ', Commands='                                                    
         SEGDC L:CPNCOM,7                                                       
*                                                                               
         IF    CPFEXEC,BEGIN  From exec file...                                 
         SEG   ' (Running exec at line '                                        
         L     R0,CPEXLINE         Current exec lineno                          
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)                                                        
         SEG   ')'                                                              
         END                                                                    
         END                                                                    
*                                                                               
         IF    JCBFATTN,'SEG " (Attn)"'                                         
         IF    JCBFNATN,'SEG " (Attn disabled)"'                                
         IF    JCBFPATN,'SEG " (Pending Attn)"'                                 
         IF    JCBAFALO,'SEG " (Logging off)"'                                  
         IF    JCBWFERR,'SEG " (Stopped)"'                                      
*                                                                               
         IF    ('LT R4,JCBDSPP',NZ),BEGIN                                       
         SEG   ' (Will release line '                                           
         WITH  (JCB,R4),'LH R15,JCBSEQ'                                         
         SEGDC (R15)                                                            
         SEG   ')'                                                              
         END                                                                    
*                                                                               
         L     R4,CVFRSG           First rscgroup                               
         WHILE (R4,LE,CVRSG+8),BEGIN                                            
         WITH  (RSCGROUP,R4)                                                    
         LA    R3,RSGQACFW-(RSC@NEXT-RESOURCE)                                  
         WITH  (RESOURCE,R3),BEGIN                                              
WLRSC    WHILE ('C R3,RSGQACBK',NE),BEGIN                                       
         L     R3,RSC@NEXT                                                      
         IF    (R5,NE,RSC@JCB),NEXT                                             
         SEG   ' ('                                                             
         SEGT  RSGNAME                                                          
         SEG   ' owned)'                                                        
         EXIT  WLRSC                                                            
         END                                                                    
         END                                                                    
         LA    R3,RSGQJCFW-(JCBQF-JCB)                                          
         CLEAR R2                  Position in queue                            
         WITH  (JCB,R3),BEGIN                                                   
WLTRSC   WHILE ('C R3,RSGQJCBK',NE),BEGIN                                       
         L     R3,JCBQF                                                         
         LA    R2,@R2+1                                                         
         IF    (R5,NE,R3),NEXT                                                  
         SEG   ' (Waiting for '                                                 
         SEGT  RSGNAME                                                          
         SEG   ', pos '                                                         
         SEGDC (R2)                                                             
         SEG   ')'                                                              
         EXIT  WLTRSC                                                           
         END                                                                    
         END                                                                    
         A     R4,CVRSG+4          Next rscgroup                                
         END                                                                    
*                                                                               
         IF    (JCBFCNT,NZ),BEGIN                                               
         SEG   ' ('                                                             
         SEGDC LH:JCBFCNT                                                       
         SEG   ' failsofts)'                                                    
         END                                                                    
*                                                                               
         TWRITE                                                                 
*                                                                               
WLINEXIT PEND                                                                   
*                                                                               
         SEGDEF DUMMY              (Neatness)                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWJCB -- SHOW WJCBS command  (priv'd).                                     
*                                                                               
SHOWJCB  XPROC                                                                  
         IF    ^CPSFSPR,'VCALL NOTVALID'                                        
         CLEAR R5                  Default is to show all JCBs                  
         SCAN  SHJCBPRT                                                         
         SCANCHK                                                                
         IF    (R5,NZ),BEGIN       Show JCB of specific line...                 
         WITH  (JCB,R5)                                                         
         IF    JCBWFSO,BEGIN                                                    
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         SETMSG ' is not logged on.'                                            
         B     CVNXTMSG                                                         
         END                                                                    
         LR    R1,R5               JCB addr                                     
         ACALL JCBDISP                                                          
         B     CVNEXT                                                           
         END                                                                    
*                                                                               
         L     R2,CVFJCB                                                        
         LOOP  BEGIN                                                            
         WITH  (JCB,R2)                                                         
         IF    (JCBACCT,NZ),BEGIN                                               
         LR    R1,R2                                                            
         ACALL JCBDISP             Display JCB                                  
         IF    ('TSTAT',NZ),CVABORT                                             
         END                                                                    
         LA    R2,JCBNEXT                                                       
         UNTIL (R2,GE,CVLJCB),END                                               
         B     CVNEXT                                                           
         PEND                                                                   
*                                                                               
SHJCBPRT SCKW  ,SHJCBLNO,I,5000                                                 
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
SHJCBLNO PROC                                                                   
         MH    R0,=AL2(L'JCB)                                                   
         L     R5,CVFJCB                                                        
         AR    R5,R0                                                            
         IF    (R5,GE,CVLJCB),'VCALL NOTVALID'                                  
         PRETURN (R5)                                                           
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WSTOP/WSTART -- WSTOP and WSTART Commands.                                   
*                                                                               
WSTOP    XPROC                                                                  
         MVI   CPCMNM,C'X'         X = Stop                                     
WSTART   XPROC                                                                  
         IF    ^CPSFSPR,'VCALL NOTVALID'   Sorry                                
*                                                                               
         CLEAR R5                                                               
         SCAN  WSTPRT                                                           
         SCANCHK                                                                
         IF    (R5,Z),'ABORT "Missing session number."'                         
*                                                                               
         WITH  (JCB,R4),BEGIN                                                   
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
*                                                                               
         IF    JCBWFSO,BEGIN       Not logged on...                             
         ABORT ' is not logged on.'                                             
         END                                                                    
*                                                                               
         IF    ((CPCMNM,EQ,'X'),AND,JCBWFERR),BEGIN                             
         ABORT ' is already stopped.'                                           
         END                                                                    
*                                                                               
         IF    ((CPCMNM,NE,'X'),AND,^JCBWFERR),BEGIN                            
         ABORT ' is not currently stopped.'                                     
         END                                                                    
*                                                                               
         TSEG  ' will be '                                                      
         SETMSG 'stopped.'                                                      
         IF    (CPCMNM,NE,'X'),'SETMSG "started."'                              
         TSEG  (R1),(R0)                                                        
*-                                                                              
*-       Stop user (at his next dispatch).                                      
*-                                                                              
         IF    (CPCMNM,EQ,'X'),BEGIN  WSTOP...                                  
         SET   JCBWFERR            Stop                                         
         END                                                                    
*-                                                                              
*-       Start previously stopped user.                                         
*-                                                                              
         ELSE  BEGIN                                                            
         CLEAR JCBWFERR            Go go go                                     
*                                                                               
         OC    JCBWFL(JCBWFSIZ),JCBWFL  Dispatchable?                           
         IF    Z,BEGIN             Yes...                                       
         IF    ^JCBAPDSP,'SETUP (R4)'  Queue for dispatching                    
         END                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
***                                                                             
***  WSTOP/WSTART Options.                                                      
***                                                                             
WSTPRT   SCKW  ,WSTJCBN,I,5000                                                  
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
*                                                                               
WSTJCBN  PROC                                                                   
         IF    (R5,NZ),'VCALL NOTVALID'    Lineno already given                 
         LR    R5,R0                                                            
         LR    R4,R0                                                            
         MH    R4,=AL2(L'JCB)                                                   
         A     R4,CVFJCB                                                        
         IF    (R4,GE,CVLJCB),'VCALL NOTVALID'  Scram                           
         PRETURN (R4,R5)                                                        
         PEND                                                                   
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WSC -- WSC (Show Core) Command.  (Priv'd)                                    
*                                                                               
WSC      XPROC                                                                  
         IF    ^CPSFSPR,'VCALL NOTVALID'                                        
*                                                                               
         ACALL WEXPR               Starting addr                                
         LR    R2,R15                                                           
*                                                                               
         LA    R3,64               Default length                               
         SCAN                                                                   
         SCANCHK                                                                
         SCUPTOK (R1)                                                           
         IF    (R0,NZ),BEGIN                                                    
         XTB   (R1),(R0)           Length                                       
         IF    NZ,'VCALL NOTVALID'                                              
         LR    R3,R15                                                           
         END                                                                    
*                                                                               
         VCALL COLLOPTS                                                         
*                                                                               
         TCORE (R2),(R3),NOADDR    Display memory                               
*                                                                               
         B     CVNEXT                                                           
         DROP  BR                                                               
         EJECT                                                                  
PATWA    RECORD BEGIN                                                           
PATFLAG  FLAG                                                                   
         FLAG  PATFSYS             - SYSTEM option                              
*                                                                               
PATTLEN  DS    H                   Length of replacement text                   
PATTEXT  DS    CL(&LINESZ)         Replacement text                             
*                                                                               
PATVLEN  DS    H                   Verification text length                     
PATVTXT  DS    CL(&LINESZ)         Verification text                            
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  WPC -- WPC (Patch Core) Command.  (Priv'd)                                   
*                                                                               
WPC      XPROC PATWA                                                            
         LA    R6,PATWA                                                         
         USING PATWA,R6                                                         
         CLEAR PATWA                                                            
         IF    ^CPSFSPR,'VCALL NOTVALID'                                        
*                                                                               
         ACALL WEXPR               Patch addr                                   
         LR    R2,R15                                                           
*                                                                               
         SCAN                                                                   
         SCANCHK                                                                
         SCUPTOK (R1)                                                           
         IF    (R0,Z),CVABSENT                                                  
         LA    R15,PATTEXT                                                      
         VCALL DEQSTR              Deqoute text                                 
         IF    NEG,BEGIN           Not a string...                              
         LA    R15,PATTEXT                                                      
         VCALL HEXSTR              Check for hex                                
         IF    NEG,BEGIN                                                        
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid hex digits'                                           
         END                                                                    
         END                                                                    
         CEIL  R0,L'PATTEXT                                                     
         STH   R0,PATTLEN                                                       
*                                                                               
         SCAN PATPRT                                                            
         SCANCHK                                                                
*                                                                               
         MVC   CVSPIEAD,=A(PATBAD)                                              
         LH    R15,PATTLEN         Original data                                
         MOVE  R15,@R2,@R2         Force any program check                      
*                                                                               
         TSEG  'Old data was '                                                  
         SETMSG (R2),LH:PATTLEN     Original data                               
         FLOOR R0,PATVLEN                                                       
         FLOOR R0,4                                                             
         LA    R15,4                                                            
         VCALL HEXFMT                                                           
*                                                                               
         IF    ('LTH R15,PATVLEN',NZ),BEGIN                                     
         CMPR  R15,@R2,PATVTXT     Compare text                                 
         IF    NE,'ABORT "Verify failed."'                                      
         END                                                                    
*                                                                               
         IF    ^PATFSYS,BEGIN                                                   
         SETMSG 'Patch'                                                         
         VCALL YESREQ                                                           
         END                                                                    
*                                                                               
         IF    ('LTH R15,PATTLEN',NZ),BEGIN                                     
         MOVE  R15,@R2,PATTEXT     Replace text                                 
         END                                                                    
*                                                                               
         CLEAR CVSPIEAD                                                         
         SETMSG 'Done.'                                                         
         B     CVNXTMSG                                                         
         PEND                                                                   
*                                                                               
*                                                                               
*                                                                               
PATPRT   SCKW  VERIFY,PATVER,(A,P)                                              
         SCKW  SYSTEM,PATSYS,A                                                  
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(QUIETPSH),PUSH                                                
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
*                                                                               
PATSYS   PROC  ,                                                                
         SET   PATFSYS                                                          
         PEND                                                                   
*                                                                               
*                                                                               
PATVER   PROC                                                                   
         LA    R15,PATVTXT                                                      
         VCALL DEQSTR              Dequote text                                 
         IF    NEG,BEGIN           Not a string...                              
         LA    R15,PATVTXT                                                      
         VCALL HEXSTR              Check for hex                                
         IF    NEG,BEGIN                                                        
         TSEG  (R1),(R0)                                                        
         ERROR ': invalid hex digits'                                           
         END                                                                    
         END                                                                    
         CEIL  R0,L'PATVTXT                                                     
         STH   R0,PATVLEN                                                       
         PEND                                                                   
         DROP  R6                                                               
*                                                                               
*                                                                               
PATBAD   BASE                                                                   
         TCCR                                                                   
         THEX  (R2),8                                                           
         SETMSG ' is a bad address.'                                            
         B     CVNXTMSG                                                         
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WEXPR -- Routine to scan an address expression.                              
*                                                                               
*    On exit:                                                                   
*      R15 - resulting address                                                  
*                                                                               
WEXPR    PROC                                                                   
         SCAN                                                                   
         SCANCHK                                                                
         SCUPTOK (R1)                                                           
         IF    (R0,Z),CVABSENT                                                  
*                                                                               
         LR    R3,R1                                                            
         LR    R2,R0                                                            
*                                                                               
         CLEAR R6                  Assume +0                                    
         IF    ('ACALL FINDSYM',NZ),BEGIN                                       
         WITH  (SYMBOL,R15),'L3 R6,SYMADDR'  symbol's addr                      
         SCAN                                                                   
         SCANCHK                                                                
         IF    ((R0,NE,1),OR,(@R1,NE,'+')),BEGIN  back up...                    
         SCBKUP                                                                 
         CLEAR R15                                                              
         B     WEXEXIT                                                          
         END                                                                    
         SCAN                                                                   
         SCANCHK                                                                
         SCUPTOK (R1)                                                           
         IF    (R0,Z),CVABSENT                                                  
         LR    R3,R1                                                            
         LR    R2,R0                                                            
         END                                                                    
*                                                                               
         XTB   (R3),(R2)           Hex part                                     
         IF    NZ,'VCALL NOTVALID'                                              
*                                                                               
WEXEXIT  LA    R15,@R6(R15)        Resulting addr                               
         PEND                                                                   
*                                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWVERS -- SHOW WVERSION command.                                           
*                                                                               
SHOWVERS XPROC                                                                  
         SETMSG L:=V(VERSION),&LINESZ                                           
         B     CVNXTMSG                                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWSYM -- SHOW WSYMBOLS command  (priv'd).                                  
*                                                                               
SHOWSYM  XPROC                                                                  
         IF    ^CPSFSPR,'VCALL NOTVALID'                                        
         SCAN                                                                   
         SCANCHK                                                                
         SCUPTOK (R1)                                                           
         IF    (R0,Z),'ACALL SYMDISP; B CVNEXT' display symbol table            
         XPUSH R0,R1               Save loc & len                               
         IF    ('ACALL FINDSYM',NZ),BEGIN  IT'S a symbol                        
         LR    R5,R15              Symbol entry                                 
         WITH  (SYMBOL,R5)                                                      
         IF    SYMFCSCT,'TSEG "Csect "'                                         
         TSEG  SYMNAME,,T                                                       
         IF    SYMFCSCT,BEGIN      Csects have idents...                        
         IF    ('L3 R15,SYMADDR',Z),EXIT                                        
         IF    ((@R15,LT,X'13'),OR,(@R15,GT,X'18')),EXIT  bad len byte          
         IF    (@R15+1.X'C0',^ONES),EXIT  not alpha                             
         XPUSH R15                                                              
         TSEG  ' ('                                                             
         XPOP  R15                                                              
         TSEG  @R15+1,LC:@R15,T                                                 
         TSEG  ')'                                                              
         END                                                                    
         TSEG  ' at '                                                           
         THEX  L3:SYMADDR,8                                                     
         LH    R4,SYMLEN                                                        
         IF    (SYMLEN,NE,=AL2(30*1024)),BEGIN                                  
         TSEG  ', length 0'                                                     
         THEX  (R4)                                                             
         END                                                                    
         END                                                                    
         ELSE  BEGIN                                                            
         XPOP  R0,R1                                                            
         VCALL XTB                 See if it's good hex                         
         IF    (R0,POS),'VCALL NOTVALID'                                        
         TLOC  (R15)               Give addr                                    
         END                                                                    
         TCR                                                                    
         B     CVNEXT                                                           
         PEND                                                                   
         QLTORG                                                                 
         EJECT                                                                  
         DATA  BEGIN                                                            
STAEFLAG FLAG                                                                   
         FLAG  STAEFTRC            - Tracing was enabled                        
*                                                                               
STAEKEY  DC    X'FF'               PSW key on entry                             
*                                                                               
STAEPTR  DC    A(0)                SDWA ptr                                     
STAECPX  DC    A(0)                Our temporary CP ptr                         
STAESTKP DC    A(0)                Saved stack ptr                              
STAERTN  DC    A(0)                ESTAE return addr                            
         END                                                                    
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  ESTAE exit                                                                   
*                                                                               
ESTAE    WITH  (ESTAE,R15),BEGIN                                                
         IF    (R0,EQ,12),BEGIN    No SDWA                                      
         CLEAR R15                 Abend, no retries                            
         BR    R14                                                              
         END                                                                    
         END                                                                    
*                                                                               
         BASE                                                                   
*                                                                               
         L     CVR,=V(CV)          CV ptr                                       
         CLEAR CPR                 No CP ptr                                    
*                                                                               
         LR    R6,R1                                                            
         USING SDWA,R6                                                          
*                                                                               
         ST    R1,STAEPTR          Save SDWA ptr                                
         ST    R14,STAERTN         Save return addr                             
*                                                                               
         SET   CVFABEND            Set abending                                 
*                                                                               
         CLEAR STAEFTRC                                                         
         IF    CVFTRC,'SET STAEFTRC'  Remember, we are tracing                  
         CLEAR CVFTRC              Disable tracing, temporarily                 
*-                                                                              
*-       Save current stack.                                                    
*-                                                                              
         IF    ('LT R1,STAESTKP',Z),BEGIN  Save current stack...                
         L     R0,CVSTACKL                                                      
         GETMAIN R,LV=(0)                                                       
         ST    R1,STAESTKP                                                      
         END                                                                    
         MOVEL (R1),L:CVSTACK,L:CVSTACKL  Save cur stack                        
*                                                                               
         VCALL AMODE31             Make sure we are in 31-bit mode              
*-                                                                              
*-       Build a temporary CP.                                                  
*-                                                                              
         VCALL GETCP               Get a CP                                     
         VCALL INITSTK             Initialize CP stack                          
         ST    CPR,STAECPX         Save our CP ptr                              
*-                                                                              
*-       Switch back into our TCB key and problem state.                        
*-                                                                              
         MODESET MODE=SUP          Play the game....                            
         L     R3,CVTCBP           Our TCB                                      
         WITH  (TCB,R3),BEGIN                                                   
         MODESET EXTKEY=TCB,SAVEKEY=STAEKEY,WORKREG=1  TCB key(safe)            
         END                                                                    
         MODESET MODE=PROB         Always return to problem state               
*                                                                               
         VCALL FORCEOUT            Force recovery pages out                     
*                                                                               
         CLEAR CVFINFO             Reset any previous failure msg               
         IF    ^SDWACMPF.SDWAREQ,BEGIN  No dump requested...                    
         L     R15,SDWAABCC        Abend completion code                        
         N     R15,=A(X'FFF000')   Only keep sys comp code                      
         IF    (R15,EQ,=A(X'122000')),EXIT  abend with dump anyway              
         B     STAETERM            No dump needed -- terminate                  
         END                                                                    
*                                                                               
         INCR  R15,CVNFAIL         Count no. of failsofts                       
         VCALL LOCALTOD                                                         
         ST    R0,CVFCLCK          Save time/date                               
*                                                                               
         L     R4,=A(TRCAREA)                                                   
         WITH  (TRCAREA,R4),BEGIN                                               
         IF    ^FKAPUT,BEGIN       Fill in kaput info...                        
         MVC   KAPTEXT,=C'Abend'                                                
         L     R15,SDWAABCC                                                     
         LA    R1,KAPCODE                                                       
         ACALL ABENDCD             Save Shhh/Udddd code                         
         CLEAR KAPMSG              No message                                   
         MVC   KAPRTN,SDWANXT2     Failing PSW ia                               
         MVC   KAPREGS(16*4),SDWASRSV  Regs at abend                            
         END                                                                    
*                                                                               
         TCLEAR                                                                 
         TSEG  KAPTEXT,,B                                                       
         TSEG  KAPCODE,,TB                                                      
         TSEG  'at '                                                            
         TPSW  KAPRTN              PSW ia                                       
         IF    (KAPMSG,NZ),BEGIN                                                
         TSEG  ' -- '                                                           
         LM    R0,R1,KAPMSG                                                     
         TSEG  (R1),(R0)                                                        
         END                                                                    
*                                                                               
         L     R15,CPSEGLENF                                                    
         CEIL  R15,L'CVFINFO                                                    
         MVC   CVFINFO,CVBLANKS                                                 
         L     R1,CPSEGLOC                                                      
         MOVE  R15,CVFINFO,@R1     Save abend info                              
         TCLEAR                                                                 
         END                                                                    
*                                                                               
         LA    R1,SDWA                                                          
         ACALL FMTDUMP             Format a dump                                
*                                                                               
         L     R2,=A(TRCAREA)                                                   
         WITH  (TRCAREA,R2),'CLEAR FKAPUT'  Reset flag                          
*                                                                               
         IF    SDWAERRD.SDWACLUP,STAETERM  Can't retry                          
         IF    CVFNORET,STAETERM   No retries                                   
         IF    CVFINIT,STAETERM    In initialization, no retry                  
*-                                                                              
*-       Dispatcher mode failure.                                               
*-                                                                              
         LT    R4,CVCURJCB                                                      
         IF    Z,BEGIN             Dispatcher mode failure...                   
         INCR  R15,CVNDISPF        Count no. of dispatcher failures             
         IF    (R15,GT,CVDFMAX#),STAETERM  Failsoft loop, curtains              
*                                                                               
         IF    (CVCURPATH,NZ),BEGIN  Close current path...                      
         XWTO  'Path closed by failsoft recovery'                               
         L     R15,CVCURPATH       Current path ptr                             
         CLEAR CVCURPATH           Not current now                              
         VCALL PATHCLS             Close path                                   
         END                                                                    
         END                                                                    
*-                                                                              
*-       User mode failure.                                                     
*-                                                                              
         ELSE  BEGIN               User mode failure...                         
         WITH  (JCB,R4),BEGIN                                                   
         INCR  R15,JCBFCNT                                                      
         IF    (R15,GT,JCBFMAX#),BEGIN  Too many errors...                      
         IF    (CVFTEST,AND,(R15,LT,6)),EXIT                                    
         IF    JCBWFERR,STAETERM   User was suspended, punt                     
         SET   JCBWFERR            Suspend failing user                         
         END                                                                    
         END                                                                    
         END                                                                    
*-                                                                              
*-       Attempt a retry.                                                       
*-                                                                              
         MODESET KEY=ZERO          ********                                     
         LA    R1,SDWA             Needed for SETRP                             
         SETRP RC=4,RETADDR=STAERTRY,FRESDWA=YES,DUMP=NO                        
         MODESET KEY=NZERO         *********                                    
         L     R14,STAERTN                                                      
         BR    R14                                                              
*-                                                                              
*-       Terminate WYLBUR.                                                      
*-                                                                              
STAETERM TTIMER CANCEL             Cancel any timer                             
         CLEAR R1                                                               
         ESPIE RESET,(1)           Clear any spie                               
         ESTAE 0                   Clear stae                                   
*-                                                                              
*-       We need to re-initialize the CP so the seg buffer is set up            
*-       for the TWTO.                                                          
*-                                                                              
         L     CVR,=V(CV)                                                       
*                                                                               
         L     R13,CVDSTK                                                       
         LR    R8,R13              Dispatcher stack                             
*                                                                               
         VCALL AMODE31             Make sure we are in 31-bit mode              
*                                                                               
         IF    (CVFINFO,NZ),BEGIN  We have a failure message...                 
         XWTO  CVFINFO             Tell operator of failure                     
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         ACALL SHUTDOWN            Normal termination, sort of                  
         DC    H'0'                (No return)                                  
*                                                                               
         DROP  SDWA,BR                                                          
         EJECT                                                                  
*box                                                                            
*                                                                               
*  STAERTRY -- ESTAE retry routine.  Entered after the ESTAE                    
*    exit routine has taken a dump and has decided to recover.                  
*                                                                               
STAERTRY BASE                                                                   
         L     CVR,=V(CV)          CV ptr                                       
*                                                                               
         L     R13,CVDSTK          Dispatcher stack                             
         LR    R8,R13                                                           
*                                                                               
         VCALL AMODE31             Make sure we are in 31-bit mode              
*                                                                               
         CLEAR CVFABEND            Not abending any more                        
         CLEAR CVFFORCE            Clear forced pages written                   
*                                                                               
         IF    STAEFTRC,'SET CVFTRC'  Re-enable tracing                         
*-                                                                              
*-       Free the temporary CP and restore the saved stack.                     
*-                                                                              
*-       Note: For a dispatcher failsoft we must either restore                 
*-             the "CP" stack or clear CVOLDJCB in case the same                
*-             user gets run twice.  Just for safety we do both.                
*-                                                                              
         L     CPR,STAECPX         Get our temporary CP ptr                     
         VCALL FREECP              Release temporary CP                         
*                                                                               
         IF    (STAESTKP,NZ),BEGIN  Restore saved stack...                      
         MOVEL L:CVSTACK,L:STAESTKP,L:CVSTACKL  Restore stack                   
*                                                                               
         L     R1,STAESTKP                                                      
         L     R0,CVSTACKL                                                      
         FREEMAIN R,A=(1),LV=(0)   Now free the save stack area                 
         CLEAR STAESTKP                                                         
*                                                                               
         CLEAR CVOLDJCB            No "previous" user                           
         END                                                                    
*-                                                                              
*-       If the failure occurred in the dispatcher then all we can              
*-         do is return to the dispatcher.  No warning message                  
*-         can be written because we don't know who was responsible.            
*-                                                                              
         LT    R15,CVCURJCB        Current user                                 
         IF    Z,BEGIN             None, in dispatcher mode...                  
         CLEAR CPR                 No current CP                                
         VCALL DISPCONT            Re-start dispatcher                          
         DC    H'0'                (No return)                                  
         END                                                                    
*-                                                                              
*-       Failure occurred while running a user; set things up so                
*-         we can run them again.                                               
*-                                                                              
         WITH  (JCB,R15),'L CPR,JCBCPX'  CP ptr                                 
*                                                                               
         VCALL INITSTK             Reset user stack                             
         PFREE PAR                 Reset user page ptrs                         
         PFREE PBR                 (Ditto)                                      
*                                                                               
         VCALL GETCPU              Get current CPU total                        
         ST    R1,CVRCPUTM         Don't charge user for failsoft               
*                                                                               
         CLEAR CPFQUIET,CPFDUMP    Reset QUIET/DUMP                             
*                                                                               
         CLEAR CPFDISP             Reset display mode                           
         VCALL PAGERES             Reset page mode                              
*                                                                               
         L     R5,CVCURJCB                                                      
         WITH  (JCB,R5),BEGIN                                                   
         TCLEAR                                                                 
         TCR                                                                    
         TSEG  X'2F'               (bell)                                       
         TSEG  'An error occurred in WYLBUR while processing '                  
         TSEG  'this command; diagnostic',,CR                                   
         TSEG  'information describing it has been logged.  This '              
         TSEG  'was a programming error; it',,CR                                
         TSEG  'was not your fault.  '                                          
*                                                                               
         IF    (JCBFCNT,LT,JCBFMAX#),BEGIN                                      
         TSEG  'WYLBUR will end your current session if it occurs '             
         TSEG  'again.',,CR                                                     
         END                                                                    
*                                                                               
         ELSE  BEGIN                                                            
         TCR                                                                    
         TSEG  'This session has been ended.',,CR                               
         L     R15,CVCURJCB                                                     
         WITH  (JCB,R15),'SET JCBAFALO'  Try to logoff                          
         END                                                                    
*                                                                               
         TCR                                                                    
*                                                                               
         IF    CPSFSPR,BEGIN       Priv'd...                                    
         L     R4,=A(TRCAREA)                                                   
         WITH  (TRCAREA,R4)                                                     
         TCR                                                                    
         TSEG  CVFINFO,,T                                                       
         TCR                                                                    
         TSEG  'Registers: '                                                    
         LH    R0,=H'-1'                                                        
         LA    R1,KAPREGS                                                       
         ACALL DUMPREGS            Display the registers                        
*                                                                               
         IF    CVFTEST,BEGIN                                                    
         TCR                                                                    
         TREAD 'Press RETURN to continue... '                                   
         END                                                                    
         END                                                                    
*                                                                               
         IF    ^JCBWFERR,BEGIN                                                  
         SETUP JCB                 Put user on SETUP queue                      
         END                                                                    
         END                                                                    
*                                                                               
         SET   CPFERROR+CPFABORT                                                
         MVC   CPERRID,=CL8'FAILSOFT'                                           
*                                                                               
         MVC   CPREGS+R14*4(4),=V(COMMAND)  Another day                         
         L     R15,=V(DISPATCH)                                                 
         BR    R15                                                              
*                                                                               
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CLOSEFIN -- This ESTAE exit routine gets called after the dump               
*    formatter ESTAE routine to CLOSE the dump formatter's                      
*    SYSPRINT file.                                                             
*                                                                               
CLOSEFIN  WITH  (CLOSEFIN,R15),BEGIN                                            
         IF    (R0,EQ,12),BEGIN    No SDWA...                                   
         CLEAR R15                 Abend, no retries                            
         BR    R14                                                              
         END                                                                    
         END                                                                    
*                                                                               
         LR    R6,R1               SDWA ptr                                     
         USING SDWA,R6                                                          
*                                                                               
         LR    R5,RAR              Save return addr                             
*                                                                               
         BASE                                                                   
*                                                                               
         L     CVR,=V(CV)          CV ptr                                       
         CLEAR CPR                 No CP here                                   
*                                                                               
         LA    R13,TBLSTACK                                                     
         LR    R8,R13                                                           
*-                                                                              
*-       Switch back into our TCB key and problem state.                        
*-                                                                              
         MODESET MODE=SUP          Play the game....                            
         L     R3,CVTCBP           Our TCB                                      
         WITH  (TCB,R3),BEGIN                                                   
         MODESET EXTKEY=TCB,SAVEKEY=STAEKEY,WORKREG=1  TCB key(safe)            
         END                                                                    
         MODESET MODE=PROB         Always return to problem state               
*                                                                               
         VCALL AMODE24             ********                                     
         L     R2,=A(SYSPRINT)                                                  
         IF    @R2+(DCBOFLGS-DCB).DCBOFOPN,BEGIN  SYSPRINT open...              
         WTO   'Closing SYSPRINT in ESTAE exit!'                                
         CLOSE (SYSPRINT)                                                       
         END                                                                    
         VCALL AMODE31             ********                                     
*                                                                               
         MODESET KEY=ZERO          ********                                     
         LA    R1,SDWA             Needed for SETRP                             
         SETRP RC=0                Continue abending                            
         MODESET KEY=NZERO         ********                                     
         CLEAR R15                 No retries                                   
         BR    R5                                                               
*                                                                               
         DROP  SDWA,BR                                                          
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CLEANFIN -- This ESTAE exit routine gets called after the dump               
*    formatter ESTAE routine, to handle last minute cleanup.                    
*                                                                               
CLEANFIN WITH  (CLEANFIN,R15),BEGIN                                             
         IF    (R0,EQ,12),BEGIN    No SDWA...                                   
         CLEAR R15                 Abend, no retries                            
         BR    R14                                                              
         END                                                                    
         END                                                                    
*                                                                               
         LR    R6,R1               SDWA ptr                                     
         USING SDWA,R6                                                          
*                                                                               
         LR    R5,RAR              Save return addr                             
*                                                                               
         BASE                                                                   
*                                                                               
         L     CVR,=V(CV)          CV ptr                                       
         CLEAR CPR                 No CP here                                   
*                                                                               
         LA    R13,TBLSTACK                                                     
         LR    R8,R13                                                           
*-                                                                              
*-       Switch back into our TCB key and problem state.                        
*-                                                                              
         MODESET MODE=SUP          Play the game....                            
         L     R3,CVTCBP           Our TCB                                      
         WITH  (TCB,R3),BEGIN                                                   
         MODESET EXTKEY=TCB,SAVEKEY=STAEKEY,WORKREG=1  TCB key(safe)            
         END                                                                    
         MODESET MODE=PROB         Always return to problem state               
*                                                                               
         VCALL AMODE31             ********                                     
*                                                                               
         ACALL CLEANUP             Do final cleanup                             
*                                                                               
         MODESET KEY=ZERO          ********                                     
         LA    R1,SDWA             Needed for SETRP                             
         SETRP RC=0                Continue abending                            
         MODESET KEY=NZERO         ********                                     
         CLEAR R15                 No retries                                   
         BR    R5                                                               
*                                                                               
         DROP  SDWA,BR                                                          
*                                                                               
TBLSTACK DS    200F                Trouble stack                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHUTDOWN -- Routine to terminate WYLBUR normally.                            
*                                                                               
*    On entry:                                                                  
*      R15 - return code                                                        
*                                                                               
SHUTDOWN XPROC                                                                  
         LR    R6,R15              Save return code                             
*                                                                               
         LCALL CLEANUP             Do final cleanup                             
*                                                                               
         IF    CVFABEND,BEGIN      Abending...                                  
         CLEAR R15                 Stae rc (continue abending)                  
         L     R14,=A(STAERTN)                                                  
         L     R14,@R14                                                         
         BR    R14                                                              
         END                                                                    
*                                                                               
         VCALL STATSTOP            Terminate statistics subtask                 
         VCALL TIMRSTOP            Terminate timer subtask                      
         VCALL JESSTOP             Terminate JES interface                      
         VCALL DISKSTOP            Terminate I/O subtasks                       
         VCALL VTAMSTOP            Terminate VTAM operator stuff                
         LR    R15,R6              Rc                                           
         L     R14,CVOSRA                                                       
         BR    R14                                                              
*                                                                               
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CLEANUP -- Routine to do final termination cleanup.                          
*                                                                               
CLEANUP  XPROC                                                                  
         IF    (CLEANFLG,Z),BEGIN  Only once...                                 
         MVI   CLEANFLG,X'FF'      Set first time flag                          
*                                                                               
         VCALL FORCEOUT            Force recovery pages out                     
*                                                                               
         VCALL DOWNBILL            Force billing records out                    
*                                                                               
         VCALL DISPSTOP            Free CSA for page I/O                        
         IF    ^CVFTEST,BEGIN      Production version...                        
         L     R5,CVTPTR                                                        
         WITH  (CVT,R5)                                                         
         LT    R4,CVTUSER          Scip CVT ptr                                 
         IF    Z,EXIT              None, scram                                  
         WITH  (USERCVT,R4)                                                     
         IF    (USERCVT,NE,'SCIP'),EXIT  Not ours, scram                        
         MODESET KEY=ZERO          ********                                     
         CLEAR USEHSPFL.HSPFWYL    Wylbur is down                               
         MODESET KEY=NZERO         ********                                     
         END                                                                    
         END                                                                    
         PEND                                                                   
*                                                                               
CLEANFLG DC    X'00'               Set to FF after first time                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FMTDUMP -- Routine to format a failsoft dump.                                
*                                                                               
*    On entry:                                                                  
*      R1 - SDWA ptr                                                            
*                                                                               
FMTDUMP  XENTER R2,R8,,LOCAL                                                    
         LR    R6,R1                                                            
         USING SDWA,R6                                                          
*                                                                               
         ACALL FREESYSP            Free any previous SYSPRINT                   
         ACALL ALLOSYSP            Allocate a new SYSPRINT                      
*                                                                               
         L     R15,=A(PRTSEG)                                                   
         ST    R15,CPSEGRTN        Set our SEG routine                          
*                                                                               
         TCLEAR                                                                 
         MVC   CPSEGMAXF,=F'79'    Set maximum length                           
*                                                                               
         L     R2,=A(SYSPRINT)                                                  
         WITH  (DCB,R2),BEGIN                                                   
         MVC   DCBLRECL,=H'137'    Set for max                                  
         VCALL AMODE24             ********                                     
         OPEN  (SYSPRINT,(OUTPUT))                                              
         VCALL AMODE31             ********                                     
         IF    ^DCBOFLGS.DCBOFOPN,FMTEXIT                                       
         END                                                                    
*                                                                               
         SETCC 1                                                                
         TSEG  'Dump of job '                                                   
         IF    (CVWYLJBN,NE,CVBLANKS),'TSEG CVWYLJBN,,TB'                       
         TSEG  CVNAME,,T           Wylbur                                       
         IF    (CVNAME,NE,CVWYLSSN),BEGIN                                       
         TSEG  ' ('                                                             
         TSEG  CVWYLSSN,,T                                                      
         TSEG  ')'                                                              
         END                                                                    
         TSEG  ' on '                                                           
         VCALL LOCALTOD            Current time/date                            
         XPUSH ,,32,PTR=R15                                                     
         VCALL FMTCLCK                                                          
         TSEG  (R1),(R0)                                                        
         XPOP  ,,32                                                             
         TCR                                                                    
         TCR                                                                    
         TSEG  L:=V(VERSION),&LINESZ,T     version text                         
         TCR                                                                    
         TCR                                                                    
*                                                                               
         TSEG  CVFINFO,,CR         Abend information                            
*                                                                               
         IF    (SDWANXT1,NE,SDWANXT2),BEGIN                                     
         TSEG  'Abend in SVC, at '                                              
         TPSW  SDWANXT1            Svc PSW ia                                   
         TCR                                                                    
         TCR                                                                    
*                                                                               
         TSEG  'Active RB''s:',,CR                                              
         L     R5,CVTPTR                                                        
         WITH  (CVT,R5),'L R5,CVTTCBP; L R5,4(,R5)'                             
         USING TCB,R5              Our TCB                                      
         L     R15,TCBRBP           First RB                                    
         WITH  (RB,R15),'L3 R4,RBLINKB'  Skip over stae RB                      
         WHILE (R4,NE,R5),BEGIN                                                 
         WITH  (RB,R4)                                                          
         THEX  (R4),8                                                           
         TSEG  CVBLANKS,1                                                       
         SETMSG 'PRB '                                                          
         IF    RBSTAB1.RBFTIRB,'SETMSG "IRB "'                                  
         IF    RBSTAB1.RBFTSVRB,'SETMSG "SVRB"'                                 
         TSEG  (R1),(R0)                                                        
         TSEG  ' at '                                                           
         TPSW  RBOPSW+4                                                         
         TSEG  ', '                                                             
         IF    RBSTAB1.RBFTSVRB,BEGIN  get svc no...                            
         TSEG  'SVC '                                                           
         L3    R15,RBLINKB         Previous RB                                  
         SH    R15,=H'2'           RB prefix                                    
         TNUM  LH:@R15             RBINTCOD is the svc no                       
         TSEG  ', '                                                             
         END                                                                    
         IF    (RBSTAB1.RBFTSVRB,OR,^RBSTAB1.RBFTIRB),BEGIN                     
         IF    ('L3 R2,RBCDE1',Z),EXIT                                          
         WITH  (CDE,R2)                                                         
         IF    (CDNAME,EQ,=XL8'00'),EXIT  no cdename                            
         TSEG  CDNAME,,T                                                        
         TSEG  ', entry at '                                                    
         TLOC  L3:CDENTPT+1        Entry point                                  
         END                                                                    
         TCR                                                                    
         TSEG  '       Regs:  '                                                 
         LH    R0,=H'-1'           Register print mask--all regs                
         LA    R1,RBGRS0           R0-R15                                       
         ACALL DUMPREGS                                                         
         TCR                                                                    
         L3    R15,RBLINKB         Next RB down (24-bit address)                
         LR    R4,R15              Set for loop                                 
         END                                                                    
         DROP  TCB                                                              
         END                                                                    
*                                                                               
         TCR                                                                    
         TSEG  'Registers:  '                                                   
         LH    R0,=H'-1'           Print all regs                               
         L     R1,=A(KAPREGS)      R0-R15 regs                                  
         ACALL DUMPREGS                                                         
*                                                                               
         L     R2,=V(DISKCLCK)                                                  
         IF    ('LT R15,@R2',NZ),BEGIN  there was a subtask abend...            
         L     R5,=V(DISKSCB)      Subtask's SCB info                           
         WITH  (SDWA,R5)                                                        
         TCR                                                                    
         TCR                                                                    
         TSEG  'I/O Subtask Abend at '                                          
         LM    R0,R1,@R2                                                        
         XPUSH ,,32,PTR=R15                                                     
         VCALL FMTCLCK             hh:mm:ss mm/dd/yy                            
         TSEG  (R1),(R0),WR                                                     
         XPOP  ,,32                                                             
         TCR                                                                    
         TSEG  'Abend '                                                         
         L     R15,SDWAABCC                                                     
         LA    R1,CPDOUB                                                        
         ACALL ABENDCD                                                          
         TSEG  (R1),(R0)                                                        
         TSEG  ' at '                                                           
         TPSW  SDWANXT1            PSW ia                                       
         TCR                                                                    
*                                                                               
         TSEG  'Problem program registers:',,CR                                 
         TSEG  '    '                                                           
         LH    R0,=H'-1'           Print all regs                               
         LA    R1,SDWASRSV                                                      
         ACALL DUMPREGS                                                         
*                                                                               
         TCR                                                                    
         TSEG  'Abend in SVC, at '                                              
         TPSW  SDWANXT2            Svc PSW ia                                   
         TCR                                                                    
*                                                                               
         TSEG  'Registers when abend occurred:',,CR                             
         TSEG  '    '                                                           
         LH    R0,=H'-1'           Print all regs                               
         LA    R1,SDWAGRSV                                                      
         ACALL DUMPREGS                                                         
         END                                                                    
         TCR                                                                    
*                                                                               
         TNUM  LH:CVNUSERS         No. of logged on users                       
         TSEG  ' users logged on'                                               
         IF    CVFINIT,'TSEG " -- in init"'                                     
         IF    CVFRCVY,'TSEG " -- running recovery"'                            
         IF    CVFPUSR,'TSEG " -- pseudo user"'                                 
         TCR                                                                    
*                                                                               
         LT    R15,CVCURJCB        Current user's JCB                           
         IF    NZ,BEGIN                                                         
         WITH  (JCB,R15),'L R5,JCBCPX'  Current user's CP ptr                   
         WITH  (CP,R5)                                                          
*                                                                               
         IF    (CP,NE,'CP'),EXIT   Screwy CP, scram                             
         IF    (CPSUSER,EQ,X'00'),EXIT  Not logged on, scram                    
         SEGDEF CPSEG-CP(CPR)      Use our CPSEG buffer                         
         SEGCR 'Current user:'                                                  
         SEGCR                                                                  
         SEG   'User '                                                          
         SEG   CPSGRP                                                           
         SEG   '.'                                                              
         SEG   CPSUSER                                                          
         SEG   ', line '                                                        
         L     R4,CVCURJCB                                                      
         WITH  (JCB,R4),'SEGDC LH:JCBSEQ'                                       
         SEGCR                                                                  
         IF    CPFEXEC,'SEG "EXEC FILE "'                                       
         SEG   'Command: '                                                      
         SEGCR CPCMD                                                            
*                                                                               
         IF    ('LT R2,CPSEGLENF',NZ),BEGIN                                     
         SEG   'Write:  '                                                       
         SEGCR L:CPSEGLOC,(R2)                                                  
         END                                                                    
*                                                                               
         SEGCR                                                                  
         END                                                                    
*-                                                                              
*-       Display page buffer information.                                       
*-                                                                              
         IF    ^CVFMEMPAGE,BEGIN   Display paging information...                
         TCR                                                                    
         TCR                                                                    
         TSEG  'Page Queues:',,CR                                               
         TCR                                                                    
*                                                                               
         SETMSG '  BUFFER Queue'                                                
         LA    R15,CVBUFQ          Buffer queue                                 
         VCALL FMTPGQ                                                           
*                                                                               
         SETMSG '   EMPTY Queue'                                                
         LA    R15,CVEMBUFQ        Empty buffer queue                           
         VCALL FMTPGQ                                                           
         END                                                                    
*-                                                                              
*-       Display JCBS.                                                          
*-                                                                              
         MVC   CPSEGMAXF,=F'132'   Set new width                                
         SETCC 1                                                                
         TSEG  'Active Users:',,CR                                              
         TCR                                                                    
         L     R1,CVFJCB                                                        
         LOOP  'ACALL JCBDISP; UNTIL Z'  Display all JCBs                       
*                                                                               
         TCR                                                                    
         SETCC 1                                                                
         TSEG  'Trace Table',,CR                                                
         TCR                                                                    
         TSEG  TRCTITLE,,CR                                                     
         TSEG  TRCTDASH,,CR                                                     
**  Display the trace table in FILO (LIFO?) order.  i.e. backwards.             
         L     R5,=A(TRCAREA)                                                   
         WITH  (TRCAREA,R5),BEGIN                                               
         L     R4,TRCNEXT                                                       
         LOOP  BEGIN                                                            
         WITH  (TRE,R4)                                                         
         SH    R4,=AL2(L'TRE)      Backup                                       
         IF    (R4,LT,TRCSTRT),'L R4,TRCEND; SH R4,=AL2(L"TRE)'  wrp            
         IF    ^TREFDEF,EXIT                                                    
         THEX  LA:TRE,8            Trace entry addr                             
         TSEG  CVBLANKS,1                                                       
         TSEG  TRENAME                                                          
         TSEG  ' at '                                                           
         TPSW  TREADDR                                                          
         TCOL  40                  Try and keep some alignment                  
         IF    TREFENTR,BEGIN      Give caller if entry trace                   
         TPSW  TREREGS+(RAR*4)     Caller's addr                                
         TSEG  ', '                                                             
         END                                                                    
*                                                                               
         IF    TREFDATA,BEGIN      User data...                                 
         TSEG  'Data='                                                          
         THEX  TREDATA,8                                                        
         TSEG  CVBLANKS,1                                                       
         THEX  TREDATA+4,8                                                      
         TSEG  ', '                                                             
         END                                                                    
         LH    R0,TRERGMSK         Register print mask                          
         N     R0,=A(B'1111111111110111')  Pointless to display R12             
         LA    R1,TREREGS                                                       
         ACALL DUMPREGS                                                         
         UNTIL (R4,EQ,TRCNEXT)                                                  
         END                                                                    
         END                                                                    
*                                                                               
FMTTRCDN SETCC 1                                                                
         TSEG  'Symbol Table:',,CR                                              
         TCR                                                                    
         ACALL SYMDISP                                                          
*-                                                                              
*-       Display NPATHs.                                                        
*-         Show this after the current user to keep Charley happy.              
*-                                                                              
         SETCC 1                                                                
         VCALL NETFMT              Format network information                   
*                                                                               
         SETCC 1                                                                
         TSEG  'CV:'                                                            
         TCORE CV                  Fixed part of CV                             
         SETCC 1                                                                
         TSEG  'CV Stack:'                                                      
         TCORE L:CVDSTK,L:=A(64*1024)  First 64k of disp. stack                 
*                                                                               
         SETCC 1                                                                
         LT    R15,CVCURJCB                                                     
         IF    NZ,BEGIN                                                         
         WITH  (JCB,R15),'L R2,JCBCPX'  User's CP ptr                           
         TSEG  'CP:'                                                            
         TCORE (R2),LH:=AL2(CPXSIZE)  Display user's CP                         
         TCR                                                                    
         TCR                                                                    
*                                                                               
         SETCC 1                                                                
         TSEG  'CP Stack:'                                                      
         L     R1,=A(STAESTKP)                                                  
         L     R1,@R1                                                           
         L     R15,CVSTACK                                                      
         SR    R15,R1              Compute address adjustment                   
         L     R2,=A(KAPREGS)                                                   
         L     R2,13*4(R2)         Now attempt to compute stack len             
         LR    R0,R2               Saved R13  (assumed end of stack)            
         L     R2,CVSTACK                                                       
         SR    R0,R2                                                            
         IF    (R0,POS),' A R0,=F"4096" '  plus a bit                           
         IF    ((R0,NEG),OR,(R0,GT,CVSTACKL)),BEGIN if r13 was junk             
         L     R0,CVSTACKL                          use whole stack             
         END                                                                    
         TCORE (R1),(R0),ADJUST=(R15)  Disp saved stack                         
*                                                                               
         L     R15,CVCURJCB        check for IOWA area                          
         WITH  (JCB,R15),'L R2,JCBCPX'  User's CP ptr                           
         A     R2,=A(CPIOWAP-CP)                                                
         L     R2,0(R2)                                                         
         IF    (R2,NZ),BEGIN                                                    
         SETCC 1                                                                
         TSEG  'Iowa:'                                                          
         L     R1,=V(IOWASIZE)                                                  
         L     R0,0(R1)                                                         
         TCORE (R2),(R0),NOADDR                                                 
         END                                                                    
*                                                                               
         SETCC 1                                                                
         TSEG  'Heap space:'                                                    
         TCORE L:CVHEAP,L:CVHEAPL  Display heap                                 
         END                                                                    
*                                                                               
         L     R3,=A(TRCAREA)                                                   
         WITH  (TRCAREA,R3),BEGIN                                               
         IF    ('LT R2,KAPREGS+PAR*4',NZ),BEGIN  Got a page A...                
         SETCC 1                                                                
         TSEG  'Page A Buffer:'                                                 
         TCORE (R2),LH:=AL2(CVPSZ),NOADDR                                       
         END                                                                    
         IF    ('LT R2,KAPREGS+PBR*4',NZ),BEGIN  Got a page B...                
         SETCC 1                                                                
         TSEG  'Page B Buffer:'                                                 
         TCORE (R2),LH:=AL2(CVPSZ),NOADDR                                       
         END                                                                    
         END                                                                    
*                                                                               
         TCR                                                                    
         TCR                                                                    
         TSEG  'Ciao!'                                                          
         TWRITE                                                                 
*                                                                               
         L     R2,=A(SYSPRINT)                                                  
         IF    @R2+(DCBOFLGS-DCB).DCBOFOPN,BEGIN  If open...                    
         VCALL AMODE24             ********                                     
         CLOSE (SYSPRINT)                                                       
         FREEPOOL (R2)                                                          
         VCALL AMODE31             ********                                     
         END                                                                    
         ACALL FREESYSP            Free SYSPRINT now                            
FMTEXIT  XEXIT                                                                  
         DROP  SDWA,BR                                                          
*                                                                               
TRCTITLE DC C'   Addr    Id        Trace address        Data'                   
TRCTIDS  DC    (L'TRCTITLE)C'-'                                                 
TRCTDASH EQU   TRCTIDS,*-TRCTIDS                                                
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ABENDCD -- Routine to format an abend code.                                  
*                                                                               
*    On entry:                                                                  
*      R15 - abend code (in xxsssuuu format)                                    
*      R1 - address of an 8 byte result area                                    
*                                                                               
*    On exit:                                                                   
*      R1,R0 - result loc, len                                                  
*                                                                               
ABENDCD  XENTER R2,R8,,LOCAL                                                    
         LR    R6,R1                                                            
         MVC   @R6(8),CVBLANKS                                                  
*                                                                               
         LR    R2,R15                                                           
         LR    R3,R15                                                           
         N     R3,=A(X'FFF000')    Isolate system code                          
         IF    NZ,BEGIN            Do if system abend code                      
         MVI   @R6,C'S'                                                         
         SRL   R3,12               Move over                                    
         BTX   @R6+1,3,(R3)        Abend code--Shhh                             
         SETMSG (R6),4                                                          
         END                                                                    
         ELSE  BEGIN               Otherwise, it's a user abend                 
         MVI   @R6,C'U'                                                         
         N     R2,=A(X'FFF')       Only keep user code                          
         A     R2,=A(10000)        Ensures four leading zeros                   
         BTD   @R6+1,4,(R2)        Abend code--Udddd                            
         SETMSG (R6),5                                                          
         END                                                                    
         XEXIT                                                                  
         DROP  BR                                                               
         DROP  BR                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SYMDISP -- Routine to display the symbol table.                              
*                                                                               
SYMDISP  XENTER R5,R8,,LOCAL                                                    
         L     R5,=A(SYMBOLS)      Start of symbol table                        
         USING SYMBOL,R5                                                        
         UNTIL SYMFEND,BEGIN                                                    
         THEX  L3:SYMADDR,8                                                     
         TSEG  CVBLANKS,1                                                       
         TSEG  SYMNAME,,T                                                       
         IF    SYMFCSCT,BEGIN      Csect's have idents...                       
         TCOL  14                                                               
         IF    ('L3 R15,SYMADDR',Z),EXIT                                        
         IF    ((@R15,LT,X'13'),OR,(@R15,GT,X'18')),EXIT  Bad len byte          
         IF    (@R15+1.X'C0',^ONES),EXIT  Not alpha                             
         TSEG  @R15+1,LC:@R15,T                                                 
         END                                                                    
         TCR                                                                    
         LA    R5,SYMNEXT                                                       
         END                                                                    
         XEXIT R5,R8                                                            
         DROP  SYMBOL,BR                                                        
         EJECT                                                                  
*box                                                                            
*                                                                               
*  JCBDISP -- Routine to format a JCB.                                          
*                                                                               
*    On entry:                                                                  
*      R1 - JCB addr                                                            
*                                                                               
*    On exit:                                                                   
*      R1 - next JCB addr (or zero)                                             
*                                                                               
JCBDISP  XENTER R2,R8,,LOCAL                                                    
         LR    R5,R1                                                            
         USING JCB,R5                                                           
         IF    JCBWFSO,DJCBNEXT    Skip logged off user                         
         THEX  LA:JCB,8                                                         
         TSEG  ' Line '                                                         
         TNUM  LH:JCBSEQ                                                        
         IF    (JCBACCT,NZ),BEGIN                                               
         TSEG  CVBLANKS,1                                                       
         TSEG  JCBGRP                                                           
         TSEG  '.'                                                              
         TSEG  JCBUSER                                                          
         IF    (JCBANO,GT,1),BEGIN                                              
         TSEG  '#'                                                              
         TNUM  L2:JCBANO                                                        
         END                                                                    
         END                                                                    
*                                                                               
         TSEG  ' (Pages='                                                       
         TNUM  LH:JCBNPG                                                        
         TSEG  ')'                                                              
*                                                                               
         IF    ('LT R4,JCBCPX',POS),BEGIN                                       
         LT    R15,CPLINTP-CP(R4)  Does user have View stuff?                   
         IF    NZ,'TSEG " (View)"'                                              
         END                                                                    
*                                                                               
         IF    (JCBFCNT,NZ),BEGIN                                               
         TSEG  ' ('                                                             
         TNUM  LH:JCBFCNT                                                       
         TSEG  ' failsofts)'                                                    
         END                                                                    
*                                                                               
         IF    (R5,EQ,CVCURJCB),'TSEG " (Current)"'                             
         IF    JCBFATTN,'TSEG " (Attn)"'                                        
         IF    JCBFNATN,'TSEG " (Attn disabled)"'                               
         IF    JCBFPATN,'TSEG " (Pending Attn)"'                                
         IF    JCBAFALO,'TSEG " (Logging off)"'                                 
         IF    JCBWFERR,'TSEG " (Stopped)"'                                     
*                                                                               
         IF    (JCBWFL,NZ),BEGIN                                                
         TSEG  ' (Wait flags: '                                                 
         THEX  LH:JCBWFL,4                                                      
         TSEG  ')'                                                              
         END                                                                    
*                                                                               
         IF    ('LT R4,JCBDSPP',NZ),BEGIN                                       
         TSEG  ' (Will release line '                                           
         WITH  (JCB,R4),'LH R15,JCBSEQ'                                         
         TNUM  (R15)                                                            
         TSEG  ')'                                                              
         END                                                                    
*                                                                               
         L     R4,CVFRSG           First rscgroup                               
         WHILE (R4,LE,CVRSG+8),BEGIN                                            
         WITH  (RSCGROUP,R4)                                                    
         LA    R3,RSGQACFW-(RSC@NEXT-RESOURCE)                                  
         WITH  (RESOURCE,R3),BEGIN                                              
HVRSC    WHILE ('C R3,RSGQACBK',NE),BEGIN                                       
         L     R3,RSC@NEXT                                                      
         IF    (R5,NE,RSC@JCB),NEXT                                             
         TSEG  ' ('                                                             
         TSEG  RSGNAME,,T                                                       
         TSEG  ' owned)'                                                        
         EXIT  HVRSC                                                            
         END                                                                    
         END                                                                    
         LA    R3,RSGQJCFW-(JCBQF-JCB)                                          
         CLEAR R2                  Position in queue                            
         WITH  (JCB,R3),BEGIN                                                   
WTRSC    WHILE ('C R3,RSGQJCBK',NE),BEGIN                                       
         L     R3,JCBQF                                                         
         LA    R2,@R2+1                                                         
         IF    (R5,NE,R3),NEXT                                                  
         TSEG  ' (Waiting for '                                                 
         TSEG  RSGNAME,,T                                                       
         TSEG  ', pos '                                                         
         TNUM  (R2)                                                             
         TSEG  ')'                                                              
         EXIT  WTRSC                                                            
         END                                                                    
         END                                                                    
         A     R4,CVRSG+4          Next rscgroup                                
         END                                                                    
         TCR                                                                    
*                                                                               
         IF    ('LT R4,JCBCPX',POS),BEGIN  CP in core...                        
         WITH  (CP,R4)                                                          
*                                                                               
         SEGDEF CPSEG-CP(CPR)                                                   
         SEG   '  CP at '                                                       
         SEGHX LA:CP,8                                                          
         SEGCR                                                                  
         SEG   '  Account: '                                                    
         SEG   CPSGRP                                                           
         SEG   '.'                                                              
         SEG   CPSUSER                                                          
         SEG   ','                                                              
         IF    CPFEXEC,BEGIN  From exec file...                                 
         SEG   ' EXEC (line '                                                   
         L     R0,CPEXLINE         Current exec lineno                          
         VCALL CVEXNO                                                           
         SEG   (R1),(R0)                                                        
         SEG   ')'                                                              
         END                                                                    
         SEG   ' Command: '                                                     
         SETMSG CPCMD,LH:CPCMDLEN                                               
         IF    ^CVFABEND,BEGIN                                                  
         IF    (CPSUSER,EQ,X'D1C4D5'),'CLEAR R0,R1'                             
         END                                                                    
         SEGCR (R1),(R0)                                                        
*                                                                               
         SEG   '  CPU='                                                         
         L     R15,JCBWCPU         CPU time in tu's                             
*        IF    (R15,LGT,X'FFFFFFF'),BEGIN  Dangerously large...                 
*        SEG   'large!'                                                         
*        END                                                                    
*                                                                               
*        ELSE  BEGIN               Format CPU time...                           
*-                                                                              
*-       Un-comment out the following line if you want the CPU                  
*-         seconds to be displayed in "adjusted" CPU seconds.                   
*-                                                                              
******   VCALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         D     R14,=F'384'         Convert to .01 sec                           
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         XPUSH ,,8,PTR=R2                                                       
         BTR   (R2),(8,2),(R15)                                                 
         SEG   (R1),(R0)                                                        
         XPOP  ,,8                                                              
         SEG   ' (unadjusted)'                                                  
*        END                                                                    
*                                                                               
         SEG   ', typed commands='                                              
         L     R15,CPNCOM                                                       
         SL    R15,CPNCOME                                                      
         SEGDC (R15)                                                            
         SEG   ' ('                                                             
         SEGDC L:CPNCOME                                                        
         SEG   ' exec)'                                                         
         SEGWR                                                                  
*-                                                                              
*-       Display user's registers.                                              
*-                                                                              
         IF    CVFABEND,BEGIN                                                   
         SEG   '  Regs: '                                                       
*                                                                               
         LA    R1,CPREGS                                                        
         L     R0,=A(B'1111111111111111')                                       
         ACALL DUMPREGS            Show CP regs                                 
         END                                                                    
         END                                                                    
*                                                                               
*  Display current pages.                                                       
*                                                                               
*NIZ*    IF    CVFABEND,BEGIN      Only for dump formatter...                   
*NIZ*    LT    R2,JCBPCBA          PCB address for page A                       
*NIZ*    IF    NZ,BEGIN                                                         
*NIZ*    TSEG  '  Page A:  '                                                    
*NIZ*    THEX  (R2),8              PCB address                                  
*NIZ*    IF    (R2,POS),BEGIN                                                   
*NIZ*    TSEG  '/'                                                              
*NIZ*    L     R2,CVPINDEX(R2)     Data buffer ptr                              
*NIZ*    THEX  (R2),8              Data buffer address                          
*NIZ*    TSEG  ': '                                                             
*NIZ*                                                                           
*NIZ*    SETMSG (R2),16             First piece of buffer                       
*NIZ*    L     R15,CPSEGLENF                                                    
*NIZ*    S     R15,CPSEGMRKF       Calculate indentation                        
*NIZ*    VCALL HEXFMT                                                           
*NIZ*    END                                                                    
*NIZ*    ELSE  'TCR'                                                            
*NIZ*    END                                                                    
*NIZ*                                                                           
*NIZ*    LT    R2,JCBPCBB          PCB address for page B                       
*NIZ*    IF    NZ,BEGIN                                                         
*NIZ*    TSEG  '  Page B:  '                                                    
*NIZ*    THEX  (R2),8              PCB address                                  
*NIZ*    IF    (R2,POS),BEGIN                                                   
*NIZ*    TSEG  '/'                                                              
*NIZ*    L     R2,CVPINDEX(R2)     Data buffer ptr                              
*NIZ*    THEX  (R2),8              Data buffer address                          
*NIZ*    TSEG  ': '                                                             
*NIZ*                                                                           
*NIZ*    SETMSG (R2),16             First piece of buffer                       
*NIZ*    L     R15,CPSEGLENF                                                    
*NIZ*    S     R15,CPSEGMRKF       Calculate indentation                        
*NIZ*    VCALL HEXFMT                                                           
*NIZ*    END                                                                    
*NIZ*    ELSE  'TCR'                                                            
*NIZ*    END                                                                    
*NIZ*    END                                                                    
*                                                                               
         TCR                                                                    
*                                                                               
DJCBNEXT LA    R1,JCBNEXT                                                       
         IF    (R1,GE,CVLJCB),'CLEAR R1'  All done                              
         LTR   R1,R1               Set cc for caller                            
         XEXIT                                                                  
         DROP  JCB,BR                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DUMPREGS -- Routine to seg saved registers.                                  
*                                                                               
*    On entry:                                                                  
*      R0 - register print mask (low 16 bits)                                   
*      R1 - addr of R0-R15 save area                                            
*                                                                               
DUMPREGS XENTER R2,R8,,LOCAL                                                    
         MVC   CPSEGINDF,CPSEGLENF  Set indentation for cont lines              
         LR    R3,R0               Print mask                                   
         SLL   R3,16               Move it to upper 16 bits                     
         LR    R4,R1               Regs addr                                    
         CLEAR R5                  Reg no                                       
         CLEAR R0                  (for first seg in loop)                      
         WHILE (R3,NZ),BEGIN       Do while still regs to print                 
         CLEAR R2                                                               
         SLDL  R2,1                Move a bit into R2                           
         IF    (R2,NZ),BEGIN       Print this reg...                            
         TSEG  (R1),(R0)                                                        
         TMARK                                                                  
         TSEG  'R'                                                              
         TNUM  (R5)                                                             
         TSEG  '='                                                              
         TLOC  @R4                                                              
         SETMSG ', '                                                            
         END                                                                    
         LA    R5,@R5+1                                                         
         LA    R4,@R4+4                                                         
         END                                                                    
         TCR                                                                    
         CLEAR CPSEGINDF                                                        
         XEXIT                                                                  
         DROP  BR                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TCORE -- Routine to seg memory contents in dump format.                      
*                                                                               
*    On entry:                                                                  
*      R1 - starting memory address                                             
*      R0 - len (complimented if "address" form not wanted)                     
*      R15- signed offset for address (for moved memory)                        
*                                                                               
TCOREWA  RECORD BEGIN                                                           
         XSA   R2,R8                                                            
*                                                                               
TCOROFFS DS    F                   Signed adjustment offset for addr            
         END                                                                    
*-                                                                              
TCORE    XENTER R2,R8,L'TCOREWA,LOCAL                                           
         USING TCOREWA,WAR                                                      
*                                                                               
         LR    R6,R1               Starting addr                                
         LR    R5,R0               Len                                          
         ST    R15,TCOROFFS        Save address offset                          
*                                                                               
         ESPIE SET,BADCORE,(4,5)   Addressing exceptions                        
         XPUSH R1                  Save old pica addr                           
         LPR   R4,R5                                                            
*                                                                               
         COMMENT                   LOOP DUMPING LINES                           
         WHILE (R4,POS),BEGIN                                                   
         TCCR                                                                   
         LA    R15,@R6             Get core addr                                
         A     R15,TCOROFFS        Apply any adjustment                         
         THEX  (R15),8             Starting addr                                
         N     R6,=F'-4'           Align to word                                
*                                                                               
         COMMENT                   IF MULTIPLE LINES OF ZEROS,                  
         COMMENT                   COMPRESS THEM                                
         COMMENT                                                                
         LR    R2,R4               MUST BE AT LEAST 128 ZEROS                   
         S     R2,=F'192'          AND NOT TOO NEAR THE END                     
         IF    ((' CLC @R6(128),=XL128"00" ',EQ),AND,(R2,POS)),BEGIN            
         LR    R2,R4                                                            
         S     R2,=F'128'                                                       
         CLEAR R3                  R3 - TOTAL ZERO COUNT                        
         COMMENT                   COUNT 32 AT A TIME                           
         WHILE ((' CLC @R6(32),=XL32"00" ',EQ),AND,(R2,POS)),BEGIN              
         S     R2,=F'32'                                                        
         S     R4,=F'32'                                                        
         LA    R3,32(R3)                                                        
         LA    R6,32(R6)                                                        
         END                                                                    
         TCOL  16                                                               
         THEX  (R3),6                                                           
         TSEG  ' BYTES OF 00000000 0000s ... ',,CR                              
         END                                                                    
*                                                                               
         COMMENT                   OUTPUT A HEX LINE (NO ADDRESSES)             
         ELSEIF (R5,NEG),BEGIN                                                  
         LR    R3,R6               Save ptr for later                           
         TSEG  CVBLANKS,2                                                       
         LA    R2,8                8 words                                      
         LOOP  BEGIN                                                            
         THEX  L:@R6,8                                                          
         TSEG  CVBLANKS,1                                                       
         LA    R6,@R6+4                                                         
         IF    ('SH R4,=H"4"',^POS),EXIT                                        
         DECR  R2                                                               
         UNTIL (R2,Z),END                                                       
         TCOL   81                                                              
         TSEG  '*'                                                              
         CLC   @R3(32),@R3         Force any interrupt                          
         XPUSH ,,32,PTR=R1                                                      
         MVC   @R1(32),@R3         Text                                         
         TR    @R1(32),SEGTRTBL    Translate out funny chars                    
         TSEG  (R1),32                                                          
         XPOP  ,,32                                                             
         TSEG  '*'                                                              
         END                                                                    
*                                                                               
         COMMENT                   OUTPUT A LINE (WITH ADDRESSES)               
         ELSE  BEGIN                                                            
         LR    R3,R6               Save ptr for later                           
         LA    R2,8                Column                                       
         LOOP  BEGIN                                                            
         TCOL  (R2)                                                             
         TLOC  L:@R6,8             Display hex & addr                           
         LA    R2,@R2+22           Next column                                  
         LA    R6,@R6+4            Next word                                    
         IF    ('SH R4,=H"4"',^POS),EXIT  All done                              
         UNTIL (R2,GE,8+22*4),END                                               
         TCOL  8+22*4+2                                                         
         TSEG  '*'                                                              
         CLC   @R3(16),@R3         Force any interrupt                          
         XPUSH ,,16,PTR=R1                                                      
         MVC   @R1(16),@R3                                                      
         TR    @R1(16),SEGTRTBL    Translate out funny chars                    
         TSEG  (R1),16             Ebcdic part                                  
         XPOP  ,,16                                                             
         TSEG  '*'                                                              
         END                                                                    
         END                                                                    
         B     SEGCDONE                                                         
BADCRS   TCR   ,                   Spie recovery reentry                        
         TSEG  'Bad address.'                                                   
SEGCDONE TCR                                                                    
         XPOP  R1                  Previous ESPIE token                         
         ESPIE RESET,(1)           Restore old ESPIE                            
         XEXIT                                                                  
*                                                                               
BADCORE  WITH  (*,R15),BEGIN       ESPIE exit...                                
         WITH  (EPIE,R1)                                                        
         MVC   EPIEIA,=A(X'80000000'+BADCRS)  Retry routine                     
         BR    R14                                                              
         END                                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TLOC -- Internal routine to seg hex address in R15 and                       
*    csect+offset if the address is in WYLBUR.                                  
*                                                                               
TLOC     XENTER R2,R8                                                           
         LR    R5,R0               Addr len (for seghx)                         
         XPUSH ,,L'LOC,PTR=R6                                                   
         USING LOC,R6                                                           
         ST    R15,LOCADDR         Save addr for findloc                        
         LR    R1,R6               Set param reg                                
         ACALL FINDLOC                                                          
         THEX  LOCADDR,(R5)                                                     
         IF    (LOCSYM,NE,CVBLANKS),BEGIN                                       
         TSEG  ' ('                                                             
         TSEG  LOCSYM,,T                                                        
         IF    (LOCSYOFS,NZ),'TSEG "+0"; THEX LH:LOCSYOFS'                      
         TSEG  ')'                                                              
         END                                                                    
         ELSEIF (LOCCSECT,NE,CVBLANKS),BEGIN                                    
         TSEG  ' ('                                                             
         TSEG  LOCCSECT,,T                                                      
         IF    (LOCCSOFS,NZ),'TSEG "+0"; THEX LH:LOCCSOFS'                      
         TSEG  ')'                                                              
         END                                                                    
         XEXIT R2,R8                                                            
         DROP  LOC                                                              
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FINDSYM -- Routine to find symbol table entry, given it's name.              
*                                                                               
*    On entry:                                                                  
*      R1,R0 - symbol loc, len                                                  
*                                                                               
FINDSYM  XENTER R2,R8                                                           
         CLEAR R15                 Assume no match                              
         IF    ((R0,^POS),OR,(R0,GT,8)),FSYMEXIT                                
         XPUSH ,,8,PTR=R6                                                       
         MVC   @R6(8),CVBLANKS                                                  
         LR    R15,R0                                                           
         DEX   R15,'MVC @R6(0),@R1'                                             
         L     R15,=A(SYMBOLS)     Start of symbol table                        
         USING SYMBOL,R15                                                       
         UNTIL SYMFEND,BEGIN                                                    
         IF    (SYMNAME,EQ,@R6),EXIT  found it                                  
         LA    R15,SYMNEXT                                                      
         END                                                                    
         IF    SYMFEND,'CLEAR R15'  no match                                    
FSYMEXIT XEXIT R2,R8,LTR                                                        
         DROP  SYMBOL,BR                                                        
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FINDLOC -- Routine to find the closest symbol table offsets                  
*    for a given address.                                                       
*                                                                               
*    On entry:                                                                  
*      R1 - points to a parameter area with LOCADDR filled in                   
*           (see LOC dsect).                                                    
*                                                                               
FINDLOC  XENTER R2,R8,,LOCAL                                                    
         LR    R6,R1               Copy param reg                               
         USING LOC,R6                                                           
         MVC   LOCCSECT,CVBLANKS   Init fields                                  
         MVC   LOCSYM,CVBLANKS                                                  
         CLEAR R0,LOCSYOFS,LOCCSOFS                                             
         LT    R5,=A(SYMBOLS)      Addr of symbol table                         
         BZ    FINDEXIT            Br if no table                               
*  The symbol table has been sorted by symbol addr (see FAILINIT).              
         USING SYMBOL,R5                                                        
         L     R4,LOCADDR          Get comparison addr                          
         CLRHI R4                  Drop high byte                               
*                                                                               
         CLEAR R2,R3               Old symbol ptr, old csect ptr                
         WHILE (^SYMFEND,AND,(R4,GE,SYMADDR)),BEGIN                             
         IF    SYMFCSCT,'LR R3,R5'                                              
         ELSE  'LR R2,R5'                                                       
         LA    R5,SYMNEXT                                                       
         END                                                                    
         IF    ('LTR R5,R2',NZ),BEGIN                                           
         IF    ((R3,Z),OR,(R2,LE,R3)),BEGIN  only give symbol if it's           
*                                  closer than the csect                        
         LR    R15,R4                                                           
         SL    R15,SYMLOC          Offset from symbol                           
         CLRHI R15                 Drop high byte                               
         IF    (R15,LE,SYMLEN),BEGIN                                            
         STH   R15,LOCSYOFS                                                     
         MVC   LOCSYM,SYMNAME                                                   
         END                                                                    
         END                                                                    
         IF    ('LTR R5,R3',NZ),BEGIN                                           
         SL    R4,SYMLOC           Offset from CSECT                            
         LA    R4,@R4                                                           
         IF    (R4,LE,SYMLEN),BEGIN                                             
         STH   R4,LOCCSOFS                                                      
         MVC   LOCCSECT,SYMNAME                                                 
         END                                                                    
         END                                                                    
         END                                                                    
FINDEXIT XEXIT                                                                  
         DROP  SYMBOL,LOC,BR                                                    
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PRTSEG -- SEG routine to write line to SYSPRINT.                             
*                                                                               
*    On entry:                                                                  
*                                                                               
*      R15 - SEGCB ptr                                                          
*                                                                               
PRTSEG   XENTER R2,R8,,LOCAL                                                    
         LR    R6,R15                                                           
         USING SEGCB,R6                                                         
*                                                                               
         IF    (SEGCBCR,OR,SEGCBWR,OR,SEGCBOVF),BEGIN  segwr...                 
         CEIL  R0,132              Not too long                                 
         LR    R5,R1                                                            
         LR    R4,R0                                                            
*                                                                               
         L     R3,=A(SYSPRINT)     SYSPRINT DCB                                 
         IF    @R3+(DCBOFLGS-DCB).DCBOFOPN,BEGIN  it's open...                  
         LR    R2,R4                                                            
         LA    R2,4+1+@R2          l'rdw + cc char + text                       
         STH   R2,@R3+(DCBLRECL-DCB)                                            
         VCALL AMODE24             ********                                     
         PUT   (R3)                Get buffer space                             
         VCALL AMODE31             ********                                     
         IF    ^@R3+(DCBOFLGS-DCB).DCBOFOPN,EXIT  DCB abend, scram              
         STH   R2,@R1              Rdw len                                      
         CLEAR (@R1+2,2)           Rdw flags                                    
         MVI   @R1+4,C' '          Cc char                                      
         IF    (PRTCC,NZ),'MVC @R1+4(1),PRTCC'                                  
         IF    (R4,POS),BEGIN                                                   
         LR    R15,R4                                                           
         MOVE  R15,@R1+5,@R5                                                    
         EX    R15,'TR @R1+5(0),SEGTRTBL'                                       
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR PRTCC               Reset                                        
         LCR   R0,R4               Amnt we reduced bfr--for segcbovf            
         IF    SEGCBCR,'CLEAR R0,SEGCBMRKF,SEGCBLENF'  no cr char               
         END                                                                    
*                                                                               
         IF    SEGCBSPP,'CLEAR R0'  always set good return code                 
         XEXIT                                                                  
         DROP  SEGCB,BR                                                         
*                                                                               
PRTCC    DC    C' '                Next CC char to use                          
*-                                                                              
*-       Translate table to convert funny chars to dots.                        
*-                                                                              
SEGTRTBL DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'                              
         DC    X'504B4B4B4B4B4B4B4B4B5A5B5C5D5E4B'                              
         DC    X'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B7A7B7C7D7E7F'                              
         DC    X'4B8182838485868788894B4B4B4B4B4B'                              
         DC    X'4B9192939495969798994B4B4B4B4B4B'                              
         DC    X'4B4BA2A3A4A5A6A7A8A94B4B4B4B4B4B'                              
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'                              
         DC    X'4BC1C2C3C4C5C6C7C8C94B4B4B4B4B4B'                              
         DC    X'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B'                              
         DC    X'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B'                              
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'                              
         EJECT                                                                  
*box                                                                            
*                                                                               
*  ALLOSYSP -- Allocate a SYSPRINT ddcard.                                      
*                                                                               
ALLOSYSP XENTER R2,R8,,LOCAL                                                    
         LA    R1,BALLOC                                                        
         DYNALLOC ,                Allocate SYSPRINT                            
         XEXIT                                                                  
         DROP  BR                                                               
         SPACE 2                                                                
*box                                                                            
*                                                                               
*  FREESYSP -- De-allocate SYSPRINT ddcard (so it can be fetched                
*    or printed).                                                               
*                                                                               
FREESYSP XENTER R2,R8,,LOCAL                                                    
         LA    R1,BDEALLOC                                                      
         DYNALLOC ,                De-allocate SYSPRINT                         
         XEXIT                                                                  
         DROP  BR                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*  Dynamic allocation/de-allocation parameter list...                           
BALLOC   DS    0F                                                               
         DC    X'80',AL3(BALRB)    Alloc request block ptr                      
BALRB    DC    AL1(20)                                                          
BALVERB  DC    AL1(S99VRBAL)       Allocation                                   
         DC    AL1(S99NOMNT)                                                    
         DC    AL1(0)                                                           
         DS    0F                                                               
BALERROR DC    H'0'                                                             
BALINFO  DC    H'0'                                                             
         DC    A(BALTXTP)                                                       
         DC    A(0)                                                             
         DC    A(0)                                                             
BALTXTP  DC    A(BDLTXTDD)                                                      
         DC    A(BALTXTF)                                                       
         DC    X'80',AL3(BALTXTS)                                               
         AIF   ('&DMPCLAS' EQ '$').DMPCLSA                                      
BALTXTS  DC    AL2(DALSYSOU,1,1),C'&DMPCLAS'  Dump SYSOUT class                 
         AGO   .DMPCLSB                                                         
.DMPCLSA ANOP                                                                   
BALTXTS  DC    AL2(DALSYSOU,0)     SYSOUT=$                                     
.DMPCLSB ANOP                                                                   
BALTXTF  DC    AL2(DALSFMNO,1,4),C'&DMPFORM'  Dump forms                        
*                                                                               
BDEALLOC DS    0F                                                               
         DC    X'80',AL3(BDLRB)    De-alloc request block ptr                   
BDLRB    DC    AL1(20)                                                          
         DC    AL1(S99VRBUN)       SYSPRINT de-allocation                       
         DC    AL1(S99NOMNT)                                                    
         DC    AL1(0)                                                           
         DS    0F                                                               
BDLERROR DC    H'0'                                                             
BDLINFO  DC    H'0'                                                             
         DC    A(BDLTXTP)                                                       
         DC    A(0)                                                             
         DC    A(0)                                                             
BDLTXTP  DC    A(BDLTXTUN)                                                      
         DC    X'80',AL3(BDLTXTDD)                                              
BDLTXTUN DC    AL2(DUNUNALC,0)                                                  
BDLTXTDD DC    AL2(DALDDNAM,1,8),CL8'SYSPRINT'                                  
*                                                                               
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PL,                      *        
               RECFM=VBA,LRECL=137,BLKSIZE=6233,EXLST=PRTEXLST                  
*                                                                               
PRTEXLST DC    0A(0),X'91',AL3(PRTABEND)  DCB abend exit                        
*                                                                               
PRTABEND WITH  (*,R15),BEGIN                                                    
         MVI   @R1+3,4             Tell os to ignore the abend                  
         BR    R14                 Return                                       
         END                                                                    
         EJECT                                                                  
*-                                                                              
*-       WYLBUR SYMBOL TABLE (for debugging)                                    
*-                                                                              
*-       Symbol entry order isn't important any more because the                
*-       table is now sorted (by addr) in FAILINIT.                             
*-                                                                              
*-       If symbols are added for loaded modules, a corresponding               
*-       entry should be made in syminit routine                                
*-                                                                              
         ENTRY   SYMBOLS                                                        
SYMBOLS  SYMBOLS (CV,,CVSIZE),CSECT=NO                                          
         SYMBOLS (RUNRSG,,L'RSCGROUP),(SETRSG,,L'RSCGROUP),CSECT=NO             
         SYMBOLS (PAGRSG,,L'RSCGROUP),CSECT=NO                                  
         SYMBOLS (IOWRSG,,L'RSCGROUP),(KWRRSG,,L'RSCGROUP),CSECT=NO             
         SYMBOLS (SUBRSG,,L'RSCGROUP),(HCMRSG,,L'RSCGROUP),CSECT=NO             
         SYMBOLS (WYLORV,ORV),(WYLCR,CR),(WYLKWWR,KWWR)                         
         SYMBOLS (WYLGLOB,GLOB),(WYLDISP,DISP),(WYLSTAT,STAT)                   
         SYMBOLS (WYLQUERY,QUERY)                                               
         SYMBOLS (WYLSIGN,SIGN)                                                 
         SYMBOLS (WYLDISK,DISK),(WYLACT,ACT)                                    
         SYMBOLS (WYLUTIL,UTIL),(WYLJES,JES)                                    
         SYMBOLS (WYLRJE,RJE),(WYLOPT,OPT),(WYLDOPT,DOPT)                       
         SYMBOLS (WYLEXEC,EXEC),(WYLEVAL,EVAL),(WYLVARS,VARS)                   
         SYMBOLS (WYLFLOW,FLOW),(WYLRECS,RECS)                                  
         SYMBOLS (WYLSCAN,SCAN),(WYLOSCN,OSCN),(WYLEDIT,EDIT)                   
         SYMBOLS (WYLACCT,ACCT),(WYLACMD,ACMD)                                  
         SYMBOLS (WYLSPELL,SPELL)                                               
         SYMBOLS (WYLLINE,LINE),(WYLMODE,MODE)                                  
         SYMBOLS (WYLPAGE,PAGE),(WYLVIEW,VIEW)                                  
         SYMBOLS (WYLPROT,PROT),(WYLTAPE,TAPE)                                  
         SYMBOLS (WYLTEST,TEST),(WYLFAIL,FAIL)                                  
         SYMBOLS (WYLCHAZ,CHAZ)                                                 
         SYMBOLS (WYLITEST,ITEST),(WYLCRYPT,CRYPT)                              
         SYMBOLS (WYLDBUG,DBUG),(WYLWBUG,WBUG)                                  
         SYMBOLS (WYLFUNC,FUNC),(WYLSYSV,SYSV),(WYLPROC,PROC)                   
         SYMBOLS (WYLPATH,PATH)                                                 
         SYMBOLS (WYLWGS,WGS),(WYLUFS,UFS)                                      
         SYMBOLS (WYLNFILE,NFILE)                                               
         SYMBOLS (WYLCOMM,COMM),(WYLXCALL,XCALL)                                
         SYMBOLS (WYLNET,NET)                                                   
         SYMBOLS (WYLNPAT,NPAT)                                                 
         SYMBOLS (WYLHELP,HELP)                                                 
         SYMBOLS (WYLFILE,FILE),(WYLDIR,DIR)                                    
         SYMBOLS (WYLVETS,VETS)                                                 
         SYMBOLS (WYLVPO,VPO)                                                   
         SYMBOLS (WYLKEYS,KEYS)                                                 
         SYMBOLS (WYLMICRO,MICRO)                                               
         SYMBOLS (WYLEXT,EXT),(WYLSAM,SAM)                                      
         SYMBOLS (WYLNEWS,NEWS),(WYLMAIL,MAIL)                                  
         SYMBOLS (WYLTEXT,TEXT),(WYLINIT,INIT)                                  
         SYMBOLS (WYLTERM,TERM),(WYLTINT,TINT),(WYLTOPS,TOPS)                   
         SYMBOLS (WYLDYNA,DYNA),(WYLLOCL,LOCAL)                                 
         SYMBOLS (0,WVOL),CSECT=NO                                              
         DC    F'-1'               End of symbol table                          
         END   .                                                                
