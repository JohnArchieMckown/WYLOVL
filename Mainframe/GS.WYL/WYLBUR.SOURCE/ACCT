ACCT     TITLE 'WYLBUR''S Accounting Routines'                                  
*******************************************************************             
*                                                                 *             
*     WYLBUR/370 - Release VI - Class I - Stanford Proprietary    *             
*                                                                 *             
*******************************************************************             
         HIBAL                                                                  
*                                                                               
WYLACCT  CSECT                                                                  
ACCT     IDENT 2025                11:49:19 01/25/02  (SLP)                     
         REGS  FSR,,,,,,,BR,(WAR,LSR),PAR,PBR,CPR,CVR,SPR,RAR                   
*                                                                               
         SYSDEFN ,                 Define installation params                   
*                                                                               
         GBLA  &WSMFSYS,&WSMFBIL           (See SYSDEFN)                        
         GBLA  &WSMFLOG,&WSMFKWR           (See SYSDEFN)                        
         GBLC  &INSTALN,                   (See SYSDEFN)                        
         GBLC  &STDFORM                    (See SYSDEFN)                        
         GBLB  &JOBAUTH,&SETLTIM,&KEYUPLO  (See SYSDEFN)                        
         GBLB  &SPACE,&BUDGET              (See SYSDEFN)                        
*                                                                               
         PUSH  DSECTS                                                           
         COPY  CONTROL             Copy CV/CP                                   
*                                                                               
         RECORD 'SIB'                                                           
*                                                                               
         RECORD 'PDB'                                                           
*                                                                               
         CVT   DSECT=YES                                                        
*                                                                               
USERCVT  RECORD 'USERCVT'                                                       
*                                                                               
         IEESMCA                                                                
*                                                                               
         COPY  UTYPDEFN                                                         
*                                                                               
         COPY  RTNCODES                                                         
*                                                                               
KWR      RECORD 'KWR'                                                           
*                                                                               
JCB      RECORD BEGIN                                                           
         COPY  JCB                                                              
         END                                                                    
*                                                                               
         COPY  UID                 Copy User-ID record layout                   
         EJECT ,                                                                
*                                                                               
SIN      RECORD BEGIN                                                           
         COPY  SIN                                                              
         END                                                                    
         POP   DSECTS                                                           
*                                                                               
         EJECT                                                                  
UCE      RECORD BEGIN                                                           
         COPY  UCE                                                              
         END                                                                    
*                                                                               
         EJECT                                                                  
SMFHDR   RECORD BEGIN                                                           
         COPY  SMFHDR                                                           
         END                                                                    
*                                                                               
         EJECT                                                                  
SMFACCT  RECORD BEGIN                                                           
         DS    XL(L'SMFHDR)        Standard header                              
         COPY  SMFACCT             Old subsystem charge record                  
         END                                                                    
*                                                                               
         EJECT                                                                  
SMFSCRC  RECORD BEGIN                                                           
         DS    XL(L'SMFHDR)        SMF Standard header                          
         COPY  SMFSCRC             SMF Session charging record                  
         END                                                                    
*                                                                               
         EJECT                                                                  
SMFCCRC  RECORD BEGIN                                                           
         COPY   SMFCCRC            SMF Component charging record                
         END                                                                    
*                                                                               
         EJECT                                                                  
SMFCTRC  RECORD BEGIN                                                           
         COPY   SMFCTRC            SMF Counter Record                           
         END                                                                    
*                                                                               
CTAREA   RECORD BEGIN                                                           
CTAREAL  DS    F                   AREA LENGTH (NOT INCLUDING HDR)              
CTARECSL DS    F                   LENGTH OF RECORDS                            
CTARECS  DS    0F                  START OF N COUNTER RECORDS                   
CTAHDRL  EQU   8                   HEADER LENGTH                                
CTALEN1  EQU   CTAHDRL+8*L'SMFCTRC  1ST LEN TO ALLOCATE FOR AREA                
CTALEN2  EQU   16*L'SMFCTRC        INCREMENTAL LENGTH                           
CTAMAX   EQU   4096                MAX COUNTER AREA TO GET                      
         END                                                                    
         EJECT                                                                  
SMFGLOG  RECORD BEGIN                                                           
         DS    XL(L'SMFHDR)        Standard header                              
*                                                                               
         DS    XL4                 Reserved                                     
*                                                                               
SMFLID   DS    CL8                 Smf log id  (record type)                    
SMFLTEXT DS    0C                                                               
         END                                                                    
*                                                                               
SMFKWR   RECORD BEGIN                                                           
         DS    XL(L'SMFHDR)        Standard header                              
*                                                                               
         DS    XL4                 Reserved                                     
*                                                                               
         COPY  SMFKWR                                                           
         END                                                                    
         EJECT                                                                  
COSTCB   RECORD BEGIN                                                           
COSTECLK DS    D                   Connect time in STCK units                   
COSTCON$ DS    F                   (Returns cost in .1 cents)                   
*                                                                               
COSTTIO  DS    F                   Terminal I/O's                               
COSTTIO$ DS    F                   (Returns cost in .1 cents)                   
*                                                                               
COSTWCPU DS    F                   WYLBUR cpu in tu's (1/38400 sec)             
COSTWCPU$ DS   F                   (Returns cost in .1 cents)                   
*                                                                               
COSTWIO  DS    F                   WYLBUR disk I/O's                            
COSTWIO$ DS    F                   (Returns cost in .1 cents)                   
*                                                                               
COSTVCPU DS    F                   ORVYL cpu in tu's (1/38400 sec)              
COSTVCPU$ DS   F                   (Returns cost in .1 cents)                   
*                                                                               
COSTVIO  DS    F                   ORVYL disk I/O's                             
COSTVIO$ DS    F                   (Returns cost in .1 cents)                   
         END                                                                    
         TITLE 'SHOW TIME Command'                                              
*box                                                                            
*                                                                               
*  SHOWTIME -- SHOW TIME command.                                               
*                                                                               
TMWA     RECORD BEGIN                                                           
TMFLAG   FLAG                                                                   
         FLAG  TMFALL              - ALL option                                 
         END                                                                    
*-                                                                              
SHOWTIME XPROC TMWA                                                             
         LA    R6,TMWA                                                          
         USING TMWA,R6                                                          
         CLEAR TMWA                                                             
*                                                                               
         SCAN TIMEPRT                                                           
         SCANCHK                                                                
*                                                                               
         IF    TMFALL,'LCALL TIMEALL'                                           
         ELSE  'LCALL TIMESUM'                                                  
         B     CVNEXT                                                           
         PEND  ,                                                                
*-                                                                              
*-       SHOW TIME options.                                                     
*-                                                                              
TIMEPRT  SCKW  ALL,TMALL                                                        
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
TMALL    PROC  ,                                                                
         SET   TMFALL                                                           
         PEND  ,                                                                
*                                                                               
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TIMESUM -- Routine to display current session CPU time                       
*    summary.                                                                   
*                                                                               
TIMESUM  PROC                                                                   
*-                                                                              
*-       Get costs.                                                             
*-                                                                              
         XPUSH ,,L'COSTCB,PTR=R6                                                
         WITH  (COSTCB,R6)                                                      
         LR    R1,R6                                                            
         ACALL GETCOST             Get costs                                    
*-                                                                              
*-       Display ORVYL charges.                                                 
*-                                                                              
         SETMSG CPORVYL                                                         
         IF    (CPORVYL,Z),'SETMSG "ORVYL"'                                     
         TSEG  (R1),(R0),T                                                      
         TSEG  ': '                                                             
*                                                                               
         L     R15,COSTVCPU        CPU time in tu's                             
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         D     R14,=F'384'         Convert to .01 sec                           
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(0,2),(R15)                                               
         TSEG  (R1),(R0)                                                        
         TSEG  ' CPU SECONDS, '                                                 
*                                                                               
         TNUM  L:COSTVIO                                                        
         TSEG  ' FILE I/O''S',,CR                                               
*-                                                                              
*-       Display WYLBUR charges.                                                
*-                                                                              
         TSEG  CVWYLSSN,,T         WYLBUR                                       
         TSEG  ': '                                                             
*                                                                               
         L     R15,COSTWCPU        CPU time in tu's                             
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         D     R14,=F'384'         Convert to .01 sec                           
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(0,2),(R15)                                               
         TSEG  (R1),(R0)                                                        
         TSEG  ' CPU SECONDS, '                                                 
*                                                                               
         TNUM  L:COSTWIO                                                        
         TSEG  ' DISK I/O''S'                                                   
         TCR                                                                    
*-                                                                              
*-       Display MILTEN charges.                                                
*-                                                                              
         TSEG  'ELAPSED TIME = '                                                
         LM    R0,R1,COSTECLK      Elapsed time                                 
         XPUSH ,,32,PTR=R15                                                     
         VCALL FMTTIME             Format "hh:mm:ss.hh"                         
         TSEG  (R1),8              Hh:mm:ss                                     
         XPOP  ,,32                                                             
*                                                                               
         TSEG  '  TERMINAL I/O''S = '                                           
         TNUM  L:COSTTIO                                                        
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  TIMEALL -- Routine to display current session CPU time                       
*    information in detail.                                                     
*                                                                               
TIMEALL  PROC                                                                   
         L     R5,CVCURJCB                                                      
         WITH  (JCB,R5)                                                         
*-                                                                              
*-       Update the current component charge information.                       
*-                                                                              
         LA    R15,JCB                                                          
         ACALL BILLUPD             Update current component info                
*                                                                               
         LA    R15,JCB                                                          
         ACALL BILLUPD$            Update dollar costs too                      
*-                                                                              
*-       Display the component charges.                                         
*-                                                                              
         TSEG  'Session time for '                                              
         L     R2,JCBSINP                                                       
         WITH  (SIN,R2),BEGIN                                                   
         TSEG  SINSTAG,,T                                                       
         END                                                                    
         TSEG  ' ('                                                             
*                                                                               
         VCALL LOCALTOD                                                         
         XPUSH ,,64,PTR=R15                                                     
         VCALL FMTXDATE            (SHOW XDATE style)                           
         TSEG  (R1),(R0)                                                        
         XPOP  ,,64                                                             
*                                                                               
         TSEG  '):',,CR                                                         
         TCR                                                                    
*                                                                               
         LA    R4,JCBUCEQH-(UCELINK-UCE)  Dummy first link                      
         TSEG  'Components                Elapsed  '                            
         TSEG  'Term I/O  Wyl CPU  Wyl I/O  Orv CPU  Orv I/O',,CR               
*                                                                               
         WITH  (UCE,R4)                                                         
         WHILE ('LT R4,UCELINK',NZ),BEGIN                                       
         SETMSG CVBLANKS,1                                                      
         IF    (R4,EQ,JCBUCEP),'SETMSG ">"'                                     
         TSEG  (R1),(R0)                                                        
         TSEG  UCECOMP,,T                                                       
         TSEG  '.'                                                              
         TSEG  UCEBLK,,T                                                        
         IF    (UCEPROJ,NZ),'TSEG "."; TSEG UCEPROJ,,T'                         
         TCOL  27                                                               
*                                                                               
         XPUSH ,,32,PTR=R15                                                     
         LM    R0,R1,UCEECLK       Elapsed time                                 
         VCALL FMTTIME             Format "hh:mm:ss.hh"                         
         TSEG  (R1),8              Write "hh:mm:ss" only                        
         XPOP  ,,32                                                             
*                                                                               
         TNUM  L:UCETIO,9          Terminal I/Os                                
*                                                                               
         L     R15,UCEWCPU                                                      
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         Convert to .001 sec                          
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(9,3),(R15)                                               
         TSEG  (R1),(R0)           Wylbur CPU                                   
*                                                                               
         TNUM  L:UCEWIO,9          Wylbur I/Os                                  
*                                                                               
         L     R15,UCEVCPU                                                      
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         Convert to .001 sec                          
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(9,3),(R15)                                               
         TSEG  (R1),(R0)           Orvyl CPU                                    
*                                                                               
         TNUM  L:UCEVIO,9          Orvyl I/Os                                   
*                                                                               
         TCR                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         TITLE 'Accounting Routines'                                            
*box                                                                            
*                                                                               
*  SHOWSCOS -- SHOW SCOST Command.                                              
*                                                                               
SCOSTWA  RECORD BEGIN                                                           
SCOSTFLG FLAG                                                                   
         FLAG  SCOSTFSYS           - Display "SYS_" stuff                       
*                                                                               
SCOSTLIN DS    F                   Line number to display                       
         END                                                                    
*-                                                                              
SHOWSCOS XPROC SCOSTWA                                                          
         LA    R6,SCOSTWA                                                       
         USING SCOSTWA,R6                                                       
         CLEAR SCOSTWA                                                          
*                                                                               
         SCAN  SCOSTPRT                                                         
         SCANCHK                                                                
*                                                                               
         L     R5,CVCURJCB                                                      
         IF    ('LT R15,SCOSTLIN',NZ),BEGIN  Another line...                    
         LR    R5,R15                                                           
         MH    R5,=AL2(L'JCB)                                                   
         AL    R5,CVFJCB           Other user's JCB ptr                         
         IF    (R5,LGE,CVLJCB),BEGIN                                            
         TSEG  'Line '                                                          
         TNUM  L:SCOSTLIN                                                       
         ERROR ' is out of bounds.'                                             
         END                                                                    
         END                                                                    
*                                                                               
         WITH  (JCB,R5),BEGIN                                                   
         IF    JCBWFSO,BEGIN       Not logged on...                             
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         ERROR ' is not logged on.'                                             
         END                                                                    
*                                                                               
         CLEAR R0                                                               
         IF    SCOSTFSYS,'LA R0,1'                                              
         LA    R15,JCB                                                          
         LCALL DISPSC              Display sessions costs                       
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
         PEND  ,                                                                
*-                                                                              
*-       SHOW SCOST options.                                                    
*-                                                                              
SCOSTPRT SCKW  ,SSCLIN,I                                                        
         SCKW  SYSTEM,SSCSYS,A                                                  
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
SSCLIN   PROC  ,                                                                
         IF    ^CPSFSPR,'VCALL NOTVALID'   Priv'd option                        
         ST    R0,SCOSTLIN                                                      
         PEND  ,                                                                
*                                                                               
SSCSYS   PROC  ,                                                                
         SET   SCOSTFSYS                                                        
         PEND  ,                                                                
*                                                                               
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SHOWSCS -- SHOW SCOSTS Command.                                              
*                                                                               
SHOWSCS  XPROC ,                                                                
         VCALL COLLOPTS                                                         
*                                                                               
         L     R5,CVFJCB                                                        
         LOOP  BEGIN                                                            
         WITH  (JCB,R5)                                                         
         IF    (JCBACCT,NZ),BEGIN  Logged on...                                 
         CLEAR R0                  Normal options                               
         LR    R15,R5                                                           
         ACALL DISPSC              Display costs                                
         TCR                                                                    
         BNZ   CVABORT                                                          
         END                                                                    
         LA    R5,JCBNEXT                                                       
         UNTIL (R5,GE,CVLJCB)                                                   
         END                                                                    
         B     CVNEXT                                                           
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DISPSC -- Local routine to display sessions component costs for              
*    the user specified.                                                        
*                                                                               
*    R0  - option:  0=normal, 1=include SYS_ components                         
*    R15 - JCB ptr for user whose costs are to be displayed                     
*                                                                               
DSCWA    RECORD BEGIN                                                           
DSCFLAG  FLAG                                                                   
         FLAG  DSCFSYS             - Include SYS_ components                    
         END                                                                    
*-                                                                              
DISPSC   PROC  DSCWA                                                            
         CLEAR DSCWA                                                            
         IF    (R0,NZ),'SET DSCFSYS'                                            
*                                                                               
         LR    R5,R15                                                           
         WITH  (JCB,R5)                                                         
*-                                                                              
*-       Update the current component charge information.                       
*-                                                                              
         LA    R15,JCB                                                          
         ACALL BILLUPD             Update current component info                
*                                                                               
         LA    R15,JCB                                                          
         ACALL BILLUPD$            Update dollar costs too                      
*-                                                                              
*-       Display the component charges.                                         
*-                                                                              
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         TSEG  ' '                                                              
         TSEG  JCBGRP                                                           
         TSEG  '.'                                                              
         TSEG  JCBUSER                                                          
         TSEG  ' (session tag is '                                              
         L     R2,JCBSINP                                                       
         WITH  (SIN,R2),BEGIN                                                   
         TSEG  SINSTAG,,T                                                       
         END                                                                    
         TSEG  '):',,CR                                                         
*                                                                               
         LA    R4,JCBUCEQH-(UCELINK-UCE)  Dummy first link                      
         TSEG  'Timeblock Component       Elapsed  '                            
         TSEG  'Term I/O  Wyl CPU  Wyl I/O  Orv CPU  Orv I/O',,CR               
*                                                                               
         WITH  (UCE,R4)                                                         
         WHILE ('LT R4,UCELINK',NZ),BEGIN                                       
         IF    ((UCECOMP,NE,'SYS_'),OR,DSCFSYS,                        *        
               OR,(R4,EQ,JCBUCEP)),BEGIN                                        
         SETMSG CVBLANKS,1                                                      
         IF    (R4,EQ,JCBUCEP),'SETMSG ">"'                                     
         TSEG  (R1),(R0)                                                        
         TSEG  UCEBLK                                                           
         TSEG  ' '                                                              
         TSEG  UCECOMP,,T                                                       
         IF    (UCEPROJ,NZ),'TSEG "."; TSEG UCEPROJ,,T'                         
         TCOL  27                                                               
*                                                                               
         XPUSH ,,32,PTR=R15                                                     
         LM    R0,R1,UCEECLK       Elapsed time                                 
         VCALL FMTTIME             Format "hh:mm:ss.hh"                         
         TSEG  (R1),8              Write "hh:mm:ss" only                        
         XPOP  ,,32                                                             
*                                                                               
         TNUM  L:UCETIO,9          Terminal I/Os                                
*                                                                               
         L     R15,UCEWCPU                                                      
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         Convert to .001 sec                          
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(9,3),(R15)                                               
         TSEG  (R1),(R0)           Wylbur CPU                                   
*                                                                               
         TNUM  L:UCEWIO,9          Wylbur I/Os                                  
*                                                                               
         L     R15,UCEVCPU                                                      
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         Convert to .001 sec                          
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(9,3),(R15)                                               
         TSEG  (R1),(R0)           Orvyl CPU                                    
*                                                                               
         TNUM  L:UCEVIO,9          Orvyl I/Os                                   
*                                                                               
         TCR                                                                    
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*  SHOW WCOUNT name|ALL [LINE nnn]                                              
*                                                                               
SWCWA    RECORD BEGIN                                                           
SWCJCB   DS    F                   JCB POINTER                                  
SWCNAME  DS    XL(L'CTRCNAME)      NAME OF POINTER                              
         END                                                                    
*-                                                                              
SHOWWCTR XPROC SWCWA                                                            
         LA    R6,SWCWA                                                         
         USING SWCWA,R6                                                         
         USING SMFCTRC,R2                                                       
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
*                                                                               
         CLEAR SWCWA                                                            
         MVC   SWCJCB,CVCURJCB                                                  
*                                                                               
         COMMENT                   SCAN, SAVE COUNTER NAME                      
         SCAN                                                                   
         SCANCHK                                                                
         IF    (R0,Z),BEGIN                                                     
         ERROR 'Missing counter name.'                                          
         END                                                                    
         LA    R2,SWCNAME                                                       
         LA    R3,L'CTRCNAME                                                    
         LR    R4,R1                                                            
         LR    R5,R0                                                            
         O     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
         IF    (SWCNAME,EQ,'LINE '),BEGIN                                       
         ERROR 'LINE: invalid counter name.'                                    
         END                                                                    
*                                                                               
         COMMENT                   SCAN REST OF COMMAND                         
         SCAN  SWCPRT                                                           
         SCANCHK                                                                
*                                                                               
         COMMENT                   LINE <NNN>, PRIVLVGD OPTION                  
         L     R5,SWCJCB                                                        
         IF    (SWCJCB,NE,CVCURJCB),BEGIN                                       
         IF    ^CPSFSPR,BEGIN                                                   
         ERROR 'LINE: invalid option.'                                          
         END                                                                    
         IF    JCBWFSO,BEGIN                                                    
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         ERROR ' is not logged on.'                                             
         END                                                                    
         END                                                                    
*-                                                                              
*-       Display all counters if requested.                                     
*-                                                                              
         IF    (SWCNAME,EQ,'ALL '),BEGIN                                        
         TSEG  'Counter             Value   Value$',,CR                         
         L     R5,SWCJCB                                                        
         L     R4,JCBCTP                                                        
         IF    (R4,Z),BEGIN        SKIP IF NO COUNTERS                          
         B     CVNEXT                                                           
         END                                                                    
         LA    R2,CTARECS          R2,R3 - START, END OF COUNTERS               
         L     R3,CTARECSL                                                      
         AR    R3,R2                                                            
         WHILE (R2,LT,R3),BEGIN    LOOP THRU ALL COUNTERS                       
         TSEG  CTRCNAME                                                         
         TSEG  ' '                                                              
         L     R1,CTRCVAL                                                       
         TNUM  (R1),8                                                           
         L     R1,CTRCVAL$                                                      
         IF    (R1,NZ),BEGIN                                                    
         TSEG  ' '                                                              
         L     R1,CTRCVAL$                                                      
         TNUM  (R1),8                                                           
         END                                                                    
         TCR                                                                    
         LA    R2,L'SMFCTRC(R2)                                                 
         END                                                                    
         END                                                                    
*-                                                                              
*-       Display a specific counter.                                            
*-                                                                              
         ELSE  BEGIN               WRITE SPECIFIC COUNTER...                    
         L     R5,SWCJCB                                                        
         LA    R2,SWCNAME                                                       
         ACALL WCTRFIND                                                         
         IF    (R15,NZ),BEGIN                                                   
         TSEG  'Counter '                                                       
         TSEG  SWCNAME,,TB                                                      
         ERROR 'does not exist.'                                                
         END                                                                    
         LR    R2,R1                                                            
         TSEG  CTRCNAME                                                         
         TSEG  ' '                                                              
         L     R1,CTRCVAL                                                       
         TNUM  (R1),8                                                           
         L     R1,CTRCVAL$                                                      
         IF    (R1,NZ),BEGIN                                                    
         TSEG  ' '                                                              
         L     R1,CTRCVAL$                                                      
         TNUM  (R1),8                                                           
         END                                                                    
         TCR                                                                    
         LA    R2,L'SMFCTRC(R2)                                                 
         END                                                                    
*                                                                               
         B     CVNEXT              EXIT, THIS IS A COMMAND                      
         PEND  ,                                                                
*-                                                                              
*-       END OF SHOW WCOUNT COMMAND.                                            
*-                                                                              
         DROP  R2                                                               
         DROP  R4                                                               
         DROP  R5                                                               
         SPACE 2                                                                
*-                                                                              
*-       SHOW WCOUNT SCAN OPTIONS                                               
*-                                                                              
SWCPRT   SCKW  LINE,SWCPLINE,(P,PI,A),5000                                      
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
SWCPLINE PROC ,                                                                 
         LR    R1,R0                                                            
         LA    R0,L'JCB                                                         
         MR    R0,R0                                                            
         A     R1,CVFJCB                                                        
         ST    R1,SWCJCB                                                        
         IF    (R1,GE,CVLJCB),'VCALL NOTVALID'                                  
         PEND  ,                                                                
*                                                                               
         DROP  R6                                                               
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*  SET WCOUNT name [VAL=int] [VAL$=int] [LINE nnn]                              
*                                                                               
STCWA    RECORD BEGIN                                                           
STCJCB   DS    F                   JCB POINTER                                  
STCVAL   DS    F                   VALUE OF COUNTER                             
STCVAL$  DS    F                   VALUE$ OF COUNTER                            
STCNAME  DS    XL(L'CTRCNAME)      NAME OF COUNTER                              
         END                                                                    
*-                                                                              
SETWCTR  XPROC STCWA                                                            
         LA    R6,STCWA                                                         
         USING STCWA,R6                                                         
         USING SMFCTRC,R2                                                       
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
*                                                                               
         CLEAR STCWA                                                            
         MVC   STCJCB,CVCURJCB                                                  
*                                                                               
         COMMENT                   SET IS PRIVLEGED COMMAND (?)                 
         IF    ^CPSFSPR,BEGIN                                                   
         B     CVNEXT                                                           
         END                                                                    
*                                                                               
         COMMENT                   SCAN, SAVE COUNTER NAME                      
         SCAN ,                                                                 
         SCANCHK                                                                
         IF    (R0,Z),BEGIN                                                     
         ERROR 'Missing counter name'                                           
         END                                                                    
         LA    R2,STCNAME                                                       
         LA    R3,L'CTRCNAME                                                    
         LR    R4,R1                                                            
         LR    R5,R0                                                            
         O     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   SCAN REST OF COMMAND                         
         SCAN  STCPRT                                                           
         SCANCHK                                                                
*                                                                               
         COMMENT                   LINE <NNN>, PRIVLVGD OPTION                  
         L     R5,STCJCB                                                        
         IF    (STCJCB,NE,CVCURJCB),BEGIN                                       
         IF    ^CPSFSPR,BEGIN                                                   
         ERROR 'LINE: invalid option.'                                          
         END                                                                    
         IF    JCBWFSO,BEGIN                                                    
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         ERROR ' is not logged on.'                                             
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   SET COUNTER                                  
         L     R0,STCVAL                                                        
         L     R1,STCVAL$                                                       
         LA    R2,STCNAME                                                       
         ACALL WCTRSET             SET COUNTER                                  
         IF    NZ,BEGIN                                                         
         ERROR 'Unable to allocate counter.  Counter space full.'               
         END                                                                    
*                                                                               
         B     CVNEXT              EXIT, THIS IS A COMMAND                      
         PEND  ,                                                                
*-                                                                              
*-       END OF SET WCOUNT COMMAND.                                             
*-                                                                              
         DROP  R2                                                               
         DROP  R4                                                               
         DROP  R5                                                               
         SPACE 2                                                                
*-                                                                              
*-       SET WCOUNT SCAN OPTIONS.                                               
*-                                                                              
STCPRT   SCKW  LINE,STCPLINE,(P,PI,A),5000                                      
         SCKW  VALUE,STCPVAL,(P,PI)                                             
         SCKW  VAL,STCPVAL,(P,PI)                                               
         SCKW  VALUE$,STCPVAL$,(P,PI)                                           
         SCKW  VAL$,STCPVAL$,(P,PI)                                             
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
STCPLINE PROC  ,                                                                
         LR    R1,R0                                                            
         LA    R0,L'JCB                                                         
         MR    R0,R0                                                            
         A     R1,CVFJCB                                                        
         ST    R1,STCJCB                                                        
         IF    (R1,GE,CVLJCB),'VCALL NOTVALID'                                  
         PEND  ,                                                                
*                                                                               
STCPVAL  PROC  ,                                                                
         ST    R0,STCVAL                                                        
         PEND  ,                                                                
*                                                                               
STCPVAL$ PROC  ,                                                                
         ST    R0,STCVAL$                                                       
         PEND  ,                                                                
*                                                                               
         DROP  R6                                                               
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*        WCOUNT name [LINE nnn]                                                 
*                                                                               
WCTWA    RECORD BEGIN                                                           
WCTJCB   DS    F                   JCB POINTER                                  
WCTNAME  DS    XL(L'CTRCNAME)      NAME OF COUNTER                              
         END                                                                    
*-                                                                              
WCOUNT   XPROC WCTWA                                                            
         LA    R6,WCTWA                                                         
         USING WCTWA,R6                                                         
         USING SMFCTRC,R2                                                       
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
*                                                                               
         CLEAR WCTWA                                                            
         MVC   WCTJCB,CVCURJCB                                                  
*                                                                               
         COMMENT                   SCAN, SAVE COUNTER NAME                      
         SCAN  ,                                                                
         SCANCHK                                                                
         IF    (R0,Z),BEGIN                                                     
         ERROR 'Missing counter name.'                                          
         END                                                                    
         LA    R2,WCTNAME                                                       
         LA    R3,L'CTRCNAME                                                    
         LR    R4,R1                                                            
         LR    R5,R0                                                            
         O     R5,=X'40000000'                                                  
         MVCL  R2,R4                                                            
*                                                                               
         COMMENT                   SCAN REST OF COMMAND                         
         SCAN  WCTPRT                                                           
         SCANCHK                                                                
*                                                                               
         COMMENT                   LINE <NNN>, PRIVLVGD OPTION                  
         L     R5,WCTJCB                                                        
         IF    (WCTJCB,NE,CVCURJCB),BEGIN                                       
         IF    ^CPSFSPR,BEGIN                                                   
         ERROR 'LINE: invalid option.'                                          
         END                                                                    
         IF    JCBWFSO,BEGIN                                                    
         TSEG  'Line '                                                          
         TNUM  LH:JCBSEQ                                                        
         ERROR ' is not logged on.'                                             
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   INCREMENT COUNTER                            
         LA    R2,WCTNAME                                                       
         ACALL WCTRINCR            INCREMENT COUNTER                            
         IF    NZ,BEGIN                                                         
         ERROR 'Unable to allocate counter.  Counter space full.'               
         END                                                                    
*                                                                               
         B     CVNEXT              EXIT, THIS IS A COMMAND                      
         PEND  ,                                                                
*-                                                                              
*-       END OF WCOUNT COMMAND.                                                 
*-                                                                              
         DROP  R2                                                               
         DROP  R4                                                               
         DROP  R5                                                               
         SPACE 2                                                                
*-                                                                              
*-       WCOUNT SCAN OPTIONS.                                                   
*-                                                                              
WCTPRT   SCKW  LINE,WCTPLINE,(P,PI,A),5000                                      
         SCKW  ,V(COLLPSH),PUSH                                                 
         SCKW  ,V(NOTVALID)                                                     
*                                                                               
WCTPLINE PROC  ,                                                                
         LR    R1,R0                                                            
         LA    R0,L'JCB                                                         
         MR    R0,R0                                                            
         A     R1,CVFJCB                                                        
         ST    R1,WCTJCB                                                        
         IF    (R1,GE,CVLJCB),'VCALL NOTVALID'                                  
         PEND  ,                                                                
*                                                                               
         DROP  R6                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETWCNT -- Routine to return the value of a counter.                         
*                                                                               
*    On entry:                                                                  
*      R1,R0 - counter name (loc,len)                                           
*                                                                               
*    On exit, R15 (and cc):                                                     
*      value of counter (zero if not found)                                     
*                                                                               
WCWA     RECORD BEGIN                                                           
WCWANAME DS    CL16                Counter name                                 
         END                                                                    
*-                                                                              
GETWCNT  XPROC WCWA                                                             
         MVC   WCWANAME,CVBLANKS   Pre-blank                                    
         CEIL  R0,L'WCWANAME                                                    
         LR    R15,R0                                                           
         MOVE  R15,WCWANAME,@R1    Copy counter name                            
         L     R2,CVUPPTBL                                                      
         TR    WCWANAME,@R2        Translate to upper case                      
*                                                                               
         LA    R2,WCWANAME         Counter name                                 
         L     R5,CVCURJCB         Current user                                 
         ACALL WCTRFIND            Get CTRC for this counter                    
         IF    NZ,'CLEAR R15'      No counter by this name                      
         ELSE  BEGIN                                                            
         WITH  (SMFCTRC,R1)                                                     
         L     R15,CTRCVAL         Get counter value                            
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*                                                                               
*  WCTRGET - GET WCOUNT VALUE.                                                  
*                                                                               
*  ON ENTRY:                                                                    
*        R2 - 16 CHAR LEFT JUSTIFIED COUNTER NAME                               
*        R5 - JCB POINTER                                                       
*                                                                               
*  ON EXIT:                                                                     
*        R0 - COUNTER VALUE                                                     
*        R1 - COUNTER COST INFO                                                 
*        R15 - ZERO, COUNTER EXISTS; NZ IF COUNTER DOES NOT EXIST.              
*                                                                               
*                                                                               
*                                                                               
WCTRGET  PROC                                                                   
         WITH  (SMFCTRC,R1)                                                     
*-                                                                              
*-       Get and find entry.                                                    
*-                                                                              
         ACALL WCTRFIND                                                         
         IF    (R15,Z),BEGIN                                                    
         L     R0,CTRCVAL                                                       
         L     R1,CTRCVAL$                                                      
         PRETURN (R0,R1)                                                        
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*  WCTRSET - SET WCOUNT                                                         
*                                                                               
*  ON ENTRY:                                                                    
*        R0 - VALUE                                                             
*        R1 - VALUE$                                                            
*        R2 - 16 CHAR LEFT JUSTIFIED COUNTER NAME                               
*        R5 - JCB ADDRESS                                                       
*                                                                               
*  ON EXIT:                                                                     
*        R15 - ZERO, IF SET;                                                    
*              NZ, IF NEW AND UNABLE TO ALLOCATE MEMORY FOR COUNTER             
*                                                                               
*  NOTE:  THIS ROUTINE WILL ONLY FAIL IF TOO MANY COUNTERS ARE                  
*    ALLOCATED (>200).  IF THE COUNTER DOES NOT EXIST, IT WILL                  
*    BE CREATED AND SET TO SPECIFIED VALUE.                                     
*                                                                               
WCTRSET  PROC                                                                   
*                                                                               
         USING SMFCTRC,R1                                                       
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
         LR    R3,R1               R3 - VALUE$                                  
*                                                                               
         COMMENT                   GET COUNTER RECORD POINTER                   
         ACALL WCTRFIND            RETURNS R1-COUNTER RECORD ADDR               
         IF    (R15,NZ),BEGIN      IF NO RECORD, MAKE ONE                       
         ACALL WCTRMAKE                                                         
         IF    (R15,NZ),BEGIN                                                   
         B     CTSTDONE                                                         
         END                                                                    
         ACALL WCTRFIND                                                         
         IF    (R15,NZ),BEGIN                                                   
         B     CTSTDONE                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   SET COUNTER VALUE                            
         ST    R0,CTRCVAL                                                       
         ST    R3,CTRCVAL$                                                      
*                                                                               
         COMMENT                   SHIFT COUNTER TO FRONT,,,                    
         COMMENT                                                                
         COMMENT ,                 (THIS MAY BE DUMB - UNPROVEN                 
         COMMENT                   OPTIMIZATION OFTEN FAILS)                    
         L     R4,JCBCTP                                                        
         LA    R3,CTARECS                                                       
         IF    (R1,GT,R3),BEGIN    IF NOT 1ST COUNTER                           
         LR    R2,R3               COPY LEADING COUNTERS TO STACK               
         LR    R3,R1                                                            
         SR    R3,R2                                                            
         LR    R14,R13                                                          
         LR    R15,R3                                                           
         MVCL  R14,R2                                                           
         LA    R14,CTARECS         COPY SET COUNTER TO FRONT                    
         LA    R15,L'SMFCTRC                                                    
         LR    R2,R1                                                            
         LR    R3,R15                                                           
         MVCL  R14,R2              COPY LEADING COUNTER FROM STACK              
         LA    R14,CTARECS                                                      
         LR    R15,R1                                                           
         SR    R15,R14                                                          
         LA    R14,L'SMFCTRC(R14)                                               
         LR    R2,R13                                                           
         LR    R3,R15                                                           
         MVCL  R14,R2                                                           
         END                                                                    
*                                                                               
         CLEAR R15                 COUNTER SET OK                               
*                                                                               
CTSTDONE LABEL ,                                                                
         PEND                                                                   
         DROP  R1                                                               
         DROP  R4                                                               
         DROP  R5                                                               
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*                                                                               
*  WCTRINCR - INCREMENT WCOUNT                                                  
*                                                                               
*  ON ENTRY:                                                                    
*        R2 - 16 CHAR LEFT JUSTIFIED COUNTER NAME                               
*        R5 - JCB ADDRESS                                                       
*                                                                               
*  ON EXIT:                                                                     
*        R15 - ZERO, IF INCREMENT                                               
*              NZ, IF NEW AND UNABLE TO ALLOCATE MEMORY FOR COUNTER             
*                                                                               
*  NOTE:  THIS ROUTINE WILL ONLY FAIL IF TOO MANY COUNTERS ARE                  
*    ALLOCATED (>200).  IF THE COUNTER DOES NOT EXIST, IT WILL                  
*    BE CREATED AND SET TO 1.                                                   
*                                                                               
*                                                                               
*                                                                               
WCTRINCR XPROC                                                                  
*                                                                               
         USING SMFCTRC,R1                                                       
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
*                                                                               
         COMMENT                   GET COUNTER RECORD POINTER                   
         ACALL WCTRFIND            RETURNS R1-COUNTER RECORD ADDR               
         IF    (R15,NZ),BEGIN      IF NO RECORD, MAKE ONE                       
         ACALL WCTRMAKE                                                         
         IF    (R15,NZ),BEGIN                                                   
         B     CTINDONE                                                         
         END                                                                    
         ACALL WCTRFIND                                                         
         IF    (R15,NZ),BEGIN                                                   
         B     CTINDONE                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   INCREMENT COUNTER VALUE                      
         L     R0,CTRCVAL                                                       
         A     R0,=F'1'                                                         
         ST    R0,CTRCVAL                                                       
*                                                                               
         COMMENT                   SHIFT COUNTER TO FRONT,,,                    
         COMMENT                                                                
         COMMENT ,                 (THIS MAY BE DUMB - UNPROVEN                 
         COMMENT                   OPTIMIZATION OFTEN FAILS)                    
         L     R4,JCBCTP                                                        
         LA    R3,CTARECS                                                       
         IF    (R1,GT,R3),BEGIN    IF NOT 1ST COUNTER                           
         LR    R2,R3               COPY LEADING COUNTERS TO STACK               
         LR    R3,R1                                                            
         SR    R3,R2                                                            
         LR    R14,R13                                                          
         LR    R15,R3                                                           
         MVCL  R14,R2                                                           
         LA    R14,CTARECS         COPY SET COUNTER TO FRONT                    
         LA    R15,L'SMFCTRC                                                    
         LR    R2,R1                                                            
         LR    R3,R15                                                           
         MVCL  R14,R2              COPY LEADING COUNTER FROM STACK              
         LA    R14,CTARECS                                                      
         LR    R15,R1                                                           
         SR    R15,R14                                                          
         LA    R14,L'SMFCTRC(R14)                                               
         LR    R2,R13                                                           
         LR    R3,R15                                                           
         MVCL  R14,R2                                                           
         END                                                                    
*                                                                               
         CLEAR R15                 COUNTER SET OK                               
*                                                                               
CTINDONE LABEL ,                                                                
         PEND                                                                   
         DROP  R1                                                               
         DROP  R4                                                               
         DROP  R5                                                               
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*                                                                               
*  FIND WCOUNT AREA                                                             
*                                                                               
*  ON ENTRY:                                                                    
*        R2 - 16 CHAR LEFT JUSTIFIED COUNTER NAME                               
*        R5 - JCB PTR                                                           
*                                                                               
*  ON EXIT:                                                                     
*        R1 - ADDRESS OF COUNTER RECORD, IF ANY                                 
*        R15 - ZERO IF FOUND, NZ IF NO RECORD                                   
*                                                                               
*                                                                               
*                                                                               
WCTRFIND PROC                                                                   
*                                                                               
         USING SMFCTRC,R1                                                       
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
*                                                                               
         COMMENT                   ASSUME NOT FOUND                             
         LA    R15,1                                                            
*                                                                               
         L     R4,JCBCTP                                                        
         IF    (R4,Z),BEGIN        IF NO COUNTER AREA, NO COUNTER               
         END                                                                    
*                                                                               
         ELSE  BEGIN ,             COUNTER AREA EXISTS                          
         LA    R1,CTARECS          R1 - START OF COUNTER RECORDS                
         LR    R3,R1                                                            
         A     R3,CTARECSL         R3 - END OF COUNTER RECORDS                  
         WHILE ((R1,LT,R3),AND,(CTRCNAME,NE,@R2)),BEGIN                         
         LA    R1,L'SMFCTRC(R1)                                                 
         END                                                                    
*                                                                               
         COMMENT                   IF FOUND RECORD,,,                           
         IF (R1,LT,R3),BEGIN                                                    
         CLEAR R15                                                              
         PRETURN R1                                                             
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R1                                                               
         DROP  R4                                                               
         DROP  R5                                                               
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*  WCOUNT MAKE (IE. CREATE)                                                     
*                                                                               
*  THIS ROUTINE WILL CREATE A COUNTER ENTRY.  THE COUNT FIELD                   
*  IS SET TO ZERO.  IF THE  COUNTER ALREADY EXISTS, IT IS SET                   
*  TO ZERO.                                                                     
*                                                                               
*  ON ENTRY:                                                                    
*        R2 - 16 CHAR LEFT JUSTIFIED COUNTER NAME                               
*        R5 - JCB PTR                                                           
*                                                                               
*  ON EXIT:                                                                     
*        R15 - ZERO, IF SUCCESSFUL, NZ OTHERWISE                                
*                                                                               
WCTRMAKE PROC                                                                   
*                                                                               
         USING SMFCTRC,R1                                                       
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
*                                                                               
         COMMENT                   SEE IF ONE ALREADY EXISTS                    
         ACALL WCTRFIND                                                         
*                                                                               
         COMMENT                   IF WE ALREADY HAVE ONE,                      
         IF    (R15,Z),BEGIN       JUST ZERO ENTRY                              
         CLEAR CTRCVAL                                                          
         CLEAR CTRCVAL$                                                         
         CLEAR R15                                                              
         B     CTMKDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   IF NO COUNTER AREA, GET ONE                  
         IF    (JCBCTP,EQ,0),BEGIN IF NO COUNTER AREA, GET ONE                  
         L     R4,JCBCTP                                                        
         LA    R0,CTALEN1                                                       
         LR    R3,R0                                                            
         VCALL GETCORE                                                          
         IF    (R0,LT,R3),BEGIN    IF NO MEMORY, ERROR                          
         VCALL FREECORE                                                         
         LA    R15,1                                                            
         B     CTMKDONE                                                         
         END                                                                    
         LR    R4,R1               GOT AREA, SET IT UP                          
         ST    R1,JCBCTP                                                        
         S     R0,=A(CTAHDRL)                                                   
         ST    R0,CTAREAL                                                       
         LA    R0,L'SMFCTRC                                                     
         ST    R0,CTARECSL                                                      
         LA    R1,CTARECS                                                       
         MVC   CTRCNAME,@R2        ADD ENTRY                                    
         CLEAR CTRCVAL                                                          
         CLEAR CTRCVAL$                                                         
         CLEAR R15                                                              
         B     CTMKDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   COUNTER AREA EXISTS,                         
         COMMENT                   BUT AREA IS FULL                             
         L     R4,JCBCTP                                                        
         L     R3,CTARECSL                                                      
         LA    R3,L'SMFCTRC(R3)                                                 
         IF    (R3,GT,CTAREAL),BEGIN  IF AREA NOT LARGE ENOUGH,                 
         LA    R0,CTALEN2             WE GET LARGER AREA                        
         A     R0,CTAREAL                                                       
         IF    (R0,GT,=A(CTAMAX)),BEGIN   ERROR IF TOO MANY COUNTERS            
         LA    R15,1                                                            
         B     CTMKDONE                                                         
         END                                                                    
         LR    R3,R0                                                            
         VCALL GETCORE                                                          
         IF    (R0,LT,R3),BEGIN    IF NO MEMORY, ERROR                          
         VCALL FREECORE                                                         
         LA    R15,1                                                            
         B     CTMKDONE                                                         
         END                                                                    
         ST    R1,JCBCTP           SET UP NEW AREA                              
         S     R0,=A(CTAHDRL)                                                   
         ST    R0,CTAREAL-CTAREA(R1)                                            
         L     R3,CTARECSL                                                      
         LA    R3,L'SMFCTRC(R3)                                                 
         ST    R3,CTARECSL-CTAREA(R1)                                           
         LR    R14,R1              COPY OLD AREA TO NEW                         
         LA    R14,L'SMFCTRC+CTAHDRL(R14)  LEAVE ROOM FOR NEW                   
         L     R15,CTARECSL             ENTRY AT START                          
         LA    R0,CTARECS                                                       
         LR    R1,R15                                                           
         MVCL  R14,R0             COPY OLD AREA TO NEW                          
         LA    R1,CTAREA                                                        
         VCALL FREECORE           FREE UP OLD AREA                              
         L     R4,JCBCTP          ADD ENTRY AT START                            
         LA    R1,CTARECS                                                       
         MVC   CTRCNAME,@R2                                                     
         CLEAR CTRCVAL                                                          
         CLEAR CTRCVAL$                                                         
         CLEAR R15                                                              
         B     CTMKDONE                                                         
         END                                                                    
*                                                                               
         COMMENT                   COUNTER AREA EXISTS, AND                     
         COMMENT                   AREA HAS ROOM FOR NEW COUNTER                
         LA    R1,CTARECS          ADD NEW COUNTER RECORD AT END                
         A     R1,CTARECSL                                                      
         MVC   CTRCNAME,@R2                                                     
         L     R3,CTARECSL                                                      
         LA    R3,L'SMFCTRC(R3)                                                 
         ST    R3,CTARECSL                                                      
         CLEAR CTRCVAL                                                          
         CLEAR CTRCVAL$                                                         
         CLEAR R15                                                              
         B     CTMKDONE                                                         
*                                                                               
CTMKDONE LABEL ,                                                                
         PEND                                                                   
         DROP  R1                                                               
         DROP  R4                                                               
         DROP  R5                                                               
         EJECT                                                                  
*BOX                                                                            
*                                                                               
*  WCTRCOPY - COPY ALL COUNTER RECORDS.                                         
*                                                                               
*  ON ENTRY:                                                                    
*        R0 - MAX LENGTH                                                        
*        R1 - DESTINATION ADDRESS                                               
*        R15 - JCB POINTER                                                      
*                                                                               
*  ON EXIT:                                                                     
*        R0 - LENGTH OF COUNTER RECORDS COPIED                                  
*        R15 - ZERO, SUCCESS; NZ, TOO MANY RECORDS, SOME NOT COPIED             
*                                                                               
WCTRCOPY PROC                                                                   
*                                                                               
         USING CTAREA,R4                                                        
         USING JCB,R5                                                           
         LR    R5,R15                                                           
*                                                                               
         COMMENT                   COPY RECORDS                                 
         L     R4,JCBCTP                                                        
*                                                                               
         COMMENT                   IF NO RECORDS,,,                             
         IF    (R4,Z),BEGIN                                                     
         CLEAR R0                                                               
         CLEAR R15                                                              
         PRETURN R0                                                             
         END                                                                    
*                                                                               
         COMMENT                   IF TOO MANY RECORDS,,,                       
         ELSEIF (R0,LT,CTARECSL),BEGIN                                          
         CLEAR R14                 MAKE R0 MULTILPLE OF REC LEN                 
         LR    R15,R0                                                           
         D     R14,=A(L'SMFCTRC)                                                
         MH    R15,=A(L'SMFCTRC)                                                
         LR    R0,R15                                                           
         LR    R2,R1               COPY RECS TO AREA                            
         LR    R3,R0                                                            
         LA    R14,CTARECS                                                      
         LR    R15,R0                                                           
         MVCL  R2,R14                                                           
         LA    R15,1                                                            
         PRETURN R0                                                             
         END                                                                    
*                                                                               
         COMMENT                   CAN COPY ALL RECORDS TO AREA                 
         ELSE  BEGIN                                                            
         L     R0,CTARECSL                                                      
         LR    R2,R1               COPY RECS TO AREA                            
         LR    R3,R0                                                            
         LA    R14,CTARECS                                                      
         LR    R15,R0                                                           
         MVCL  R2,R14                                                           
         CLEAR R15                                                              
         PRETURN R0                                                             
         END                                                                    
*                                                                               
         PEND                                                                   
         DROP  R4                                                               
         DROP  R5                                                               
         EJECT                                                                  
*box                                                                            
*                                                                               
*  WBILL -- WBILL Command.                                                      
*                                                                               
WBILLWA  RECORD BEGIN                                                           
WBILNAME DS    CL8                 BILL type                                    
WBILTAG  DS    CL(L'SINSTAG)       Saved session tag                            
         END                                                                    
*-                                                                              
WBILL    XPROC WBILLWA                                                          
         USING WBILLWA,WAR                                                      
         CLEAR WBILLWA                                                          
*                                                                               
         SCAN  ,                                                                
         SCANCHK                                                                
         IF    (R0,Z),CVABSENT                                                  
*                                                                               
         SCUPCASE WBILNAME         Save billing name                            
         IF    (WBILNAME,EQ,=CL8'LOGON'),'VCALL NOTVALID'                       
         IF    (WBILNAME,EQ,=CL8'LOGOFF'),'VCALL NOTVALID'                      
         IF    (WBILNAME,EQ,=CL8'CRASH'),'VCALL NOTVALID'                       
*                                                                               
         IF    ^CPSFSPR,BEGIN      Not priv'd...                                
         IF    (WBILNAME,EQ,'TEST'),EXIT  Allow "TESTxxxx"                      
         VCALL NOTVALID            Sorry pal                                    
         END                                                                    
*                                                                               
         L     R5,CVFJCB                                                        
         LOOP  BEGIN                                                            
         WITH  (JCB,R5)                                                         
         IF    ^JCBWFSO,BEGIN      User is logged on...                         
         IF    JCBFBILLED,WBILNEXT   Already billed, forget it                  
         IF    (JCBACCT,Z),WBILNEXT  Not really logged on                       
         IF    (JCBUCEP,Z),WBILNEXT                                             
*                                                                               
         LT    R3,JCBSINP          SIN ptr                                      
         IF    Z,WBILNEXT          Nothing, scram                               
         WITH  (SIN,R3),BEGIN                                                   
         IF    (SIN,NE,'SIN'),WBILNEXT  Not valid, scram                        
         IF    (SINLCLCK,Z),WBILNEXT    Not set up yet, scram                   
         MVC   WBILTAG,SINSTAG     Save session tag                             
         END                                                                    
*                                                                               
         LA    R15,JCB                                                          
         LA    R1,WBILNAME                                                      
         ACALL DOBILL              Write billing record                         
*                                                                               
         TSEG  WBILNAME,,T                                                      
         TSEG  ' billing record written for line '                              
         TNUM  LH:JCBSEQ                                                        
         TSEG  ' ('                                                             
         TSEG  JCBGRP                                                           
         TSEG  '.'                                                              
         TSEG  JCBUSER                                                          
         TSEG  ')'                                                              
         TSEG  ', session '                                                     
         TSEG  WBILTAG,,T                                                       
         TWRITE                                                                 
         END                                                                    
*                                                                               
WBILNEXT LA    R5,JCBNEXT                                                       
         UNTIL (R5,GE,CVLJCB)                                                   
         END                                                                    
*                                                                               
         B     CVNEXT                                                           
*                                                                               
         PEND  ,                                                                
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DISPLGF -- Routine to display logoff messages.                               
*                                                                               
DISPLGF  XPROC                                                                  
*-                                                                              
*-       Skip logoff statistics for printer sessions.                           
*-                                                                              
         IF    CPSSFPRT,DISPLXIT   No statistics, scram                         
*-                                                                              
*-       Logoff message with session statistics.                                
*-                                                                              
         IF    ^CPSFNST,BEGIN      Display cost statistics...                   
         LCALL DISPCOST                                                         
         B     DISPLXIT                                                         
         END                                                                    
*-                                                                              
*-       Logoff message without session statistics.                             
*-                                                                              
         XPUSH ,,L'COSTCB,PTR=R6                                                
         USING COSTCB,R6                                                        
         LR    R1,R6                                                            
         ACALL GETCOST             Get costs                                    
*-                                                                              
*-       Display elapsed time.                                                  
*-                                                                              
         TSEG  'You were logged on for '                                        
*                                                                               
         LM    R4,R5,COSTECLK      Elapsed time                                 
         SRDL  R4,12               .000001 of a sec                             
         D     R4,=A(1000000)      We want seconds                              
         IF    (R4,GE,1000000/2),'INCR R5'  Round                               
*                                                                               
         CLEAR R4                                                               
         D     R4,=A(60)           Minutes                                      
         LR    R3,R4               R3=seconds                                   
*                                                                               
         CLEAR R4                                                               
         D     R4,=A(60)           R4=min, R5=hours                             
*                                                                               
         IF    ((R5,NZ),OR,(R4,NZ)),BEGIN  Display hours and mins...            
         IF    (R5,NZ),BEGIN       Display hours...                             
         TNUM  (R5)                                                             
         SETMSG ' hours'                                                        
         IF    (R5,EQ,1),'DECR R0'                                              
         TSEG  (R1),(R0)                                                        
         IF    (R4,NZ),'TSEG " and "'                                           
         END                                                                    
*                                                                               
         IF    (R4,NZ),BEGIN       Display minutes...                           
         TNUM  (R4)                                                             
         SETMSG ' minutes'                                                      
         IF    (R4,EQ,1),'DECR R0'                                              
         TSEG  (R1),(R0)                                                        
         END                                                                    
         END                                                                    
*                                                                               
         ELSE  BEGIN               Just display seconds...                      
         TNUM  (R3)                                                             
         SETMSG ' seconds'                                                      
         IF    (R3,EQ,1),'DECR R0'                                              
         TSEG  (R1),(R0)                                                        
         END                                                                    
*                                                                               
         TSEG  '.  '                                                            
DISPLXIT PEND                                                                   
         DROP  COSTCB                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DISPCOST -- Routine to display current session costs.                        
*                                                                               
DISPCOST XPROC                                                                  
         XPUSH ,,L'COSTCB,PTR=R6                                                
         USING COSTCB,R6                                                        
         LR    R1,R6                                                            
         ACALL GETCOST             Get costs                                    
*-                                                                              
*-       SHOW COST INTERNAL format.                                             
*-                                                                              
         IF    CPFINT,BEGIN        Internal format...                           
         L     R15,COSTCON$                                                     
         AL    R15,COSTTIO$                                                     
         AL    R15,COSTWCPU$                                                    
         AL    R15,COSTWIO$                                                     
         AL    R15,COSTVCPU$                                                    
         AL    R15,COSTVIO$                                                     
         LCALL DISPDOLI            Total dollar cost                            
*                                                                               
         LM    R14,R15,COSTECLK    Elapsed time                                 
         SRDL  R14,12              .000001 of a sec                             
         D     R14,=A(1000000)     We want seconds                              
         IF    (R14,GE,1000000/2),'INCR R15'  Round                             
         TNUM  (R15),6             Elapsed seconds                              
         TSEG  CVBLANKS,1                                                       
*                                                                               
         L     R15,COSTCON$                                                     
         LCALL DISPDOLI            Elapsed cost                                 
*                                                                               
         L     R15,COSTWCPU                                                     
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         .001 of a CPU second                         
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(8,3),(R15)                                               
         TSEG  (R1),(R0),B         WYLBUR CPU seconds                           
*                                                                               
         L     R15,COSTWCPU$                                                    
         LCALL DISPDOLI            WYLBUR CPU cost                              
*                                                                               
         L     R15,COSTVCPU                                                     
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         .001 of a CPU second                         
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         BTR   CPDOUB,(8,3),(R15)                                               
         TSEG  (R1),(R0),B         ORVYL CPU seconds                            
*                                                                               
         L     R15,COSTVCPU$                                                    
         LCALL DISPDOLI            ORVYL CPU cost                               
*                                                                               
         TNUM  L:COSTWIO,6         WYLBUR disk I/O's                            
         TSEG  CVBLANKS,1                                                       
*                                                                               
         L     R15,COSTWIO$                                                     
         LCALL DISPDOLI            WYLBUR disk I/O cost                         
*                                                                               
         TNUM  COSTVIO,6           ORVYL disk I/O's                             
         TSEG  CVBLANKS,1                                                       
*                                                                               
         L     R15,COSTVIO$                                                     
         LCALL DISPDOLI            ORVYL disk I/O cost                          
*                                                                               
         TNUM  COSTTIO,6           Terminal I/O's                               
         TSEG  CVBLANKS,1                                                       
*                                                                               
         L     R15,COSTTIO$                                                     
         LCALL DISPDOLI            Terminal I/O cost                            
*                                                                               
         B     DISPCXIT                                                         
         END                                                                    
*-                                                                              
*-       Regular SHOW COST formatting.                                          
*-                                                                              
         L     R2,CPSEGLENF        (For column alignment later)                 
*                                                                               
         LM    R0,R1,COSTECLK      Elapsed time                                 
         XPUSH ,,32,PTR=R15                                                     
         VCALL FMTTIME             Format "hh:mm:ss.hh"                         
         TSEG  (R1),8              Hh:mm:ss                                     
         XPOP  ,,32                                                             
         TSEG  ' elapsed time'                                                  
         L     R15,COSTCON$                                                     
         LCALL DISPDOL             ($n.nn)                                      
*                                                                               
         LA    R0,@R2+35                                                        
         S     R0,CPSEGLENF                                                     
         IF    NP,'LA R0,2'                                                     
         TSEG  CVBLANKS,(R0)       Align to column 35                           
*                                                                               
         L     R15,COSTWIO         WYLBUR disk I/O's                            
         AL    R15,COSTVIO         plus ORVYL disk I/O's                        
         TNUM  (R15)                                                            
         TSEG  ' disk I/O''s'                                                   
         L     R15,COSTWIO$                                                     
         AL    R15,COSTVIO$        Disk I/O cost                                
         LCALL DISPDOL             ($n.nn)                                      
         TCR                                                                    
*                                                                               
         L     R2,CPSEGLENF                                                     
         L     R15,COSTWCPU        WYLBUR CPU time                              
         AL    R15,COSTVCPU        Plus ORVYL CPU time                          
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         D     R14,=F'384'         Convert to .01 sec                           
         IF    (R14,GE,384/2),'INCR R15'  round                                 
         BTR   CPDOUB,(0,2),(R15)                                               
         TSEG  (R1),(R0)                                                        
         TSEG  ' CPU seconds'                                                   
         L     R15,COSTWCPU$                                                    
         AL    R15,COSTVCPU$       CPU cost                                     
         LCALL DISPDOL             ($n.nn)                                      
*                                                                               
         LA    R0,@R2+35                                                        
         S     R0,CPSEGLENF                                                     
         IF    NP,'LA R0,2'                                                     
         TSEG  CVBLANKS,(R0)       Align to column 35                           
*                                                                               
         TNUM  L:COSTTIO           Terminal I/O's                               
         TSEG  ' terminal I/O''s'                                               
         L     R15,COSTTIO$                                                     
         LCALL DISPDOL             ($n.nn)                                      
         TCR                                                                    
*-                                                                              
*-      Don't give dollar amount if this is the RLG or SYSC machine.            
*-         (This is Stanford specific.)                                         
*-                                                                              
         IF    ^CVFRLG,BEGIN       Give dollar amount if not RLG...             
         IF    (R1,EQ,R1),EXIT     !! Never display $ amounts !!                
         IF    (CVMACHID,EQ,'SYSC '),EXIT  Don't give dollar amount             
         TCR                                                                    
         SETMSG 'Total '                                                        
         IF    (CPCMNM,EQ,'COS'),'SETMSG "Current "'                            
         TSEG  (R1),(R0)                                                        
         TSEG  'session charges: $'                                             
         L     R15,COSTCON$                                                     
         AL    R15,COSTTIO$                                                     
         AL    R15,COSTWCPU$                                                    
         AL    R15,COSTWIO$                                                     
         AL    R15,COSTVCPU$                                                    
         AL    R15,COSTVIO$                                                     
         CLEAR R14                                                              
         D     R14,=F'10'                                                       
         IF    (R14,GE,5),'INCR R15'  Round                                     
         BTR   CPDOUB,(0,2),(R15)                                               
         TSEG  (R1),(R0),B                                                      
         IF    CVFNOSMF,'TSEG "(Not billed)"'                                   
         END                                                                    
DISPCXIT TWRITE                                                                 
         PEND                                                                   
*                                                                               
         DROP  COSTCB                                                           
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DISPDOL -- Local routine to display an amount in dollars.                    
*                                                                               
*    On entry:                                                                  
*      R15 - amount, in .1 cents                                                
*                                                                               
DISPDOL  PROC                                                                   
         IF    CVFRLG,'CLEAR R15'  Don't show dollar amounts                    
         IF    (R1,EQ,R1),'CLEAR R15'  !! Never display $ amounts !!            
         IF    (CVMACHID,EQ,'SYSC '),'CLEAR R15'  No dollars either             
*                                                                               
         IF    ('LTR R2,R15',NZ),BEGIN  We have some charges...                 
*-                                                                              
*-       Write "$n.nn" amount.                                                  
*-                                                                              
         CLEAR R14                                                              
         D     R14,=F'10'                                                       
         IF    (R14,GE,5),'INCR R15'  Round                                     
         LR    R2,R15                                                           
*                                                                               
         TSEG  ' ($'                                                            
         BTR   CPDOUB,(0,2),(R2)                                                
         TSEG  (R1),(R0)                                                        
         TSEG  ') '                                                             
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
DISPDOLI PROC                                                                   
         XPUSH ,,8,PTR=R2                                                       
         BTD   @R2,7,(R15)                                                      
         OC    @R2(7),=C'0000000'                                               
         TSEG  '$'                                                              
         TSEG  @R2,4                                                            
         TSEG  '.'                                                              
         TSEG  @R2+4,3,B                                                        
         XPOP  ,,8                                                              
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         TITLE 'Accounting Routines'                                            
*box                                                                            
*                                                                               
*  GETCTOT -- Routine to get a specific charge field.                           
*    Used to retreive the values for the WYLBUR_CPU,                            
*    WYLBUR_IO, ORVYL_CPU and ORVYL_IO variables.                               
*                                                                               
*    On entry:                                                                  
*      @R15 - name of field to get                                              
*                                                                               
*    On exit:                                                                   
*      R15 - value                                                              
*                                                                               
GETCTOT  XPROC                                                                  
         L     R5,CVCURJCB                                                      
         WITH  (JCB,R5)                                                         
*-                                                                              
*-       WYLBUR_CPU (returned in .001 sec increments).                          
*-                                                                              
         IF    (@R15,EQ,'WYLBUR_CPU'),BEGIN                                     
         VCALL GETCPU              Get time since last dispatch                 
         LR    R15,R0              Time since last dispatch                     
         AL    R15,JCBWCPU         Add in accumulated total                     
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         .001 of a CPU second                         
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         B     CTOTEXIT                                                         
         END                                                                    
*-                                                                              
*-       WYLBUR_IO.                                                             
*-                                                                              
         IF    (@R15,EQ,'WYLBUR_IO'),BEGIN                                      
         L     R15,JCBWIO          WYLBUR disk I/O's                            
         B     CTOTEXIT                                                         
         END                                                                    
*-                                                                              
*-       ORVYL_CPU (returned in .001 sec increments).                           
*-                                                                              
         IF    (@R15,EQ,'ORVYL_CPU'),BEGIN                                      
         LT    R2,JCBSINP                                                       
         IF    Z,'CLEAR R15'       (Shouldn't happen)                           
         ELSE  BEGIN                                                            
         WITH  (SIN,R2)                                                         
         L     R15,SINVCPU         ORVYL CPU time                               
         AL    R15,SINVOCPU        Add in previous ORVYL CPU time               
         END                                                                    
*  (We now have the total ORVYL CPU time in R15.)                               
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         .001 of a CPU second                         
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         B     CTOTEXIT                                                         
         END                                                                    
*-                                                                              
*-       ORVYL_IO.                                                              
*-                                                                              
         IF    (@R15,EQ,'ORVYL_IO'),BEGIN                                       
         LT    R2,JCBSINP                                                       
         IF    Z,'CLEAR R15'       (Shouldn't happen)                           
         ELSE  BEGIN                                                            
         WITH  (SIN,R2)                                                         
         L3    R15,SINVDIO         ORVYL disk I/Os                              
         AL    R15,SINVODIO        Add in previous ORVYL I/O count              
         END                                                                    
         B     CTOTEXIT                                                         
         END                                                                    
*-                                                                              
*-       We don't know about the field, so return zero.                         
*-                                                                              
         CLEAR R15                                                              
CTOTEXIT PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETCVAR -- Routine to get a specific charge component field.                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - charging component name                                          
*      @R15 - name of field to get                                              
*                                                                               
*    On exit:                                                                   
*      R15 - value                                                              
*                                                                               
CVARWA   RECORD BEGIN                                                           
CVARTYPE DS    CL16                Charge type (e.g., WYLBUR_CPU)               
CVARCLEN DS    H                   Component name length                        
CVARCOMP DS    CL16                Component name to match                      
         END                                                                    
*-                                                                              
GETCVAR  XPROC CVARWA                                                           
         CLEAR CVARWA                                                           
         MVC   CVARTYPE,@R15       Save charge type                             
         MVC   CVARCOMP,CVBLANKS   Pre-blank component name                     
         CEIL  R0,L'CVARCOMP                                                    
         STH   R0,CVARCLEN         Save component name length                   
         LR    R15,R0                                                           
         MOVE  R15,CVARCOMP,@R1    Save charge component name                   
         L     R1,CVUPPTBL                                                      
         TR    CVARCOMP,@R1        Convert to upper case                        
*                                                                               
         L     R5,CVCURJCB                                                      
         WITH  (JCB,R5)                                                         
*-                                                                              
*-       Make sure resource information for the current component               
*-         is up to date.                                                       
*-                                                                              
         LA    R15,JCB                                                          
         ACALL BILLUPD             Update current component info                
*-                                                                              
*-       Build the total for the resource type requested.                       
*-                                                                              
         CLEAR R6                  Cummulative resource total                   
*                                                                               
         LA    R4,JCBUCEQH-(UCELINK-UCE)  Dummy first link                      
         WITH  (UCE,R4)                                                         
         WHILE ('LT R4,UCELINK',NZ),BEGIN  Go through components...             
         LTH   R15,CVARCLEN                                                     
         BNP   CVARMAT             Zero length means match everything           
         CMPR  R15,UCECOMP,CVARCOMP  Does component name stem match?            
         BE    CVARMAT             Yes                                          
         IF    ((CVARCOMP,EQ,'* '),AND,(R4,EQ,JCBUCEP)),BEGIN                   
CVARMAT  IF    (CVARTYPE,EQ,'ORVYL_CPU '),'AL R6,UCEVCPU'                       
         ELSEIF (CVARTYPE,EQ,'ORVYL_IO '),'AL R6,UCEVIO'                        
         ELSEIF (CVARTYPE,EQ,'WYLBUR_CPU '),'AL R6,UCEWCPU'                     
         ELSEIF (CVARTYPE,EQ,'WYLBUR_IO '),'AL R6,UCEWIO'                       
         END                                                                    
         END                                                                    
*                                                                               
         LR    R15,R6              Resource total                               
*                                                                               
         IF    ((CVARTYPE,EQ,'ORVYL_CPU '),OR,                         *        
               (CVARTYPE,EQ,'WYLBUR_CPU ')),BEGIN  Cvt CPU units...             
         ACALL CPUFIX              Convert to virtual cpu seconds               
         CLEAR R14                                                              
         M     R14,=F'10'                                                       
         D     R14,=F'384'         Convert to .001 sec                          
         IF    (R14,GE,384/2),'INCR R15'  Round                                 
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CPUFIX -- Routine to convert actual CPU seconds to                           
*    "virtual" CPU seconds.                                                     
*                                                                               
*    On entry:                                                                  
*      R15 - Real cpu seconds (in any increments)                               
*                                                                               
*    On exit:                                                                   
*      R15 - Virtual cpu seconds                                                
*                                                                               
*  Note: we limit R15 to x'04000000' maximum value.  this                       
*   eliminates S0C9 abend on Divide instruction.                                
*   We assume that accounting will catch such LARGE! values of                  
*   CPU time and FLAG them as errors.  (these large values                      
*   represent not minutes, not hours, but DAYS! of cpu time.)                   
*                                                                               
*                                                                               
CPUFIX   XPROC                                                                  
         IF    (CVCPUMUL,NZ),BEGIN  We have a cpu multiplier...                 
*        CEIL  R15,=X'04000000'    Avoid S0C9 abend if r15 LARGE!               
         IF    (R15,LGT,X'04000000'),BEGIN                                      
         L     R15,=X'04000000'                                                 
         END                                                                    
         CLEAR R14                                                              
         M     R14,CVCPUMUL        Multiply by "cpu factor"                     
         D     R14,=F'1000'                                                     
         IF    (R14,GE,500),'INCR R15'  Round                                   
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SURCHARG -- Routine to apply surcharge to the (dollar) value                 
*    passed to it.                                                              
*                                                                               
*    The accounting system's "source of funds" (sof) and "accounts              
*    receivable" (ar) codes determine the surcharge rate.  Here is              
*    the current definition:                                                    
*                                                                               
*    Only SOF=2 accounts can have a surcharge; the AR code                      
*    deterimines the percentage surcharge:                                      
*         AR=0    15% surcharge    Stanford Faculty/Staff                       
*         AR=1    35% surcharge    Educational                                  
*         AR=4    35% surcharge    Non-profit organization                      
*         AR=5    35% surcharge    Government organization                      
*         AR=7    35% surcharge    Other                                        
*         AR=9    15% surcharge    Stanford Student                             
*                                                                               
*    On entry:                                                                  
*      @R1 - ptr to user's sof/ar codes (2 char field)                          
*      R15 - Value                                                              
*                                                                               
*    On exit:                                                                   
*      R15 - Value with surcharge applied                                       
*                                                                               
SURCHARG PROC                                                                   
         LR    R4,R1               Ptr to sof/ar codes                          
*-                                                                              
*-       Surcharge is only done on sof=2 accounts.                              
*-                                                                              
         IF    (@R4,EQ,'2'),BEGIN  External account...                          
         CLEAR R2                  No surcharge                                 
         AIF   ('&INSTALN' NE 'STANFORD').NOSURCH                               
         IF    (@R4+1,EQ,'0'),'LA R2,1150'  15% surcharge                       
         IF    (@R4+1,EQ,'1'),'LA R2,1350'  35% surcharge                       
         IF    (@R4+1,EQ,'4'),'LA R2,1350'  35% surcharge                       
         IF    (@R4+1,EQ,'5'),'LA R2,1350'  35% surcharge                       
         IF    (@R4+1,EQ,'7'),'LA R2,1350'  35% surcharge                       
         IF    (@R4+1,EQ,'9'),'LA R2,1150'  15% surcharge                       
.NOSURCH ANOP                                                                   
         IF    (R2,Z),EXIT         No surcharge, scram                          
*-                                                                              
*-       Apply the surcharge.                                                   
*-                                                                              
         CLEAR R14                                                              
         MR    R14,R2              Multiply by "surcharge factor"               
         D     R14,=F'1000'                                                     
         IF    (R14,GE,500),'INCR R15'  Round                                   
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BILLCHK -- Routine to switch the user charging entry if the                  
*    component, project-id or time-block has changed.                           
*                                                                               
BILLWA   RECORD BEGIN                                                           
BILLCOMP DS    CL16                Current charge component name                
BILLBLK  DS    CL8                 Current time-block (e.g., "DAY")             
BILLPROJ DS    CL8                 Current project id                           
BILLKEY  EQU   BILLCOMP,*-BILLCOMP,C'X'                                         
*                                                                               
BILLDATE DS    CL32                Date: hh:mm:ss mm/dd/yy...                   
         END                                                                    
*-                                                                              
BILLCHK  XPROC BILLWA                                                           
*-                                                                              
*-       Build charge entry key.                                                
*-                                                                              
         MVC   BILLPROJ,CPWPROJ    Set current project-id                       
         MVC   BILLCOMP,CPWCHAR    Set current component                        
         IF    (CPLWCHAR,NZ),'MVC BILLCOMP,CPLWCHAR'  Local override            
*                                                                               
         CLEAR R0,R1               Assume current TOD clock                     
         LA    R2,99               Assume bad time block                        
*                                                                               
         L     R15,CVTPTR                                                       
         WITH  (CVT,R15),'L R15,CVTUSER'                                        
         IF    ((R15,NZ),AND,(@R15,EQ,'SCIP')),BEGIN                            
         WITH  (USERCVT,R15)                                                    
         LM    R0,R1,USEBLKCK      STCK when time-block changed                 
         LC    R2,USEBLOCK         Current time-block                           
         END                                                                    
*                                                                               
         IF    (R2,GT,4),'LA R2,TIMEERR'                                        
*-                                                                              
*-       Build an 8-character timeblock field consisting of                     
*-         "mmdd/hhX", where mm is month, dd is day of month,                   
*-         hh is hour and X is the first character of the                       
*-         current timeblock (e.g., "D" for DAY).                               
*-                                                                              
         LA    R15,BILLDATE        Put time/date here                           
         VCALL FMTCLCK             Format (clock already in R0,R1)              
*                                                                               
         MH    R2,=H'8'                                                         
         LA    R2,TIMEBLKS(R2)                                                  
*                                                                               
         MVC   BILLBLK(2),BILLDATE+9     Month                                  
         MVC   BILLBLK+2(2),BILLDATE+12  Day                                    
         MVI   BILLBLK+4,C'/'            /                                      
         MVC   BILLBLK+5(2),BILLDATE     Hour                                   
         MVC   BILLBLK+7(1),@R2          Timeblock (1 char)                     
*-                                                                              
*-       Switch components if the charging key has changed.                     
*-                                                                              
         L     R5,CVCURJCB                                                      
         WITH  (JCB,R5)                                                         
*-                                                                              
*-       The most frequent case is that the 'charging key' hasn't               
*-         changed, and we will exit without doing anything.                    
*-                                                                              
         WITH  (UCE,R4)                                                         
*                                                                               
         LT    R4,JCBUCEP          Current charging component                   
         IF    NZ,BEGIN            We have one...                               
         IF    (UCEKEY,EQ,BILLKEY),BILLEXIT  No changes, scram                  
*-                                                                              
*-       If the key has changed because the time block changed                  
*-         then call BILLTBLK to update the charging components                 
*-         for ALL users.                                                       
*-                                                                              
         IF    (UCEBLK,NE,BILLBLK),BEGIN  Time block changed...                 
         LA    R1,BILLBLK          New time block name                          
         LCALL BILLTBLK            Switch all time blocks                       
         B     BILLEXIT                                                         
         END                                                                    
*-                                                                              
*-       We need to change to different charge key, update the                  
*-         the current component before switching.                              
*-                                                                              
         L     R15,CVCURJCB        Our JCB ptr                                  
         LCALL BILLUPD             Update current charge entry                  
         END                                                                    
*-                                                                              
*-       Switch to another existing component.                                  
*-                                                                              
         LA    R4,JCBUCEQH-(UCELINK-UCE)  Dummy first link                      
*                                                                               
         WHILE ('LT R4,UCELINK',NZ),BEGIN  Go through UCEs...                   
         IF    (UCEKEY,EQ,BILLKEY),BEGIN  Switch back...                        
         ST    R4,JCBUCEP          Set new current component ptr                
         B     BILLEXIT            Scram                                        
         END                                                                    
         END                                                                    
*-                                                                              
*-       Make a new charging component.                                         
*-                                                                              
         LA    R0,L'UCE                                                         
         VCALL GETCORE                                                          
         LR    R4,R1                                                            
         CLEAR UCE                                                              
         MVC   UCE(4),=CL4'UCE'    Set self-identification                      
         MVC   UCEKEY,BILLKEY      Set charging key                             
*                                                                               
         IF    (JCBUCEQH,Z),BEGIN  First UCE on the queue...                    
         ST    R4,JCBUCEQH         We are the queue head                        
         ST    R4,JCBUCEQT         ...and the tail                              
         END                                                                    
*                                                                               
         ELSE  BEGIN               Add UCE to end of queue...                   
         L     R15,JCBUCEQT        Previous queue tail                          
         ST    R4,UCELINK-UCE(,R15)  Link previous to us                        
         ST    R4,JCBUCEQT         We are the new queue tail                    
         END                                                                    
*                                                                               
         ST    R4,JCBUCEP          Set current component ptr                    
*                                                                               
BILLEXIT PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
TIMEERR  EQU   5,,C'N'             Bad time block number                        
*                                                                               
TIMEBLKS DC    CL8'DAY'            0                                            
         DC    CL8'EVENING'        1                                            
         DC    CL8'NIGHT'          2                                            
         DC    CL8'WEEKEND'        3                                            
         DC    CL8'PEAK'           4                                            
         DC    CL8'???'            5+ (error)                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BILLTBLK -- Routine to switch user component entries for                     
*    ALL users whose time block is not the same as the current                  
*    time block name passed to us.                                              
*                                                                               
*    This is an internal routine called by BILLCHK when the                     
*    time-block changes, since if the time block changes for one                
*    user then it has changed for everyone.                                     
*                                                                               
*    On entry:                                                                  
*      R1 - current time-block (8 characters)                                   
*                                                                               
         DROP  CP                  (We shouldn't need to ref CP...)             
*                                                                               
BTWA     RECORD BEGIN                                                           
BTCOMP   DS    CL16                Current charge component name                
BTBLK    DS    CL8                 Current time-block (e.g., "DAY")             
BTPROJ   DS    CL8                 Current project id                           
BTKEY    EQU   BTCOMP,*-BTCOMP,C'X'                                             
         END                                                                    
*-                                                                              
BILLTBLK PROC  BTWA                                                             
         MVC   BTBLK,@R1           Save current time block                      
*                                                                               
         L     R5,CVFJCB                                                        
         LOOP  BEGIN                                                            
         WITH  (JCB,R5)                                                         
         IF    JCBWFSO,BTNEXT      User isn't logged on                         
         IF    (JCBACCT,Z),BTNEXT                                               
         IF    (JCBSINP,Z),BTNEXT                                               
*                                                                               
         LT    R4,JCBUCEP          Current charging component                   
         IF    Z,BTNEXT                                                         
         WITH  (UCE,R4)                                                         
*-                                                                              
*-       Time block has changed for this user, we need to                       
*-         update the charging component.                                       
*-                                                                              
         IF    (UCEBLK,NE,BTBLK),BEGIN  New time-block...                       
         MVC   BTCOMP,UCECOMP      Component stays the same                     
         MVC   BTPROJ,UCEPROJ      Project id stays the same                    
*-                                                                              
*-       We need to change to different charge key, update the                  
*-         the current component before switching.                              
*-                                                                              
         LA    R15,JCB             JCB ptr                                      
         LCALL BILLUPD             Update current charge entry                  
*-                                                                              
*-       Switch to another existing component.                                  
*-                                                                              
         LA    R4,JCBUCEQH-(UCELINK-UCE)  Dummy first link                      
*                                                                               
         WHILE ('LT R4,UCELINK',NZ),BEGIN  Go through UCEs...                   
         IF    (UCEKEY,EQ,BTKEY),BEGIN  Switch back...                          
         ST    R4,JCBUCEP          Set new current component ptr                
         B     BTNEXT              Next JCB                                     
         END                                                                    
         END                                                                    
*-                                                                              
*-       Make a new charging component.                                         
*-                                                                              
         LA    R0,L'UCE                                                         
         VCALL GETCORE                                                          
         LR    R4,R1                                                            
         CLEAR UCE                                                              
         MVC   UCE(4),=CL4'UCE'    Set self-identification                      
         MVC   UCEKEY,BTKEY        Set charging key                             
*                                                                               
         IF    (JCBUCEQH,Z),BEGIN  First UCE on the queue...                    
         ST    R4,JCBUCEQH         We are the queue head                        
         ST    R4,JCBUCEQT         ...and the tail                              
         END                                                                    
*                                                                               
         ELSE  BEGIN               Add UCE to end of queue...                   
         L     R15,JCBUCEQT        Previous queue tail                          
         ST    R4,UCELINK-UCE(,R15)  Link previous to us                        
         ST    R4,JCBUCEQT         We are the new queue tail                    
         END                                                                    
*                                                                               
         ST    R4,JCBUCEP          Set current component ptr                    
         END                                                                    
*-                                                                              
*-       Get next user's JCB ptr.                                               
*-                                                                              
BTNEXT   LA    R5,JCBNEXT                                                       
         UNTIL (R5,GE,CVLJCB)                                                   
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         USING CP                  (Restore CP addressibility)                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BILLUPD -- Routine to update the current charge component                    
*    entry with the most up to date information.                                
*                                                                               
*    On entry:                                                                  
*      R15 - JCB ptr of user whose charge entries are to be updated             
*                                                                               
         DROP  CP                  (We shouldn't need to ref CP...)             
*                                                                               
BILLUPD  PROC                                                                   
         LR    R5,R15                                                           
         WITH  (JCB,R5)                                                         
         LT    R4,JCBUCEP          Current charge component                     
         IF    NZ,BEGIN                                                         
         WITH  (UCE,R4)                                                         
         FAIL  (UCE,NE,'UCE'),BILLUPD,'Bad billing info (UCE ptr)'              
*                                                                               
         LT    R3,JCBSINP          Session information ptr                      
         IF    Z,EXIT              Trouble, scram                               
         WITH  (SIN,R3)                                                         
*-                                                                              
*-       Update terminal I/O count and elapsed time.                            
*-                                                                              
         L     R2,SINTIO           Current no. of terminal I/Os                 
         LR    R15,R2                                                           
         SL    R15,JCBITIO         Calc terminal I/O increment only             
         IF    NEG,'CLEAR R15'     (Testwyl reset accounting info)              
         AL    R15,UCETIO          Add increment to prev total                  
         ST    R15,UCETIO          New total terminal I/Os                      
         ST    R2,JCBITIO          Save total for next time                     
*                                                                               
         IF    (SINLCLCK,NZ),BEGIN  Logon time has been set...                  
         VCALL LOCALTOD            Get current time/date                        
         SDL   R0,SINLCLCK         Calculate elapsed time                       
         XPUSH R0,R1                                                            
         SDL   R0,JCBIECLK         Calc elapsed time increment only             
         IF    (R0,NEG),'CLEAR R0,R1'  (Testwyl reset accting info)             
         ADL   R0,UCEECLK          New total elapsed time                       
         STM   R0,R1,UCEECLK       Save total elapsed time                      
         XPOP  R0,R1                                                            
         IF    (R0,LGT,=A(X'000FFFFF')),'CLEAR R0,R1'  (Safety)                 
         STM   R0,R1,JCBIECLK      Save total for next time                     
         END                                                                    
*-                                                                              
*-       Update ORVYL CPU and I/O amounts in the current charge                 
*-         component.                                                           
*-                                                                              
         L     R2,SINVCPU          Total ORVYL cpu time                         
         AL    R2,SINVOCPU         Plus any cpu by prev ORVYLs                  
         LR    R15,R2                                                           
         SL    R15,JCBVICPU        Calc CPU increment only                      
         IF    NEG,'CLEAR R15'     (Testwyl reset accounting info)              
         AL    R15,UCEVCPU         Add increment to prev total                  
         ST    R15,UCEVCPU         New total ORVYL cpu time                     
         ST    R2,JCBVICPU         Save total for next time                     
*                                                                               
         L3    R2,SINVDIO          Total ORVYL disk I/Os                        
         AL    R2,SINVODIO         Plus any I/Os by prev ORVYLs                 
         LR    R15,R2                                                           
         SL    R15,JCBVIDIO        Calc I/O increment only                      
         IF    NEG,'CLEAR R15'     (Testwyl reset accounting info)              
         AL    R15,UCEVIO          Add increment to prev total                  
         ST    R15,UCEVIO          New total ORVYL disk I/Os                    
         ST    R2,JCBVIDIO         Save total for next time                     
         END                                                                    
         PEND                                                                   
*                                                                               
         USING CP                  (Restore CP addressibility)                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*  BILLUPD$ -- Routine to update the current dollar amounts for                 
*    each of the component entries.                                             
*                                                                               
*    On entry:                                                                  
*      R15 - JCB ptr of user whose charge entries are to be updated             
*                                                                               
         DROP  CP                  (We shouldn't need to ref CP...)             
*                                                                               
BUDWA    RECORD BEGIN                                                           
BUDFLAG  FLAG                                                                   
         FLAG  BUDFLEAS            - User is using a leased port                
         FLAG  BUDFTEL             - User is using Telenet/Tymnet               
         FLAG  BUDFVIRT            - Virtual terminal session                   
         FLAG  BUDFFLAT            - Use flat rate if non-prime time            
*                                                                               
BUDSOF   DS    C                   Source of funds code                         
BUDAR    DS    C                   Accounts receivable code                     
         END                                                                    
*-                                                                              
BILLUPD$ PROC  BUDWA                                                            
         CLEAR BUDWA                                                            
*                                                                               
         LR    R5,R15                                                           
         WITH  (JCB,R5)                                                         
*-                                                                              
*-       Get charging related fields from the user's CP.                        
*-                                                                              
         BEGIN                                                                  
         L     R15,JCBCPX          Get user's CP ptr                            
         WITH  (CP,R15)                                                         
*                                                                               
         IF    CPSFLEAS,'SET BUDFLEAS'  Leased                                  
         IF    CPSFTEL+CPSFTYM,'SET BUDFTEL'  Telenet/tymnet                    
         IF    CPSTVIRT,'SET BUDFVIRT' Virtual                                  
         IF    CPFFLAT,'SET BUDFFLAT'  Flat rate for non-prime time             
*                                                                               
         MVC   BUDSOF(2),CPSOF     Copy sof/ar codes                            
         END                                                                    
*-                                                                              
*-       Go through each component entry and calculate the dollar               
*-         cost for each field.                                                 
*-                                                                              
         L     R5,JCBUCEQH         Get first charge component                   
*                                                                               
         WHILE (R5,NZ),BEGIN       Go through UCEs...                           
         WITH  (UCE,R5)                                                         
         FAIL  (UCE,NE,'UCE'),BILLUPD$,'Bad billing info (UCE ptr)'             
*-                                                                              
*-       Skip charge accumulation for the non-billable components.              
*-                                                                              
         IF    (UCECOMP,EQ,'SYS_'),BUDNEXT                                      
*                                                                               
         IF    (UCECOMP,EQ,'FOLIO_'),BUDNEXT                                    
*                                                                               
         IF    (UCECOMP,EQ,'PRISM_'),BEGIN                                      
         IF    (UCECOMP,EQ,'PRISM_GENERAL'),EXIT                                
         B     BUDNEXT                                                          
         END                                                                    
*                                                                               
         IF    (UCECOMP,EQ,'PUBLISH '),BUDNEXT                                  
*-                                                                              
*-       Skip charge accumulation for uncharged EMS and Wylbur Mail.            
*-                                                                              
         IF  ((UCECOMP,EQ,'EMS_'),OR,(UCECOMP,EQ,'WYLMAIL_')),BEGIN             
         IF    (UCEBLK+7,NE,'D'),EXIT    Only eligible in DAY block             
*-                                                                              
*-       Somewhat elaborate list of SOF codes which are eligible...             
*-                                                                              
         IF    (BUDSOF,EQ,'1'),BUDNEXT                                          
         IF    ((BUDSOF,GE,'3'),AND,(BUDSOF,LE,'7')),BUDNEXT                    
         IF    (BUDSOF,EQ,'9'),BUDNEXT                                          
         IF    ((BUDSOF,GE,'D1'),AND,(BUDSOF,LE,'D9')),BUDNEXT                  
         IF    ((BUDSOF,GE,'DN'),AND,(BUDSOF,LE,'DV')),BUDNEXT                  
         END                                                                    
*-                                                                              
*-       Calculate component charges.                                           
*-                                                                              
         CLEAR R4                  Assume index for day block values            
         IF    (UCEBLK+7,EQ,'E'),'LA R4,4'   New style field                    
         IF    (UCEBLK+7,EQ,'N'),'LA R4,4'   |                                  
         IF    (UCEBLK+7,EQ,'W'),'LA R4,8'   |                                  
*                                                                               
         IF    (R4,NZ),BEGIN       Not prime time...                            
         IF    BUDFFLAT,'LA R4,12'  Use "flat rate"                             
         END                                                                    
*-                                                                              
*-       Elapsed (connect) time.                                                
*-                                                                              
         L     R15,RATECON(R4)                                                  
         IF    BUDFLEAS,BEGIN      Leased is special...                         
         CLEAR R15                 Assume no connect charge                     
         IF    ((R4,NZ),AND,BUDFFLAT),'L R15,RATEFLLC'  Flat charge             
         END                                                                    
*                                                                               
         IF    BUDFTEL,'A R15,RATETEL'  TELENET/TYMNET Surcharge                
*                                                                               
         LA    R1,BUDSOF                                                        
         ACALL SURCHARG            Apply surcharge to rate                      
         LR    R2,R15              R15 is the rate                              
*                                                                               
         LM    R14,R15,UCEECLK     Elapsed time (in STCK units)                 
         SRDL  R14,12              .000001 of a sec                             
         D     R14,=A(10000)       We want .01 of a sec                         
         IF    (R14,GE,10000/2),'INCR R15'  Round                               
*                                                                               
         MR    R14,R2                                                           
         D     R14,=A(60*60*1000)  Get value in .1 cents                        
         IF    (R14,GE,30*60*1000),'INCR R15' round                             
         IF    BUDFVIRT,'CLEAR R15'  No connect charge if virtual               
         ST    R15,UCECON$         Save dollar total                            
*-                                                                              
*-       Terminal I/Os.                                                         
*-                                                                              
         LA    R1,BUDSOF                                                        
         L     R15,RATETIO(R4)     Basic disk I/O rate                          
         ACALL SURCHARG            Apply surcharge to rate                      
         LR    R2,R15              R15 is this user's rate                      
*                                                                               
         L     R15,UCETIO          Current component charges                    
         MR    R14,R2                                                           
         D     R14,=A(1000*10)     Get value in .1 cents                        
         IF    (R14,GE,500*10),'INCR R15'  Round                                
         IF    BUDFVIRT,'CLEAR R15'  No connect charge if virtual               
         ST    R15,UCETIO$         Save dollar total                            
*-                                                                              
*-       Update Wylbur CPU cost.                                                
*-                                                                              
         LA    R1,BUDSOF                                                        
         L     R15,RATECPU(R4)     Basic CPU rate                               
         ACALL SURCHARG            Apply surcharge to rate                      
         LR    R2,R15              R15 is this user's rate                      
*                                                                               
         L     R15,UCEWCPU         Current component charges                    
         ACALL CPUFIX              Convert to virtual cpu seconds               
         MR    R14,R2                                                           
         D     R14,=A(60*1000*384)  Get value in .1 cents                       
         IF    (R14,GE,30*1000*384),'INCR R15'  Round                           
         ST    R15,UCEWCPU$        Save dollar total                            
*-                                                                              
*-       Update Wylbur I/O cost.                                                
*-                                                                              
         LA    R1,BUDSOF                                                        
         L     R15,RATEDIO(R4)     Basic disk I/O rate                          
         ACALL SURCHARG            Apply surcharge to rate                      
         LR    R2,R15              R15 is this user's rate                      
*                                                                               
         L     R15,UCEWIO          Current component charges                    
         MR    R14,R2                                                           
         D     R14,=A(1000*10)     Get value in .1 cents                        
         IF    (R14,GE,500*10),'INCR R15'  Round                                
         ST    R15,UCEWIO$         Save dollar total                            
*-                                                                              
*-       Update ORVYL CPU cost.                                                 
*-                                                                              
         LA    R1,BUDSOF                                                        
         L     R15,RATECPU(R4)     Basic CPU rate                               
         ACALL SURCHARG            Apply surcharge to rate                      
         LR    R2,R15              R15 is this user's rate                      
*                                                                               
         L     R15,UCEVCPU         Current component charges                    
         ACALL CPUFIX              Convert to virtual cpu seconds               
         MR    R14,R2                                                           
         D     R14,=A(60*1000*384)  Get value in .1 cents                       
         IF    (R14,GE,30*1000*384),'INCR R15'  Round                           
         ST    R15,UCEVCPU$        Save dollar total                            
*-                                                                              
*-       Update ORVYL I/O cost.                                                 
*-                                                                              
         LA    R1,BUDSOF                                                        
         L     R15,RATEDIO(R4)     Basic disk I/O rate                          
         ACALL SURCHARG            Apply surcharge to rate                      
         LR    R2,R15              R15 is this user's rate                      
*                                                                               
         L     R15,UCEVIO          Current component charges                    
         MR    R14,R2                                                           
         D     R14,=A(1000*10)     Get value in .1 cents                        
         IF    (R14,GE,500*10),'INCR R15'  Round                                
         ST    R15,UCEVIO$         Save dollar total                            
*                                                                               
BUDNEXT  L     R5,UCELINK          Next UCE (if any)                            
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         USING CP                  (Restore CP addressibility)                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*        RATE TABLE                                                             
*                                                                               
*           -- Corresponds to "Rate Schedule #18"                               
*                                                                               
*                                                                               
*        The fields below are costs, entered in 100ths of a cent,               
*        they are:                                                              
*          . connect time   -- cost per hour                                    
*          . terminal I/O's -- cost per thousand I/O's                          
*          . CPU time       -- cost per minute                                  
*          . disk I/O's     -- cost per thousand I/O's                          
*                                                                               
*        The four values in each field are for:                                 
*          . day time-block                                                     
*          . night time-block                                                   
*          . weekend time-block                                                 
*          . flat connect rate (non-prime time only)                            
*                                                                               
RATECON  DC    A(0,0,0,100*100)                     Connect time                
RATECPU  DC    A(3720*100,1620*100,1620*100,0)      CPU time                    
RATETIO  DC    A(0,0,0,0)                           Terminal I/O's              
RATEDIO  DC    A(0,0,0,0)                           Disk I/O's                  
*                                                                               
RATEFLLC DC    A(150*100)          Flat rate connect charge...                  
*                                  ...for a leased port                         
*                                                                               
RATETEL  DC    A(850*100)          TELENET/TYMNET connect surcharge             
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DOWNBILL -- Routine to write "crash" billing records for all                 
*    logged on users.  This routine is called when Wylbur is                    
*    going down.                                                                
*                                                                               
         DROP  CP                  (We shouldn't need to ref CP...)             
*                                                                               
DOWNBILL XPROC                                                                  
*                                                                               
         L     R5,CVFJCB                                                        
         LOOP  BEGIN                                                            
         WITH  (JCB,R5)                                                         
         IF    ^JCBWFSO,BEGIN      User is logged on...                         
         IF    (JCBACCT,Z),EXIT    Not really logged on                         
         IF    (JCBSINP,Z),EXIT                                                 
         IF    (JCBUCEP,Z),EXIT                                                 
*                                                                               
         LA    R15,JCB                                                          
         LA    R1,=CL8'CRASH'                                                   
         ACALL DOBILL              Display costs                                
         END                                                                    
*                                                                               
         LA    R5,JCBNEXT                                                       
         UNTIL (R5,GE,CVLJCB)                                                   
         END                                                                    
*                                                                               
         PEND                                                                   
*                                                                               
         USING CP                  (Restore CP addressibility)                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*  DOBILL -- Routine to write the charge record for the user                    
*    specified by the JCB passed as a parameter.  Note that we may              
*    not be writing the charge record for the current user (so be               
*    careful not to reference the CP for a charge field since you               
*    will get the current user's CP and not the target user's CP).              
*                                                                               
*    On entry:                                                                  
*      R1 - 8 char ID ("LOGOFF", "CRASH", etc.)                                 
*      R15- JCB ptr for user whose charge record is to be written               
*                                                                               
         DROP  CP                  (We shouldn't need to ref CP...)             
*                                                                               
DBWA     RECORD BEGIN                                                           
DBID     DS    CL8                 Record type ID                               
DBWLEN   DS    F                   Working record length                        
*                                                                               
DBMAXLN# EQU   31*1024             Our max SMF record length                    
         END                                                                    
*-                                                                              
DOBILL   XPROC DBWA                                                             
         LR    R5,R15              JCB ptr                                      
         WITH  (JCB,R5)                                                         
*                                                                               
         MVC   DBID,@R1            Save record type ID                          
         CLEAR DBWLEN              Initialize working length                    
*                                                                               
         L     R15,=A(DBMAXLN#)                                                 
         XPUSH ,,(R15),PTR=R6      Get room for a jumbo SMF record              
         WITH  (SMFSCRC,R6)                                                     
         CLEAR SMFSCRC             Initialize fixed part                        
*-                                                                              
*-       Update charge component information.                                   
*-                                                                              
         LA    R15,JCB                                                          
         ACALL BILLUPD             Update charge component info                 
*-                                                                              
*-       Skip all charging in VISTA.                                            
*-                                                                              
         IF    CVFVISTA,EXIT,DOBILL    Skip charging in VISTA                   
*-                                                                              
*-       Build charge header.                                                   
*-                                                                              
         L     R4,JCBSINP                                                       
         WITH  (SIN,R4),BEGIN                                                   
         MVC   SCRCVER,=A(SCRCVER#)  Record version number                      
         MVC   SCRCTYPE,DBID       Save record type ID                          
*                                                                               
         L     R3,JCBCPX           This user's CP                               
         WITH  (CP,R3),BEGIN                                                    
         MVC   SCRCUID,CVBLANKS    No userid yet                                
         MVC   SCRCNAME,CPSNAME    User name                                    
         MVC   SCRCWAPP,CPWAPP     WAPP info                                    
         MVC   SCRCFE,CPSFE        Front end name                               
         MVC   SCRCPORT,CPSPORT    Port name                                    
         MVC   SCRCSOF(2),CPSOF    Save SOF/AR codes                            
         END                                                                    
*                                                                               
         MVC   SCRCMULT,CVCPUMUL   CPU multiplication factor                    
         IF    (SCRCMULT,Z),'MVC SCRCMULT,=F"1000"'  1.000                      
*                                                                               
         LA    R1,SCRCSOF          User's sof/ar codes                          
         LA    R15,1000            Start with 1000                              
         ACALL SURCHARG            Apply appropriate surcharge                  
         ST    R15,SCRCSURG        Save surcharge factor                        
*                                                                               
         L     R3,JCBSINP                                                       
         WITH  (SIN,R3),BEGIN                                                   
         IF    (SIN,EQ,'SIN'),BEGIN                                             
         MVC   SCRSTAG,SINSTAG     Session tag                                  
         LM    R0,R1,SINLCLCK      Clock at time of logon                       
         IF    ((R0,NZ),OR,(R1,NZ)),BEGIN  We have one...                       
         VCALL TIMEDATE            Convert to time/date                         
         ST    R1,SCRCLDAT         Session start date                           
         ST    R0,SCRCLTIM         Session start time                           
         MVC   SCRCTIO,SINTIO      Total terminal I/O's                         
         VCALL LOCALTOD            Get current time/date                        
         SDL   R0,SINLCLCK         Calculate elapsed time                       
         SRDL  R0,12               .000001 of a sec                             
         D     R0,=A(10000)        We want .01 of a sec                         
         IF    (R0,GE,10000/2),'INCR R1'  Round                                 
         END                                                                    
         ST    R1,SCRCET           Save elapsed time                            
         END                                                                    
         END                                                                    
*                                                                               
         MVC   SCRCWCPU,JCBWCPU    Total WYLBUR CPU time used                   
         MVC   SCRCWIO,JCBWIO      Total WYLBUR I/O's                           
*                                                                               
         L     R15,SINVCPU         Total ORVYL CPU time used                    
         AL    R15,SINVOCPU        Plus ORVYL CPU from prev ORVYLs              
         ST    R15,SCRCVCPU        Save it in the record                        
*                                                                               
         L3    R15,SINVDIO         Total ORVYL disk I/Os                        
         AL    R15,SINVODIO        Plus ORVYL I/Os from prev ORVYLs             
         ST    R15,SCRCVIO         Save it in the record                        
         END                                                                    
*                                                                               
         MVC   DBWLEN,=A(SCRCEND-SMFSCRC)  Set total length                     
*-                                                                              
*-       Build charge component entries.                                        
*-                                                                              
         MVC   SCRCCHLN,=AL2(L'SMFCCRC)  Set component entry len                
*                                                                               
         LA    R3,SCRCEND                                                       
         WITH  (SMFCCRC,R3)                                                     
         LA    R4,JCBUCEQH-(UCELINK-UCE)  Dummy first entry                     
         LOOP  BEGIN                                                            
         WITH  (UCE,R4)                                                         
         WHILE ('LT R4,UCELINK',NZ)                                             
         CLEAR SMFCCRC             Initialize component entry                   
         MVC   CCRCPROJ,UCEPROJ    Project-id                                   
         MVC   CCRCCOMP,UCECOMP    Charging component                           
         MVC   CCRCBLK,UCEBLK      Time-block                                   
         MVC   CCRCFLAG,UCEFLAG    Copy component flag                          
*                                                                               
         LM    R0,R1,UCEECLK       Elapsed time (in STCK units)                 
         SRDL  R0,12               .000001 of a sec                             
         D     R0,=A(10000)        We want .01 of a sec                         
         IF    (R0,GE,10000/2),'INCR R1'  Round                                 
         ST    R1,CCRCCON          Save elapsed time                            
         MVC   CCRCCON$,UCECON$                                                 
*                                                                               
         MVC   CCRCTIO,UCETIO      Terminal I/O                                 
         MVC   CCRCTIO$,UCETIO$                                                 
         L     R15,UCEWCPU         WYLBUR CPU                                   
         ACALL CPUFIX              Convert to "virtual CPU seconds"             
         ST    R15,CCRCWCPU                                                     
         MVC   CCRCWCPU$,UCEWCPU$                                               
         MVC   CCRCWIO,UCEWIO      WYLBUR I/Os                                  
         MVC   CCRCWIO$,UCEWIO$                                                 
         L     R15,UCEVCPU         ORVYL CPU                                    
         ACALL CPUFIX              Convert to "virtual CPU seconds"             
         ST    R15,CCRCVCPU                                                     
         MVC   CCRCVCPU$,UCEVCPU$                                               
         MVC   CCRCVIO,UCEVIO      ORVYL I/Os                                   
         MVC   CCRCVIO$,UCEVIO$                                                 
*                                                                               
         INCR  R15,SCRCCHCT        Count no. of charge components               
*                                                                               
         LA    R3,CCRCNEXT         Kick ptr to next component entry             
*                                                                               
         L     R15,DBWLEN          Current record length                        
         A     R15,=A(L'SMFCCRC)   Add amount we just used                      
         ST    R15,DBWLEN          Save new length                              
*                                                                               
         IF    (R15,GE,DBMAXLN#-512),EXIT  Overflow, scram                      
         END                                                                    
*-                                                                              
*-       Copy counter records to end of session charge record                   
*-                                                                              
         L     R0,=A(DBMAXLN#-512) GET MAX SPACE LEFT FOR COUNTERS              
         S     R0,DBWLEN           R0 = MAX LEN                                 
         LA    R1,SMFSCRC          PUT COUNTERS AT END OF RECORD                
         A     R1,DBWLEN           R1 = LOC TO PUT COUNTER RECDS                
         LA    R15,JCB                                                          
         ACALL WCTRCOPY            COPY COUNTERS TO END                         
         COMMENT                   RETURNS TOTAL LENGTH                         
         SPACE                                                                  
         L     R1,DBWLEN           UPDATE TOTAL LENGTH                          
         AR    R1,R0                                                            
         ST    R1,DBWLEN                                                        
         CLEAR R14                 CALC TOTAL NO OF COUNTERS                    
         LR    R15,R0                                                           
         D     R14,=A(L'SMFCTRC)                                                
         STH   R15,SCRCCTCT              SET COUNTER RECD COUNT                 
         MVC   SCRCCTLN,=AL2(L'SMFCTRC)  SET COUNTER RECD LENGTH                
*-                                                                              
*-       Write the integrated SMF record.                                       
*-                                                                              
         SETMSG SMFSCRC,L:DBWLEN                                                
         LA    R15,JCB                                                          
         ACALL SMFIHDR             Initialize standard header                   
*-                                                                              
*-       Write SMF records (skip SMF writes for LOGON record).                  
*-                                                                              
         IF    (SCRCTYPE,NE,'LOGON '),BEGIN                                     
         SETMSG SMFSCRC,L:DBWLEN                                                
         LA    R15,&WSMFBIL                                                     
         ACALL SMFWRITE            Write the charge record                      
*-                                                                              
*-       Call the compatibility routine with a pointer to the                   
*-         charging record which was just written.                              
*-                                                                              
         LA    R1,SMFSCRC                                                       
         LA    R15,JCB                                                          
         LCALL OLDBILL             Do any compatibility work                    
         END                                                                    
*                                                                               
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
*                                                                               
         QLTORG                                                                 
*                                                                               
         USING CP                  (Restore CP addressability)                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*   OLDBILL -- Routine to write the old charging records, given                 
*     the new charging record.                                                  
*                                                                               
*   This is for compatibility with the accounting system; the new               
*   &WSMFBIL (type 171) records contain all the information the                 
*   billing information in one record.  The old &WSMFSYS (type 170)             
*   records are produced here in the old format to allow the                    
*   existing accounting programs to run unchanged.                              
*                                                                               
*                                                                               
*   This routine is straight forward. the new smf record                        
*   data structure has several sub-records, each one of                         
*   which generates three old SMF type records. (one for                        
*   milten, one for orvyl, and one for wylbur)  all we                          
*   do here is loop thru each component charge sub-record                       
*   creating and writing out the appropriate old type                           
*   records.                                                                    
*                                                                               
*                                                                               
*   On entry:                                                                   
*     R1 - New SMF accounting record                                            
*     R15- JCB ptr for user whose charge record is to be written                
*                                                                               
*   On exit:                                                                    
*     Old style SMF records written out from information obtained               
*     from the new record.                                                      
*                                                                               
*   Note:                                                                       
*     Any unrecognized new style accounting record is                           
*     ignored (i.e., routine will not generate errors.).                        
*                                                                               
*                                                                               
         DROP  CP                  (We shouldn't need to ref CP...)             
*                                                                               
OLDBILL  PROC                                                                   
*                                                                               
         WITH  (SMFSCRC,R6)                                                     
         LR    R6,R1                                                            
         LR    R5,R15                                                           
*-                                                                              
*-       Only process LOGOFF/CRASH calls.                                       
*-                                                                              
         IF    ((SCRCTYPE,EQ,'LOGOFF '),OR,                            X        
               (SCRCTYPE,EQ,'CRASH ')),BEGIN                                    
*-                                                                              
*-       Loop through component records.                                        
*-                                                                              
         LA    R1,SCRCEND           R1 - 1ST COMPONENT REC PTR                  
         LH    R2,SCRCCHCT          R2 - COMPONENT REC COUNT                    
         LH    R3,SCRCCHLN          R3 - COMPONENT REC LENGTH                   
         WHILE (R2,POS),BEGIN                                                   
         COMMENT                   R1 - COMPONENT RECORD                        
         COMMENT                   R6 - SESSION RECORD                          
         LR    R15,R5              R15 - JCB                                    
         LCALL DOCOMP              PROCESS EACH COMPONENT RECORD                
         DECR  R2                                                               
         AR    R1,R3                                                            
         END                                                                    
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  PROCESS COMPONENT CHARGE RECORDS INTO 3 OLD STYLE SMF RECORDS                
*                                                                               
*  ON ENTRY:                                                                    
*       R1 - CHARGE SUB-RECORD                                                  
*       R6 - NEW TOTAL BILL RECORD                                              
*       R15- JCB ptr for user whose charge record is to be written              
*                                                                               
*  REGISTER USAGE:                                                              
*       R5 - CHARGE SUB-RECORD                                                  
*       R6 - NEW TOTAL BILL RECORD                                              
*       R2 - OLD ACCT RECORD                                                    
*                                                                               
DCWA     RECORD BEGIN                                                           
         DS    0F                                                               
DCSMFWYL DS    XL(L'SMFACCT)       WYLBUR OLD STYLE SMF RECORD                  
         DS    0F                                                               
DCSMFMIL DS    XL(L'SMFACCT)       MILTEN OLD STYLE SMF RECORD                  
         DS    0F                                                               
DCSMFORV DS    XL(L'SMFACCT)       ORVYL OLD STYLE SMF RECORD                   
         END                                                                    
*-                                                                              
DOCOMP   PROC  DCWA                                                             
*                                                                               
         USING SMFSCRC,R6                                                       
         USING SMFCCRC,R5                                                       
         USING SMFHDR,R2                                                        
         LR    R5,R1                                                            
         CLEAR DCWA                                                             
*                                                                               
         COMMENT                   SETUP OLD STYLE WYLBUR SMF HDR               
         LA    R2,DCSMFWYL         GET SMF RECORD ADDRBILITY                    
         LA    R1,DCSMFWYL                                                      
         LA    R0,L'DCSMFWYL                                                    
         COMMENT , R15=JCB PTR                                                  
         ACALL SMFIHDR             INITIALIZE SMF HDR                           
         MVC   SMFTYPE,&WSMFSYS                                                 
*                                                                               
         LA    R15,0               Set time block number                        
         IF    (CCRCBLK,EQ,'DAY     '),'LA R15,0'  Old form...                  
         IF    (CCRCBLK,EQ,'EVENING '),'LA R15,1'                               
         IF    (CCRCBLK,EQ,'NIGHT   '),'LA R15,2'                               
         IF    (CCRCBLK,EQ,'WEEKEND '),'LA R15,3'                               
         IF    (CCRCBLK,EQ,'PEAK    '),'LA R15,4'                               
*                                                                               
         IF    (CCRCBLK+7,EQ,'D'),'LA R15,0'  New form...                       
         IF    (CCRCBLK+7,EQ,'E'),'LA R15,1'                                    
         IF    (CCRCBLK+7,EQ,'N'),'LA R15,2'                                    
         IF    (CCRCBLK+7,EQ,'W'),'LA R15,3'                                    
         IF    (CCRCBLK+7,EQ,'P'),'LA R15,4'                                    
*                                                                               
         STC   R15,SMFTMBLK-SMFACCT(R2)  Save time block number                 
         LR    R1,R5               R1 - COMPONENT CHARGE RECORD                 
         COMMENT                   R2 - OLD WYLBUR SMF RECORD                   
         COMMENT                   R6 - SESSION CHARGE RECORD                   
*-                                                                              
*-       Change billing account for "charge diversion" logic.                   
*-                                                                              
         ACALL CHKPROJ             FIX ACCOUNT FOR SOME PROJ-IDS                
         IF    (SMFIACCT,NZ),BEGIN  We need to write the record...              
*-                                                                              
*-       SET UP OLD STYLE MILTEN SMF HDR.                                       
*-                                                                              
         LA    R2,DCSMFMIL                                                      
         MVC   DCSMFMIL,DCSMFWYL   DITTO MILTEN HDR FROM WYLBUR HDR             
         MVC   SMFSYSTM,=CL8'MILTEN  '                                          
*-                                                                              
*-       SET UP OLD STYLE MILTEN SMF HDR.                                       
*-                                                                              
         LA    R2,DCSMFORV                                                      
         MVC   DCSMFORV,DCSMFWYL   DITTO ORVYL HDR FROM WYLBUR HDR              
         MVC   SMFSYSTM,=CL8'ORVYL   '                                          
*                                                                               
         DROP  R2                                                               
         USING SMFACCT,R2                                                       
*-                                                                              
*-       SET WYLBUR CHARGES.                                                    
*-                                                                              
         LA    R2,DCSMFWYL                                                      
         CLEAR R14                                                              
         L     R15,CCRCWCPU        Wylbur CPU seconds                           
         IF    (CVCPUMUL,NZ),BEGIN  We have a CPU multiplier...                 
         M     R14,=F'1000'        <<<  Convert back to real                    
         D     R14,CVCPUMUL        <<<  CPU seconds                             
         END                                                                    
         CLEAR R14                                                              
         D     R14,=F'384'         GET 100THS SECS FROM TU'S                    
         IF    (R14,GT,384/2),' INCR R15 ' ROUND                                
         ST    R15,SMFWCPU                                                      
         L     R15,CCRCWIO                                                      
         STH   R15,SMFWDIO                                                      
*-                                                                              
*-       SET MILTEN CHARGES.                                                    
*-                                                                              
         LA    R2,DCSMFMIL                                                      
         MVC   SMFMCON,CCRCCON     Set elapsed time (in .01 sec)                
         MVC   SMFMTIO,CCRCTIO     Set terminal I/Os                            
*-                                                                              
*-       SET ORVYL CHARGES.                                                     
*-                                                                              
         LA    R2,DCSMFORV                                                      
         CLEAR R14                                                              
         L     R15,CCRCVCPU        ORVYL CPU seconds                            
         IF    (CVCPUMUL,NZ),BEGIN  We have a CPU multiplier...                 
         M     R14,=F'1000'        <<<  Convert back to real                    
         D     R14,CVCPUMUL        <<<  CPU seconds                             
         END                                                                    
         ST    R15,SMFVCPU                                                      
         L     R15,CCRCVIO                                                      
         ST    R15,SMFVDIO                                                      
*-                                                                              
*-       Write the old style SMF records.                                       
*-                                                                              
         SETMSG DCSMFMIL,L'DCSMFMIL                                             
         LA    R15,&WSMFSYS                                                     
         ACALL SMFWRITE                                                         
*                                                                               
         SETMSG DCSMFWYL,L'DCSMFWYL                                             
         LA    R15,&WSMFSYS                                                     
         ACALL SMFWRITE                                                         
*                                                                               
         SETMSG DCSMFORV,L'DCSMFORV                                             
         LA    R15,&WSMFSYS                                                     
         ACALL SMFWRITE                                                         
         END                                                                    
*                                                                               
         CLEAR R15                                                              
         PEND                                                                   
         DROP  R6                                                               
         DROP  R5                                                               
         DROP  R2                                                               
*                                                                               
         QLTORG                                                                 
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CHKPROJ - We are required to change the charged user ids for                 
*    certain project/componet cobinations.  For example, some                   
*    prism session charges are all diverted to account HQ.CLS.                  
*                                                                               
*    ON ENTRY:                                                                  
*        R1 - component charge record                                           
*             (contains project/compenent info)                                 
*        R2 - smf record to output                                              
*             (contains user id to change)                                      
*        R6 - session charge record                                             
*             (contains source of funds, etc)                                   
*                                                                               
*    ON EXIT:                                                                   
*        @R2 - output smf record user id field is updated                       
*              if appropriate                                                   
*                                                                               
CHKPWA   RECORD BEGIN                                                           
CHKPFLAG FLAG                                                                   
         FLAG  CHKPCOMM            - Commercial user                            
         FLAG  CHKPFREEMAIL        - Eligible for "uncharged mail"              
         END                                                                    
*-                                                                              
CHKPROJ  PROC CHKPWA                                                            
*                                                                               
         AIF   ('&INSTALN' NE 'STANFORD').CKPSKIP                               
*                                                                               
         USING SMFCCRC,R1                                                       
         USING SMFHDR,R2                                                        
         USING SMFSCRC,R6                                                       
         CLEAR CHKPWA                                                           
*-                                                                              
*-       Set commercial/non-commercial user flag.                               
*-                                                                              
         SET   CHKPCOMM            Assume commercial user                       
         IF    ((SCRCSOF,NE,'2'),OR,                                   X        
               ((SCRCSOF,EQ,'20'),OR,(SCRCSOF,EQ,'29'))),BEGIN                  
         IF    (SCRCSOF,EQ,'D1'),EXIT  SOF=D1 is commercial                     
         CLEAR CHKPCOMM            Non-commercial                               
         END                                                                    
*-                                                                              
*-       Set FREEMAIL flag if account is eligible.                              
*-                                                                              
         IF    (CCRCBLK+7,EQ,'D'),BEGIN  Day (not PEAK)...                      
         IF    (SCRCSOF,EQ,'1'),CKFRYES                                         
         IF    ((SCRCSOF,GE,'3'),AND,(SCRCSOF,LE,'7')),CKFRYES                  
         IF    (SCRCSOF,EQ,'9'),CKFRYES                                         
         IF    (SCRCSOF,EQ,'DE'),CKFRYES                                        
         IF    (SCRCSOF,EQ,'D2'),CKFRYES                                        
         IF    (SCRCSOF,EQ,'D3'),CKFRYES                                        
         IF    (SCRCSOF,EQ,'D5'),CKFRYES                                        
         IF    (SCRCSOF,EQ,'D6'),CKFRYES                                        
         EXIT                                                                   
*                                                                               
CKFRYES  SET   CHKPFREEMAIL        Set FREEMAIL flag                            
         END                                                                    
*                                                                               
******** No CP addressability, skip authorized check                            
******** IF    (CPSVFLAG.CPSVFRUN*CPSVFAUTH,AND,^CHKPCOMM),BEGIN                
*-                                                                              
*-       Diversions for all accounts.                                           
*-                                                                              
         IF    (CCRCCOMP,EQ,'PRISM_IPRIS '),BEGIN                               
         MVC   SMFIACCT,=C'TLCGE'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_EXTAPES '),BEGIN                             
         MVC   SMFIACCT,=C'LIBGW'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_REFUNDS '),BEGIN                             
         MVC   SMFIACCT,=C'REFGA'                                               
         END                                                                    
*-                                                                              
*-       Diversions for non-comercial accounts only.                            
*-                                                                              
         IF    ^CHKPCOMM,BEGIN     If not commercial...                         
*-                                                                              
*-       Folio billing diversions.                                              
*-                                                                              
         IF    (CCRCCOMP,EQ,'FOLIO_GENERAL '),BEGIN                             
         CLC   SMFGRP-SMFHDR(2,R6),=C'YA'  Awards consortium(see Bo)            
         IF    EQ,EXIT                                                          
         MVC   SMFIACCT,=C'FOLEC'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_SOCRATES '),BEGIN                            
         CLC   SMFGRP-SMFHDR(2,R6),=C'EC'  Charge group EC                      
         IF    EQ,EXIT                                                          
         CLC   SMFGRP-SMFHDR(2,R6),=C'YA'  Awards consortium(see Bo)            
         IF    EQ,EXIT                                                          
         MVC   SMFIACCT,=C'DMOED'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_HOOVER '),BEGIN                              
         MVC   SMFIACCT,=C'HPCED'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_HBR '),BEGIN                                 
         MVC   SMFIACCT,=C'HBRED'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_IAP_INSPEC'),BEGIN                           
         MVC   SMFIACCT,=C'IAPGB'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_IAP_PSY '),BEGIN                             
         MVC   SMFIACCT,=C'IAPGB'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_IAP_ERIC '),BEGIN                            
         MVC   SMFIACCT,=C'IAPGB'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_AIR '),BEGIN                                 
         MVC   SMFIACCT,=C'AIRHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_BOOKSTORE '),BEGIN                           
         MVC   SMFIACCT,=C'SBSEC'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_INVEST '),BEGIN                              
         MVC   SMFIACCT,=C'INVHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_MLKING '),BEGIN                              
         MVC   SMFIACCT,=C'MLKHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'FOLIO_COMMINFO '),BEGIN                            
         MVC   SMFIACCT,=C'CIPHQ'                                               
         END                                                                    
*-                                                                              
*-       Prism billing diversions.                                              
*-         (Skip core accounts)                                                 
*-                                                                              
         IF    ((SCRCSOF,NE,'C'),OR,                                   X        
               (SCRCSOF,EQ,'CA')),BEGIN     Skip core accounts                  
         IF    (CCRCCOMP,EQ,'PRISM_NC '),BEGIN                                  
         MVC   SMFIACCT,=C'DMOHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_SMAS '),BEGIN                                
         MVC   SMFIACCT,=C'SMSHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_PUBEVENTS '),BEGIN                           
         MVC   SMFIACCT,=C'FOLEC'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_SUFIN '),BEGIN                               
         MVC   SMFIACCT,=C'SFNHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_NSI '),BEGIN                                 
         MVC   SMFIACCT,=C'SSSHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_SNAP '),BEGIN                                
         MVC   SMFIACCT,=C'SNPHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_CLASS '),BEGIN                               
         MVC   SMFIACCT,=C'CLSHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_MISC '),BEGIN                                
         MVC   SMFIACCT,=C'OTHHQ'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_PARTNERS '),BEGIN                            
         MVC   SMFIACCT,=C'WIZGE'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PRISM_CDS '),BEGIN                                 
         MVC   SMFIACCT,=C'TIPHQ'                                               
         END                                                                    
*                                                                               
         END   , of no prism charge diversion for core accounts                 
         END   , of no charge diversion for commercial accounts                 
*-                                                                              
*-       Divert charges for "free EMS and Wylbur Mail".                         
*-                                                                              
         IF    CHKPFREEMAIL,BEGIN  Eligible for free mail...                    
         IF    (CCRCCOMP,EQ,'EMS_'),BEGIN                                       
         MVC   SMFIACCT,=C'EMSGB'                                               
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'WYLMAIL_'),BEGIN                                   
         MVC   SMFIACCT,=C'WYLGB'                                               
         END                                                                    
         END                                                                    
*                                                                               
         IF    (CCRCCOMP,EQ,'PUBLISH '),BEGIN                                   
         MVC   SMFIACCT,=C'PBLGB'                                               
         END                                                                    
*                                                                               
.CKPSKIP ANOP                                                                   
*-                                                                              
*-       Never charge for SYS_ components, they are system                      
*-         overhead.                                                            
*-                                                                              
         IF    (CCRCCOMP,EQ,'SYS_'),BEGIN                                       
         CLEAR SMFIACCT            No account (not billed)                      
         END                                                                    
*                                                                               
         CLEAR R15                 (Neatness)                                   
         PEND                                                                   
         DROP  R1                                                               
         DROP  R2                                                               
         DROP  R6                                                               
*                                                                               
         QLTORG                                                                 
*                                                                               
         USING CP                  (Restore CP addressiblity)                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  FREEBILL -- Routine to free the user's billing information.                  
*    Called at logoff.                                                          
*                                                                               
*  On entry:                                                                    
*        R1 - JCB pointer                                                       
*                                                                               
         DROP  CP                  (We shouldn't need to ref CP...)             
*                                                                               
FREEBILL XPROC                                                                  
         LR    R5,R1                                                            
         WITH  (JCB,R5)                                                         
*-                                                                              
*-       Free the charging components.                                          
*-                                                                              
         L     R4,JCBUCEQH         First charging component entry               
         CLEAR JCBUCEQH,JCBUCEP    Reset                                        
*                                                                               
         WITH  (UCE,R4),BEGIN                                                   
         WHILE (R4,NZ),BEGIN       Free all entries...                          
         IF    (UCE,NE,'UCE'),EXIT  This is strange, scram                      
         L     R3,UCELINK          Get next UCE ptr                             
*                                                                               
         MVC   UCELINK,=F'-1'      Reset link ptr                               
         MVC   UCE(4),=C'FUCE'     Change ID                                    
*                                                                               
         LA    R1,UCE                                                           
         VCALL FREECORE            Free this UCE entry                          
*                                                                               
         LR    R4,R3               Set next UCE ptr                             
         END                                                                    
         END                                                                    
*-                                                                              
*-       Free the counters.                                                     
*-                                                                              
         LT    R1,JCBCTP           Pointer to counter area                      
         IF    (R1,NZ),'CLEAR JCBCTP; VCALL FREECORE'                           
*-                                                                              
*-       Reset other billing information.                                       
*-                                                                              
         CLEAR JCBBILL             Reset other billing fields                   
*                                                                               
         PEND                                                                   
*                                                                               
         USING CP                  (Restore CP addressability)                  
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETCOST -- Routine to return charged CPU seconds and the                     
*    associated costs.                                                          
*                                                                               
*    On entry:                                                                  
*      R1 - COSTCB ptr (nothing filled in)                                      
*                                                                               
*    On exit:                                                                   
*      R1 - COSTCB ptr (with counts and $'s filled in)                          
*                                                                               
GETCOST  PROC                                                                   
         LR    R6,R1                                                            
         WITH  (COSTCB,R6)                                                      
         CLEAR COSTCB                                                           
*                                                                               
         L     R15,CVCURJCB        Current user                                 
         ACALL BILLUPD             Update current charge component              
*                                                                               
         L     R15,CVCURJCB        Current user                                 
         ACALL BILLUPD$            Update component charges                     
*                                                                               
         L     R5,CVCURJCB                                                      
         WITH  (JCB,R5),'L R5,JCBUCEQH'  Get first charge component             
*-                                                                              
*-       Go through each charge entry and accumulate the total                  
*-         costs.                                                               
*-                                                                              
         WHILE (R5,NZ),BEGIN       Go through UCEs...                           
         WITH  (UCE,R5)                                                         
         CLEAR R4                  Assume index for day block values            
*-                                                                              
*-       Accumulate elapsed (connect) time and costs.                           
*-                                                                              
         LM    R14,R15,UCEECLK     Elapsed time (in STCK units)                 
         ADL   R14,COSTECLK                                                     
         STM   R14,R15,COSTECLK    Save new total                               
*                                                                               
         L     R15,UCECON$         Ditto for Elapsed time costs                 
         AL    R15,COSTCON$                                                     
         ST    R15,COSTCON$        Save new dollar total                        
*-                                                                              
*-       Internal components (those beginning with "SYS_") do                   
*-         not accumulate CPU or I/O.                                           
*-                                                                              
         IF    (UCECOMP,EQ,'SYS_'),GETCNEXT                                     
*-                                                                              
*-       Accumulate terminal I/Os and costs.                                    
*-                                                                              
         L     R15,UCETIO          Terminal I/Os                                
         AL    R15,COSTTIO         Add to previous total                        
         ST    R15,COSTTIO         Save new total                               
*                                                                               
         L     R15,UCETIO$         Ditto for Terminal I/O costs                 
         AL    R15,COSTTIO$                                                     
         ST    R15,COSTTIO$        Save new dollar total                        
*-                                                                              
*-       Accumulate Wylbur CPU time and costs.                                  
*-                                                                              
         L     R15,UCEWCPU         Wylbur CPU time                              
         AL    R15,COSTWCPU        Add to previous total                        
         ST    R15,COSTWCPU        Save new total                               
*                                                                               
         L     R15,UCEWCPU$        Ditto for Wylbur CPU costs                   
         AL    R15,COSTWCPU$                                                    
         ST    R15,COSTWCPU$       Save new dollar total                        
*-                                                                              
*-       Accumulate Wylbur I/Os and costs.                                      
*-                                                                              
         L     R15,UCEWIO          Wylbur I/Os                                  
         AL    R15,COSTWIO         Add to previous total                        
         ST    R15,COSTWIO         Save new total                               
*                                                                               
         L     R15,UCEWIO$         Ditto for Wylbur I/O costs                   
         AL    R15,COSTWIO$                                                     
         ST    R15,COSTWIO$        Save new dollar total                        
*-                                                                              
*-       Accumulate Orvyl CPU time and costs.                                   
*-                                                                              
         L     R15,UCEVCPU         Orvyl CPU time                               
         AL    R15,COSTVCPU        Add to previous total                        
         ST    R15,COSTVCPU        Save new total                               
*                                                                               
         L     R15,UCEVCPU$        Ditto for Orvyl CPU costs                    
         AL    R15,COSTVCPU$                                                    
         ST    R15,COSTVCPU$       Save new dollar total                        
*-                                                                              
*-       Accumulate Orvyl I/Os and costs.                                       
*-                                                                              
         L     R15,UCEVIO          Orvyl I/Os                                   
         AL    R15,COSTVIO         Add to previous total                        
         ST    R15,COSTVIO         Save new total                               
*                                                                               
         L     R15,UCEVIO$         Ditto for Orvyl I/O costs                    
         AL    R15,COSTVIO$                                                     
         ST    R15,COSTVIO$        Save new dollar total                        
*                                                                               
GETCNEXT L     R5,UCELINK          Next UCE (if any)                            
         END                                                                    
*                                                                               
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  LOGKWR -- Routine to write SMF record to log accounting                      
*    command usage.                                                             
*                                                                               
*      On entry:                                                                
*        R0 - flags (SMFWFL)                                                    
*                                                                               
LOGKWR   XPROC                                                                  
         XPUSH ,,L'SMFKWR,PTR=R6                                                
         WITH  (SMFKWR,R6)                                                      
         CLEAR SMFKWR                                                           
         MVC   SMFKIFL,CPSKIFL                                                  
         MVC   SMFKAFL,CPSKAFL                                                  
         MVC   SMFRACCT,CPCACCT    Referenced account                           
         STC   R0,SMFWFL           Save flag info                               
         MVC   SMFWCMD,CVBLANKS                                                 
         LH    R15,CPCMDLEN                                                     
         CEIL  R15,L'SMFWCMD                                                    
         STC   R15,SMFWLEN                                                      
         MOVE  R15,SMFWCMD,CPCMD   Move command into record                     
*                                                                               
         SETMSG SMFKWR              Record                                      
         L     R15,CVCURJCB                                                     
         ACALL SMFIHDR             Initialize standard SMF header               
*                                                                               
         SETMSG SMFKWR              Record                                      
         LA    R15,&WSMFKWR        Kwr log record no.                           
         ACALL SMFWRITE                                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SMFLOG -- Routine to write a general purpose smf log record.                 
*                                                                               
*    On entry:                                                                  
*      R1,R0 - msg loc, len                                                     
*      R15 - addr of 8 char SMF id                                              
*                                                                               
SMFLOG   XPROC                                                                  
         FLOOR R0,0                                                             
         CEIL  R0,512              (Be reasonable)                              
         LR    R2,R0                                                            
         LA    R3,L'SMFGLOG+@R2                                                 
         LR    R6,R13                                                           
         LA    R13,@R3+3(R13)                                                   
         N     R13,=F'-4'                                                       
         WITH  (SMFGLOG,R6)                                                     
         MVC   SMFLID,@R15         Id                                           
         MOVEL SMFLTEXT,(R1),(R2)  Text                                         
*                                                                               
         SETMSG (R6),(R3)                                                       
         L     R15,CVCURJCB                                                     
         ACALL SMFIHDR             Initialize standard header                   
*                                                                               
         SETMSG (R6),(R3)                                                       
         LA    R15,&WSMFLOG        General log no.                              
         ACALL SMFWRITE                                                         
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SMFIHDR -- Routine to initialize the standard SMF header fields.             
*                                                                               
*    On entry:                                                                  
*      R1,R0 - recond loc, len                                                  
*      R15 - JCB ptr for user whose charge record is to be written              
*                                                                               
         DROP  CP                  (Don't assume CP addressiblity...)           
*                                                                               
SMFIHDR  PROC                                                                   
         LR    R5,R15                                                           
         WITH  (JCB,R5)                                                         
         LR    R6,R1                                                            
         WITH  (SMFHDR,R6)                                                      
         CLEAR SMFINIT                                                          
*                                                                               
         L     R1,CVTPTR                                                        
         WITH  (CVT,R1),'L R1,CVTSMCA'                                          
         WITH  (SMCABASE,R1),'MVC SMFSID,SMCASID'                               
*                                                                               
         VCALL LOCALTOD            Get current time/date                        
         VCALL TIMEDATE                                                         
         STM   R0,R1,SMFTIME       Time stamp                                   
*-                                                                              
*-       Fill in Interactive System SMF header.                                 
*-                                                                              
         L     R4,JCBCPX                                                        
         WITH  (CP,R4),BEGIN                                                    
         MVC   SMFUSER,CPSUSER     User id                                      
         MVC   SMFGRP(2),CPSGRP    Group                                        
         MVC   SMFGRP+2(2),CPSPROJ  2 char subgroup (compatability)             
         MVC   SMFPROJ,CPSPROJ     Project id                                   
         OC    SMFPROJ,CVBLANKS                                                 
         MVC   SMFTACF,CPSTACF     Account flags (lcip, etc.)                   
         MVC   SMFTRM,CPSTID       Terminal id                                  
         OC    SMFTRM,CVBLANKS     Convert zeros to blanks                      
*                                                                               
         IF    (CPSTETYP,NZ),'MVC SMFTETYP,CPSTETYP'  Explicit                  
         ELSE  BEGIN               Otherwise calc SMF port type...              
         MVI   SMFTETYP,C' '       Blank is the default                         
         IF    CPSFLEAS,BEGIN      Leased port...                               
         MVI   SMFTETYP,C'L'       Leased                                       
         IF    CPSTASYN,'MVI SMFTETYP,C"M"'  Async (memorex 1270)               
         IF    CPSTPDP,'MVI SMFTETYP,C"P"'   Pdp                                
         END                                                                    
         IF    CPSFTEL,'MVI SMFTETYP,C"T"'   Telenet                            
         IF    CPSFTYM,'MVI SMFTETYP,C"Y"'   Tymnet                             
         IF    CPSTVIRT,'MVI SMFTETYP,C"V"'  Virtual                            
         IF    CVFRLG,BEGIN        RLG only...                                  
         IF    CPSTNSC,'MVI SMFTETYP,C"N"'   NSC sessions                       
         IF    ((SMFTETYP,EQ,' '),AND,CPSTASYN),'MVI SMFTETYP,C"Z"'             
         IF    CPSTELF,'MVI SMFTETYP,C"I"'   TCP/Telnet (Internet)              
         END                                                                    
         END                                                                    
*                                                                               
         MVC   SMFSYSTM,CVWYLSSN   WYLBUR                                       
*                                                                               
         LM    R0,R1,CPSLCLCK      Clock at logon                               
         VCALL TIMEDATE                                                         
         STM   R0,R1,SMFTON        Save logon time, date                        
         END                                                                    
         PEND                                                                   
*                                                                               
         USING CP                  (Restore CP addressiblity)                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  SMFWRITE -- Routine to format the SMF record header and write                
*    the record.                                                                
*                                                                               
*      On entry:                                                                
*        R1,R0 - record loc,len                                                 
*        R15 - SMF type number (zero means don't log)                           
*                                                                               
         DROP  CP                  (Don't assume CP addressiblity...)           
*                                                                               
SMFWRITE PROC                                                                   
         LR    R5,R15                                                           
         LR    R6,R1                                                            
         WITH  (SMFHDR,R6)                                                      
         FAIL  ((R0,LT,L'SMFHDR),OR,(R0,GT,32767)),BADSMF                       
         SH    R0,=H'2'            Deduct first hw -- not part of rcd           
         STH   R0,SMFLEN                                                        
*-                                                                              
*-       Check for billing SMF record and charging it turned off.               
*-                                                                              
         FAIL  ((R5,NEG),OR,(R5,GT,255)),BADSMF2                                
*                                                                               
         IF    (R5,Z),SMFWEXIT     Don't write if zero                          
*                                                                               
         COMMENT                   DO NOT WRITE OLD 170 RECS ON SYSA            
         IF    ((R5,EQ,&WSMFSYS),AND,(CVMACHID,EQ,'SYSA')),SMFWEXIT             
*                                                                               
         IF    ((R5,EQ,&WSMFSYS),OR,(R5,EQ,&WSMFBIL)),BEGIN                     
         IF    CVFNOSMF,SMFWEXIT   No charging, scram                           
         INCR  R15,CVNASMF         Count accounting SMF write                   
         END                                                                    
*                                                                               
         STC   R5,SMFTYPE          Save record no                               
*                                                                               
         MODESET KEY=ZERO          ********                                     
         SMFWTM  SMFLEN            Write SMF record (start @ SMFLEN)            
         LR    R2,R15              Return code                                  
         MODESET KEY=NZERO         ********                                     
*                                                                               
         INCR  R15,CVNSMF          Count SMF write                              
         IF    (R2,NZ),'WTO "Unable to write SMF record."'                      
SMFWEXIT PEND                                                                   
*                                                                               
         USING CP                  (Restore CP addressiblity)                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GTUIDREC -- Routine to get a record from USERID file                         
*                                                                               
*    On entry:                                                                  
*      R1 - Points to an area large enough to hold an                           
*           entire USERID record.                                               
*      R15   - address of the account in "uuugg" format                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 -  Record successfully read                                            
*      nz - The error code if an error occurred.                                
*                                                                               
GETUWA   RECORD BEGIN                                                           
GETUPTRS DS    2A                  Working ptrs                                 
GETUREQ  DS    XL(L'UIDREC)        Userid record                                
         END                                                                    
*-                                                                              
GTUIDREC PROC  GETUWA                                                           
         LA    R0,L'GETUREQ                                                     
         STM   R0,R1,GETUPTRS     Save return area ptrs                         
*                                                                               
         LA    R3,GETUREQ                                                       
         WITH  (UIDREC,R3),BEGIN                                                
         MVC   UIDKEY,CVBLANKS     Build key...                                 
         MVC   UIDKEY(13),=C'gg.uuu_IDLIST'                                     
         MVC   UIDKEY(2),@R15+3   gg                                            
         MVC   UIDKEY+3(3),@R15   uuu                                           
         OC    UIDKEY(6),CVBLANKS  Force upper case                             
*                                                                               
         SETMSG GETUREQ             Here's the transaction address              
         LM    R2,R3,GETUPTRS      Return the result here                       
         IC    R4,=C'U'            Access the USERID file                       
         VCALL KEYGET              Get record                                   
         END                                                                    
         IF    NZ,BEGIN            Just return the input                        
         L     R3,GETUPTRS+4         key on failure                             
         MVC   @R3(L'UIDKEY),GETUREQ+(UIDKEY-UIDREC)                            
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETUID -- Routine to get the primary userid, given the account.              
*                                                                               
*    On entry:                                                                  
*      R1,R0 - ID is returned here (work area loc, len)                         
*      R15   - address of the account in "uuugg" format                         
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ID returned;             R1,R0 = ID loc, len                         
*      nz- no ID for this account;  R1,R0 = account in "gg.uuu" form            
*                                                                               
GETUID   XPROC GETUWA                                                           
         STM   R0,R1,GETUPTRS      Save return area ptrs                        
         LA    R1,GETUREQ                                                       
         ACALL GTUIDREC                                                         
         LA    R3,GETUREQ          Point to returned transaction                
         WITH  (UIDREC,R3),BEGIN                                                
         IF    NZ,'SETMSG UIDKEY,6'                                             
         ELSE  BEGIN                                                            
*-                                                                              
*-       We get a list of IDs returned in the form "id1;id2;...".               
*-       This routine only returns the first ID.                                
*-                                                                              
         LA    R1,UIDUDATA          Point to data start                         
         LH    R0,UIDULEN            and get length                             
         CLEAR R2                  Working length                               
         WHILE ((R0,POS),AND,(@R1,NE,';')),BEGIN  Look for sep...               
         LA    R1,@R1+1            Next position                                
         LA    R2,@R2+1            Kick working length                          
         DECR  R0                                                               
         END                                                                    
         LR    R0,R2               Copy working length                          
         LA    R1,UIDUDATA          Point to data start again                   
         END                                                                    
*                                                                               
         LM    R4,R5,GETUPTRS      Return area ptrs                             
         MOVE  R4,@R5,CVBLANKS     Pre-blank output area                        
         LM    R4,R5,GETUPTRS      Get 'em back                                 
         CEIL  R0,R4               Actual length can't exceed this              
         LR    R2,R0               Set actual length                            
         MOVE  R2,@R5,@R1          Copy data to caller's area                   
         PRETURN (R0)              Return actual userid length                  
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETUIDL -- Routine to get the userid list, given the account.                
*    (This routine is the same as GETUID, except that the list of               
*    userids is returned instead of just the first ID.)                         
*                                                                               
*    On entry:                                                                  
*      R1,R0 - ID list is returned here (work area loc, len)                    
*      R15   - address of account in "uuugg" format                             
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - ID list returned;        R1,R0 = ID loc, len                         
*      nz- no ID for this account;  R1,R0 = account in "gg.uuu" form            
*                                                                               
GETUIDL  XPROC GETUWA                                                           
         STM   R0,R1,GETUPTRS      Save return area ptrs                        
         LA    R1,GETUREQ                                                       
         ACALL GTUIDREC                                                         
         LA    R3,GETUREQ          Point to returned transaction                
         WITH  (UIDREC,R3),BEGIN                                                
         IF    NZ,'SETMSG UIDKEY,6'                                             
         ELSE  BEGIN                                                            
         LA    R1,UIDUDATA          Point to data start                         
         LH    R0,UIDULEN            and get length                             
         END                                                                    
*                                                                               
         LM    R4,R5,GETUPTRS      Return area ptrs                             
         MOVE  R4,@R5,CVBLANKS     Pre-blank output area                        
         LM    R4,R5,GETUPTRS      Get 'em back                                 
         CEIL  R0,R4               Actual length can't exceed this              
         LR    R2,R0               Set actual length                            
         MOVE  R2,@R5,@R1          Copy data to caller's area                   
         PRETURN (R0)              Return actual length                         
         END                                                                    
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  GETACCT -- Routine to get the account, given the userid.                     
*                                                                               
*    On entry:                                                                  
*      R1,R0 - ACCT or ID loc,len                                               
*      R15   - ptr to a 5 char return area (for "uuugg")                        
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - account returned                                                     
*      nz- no ID for this account                                               
*                                                                               
*  NOTE:                                                                        
*  GETACCT and CHKACCT are very similar.  They both take a                      
*  UserID or account as input.  They differ in that GETACCT                     
*  will not check to see if the account exists. CHKACCT does                    
*  check to see that the account exists.                                        
*     GETACCT of 'GG.UUU' returns r15=0                                         
*     CHKACCT of 'GG.UUU' returns r15=nz                                        
*                                                                               
*                                                                               
GETAWA   RECORD BEGIN                                                           
GETALOC  DS    F                   ID loc                                       
GETALEN  DS    F                   ID len                                       
GETARETN DS    F                   ID return area                               
GETADATA DS    XL(L'UIDREC)                                                     
         END                                                                    
*                                                                               
*                                                                               
GETACCT  XPROC GETAWA                                                           
*                                                                               
         CLEAR GETAWA              Init work area                               
         ST    R1,GETALOC                                                       
         ST    R0,GETALEN                                                       
         ST    R15,GETARETN                                                     
*                                                                               
         LR    R5,R15              Save return area ptr                         
*                                                                               
         VCALL LRTRIM                                                           
         COMMENT                   If gg.uuu form, got account                  
         COMMENT                   If gg$uuu form, got account                  
         IF    (R0,EQ,6),BEGIN                                                  
         IF    ((@R1+2,EQ,'.'),OR,(@R1+2,EQ,'$')),BEGIN  gg.uuu...              
         MVC   @R5(3),@R1+3        uuu                                          
         MVC   @R5+3(2),@R1        gg                                           
         OC    @R5(5),CVBLANKS     Convert to upper case                        
         CLEAR R15                 A-ok                                         
         B     GOTAACCT                                                         
         END                                                                    
*                                                                               
         COMMENT                   If uuu$gg form, got account                  
         IF    (@R1+3,EQ,'$'),BEGIN  uuu$gg...                                  
         MVC   @R5(3),@R1          uuu                                          
         MVC   @R5+3(2),@R1+4      gg                                           
         OC    @R5(5),CVBLANKS     Convert to upper case                        
         CLEAR R15                 A-ok                                         
         B     GOTAACCT                                                         
         END                                                                    
         END                                                                    
*                                                                               
         COMMENT                   Format USERID                                
         LA    R4,GETADATA                                                      
         WITH  (UIDREC,R4),BEGIN                                                
         MVC   UIDKEY,CVBLANKS    Build key...                                  
         MVC   UIDKEY(3),=C'ID_'                                                
         CEIL  R0,L'UIDKEY-3                                                    
         LR    R15,R0                                                           
         MOVE  R15,UIDKEY+3,@R1   Save key data                                 
         L     R2,CVUPPTBL                                                      
         TEX   R15,'TR UIDKEY+3,@R2'  Convert to upper case                     
         LA    R1,UIDKEY+3                                                      
         L     R0,GETALEN                                                       
         END   ,                                                                
*                                                                               
* Reject impossible userids                                                     
*                                                                               
         IF    (R0,NP),NOTAACCT                                                 
         IF    ((@R1,LT,'A'),OR,(@R1,GT,'Z')),NOTAACCT                          
         INCR  R1                                                               
         DECR  R0                                                               
         WHILE (R0,POS),BEGIN                                                   
         IF    ((@R1,LT,'A'),AND,(@R1,GT,'Z')),BEGIN                            
         IF    ((@R1,LT,'0'),AND,(@R1,GT,'9')),BEGIN                            
         IF    ((@R1,NE,'.'),AND,(@R1,NE,'_')),BEGIN                            
         B     NOTAACCT                                                         
         END                                                                    
         END                                                                    
         END                                                                    
         INCR  R1                                                               
         DECR  R0                                                               
         END                                                                    
*                                                                               
*                                                                               
         COMMENT                   Lookup userid                                
         SETMSG GETADATA                                                        
         LR    R2,R0                                                            
         LR    R3,R1                                                            
         IC    R4,=C'U'            Access the USERID file                       
         VCALL KEYGET              Get record (and set rc)                      
         IF    NZ,NOTAACCT         No record found                              
         LA    R3,GETADATA                                                      
         WITH  (UIDREC,R3),BEGIN                                                
         LH    R0,UIDULEN                                                       
         LA    R1,UIDUDATA                                                      
         END                                                                    
         IF    ((R0,NE,6),OR,(@R1+2,NE,'.')),NOTAACCT bad data                  
         COMMENT                   Read key worked                              
         MVC   @R5(3),@R1+3        uuu                                          
         MVC   @R5+3(2),@R1        gg                                           
         OC    @R5(5),CVBLANKS     Convert to upper case                        
         B     GOTAACCT                                                         
*                                                                               
GOTAACCT LABEL ,                   Got account, check if exists                 
         CLEAR R15                                                              
         B     GETAEXIT                                                         
*                                                                               
NOTAACCT LABEL ,                                                                
         LA    R15,4                                                            
         B     GETAEXIT                                                         
*                                                                               
GETAEXIT LABEL ,                                                                
         PEND                                                                   
         EJECT                                                                  
*box                                                                            
*                                                                               
*  CHKACCT -- Routine to get/check the account, given the userid.               
*                                                                               
*    On entry:                                                                  
*      R1,R0 - ACCT or ID loc,len                                               
*      R15   - ptr to a 5 char return area (for "uuugg")                        
*                                                                               
*    On exit, R15 (and cc):                                                     
*      0 - account returned                                                     
*      nz- no ID for this account or account does not exist                     
*                                                                               
*  NOTE:                                                                        
*  GETACCT and CHKACCT are very similar.  They both take a                      
*  UserID or account as input.  They differ in that GETACCT                     
*  will not check to see if the account exists. CHKACCT does                    
*  check to see that the account exists.                                        
*     GETACCT of 'GG.UUU' returns r15=0                                         
*     CHKACCT of 'GG.UUU' returns r15=nz                                        
*                                                                               
*                                                                               
CHKAWA   RECORD BEGIN                                                           
CHKAKWR  DS    XL(L'KWR)                                                        
         END                                                                    
*-                                                                              
CHKACCT  XPROC CHKAWA                                                           
         LA    R6,CHKAKWR                                                       
         USING KWR,R6                                                           
*                                                                               
         LR    R5,R15                                                           
         ACALL GETACCT                                                          
*                                                                               
         IF    Z,BEGIN             If ID/ACCT ok check if exists                
         CLEAR KWR                                                              
         MVC   KWRUSER,@R5                                                      
         MVC   KWRGRP,@R5+3                                                     
         KREAD KWR                                                              
         IF    ^KWRIFL.KWRIFVAL,BEGIN  if no kwd record,                        
         LA    R15,4                                                            
         END                                                                    
         ELSE  BEGIN               if kwd record                                
         CLEAR R15                                                              
         END                                                                    
         END                                                                    
*                                                                               
         CLEAR KWR                                                              
         PEND                                                                   
         QLTORG                                                                 
         VLTORG                                                                 
*                                                                               
         END   .                                                                
