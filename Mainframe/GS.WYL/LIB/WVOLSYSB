//WYL$SYSB JOB WYL$GS,'RLG WYLBUR Volumes'
/*JOBPARM SYSAFF=SYSB,HOLD=OUTPUT
//*
//*  This will update the RLG machines volume table!
//*  12/12/2001 Updated table to reflect reality  ; **pjg**
//*
//*  07/26/99 Added FRA001         ; **pjg**
//*  07/26/99 Added FRA002         ; **pjg**
//*  07/22/98 Added CPR003
//*  06/10/98 Added ACT010 and ACT011
//*  05/27/98 Added ACT009
//*  01/07/98 Added ACT008 again
//*  05/04/85 Created by Niz
//*  05/08/85 Modified for new WVOL table, ; Niz
//*  03/17/93 Added KAB001-KAB003 ;Meg
//*  03/18/93 Removed KAB001-KAB003 ; Meg
//*  03/22/93 Added DBA001 and DLT001 ;Meg
//*  04/12/93 Added ACT007 and ACT008 ; Meg
//*  12/15/93 Added ARP001 ;Meg
//*  12/22/93 Added ARP002,ARP003 ;Meg
//*  01/13/94 Added KDM001 ;Meg
//*  03/07/94 Added KAB004 ;Meg
//*  03/09/94 Added RRS001 ;Meg
//*  06/30/94 Removed RRS001 from table; Meg/RLG request
//*  10/06/94 Added DBA002 to table; Meg/RLG request
//*  12/01/94 Added ARC036 and ARC037 ;MEG
//*  12/16/94 Added KDM002 ; GP.MEG
//*  01/26/95 Changed RLGPAK from IO to DD type ;JOV
//*  02/21/95 Added DBS001 ;MEG
//*  05/22/95 GR.JOV  :Added NEW422 to table as per DFG.
//*  01/03/96 removed KAB003 to add NBKS volume. Meg, 1/3/96
//*  01/03/96 Added ARC038/deleted NEW422: Meg
//*  01/10/96 Added ARP004: Meg
//*  01/31/96 Removed ARPxxx, DBA001, 002, KAB001, CPR001, RRS001,
//*  03/01/96 Added SCR002
//*           KDM001, 002, and ARC038
//*           Added DBA010, KDM010, CPR010 and RRS001
//*  02/05/95 Reinstated ARP004; Meg
//*  05/16/96 Make parker happy
//*  06/05/96 Added DBA001-DBA005; meg
//*  07/11/96 Added DBA006-DBA008; meg
//*  08/28/96 Added KABA01-KABA17; pjg
//*  11/01/96 Added PHX001-PHX010; mcl
//*  11/08/96 Added ACT006; jov
//*  04/10/97 Added RJB001; meg
//*  06/27/97 Added CPR002; meg
//*  08/04/97 Added KAB001 and DLT002; meg
//*  09/15/97 Added ACT007;meg
//*  10/07/97 Added RJS001;meg
//*  12/17/97 Added ARC037, ARC038
//*
// EXEC ASMCL
//ASM.SYSIN   DD *
WVOLRLG  TITLE  'WYLBUR''s Volume List'
         MACRO
&NAME    VOLUME &VOLNAME,&TYPE=IO,&PRESRES=YES,&DSECT=NO,&AVAIL=YES,   *
               &PRIV=NO,&SHOW=YES
         LCLB  &PRBIT              INDICATES VALUE OF PRESRES PARM
         LCLB  &AVAILBT            INDICATES VOLUME AVAILABILITY
         LCLB  &SHOWBIT            INDICATES VOLUME SHOWABILITY
         LCLC  &VTYPE              HOLDS VOLUME TYPE (2 CHARS)
.*
         AIF   ('&DSECT' EQ 'YES').DODSECT
         AIF   ('&VOLNAME' EQ '').ERROR1  ERROR - NO VOLUME NAME
         AIF   (K'&VOLNAME GT 6).ERROR2   ERROR - VOLNAME > 6 CHARS
.*
.*       now check the volume type
.*
         AIF   (('&TYPE' EQ 'IO') OR ('&TYPE' EQ 'SAVE')).TYPSAV
         AIF   (('&TYPE' EQ 'TM') OR ('&TYPE' EQ 'SCRATCH')).TYPSCR
         AIF   (('&TYPE' EQ 'DD') OR ('&TYPE' EQ 'USE')).TYPUSE
         AGO   .ERROR3             ERROR - BAD VOLUME TYPE
.*
.*       encode volume type
.*
.TYPSAV  ANOP
&VTYPE   SETC  'IO'                VOLUME IS USE AND SAVE
         AGO   .GEN
.*
.TYPSCR  ANOP
&VTYPE   SETC  'TM'                VOLUME IS TEMP
         AGO   .GEN
.*
.TYPUSE  ANOP
&VTYPE   SETC  'DD'                VOLUME IS USE ONLY
.*       ago   .gen
.*
.GEN     ANOP
         AIF   (('&PRESRES' NE 'YES') AND ('&PRESRES' NE 'NO')).ERROR4
&PRBIT   SETB  ('&PRESRES' EQ 'YES')     ENCODE PRESRES SETTING
         AIF   (('&AVAIL' NE 'YES') AND ('&AVAIL' NE 'NO')).ERROR5
&AVAILBT SETB  ('&AVAIL' EQ 'YES')
         AIF   (('&PRIV' NE 'YES') AND ('&PRIV' NE 'NO')).ERROR6
&PRIVBT  SETB  ('&PRIV' EQ 'YES')
         AIF   (('&SHOW' NE 'YES') AND ('&SHOW' NE 'NO')).ERROR7
&SHOWBIT SETB  ('&SHOW' EQ 'YES')
.*
.*       generate the volume table entry
.*
&NAME    DC    CL2'&VTYPE'         VOLUME TYPE CODE
         AIF   ('&VOLNAME' EQ 'SPARE').NOTBLK
         DC    CL6'&VOLNAME'       VOLUME NAME
         AGO   .NOTBLK1
.NOTBLK  DC    CL6' '              VOLUME NAME
.NOTBLK1 AIF   ('&VOLNAME' EQ 'SPARE').SPARE1
         DC    AL1(128*&PRBIT+64*&AVAILBT+32*&PRIVBT) VOL CHAR
.SPARE1  AIF   ('&VOLNAME' NE 'SPARE').NSPARE1
         DC    AL1(128*&PRBIT)     VOLUME CHARACTERISTICS FLAGS
.NSPARE1 ANOP  ,
         DC    AL1(0)              SPARE FLAG BYTE
         DC    AL1(128*&SHOWBIT)               MORE CHARACTERISTICS
         DC    XL5'00'             Back-online time                     **ISU**
         DC    H'0'                NUMBER OF OPENS TO THIS VOLUME
         DC    F'0'                NUMBER OF READS TO THIS VOLUME
         DC    F'0'                NUMBER OF WRITES TO THIS VOLUME
         DC    H'0'                AMOUNT OF SPACE ON VOLUME (TRKS)
         DC    H'0'                NUMBER OF EXTENTS ON VOLUME
         DC    H'0'                MAX SPACE AVAILABLE ON VOLUME
         DC    H'0'                % FREE SPACE WANTED
         DC    A(0)                UCB ADDRESS
         DC    A(0)                OWNING IOWA ADDRESS
         DC    A(0)                TIOT ENTRY ADDRESS
         DC    AL1(0)              VOLUME OWNER FLAGS 1
         DC    AL1(0)              VOLUME OWNER FLAGS 2
         DC    CL16' '             VOLUME ACCESSOR LIST
         DC    0F'0'               ROUND UP TO FULLWORD BOUNDARY
         MEXIT
.DODSECT ANOP
&NAME    DSECT
VTYPE    DS    CL2                 VOLUME TYPE CODE
VNAME    DS    CL6                 VOLUME NAME
*
VFLG1    DS    X                   VOLUME CHARACTERISTICS FLAG
*
VF1PRES  EQU   X'80'               VOLUME IS PERM. RES OR RESERVED
VF1AVAIL EQU   X'40'               VOLUME IS AVAILABLE FOR USE
VF1PRIV  EQU   X'20'               VOLUME IS ACCESS RESTRICTED
VF1PDA   EQU   X'10'               VOLUME IS PENDING DEALLOCATION
VF1CLR   EQU   X'08'               CLR VOLIST ENTRY AFTER DEALLOCATION
VF1AJCL  EQU   X'04'               VOLUME OVERRIDDEN IN JCL      BH6023
VF1MNTD  EQU   X'02'               VOLUME MOUNTED BY OPERATOR    BH6023
VF1ON    EQU   X'01'               VOLUME IS "ONLINE"            BH6036
*
VFLG2    DS    X                   SECOND FLAG BYTE              BH6023
*
VF2ALLO  EQU   X'80'               ALLOCATE WHEN YOU HAVE VOL    BH6023
VF2DALLO EQU   X'40'               DEALLOCATE WHEN HAVE VOL      BH6023
VF2QUIET EQU   X'20'               DO QUIET DEALLOCATION         BH6036
VF2ADACT EQU   X'10'               ALLO/DALLO ACTIVE             BH6062
VF2MOUNT EQU   X'08'               mount may be issued to fill req
VFLG3    DS    X                   THIRD FLAG BYTE
*
VF3SHOW  EQU   X'80'               - DISPLAY IN "SHOW VOL" OUTPUT
VF3BKUP  EQU   X'40'               - Volume being backed up             **ISU**
*                                                                       **ISU**
VOLONTIM DS    CL5                 - Back-online time                   **ISU**
*        STATISTICS SECTION
*
VOLOPNS  DS    H                   NUMBER OF OPENS
VOLREADS DS    F                   NUMBER OF READS
VOLWRITS DS    F                   NUMBER OF WRITES
VOLSPACE DS    H                   AMOUNT OF SPACE ON VOLUME
VOLEXTN  DS    H                   NUMBER OF EXTENTS
VOLMAXSP DS    H                   MAX SPACE AVAILABLE
VOLPCFRE DS    H                   PERCENT FREE SPACE WANTED
VOLJUNK  EQU   VOLOPNS,*-VOLOPNS   DEFINE VOLUMES AREA           BH6036
*
*        CONTROL ADDRESS SECTION
*
VOLUCBAD DS    A                   UCB ADDRESS
VOLUSECT DS    H                   USE COUNT OF VOLUME           BH6036
         DS    H                   EXTRA HALF WORD               BH6036
         DS    A                   TIOT POINTER (DO NOT USE)
*
*        ACCESS CONTROL SECTION
*
VOLOWNF1 DS    X                   VOLUME OWNER FLAGS 1
VOLOWNF2 DS    X                   VOLUME OWNER FLAGS 2
VOLOWNER DS    CL16                VOLUME ACCESSOR LIST
         DS    0F                  ROUND UP TO FULLWORD
VOLOWNR  EQU   VOLOWNF1,*-VOLOWNF1 DEFINE VOLUME ACCESS SECTION  BH6036
         MEXIT
.*
.*       error messages
.*
.ERROR1  MNOTE 8,'*** VOLUME NAME MISSING ***'
         MEXIT
.ERROR2  MNOTE 8,'*** VOLUME NAME GREATER THAN 6 CHARACTERS ***'
         MEXIT
.ERROR3  MNOTE 8,'*** VOLUME TYPE NOT IO,DD,TM,USE,SAVE OR SCRATCH ***'
         MEXIT
.ERROR4  MNOTE 8,'*** INVALID PRESRES VALUE, MUST BE YES|NO ***'
         MEXIT
.ERROR5  MNOTE 8,'*** INVALID AVAIL VALUE, MUST BE YES|NO ***'
         MEXIT
.ERROR6  MNOTE 8,'*** INVALID PRIV VALUE, MUST BE "YES/NO" ***'
         MEXIT
.ERROR7  MNOTE 8,'*** INVALID SHOW VALUE, MUST BE "YES/NO" ***'
         MEND
         EJECT
WVOLRLG  CSECT
*
RLG020   VOLUME  RLG020,TYPE=IO
RLG021   VOLUME  RLG021,TYPE=IO
RLG022   VOLUME  RLG022,TYPE=IO
RLG023   VOLUME  RLG023,TYPE=IO
*
ACT001   VOLUME  ACT001,TYPE=IO
ACT002   VOLUME  ACT002,TYPE=IO
ACT003   VOLUME  ACT003,TYPE=IO
ACT004   VOLUME  ACT004,TYPE=IO
ACT005   VOLUME  ACT005,TYPE=IO
ACT006   VOLUME  ACT006,TYPE=IO
ACT007   VOLUME  ACT007,TYPE=IO
ACT008   VOLUME  ACT008,TYPE=IO
ACT009   VOLUME  ACT009,TYPE=IO
ACT010   VOLUME  ACT010,TYPE=IO
ACT011   VOLUME  ACT011,TYPE=IO
*
ARC031   VOLUME  ARC031,TYPE=IO
ARC032   VOLUME  ARC032,TYPE=IO
ARC033   VOLUME  ARC033,TYPE=IO
ARC035   VOLUME  ARC035,TYPE=IO
ARC036   VOLUME  ARC036,TYPE=IO
ARC037   VOLUME  ARC037,TYPE=IO
ARC038   VOLUME  ARC038,TYPE=IO
ARC039   VOLUME  ARC030,TYPE=IO
*
CPR002   VOLUME  CPR002,TYPE=IO
CPR003   VOLUME  CPR003,TYPE=IO
CPR010   VOLUME  CPR010,TYPE=IO
*
DEV001   VOLUME  DEV001,TYPE=IO
DBA010   VOLUME  DBA010,TYPE=IO
DBS001   VOLUME  DBS001,TYPE=IO
DLT001   VOLUME  DLT001,TYPE=IO
DLT002   VOLUME  DLT002,TYPE=IO
DLT003   VOLUME  DLT003,TYPE=IO
*
KAB001   VOLUME  KAB001,TYPE=IO
KABA01   VOLUME  KABA01,TYPE=IO
KDM010   VOLUME  KDM010,TYPE=IO
*
MPFNEW   VOLUME  MPFNEW,TYPE=IO
MPFOLD   VOLUME  MPFOLD,TYPE=IO
*
OPSRLG   VOLUME  OPSRLG,TYPE=IO
*
SUL001   VOLUME  SUL001,TYPE=IO
*
RLGPAK   VOLUME  RLGPAK,TYPE=DD    For old times sake
SYSB01   VOLUME  SYSB01,TYPE=DD
SYSB02   VOLUME  SYSB02,TYPE=DD
*
SCR100   VOLUME  SCR100,TYPE=TM
SCR101   VOLUME  SCR101,TYPE=TM
*
PROD21   VOLUME  PROD21,TYPE=IO
PROD22   VOLUME  PROD22,TYPE=IO
*
PHX101   VOLUME  PHX101,TYPE=IO
PHX102   VOLUME  PHX102,TYPE=IO
PHX103   VOLUME  PHX103,TYPE=IO
PHX104   VOLUME  PHX104,TYPE=IO
PHX105   VOLUME  PHX105,TYPE=IO
PHX106   VOLUME  PHX106,TYPE=IO
PHX107   VOLUME  PHX107,TYPE=IO
PHX108   VOLUME  PHX108,TYPE=IO
PHX109   VOLUME  PHX109,TYPE=IO
PHX110   VOLUME  PHX110,TYPE=IO
*
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
         VOLUME  SPARE,TYPE=IO
*
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
         VOLUME  SPARE,TYPE=DD
*
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         VOLUME  SPARE,TYPE=TM
         DC      8X'FF'        END OF LIST
         END
//LKED.SYSLMOD DD UNIT=,DSN=WYL.GS.WYL.RLG.LINKLIB(WVOLRLG),
//         SPACE=,DISP=SHR
//*
//NOLIST   EXEC NOLIST
