//SLP#IMAN JOB ,'WYLBUR Int. Manual',TIME=5                             NUM
//*
/*JOBPARM LINES=9999,HOLD=OUTPUT,PURGE=NO
/*JOBPARM FORMS=3HOL,FCB=FULL,LINECT=0,PFORMAT=L132
/*OUTPUT 3HOL FORMS=3HOL,DUPLEX=YES
//*
//SCRIPTMG EXEC SCRIPTMG,VERSION=V851,MGVER=TEST,
//            PARM.SCRIPT=('CO=99,2P,CPI=12,FFTO=1,PL=66,DUPLEX',
//            '+BINDING=C,+FORMS=3HOL,+CHARS=DS12'),
//            PFORMAT=PPMD2P,FORMS=3HOL
//SYSLIB   DD DSN=WYL.GG.SLP.HELPINT,DISP=SHR
//         DD DSN=WYL.GA.MCL.TSS.SCRIPLIB,DISP=SHR
//SYSIN    DD *                                                         UNN
.cm ****************************************************************************
.cm ****************************************************************************
.cm **                                                                        **
.cm **     WYLBUR Internal Commands Driver File                               **
.cm **                                                                        **
.cm **     Written by Lincoln Ong & Susan Plass, 9/28/1999                    **
.cm **                                                                        **
.cm **     Latest modification 09/29/1999 by Susan Plass                      **
.cm **                                                                        **
.cm **     Address all inquiries to:                                          **
.cm **                                                                        **
.cm **          Susan Plass                                                   **
.cm **          Information Technology Services                               **
.cm **          Polya Hall                                                    **
.cm **          Stanford University                                           **
.cm **          Stanford, CA  94305-4136                                      **
.cm **          (650) 723-3302                                                **
.cm **                                                                        **
.cm **     MILTEN, ORVYL are trademarks of                                    **
.cm **            the Leland Stanford Junior University                       **
.cm **                                                                        **
.cm **     WYLBUR is a registered trademark of                                **
.cm **            the Leland Stanford Junior University                       **
.cm **                                                                        **
.cm **     WYLBUR Internal Commands                                           **
.cm **     (C) Copyright 1999 by                                              **
.cm **         The Board of Trustees of the                                   **
.cm **         Leland Stanford Junior University                              **
.cm **                                                                        **
.cm **         All rights reserved                                            **
.cm **                                                                        **
.cm ****************************************************************************
.cm ****************************************************************************
.cm
.cm -------------------------------------------------------------- initial setup
.cm ----------------------------------- symbols
.sr wyldriver = 'WYLBUR Internals Driver    28 September 1999'
.sr site = 'Stanford'
.sr orgtitle = 'Information Technology Systems & Services'
.sr orgname = 'ITSS'
.sr machine = 'IBM 9672'
.sr cpu = '9672'
.cm ----------------------------------- switches
.cm manual = {'WYLBUR'|'ORVYL'|'ALL'}
.cm version = {'PUBLISH'|ONLINE'|'DRAFT'}
.cm
.sr manual = 'WYLBUR'                  ;.cm Manual selection.
.   .sr manual = &u'&manual
.sr version = 'DRAFT'                  ;.cm Manual format.
.   .sr version = &u'&version
.cm
.cm Condition section assignments:
.cm       1 -- [online]  system omission  (not displayed by online HELP)
.cm       2 -- [online]  omit from manual  (displayed by online HELP)
.cm       3 -- [manual]  WYLBUR command
.cm       4 -- [manual]  ORVYL command
.cm       8 --           Line mode specific HELP
.cm       9 --           Page mode specific HELP
.cm   10-19 -- system and optional manual omission
.cm            for experimental and testing use
.cm ----------
.cs 8 ignore
.cs 9 ignore
.cm ----------
.if &manual eq 'WYLBUR' .th .do        ;.cm WYLBUR manual selected.
.   .cs 4 ignore                       ;.cm Omit ORVYL sections.
.   .sr docnum = '#???'
.   .sr docpubdate = 'September 1999'  ;.cm latest revised edition.
.   .sr doctitle = 'WYLBUR Internal Command Reference Manual'
.   .sr docedition = 'First Edition'
.do end
.if &manual eq 'ORVYL' .th .do         ;.cm ORVYL manual selected.
.   .cs 3 ignore                       ;.cm Omit WYLBUR sections.
.   .sr docnum = '#???'
.   .sr docpubdate = '???'             ;.cm 10/22/81, no recent revised edition.
.   .sr doctitle = 'ORVYL Internal Command Reference Manual'
.   .sr docedition = '???'
.do end
.if &manual eq 'ALL' or &manual eq 'STS' .th .do
.   .sr docnum = '#???'
.   .sr docpubdate = '???'
.   .sr doctitle = 'Stanford Timeshare System'
.   .sr docedition = '???'
.do end
.if &version ne 'ONLINE' .cs 2 ignore  ;.cm default
.cm * BUG *    .   .el .cs 1 ignore
.cm ----------
.cm ----------------------------------- environment
.tm 6;.hm 1;.sr pubMYhs = 1
.bm 6;.fm 1;.sr pubMYfs = 1
.rt top all ++++
.rt bottom all ++++
.im boldital
.im scriptmg
.if &u'&chars eq 'DS12' or &u'&chars eq 'U670' .im arrows
.im syspub layout=manual hy=off pl=66 ll=78
.dc rb \
.if &u'&chars eq 'U340' .th .do
.   .tr 4F 16  4A 9E
.   .sr copyright = &x'DC                ;.cm copyright symbol
.   .sr regtm = &x'9F                    ;.cm registered trademark symbol
.do end
.if &u'&chars eq 'U670' .th .do
.   .tr 4F FA
.   .sr copyright = &x'DC                ;.cm copyright symbol
.   .sr regtm = &x'9F                    ;.cm registered trademark symbol
.do end
.if &u'&chars eq 'DR12' .th .do
.   .sr copyright = &x'ED                ;.cm copyright symbol
.   .sr regtm = &x'FC                    ;.cm registered trademark symbol
.do end
.ud on 40 . , : 5E ? ! ' " ( ) [ ] { }
.cm --------------------------------------------------------------------- macros
.cm ----------------------------------- boxon & boxoff
.dm boxon begin
.   .sk 1 a c;.bx new &SYSIN+1 &SYSINR+&SYSCL
.   .in +3 -3;.sk 1 a
.dm boxon end
.cm ----------
.dm boxoff /.sk 1 a/.in -3 +3/.bx off/
.cm ----------------------------------- item & itemix
.dm item begin
.   .pa
.   .sr command = '&*1'
.   .if &command(1:1) ne &u'&command(1:1) .th .do
.       .rt top all +&u'&command(1:1)&command(2:&L'&command)++&doctitle+
.   .do end
.       .el .rt top all +&command++&doctitle+
.   .if &version eq 'PUBLISH' .rt bottom all ++- % -++
.       .el .rt bottom all +&*2+- % -+&SYSDATE+
.   .'ix '&*1'
.dm item end
.cm ----------
.dm itemix /.'ix &*1/
.cm ----------------------------------- optix
.dm optix begin
.   .sr optflag = 0
.   .sr option = &'lower(&*1)
.   .sr accopt =' account-options gg.uuu gg uuu '
.   .sr colopt = ' collect-options line-number '
.   .sr dsname = ' dsname '
.   .sr foropt = ' format-options '
.   .sr jobid = ' jobid jobstem jobnumber &uuu '
.   .sr lenopt = ' length-options '
.   .sr linnum = ' line-number line-number1 line-number2 '
.   .sr lisopt = ' list-options '
.   .sr outopt = ' output-options '
.   .sr porid = ' port-id '
.   .sr queopt = ' queue-options '
.   .sr range = ' range '
.   .sr volume = ' volume '
.   .sr execopt = ' expression relational-operator string text user-variable '
.   .sr miscopt = ' character front-end library message n name option project '
.   .sr miscopt2 = ' topic tab-positions tape-number terminal-type '
.   .sr miscopt3 = ' user-id user-command word ? * '
.   .sr *cmdexcpt2 = ' ELSE COMMAND HELP COMMAND IF COMMAND MICRO COMMAND'
.   .sr *cmdexcpt2 = '&*cmdexcpt2 PASS COMMAND THEN COMMAND TRY COMMAND '
.   .if &'find(&*cmdexcpt2,&'upper(&command)) ne 0 .th .do
.       .if &'find(' COMMAND ',&'upper(&option)) ne 0 .sr optflag = 1
.   .do end
.   .sr *cmdexcpt3 = ' MAIL COMMAND SET ACTIVE COMMAND SET TAPE COMMAND '
.   .if &'find(&*cmdexcpt3,&'upper(&command)) ne 0 .th .do
.       .if &'find(' NAME ',&'upper(&option)) ne 0 .go REGOPT
.   .do end
.   .if |&'upper(&command)| eq 'SET PREFIX COMMAND' .th .do
.       .if &'find(' PREFIX ',&'upper(&option)) ne 0 .sr optflag = 1
.   .do end
.   .sr *cmdexcpt4 = ' COUNT COMMAND DECLARE COMMAND READ COMMAND '
.   .if &'find(&*cmdexcpt4,&'upper(&command)) ne 0 .th .do
.       .if &'find(' STRING ',&'upper(&option)) ne 0 .go REGOPT
.   .do end
.   .if |&'upper(&command)| eq 'SHOW CATALOG COMMAND' .th .do
.       .if &'find(' VOLUME ',&'upper(&option)) ne 0 .go REGOPT
.   .do end
.   .if &'find(&accopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&colopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&dsname,&option) ne 0 .sr optflag = 1
.   .if &'find(&foropt,&option) ne 0 .sr optflag = 1
.   .if &'find(&jobid,&option) ne 0 .sr optflag = 1
.   .if &'find(&lenopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&linnum,&option) ne 0 .sr optflag = 1
.   .if &'find(&lisopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&outopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&porid,&option) ne 0 .sr optflag = 1
.   .if &'find(&queopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&range,&option) ne 0 .sr optflag = 1
.   .if &'find(&volume,&option) ne 0 .sr optflag = 1
.   .if &'find(&execopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&miscopt,&option) ne 0 .sr optflag = 1
.   .if &'find(&miscopt2,&option) ne 0 .sr optflag = 1
.   .if &'find(&miscopt3,&option) ne 0 .sr optflag = 1
.   .if &optflag eq 1 .th .do
.       .'ix '&option' 'on &command'
.       .me
.   .do end
...REGOPT
.   .'ix '&*1 Option' 'on &command'
.dm optix end
.cm ----------------------------------- optbegin & optend
.dm optbegin /.co on/.of +16/
.dm optend /.of &SYSOF/.co off/
.cm ----------------------------------- docbegin & docend
.dm docbegin /.co on/.in +16/
.dm docend /.in -16/.co off/
.cm ----------------------------------------------------------------- title page
.im .titlpge
.cm ------------------------------------------------------------- copyright page
.im .cpyrght
.cm ---------------------------------------------------------- table of contents
.if &version eq 'PUBLISH' .rt bottom all ++- % -++
.   .el .rt bottom all ++- % -+&SYSDATE+
.rt top all +Contents++&doctitle+
.contents 'TABLE OF CONTENTS'
.cm ------------------------------------------------------------ acknowledgments
.pa odd                               ;.cm <-- page eject for odd page alignment
.rt top all +Acknowledgments++&doctitle+
.im .acknowl                           ;.cm acknowledgements
.cm -------------------------------------------------------------------- preface
.rt top all +Preface++&doctitle+
.im .abstrac                           ;.cm abstract
.rt top all ++++
.cm ---------------------------------------------------------- command reference
.pa odd
.part 'Command Reference'
.pa odd ;.* <-- added to force chapters to start on a odd page (SCRIPT/SYSPUB bug).
.rt top all +Detailed Command Description++&doctitle+
.im .cmdref                            ;.cm command reference
.fo off
.im .members                           ;.cm [member list]
.cm ----------------------------------------------------------------- appendices
.rt top all ++++
.if &version eq 'PUBLISH' .rt bottom all  ++- % -++
.   .el .rt bottom all ++- % -+&SYSDATE+
.cm ---------------------------------------------------------------------- index
.cm ----------------------------------- additional entries
.ix '(ATTN)' . 'see (BREAK)'
.cm ----------------------------------- page format
.hl 0 INDEX
.pa odd                               ;.cm <-- page eject for odd page alignment
.ju off
.rt top all +Index++&doctitle+
.if &version eq 'PUBLISH' .rt bottom all ++- % -++
.   .el .rt bottom all ++- % -+&SYSDATE+
.cm ----------------------------------- format macros
.dm IEH begin
.   .cw `
.   .in
.   .sk 2
.   .cc 10
.   .bx 6 10
       &1
.   .bx off
.   .sk 2
.dm IEH end
.cw ;
.dm IE1 /.in/
.dm IE2 /.in/.in 3/
.dm IE3 /.in/.in 6/
.cm ----------------------------------- format
.* Use this for V860 or greater .dc IXI &SYSRB &SYSBS
.sp 5
.ce INDEX
.sp 4
.cd set 2 4
.tb set #
.sr SYSIXREF = ' # '
.tb '.'&SYSCL.r
.ix . dump
.cm ---------------------------- End of Driver ---------------------------------
//*
//CONVERT.SYSOUT DD UNIT=SYSDA,DSN=&TEMP,                               NUM
//         SPACE=(TRK,(50,50),RLSE),DCB=(RECFM=VBA,BLKSIZE=23476),
//         DISP=(,PASS)
//*
//PRESS    EXEC IOPROGM,COND=(5,LT),
//            PARM='REBLOCK OUTFORMAT=EDIT'
//INPUT    DD *                                                         UNN
OPTIONS: UNN CC NOEJECT ID=#WMAN SYSOUT=G FORMS=3HOL FCB=FULL DUPLEX
//         DD DSN=&TEMP,DISP=(OLD,DELETE)                               NUM
//OUTPUT   DD UNIT=SYSDA,
//            DSN=WYL.GG.SLP.WYLINT,SPACE=(TRK,(30,30),RLSE),
//            DISP=(,CATLG)
//*
//*PURGE    EXEC PURGE
