;;
;;  LOCK -- Command to lock-out the terminal until the correct
;;    password is provided.  Based on Sunny's LOCKX exec file.
;;
;;  Modifications:
;;     12/15/91   ltm  Fixed INPUT statement at "...terminal locked,
;;                     enter password..." prompt (too many closing parens)
;;     12/14/91   lso  modified treatment of upper for input.
;;      7/10/91   DAR  Add Samson lock/unlock support.
;;      9/14/88   Niz  Minor changes as per JNK.
;;      9/12/88   Niz  Original version.
;

xproc () begin
   on error cmd 'pcall errorexit'
   on attn cmd 'on attn reenable'

   prism_flag = false
   if (parm_string ne '') begin
      ps = strip(upper(parm_string))
      if (ps eq '%%%PRISM') prism_flag = true
      else begin
         write strip(parm_string) || ': unrecognized options'
         write 'The LOCK command doesn''t take any options.'
         write 'No action taken.'
         xreturn
      end
   end

   if (not prism_flag) \
      clear screen

   x.sam_mode = false
   pcall samson_validate

main_loop:
   while (true) begin
      write ''
      write substr(xdate,1,20) || ' -- ' || name \
         || ' (' || group || '.' || user || ')'
      write ''

      pcall terminal_lock
   end
end

;
;; Check if terminal is a samson terminal and if it supports
;; the local lock command to prevent scrollback inside terminal
;; window during lock.
;
proc samson_validate() begin
   dcl num sver
   dcl str ostype

   if (samson) begin
      ; Carefully assign the version number below in case it is
      ;   non-numeric...
      try quietly sver = substr(sam_version, 1, 3)
      ostype = upper(substr(sam_os, 1, 3))

      if (ostype eq 'DOS') begin
         ;
         ; check for pc valid version
         ;
      end
      elseif (ostype eq 'MAC') begin
         ;
         ; check for mac valid versions
         ;
         if (sver ge 3.1) begin
            x.sam_mode = true
         end
      end
   end
end


proc terminal_lock() begin
   if (x.sam_mode) try quietly samson lock

   pw = strip(input('This terminal is locked.  \
      Enter your password to continue... ', \
      'upper noecho attn'))

   if (pw ne '') begin
      if (rf_pw_check(pw)) begin
         if (x.sam_mode) try quietly samson unlock
         xreturn  ; LOCK command password check
      end
   end

   if (ioresult ne 'OK') pw = 'help'  ; Pressed ATTN

   if (pw ne '') begin
      token = scan_token(pw)
      if (token eq 'LOGON' or token eq 'LOGOFF' \
         or token eq 'LOGIN' or token eq 'LOGOUT') \
         try &(pw)
      else begin
         write ''
         write 'This session is locked, you must supply your \
            password to continue.'
         write ''
         write 'If you don''t know the password, then type \
            LOGON or LOGOFF to start'
         write 'a new session.'
      end
   end
end


proc errorexit() begin
   on error reenable
   if (vartype('x.errcount') eq 'UNDEFINED') x.errcount = 0
   x.errcount = x.errcount + 1

   if (x.errcount le 20) xexit main_loop
   try logoff clear ; shouldn't ever happen
   xreturn
end
