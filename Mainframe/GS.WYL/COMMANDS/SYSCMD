;
;;  SYSCMD -- Send a Wylbur command to a different system by
;;      submitting a BATWYL job.
;;
;;  On entry, command parm is "systemname command" (for example,
;;  "sysc show users").
;;
;;
;;  Written, 8/88, Niz
;;
;;  Modifications:
;;    08/08/88  Niz  Created.
;;    04/19/89  Niz  Add "NOXHOLD" to RUN command (as per MCL
;;                     suggestion).
;;    05/12/90  jws  Add dest option to run command
;

xproc () begin
   on error cmd 'pcall errorexit'
   on attn  cmd 'pcall attnexit'
   x.origact = actno

   sysname = ''
   syscall scan_parm(sysname, parm_string)
   sysname = upper(sysname)

   if (sysname eq '') begin
      write 'Missing system name (e.g., SYSA, SYSC).'
      pcall cleanup('')
   end

   open cmdjcl title 'Batwyl job'
   cmd = strip(parm_string)
   if (substr(cmd,1,1) eq ';') cmd = ''
   if (cmd ne '') begin
      putend ;<---- Special "first" line ---->
      putend &(cmd)
   end
   else begin
      try write 'Enter commands for ' || sysname \
         || ' (press BREAK when you are done)...'
      try collect 1 by 1
      if (lines eq 0) begin
         close
         try write 'No commands entered; no action taken.'
         pcall cleanup('')
      end

ask_loop:
      do_it = yesno('Execute these commands on ' || sysname, \
         'yes no attn')
      if (do_it eq 'ATTN') begin
         write 'No action taken.'
         pcall cleanup('')
      end
      if (do_it eq 'NO') begin
         write 'Edit the commands in your Active file and then \
            type "XGO".'
         xpause
         goto ask_loop
      end
   end

   number 1 by 1
   putline .01 //&CMD JOB ,CLASS=F
   putline .015 //*  This JCL is generated by SYSCMD exec to execute
   putline .016 //*  a command like "SYSB <any command>".
   putline .02 /*JOBPARM ONLINE=NO,LOG=NO,JCL=NO
   putline .03 // EXEC PGM=BATWYL
   putline .04 //SYSPRINT DD  SYSOUT=$
   putline .05 //SYSIN DD *,DCB=LRECL=150
   putend ;<---- Special "last" line ---->

   quiet run unn hold noxhold sys &(sysname) dest &(mach) nonotify
   open cmdout title 'Output from &(sysname) command'
   waiting = false

fetch_loop:
   try quiet sync * wait 30
   if (tryattn) pcall attnexit
   try quiet locate *    ;; temporary (see JWS)
   try quiet fetch * q out nomsg by 1
   if (tryattn) pcall attnexit

   if (tryerr or lines eq 0) begin
      if (not waiting) begin
         write '[Waiting...] ' nonl
         waiting = true
      end
      wait 5
      goto fetch_loop
   end

   if (waiting) begin
      write s'0d'||'              '||s'0d' nonl
   end

   if (lines ne 0) begin
      quiet purge *
      point '<---- Special "first" line ---->' (1) nolist
      try quiet delete f/*+1 nolist
      point '<---- Special "last" line ---->' (1) nolist
      try quiet delete */last nolist
      if (lines ne 0) try list unn
   end

   close
   close
end


; <.page>

proc errorexit() begin
   while (actno ne x.origact) close
   try write 'An error occurred in the SYS command.'
   try write '  Error info is: '
   try write errinfo
   try write errmsg
   pcall cleanup('')
end


proc attnexit() begin
   try write 'BREAK interrupted command processing.'
   pcall cleanup('')
end


proc cleanup(retinfo) begin
   if (actno ne x.origact) pick &(x.origact)
   xreturn &(retinfo)
end
