;
;;  SETFAX -- SET FAX command.
;;
;;  Modifications:
;;     9/20/91  jws  Initial version.
;

xproc () begin
   x.origact = actno
   x.attn = 0                      ; attn counter (see attnexit)

   x.pgm = 'SET FAX'               ; program name
   x.maint = '(gg.jws)'            ; maintenance people

   on error cmd 'pcall errorexit'
   on attn  cmd 'pcall attnexit' int

   dcl string rc, token, stype

   options = strip(parm_string)

; Check for null quoted string

   if (sub(options,1,1) eq "'" or sub(options,1,1) eq '"') begin
      if (size(options) eq 2 and sub(options,1,1) eq sub(options,2,1)) \
         options = ''
      else begin
         comm Invalid syntax in SET FAX options
         pcall cleanup ('error')
      end
   end

; Do simple parm scan, check for unbalanced quotes

   stemp = options
   while (true) begin
      syscall scan_parm (token, stemp, stype, ' ,=')
      if (token eq '' or token eq ';') begin
         ses.fax_options = options
         pcall cleanup ('')
      end
      if ((sub(token,1,1) eq "'" or sub(token,1,1) eq '"') and \
            (size(token) eq 1 or sub(token,1,1) ne sub(token,size(token),1))) begin
         comm Missing quote in SET FAX options
         pcall cleanup ('error')
      end
   end
end

; <.page>
;
;  cleanup -- This routine is always called to return to the
;    user.  It handles cleanup and restoring the user state.
;

proc cleanup(opt) begin
   pick &(x.origact)

   if (opt eq 'error') \
      opt = "error errmsg=''"
   if (opt eq 'attn') \
      opt = "attn attnid=ATTN"
   xreturn &(opt)
end



;<.page>
;
;  attnexit -- Attention exit routine.
;

proc attnexit() begin
   pcall cleanup('attn')
end



;
;  errorexit -- Routine to handle an error in the exec.
;    Right now all we do is log the error information.
;

proc errorexit() begin
   write '----'
   write 'An error occurred in the ' || x.pgm || ' command.'
   write ''
   write 'Debugging information:'
   write '   errmsg: '||errmsg
   write '  errinfo: '||errinfo

   write ''
   write '--> show vars type error'
   try show vars type error

   write ''
   write '--> show vars type x'
   try show vars type error

   write ''
   write '--> show vars type ses'
   try show vars type error

   write ''
   write 'End of diagnostics.'

   pcall cleanup('error')
end
