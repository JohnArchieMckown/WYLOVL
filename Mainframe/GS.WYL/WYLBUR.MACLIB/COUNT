         MACRO                                                                  
&LABEL   COUNT &VALUE,&REG=0,&REG2=,&INCR=1,&AREA=,&POINTER=,&LENGTH=           
.* count is used to add incr to value and store it back                         
.* reg is used as the register to perform the count.                            
.* the incr may be any value from 0-4095. halfword adds still                   
.*     work for all 16 bits as a logical result because of                      
.*     2's complement arithmetic.                                               
.*                                                                              
.* length=(2|4) can be coded to specify the length of the count                 
.*    field.  if omitted, the implied length of the field will                  
.*    be used - it will work for a, f, or h types - if the type                 
.*    is undefined, length=4 is assumed.                                        
.*                                                                              
.* if there is no addressability to the count field a combination of            
.* area= and pointer= can be specified.  for example,                           
.*      --> count logoff,area=counts,pointer=cvcounts                           
.* would load the word at cvcounts which is defined to point to                 
.* "counts".  another example might be:                                         
.*      --> count excps,area=stat,pointer==a(stat)                              
.* which would require only addressability to the stat adcon.  this             
.* form of the count macro uses two registers (&reg, &reg2); however,           
.* if a register already points to the count area, pointer=(gpr) can            
.* be specified.  a final example,                                              
.*      --> count cvlists,area=cp,pointer=(12)                                  
.*                                                                              
.* macro modified by jim nisbet, 4/21/75, to allow area= and pointer=           
.*       and length= for those who care to get fancy.                           
.*                                                                              
         LCLC  &H,&TP,&L,&LPTR,&EXPR,&R2                                        
&R2      SETC  '&REG2'                                                          
         AIF   ('&LENGTH' EQ '').NOTIMPL                                        
         AIF   ('&LENGTH' EQ '2').GOH                                           
         AIF   ('&LENGTH' EQ '4').GO                                            
         MNOTE 4,'LENGTH=&LENGTH IS INVALID -- MUST BE 2 OR 4'                  
         MEXIT                                                                  
.NOTIMPL ANOP                                                                   
&TP      SETC  T'&VALUE           set tp to type of value                       
         AIF   ('&TP' EQ 'A' OR '&TP' EQ 'F').GO                                
         AIF   ('&TP' EQ 'H').GOH                                               
         AIF   ('&TP' NE 'U').ERROR                                             
         MNOTE 4,'TYPE OF &VALUE IS UNDEFINED -- LENGTH=4 ASSUMED'              
         AGO   .GO                                                              
.ERROR   MNOTE 4,'TYPE OF &VALUE IS &TP -- NOT A, F, OR H'                      
         MEXIT                                                                  
.GOH     ANOP                                                                   
&H       SETC  'H'                                                              
.GO      ANOP                                                                   
&L       SETC  '&LABEL'                                                         
         AIF   ('&AREA' EQ '').NOEXPR                                           
         AIF   ('&POINTER' NE '').GOTPTR                                        
         MNOTE 4,'AREA SPECIFIED AND NO POINTER WAS GIVEN'                      
         MEXIT                                                                  
.GOTPTR  ANOP                                                                   
&LPTR    SETC  '&POINTER'                                                       
         AIF   ('&POINTER'(1,1) EQ '(').PREG                                    
         AIF   ('&R2' NE '').GOTA2R                                             
&R2      SETC  '15'       supply a default reg2=15                              
.GOTA2R  ANOP                                                                   
 AIF   ('&R2' NE '0' AND '&R2' NE 'R0' AND '&R2' NE '&REG').GR2                 
         MNOTE 4,'REG2=&REG -- INVALID (OR INCONSISTENT) REGISTER'              
         MEXIT                                                                  
.GR2     ANOP                                                                   
&L       L     &R2,&POINTER      get address of area                            
&L       SETC  ''                  DON'T generate any more labels               
&LPTR    SETC  '(&R2)'                                                          
.PREG    AIF   ('&LPTR' NE '(0)' AND '&LPTR' NE '(R0)' AND '&LPTR' NE 'X        
               (&REG)').PROK                                                    
  MNOTE 4,'POINTER=&POINTER -- REGISTER USED INVALID (OR INCONSISTENT)'         
         MEXIT                                                                  
.PROK    ANOP                                                                   
&EXPR    SETC  '&VALUE-&AREA&LPTR'                                              
         AGO   .DO                                                              
.NOEXPR  AIF   ('&POINTER' EQ '').NOPTR                                         
         MNOTE 4,'POINTER=&POINTER -- IGNORED'                                  
.NOPTR   AIF   ('&R2' EQ '').NOREG2                                             
         MNOTE 4,'REG2=&R2 -- IGNORED (SECOND REGISTER NOT REQUIRED)'           
.NOREG2  ANOP                                                                   
&EXPR    SETC  '&VALUE'                                                         
.DO      ANOP                                                                   
&L       LA    &REG,&INCR          put increment in register                    
         A&H   &REG,&EXPR          add in old count                             
         ST&H  &REG,&EXPR          save new count                               
         MEND                                                                   
