;
;;  _REQUEST -- Network request subroutine.
;;
;;    This routine opens a TCP connection to the host/port
;;    specified.  It then sends the info string across
;;    that TCP connection and collects any responses in the
;;    current active file.
;;
;;    It is designed to work for the FINGER and WHOIS services.
;;
;;
;;  Created, 9/02/87, Niz
;;
;;  Modifications:
;;     4/10/88  Niz     Second version, uses a direct TCP
;;                        connection.
;;     5/24/88  Niz     Make commands interruptable by ATTN.
;;     6/08/88  Niz     A little better error messages.
;



xproc (pgm, host, port, info, rc) begin
   x.origact = actno
   x.attn = 0                         ; attn counter (see attnexit)

   x.pno = 0

   on error cmd 'pcall errorexit'
   on attn interrupt

;
;  Open connection to remote computer.
;

   try syscall net_open(x.pno, 'host='||host||' port=' || port, rc)
   if (rc ne 'OK') begin
      emsg = pgm || ' is not available, ' \
         || host || ' is not responding--' || rc
      if (rc eq 'ERROR: UNKNOWN HOST') \
         emsg = host || ' is an unrecognized host name.'
      elseif (rc eq 'RESET') \
         emsg = host || ' is not accepting ' || pgm || ' requests.'
      putend &(emsg)
   end
   else begin

;
;  Send info as the first (and only) line of data.
;

      syscall net_write(x.pno, '', info || s'0d25', rc)

      dummystr = ''
      syscall net_control(x.pno, 'eof', dummystr, rc)

;
;  Read back any responses in to the current Active file.
;

      rcount = 0
      try syscall net_readfile(x.pno, '', rcount, rc)
      if (rc ne 'END OF FILE') \
         putend [&(pgm) response is not complete; reason=&(rc)]
   end

;
;  Close connection.
;

   try syscall net_close(x.pno)

   xreturn (rc)
end



;
;  errorexit -- Error exit routine.
;

proc errorexit() begin
   if (x.pno ne 0) try syscall net_close(x.pno)

   xreturn error
end
