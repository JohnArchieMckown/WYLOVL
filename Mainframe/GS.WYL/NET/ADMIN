;
;  LINDY ADMIN
;
;  Exec to create actually create a new Lindy account.  This can
;  only be used by privileged users.
;
;  Created 9/88, Niz
;
;  Modifications:
;    09/24/88  Niz  Original version.
;    02/20/89  Niz  Change to automatically update LINDY.ACCOUNTS
;                   log file.
;    08/15/89  Niz  Add disk quota stuff.
;

xproc () begin
   x.attn = 0
   x.origact = actno

   x.pgm = 'LINDY ADMIN'             ; Program name
   x.version = '1.01'                ; LINDY ADMIN version
   x.maint = 'netexec-maint'                ; Maintenance (see errorexit)

   on attn  cmd 'pcall attnexit'
   on error cmd 'pcall errorexit'

   write 'Lindy Accounting Maintenance (version '||x.version||')'
   write ''
   on lindy: echo "Lindy is up."
   write ''

   yn = yesno('Do you want to open a new Lindy account', 'yes no')
   if (yn ne 'YES') pcall cleanup
   write ''

; --- Get the account information.

main_loop:
   gname = ''
   while (gname eq '') \
      gname = input('Enter Lindy user name? ')

   gwyl = ''
   while (gwyl eq '') begin
      gwyl = upper(input('Enter WYLBUR account? '))
      if ((size(gwyl) ne 6) or substr(gwyl,3,1) ne '.') begin
         write gwyl || ': invalid Wylbur account (GG.UUU)'
         gwyl = ''
      end
   end

   guserid = ''
   while (guserid eq '') \
      guserid = lower(input('Enter Lindy user-id? '))

   gpass = ''
   while (gpass eq '') \
      gpass = input('Enter Lindy password? ')

; --- Now open the Lindy account.

   on lindy as root: nu-add "&(guserid)" "&(gpass)" "&(gname)"; \
       echo $status > /tmp/lindy.admin
   open
   try use /tmp/lindy.admin on lindy
   try quiet scr /tmp/lindy.admin on lindy
   status = line(first)
   close
   if (status ne '0') begin
      write '*** Command failed; no Action taken. ***'
      goto try_another
   end

; --- Set disk quotas.

   write 'Setting disk quotas.'
   on lindy as root: edquota -p proto "&(guserid)"; \
       echo $status > /tmp/lindy.admin
   open
   try use /tmp/lindy.admin on lindy
   try quiet scr /tmp/lindy.admin on lindy
   status = line(first)
   close
   if (status ne '0') begin
      write '*** Couldn''t set disk Quota ***'
      goto try_another
   end
   write ''

; --- Finish up.

   on lindy as root: nu-access &(guserid) &(gwyl)
   on lindy as root: nu-update

   try set master &(gwyl) netuser &(guserid) nover

   gnotify = yesno('Send notification to ' || gwyl, 'yes no')
   if (gnotify eq 'YES') pcall notify(gwyl, guserid)

; --- Update our log file with the details.

   open lindyacc title 'Lindy accounts'
   try copy from lindy.accounts account netexec-maint
   putend
   putend --- &(xdate) --- &(x.pgm) &(x.version)
   putend User name              = &(gname)
   putend Lindy account          = &(guserid)
   putend Wylbur account         = &(gwyl)
   putend Agreed to usage policy = YES
   putend Account opened notification sent = &(gnotify)
   try save lindy.accounts account netexec-maint replace
   close

; --- All done, ask if OK to do it again.

try_another:
   write ''
   yn = yesno('Do you want to open another Lindy account', \
      'yes no attn')
   write ''

   if (yn eq 'YES') goto main_loop

   write 'LINDY ADMIN completed.'

   pcall cleanup
end



; <.page>

;  notify -- Notify user that their Lindy account is now open.

proc notify(wylacct, lindyacct) begin
   open
   try use wyl.gs.wyl.net#.admin
   if (tryerr or lines eq 0) begin
     write 'Notification text not available (show Niz).'
     close
     xreturn
   end

   ch '%USER' to '&(lindyacct)' n
   try mail to (&(wylacct)) subject "LINDY NEWUSER response"
   close
end



; <.page>

;  attnexit -- The user pressed BREAK, go away without a fight.

proc attnexit() begin
   try write 'No action taken.'
   pcall cleanup
end



;  errorexit -- Generic error exit routine; complains about an
;     error in the "x.pgm" program and then mails debugging
;     information to "x.maint" users.

proc errorexit() begin
   try write 'An error occurred in the ' || x.pgm || ' command.'
   try write ''
   try write 'Please try again later.'
   open execerr temp
   putend An error occurred in the &(x.pgm) program.
   putend
   putend Debugging information:
   putend   errmsg: &(errmsg)
   putend   errinfo: &(errinfo)

   putend
   putend --> show vars type error
   dump vars type error

   putend
   putend --> show vars type x
   dump vars type error

   putend
   putend --> show vars type ses
   putend show vars type ses

   putend
   putend End of diagnostics.
   try quiet mail to &(x.maint) title '&(x.pgm) error'
   close

   pcall cleanup
end



;  cleanup -- This is the one place where we return to the user.
;    It is responsible for cleaning up any temporary environment
;    we might have set up.
;

proc cleanup() begin
   pick &(x.origact)
   xreturn
end
