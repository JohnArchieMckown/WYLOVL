;
;  LINDY NEWUSER
;
;  Exec to create a new Lindy account for a user.  Right now all
;  it does is send electronic mail to someone to who will open
;  the account.
;
;  Created 5/87, Niz
;
;  Modifications:
;    05/18/92  Add SYSA only check for requests.
;    04/20/89  Add check for commercial users.
;    12/18/87  Change userid prompt to ask for 1-8 character id.
;    10/24/87  Add Lindy usage policy update.
;    05/26/87  Tidy things up.
;

xproc () begin
   x.attn = 0
   x.origact = actno

   x.pgm = 'LINDY NEWUSER'           ; Program name
   x.version = '1.02'                ; LINDY NEWUSER version
   x.maint = 'netexec-maint'                ; Maintenance (see errorexit)

   x.accounting = '(netexec-maint,gg.sch)'  ; famous Lindy accounting dept

   on attn  cmd 'pcall attnexit'
   on error cmd 'pcall errorexit'

   wylacct = substr(account,5,2) || '.' || substr(account,1,3)

   write '--- LINDY NEWUSER: Open a new Lindy account ---'

; --- Only allow SYSA usage

   if (machine ne 'SYSA') begin
      write 'Lindy accounts can not be opened from the ' || machine \
         || ' computer.'
      pcall cleanup
   end

; --- Check for commercial user.

   if (left(sof,1) eq '2' \
         or left(sof,1) eq 'D') begin     ; Commercial user...
      if (sof ne '20' and sof ne '29') begin  ; Not faculty/staff or student...
         if (sof ne 'D4') begin
            write ''
            try list from wyl.gs.wyl.lindy.cantopen unn
            pcall cleanup
         end
      end
   end

; --- Write out usage policy.

   write ''
   write 'If you have forgotten your password, or need some help '
   write 'with setting up your account please send mail to \
      ACCOUNTS@LINDY.'
   write ''
   write 'Before we can open a Lindy account for you, you must \
      agree that you will'
   write 'obey the Lindy usage policy.  There is currently no \
      charge for Lindy usage.'
   write 'However, abuse of your Lindy account will result in it \
      being closed.'
   write ''
   anything = input('Press RETURN for Lindy Usage Policy \
      (60 lines)... ')
   write ''
   try list from wyl.gs.wyl.lindy.policy unn
   write ''
   policy = yesno('Do you agree to follow this policy')
   if (policy ne 'YES') begin
      write ''
      write 'Please type "YES" if you will follow these guidelines.'
      write 'If you do not want to agree to these restrictions then \
         type "NO".'
      policy = yesno('Do you agree to follow this policy')
      if (policy ne 'YES') begin
         write 'No Lindy account will be opened.'
         pcall cleanup
      end
   end

; --- Get Lindy account name

retry:
   write ''
   write 'Pick a name (from 3 to 16 characters) for your Lindy \
      account.'

   lindyacct = ''
   repeat begin
      inp = strip(input('Enter your new Lindy account name? '))
      cases begin
         case (inp eq '') begin
            write 'Press BREAK if you want to stop this procedure.'
         end
         case (inp eq '?' or lower(inp) eq 'help') begin
            write 'Make up a name from 3 to 8 characters.'
            write 'It will be your Lindy account name.'
         end
         case (find(inp,' .,') ne 0)  begin
            write '"'||inp||'" is not a valid name.'
            write 'The account name must be one word, and must \
               not have any . or , characters in it.'
         end
         case (size(inp) lt 3) begin
            write '"'||inp||'" account name is too short.'
         end
         case (size(inp) gt 8) begin
            write '"'||inp||'" account name is too long.'
         end
         case (true) begin
            lindyacct = lower(inp)
         end
      end
   end
   until (lindyacct ne '')

; --- Get Lindy password

getpass:
   lindypass = ''
   repeat begin
      inp = strip(input('Enter your new Lindy password? ', 'noecho'))
      cases begin
         case (inp eq '') begin
            write 'Press BREAK if you want to stop this procedure.'
         end
         case (inp eq '?' or lower(inp) eq 'help') begin
            write 'Make up a password.'
            write 'It will be the password for your new Lindy \
               account.'
         end
         case (size(inp) lt 5) begin
            write 'Password is too short, must be at least 5 \
               characters long.'
         end
         case (size(inp) gt 16) begin
            write 'Password is too long, can not exceed 16 \
               characters.'
         end
         case (true) begin
            lindypass = inp
         end
      end
   end
   until (lindypass ne '')

; --- Double check password

   repeat begin
      inp = strip(input('Enter your password again for verification? \
         ', 'noecho'))
   end
   until (inp ne '')
   if (lower(lindypass) ne lower(inp)) begin
      write 'Verification failed, try supplying a password again.'
      write ''
      goto getpass
   end

; --- Get user name

   lindyname = name
   if (lindyname ne '') begin
      if (yesno('Is your name "'||lindyname||'"') ne 'YES') \
         lindyname = ''
   end

   if (lindyname eq '') begin
      repeat begin
         inp = strip(input('Enter your name? '))
         cases begin
            case (inp eq '') begin
               write 'Press BREAK if you want to stop \
                  this procedure.'
            end
            case (inp eq '?' or lower(inp) eq 'help') begin
               write 'Enter your personal name.'
            end
            case (true) begin
               lindyname = inp
            end
         end
      end
      until (lindyname ne '')
   end

; --- Final check

   write ''
   write '---'
   write ''
   write 'Please double-check this information:'
   write ''
   write '  Personal name is:                '||lindyname
   write '  Open new Lindy account:          '||lindyacct
   write '  To be used with Wylbur account:  '||wylacct
   write '  You agreed to obey Lindy policy: '||policy
   write ''

   if (yesno('Is this information correct') ne 'YES') begin
      write '---'
      goto retry
   end

; --- Send mail to the entire Lindy accounting department!

   open xinfo title '&(x.pgm) info' temp
   putend --- LINDY NEWUSER Request (version &(x.version))
   putend
   putend Name                    = &(lindyname)
   putend Wylbur account          = &(wylacct)
   putend
   putend User wants lindy userid = &(lindyacct)
   putend Password                = &(lindypass)
   putend
   putend Agreed to Lindy usage policy = &(policy)
   quiet try mail to &(x.accounting) title '&(x.pgm) request'
   delete f/l ; security ???
   close

   write ''
   write '---'
   write ''
   write 'Your Lindy account will be opened within two days.'
   write 'Mail will be sent to '||wylacct||' when the account is \
      available for use.'
   write ''
   write 'End of LINDY NEWUSER procedure.'

   pcall cleanup
end



; <.page>

;  attnexit -- The user pressed BREAK, go away without a fight.

proc attnexit() begin
   try write 'No action taken.'
   pcall cleanup
end



;  errorexit -- Generic error exit routine; complains about an
;     error in the "x.pgm" program and then mails debugging
;     information to "x.maint" users.

proc errorexit() begin
   try write 'An error occurred in the ' || x.pgm || ' command.'
   try write ''
   try write 'Please try again later.'
   open execerr temp
   putend An error occurred in the &(x.pgm) program.
   putend
   putend Debugging information:
   putend   errmsg: &(errmsg)
   putend   errinfo: &(errinfo)

   putend
   putend --> show vars type error
   dump vars type error

   putend
   putend --> show vars type x
   dump vars type error

   putend
   putend --> show vars type ses
   putend show vars type ses

   putend
   putend End of diagnostics.
   try quiet mail to &(x.maint) title '&(x.pgm) error'
   close

   pcall cleanup
end



;  cleanup -- This is the one place where we return to the user.
;    It is responsible for cleaning up any temporary environment
;    we might have set up.
;

proc cleanup() begin
   pick &(x.origact)
   xreturn
end
