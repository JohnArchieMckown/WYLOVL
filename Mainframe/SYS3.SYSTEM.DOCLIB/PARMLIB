Rules for updating PARMLIB

This is a review of the procedures we talked about for updating
PARMLIB, elaborating on some of the details we were not able to
discuss due to the shortness of time.

MVS 2.6 introduces us to concatenated PARMLIBs.  The serverpac
uses no less than four and it is not entirely clear how IBM
intended each one to be used.  Listed below are the various
types which we will implement on our system and the rules for
using them.  While the order of concatenation determines the
search order for parmlib members, by using our current naming
convention with some modification, we will make the concatenation
order inconsequential.


SYS1.IPLPARM

SYS1.IPLPARM is a new data set which contains parameters required
early in the IPL process, before the PARMLIB concatenation has been
resolved.  It defines but does not form part of the PARMLIB
concatenation.  The most important of these is LOADxx which among
other things determines the PARMLIB concatenation for each
particular IPL.  The most important member is LOADxx which selects
the IODF, master catalog, parmlib and IEASYS member for the IPL.
The suffix is specified in the LOAD PARM value incorporated in the
LOAD PROFILE when using the HMC ACTIVATE operation on an LPAR or
when performing an independent IPL operation using the HMC LOAD
operation.

Our suffix naming convention for this member is 0x for the
production LOADxx member where 'x' is the LPAR ID, e.g.  0A for LPAR
SYSA.  When updating the production LOADxx member, the old member is
assigned a suffix of BK and the updated member is saved with the
same suffix as the previous production version.  When updating
members, use WYLBUR SAVE with a TITLE parameter explaining the
reason for the change.  Do not update using ISPF.  These are the
only valid permanent suffixes for LOADxx.  When testing a new
release, a new LOADxx member will be created with the version and
release level as the suffix, e.g.  28 for OS/390 V2 R8.  If one has
to create another entry for some reason, he should assign his two
character initial as a suffix.  He is responsible for removing this
member when no longer needed.  After we stabilize on a particular
release, unneeded release suffixes will be removed as part of the
post-install procedures.


SYS1.PARMLIB

This is required to be a cataloged data set.  OS/390 will not IPL
without one.  In order not to depart from our previous PARMLIB
update procedures, we will continue to use SYS1.PARMLIB as we have
previously used it, for making changes required to tailor MVS to the
environment and configuration needed for each LPAR.

For every LPAR except SYSE (when running under the OS/390 Serverpac
environment), there is a SYS1.PARMLIB data set cataloged in the
master catalog of the LPAR and residing in a volume named SYSx01
where 'x' is the LPAR suffix, e.g. SYSA01 for SYSA.  This volume
also contains LPAR-specific system data sets which do not reside on
the SYSRES volume.  These include the master catalog, SYS1.IPLPARM,
PROCLIB and other miscellaneous data sets.  This is also the IPL
volume for the stand-alone dump for the LPAR.

Our suffix naming convention for SYS1.PARMLIB members is 0x as
explained for LOADxx above.  When updating the production LOADxx
member, the old member is assigned a suffix of BK and the updated
member is saved with the same suffix as the previous production
version.  If one has to create a member which does not use this
convention, he should assign his two character initial as a suffix.
Again, one is responsible for removing unneeded members one has
created.  When updating members, use WYLBUR SAVE with a TITLE
parameter explaining the reason for the change.  Do not update using
ISPF.



SYS1.PARMLIB.CPACVxx

In addition to SYS1.PARMLIB, production LPARs will also have in the
PARMLIB concatenation another PARMLIB data set which will
consolidate the release-dependent serverpac PARMLIBs that currently
reside in the serverpac CPAC and target SYSRES volumes.  This data
set contains default options or members which are not to be changed
by the user.  It is intended to be read-only.  If there is a need to
update a member, the updated copy must be placed in SYS1.PARMLIB,
using the suffix naming convention which will we discussed earlier.
This data set will also reside in SYSx01 and will have a name of
SYS1.PARMLIB.CPACVvr where 'vr' is the version and release level.
When transitioning to a new release, there may be more than one
SYS1.PARMLIB.CPACVvr on SYSx01 but the LOADxx member for the IPL
will only point to the one corresponding to the release being
IPL'ed.  Note that our suffix naming convention described for
SYS1.PARMLIB does not apply to this library since it contains
only unmodified members which came with the original Serverpac.
Most suffixes are 00, or 0n where 'n' is a numeric value.  There is
an exception to this.  IPCS uses the convention xxxIPCSP for naming
IPCS exits used by different MVS components.  'SP' of course is
the initial of our fearless leader but since this category of PARMLIB
members is not user-modifiable and does not use a two character
suffix, there is no possibility of upsetting the PARMLIB search order.


SYS1.PARMLIB.SYSx

Finally, for effecting an orderly transition to a different release,
another data set is added to the PARMLIB concatenation which will reflect
release-dependent changes to SYS1.PARMLIB or SYS1.PARMLIB.CPACVvr.
This data set is called SYS1.PARMLIB.SYSx where 'x' is the LPAR
suffix.  Members placed in this data set contain suffixes corresponding
to the Version and Release level of the release-dependent member.  As
part of post-install cleanup procedures, members placed in this library
will be moved to SYS1.PARMLIB and this dataset will normally be empty.
Unlike SYS1.PARMLIB, updates to this library must be performed by me or
with my knowledge because of Serverpac backup considerations.


IEASYSxx

Since this is the main link to PARMLIB members after LOADxx, it is
important to know where IEASYSxx is expected to reside.  The general
rule is that for the production 0x suffix, the member will be in
SYS1.PARMLIB along with other 0x entries.  For testing new releases,
the IEASYS member pointed to by LOADxx will be found in
SYS1.PARMLIB.SYSx.
