12:54 Fri 01/07/00 From Tilak Dhar <tilak@stanford.edu>: Fwd: Stanford SIE State
Received: from smtp2.Stanford.EDU ([171.64.14.23]) by Forsythe.Stanford.EDU; Fri
Received: from divya (divya.Stanford.EDU [171.64.18.50])
        by smtp.Stanford.EDU (8.9.3/8.9.3/L) with ESMTP id MAA22656;
        Fri, 7 Jan 2000 12:54:31 -0800 (PST)
Message-Id: <4.2.0.58.20000107125341.00a2c120@tilak.pobox.stanford.edu>
X-Sender: tilak@tilak.pobox.stanford.edu (Unverified)
X-Mailer: QUALCOMM Windows Eudora Pro Version 4.2.0.58
Date: Fri, 07 Jan 2000 12:54:30 -0800
To: Dough Fletcher <dfletcher@stanford.edu>,
        Susan Plass <Susan.Plass@Forsythe.Stanford.EDU>
From: Tilak Dhar <tilak@stanford.edu>
Subject: Fwd: Stanford SIE State Description
Mime-Version: 1.0
Content-Type: multipart/mixed;
        boundary="=====================_19235158==_"

--=====================_19235158==_
Content-Type: text/plain; charset="us-ascii"; format=flowed


>From: kbryant@us.ibm.com
>X-Lotus-FromDomain: IBMUS
>To: tilak@Stanford.EDU
>Date: Fri, 7 Jan 2000 13:13:59 -0700
>Subject: Stanford SIE State Description
>
>
>
>Tilak,
>
>Attached is Charles Gainey's input.  He highlighted his comments in color,
>but that will probably not transfer over.  Anyways, good news?
>
>Kelli J. Bryant
>S/390 Marketing Specialist
>
>Phone:             925-327-2462
>Fax:                   925-277-5001
>
>
>---------------------- Forwarded by Kelli Bryant/San Francisco/IBM on
>01/07/2000 12:11 PM ---------------------------
>
>Charles Gainey   01/07/2000 08:42 AM
>(Embedded image moved to file: pic03138.pcx)
>
>
>To:   Kelli Bryant/San Francisco/IBM@IBMUS
>cc:
>From: Charles Gainey/Poughkeepsie/IBM@IBMUS
>Subject:  Stanford SIE State Description
>
>Hi Kelli,
>
>I've directly imbedded the Stanford SIE.TXT file below so I can "colorize"
>a couple remarks.  Anyway, I'm not seeing any landmines in going from G3 to
>G5.
>
>===========================================================================
>=======================
>
>*
>* SIEDATA -- This defines the layout of the information used by the
>*            interpretive execution hardware.  Offsets are fixed by
>*            the architecture.  This area is 256 bytes long and must
>*            be on a 256 byte boundary.
>*
>SIEDATA  DS    0XL256                  Entire area
>*
>SIENTVCT FLAG  ,                       SIE Intervention control
>          FLAG  (SIEIPSTP,4)              SIE Stopping control       P
>          FLAG  (SIEIPVIO,2)              I/O interrupt pending        I
>          FLAG  (SIEIPEXT,1)              EXT interrupt pending      E
>Not sure why P, I, & E are being set on; why are interceptions being
>requested?
>Looks like you're forcing your 1/22/92 first-time stuff with no actual
>guest activity
>having been performed.
>*
>SIEITMR  FLAG  ,                       Interval timer interrupt stat
>          FLAG  SIEITMRI                  Interrupt pending
>*
>          DS    X                       RESERVED
>*
>SIEMODE  FLAG  ,                       Mode of the guest machine
>          FLAG  (SIE370,X'10')            S/370 guest                Recall,
>  no S/370 guest on a G5.
>          FLAG  (SIEXA,X'20')             XA guest                     Not
>really XA, is ESA/390 on a G5.
>          FLAG  (SIEVR,X'08')             V=R guest
>          FLAG  (SIEITMOF,X'04')          Int timer disabled (S/370)  S/b
>don't-care since no S/370.
>*
>SIEPREFX DS    F                       Guest prefix register
>SIEMSORG DS    H                       Guest main storage origen
>SIEGMSIZ DS    H                       Guest main storage extent
>*
>          DS    F                       RESERVED
>*
>SIEREG14 DS    F                       Guest R14 (SIE use only)
>SIEREG15 DS    F                       Guest R15 (SIE use only)
>SIEPSW   DS    D                       Guest PSW
>SIEITRES DS    D                       Interval timer residue       No
>S/370.
>SIECPUTM DS    D                       Guest CPU timer
>SIECKC   DS    D                       Guest Clock comparator
>SIEEPOCH DS    D                       Epoch for the TOD clock
>*
>* Interception controls and status
>*
>SIESVCTL FLAG  ,                       SVC interception control
>          FLAG  SIESVCCN                  intercept all SVC's
>          FLAG  SIESVC1C                  intercept SVC in SVC1C
>          FLAG  SIESVC2C                  intercept SVC in SVC2C
>          FLAG  SIESVC3C                  intercept SVC in SVC3N
>SIESVC1N DS    X                       intercept SVC number 1
>SIESVC2N DS    X                       intercept SVC number 2
>SIESVC3N DS    X                       intercept SVC number 3
>*
>SIELCTL  DS    H                       LCTL intercept control bits
>*
>          DS    H                       RESERVED
>*
>SIEICTL0 FLAG  ,                       Interception control
>          FLAG  (SIEICPOP,X'80')          OP exception PI's
>          FLAG  (SIEICPRO,X'40')          PRIV OP PI's
>          FLAG  (SIEICPRG,X'20')          PI's
>          FLAG  (SIEICTS,X'08')           TS when CC=1
>          FLAG  (SIEICCS,X'04')           CS when CC=1
>          FLAG  (SIEICCDS,X'02')          CDS when CC=1
>          FLAG  (SIEICIPT,X'01')          IPTE
>SIEICTL1 FLAG  ,
>          FLAG  (SIEICLPS,X'40')          LPSW
>          FLAG  (SIEICPTL,X'20')          PTLB
>          FLAG  (SIEICSSM,X'10')          SSM
>          FLAG  (SIEICSTC,X'04')          STCL  STCTL
>          FLAG  (SIEICSTN,X'02')          STNSM
>          FLAG  (SIEICSTO,X'01')          STOSM
>SIEICTL2 FLAG  ,
>          FLAG  (SIEICSTK,X'80')          STCK
>          FLAG  (SIEICISK,X'40')          ISK,ISKE
>          FLAG  (SIEICSSK,X'20')          SSK,SSKE
>          FLAG  (SIEICRRB,X'10')          RRB,RRBE
>          FLAG  (SIEICPC,X'08')           PC
>          FLAG  (SIEICPT,X'04')           PT
>          FLAG  (SIEICTPT,X'02')          TPROT
>          FLAG  (SIEICLSP,X'01')          LASP
>*
>          DS    5X                      RESERVED
>*
>* SIE Completion
>*
>SIEICODE DS    X                       Completion code
>*
>*              X'00' reserved for software use
>*              X'04' Instruction interception
>*              X'08' PI interception
>*              X'0C' Both instruction and PI interception (PER)
>*              X'10' Pending external interrupt
>*              X'14' External interrupt interception
>*              X'18' Pending I/O interrupt interception
>*              X'1C' Wait state interception
>*              X'20' Validity interception
>*              X'24' Software use only
>*              X'28' Stop interception
>*              X'2C' Operation exception interception
>*
>SIEICFLG FLAG  ,                       Intercept modifier
>          FLAG  (SIEICIF2,X'80')          Interception fmt 2 installed
>          FLAG  (SIEICEX,X'01')           Inst subject of an EX
>          FLAG  (SIEICIF,X'02')           PER Event on fetch
>SIEIHCPU DS    H                       Last Host CPU address
>*
>          DS    2X                      RESERVED
>*
>SIEINST  DS    H                       Intercepted inst bits 0-15
>SIEICAD1 DS    A                       1st operand eff addr          If
>Fmt-2, is instruction bytes 2 and up.
>SIEICAD2 DS    A                       2nd operand eff addr          If
>Fmt-2, zeros.
>*
>* Satellite table pointers
>*
>SIERCP   DS    A                       RCP-area (Host virt addr)
>SIEISCAA DS    A                       System control area addr
>*
>          DS    D                       RESERVED
>*
>SIETCHCL DS    H                       TCH interception controls
>*
>          DS    H                       RESERVED
>          DS    F                       RESERVED
>          DS    D                       RESERVED
>*
>SIECRS   DS    XL64                    Control registers
>*
>* Interrupt interception status area
>*
>          DS    F                       RESERVED
>*
>SIEIEXCA DS    H                       EXT interrupt CPU addr
>SIEIEXCD DS    0H                      EXT interrupt code
>SIEIEXCL DS    X                       EXT interrupt class code
>SIEIEXCT DS    X                       EXT interrupt type code
>*
>          DS    F                       RESERVED
>*
>SIEIPRCL DS    H                       PI ILC
>SIEIPRCC DS    H                       PI interrupt code
>SIEITRAD DS    F                       Translation exception addr
>SIEIMNCL DS    H                       Monitor class
>SIEPERCD DS    X                       PER event code
>SIEPERZF DS    X                       PER interrupt code (reserved)
>SIEPERAD DS    F                       PER event address
>SIEIMNCD DS    F                       Monitor code
>*
>          DS    D                       RESERVED
>          DS    D                       RESERVED
>          DS    D                       RESERVED
>          DS    D                       RESERVED
>****************************************************************
>* End of the SIEDATA area (hardware defined)                   *
>****************************************************************
>
>
>Note: The code includes a few in house macros. I think what they
>do is fairly clear. If you have any questions, please call
>Doug Fletcher 650.725.9442 or 650.619.6654
>
>          SET   SIEXA                   XA guest
>          LH    RS,CPCORE               Address (in 64K segments)
>          STH   RS,SIEMSORG             Save main storage origin
>          LH    RS,CPCLEN               Length (in 64K segments)
>          DECR  RS
>          STH   RS,SIEGMSIZ             Save the main storage size
>*
>          MVC   SIERCP,GSTCRCPA         RCP Area
>          LT    RS,GSTCSCA              Get the SCA virtual address
>          IF    NZ,'LRA RS,@RS'         Get the real address
>          ST    RS,SIEISCAA             Save the SCA real address
>
>*
>* Check for restart SIGP order
>*
>          LT    RA,CPRSTRT              CPU addr of guy restarting us
>          IF    NZ,BEGIN                Set up the restart interrupt
>
>          L     RS,CPPSALOC             Get the location of page 0
>          WITH  (PZERO,RS),BEGIN
>*
>* Get us into KEY 0 with the minimum of disturbance
>*
>          LR    RVR,R2                  R2 must be saved/restored
>          MODESET EXTKEY=ZERO,SAVEKEY=(2)
>          LR    EPAR,R2
>          LR    R2,RVR                  Restore the Register
>*
>* Swap the PSWs
>*
>          MVC   PZRSOPSW,SIEPSW         Save the OLD PSW
>          MVC   SIEPSW,PZRSNPSW         Fetch the NEW PSW
>          MODESET KEYREG=EPAR           Restore the PSW key
>          END   ,
>          CLEAR RS
>          ST    RS,CPRSTRT              Clear out the order
>          END   ,
>*
>*  Update the CPU time accumulator and start the guest
>*
>RUNNING  LABEL ,
>          STM   R0,R15,CPGRSAVE         Save our registers
>          LR    R15,RY                  Save pointer to CPUB
>          WITH  (CPUB,R15)
>          L     R14,CPSIERA             Real address of the SIE BLOCK
>          LM    R0,R13,CPCREGS          Get Guest Registers
>          MVI   SIEICODE,0              Clear the ICODE
>          SIE   @R14                    Run the Guest machine
>          STM   R0,R13,CPCREGS          Save Guest Registers
>*-
>*-       Very temporary failure checking!!!   (1/22/92)
>*-
>          BASR  R8,0
>          WITH  (*,R8),BEGIN
>          L     R1,CVTPTR
>          IF    (NIZCVTP,EQ,=F'-1'),BEGIN  First time initialization...
>          ST    R1,NIZCVTP          Remember CVT ptr
>          B     NIZCONT             (No checking the first time)
>          END
>*
>          LA    R5,1                Failure case 1
>          IF    (R1,NE,NIZCVTP),NIZFAIL  Failed
>*
>          LA    R5,2                Failure case 2
>          LR    R2,R1
>          SH    R2,=AL2(X'40')      CVT prefix
>          IF    (@R2,NE,NIZCVTID),NIZFAIL  Failed also
>*
>          LA    R5,3                Failure case 3
>          L     R2,CVTUSER-CVT(,R1)  User CVT
>          IF    (@R2,NE,'SCIP'),NIZFAIL
>*
>NIZCONT  LABEL
>*-
>*-       End of very temporary failure checking!!!
>*-
>          LM    R0,R15,CPGRSAVE         Restore our registers
>
>*
>* At this point we have some kind of interception.  We must decide
>* what kind it is and take action on it.
>*
>          LC    RS,SIEICODE             Get the interception code
>          IF    (RS,GE,ITABL),BADICODE  Code is too big
>          B     ITAB(RS)                Branch based on it
>* These routines all return to RUNNING label
>
>ITAB     B     BADICODE                 0 -- RESERVED
>          B     INSTRUCT                 4 -- instruction
>          B     PROGRAM                  8 -- PI interrupt
>          B     INSTPER                 12 -- PER and instruction
>          B     EXTPEND                 16 -- Pending external
>          B     EXTINT                  20 -- External interrupt
>          B     IOPEND                  24 -- Pending I/O interrupt
>          B     WAITST                  28 -- Wait state
>          B     VALIDITY                32 -- Validity interception
>          B     BADICODE                36 -- RESERVED
>          B     STOPCODE                40 -- Stop interception
>          B     OPEXCEPT                44 -- Operation exception
>ITABL    EQU   *-ITAB                  ***************************
>          SPACE 2
>BADICODE KAPUT BADICODE                gasp!
>
>
>
>Chuck Gainey
>S/390 Systems Architecture:  Crypto & SIE
>914-435-7596, 8-295-7596, gainey@us.ibm.com
>
>

--=====================_19235158==_
Content-Type: application/octet-stream; name="pic03138.pcx";
 x-mac-type="50435878"; x-mac-creator="474B4F4E"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="pic03138.pcx"

CgUBCAAAAADCAQ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABwwEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAP/wf/B/8H/wf/B/8H5QfSB8QHxw/ED8IPD/8L/QsPwwsPwwsPwwsPwwsP
wwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPCw8LD8MLDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPC8MPCw8LDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvD
DwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwv/D+EP0Q/ID8QPwg8PD+ULD8cLD8MLD8MLD8ML
D8MLD8MLDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPC8MPC8MPC8MPC8MPC8cPC9cPzA/G
D8MPDw//C/8L2AsPxwsPwwsPwwsPwwsPwwsPwwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwvDDwvDDwvDDwvDDwvDDwvHDwv/D+4P1w/MD8YPww8PD8cLD8cLD8cLD8MLD8MLD8MLD8ML
D8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLDwsPCw/DCw8LDwsPwwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwvDDwsPCw8Lww8LDwsPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MP
C8MPC8MPC8cPC8cPC8gPxA/CDw8P/wv5Cw/HCw/HCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/D
Cw/DCw/DCw/DCw/DCw/DCw/DCw/DCw8LDwsPwwsPCw8LD8MLDwsPCw8LDwsPCw8LDwvDDwsPCw8L
ww8LDwsPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8cP
C8cPC8cPC/sP3Q/PD8cPxA/CDw/hCw/HCw/HCw/DCw/DCw/DCw8LDwsPwwsPCw8LD8MLDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
C8MPCw8LDwvDDwsPCw8Lww8Lww8Lxw8Lxw8L1Q/LD8UPww8PD/8L/wvUCw/HCw/HCw/DCw/DCw/D
Cw8LDwsPwwsPCw8LD8MLDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8Lww8LDwsPC8MPCw8LDwvDDwvDDwvDDwvHDwvHDwv/D+wP
1g/LD8YPww8PD8sLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8ML
D8MLD8MLD8MLD8MLD8MLDwsPCw/DCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8Lww8LDwsPC8MPC8MPC8MP
C8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8MPC8cPC8YPww/C
Dw//C/0LD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8MLD8ML
D8MLD8MLD8MLDwsPCw/DCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwvDDwsPCw8Lww8Lww8Lww8Lww8L
ww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8Lww8L/w/hD9EPyA/E
D8IPDw/lCw/HCw/DCw/DCw/DCw/DCw/DCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwvD
DwvDDwvDDwvDDwvHDwvXD8wPxg/DDw8P/wv/C9gLD8cLD8MLD8MLD8MLD8MLD8MLDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8Lww8Lww8Lww8Lww8Lww8Lxw8L/w/uD9cPzA/GD8MPDw/H
Cw/HCw/HCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw/DCw8L
DwsPwwsPCw8LD8MLDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8Lww8LDwsPC8MPCw8LDwvDDwvDDwvDDwvDDwvDDwvDDwvD
DwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvHDwvHDwvID8QPwg8PD/8L+QsPxwsPxwsPwwsPwwsP
wwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPwwsPCw8LD8MLDwsPCw/DCw8L
DwsPCw8LDwsPCw8Lww8LDwsPC8MPCw8LDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvDDwvD
DwvDDwvDDwvDDwvDDwvDDwvHDwvHDwvHDwv7D90Pzw/HD8QPwg8P4QsPxwsPxwsPwwsPwwsPwwsP
Cw8LD8MLDwsPCw/DCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8L
DwsPCw8LDwsPCw8LDwsPCw8LDwvDDwsPCw8Lww8LDwsPC8MPC8MPC8cPC8cPC9UPyw/FD8MPDw//
C/8L1AsPxwsPxwsPwwsPwwsPwwsPCw8LD8MLDwsPCw/DCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsP
Cw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPCw8LDwsPC8MPCw8LDwvDDwsPCw8L
ww8Lww8Lww8Lxw8Lxw8L/w/sD9YPyw/GD8MPDwwAAACAAAAAgACAgAAAAICAAIAAgICAgIDAwMD/
AAAA/wD//wAAAP//AP8A//////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
--=====================_19235158==_--

