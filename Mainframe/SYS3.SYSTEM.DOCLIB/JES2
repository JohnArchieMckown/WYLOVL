SYS3.SYSTEM.DOCLIB#JES2                Last update Sept 2, 1999
Original in WYL.GG.JWS.MAINT#JES2


JES2 PRODUCTION DATA SETS

SYSA      spool   - SYS1.JES2.R12.HASPACE on JESA11-JESA13
SYSA      checkpoint data set - SYS1.JES.R12.HASPCKPT on JESAC1
SYSA      2nd checkpoint data set - SYS1.JES.R12.HASPCKPT on JESAC2

SYSB      spool - SYS1.SYSB.R12.HASPACE on JESB11
SYSB      checkpoint data set - SYS1.SYSB.R12.HASPCKPT on JESB11
SYSB      2nd checkpoint data set - SYS1.SYSB.R12.HASPCKPT on SYSB01

SYSD      spool - SYS2.SYSD.NEW.HASPACE on SYSD03
SYSD      checkpoint data set - SYS2.SYSD.NEW.HASPCKPT on JESDC1

You can look at SYS1.PROCLIB#JES2 to see what libraries and
configuration files JES2 is using.

The production JES2 data sets are:

   SYS3.JES.SYSx.LINKLIB  - load module library
   SYS3.JES.SYSx.PARMLIB  - parameter library
     PARM                 - main parameter file
     PARM2                - secondary parameter file
     DESTPRT              - Dest printer definitions
     SPLSYSx              - Production spool definition

   THe parm file concatenation is specified in SYS1.PROCLIB#JES2

   SYS3.JES.SYSx.LASERLIB - Laserwriter parm file library

   The JES2 data sets are on SYSx01 on each SYSx system.

   There is a backup copy of the SYSA data sets on SYSD01


JES2 SOURCE

   WYL.GG.JES.R12.SHASSRC    - IBM source, copied from SYS1.V1R1M0.SHASSRC
                                 on MVSAR4

   WYL.GG.JES.R122.SHASMAC   - IBM macro library.  This is a copy of
                                 SYS1.V1R1M0.SHASMAC on MVSAR4

   WYL.GG.JES.SOURCE         - Source for Stanford JES2 modules
   WYL.GG.JES.UPDATE         - Update decks for modified IBM JES2 modules
   WYL.GG.JES.SOURCE.MISC    - Source for additional Stanford programs
   WYL.GG.JES.MACLIB         - Stanford macros and modified IBM macros
   WYL.GG.JES.OBJECT         - Production object decks

   WYL.GG.JES.LIB#ASM        - Assemble Stanford JES2
                 #LINK       - Link edit JES2
                 #INSTALL    - Install JES2 module or parm file
                 #MAC        - Build Stanford macro library

   There is a more information about JES2 maintenance procedures in
   WYL.GG.JES.LIB#MAINT.


CHECKPOINT DATA SET

The checkpoint data set contains the disk copy of the JES2 job
queue, plus other control information related to the spool.  When
JES2 is started it reads the information in the checkpoint data set.
JES2 maintains a duplex copy of the checkpoint data set which can be
used if JES2 will not start successfully because of errors in the
checkpoint data set.  Recovering from a checkpoint data set error
is more complicated than before.  In some cases JES2 will automatically
recover from a damaged checkpoint data set and read the duplex copy.
In other situations you will get a series of cascading menus on the
console asking you to make various choices.  This is documented in
the JES2 Messages manual.  Everything about this is standard, so you
can call IBM for help in a pinch.

If there are problems with the production spool disks you can start JES2
on a test spool.  To do this, IPL and reply '$PJES2' to the '$HASP426
SPECIFY OPTIONS' message that JES2 issues when it starts up.  JES2 will
terminate immediately without issuing any messages.  Then type 'S
JES2,SPOOL=TEST'.  JES2 will come up using a test spool and a test
checkpoint data set.  You will need to reply 'COLD' to the 'SPECIFY
OPTIONS' WTOR.  Before JES2 actually does the cold start it will list
the spool and checkpoint data set names that it will use.  You should
see names like SYS3.JESZ.HASPxxxx, which are used for the test spool.
Once JES2 has been started you can then start up other parts of the
system using normal procedures.


RELOADING JES2

JES2 can be reloading without IPLing the production system.  To do
this, enter the console command '$PJES2,ABEND'; JES2 should terminate
immediately with a 'catastrophic error' message.  Reply 'END' to
the WTOR message that will appear.

Type 'S JES2' to start JES2 up again.  You will need to reply to the
'$HASP426 SPECIFY OPTIONS' message.  JES2 will take 3-4 minutes to come
back.  After JES2 is back up you should do a START HAWK to insure that
all system services are started up again.

Reloading JES2 has the following impact on the system:

     - printing will be interrupted until JES2 comes back up
     - RJE and BITNET lines will be interrupted
     - Wylbur job submission will be blocked (RUN, PRINT, and LPRINT
         commands); job related commands (LOCATE, HOLD, FETCH, etc)
         will be blocked

Batch job execution is not interrupted by a JES2 reload, and
interactive sessions are not affected unless they try to submit
a job to JES2 or enter a JES2 command.  Then they will hang until
JES2 is restarted.


STARTING A TEST JES2

You can start a test JES2 to validity check changes made to the JES2
parm files.  This is what a normal start up looks like:

      -> S JESX
         JES2 ALL-SYSTEMS WARM-START IS IN PROGRESS
         /HASP400 ENTER REQUESTS
      -> /S
         OK
         /HASP099 ALL AVAILABLE FUNCTIONS COMPLETE

You can now enter JES2 commands by prefixing them with '/' rather
than '$'.  To shut down JESX, enter a '/PJES2' command.

JESX comes up using a test spool, so you can't damage the real spool
by starting it up.

To start a Wylbur under a test JES2, add ',SUB=JESX' to the start
command, for example:  S JWSWYL,SUB=JESX

If there is an error in any of the JES2 parms, you will normally see
an error message on the console and will get a prompt asking if you
want to continue.


RJE LINES

$DL will show the status of all of the JES2 network and RJE connections.
$DLINEn will show more information about a specific line.
The command $DLINEn will display more information about a line.
If the line is in use you will get multiple response lines.  The
command $SHO TRACE LINEn [LAST] will show a trace of I/O activity on
a line.  You can expand the trace table with the command

         $SET TRACE LINEn SIZE=n [BUFFER]

SIZE specifies the number of trace table entries; BUFFER turns on
tracing of the contents of data buffers being read or written.

You can also set and show a trace on a specific remote.  To start
a trace:

         $SET TRACE RMTn SIZE=n [BUFFER]


CTC CONNECTION TO SYSB

If LINE1 is started on both systems and there is still a problem
with the link (jobs aren't being transmitted between the two
systems), you can start the connection up with the following
commands.

If LINE1 is drained on either system, use the command $SLINE18 on
that system to enable it.

To start the network connection, enter the following command on
either system:

    $SN,LINE1


CONNECTION TO SYSC

The SYSA-SYSC connection is through VTAM.  Doing a START HAWK on either
system will issue the JES2 commands needed to start the link.  The link
should be active if you do a $DL command and see a line like this:

   LINE6   SNA ACTIVE  -> SUHMVSF

If the JES2 connection to SYSC is not active, you can start it from
SYSA with the command '$SN,A=SUHMVSF'.  If this fails, it is
probably because of a VTAM connection problem between SYSA and SYSC.


SYSOUT=P ARCHIVING

SYSOUT=P output for DEST=LOCAL is processed by a started task BATWYL
job called JCLSAVE which runs on SYSA. This job takes SYSOUT=P
output which is not held and either saves the output on disk if it
is eligible for archiving, or else alters the output to SYSOUT=A for
printing.  If there is a problem with the JCLSAVE job then SYSOUT=P
output will start accumulating in the output queue.  If JCLSAVE
isn't running, just start it up with 'S JCLSAVE'.  You can cancel
and restart JCLSAVE without causing any problems.  The archived
SYSOUT=P output is saved on PUB volumes in libraries with names like
WYL.GP.JCL.gg.mmmdd.

The exec in WYL.GP.JCL.LIB#OVERNITE does overnight processing for this
system.  If you add a new account to the exec in WYL.GP.JCL.LIB#JCLSAVE
you also need to update the OVERNITE exec.


ADDING A NEW DEST PRINTER

See WYL.GG.JWS.MAINT#PRINTER
