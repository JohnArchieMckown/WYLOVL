*/*                                                                     00050001
         MACRO              Define similar device list macro            00100001
&LABEL   CBDISIML &P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8,&P9,&P10,            *00150001
               &TYPE=,                                                 *00200001
               &SYSTEM=MVS,                                        @LDA*00250001
               &DUMMY=DUMMY                                             00300001
         AGO   .SKIP                                                 */ 00350001
*@LOGIC;                                                                00400001
*/********************************************************************/ 00450001
*/*                                                                  */ 00500001
*/*  MACRO NAME = CBDISIML                                           */ 00550001
*/*                                                                  */ 00600001
*/*  DESCRIPTIVE NAME = Defines the similar device list              */ 00650001
*/*                                                                  */ 00700001
*/*  PROPRIETARY STATEMENT =                                         */ 00750001
*/*                                                                  */ 00800001
*/*     LICENSED MATERIALS - PROPERTY OF IBM                         */ 00850001
*/*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                  */ 00900001
*/*     5695-047 (C) COPYRIGHT IBM CORP. 1990                        */ 00950001
*/*     SEE COPYRIGHT INSTRUCTIONS.                                  */ 01000001
*/*                                                                  */ 01050001
*/*  STATUS = HCSH301                                                */ 01100001
*/*                                                                  */ 01150001
*/*  MODULE TYPE = PLAS MACRO                                        */ 01200001
*/*                                                                  */ 01250001
*/*  DEPENDENCIES = None                                             */ 01300001
*/*                                                                  */ 01350001
*/*  RESTRICTIONS = For MVS/HCD use only                             */ 01400001
*/*                                                                  */ 01450001
*/*  PROCESSOR = PLAS Compiler                                       */ 01500001
*/*                                                                  */ 01550001
*/*  INVOCATION =                                                    */ 01600001
*/*                                                                  */ 01650001
*/*  ?structure: CBDISIML (                                          */ 01700001
*/*                                                                  */ 01750001
*/*       for SYSTEM=MVS:                                            */ 01800001
*/*                        (device,model,DEFAULT),                   */ 01850001
*/*                        (....)),                                  */ 01900001
*/*       for SYSTEM=VM:                                             */ 01950001
*/*                        (device,model,VM_type,VM_model,DEFAULT),  */ 02000001
*/*                        (....)),                                  */ 02050001
*/*                                                                  */ 02100001
*/*                       TYPE=<DEV | CU>                            */ 02150001
*/*                       SYSTEM=<MVS | VM>                          */ 02200001
*/*                                                                  */ 02250001
*/*  structure    Name of structure that is to be generated.         */ 02300001
*/*               (mandatory)                                        */ 02350001
*/*  device       specifies device type                              */ 02400001
*/*               (mandatory)                                        */ 02450001
*/*  model        specifies device model                             */ 02500001
*/*               (optional)                                         */ 02550001
*/*  VM_type      specifies VM device type (only for SYSTEM=VM)      */ 02600001
*/*               (mandatory)                                        */ 02650001
*/*  VM_model     specifies VM device model (only for SYSTEM=VM)     */ 02700001
*/*               (optional)                                         */ 02750001
*/*  DEFAULT      specifies that model is default, if not specified  */ 02800001
*/*               (optional)                                         */ 02850001
*/*  TYPE         specifies the type of the device list              */ 02900001
*/*               DEV - indicates that the list is a similar device  */ 02950001
*/*                     list                                         */ 03000001
*/*               CU  - indicates that the list is a attachable      */ 03050001
*/*                     device list                                  */ 03100001
*/*  SYSTEM       specifies the operating system for device list     */ 03150001
*/*               MVS - indicates that the list is for a MVS system  */ 03200001
*/*               VM  - indicates that the list is for a VM system   */ 03250001
*/*                                                                  */ 03300001
*/*  CHANGE ACTIVITY =                                               */ 03350001
*/*                                                                  */ 03400001
*/*  $L0=HCD  ,HCSH101,900427,BOEB: Hardware Configuration Dialog    */ 03450001
*/*  $LD=HCD  ,HCSH301,910506,BOEB: VM device support                */ 03500001
*/*  $01=PTM  ,HCSH521,940831,BOEB: KGZ0081                        FB*/ 03525052
*/*                                                                  */ 03550001
*/********************************************************************/ 03600001
*@ENDLOGIC;                                                             03650001
*/*                                   that is the begin of a very long  03700001
*                                     PLAS comment statement            03750001
.SKIP    ANOP                                                           03800001
         LCLA  &I,&J                  Loop count for checking           03850001
         LCLA  &CNT                   Number of entries in array        03900001
         LCLA  &MPOS                  Maximum number of positionals     03950001
         LCLA  &MSUB                  Maximum number of subparameters  *04000001
                                      for one positional                04050001
         LCLC  &TYP(255)              Holds device types                04100001
         LCLC  &MOD(255)              Holds device models               04150001
         LCLC  &VMTYP(255)            Holds device types           @LDA 04200001
         LCLC  &VMMOD(255)            Holds device models          @LDA 04250001
         LCLB  &DEFLT(255)            Holds default for model      @LDA 04300001
.*                                                                      04350001
         LCLB  &CU                    Indicates that TYPE=CU specified  04400001
         LCLB  &ERROR                 Error flag                        04450001
.*                                                                      04500001
         LCLB  &SYSMVS                Indicates that SYSTEM=MVS    @LDA 04550001
         LCLB  &SYSVM                 Indicates that SYSTEM=VM     @LDA 04600001
.*                                                                      04650001
.********************************************************************** 04700001
.*             Initializes Variables                                  * 04750001
.********************************************************************** 04800001
.*                                                                      04850001
         ACTR  10000              Set for infinite loop control         04900001
&MPOS    SETA  255                    Set maximum value for positional *04950001
                                      operands                          05000001
&MSUB    SETA  2                      Set maximum value of subparameter*05050001
                                      for one operand                   05100001
.*                                                                      05150001
.********************************************************************** 05200001
.*                                                                    * 05250001
.*                       Validates Macro                              * 05300001
.*                                                                    * 05350001
.********************************************************************** 05400001
.*                                                                      05450001
         AIF   (N'&SYSLIST GT &MPOS).ERR01  report error if too many   *05500001
                                            positionals                 05550001
         AIF   (T'&LABEL  EQ 'O').ERR02     report error if label is   *05600001
                                            not specified               05650001
.*                                                                      05700001
.********************************************************************** 05750001
.*                                                                    * 05800001
.*                       Validates SYSTEM                             * 05850001
.*                                                                    * 05900001
.********************************************************************** 05950001
.*                                                                      06000001
         AIF   ('&SYSTEM' EQ 'VM').SETVM    SYSTEM=VM specified    @01C 06050052
&SYSMVS  SETB  1                            Indicates MVS          @LDA 06100001
         AGO   .SYSEND                      SYSTEM retrieved       @LDA 06150001
.SETVM   ANOP                               SYSTEM=VM processing   @LDA 06200001
&SYSVM   SETB  1                            Indicates VM           @LDA 06250001
         AGO   .SYSEND                      SYSTEM retrieved       @LDA 06300001
.SYSEND  ANOP                               System set             @LDA 06350001
.*                                                                      06400001
         AIF   (&SYSVM).DFT01               If system VM skip      @LDA 06450001
&MSUB    SETA  3                            Set maximum value of MVS   *06500001
                                            operand subparameters  @LDA 06550001
         AGO   .DFT05                       Proceed                @LDA 06600001
.DFT01   ANOP                                                      @LDA 06650001
&MSUB    SETA  5                            Set maximum value of VM    *06700001
                                            operand subparameters  @LDA 06750001
.DFT05   ANOP                                                      @LDA 06800001
.*                                                                      06850001
.********************************************************************** 06900001
.*                                                                    * 06950001
.*                       Validates Macro                              * 07000001
.*                                                                    * 07050001
.********************************************************************** 07100001
.*                                                                      07150001
&CNT     SETA  0                   Init number of entries in array      07200001
&I       SETA  1                   Address first parameter              07250001
.*                                                                      07300001
.POS10   ANOP                                                           07350001
         AIF   (&I GT N'&SYSLIST).POS100   All parameters processed ?   07400001
         AIF   (N'&SYSLIST(&I) GT &MSUB).POS60  Report error  if more  *07450001
                                   than maximum number of subparameters*07500001
                                   are specified                        07550001
         AIF   ('&SYSLIST(&I,1)' EQ '').POS50  First subparameter  @01C*07600052
                                   omitted ? - If yes, report error     07650001
&TYP(&I) SETC  '&SYSLIST(&I,1)'     Save device type                    07700001
.*                                                                      07750001
         AIF   (T'&SYSLIST(&I,2) EQ 'O').POS15 2nd subparm present @01C 07800052
&MOD(&I) SETC  '&SYSLIST(&I,2)'     Save device model                   07850001
.*                                                                      07900001
.POS15   ANOP                                                      @LDA 07950001
         AIF   (&SYSMVS).POS20      Skip VM device types           @LDA 08000001
.*                                                                      08050001
         AIF   (T'&SYSLIST(&I,3) EQ 'O').POS50   3rd subparameter  @01C*08100052
                                   omitted ? - If yes, report error@LDA 08150001
&VMTYP(&I) SETC  '&SYSLIST(&I,3)'  Save VM  device type            @LDA 08200001
.*                                                                      08250001
         AIF   ('&SYSLIST(&I,4)' EQ '').POS30  4th subparm present @01C 08300052
&VMMOD(&I) SETC  '&SYSLIST(&I,4)'     Save VM device model         @LDA 08350001
         AGO   .POS30               And continue                   @LDA 08400001
.*                                                                      08450001
.POS20   ANOP                                                           08500001
         AIF   (T'&SYSLIST(&I,3) EQ 'O').POS40  DEFAULT specified  @01C 08550052
         AIF   ('&SYSLIST(&I,3)' NE 'DEFAULT').POS65 invalid parm  @01C 08600052
&DEFLT(&I) SETB  1                 Indicate default model          @LDA 08650001
         AGO   .POS40              Proceed to next entry           @LDA 08700001
.POS30   ANOP                                                           08750001
         AIF   ('&SYSLIST(&I,5)' EQ '').POS40   DEFAULT specified  @01C 08800052
         AIF   ('&SYSLIST(&I,5)' NE 'DEFAULT').POS65 invalid parm  @01C 08850052
&DEFLT(&I) SETB  1                 Indicate default model          @LDA 08900001
         AGO   .POS40               And continue                   @LDA 08950001
.POS40   ANOP                                                      @LDA 09000001
&CNT     SETA  &CNT+1              Increase number of entries in array  09050001
         AGO   .POS80               And continue                        09100001
.*                                                                      09150001
.POS50   ANOP                                                           09200001
&ERROR   SETB  1                   Remember at least one error detected 09250001
         MNOTE 8,'&I: First subparameter required - (device type). '    09300001
         SPACE ,                                                        09350001
         AGO   .POS80               And continue                        09400001
.*                                                                      09450001
.POS60   ANOP                                                           09500001
&ERROR   SETB  1                   Remember at least one error detected 09550001
         MNOTE 8,'&I: Too many subparameters specified - maximum is &MS*09600001
               UB.'                                                     09650001
         SPACE ,                                                        09700001
         AGO   .POS80               And continue                   @LDA 09750001
.*                                                                      09800001
.POS65   ANOP                                                           09850001
&ERROR   SETB  1                   Remember at least one error detected*09900001
                                                                   @LDA 09950001
         MNOTE 8,'&I: Only DEFAULT is allowed as last subparameter.'    10000001
*                                                                  @LDA 10050001
         SPACE ,                                                        10100001
         AGO   .POS80               And continue                   @LDA 10150001
.*                                                                      10200001
.POS80   ANOP                                                           10250001
&I       SETA  &I+1                Address next parameter               10300001
         AGO   .POS10              And continue                         10350001
.*                                                                      10400001
.POS100  ANOP                                                           10450001
.*                                                                      10500001
.*--------------------  Validate TYPE parameter ----------------------- 10550001
.*                                                                      10600001
         AIF   (T'&TYPE EQ 'O').TYPXT    Branch if parameter omitted    10650001
         AIF   ('&TYPE' EQ 'DEV').TYPXT                                 10700001
&CU      SETB  1                 Assume TYPE=CU specified               10750001
         AIF   ('&TYPE' EQ 'CU').TYPXT   Check if TYPE=CU specified     10800001
&ERROR   SETB  1                   Remember at least one error detected 10850001
         MNOTE 8,'Invalid type specification'                           10900001
         SPACE ,                                                        10950001
.*                                                                      11000001
.TYPXT   ANOP                                                           11050001
.*                                                                      11100001
.********************************************************************** 11150001
.*                                                                    * 11200001
.*               Generate ASM source statements                       * 11250001
.*                                                                    * 11300001
.********************************************************************** 11350001
.*                                                                      11400001
.GEN00   ANOP                                                           11450001
         AIF   (NOT &ERROR).GEN10    Continue if no error encountered   11500001
         MNOTE *,'Error encountered - No code generated.'               11550001
         AGO   .EXIT               And leave macro                      11600001
.*                                                                      11650001
.GEN10   ANOP                                                           11700001
&LABEL   DC    A(&CNT)              Number of entries                   11750001
.*                                                                      11800001
&I       SETA  0                    Initialize index for loop tru array 11850001
.GEN30   ANOP                                                           11900001
&I       SETA  &I+1                 Address next entry in array         11950001
         AIF   (&I GT &CNT).GEN100   Branch if all entries processed    12000001
.*                                                                      12050001
         DC    CL8'&TYP(&I)'        Device type                         12100001
         AIF   ('&MOD(&I)' GT ' ').GEN40                                12150001
         DC    XL4'00'              Device model not specified          12200001
         AGO   .GEN50               And continue                        12250001
.GEN40   ANOP                                                           12300001
         DC    CL4'&MOD(&I)'        Device model                        12350001
.GEN50   ANOP                                                           12400001
         AIF   (&CU).GEN80          Branch around for TYPE=CU      @LDC 12450001
         AIF   (&DEFLT(&I)).GEN55   If default model specified     @LDA 12500001
         DC    XL4'00'              Reserved                            12550001
         AGO   .GEN60                                              @LDA 12600001
.GEN55   ANOP                                                      @LDA 12650001
         DC    XL4'00000080'        Indicate default model         @LDA 12700001
.GEN60   ANOP                                                      @LDA 12750001
         AIF   (&SYSMVS).GEN80      Skip to next entry             @LDA 12800001
.*                                                                      12850001
         DC    CL8'&VMTYP(&I)'      VM Device type                 @LDA 12900001
         AIF   ('&VMMOD(&I)' GT ' ').GEN70                         @LDA 12950001
         DC    XL4'00'              Device model not specified     @LDA 13000001
         AGO   .GEN80               And continue                   @LDA 13050001
.GEN70   ANOP                                                      @LDA 13100001
         DC    CL4'&VMMOD(&I)'        Device model                 @LDA 13150001
.GEN80   ANOP                                                      @LDC 13200001
.*                                                                      13250001
         AGO   .GEN30               And continue loop                   13300001
.*                                                                      13350001
.GEN100  ANOP                                                           13400001
         AGO   .EXIT                And continue                        13450001
.*                                                                      13500001
.********************************************************************** 13550001
.*                                                                    * 13600001
.*                       Error message                                * 13650001
.*                                                                    * 13700001
.********************************************************************** 13750001
.*                                                                      13800001
.ERR01   ANOP                                                           13850001
         MNOTE 8,'Maximum number of positional parameters exceeded - ma*13900001
               ximum is &MPOS.'                                         13950001
         SPACE ,                                                        14000001
         AGO   .EXIT                  and leave macro                   14050001
.*                                                                      14100001
.ERR02   ANOP                                                           14150001
         MNOTE 8,'Macro label not specified, it is required.'           14200001
         SPACE ,                                                        14250001
         AGO   .EXIT                  and leave macro                   14300001
.*                                                                      14350001
.********************************************************************** 14400001
.*                                                                    * 14450001
.*       Exit                                                         * 14500001
.*                                                                    * 14550001
.********************************************************************** 14600001
.*                                                                      14650001
.EXIT    ANOP                                                           14700001
         MEND                                                           14750001
*                                   End of PLAS comment statement    */ 14800001
*%CBDISIML:  MACRO KEYS(TYPE,SYSTEM);                                   14850001
*/********************************************************************/ 14900001
*/*                                                                  */ 14950001
*/*      DECLARE VARIABLES                                           */ 15000001
*/*                                                                  */ 15050001
*/********************************************************************/ 15100001
*                                                               @SPACE; 15150001
*/********************************************************************/ 15200001
* /*         EXTERNAL VARIABLES                                      */ 15250001
*/********************************************************************/ 15300001
*  DCL  EHARC    FIXED EXTERNAL;   /* FOR RETURN CODE FROM MACRO     */ 15350001
*                                                                       15400001
*/********************************************************************/ 15450001
*/*          INTERNAL VARIABLES                                      */ 15500001
*/********************************************************************/ 15550001
*                                                                       15600001
*  DCL  CMT      CHAR  INTERNAL;   /* Error message to print         */ 15650001
*  DCL  IMACRO   CHAR  INTERNAL;   /* Macro parameters               */ 15700001
*  DCL  INDENT   FIXED INTERNAL;   /* Indent value foer listing      */ 15750001
*  DCL  RCERR    FIXED INTERNAL;   /* Error flag for return code     */ 15800001
*  DCL  TYP(255) CHAR  INTERNAL;   /* Holds device types             */ 15850001
*  DCL  MOD(255) CHAR  INTERNAL;   /* Holds device models            */ 15900001
*  DCL  VMTYP(255) CHAR  INTERNAL;   /* Holds device types       @LDA*/ 15950001
*  DCL  VMMOD(255) CHAR  INTERNAL;   /* Holds device models      @LDA*/ 16000001
*  DCL  DEFLT(255) CHAR  INTERNAL;   /* Holds default indication @LDA*/ 16050001
*  DCL  CNT      FIXED INTERNAL;   /* Number of entries in array     */ 16100001
*  DCL  (I,J)    FIXED INTERNAL;   /* Index into strings.            */ 16150001
*  DCL  MPOS     FIXED INTERNAL;   /* Maximum number of positional      16200001
*                                     parameters                     */ 16250001
*  DCL  MSUB     FIXED INTERNAL;   /* Maximum number of subparameters   16300001
*                                     for one positional             */ 16350001
*  DCL  SYSMVS   FIXED INTERNAL;   /* Indication if similar device      16400001
*                                     list is for MVS section    @LDA*/ 16450001
*  DCL  SYSVM    FIXED INTERNAL;   /* Indication if similar device      16500001
*                                     list is for VM  section    @LDA*/ 16550001
*                                                                       16600001
*/********************************************************************/ 16650001
*/*           INITIALIZE VARIABLES                                   */ 16700001
*/********************************************************************/ 16750001
*                                                                       16800001
*  IMACRO=' ?'||MACLABEL||' '||MACNAME||MACLIST||' '||MACKEYS||' ';     16850001
*  RCERR = 8;                      /* ERROR SEVERITY                 */ 16900001
*  EHARC=0;                        /* INITIALIZE RETURN CODE         */ 16950001
*  INDENT = MACCOL+2;              /* Indent two columns for format  */ 17000001
*  CNT=0;                          /* Clear mumber of entries in array  17050001
*                                                                    */ 17100001
*  MPOS = 255;                     /* Set maximum number of positional  17150001
*                                     parameters                     */ 17200001
*                                                                       17250001
*/********************************************************************/ 17300001
*/*                                                                  */ 17350001
*/*      VALIDATE MACRO LIST                                         */ 17400001
*/*                                                                  */ 17450001
*/********************************************************************/ 17500001
*  ANS(COMMENT(IMACRO)) COL(MACCOL); /* START CODE & LIST               17550001
*                                                MACRO PARAMETERS    */ 17600001
*                                                                       17650001
*  IF NUMBER(MACLIST) > MPOS THEN DO;      /* Check for positionals  */ 17700001
*     CMT = 'Maximum number of positional parameters exceeded - ' ||    17750001
*           'maximum is ' || CHAR(MPOS) ;                               17800001
*     ANS      MSG(CMT);           /* Print error message            */ 17850001
*     ANS (COMMENT(CMT)) COL(INDENT);                                   17900001
*     EHARC = RCERR;               /* Set error return code          */ 17950001
*     END;                                                              18000001
*                                                                       18050001
*  IF MACLABEL='' THEN             /* Verify structure name was         18100001
*                                     specified.                     */ 18150001
*    DO;                                                                18200001
*      CMT = 'Macro label not specified, it is required. ';             18250001
*      ANS     MSG(CMT);           /* print error message            */ 18300001
*      ANS(COMMENT(CMT)) COL(INDENT);                                   18350001
*      EHARC=RCERR;                /* Set error return code          */ 18400001
*    END;                                                               18450001
*                                                                       18500001
*  IF TYPE(1) ~= '' & TYPE(1) ~= 'CU' & TYPE(1) ~= 'DEV' THEN           18550001
*    DO;                                                                18600001
*      CMT = 'Invalid Type parameter, must be either DEV or CU.';       18650001
*      ANS     MSG(CMT);           /* print error message            */ 18700001
*      ANS(COMMENT(CMT)) COL(INDENT);                                   18750001
*      EHARC=RCERR;                /* Set error return code          */ 18800001
*    END;                                                               18850001
*                                                                       18900001
*  IF SYSTEM(1) ~= '' & SYSTEM(1) ~= 'VM' & SYSTEM(1) ~= 'MVS' THEN     18950001
*    DO;                          /* validate SYSTEM parameter   @LDA*/ 19000001
*      CMT = 'Invalid SYSTEM parameter, must be either MVS or VM.';     19050001
*                                  /* Error message              @LDA*/ 19100001
*      ANS     MSG(CMT);           /* print error message        @LDA*/ 19150001
*      ANS(COMMENT(CMT)) COL(INDENT); /*                         @LDA*/ 19200001
*      EHARC=RCERR;                /* Set error return code      @LDA*/ 19250001
*    END;                          /*                            @LDA*/ 19300001
*                                                                       19350001
*/********************************************************************/ 19400001
*/*                                                                  */ 19450001
*/*      Process SYSTEM parameter                                    */ 19500001
*/*                                                                  */ 19550001
*/********************************************************************/ 19600001
*                                                                       19650001
*   IF SYSTEM(1) = '' | SYSTEM(1) = 'MVS' THEN /* for MVS        @LDA*/ 19700001
*   DO;                            /*                            @LDA*/ 19750001
*     SYSMVS = 1;                  /* Indicates MVS              @LDA*/ 19800001
*     MSUB = 3;                    /* maximum number of subparms @LDA*/ 19850001
*   END;                           /*                            @LDA*/ 19900001
*   ELSE DO;                       /* for VM;                    @LDA*/ 19950001
*     SYSVM  = 1;                  /* Indicates VM               @LDA*/ 20000001
*     MSUB = 5;                    /* maximum number of subparms @LDA*/ 20050001
*   END;                           /*                            @LDA*/ 20100001
*                                  /*                                */ 20150001
*/********************************************************************/ 20200001
*/*                                                                  */ 20250001
*/*      Process positional parameters                               */ 20300001
*/*                                                                  */ 20350001
*/********************************************************************/ 20400001
*                                                                       20450001
* DO I = 1 TO NUMBER(MACLIST);     /* Loop through all positionals   */ 20500001
*  IF MACLIST(I) ~= '' THEN                                             20550001
*    DO ;                          /* Test if pos parameter exists   */ 20600001
*     IF NUMBER(MACLIST(I)) > MSUB THEN     /* Check for too many ops*/ 20650001
*       DO;                                                             20700001
*        CMT ='ARG' || CHAR(I) || ':  ' ||                              20750001
*             'TOO MANY SUBPARAMETERS SPECIFIED - MAXIMUM IS ' ||       20800001
*              CHAR(MSUB) || '.';                                       20850001
*        ANS     MSG(CMT);         /* Print error message            */ 20900001
*        ANS(COMMENT(CMT)) COL(INDENT);                                 20950001
*        EHARC=RCERR;              /* Set error return code          */ 21000001
*       END;                                                            21050001
*     ELSE                         /* Step thru subparameters        */ 21100001
*       DO;                                                             21150001
*         IF MACLIST(I,1) ~= '' THEN /* 1st subparameter present ?   */ 21200001
*            TYP(I) = MACLIST(I,1) ; /* Save device type             */ 21250001
*         ELSE                     /* 1st subparameter not present   */ 21300001
*         DO;                                                           21350001
*           CMT ='ARG' || CHAR(I) || ':  ' ||                           21400001
*                'FIRST SUBPARAMETER REQUIRED - (DEVICE TYPE). ';       21450001
*           ANS         MSG(CMT);  /* Print error message            */ 21500001
*           ANS(COMMENT(CMT)) COL(INDENT);                              21550001
*           EHARC=RCERR;           /* Set error return code          */ 21600001
*         END;                                                          21650001
*                                                                       21700001
*         IF MACLIST(I,2) ~= '' THEN /* 2nd subparameter present ?   */ 21750001
*           MOD(I) = MACLIST(I,2)  ; /* Save device model            */ 21800001
*         ELSE ;                   /* 2nd subparameter not present   */ 21850001
*                                                                       21900001
*         IF SYSMVS = 1 THEN       /* SYSTEM = MVS               @LDA*/ 21950001
*         DO;                                                 /* @LDA*/ 22000001
*                                                                       22050001
*         IF MACLIST(I,3)  = 'DEFAULT' THEN /* 3rd parameter     @LDA*/ 22100001
*           DEFLT(I) = MACLIST(I,3); /* Save device type default @LDA*/ 22150001
*         ELSE ;                   /* 3rd subparameter else      @LDA*/ 22200001
*                                                                       22250001
*         END;                     /*                            @LDA*/ 22300001
*                                  /*                                */ 22350001
*         IF SYSVM = 1 THEN        /* SYSTEM = VM                @LDA*/ 22400001
*         DO;                      /*                            @LDA*/ 22450001
*         IF MACLIST(I,3) ~= '' THEN /* 3rd subparameter present @LDA*/ 22500001
*          VMTYP(I) = MACLIST(I,3) ; /* Save VM device type      @LDA*/ 22550001
*         ELSE                     /* 3rd subparm not present    @LDA*/ 22600001
*         DO;                      /*                            @LDA*/ 22650001
*           CMT ='ARG' || CHAR(I) || ':  ' ||                           22700001
*                'THIRD SUBPARAMETER REQUIRED - (VM DEVICE TYPE). ';    22750001
*           ANS         MSG(CMT);  /* Print error message        @LDA*/ 22800001
*           ANS(COMMENT(CMT)) COL(INDENT);                   /*  @LDA*/ 22850001
*           EHARC=RCERR;           /* Set error return code      @LDA*/ 22900001
*         END;                     /*                            @LDA*/ 22950001
*                                                                       23000001
*         IF MACLIST(I,4) ~= '' THEN /* 4th subparameter present @LDA*/ 23050001
*         VMMOD(I) = MACLIST(I,4)  ; /* Save VM device model     @LDA*/ 23100001
*         ELSE ;                   /* 4th subparm not present    @LDA*/ 23150001
*                                  /*                            @LDA*/ 23200001
*         IF MACLIST(I,5)  = 'DEFAULT' THEN /* 5th parameter     @LDA*/ 23250001
*           DEFLT(I) = MACLIST(I,5); /* Save device type default @LDA*/ 23300001
*         ELSE ;                   /* 3rd subparameter else      @LDA*/ 23350001
*                                  /*                            @LDA*/ 23400001
*         END;                     /* VM section                 @LDA*/ 23450001
*                                                                       23500001
*         CNT = CNT+1;             /* Increment number of entries in    23550001
*                                     array                          */ 23600001
*       END;                       /* End of step thru subparameters */ 23650001
*    END;                          /* End of pos parameter exists    */ 23700001
*                                                                       23750001
*  ELSE                            /* Positional parameter not       */ 23800001
*    DO;                           /* specified                      */ 23850001
*     CMT ='Positional parameter ' || CHAR(I) || ' not specified. ';    23900001
*     ANS     MSG(CMT);            /* Print error message            */ 23950001
*     ANS(COMMENT(CMT)) COL(INDENT);                                    24000001
*     EHARC=RCERR;                 /* Set error return code          */ 24050001
*  END;                            /* End of pos parameter processing*/ 24100001
* END ;                            /* End of loop thru positionals   */ 24150001
*                                                                       24200001
*                                                            @SPACE(2); 24250001
* IF EHARC=RCERR THEN               /* Any Parameter errors ?        */ 24300001
*   DO;                             /* ..Yes                         */ 24350001
*     ANS(COMMENT('Error encountered.  No code generated.'))            24400001
*        COL(INDENT);               /* print error message           */ 24450001
*     ANS(COMMENT(IMACRO)) COL(MACCOL);                                 24500001
*     RETURN CODE(EHARC);           /* Return with non-zero return      24550001
*                                      code                          */ 24600001
*   END;                                                                24650001
*/********************************************************************/ 24700001
*/*                                                                  */ 24750001
*/*            GENERATE PL/AS SOURCE STATEMENTS                      */ 24800001
*/*                                                                  */ 24850001
*/********************************************************************/ 24900001
*                                                                       24950001
*  DO I = 1 TO LENGTH(MACLABEL) WHILE (MACLABEL(I:I) ~= ':');           25000001
*  END;                            /* Find the end of the first         25050001
*                                     label.                         */ 25100001
*   I = I - 1;                     /* Do not include the colon.      */ 25150001
*                                                                       25200001
* ANS NORESCAN SKIP(2) COL(MACCOL)                                      25250001
*    ('DECLARE 1 ' || MACLABEL(1:I) || ' BDY(WORD),'||                  25300001
*            ' /* Similar Device List Structure */');                   25350001
* ANS NORESCAN COL(MACCOL+2)                                            25400001
*    ('3 ' || MACLABEL(1:I) || '_CNT ' ||                               25450001
*     'FIXED(31) INIT(' || CHAR(CNT) || ') ,'||                         25500001
*            ' /* Number of entries in array */');                      25550001
* ANS NORESCAN COL(MACCOL+2)                                            25600001
*    ('3 ' || MACLABEL(1:I) || '_LIST, ' ||                             25650001
*            ' /* Device list         */');                             25700001
*                                                                       25750001
* DO I = 1 TO CNT;                                                      25800001
*   ANS NORESCAN SKIP(2) COL(MACCOL+2)                                  25850001
*      ('5 * CHAR(8) INIT(' || TYP(I) || ') ,'||                        25900001
*              ' /* Device type */');                                   25950001
*   IF MOD(I) ~= '' THEN                                                26000001
*        DO; /* device model specified */                               26050001
*          ANS NORESCAN COL(MACCOL+2)                                   26100001
*             ('5 * CHAR(4) INIT(' || MOD(I) || ') ,'||                 26150001
*                     ' /* Device model */');                           26200001
*        END;                                                           26250001
*   ELSE                                                                26300001
*        DO; /* no model specified */                                   26350001
*          ANS NORESCAN COL(MACCOL+2)                                   26400001
*            ('5 * CHAR(4) INIT(''00000000''X) ,'||                     26450001
*            ' /* Device model, contains binary zero if no model */');  26500001
*        END;                                                           26550001
*   IF TYPE(1) ~= 'CU' THEN                                             26600001
*     DO;                                                               26650001
*     IF DEFLT(I) ~= 'DEFAULT' THEN    /* No default model       @LDA*/ 26700001
*                                                                       26750001
*       ANS NORESCAN COL(MACCOL+2)                                      26800001
*            ('5 * CHAR(4) INIT(''00000000''X) ,'||                     26850001
*            ' /* Reserved @LDA*/');               /*            @LDA*/ 26900001
*     ELSE                             /* Default model given    @LDA*/ 26950001
*                                                                       27000001
*       ANS NORESCAN COL(MACCOL+2)                                      27050001
*            ('5 * CHAR(4) INIT(''00000080''X) ,'||                     27100001
*            ' /* Indicates Default model @LDA*/');  /*          @LDA*/ 27150001
*   IF SYSVM = 1 THEN           /* SYSTEM = VM                   @LDA*/ 27200001
*   DO;                         /* Sets VM device type           @LDA*/ 27250001
*   ANS NORESCAN SKIP(2) COL(MACCOL+2)                                  27300001
*      ('5 * CHAR(8) INIT(' || VMTYP(I) || ') ,'||                      27350001
*              ' /* VM Device type @LDA*/');       /*            @LDA*/ 27400001
*   IF VMMOD(I) ~= '' THEN      /* VM device model specified     @LDA*/ 27450001
*        DO; /* VM device model specified @LDA*/                        27500001
*          ANS NORESCAN COL(MACCOL+2)                                   27550001
*             ('5 * CHAR(4) INIT(' || VMMOD(I) || ') ,'||               27600001
*                     ' /* Device model @LDA*/');  /*            @LDA*/ 27650001
*        END;                                      /*            @LDA*/ 27700001
*   ELSE                                           /*            @LDA*/ 27750001
*        DO; /* no model specified */              /*            @LDA*/ 27800001
*          ANS NORESCAN COL(MACCOL+2)                                   27850001
*            ('5 * CHAR(4) INIT(''00000000''X) ,'||                     27900001
*      ' /* VM Device model, contains binary zero if no model @LDA*/'); 27950001
*        END;                                      /*            @LDA*/ 28000001
*     END;              /* End VM processing                     @LDA*/ 28050001
*     END;                                                              28100001
* END ;                 /* End of loop through array entries         */ 28150001
* ANS NORESCAN COL(MACCOL+2)                                            28200001
*    ('3 * CHAR(0) ; '||                                                28250001
*            ' /* End of Structure */');                                28300001
*                                                                       28350001
*EXIT:;                                                                 28400001
* RETURN CODE(EHARC);               /* RETURN SUCCESSFUL             */ 28450001
* %END CBDISIML;                                                        28500001
