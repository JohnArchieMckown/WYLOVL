*  %GOTO TSPPRO;                         /*
       MACRO
       IKJTSP
.*/ %TSPPRO: ;
*/***PROPRIETARY_STATEMENT********************************************/
*/*01* PROPRIETARY STATEMENT=                                        */
*/*                                                                  */
*/*                                                                  */
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */
*/* 5685-025 (C) COPYRIGHT IBM CORP. 1984, 1989                      */
*/* SEE COPYRIGHT INSTRUCTIONS                                       */
*/*                                                                  */
*/* STATUS= JTE21X2                                                  */
*/*                                                                  */
*/***END_OF_PROPRIETARY_STATEMENT*************************************/
*/********************************************************************/
*/*                                                                  */
*/* MODULE NAME = IKJTSP                                             */
*/*                                                                  */
*/* DESCRIPTIVE NAME = PARAMETER LIST FOR IKJEFTSL                   */
*/*                                                                  */
*/*                                                                  */
*/* FUNCTION = IKJTSP MAPS THE PARAMETERS PASSED TO THE LINKAGE      */
*/*            ASSIST ROUTINE IKJEFTSL.  IT ALSO CONTAINS THE        */
*/*            THE CONSTANTS USED TO SET TSPTYPE WHEN REQUESTING     */
*/*            IKJEFTSL TO PERFORM A PARTICULAR FUNCTION.            */
*/*                                                                  */
*/* MODULE TYPE = MAPPING MACRO                                      */
*/*                                                                  */
*/* PROCESSOR = PL/AS                                                */
*/*                                                                  */
*/* MODULE-SIZE = 120 BYTES                                          */
*/*                                                                  */
*/* ATTRIBUTES = STORAGE MUST BE IN THE SAME KEY AS THE INVOKER      */
*/*                                                                  */
*/* INVOCATION =                                                     */
*/*                                                                  */
*/*   ASSEMBLER - IKJTSP                                             */
*/*                                                                  */
*/*   PL/S   %TSPB = ''      If you don't want the mapping based     */
*/*          %TSPB = 'BASED' If you want the mapping based           */
*/*          %TSPB = 'BASED(TSPPTR)' If you want the mapping based   */
*/*                                  on a pointer                    */
*/*          %INCLUDE SYSLIB(IKJTSP)                                 */
*/*                                                                  */
*/*                                                                  */
*/* CHANGE ACTIVITIES                                                */
*/*   OY01729 - APAR was used to put part into a prior release -     */
*/*             no changes to the mapping macro was made.            */
*/*                                                                  */
*/* The following table shows each mapping macro field, a            */
*/* description for each field, the order it will appear in the      */
*/* mapping macro, and the module names that will use the mapping    */
*/* macro field.                                                     */
*/*                                                                  */
*/*I-----------I--------------------------------------I-------------I*/
*/*I MAPPING   I  DESCRIPTION                         I MODULE NAME I*/
*/*IMACRO FIELDI                                      I USING FIELD I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPTSP    I  Acronym in EBCDIC 'TSP '            I All modules I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPLEV    I  TSP version  (Level)                I All modules I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPTYPE   I  Number indicating type of           I All modules I*/
*/*I           I  function to perform                 I             I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPDCB    I  Address of DCB                      I IKJEFT01    I*/
*/*I           I                                      I IKJEFT02    I*/
*/*I           I                                      I IKJEFT08    I*/
*/*I           I                                      I IKJEFT09    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPPLIST  I  Address of list form of the macro   I IKJEFT01    I*/
*/*I           I                                      I IKJEFT02    I*/
*/*I           I                                      I IKJEFT08    I*/
*/*I           I                                      I IKJEFT09    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPDECB   I  Address of Data Event Control Block I IKJEFT01    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPMEMB   I  Address of buffer for UADS member   I IKJEFT01    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPSAVEA  I  SAVE area need for IKJEFTSL         I IKJEFTSL    I*/
*/*I           I  registers                           I internal useI*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPSTAT   I  AREA for status for synad routine   I IKJEFTSL    I*/
*/*I           I                                      I internal useI*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPRCODE  I  RETURN CODE ISSUED BY INVOKED       I IKJEFTSL    I*/
*/*I           I  MACRO                               I IKJEFT01    I*/
*/*I           I                                      I IKJEFT02    I*/
*/*I           I                                      I IKJEFT08    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I The following fields are constants that can be used to set     I*/
*/*I TSPTSP or TSPLEV                                               I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPTSPC   I  Set TSPTSP to the EBCDIC acronym    I IKJEFT01    I*/
*/*I           I  'TSP '                              I IKJEFT09    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPLEV1   I  Set TSPLEV to the first version     I IKJEFT01    I*/
*/*I           I  level of IKJTSP mapping macro       I IKJEFT09    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I The following fields are constants that can be used to set     I*/
*/*I TSPTYPE to request particular functions to be performed by     I*/
*/*I IKJEFTSL                                                       I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPOPENS  I  Request for a data set to be OPENed I IKJEFT01    I*/
*/*I           I  as input and has SYNAD exit routine I             I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPOPEN   I  Request for a data set to be OPENed I IKJEFT08    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPCLOSS  I  Request for a data set to be CLOSEd I IKJEFT01    I*/
*/*I           I  and has a SYNAD exit routine        I             I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPCLOSE  I  Request for a data set to be CLOSEd I IKJEFT08    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPCLOSF  I  Request for a data set to be CLOSEd I IKJEFT09    I*/
*/*I           I  as FREE                             I             I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPBLDL   I  Request a BLDL on a library         I IKJEFT02    I*/
*/*I           I                                      I IKJEFT08    I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPREAD   I  Request for a data set to be READ   I IKJEFT01    I*/
*/*I           I  followed be a CHECK to see if the   I             I*/
*/*I           I  I/O processing is complete          I             I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*I TSPFIND   I  Request to do a FIND on a name in   I IKJEFT01    I*/
*/*I           I  a data set                          I             I*/
*/*I-----------I--------------------------------------I-------------I*/
*/*                                                                  */
*/********************************************************************/
*/*A000000-999999                                            @E2267H1*/
*  %GOTO TSPPLS;                         /*
TSP       DSECT
          DS  0D
TSPTSP    DS  CL4            IDENTIFIER 'TSP '
TSPTSPC   EQU C'TSP '        TSP ACRONYM CONSTANT
TSPLEV    DS  XL1            TSP VERSION NUMBER
TSPLEV1   EQU X'01'          TSP VERSION NUMBER CONSTANT
TSPRES01  DS  XL1            RESERVED
TSPRES02  DS  XL1            RESERVED
TSPRES03  DS  XL1            RESERVED
TSPWA     EQU *              USED TO CLEAR OUT WORK AREA
TSPTYPE   DS  F              TYPE OF FUNCTION TO PERFORM
TSPOPENS  EQU 1              OPEN DATA SET AS INPUT WITH SYNAD EXIT
TSPOPEN   EQU 2              OPEN A DATA SET
TSPCLOSS  EQU 256            CLOSE DATA SET WITH SYNAD EXIT
TSPCLOSE  EQU 257            CLOSE DATA SET
TSPCLOSF  EQU 258            CLOSE DATA SET AS FREE
TSPBLDL   EQU 512            BLDL ON LIBRARY
TSPREAD   EQU 768            READ A DATA SET FOLLOWED BY A CHECK
*                            TO SEE IF I/O IS FINISHED
TSPFIND   EQU 1280           FIND A NAME IN A DATA SET
TSPDCB    DS  AL4            ADDRESS OF DCB
TSPPLIST  DS  AL4            ADDRESS OF MACRO LIST ADDRESS
TSPDECB   DS  AL4            ADDRESS OF DATA EVENT CONTROL BLCK
TSPMEMB   DS  AL4            ADDRESS OF BUFFER FOR MEMBER NAME
TSPSAVEA  DS  18F            SAVE AREA FOR IKJEFTSL REGISTERS
TSPSTAT   DS  F              AREA FOR STATUS OF SYNAD
TSPRCODE  DS  F              AREA FOR RETURN CODE FROM EXECUTED MACRO
TSPRES04  DS  F              RESERVED
* SET THE TSPTYPE WITH ONE OF THE FOLLOWING CONSTANTS TO INDICATE
* THE TYPE OF FUNCTION THAT WILL BE PERFORMED
TSPEND    DS  0D    '        END IKJTSP ON A DOUBLE WORD BOUNDRY
TSPWALEN  EQU *-TSPWA        LENGTH OF LOGON WORK AREA
          MEND
.*/ %TSPPLS: ;
*DCL 1 TSPMAP TSPB BDY(DWORD),
*        2 TSPTSP   CHAR(4),      /* IDENTIFIER 'TSP '               */
*        2 TSPLEV   FIXED(8),     /* VERSION NUMBER                  */
*        2 TSPRES01 BIT(8),       /* RESERVED                        */
*        2 TSPRES02 BIT(8),       /* RESERVED                        */
*        2 TSPRES03 BIT(8),       /* RESERVED                        */
*        2 TSPWA,                 /* USED TO CLEAR OUT WORK AREA     */
*           3 TSPTYPE  FIXED(31), /* TYPE OF FUNCTION TO PERFORM - THIS
*                   CAN BE SET BY USING THE CONSTANTS DECLARED BELOW */
*           3 TSPDCB   PTR(31),   /* ADDRESS OF DCB                  */
*           3 TSPPLIST PTR(31),   /* ADDRESS OF MACRO LIST ADDRESS   */
*           3 TSPDECB  PTR(31),   /* ADDRESS OF DATA EVENT CONTROL
*                                                           BLOCK    */
*           3 TSPMEMB  PTR(31),   /* ADDRESS OF BUFFER FOR
*                                                       MEMBER NAME  */
*           3 TSPSAVEA CHAR(72),  /* SAVE AREA FOR IKJEFTSL REGISTERS*/
*           3 TSPSTAT  FIXED(31), /* AREA FOR STATUS OF SYNAD
*                                    (INTERNAL USE ONLY)             */
*           3 TSPRCODE FIXED(31), /* AREA FOR MACRO RETURN CODE      */
*           3 TSPRES04 FIXED(31), /* RESERVED                        */
*        2 TSPEND CHAR(0) BDY(DWORD); /* ASSURE WORK AREA ENDS ON A
*                                     DOUBLE WORD BOUNDRY.  ANY
*                                     ADDITIONS TO WORK AREA SHOULD BE
*                                     PUT BEFORE TSPEND              */
*/*                                                                  */
*/*  The following fields are constants that can be used to set      */
*/*  TSPTSP or TSPLEV                                                */
*/*                                                                  */
*DCL
*TSPTSPC   CHAR(4) CONSTANT('TSP '),/* TSP ACRONYM CONSTANT          */
*TSPLEV1   FIXED(8) CONSTANT(1);   /* TSP VERSION NUMBER             */
*/*                                                                  */
*/* SET THE TSPTYPE WITH ONE OF THE FOLLOWING CONSTANTS TO INDICATE  */
*/* THE TYPE OF FUNCTION THAT WILL BE PERFORMED                      */
*/*                                                                  */
*DCL
*TSPOPENS  CONSTANT(1),            /* OPEN DATA SET AS INPUT
                                               INPUT WITH SYNAD EXIT */
*TSPOPEN   CONSTANT(2),             /* OPEN A DATA SET               */
*TSPCLOSS  CONSTANT(256),           /* CLOSE DATA SET
*                                     WITH SYNAD EXIT                */
*TSPCLOSE  CONSTANT(257),           /* CLOSE DATA SET                */
*TSPCLOSF  CONSTANT(258),           /* CLOSE DATA SET AS FREE        */
*TSPBLDL   CONSTANT(512),           /* BLDL ON LIBRARY               */
*TSPREAD   CONSTANT(768),           /* READ A DATA SET FOLLOWED BY A
*                                    CHECK TO SEE IF I/O IS FINISHED */
*TSPFIND   CONSTANT(1280);          /* FIND A NAME IN A DATA SET     */
