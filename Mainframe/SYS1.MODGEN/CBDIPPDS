*%GOTO PPDS50;                     /* Bilingual Macro                   00050001
         MACRO                                                          00100001
&NAME    CBDIPPDS &FUNC,&DIAG=,&REQ=,&RELATED=                          00150001
         AGO   .PPDS00                                               */ 00200001
*/********************************************************************/ 00250001
*/*                                                                  */ 00300001
*/*  MACRO NAME = CBDIPPDS                                           */ 00350001
*/*                                                                  */ 00400001
*/*  DESCRIPTIVE NAME = HCD Push/Pop Diagnostic Stack Macro          */ 00450001
*/*                                                                  */ 00500001
*/*  PROPRIETARY STATEMENT =                                         */ 00550001
*/*                                                                  */ 00600001
*/*     LICENSED MATERIALS - PROPERTY OF IBM                         */ 00650001
*/*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                  */ 00700001
*/*     5645-001 (C) COPYRIGHT IBM CORP. 1990,1997                   */ 00750003
*/*     SEE COPYRIGHT INSTRUCTIONS.                                  */ 00800001
*/*                                                                  */ 00850001
*/*  STATUS = HCS6031                                                */ 00900003
*/*                                                                  */ 00950001
*/*  MODULE TYPE = PLAS MACRO                                        */ 01000001
*/*                                                                  */ 01050001
*/*  DEPENDENCIES = Diagnostic stack entry which is mapped by        */ 01100001
*/*                 macro CBDZDIAG.                                  */ 01150001
*/*                 The routine must have addressability to the CPVT */ 01200001
*/*                 which is mapped by macro CBDZCPVT.               */ 01250001
*/*                                                                  */ 01300001
*/*  RESTRICTIONS = For HCD and UIM use only                         */ 01350001
*/*                 Register 1,14 and 15 will be destroyed.          */ 01400001
*/*                                                                  */ 01450001
*/*  PROCESSOR = PLAS Compiler                                       */ 01500001
*/*                                                                  */ 01550001
*/*  INVOCATION =                                                    */ 01600001
*/*             PLAS                                                 */ 01650001
*/*               ?  label:  CBDIPPDS                                */ 01700001
*/*                                    (PUSH) | (POP)                */ 01750001
*/*                                    DIAG(structure)               */ 01800001
*/*                                    REQ(UIM)                      */ 01850001
*/*                                    RELATED('related string')     */ 01900001
*/*             BAL                                                  */ 01950001
*/*                  label   CBDIPPDS                                */ 02000001
*/*                                    PUSH | POP                    */ 02050001
*/*                                    ,DIAG=structure               */ 02100001
*/*                                    ,REQ=UIM                      */ 02150001
*/*                                    ,RELATED=('related string')   */ 02200001
*/*                                                                  */ 02250001
*/*     PUSH        Causes an entry to be pushed onto the            */ 02300001
*/*                  diagnostic stack.                               */ 02350001
*/*                                                                  */ 02400001
*/*     POP         Causes an entry to be popped from the diagnostic */ 02450001
*/*                  stack.                                          */ 02500001
*/*                                                                  */ 02550001
*/*     structure   Structure name of the diagnostic stack entry.    */ 02600001
*/*                                                                  */ 02650001
*/*     REQ=UIM     specifies that the issuer of the macro call is   */ 02700001
*/*                 a UIM rather than an internal HCD routine        */ 02750001
*/*                                                                  */ 02800001
*/*     related string   Optional                                    */ 02850001
*/*                                                                  */ 02900001
*/*  CHANGE ACTIVITY =                                               */ 02950001
*/*    $L0= HCD,  HCSH101 900420 BOEB: Hardware Configuration Dialog */ 03000001
*/*    $M1 = QUAL, HCS6031 960730 BBEI: Pass module address          */ 03050001
*/*                                                                  */ 03060001
*/********************************************************************/ 03100001
*/*                                                                     03150001
.PPDS00  ANOP                                                           03200001
         LCLA  &I                      Index for string                 03250001
         LCLA  &ERROR                  Error flag                       03300001
         LCLC  &DIAGFUNC               Target field for MVC             03350001
         LCLC  &DIAGFROM               From field                       03400001
         LCLC  &DIAGNEXT               Chain pointer                    03450001
         LCLC  &RTNADDR               Push/Pop service routine address  03500001
         LCLC  &CPVT                  CPVT address field                03550001
         LCLC  &OP                    Instrcution code                  03600001
         LCLA  &SDX                   &SYSNDX value                     03650001
.*                                                                      03700001
&SDX     SETA  &SYSNDX                Set value for labels              03750001
&CPVT    SETC  'CPVT'                 Set default CPVT address field    03800001
&OP      SETC  'LA'                   Default instr to load CPVT addr   03850001
&RTNADDR SETC  'CPVTPPDS'             SET address of Push/Pop routine   03900001
.*                                                                      03950001
&ERROR  SETA   0                                                        04000001
&I      SETA   K'&DIAG                 Find length of string            04050001
.*                                                                      04100001
        AIF    (&I GT 0).PPDS01        Test for maximum size            04150001
        MNOTE  8,'DIAG PARAMETER NOT SPECIFIED.  IT IS REQUIRED.'       04200001
&ERROR  SETA   1                                                        04250001
.PPDS01 ANOP                                                            04300001
        AIF    ('&FUNC' EQ 'PUSH').PPDS02                               04350001
        AIF    ('&FUNC' EQ 'POP').PPDS02                                04400001
        AIF    ('&FUNC' EQ '').FNULL                                    04450001
.BADFUNC MNOTE 8,'UNRECOGNIZED POSITIONAL PARAMETER: &FUNC.  MUST BE ''X04500001
               PUSH'' OR ''POP''.'                                      04550001
&ERROR  SETA   1                                                        04600001
        AGO    .PPDS02                                                  04650001
.FNULL  MNOTE 8,'NO POSITIONAL PARAMETER SPECIFIED.  SPECIFY ''PUSH'' OX04700001
               R ''POP''.'                                              04750001
&ERROR  SETA   1                                                        04800001
.PPDS02 ANOP                                                            04850001
.*                                                                      04900001
         AIF   ('&REQ' EQ '').PPDS04    REQ  not specified              04950001
         AIF   ('&REQ' NE 'UIM').REQE1  invalid REQ= specification      05000001
&CPVT    SETC  'UCACPVTP'               Set UIM CPVT address field      05050001
&OP      SETC  'L '                     Set instr code to get CPVT addr 05100001
&RTNADDR SETC  'UCAMPPDS'               Set address of Push/Pop routine 05150001
         AGO   .PPDS04                  REQ=UIM specified, continue     05200001
.*                                                                      05250001
.REQE1   MNOTE 8,'*** INVALID REQ PARAMETER'                            05300001
&ERROR   SETA  1                       Indicate error                   05350001
.*                                                                      05400001
.PPDS04  ANOP                                                           05450001
.*                                                                      05500001
        AIF    (&ERROR GT 0).EXIT      If an error was detected, skip   05550001
.*                                      generation of code              05600001
        AIF    (&I LE 4).PPDS07        Test for maximum size            05650001
&I      SETA   4                       Set maximum size                 05700001
.PPDS07 ANOP                                                            05750001
&DIAGFUNC SETC '&DIAG'(1,&I).'FUNC'    Set target field name            05800001
&DIAGFROM SETC 'DIAG'.'&FUNC'          Set target field name            05850001
&DIAGNEXT SETC '&DIAG'(1,&I).'NEXT'    Set target field name            05900001
.*                                                                      05950001
.*                                                                      06000001
.********************************************************************** 06050001
.*                                                                    * 06100001
.*             Generate linkage to Push/pop Service Routine           * 06150001
.*                                                                    * 06200001
.********************************************************************** 06250001
.*                                                                      06300001
         AIF   ('&NAME' EQ '').NNULL                                    06350001
&NAME    EQU   *                                                        06400001
.NNULL   ANOP                                                           06450001
         &OP   15,&CPVT                Get CPVT address                 06500001
         ST    15,DIAG&SDX             Set CPVT address                 06550001
         LA    15,&DIAG                Get address of stack entry       06600001
         ST    15,DIAG&SDX+4           Save stack entry addr in parm    06650001
         B     DIAG&SDX+8              Branch around parm list          06700001
DIAG&SDX DC    A(0)                    Address of CPVT                  06750001
         DC    A(0)                    Address of stack entry           06800001
         LA    1,DIAG&SDX              Address of parameter area        06850001
         MVC   &DIAGFUNC,&DIAGFROM     Move function to target field    06900001
         L     15,&RTNADDR             Get address of Push/Pop routine  06950001
         BALR  14,15                   Branch to Push/Pop routine       07000001
.*                                                                      07050001
.********************************************************************** 07100001
.*                                                                    * 07150001
.*       Exit                                                         * 07200001
.*                                                                    * 07250001
.********************************************************************** 07300001
.*                                                                      07350001
.EXIT    ANOP                                                           07400001
         MEND                                                        */ 07450001
*%PPDS50: ;                                                             07500001
*%CBDIPPDS:                                                             07550001
*   MACRO KEYS(DIAG,REQ,RELATED);                                       07600001
*                                                                       07650001
*  DCL  I  FIXED;                      /* Index into strings.        */ 07700001
*  DCL  ERROR FIXED;                   /* Error flag.                */ 07750001
*  DCL  FUNCTION CHAR;                 /* Positional parameter.      */ 07800001
*  DCL  IMACRO   CHAR;                 /* Macro parameters           */ 07850001
*  DCL  IERRMSG  CHAR;                 /* Error message.             */ 07900001
*                                                                       07950001
*  ERROR=0;                                                             08000001
*  IMACRO=' ?'||MACLABEL||MACNAME||MACLIST||' '||MACKEYS||' ';          08050001
*  IF MACLABEL~='' THEN                    /* Generate Maclabel.     */ 08100001
*     ANS(MACLABEL)  COL(MACLMAR);                                      08150001
*  ANS('DO; '|| COMMENT(IMACRO)) COL(MACCOL); /* Start code & list      08200001
*                                                macro parameters.   */ 08250001
*  IF DIAG = '' THEN                                                    08300001
*    DO;                                                                08350001
*      ERROR = 1;                      /* Set error flag             */ 08400001
*      IERRMSG = 'DIAG PARAMETER NOT SPECIFIED.  IT IS REQUIRED.';      08450001
*      ANS MSG(IERRMSG);                                                08500001
*      ANS (COMMENT(IERRMSG));                                          08550001
*    END;                                                               08600001
*  IF NUMBER(MACLIST) < 1 THEN                                          08650001
*    DO;                                                                08700001
*      ERROR = 1;                      /* Set error flag             */ 08750001
*      IERRMSG = 'NO POSITIONAL PARAMETER SPECIFIED.  ' ||              08800001
*                'SPECIFY ''(PUSH)'' OR ''(POP)''.';                    08850001
*      ANS MSG(IERRMSG);                                                08900001
*      ANS (COMMENT(IERRMSG));                                          08950001
*      GOTO PPDS90;                                                     09000001
*    END;                                                               09050001
*  IF NUMBER(MACLIST) > 1 THEN                                          09100001
*    DO;                                                                09150001
*      ERROR = 1;                      /* Set error flag             */ 09200001
*      IERRMSG = 'MORE THAN ONE POSITIONAL PARAMETER SPECIFIED.  ' ||   09250001
*                'ONLY ''(PUSH)'' OR ''(POP)'' IS ALLOWED.';            09300001
*      ANS MSG(IERRMSG);                                                09350001
*      ANS (COMMENT(IERRMSG));                                          09400001
*      GOTO PPDS90;                                                     09450001
*    END;                                                               09500001
*                                                                       09550001
*   IF MACLIST(1) = 'PUSH' THEN ;                                       09600001
*   ELSE                                                                09650001
*    IF MACLIST(1) = 'POP ' THEN ;        /* Validate the positional    09700001
*                                           parameter.               */ 09750001
*    ELSE                                                               09800001
*    DO;                                                                09850001
*      ERROR = 1;                      /* Set error flag             */ 09900001
*      IERRMSG = 'UNRECOGNIZED POSITIONAL PARAMETER SPECIFIED:  ' ||    09950001
*                MACLIST(1) || '.  ' ||                                 10000001
*                'MUST BE ''(PUSH)'' OR ''(POP)''.';                    10050001
*      ANS MSG(IERRMSG);                                                10100001
*      ANS (COMMENT(IERRMSG));                                          10150001
*    END;                                                               10200001
*                                                                       10250001
*  IF REQ ~= '' THEN DO;           /* Test if REQ parameter exists   */ 10300001
*     IF REQ(1) ~= 'UIM' THEN DO;  /* Must be REQ=UIM                */ 10350001
*        IERRMSG ='INVALID REQ PARAMETER. ';                            10400001
*        ANS MSG(IERRMSG);         /* Print error message            */ 10450001
*        ANS(COMMENT(IERRMSG));                                         10500001
*        ERROR = 1;                   /* Set error flag             */  10550001
*        END;                                                           10600001
*     END;                                                              10650001
*                                                                       10700001
*    IF ERROR > 0 THEN                 /* Were any errors encountered*/ 10750001
*       GOTO PPDS90;                   /* Yes, skip code             */ 10800001
*                                                                       10850001
*  FUNCTION = QUOTE(MACLIST(1));                                        10900001
*  I = LENGTH(DIAG);                                                    10950001
*  IF I > 6 THEN                                                        11000001
*     I = 6;                                                            11050001
*                                                                       11100001
*  ANSWER (DIAG(2:I-1)  || 'FUNC = ' || FUNCTION || ';' ||              11150001
*          COMMENT(' Set function '));                                  11200001
*  IF MACLIST(1) = 'PUSH' THEN                        /*        @M1A*/  11210001
*     ANSWER ('GEN SETS(' || DIAG(2:I-1) || 'NEXT) ' ||                 11230002
*                 '(ST  12,' || DIAG(2:I-1) || 'NEXT);' ||              11231002
*          COMMENT(' Pass module address '));         /*        @M1A*/  11240001
*                                                                       11241001
*  IF REQ(1)= 'UIM'  THEN                                               11250001
*     ANSWER ('CALL UCAMPPDS (UCAMCPVT,' || DIAG(1) || ');' ||          11300001
*           COMMENT(' Perform function '));                             11350001
*  ELSE                                                                 11400001
*     ANSWER ('CALL CPVMPPDS (CPVT,' || DIAG(1) || ');' ||              11450001
*           COMMENT(' Perform function '));                             11500001
*                                                                       11550001
*PPDS90: ;                                                              11600001
*  ANS('END; '|| COMMENT(IMACRO)) COL(MACCOL); /* End code & list       11650001
*                                                 macro parameters.  */ 11700001
*%END CBDIPPDS;                                                         11750001
