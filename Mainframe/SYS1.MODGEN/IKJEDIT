         MACRO
         IKJEDIT &MODULE=,&DSTYPE=,&BLOCK=,&FORMAT=,&FIXED=,&CONVERT=, X
               &VAR=,&CHECKER=,&USEREXT=,&PRMPTR=,&USERSRC=,           X
               &DATEXIT=                                       @E2367FY
         COPY  IKJEGLBL                                        @E2367FY
         LCLA  &A,&I,&J,&K,&L,&M
         LCLB  &B,&X
         LCLC  &C
.*  **PROPRIETARY_STATEMENT********************************************
.* *01* PROPRIETARY STATEMENT=                                        *
.*                                                                    *
.*                                                                    *
.*   LICENSED MATERIALS - PROPERTY OF IBM                             *
.*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *
.*   5685-025 (C) COPYRIGHT IBM CORP. 1986, 1989                      *
.*   SEE COPYRIGHT INSTRUCTIONS                                       *
.*                                                                    *
.*   STATUS= JTE21X2                                                  *
.*                                                                    *
.*  **END_OF_PROPRIETARY_STATEMENT*************************************
.***** START OF SPECIFICATIONS **************************************
.*
.* MODULE NAME - EDIT
.*
.* DESCRIPTIVE NAME - EDIT
.*
.*
.* FUNCTION -
.*       THE EDIT MACRO IS USED TO SPECIFY THE PHYSICAL CHARACTERISTICS
.*       AND PROCESSING ATTRIBUTES OF THE DATA SETS TO BE PROCESSED
.*       BY THE TSO EDIT COMMAND.
.*
.* NOTES - N/A
.*
.* MODULE TYPE - MACRO
.*
.* ENTRY POINT - N/A
.*
.* INPUT - THE FOLLOWING PARAMETERS ARE ALLOWED ON EDIT
.*             &BLOCK   - SPECIFIES IN BYTES THE DEFAULT LENGTH OF
.*                        BLOCKS FOR DATA SETS CREATED BY THE TSO
.*                        EDIT COMMAND.
.*             &CHECKER - SPECIFIES THE INSTALLATION-SUPPLIED PROCESSOR
.*                        THAT IS TO BE USED BY THE TSO COMMAND TO
.*                        CHECK LINES IN THE DATA SET FOR PROPER SYNTAX
.*             &CONVERT - SPECIFIES WHETHER INPUT DATA TO THE TSO EDIT
.*                        COMMAND SHOULD BE CONVERTED TO UPPER CASE.
.*             &DATEXIT - SPECIFIES THE INSTALLATION-SUPPLIED DATA EXIT
.*                        ROUTINE THAT IS TO BE INVOKED BY THE TSO EDIT
.*                        COMMAND TO INTERPRET THE PARAMETER SPECIFIED
.*                        IN THE DSTYPE OPERAND OF THE TSO EDIT COMMAND
.*             &DSTYPE  - SPECIFIES IBM-STANDARD DATA SET TYPES OR NEW
.*                        DATA SET TYPES DEFINED BY USER THAT ARE TO
.*                        HAVE THEIR ATTRIBUTES MODIFIED OR DEFINED FOR
.*                        USE BY THE TSO EDIT COMMAND
.*             &FIXED   - SPECIFIES IN BYTES THE DEFAULT AND MAXIMUM
.*                        ALLOWABLE LENGTH OF LOGICAL FIXED-LENGTH
.*                        RECORDS FOR DATA SETS CREATED BY THE TSO EDIT
.*                        COMMAND.
.*             &FORMAT  - SPECIFIES THE ALLOWABLE RECORD FORMAT FOR NEW
.*                        DATA SETS CREATED BY THE TSO EDIT COMMAND.
.*             &PRMPTR  - SPECIFIES THE INSTALLATION-SUPPLIED PROCESSOR
.*                        THAT IS TO USED BY THE RUN SUBCOMMAND OF THE
.*                        TSO EDIT COMMAND.
.*             &USEREXT - SPECIFIES THE INSTALLATION-SUPPLIED USER EXIT
.*                        ROUTINE THAT IS TO BE INVOKED BY THE TSO EDIT
.*                        COMMAND TO INTERPRET THE PARAMETER SPECIFIED
.*                        IN THE DSTYPE OPERAND OF THE TSO EDIT COMMAND
.*             &USERSRC - SPECIFIES THE TYPE OF INPUT ACCEPTABLE TO THE
.*                        PROCESSOR SPECIFIED IN THE PRMPTR PARAMETER
.*                        IN THE TSO EDIT COMMAND.
.*             &VAR     - SPECIFIES IN BYTES THE DEFAULT AND MAXIMUM
.*                        ALLOWABLE LENGTH OF LOGICAL VARIABLE-LENGTH
.*                        RECORDS WITH VARIABLE-RECORD FORMAT FOR NEW
.*                        DATA SETS CREATED BY THE TSO EDIT COMMAND.
.* OUTPUT -
.*       GLOBALS USED ARE -
.*          &SGMENTB(61)    - EDIT MACRO CALLED
.*          &SGEDITA(1-26)  - SET FOR BLOCK PARAMETER
.*          &SGEDT2A(1-26)  - SET FOR FIXED PARAMETER
.*          &SGEDT3A(1-26)  - SET FOR FIXED MAXIMUM PARAMETER
.*          &SGEDT4A(1-26)  - SET FOR VAR PARAMETER
.*          &SGEDT5A(1-26)  - SET FOR VAR MAXIMUM PARAMETER
.*          &SGEDITC(1-26)  - SET FOR DSTYPE PARAMETER - MAX OF 26
.*          &SGEDT2C(1-26)  - SET FOR FORMAT PARAMETER
.*          &SGEDT3C(1-26)  - SET FOR CONVERT PARAMETER
.*          &SGEDT4C(1-26)  - SET FOR CHECKER PARAMETER
.*          &SGEDT5C(1-26)  - SET FOR USEREXT PARAMETER
.*          &SGEDT6C(1-26)  - SET FOR PRMPTR PARAMETER
.*          &SGEDT7C(1-26)  - SET FOR USERSRC PARAMETER
.*          &SGEDT8C(1-26)  - SET FOR DATEXIT PARAMETER
.*          &SGQUITB        - QUIT SWITCH
.*             &SGCNTRA(4)  - COUNT OF ESOTERIC NAMES FROM UNITNAME
.*             &SGCNTRA(5)  - COUNT OF ADDRESSES FROM UNITNAME
.*             &SGCNTRA(6)  - CONTROL IN UNITNAME
.*             &SGUNSGA     - TOTAL COUNT OF ESOTERIC AND GENERIC NAMES
.*             &SGUNVA      - COUNT OF VIO NAMES
.*             &SGQUITB     - QUIT SWITCH
.*             &SGUNVB(1-100)  - VIO BIT FOR ESOTERIC LIST
.*             &SGUNNMC(1-100) - NAMES GIVEN IN MACRO CALL
.*             &SGUNNVC(1-100) - VIO DEVICE NAMES
.*             &SGUNNMA(1-514) - ADDRESSES ASSOCIATED WITH NAMES
.*
.*       LOCALS USED ARE -
.*             &A      - SUBSCRIPT FOR CHECKING DEFAULTS OF THE DSTYPE
.*             &B      - SET IF DEFAULT TAKEN
.*             &C      - SET FOR CHECKING MINIMUM AND MAXIMUM VALUES
.*             &I      - SET FOR CHECKING MAXIMUM OF NONSTANDARD DSTYPE
.*             &J      - SET TO CHECK MAXIMUM OF 26 DSTYPES
.*             &K      - SET TO MATCH DSTYPE AND OTHER PARMS
.*             &L      - SET TO MATCH IBM-SUPPLIED DSTYPE
.*             &M      - SET TO CHECK IF A DSTYPE HAS BEEN SPECIFIED
.*             &X      - SET TO CHECK IF A HYPHEN IS MISSING
.*
.* EXIT, NORMAL - N/A
.*
.* EXIT, ERROR - N/A
.*
.* EXTERNAL REFERENCES - N/A
.*
.* TABLES - N/A
.*
.* MACROS - NONE
.*
.* CHANGE ACTIVITY - Y02676,Y03NS04
.*  CREATED FOR TSO/E RELEASE 3 IOGEN RESTRUCTURE SUPPORT      @E2367FY
.*
.****** END OF SPECIFICATIONS ***************************************
         AIF   (NOT &SGMENTB(61)).E2    TEST FOR PREVIOUS ENTRY
    MNOTE 5,'* * * IKJ52584I EDIT MACRO PREVIOUSLY USED'       @E2367FY
&SGQUITB SETB  1                        SET QUIT BIT
         MEXIT
.E2      ANOP
&SGMENTB(61)   SETB 1                   SET EDIT ENTRY SWITCH
         AIF   (N'&DSTYPE EQ 0).E44     TEST FOR NO OP5RAN4S     A45714
   MNOTE *,'      EDIT ATTRIBUTES NOT DEFAULTED ARE -'           A45714
&J       SETA  N'&DSTYPE                NUMBER OF OPERANDS       A45714
&I       SETA  1                       INIT USER TYPE INDEX      A45714
&K       SETA  1                       INIT INDEX FOR OPERANDS   A45714
.*                                                               A45714
.* * * THIS ROUTINE ISOLATES DATA SET TYPE ATTRIBUTES * * * *    A45714
.*                                                               A45714
.ED0     AIF   (&K GT &J OR &K EQ 27).EDEXT TEST FOR END OF OPER Y02676
         AIF   ('&DSTYPE(&K)' EQ 'PLIF').ED5                     A45714
         AIF   ('&DSTYPE(&K)' EQ 'FORTE').ED6                    A45714
         AIF   ('&DSTYPE(&K)' EQ 'FORTG').ED7                    A45714
         AIF   ('&DSTYPE(&K)' EQ 'FORTH').ED8                    A45714
         AIF   ('&DSTYPE(&K)' EQ 'TEXT').ED9                     A45714
         AIF   ('&DSTYPE(&K)' EQ 'DATA').ED10                    A45714
         AIF   ('&DSTYPE(&K)' EQ 'CLIST').ED11                   A45714
         AIF   ('&DSTYPE(&K)' EQ 'CNTL').ED12                    A45714
         AIF   ('&DSTYPE(&K)' EQ 'ASM').ED13                     A45714
         AIF   ('&DSTYPE(&K)' EQ 'COBOL').ED14                   A45714
         AIF   ('&DSTYPE(&K)' EQ 'FORTGI').ED15                  A45714
         AIF   ('&DSTYPE(&K)' EQ 'GOFORT').ED16                  A45714
.*  DELETE  BASIC, IPLI TYPES                                  @ZA17963
         AIF   ('&DSTYPE(&K)' EQ 'PLI').ED18                     A45714
         AIF   ('&DSTYPE(&K)' EQ 'VSBASIC').ED18AA               Y02676
         AIF   ('&DSTYPE(&K)' NE '').ED3 CHECK IF DSTYPE IS NULL A45714
.ED2     ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52585I EDIT OPERAND &DSTYPE(&K) INVALID DATA SET X
               TYPE OR MISSING VALUE'                          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .EDNXT                  PROCESS NEXT DATA SET TYPEA45714
.ED3     AIF   (K'&DSTYPE(&K) LE 8).ED4 CHECK IF LENGTH VALID    A45714
    MNOTE 5,'* * * IKJ52588I DATA SET NAME &DSTYPE(&K) LONGER THAN EIGHX
               T CHARACTERS'                                   @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .EDNXT                  PROCESS NEXT DATA SET TYPEA45714
.ED4     AIF   ('&DSTYPE(&K)'(1,1) EQ '@').ED4A CHECK IF FIRST   A45714
         AIF   ('&DSTYPE(&K)'(1,1) EQ '#').ED4A    IS VALID ALPHAA45714
         AIF   ('&DSTYPE(&K)'(1,1) EQ '$').ED4A                  A45714
         AIF   ('&DSTYPE(&K)'(1,1) LT 'A').ED2                   A45714
         AIF   ('&DSTYPE(&K)'(1,1) GT 'Z').ED2                   A45714
.ED4A    ANOP                                                    A45714
         AIF   (&I LT 11).ED4AA        TEST IF MORE THAN 10 SPEC A45714
    MNOTE 0,'* * * IKJ52595I MORE THAN 10 NON-STANDARD DATA SET TYPES  X
               WERE SPECIFIED - &DSTYPE(&K) IS IGNORED'        @E2367FY
         AGO   .EDNXT                  PROCESS NEXT PARAMETER    A45714
.ED4AA   ANOP                                                    A45714
&M       SETA  1                                                 A45714
.ED4B    AIF   (&M GT &I).ED4C                                   A45714
         AIF   ('&SGEDITC(&M)' EQ '&DSTYPE(&K)').ED19            A45714
&M       SETA  &M+1                                              A45714
         AGO   .ED4B                                             A45714
.ED4C    ANOP                                                    A45714
&SGEDITC(&I) SETC '&DSTYPE(&K)'        SET DSTYPE GLOBAL VALUE   A45714
    MNOTE *,'           DATA SET TYPE &DSTYPE(&K):'              A45714
&L       SETA  &I                      SET INDEX FOR OTHER ATTR. A45714
&I       SETA  &I+1                    INCR. TO NEXT USER SLOT   A45714
         AGO   .ED20                   PROCESS ATTRIBUTES        A45714
.ED5     ANOP                                                    A45714
&L       SETA  11                      INDEX FOR PLIF DSTYPE     A45714
         AGO   .ED18A                                            A45714
.ED6     ANOP                                                    A45714
&L       SETA  12                      INDEX FOR FORTE DSTYPE    A45714
         AGO   .ED18A                                            A45714
.ED7     ANOP                                                    A45714
&L       SETA  13                      INDEX FOR FORTG DSTYPE    A45714
         AGO   .ED18A                                            A45714
.ED8     ANOP                                                    A45714
&L       SETA  14                      INDEX FOR FORTH DSTYPE    A45714
         AGO   .ED18A                                            A45714
.ED9     ANOP                                                    A45714
&L       SETA  15                      INDEX FOR TEXT DSTYPE     A45714
         AGO   .ED18A                                            A45714
.ED10    ANOP                                                    A45714
&L       SETA  16                      INDEX FOR DATA DSTYPE     A45714
         AGO   .ED18A                                            A45714
.ED11    ANOP                                                    A45714
&L       SETA  17                      INDEX FOR CLIST DSTYPE    A45714
         AGO   .ED18A                                            A45714
.ED12    ANOP                                                    A45714
&L       SETA  18                      INDEX FOR CNTL DSTYPE     A45714
         AGO   .ED18A                                            A45714
.ED13    ANOP                                                    A45714
&L       SETA  19                      INDEX FOR ASM DSTYPE      A45714
         AGO   .ED18A                                            A45714
.ED14    ANOP                                                    A45714
&L       SETA  20                      INDEX FOR COBOL DSTYPE    A45714
         AGO   .ED18A                                            A45714
.ED15    ANOP                                                    A45714
&L       SETA  21                      INDEX FOR FORTGI DSTYPE   A45714
         AGO   .ED18A                                            A45714
.ED16    ANOP                                                    A45714
&L       SETA  22                      INDEX FOR GOFORI DSTYPE   A45714
         AGO   .ED18A                                            A45714
.*  DELETE  BASIC, IPLI TYPES                                  @ZA17963
.ED18    ANOP                                                    A45714
&L       SETA  25                      INDEX FOR PLI DSTYPE      A45714
         AGO   .ED18A                                            Y02676
.ED18AA  ANOP                                                    Y02676
&L       SETA  26                                                Y02676
.ED18A   AIF   ('&SGEDITC(&L)' NE '').ED19                       A45714
&SGEDITC(&L) SETC '&DSTYPE(&K)'        SET DSTYPE GLOBAL VALUE   A45714
    MNOTE *,'           DATA SET TYPE &DSTYPE(&K):'              A45714
         AGO   .ED20                                             A45714
.ED19    ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52587I EDIT OPERAND &DSTYPE(&K) DATA SET TYPE    X
               PREVIOUSLY SPECIFIED'                           @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .EDNXT                                            A45714
.ED20    AIF   ('&BLOCK(&K)' EQ '').ED22 CHECK IF BLOCKSIZE SPEC A45714
         AIF   (&BLOCK(&K) GE 8 AND &BLOCK(&K) LE 32760).ED21    Y02676
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &BLOCK(&K) INVALID BLOCKSIZE X
               FOR DATA SET TYPE &DSTYPE(&K)'                  @E2367FY
&SGQUITB SETB  1                                                 A45714
         AGO   .ED22                                             A45714
.ED21    ANOP                                                    A45714
&SGEDITA(&L) SETA &BLOCK(&K)           SET BLOCKSIZE GLOBAL VALUEA45714
    MNOTE *,'                    BLOCKSIZE = &BLOCK(&K)'         A45714
.ED22    AIF   ('&FORMAT(&K)' EQ '').ED24 CHECK IF RECFM SPEC.   A45714
         AIF   ('&FORMAT(&K)' EQ 'VAR').ED23                     A45714
         AIF   ('&FORMAT(&K)' EQ 'FIXED').ED23                   A45714
         AIF   ('&FORMAT(&K)' EQ 'FXDONLY').ED23                 A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &FORMAT(&K) INVALID RECFM    X
               FOR DATA SET TYPE &DSTYPE(&K)'                  @E2367FY
&SGQUITB SETB  1                                                 A45714
         AGO   .ED24                                             A45714
.ED23    ANOP                                                    A45714
&SGEDT2C(&L) SETC '&FORMAT(&K)'        SET RECFM GLOBAL VALUE    A45714
    MNOTE *,'                    RECORD FORMAT = &FORMAT(&K)'    A45714
.ED24    ANOP                                                    M02325
&X       SETB  1                                                 M02325
         AIF   ('&FIXED(&K)' EQ '' AND '&VAR(&K)' EQ '').ED29    A45714
         AIF   ('&FIXED(&K)' NE '' AND '&VAR(&K)' NE '').ED27    A45714
         AIF   ('&FIXED(&K)' EQ '').ED25                         A45714
&M       SETA  0                                                 A45714
.ED24A   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GE K'&FIXED(&K)).ED24C                        A45714
         AIF   ('&FIXED(&K)'(&M,1) NE '-').ED24A                 A45714
&X       SETB  0                                                 M02325
&C       SETC  '&FIXED(&K)'(&M+1,K'&FIXED(&K)-&M)                A45714
         AIF   (&C GE 1 AND &C LE 255).ED24B                     A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &FIXED(&K) INVALID FIXED     X
               MAXIMUM FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
         AGO   .ED24C                                            A45714
.ED24B   ANOP                                                    A45714
&SGEDT3A(&L) SETA &C                   SET FIXED MAXIMUM GLOBAL  A45714
    MNOTE *,'                    FIXED MAXIMUM LRECL = &SGEDT3A(&L)'
.ED24C   AIF   ('&FORMAT(&K)' EQ 'VAR' OR ('&FORMAT(&K)' EQ '' AND     X
               &L GT 10)).ED29                                   A45714
         AIF  (&X).ED28ERR                                       M02325
&X       SETB  1                                                 M02325
&M       SETA  0                                                 A45714
.ED24D   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GT K'&FIXED(&K)).ED24                         A45714
         AIF   ('&FIXED(&K)'(&M,1) NE '-').ED24D                 A45714
&X       SETB  0                                                 M02325
         AIF   (&M EQ 1).ED24X         CHECK IF MISSING          A45714
&C       SETC  '&FIXED(&K)'(1,&M-1)                              A45714
         AIF   (&SGEDT3A(&L) EQ 0).ED24Y MAX. LT DFLT. FIXED     A45714
         AIF   ('&SGEDT3A(&L)' LT '&C').ED24X                    A45714
.ED24Y   ANOP                                                    A45714
         AIF   (&C GE 1 AND &C LE 255).ED24E                     A45714
.ED24X   ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &FIXED(&K) INVALID FIXED     X
               DEFAULT FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
         AGO   .ED29                                             A45714
.ED24E   ANOP                                                    A45714
&SGEDT2A(&L) SETA &C                   SET FIXED DEFAULT GLOBAL  A45714
    MNOTE *,'                    FIXED DEFAULT LRECL = &SGEDT2A(&L)'
         AGO   .ED29                                             A45714
.ED25    AIF   ('&FORMAT(&K)' EQ 'FXDONLY').ED26                 A45714
&M       SETA  0                                                 A45714
.ED25A   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GE K'&VAR(&K)).ED25C                          A45714
         AIF   ('&VAR(&K)'(&M,1) NE '-').ED25A                   A45714
&X       SETB  0                                                 M02325
&C       SETC  '&VAR(&K)'(&M+1,K'&VAR(&K)-&M)                    A45714
         AIF   (&C GE 5 AND &C LE 255).ED25B                     A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &VAR(&K) INVALID VARIABLE    X
               MAXIMUM FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
         AGO   .ED25C                                            A45714
.ED25B   ANOP                                                    A45714
&SGEDT5A(&L) SETA &C                   SET VARIABLE MAX. GLOBAL  A45714
    MNOTE *,'                    VARIABLE MAXIMUM LRECL = &SGEDT5A(&L)'
.ED25C   AIF   ('&FORMAT(&K)' EQ 'FIXED').ED29                   A45714
         AIF   ('&FORMAT(&K)' EQ '' AND &L GT 10).ED29           A45714
         AIF  (&X).ED28ERR                                       M02325
&M       SETA  0                                                 A45714
.ED25D   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GT K'&VAR(&K)).ED26                           A45714
         AIF   ('&VAR(&K)'(&M,1) NE '-').ED25D                   A45714
         AIF   (&M EQ 1).ED25X         CHECK IF MISSING          A45714
&C       SETC  '&VAR(&K)'(1,&M-1)                                A45714
         AIF   (&SGEDT5A(&L) EQ 0).ED25Y  MAX. LT DFLT. VAR      A45714
         AIF   ('&SGEDT5A(&L)' LT '&C').ED25X                    A45714
.ED25Y   ANOP                                                    A45714
         AIF   (&C GE 5 AND &C LE 255).ED25E                     A45714
.ED25X   ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &VAR(&K) INVALID VARIABLE    X
               DEFAULT FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED29                                             A45714
.ED25E   ANOP                                                    A45714
&SGEDT4A(&L) SETA &C                   SET VARIABLE DEFLT. GLOBALA45714
    MNOTE *,'                    VARIABLE DEFAULT LRECL = &SGEDT4A(&L)'
         AGO   .ED29                                             A45714
.ED26    ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52589I EDIT OPERAND VAR INVALID WHEN FORMAT=     X
               &FORMAT(&K) SPECIFIED'                          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED29                                             A45714
.ED27    ANOP                                                    A45714
&M       SETA  0                                                 A45714
.ED27A   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GE K'&FIXED(&K)).ED27C                        A45714
         AIF   ('&FIXED(&K)'(&M,1) NE '-').ED27A                 A45714
&X       SETB  0                                                 M02325
&C       SETC  '&FIXED(&K)'(&M+1,K'&FIXED(&K)-&M)                A45714
         AIF   (&C GE 1 AND &C LE 255).ED27B                     A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &FIXED(&K) INVALID FIXED     X
               MAXIMUM FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED27C                                            A45714
.ED27B   ANOP                                                    A45714
&SGEDT3A(&L) SETA &C                   SET FIXED MAX. GLOBAL     A45714
    MNOTE *,'                    FIXED MAXIMUM LRECL = &SGEDT3A(&L)'
.ED27C   ANOP                                                    A45714
&M       SETA  0                                                 A45714
.ED27D   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GE K'&VAR(&K)).ED27E                          A45714
         AIF   ('&VAR(&K)'(&M,1) NE '-').ED27D                   A45714
&X       SETB  0                                                 M02325
&C       SETC  '&VAR(&K)'(&M+1,K'&VAR(&K)-&M)                    A45714
         AIF   (&C GE 5 AND &C LE 255).ED27E                     A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &VAR(&K) INVALID VARIABLE    X
               MAXIMUM FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED27F                                            A45714
.ED27E   AIF  (&X).ED28ERR                                       M02325
&SGEDT5A(&L) SETA &C                   SET VARIABLE MAX. GLOBAL  A45714
    MNOTE *,'                    VARIABLE MAXIMUM LRECL = &SGEDT5A(&L)'
.ED27F   AIF   ('&FORMAT(&K)' EQ 'VAR').ED28                     A45714
         AIF   (&L GT 10 AND '&FORMAT(&K)' EQ '').ED29           A45714
&M       SETA  0                                                 A45714
.ED27G   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GT K'&FIXED(&K)).ED29                         A45714
         AIF   ('&FIXED(&K)'(&M,1) NE '-').ED27G                 A45714
&X       SETB  0                                                 M02325
         AIF   (&M EQ 1).ED27X         CHECK IF MISSING          A45714
&C       SETC  '&FIXED(&K)'(1,&M-1)                              A45714
         AIF   (&SGEDT3A(&L) EQ 0).ED27Y MAX. LT DFLT. FIXED     A45714
         AIF   ('&SGEDT3A(&L)' LT '&C').ED27X                    A45714
.ED27Y   ANOP                                                    A45714
         AIF   (&C GE 1 AND &C LE 255).ED27H                     A45714
.ED27X   ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &FIXED(&K) INVALID FIXED     X
               DEFAULT FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED29                                             A45714
.ED27H   ANOP                                                    A45714
&SGEDT2A(&L) SETA &C                   SET FIXED DEFAULT GLOBAL  A45714
    MNOTE *,'                    FIXED DEFAULT LRECL = &SGEDT2A(&L)'
         AGO   .ED29                                             A45714
.ED28    ANOP                                                    A45714
&X       SETB  1                                                 M02325
&M       SETA  0                                                 A45714
.ED28A   ANOP                                                    A45714
&M       SETA  &M+1                                              A45714
         AIF   (&M GT K'&VAR(&K)).ED29                           A45714
         AIF   ('&VAR(&K)'(&M,1) NE '-').ED28A                   A45714
&X       SETB  0                                                 M02325
         AIF   (&M EQ 1).ED28X         CHECK IF MISSING          A45714
&C       SETC  '&VAR(&K)'(1,&M-1)                                A45714
         AIF   (&SGEDT5A(&L) EQ 0).ED28Y MAX. LT DFLT. VAR       A45714
         AIF   ('&SGEDT5A(&L)' LT '&C').ED28X                    A45714
.ED28Y   ANOP                                                    A45714
         AIF   (&C GE 5 AND &C LE 255).ED28B                     A45714
.ED28X   ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &VAR(&K) INVALID VARIABLE    X
               DEFAULT FOR DATA SET TYPE &DSTYPE(&K)'          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED29                                             A45714
.ED28B   ANOP                                                    A45714
&SGEDT4A(&L) SETA &C                   SET VARIABLE DEFLT. GLOBALA45714
    MNOTE *,'                    VARIABLE DEFAULT LRECL = &SGEDT4A(&L)'
         AGO   .ED29                                             A45714
.ED28ERR ANOP                                                    M02325
    MNOTE 5,'* * * IKJ52591I EDIT OPERAND FIXED OR VARIABLE INVALID    *
               HYPHEN MISSING  '                               @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
.ED29    AIF   ('&CONVERT(&K)' EQ '').ED32                       A45714
         AIF   ('&CONVERT(&K)' EQ 'CAPS').ED31                   A45714
         AIF   ('&CONVERT(&K)' EQ 'ASIS').ED31                   A45714
         AIF   ('&CONVERT(&K)' EQ 'CAPSONLY').ED31               A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &CONVERT(&K) INVALID FOR     X
               DATA SET TYPE &DSTYPE(&K)'                      @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED32                                             A45714
.ED31    ANOP                                                    A45714
&SGEDT3C(&L) SETC '&CONVERT(&K)'       SET CONVERSION GLOBAL     A45714
    MNOTE *,'                    CHARACTER CONVERSION = &CONVERT(&K)'
.ED32    AIF   ('&CHECKER(&K)' EQ '').ED36                       A45714
         AIF   (K'&CHECKER(&K) LE 8).ED33                        A45714
    MNOTE 5,'* * * IKJ52588I CHECKER NAME &CHECKER(&K) LONGER THAN     X
               EIGHT CHARACTERS'                               @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED36                                             A45714
.ED33    AIF   ('&CHECKER(&K)'(1,1) EQ '@').ED34                 A45714
         AIF   ('&CHECKER(&K)'(1,1) EQ '#').ED34                 A45714
         AIF   ('&CHECKER(&K)'(1,1) EQ '$').ED34                 A45714
         AIF   ('&CHECKER(&K)'(1,1) LT 'A').ED35                 A45714
         AIF   ('&CHECKER(&K)'(1,1) GT 'Z').ED35                 A45714
.ED34    ANOP                                                    A45714
&SGEDT4C(&L) SETC '&CHECKER(&K)'       SET CHECKER NAME GLOBAL   A45714
    MNOTE *,'                    SYNTAX CHECKER NAME = &CHECKER(&K)'
         AGO   .ED36                                             A45714
.ED35   ANOP                                                     A45714
    MNOTE 5,'* * * IKJ52585I EDIT OPERAND &CHECKER(&K) INVALID CHECKER X
               NAME OR MISSING VALUE'                          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
.ED36    AIF   ('&USEREXT(&K)' EQ '').ED40                       A45714
         AIF   (&L LE 10).ED36A                                  A45714
    MNOTE 5,'* * * IKJ52590I USER EXIT CAN ONLY BE SPECIFIED FOR       X
               NON-STANDARD DATA SET TYPES - &USEREXT(&K) IS IGNORED'
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED40                                             A45714
.ED36A   AIF   (K'&USEREXT(&K) LE 8).ED37                        A45714
    MNOTE 5,'* * * IKJ52588I USER EXIT NAME &USEREXT(&K) LONGER THAN   X
               EIGHT CHARACTERS'                               @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED40                                             A45714
.ED37    AIF   ('&USEREXT(&K)'(1,1) EQ '@').ED38                 A45714
         AIF   ('&USEREXT(&K)'(1,1) EQ '#').ED38                 A45714
         AIF   ('&USEREXT(&K)'(1,1) EQ '$').ED38                 A45714
         AIF   ('&USEREXT(&K)'(1,1) LT 'A').ED39                 A45714
         AIF   ('&USEREXT(&K)'(1,1) GT 'Z').ED39                 A45714
.ED38    ANOP                                                    A45714
&SGEDT5C(&L) SETC '&USEREXT(&K)'       SET USER EXIT NAME GLB    A45714
    MNOTE *,'                    USER EXIT NAME = &USEREXT(&K)'  A45714
         AGO   .ED40                                             A45714
.ED39    ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52585I EDIT OPERAND &USEREXT(&K) INVALID USER    X
               EXIT NAME OR MISSING VALUE'                     @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
.ED40    AIF   ('&PRMPTR(&K)' EQ '').ED43 TEST IF SPECIFIED      A45714
         AIF   (K'&PRMPTR(&K) LE 8).ED40A TEST FOR VALID LENGTH  A45714
    MNOTE 5,'* * * IKJ52588I PROMPTER NAME &PRMPTR(&K) LONGER THAN     X
               EIGHT CHARACTERS'                               @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .ED43                                             A45714
.ED40A   AIF   ('&PRMPTR(&K)'(1,1) EQ '@').ED41                  A45714
         AIF   ('&PRMPTR(&K)'(1,1) EQ '#').ED41                  A45714
         AIF   ('&PRMPTR(&K)'(1,1) EQ '$').ED41                  A45714
         AIF   ('&PRMPTR(&K)'(1,1) LT 'A').ED42                  A45714
         AIF   ('&PRMPTR(&K)'(1,1) GT 'Z').ED42                  A45714
.ED41    ANOP                                                    A45714
&SGEDT6C(&L) SETC '&PRMPTR(&K)'        SET PROMPTER NAME GLOBAL  A45714
    MNOTE *,'                    PROMPTER NAME = &PRMPTR(&K)'    A45714
         AGO   .ED43                                             A45714
.ED42    ANOP                                                    A45714
    MNOTE 5,'* * * IKJ52585I EDIT OPERAND &PRMPTR(&K) INVALID PROMPTER X
               NAME OR MISSING VALUE'                          @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
.ED43    AIF   ('&USERSRC(&K)' EQ '').EDTAG99                    Y02676
         AIF   ('&USERSRC(&K)' EQ 'INLIST').ED44                 Y02676
         AIF   ('&USERSRC(&K)' EQ 'DATASET').ED44                A45714
         AIF   ('&USERSRC(&K)' EQ 'INCORE').ED44                 A45714
    MNOTE 5,'* * * IKJ52586I EDIT OPERAND &USERSRC(&K) INVALID FOR     X
               DATA SET TYPE &DSTYPE(&K)'                      @E2367FY
&SGQUITB SETB  1                       SET QUIT BIT              A45714
         AGO   .EDNXT                                            A45714
.ED44    ANOP                                                    A45714
&SGEDT7C(&L) SETC '&USERSRC(&K)'       SET INPUT SOURCE GLB VALUEA45714
    MNOTE *,'                    PROMPTER INPUT SOURCE = &USERSRC(&K)'
.EDTAG99 AIF   ('&DATEXIT(&K)' EQ '').EDNXT   TEST IF SPECIFIED  Y02676
         AIF   (K'&DATEXIT(&K) LE 8).EDTAG10 TEST FOR VALID LEN. Y02676
    MNOTE 5,'* * * IKJ52592I DATEXIT NAME &DATEXIT(&K) LONGER THAN EIGHX
               T CHARACTERS'                                   @E2367FY
&SGQUITB SETB  1                                                 Y02676
         AGO   .EDNXT                                            Y02676
.EDTAG10 AIF   ('&DATEXIT(&K)'(1,1) EQ '@').EDTAG20              Y02676
         AIF   ('&DATEXIT(&K)'(1,1) EQ '#').EDTAG20              Y02676
         AIF   ('&DATEXIT(&K)'(1,1) EQ '$').EDTAG20              Y02676
         AIF   ('&DATEXIT(&K)'(1,1) LT 'A').EDTAG30              Y02676
         AIF   ('&DATEXIT(&K)'(1,1) GT 'Z').EDTAG30              Y02676
.EDTAG20 ANOP                                                    Y02676
&SGEDT8C(&L) SETC '&DATEXIT(&K)'  SET DATEXIT NAME               Y02676
    MNOTE *,'             DATEXIT NAME = &DATEXIT(&K)'           Y02676
         AGO   .EDNXT                                            Y02676
.EDTAG30 ANOP                                                    Y02676
    MNOTE 5,'* * * IKJ52593I EDIT OPERAND &DATEXIT(&K) INVALID DATEXIT X
               NAME OR MISSING VALUE'                          @E2367FY
&SGQUITB SETB  1                                                 Y02676
.EDNXT   ANOP                                                    A45714
&K       SETA  &K+1                    INCREMENT INDEX BY ONE    A45714
         AGO   .ED0                                              A45714
.EDEXT   AIF   (&K LT 27).EDFALT                                 A45714
    MNOTE 0,'* * * IKJ52594I MORE THAN 26 DATA SET TYPES WERE          X
               SPECIFIED - ONLY FIRST 26 UNIQUE DATA SET TYPES         X
               PROCESSED'                                      @E2367FY
.EDFALT  ANOP
.*  *  *  *  SET EDIT DEFAULTS FOR DATA SET TYPES NOT USER SPECIFIED  *
    MNOTE *,'     THE FOLLOWING EDIT ATTRIBUTES ARE DEFAULTED-'  A45714
&A SETA 1                               SET COUNTER
.T8      AIF   (&A GT 10).T17           TEST FOR END OF USERTYPESA45714
         AIF   ('&SGEDITC(&A)' EQ '').T17 TEST IF USERTYPE PRES. A45714
         AIF   (&SGEDITA(&A) NE 0).T9   TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(&A) SETA 3120                  SET DEFAULT VALUE      @ZA34982
    MNOTE *,'           &SGEDITC(&A)  BLOCK = &SGEDITA(&A)'
.T9      AIF   ('&SGEDT2C(&A)' NE '').T10 TEST IF RECFM NEEDED   A45714
&SGEDT2C(&A) SETC 'FIXED'               SET DEFAULT VALUE        A45714
    MNOTE *,'           &SGEDITC(&A) FORMAT = &SGEDT2C(&A)'
.*
.* * * DETERMINE DEFAULT AND MAXIMUM LRECL DEFAULTS, IF NECESSARYA45714
.*                                                               A45714
.T10     AIF   (&SGEDT3A(&A) NE 0).T11  TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(&A) SETA 255                   SET DEFAULT VALUE        A45714
    MNOTE *,'           &SGEDITC(&A) MAXIMUM FIXED LRECL = &SGEDT3A(&A)X
               '
.T11     AIF   ('&SGEDT2C(&A)' EQ 'FXDONLY').T12 TEST IF MAX.    A45714
         AIF   (&SGEDT5A(&A) NE 0).T12           VARIABLE NEEDED A45714
&SGEDT5A(&A) SETA 255                   SET DEFAULT VALUE        A45714
    MNOTE *,'           &SGEDITC(&A) MAXIMUM VAR LRECL =  &SGEDT5A(&A)'
.T12     AIF   ('&SGEDT2C(&A)' EQ 'VAR').T13 TEST IF RECFM IS VARA45714
         AIF   (&SGEDT2A(&A) NE 0).T14  TEST IF DFLT.FIXED NEEDEDA45714
&SGEDT2A(&A) SETA 80                    SET DEFAULT VALUE        A45714
   MNOTE *,'           &SGEDITC(&A) DEFAULT FIXED LRECL = &SGEDT2A(&A)'
         AGO   .T14                     PROCESS NEXT ATTRIBUTE   A45714
.T13     AIF   (&SGEDT4A(&A) NE 0).T14  TEST IF DLFT.VAR NEEDED  A45714
&SGEDT4A(&A) SETA 255                   SET DEFAULT VALUES       A45714
    MNOTE *,'           &SGEDITC(&A) DEFAULT VAR LRECL = &SGEDT4A(&A)'
.T14     AIF   ('&SGEDT3C(&A)' NE '').T15 TEST IF DEFAULT NEEDED A45714
&SGEDT3C(&A) SETC 'CAPS'               SET CHAR.CONVERSION VALUE A45714
    MNOTE *,'           &SGEDITC(&A) CONVERT = &SGEDT3C(&A)'
.T15      ANOP
&A       SETA  &A+1                     INCREMENT INDEX BY ONE   A45714
         AGO   .T8                      REPEAT LOOP              A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR PLIF DATA SET TYPE                 A45714
.*                                                               A45714
.T17     AIF   (&SGEDITA(11) NE 0).T17A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(11) SETA 400                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLIF BLOCK = 400'                        A45714
.T17A    AIF   ('&SGEDT2C(11)' NE '').T17B TEST IF RECFM NEEDED  A45714
&SGEDT2C(11) SETC 'FXDONLY'             SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLIF FORMAT = FXDONLY'                   A45714
.T17B    AIF   (&SGEDT3A(11) NE 0).T17C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(11) SETA 100                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLIF MAXIMUM FIXED LRECL = 100'          A45714
.T17C    AIF   ('&SGEDT2C(11)' EQ 'VAR').T17D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(11) NE 0).T17D TEST IF FIXED DFT.NEEDED A45714
&SGEDT2A(11) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLIF DEFAULT FIXED LRECL = 80'           A45714
.T17D    AIF   ('&SGEDT3C(11)' NE '').T17E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(11) SETC 'CAPSONLY'            SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                                                 A45714
    MNOTE *,'           PLIF CONVERT = CAPSONLY'                 A45714
.T17E    AIF   ('&SGEDT4C(11)' NE '').T17F TEST IF CHECKER NEEDEDA45714
&SGEDT4C(11) SETC 'PLIFSCAN'            SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLIF CHECKER NAME = PLIFSCAN'            A45714
.T17F    AIF   ('&SGEDT7C(11)' NE '').T18 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(11) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLIF PROMPTER SOURCE = DATASET'          A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR FORTE DATA SET TYPE                A45714
.*                                                               A45714
.T18     AIF   (&SGEDITA(12) NE 0).T18A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(12) SETA 400                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTE BLOCK = 400'                       A45714
.T18A    AIF   ('&SGEDT2C(12)' NE '').T18B TEST IF RECFM NEEDED  A45714
&SGEDT2C(12) SETC 'FXDONLY'             SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTE FORMAT = FXDONLY'                  A45714
.T18B    AIF   (&SGEDT3A(12) NE 0).T18C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(12) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTE MAXIMUM FIXED LRECL = 80'          A45714
.T18C    AIF   ('&SGEDT2C(12)' EQ 'VAR').T18D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(12) NE 0).T18D TEST IF FIXED DFT.NEEDED A45714
&SGEDT2A(12) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTE DEFAULT FIXED LRECL = 80'          A45714
.T18D    AIF   ('&SGEDT3C(12)' NE '').T18E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(12) SETC 'CAPSONLY'            SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTE CONVERT = CAPSONLY'                A45714
.T18E    AIF   ('&SGEDT4C(12)' NE '').T18F TEST IF CHECKER NEEDEDA45714
&SGEDT4C(12) SETC 'IPDSNEXC'            SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTE CHECKER NAME = IPDSNEXC'           A45714
.T18F    AIF   ('&SGEDT7C(12)' NE '').T19 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(12) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTE PROMPTER SOURCE = DATASET'         A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR FORTG DATA SET TYPE                A45714
.*                                                               A45714
.T19     AIF   (&SGEDITA(13) NE 0).T19A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(13) SETA 400                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTG BLOCK = 400'                       A45714
.T19A    AIF   ('&SGEDT2C(13)' NE '').T19B TEST IF RECFM NEEDED  A45714
&SGEDT2C(13) SETC 'FXDONLY'             SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTG FORMAT = FXDONLY'                  A45714
.T19B    AIF   (&SGEDT3A(13) NE 0).T19E TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(13) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTG MAXIMUM FIXED LRECL = 80'          A45714
         AIF   ('&SGEDT2C(13)' EQ 'VAR').T19D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(13) NE 0).T19D TEST IF FIXED DFT.NEEDED A45714
&SGEDT2A(13) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTG DEFAULT FIXED LRECL = 80'          A45714
.T19D    AIF   ('&SGEDT3C(13)' NE '').T19E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(13) SETC 'CAPSONLY'            SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTG CONVERT = CAPSONLY'                A45714
.T19E    AIF   ('&SGEDT4C(13)' NE '').T19F TEST IF CHECKER NEEDEDA45714
&SGEDT4C(13) SETC 'IPDSNEXC'            SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTG CHECKER NAME = IPDSNEXC'           A45714
.T19F    AIF   ('&SGEDT7C(13)' NE '').T20 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(13) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTG PROMPTER SOURCE = DATASET'         A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR FORTH DATA SET TYPE                A45714
.*                                                               A45714
.T20     AIF   (&SGEDITA(14) NE 0).T20A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(14) SETA 400                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTH BLOCK = 400'                       A45714
.T20A    AIF   ('&SGEDT2C(14)' NE '').T20B TEST IF RECFM NEEDED  A45714
&SGEDT2C(14) SETC 'FXDONLY'             SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTH FORMAT = FXDONLY'                  A45714
.T20B    AIF   (&SGEDT3A(14) NE 0).T20C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(14) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTH MAXIMUM FIXED LRECL = 80'          A45714
.T20C    AIF   ('&SGEDT2C(14)' EQ 'VAR').T20D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(14) NE 0).T20D TEST IF FIXED DFT.NEEDED A45714
&SGEDT2A(14) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTH DEFAULT FIXED LRECL = 80'          A45714
.T20D    AIF   ('&SGEDT3C(14)' NE '').T20E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(14) SETC 'CAPSONLY'            SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTH CONVERT = CAPSONLY'                A45714
.T20E    AIF   ('&SGEDT4C(14)' NE '').T20F TEST IF CHECKER NEEDEDA45714
&SGEDT4C(14) SETC 'IPDSNEXC'            SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTH CHECKER NAME = IPDSNEXC'           A45714
.T20F    AIF   ('&SGEDT7C(14)' NE '').T21 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(14) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTH PROMPTER SOURCE = DATASET'         A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR TEXT DATA SET TYPE                 A45714
.*                                                               A45714
.T21     AIF   (&SGEDITA(15) NE 0).T21A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(15) SETA 3120                  SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           TEXT BLOCK = 3120'                       A45714
.T21A    AIF   ('&SGEDT2C(15)' NE '').T21B TEST IF RECFM NEEDED  A45714
&SGEDT2C(15) SETC 'VAR'                 SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           TEXT FORMAT = VAR'                       A45714
.T21B    AIF   (&SGEDT3A(15) NE 0).T21C TEST IF MAX.FIXED NEEDED A45714
&SGEDT3A(15) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           TEXT MAXIMUM FIXED LRECL = 255'          A45714
.T21C    AIF   ('&SGEDT2C(15)' EQ 'FXDONLY').T21D TEST IF FXDONLYA45714
         AIF   (&SGEDT5A(15) NE 0).T21D TEST IF MAX. VAR NEEDED  A45714
&SGEDT5A(15) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           TEXT MAXIMUM VARIABLE LRECL = 255'       A45714
.T21D    AIF   ('&SGEDT2C(15)' NE 'VAR').T21E TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT4A(15) NE 0).T21E TEST IF VAR DFT. NEEDED  A45714
&SGEDT4A(15) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           TEXT DEFAULT VARIABLE LRECL = 255'       A45714
.T21E    AIF   ('&SGEDT3C(15)' NE '').T21F TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(15) SETC 'ASIS'                SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           TEXT CONVERT = ASIS'                     A45714
.T21F    AIF   ('&SGEDT7C(15)' NE '').T22 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(15) SETC  'DATASET'            SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           TEXT PROMPTER SOURCE = DATASET'          A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR DATA DATA SET TYPE                 A45714
.*                                                               A45714
.T22     AIF   (&SGEDITA(16) NE 0).T22A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(16) SETA 3120                  SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           DATA BLOCK = 3120'                       A45714
.T22A    AIF   ('&SGEDT2C(16)' NE '').T22B TEST IF RECFM NEEDED  A45714
&SGEDT2C(16) SETC 'FIXED'               SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           DATA FORMAT = FIXED'                     A45714
.T22B    AIF   (&SGEDT3A(16) NE 0).T22C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(16) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           DATA MAXIMUM FIXED LRECL =255'           A45714
.T22C    AIF   ('&SGEDT2C(16)' EQ 'FXDONLY').T22D TEST IF FXDONLYA45714
         AIF   (&SGEDT5A(16) NE 0).T22D TEST IF MAX. VAR NEEDED  A45714
&SGEDT5A(16) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           DATA MAXIMUM VAR LRECL = 255'            A45714
.T22D    AIF   ('&SGEDT2C(16)' EQ 'VAR').T22E TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(16) NE 0).T22E TEST IF FIXED DFT. NEEDEDA45714
&SGEDT2A(16) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           DATA DEFAULT FIXED LRECL = 80'           A45714
.T22E    AIF   ('&SGEDT3C(16)' NE '').T22F TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(16) SETC 'CAPS'                SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           DATA CONVERT = CAPS'                     A45714
.T22F    AIF   ('&SGEDT7C(16)' NE '').T23 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(16) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           DATA PROMPTER SOURCE = DATASET'          A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR CLIST DATA SET TYPE                A45714
.*                                                               A45714
.T23     AIF   (&SGEDITA(17) NE 0).T23A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(17) SETA 3120                  SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CLIST BLOCK = 3120'                      A45714
.T23A    AIF   ('&SGEDT2C(17)' NE '').T23B TEST IF RECFM NEEDED  A45714
&SGEDT2C(17) SETC 'VAR'                 SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CLIST FORMAT = VAR'                      A45714
.T23B    AIF   (&SGEDT3A(17) NE 0).T23C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(17) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CLIST MAXIMUM FIXED LRECL = 255'         A45714
.T23C    AIF   ('&SGEDT2C(17)' EQ 'FXDONLY').T23D TEST IF FXDONLYA45714
         AIF   (&SGEDT5A(17) NE 0).T23D TEST IF MAX. VAR NEEDED  A45714
&SGEDT5A(17) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CLIST MAXIMUM VAR LRECL = 255'           A45714
.T23D    AIF   ('&SGEDT2C(17)' NE 'VAR').T23E TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT4A(17) NE 0).T23E TEST IF VAR DFT. NEEDED  A45714
&SGEDT4A(17) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CLIST DEFAULT VAR LRECL = 255'           A45714
.T23E    AIF   ('&SGEDT3C(17)' NE '').T23F TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(17) SETC 'CAPSONLY'            SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CLIST CONVERT = CAPSONLY'                A45714
.T23F    AIF   ('&SGEDT7C(17)' NE '').T24 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(17) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CLIST PROMPTER SOURCE = DATASET'         A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR CNTL DATA SET TYPE                 A45714
.*                                                               A45714
.T24     AIF   (&SGEDITA(18) NE 0).T24A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(18) SETA 3120                  SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN VALUE  A45714
    MNOTE *,'           CNTL BLOCK = 3120'                       A45714
.T24A    AIF   ('&SGEDT2C(18)' NE '').T24B TEST IF RECFM NEEDED  A45714
&SGEDT2C(18) SETC 'FXDONLY'             SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CNTL FORMAT = FXDONLY'                   A45714
.T24B    AIF   (&SGEDT3A(18) NE 0).T24C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(18) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CNTL MAXIMUM FIXED LRECL = 80'           A45714
.T24C    AIF   ('&SGEDT2C(18)' EQ 'VAR').T24D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(18) NE 0).T24D TEST IF FIXED DFT. NEEDEDA45714
&SGEDT2A(18) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CNTL DEFAULT FIXED LRECL = 80'           A45714
.T24D    AIF   ('&SGEDT3C(18)' NE '').T24E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(18) SETC 'CAPSONLY'            SET CHAR.COVNERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CNTL CONVERT = CAPSONLY'                 A45714
.T24E    AIF   ('&SGEDT7C(18)' NE '').T25 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(18) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           CNTL PROMPTER SOURCE = DATASET'          A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR ASM DATA SET TYPE                  A45714
.*                                                               A45714
.T25     AIF   (&SGEDITA(19) NE 0).T25A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(19) SETA 3120                  SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           ASM BLOCK = 3120'                        A45714
.T25A    AIF   ('&SGEDT2C(19)' NE '').T25B TEST IF RECFM NEEDED  A45714
&SGEDT2C(19) SETC 'FXDONLY'             SET DEFAULT VALE         A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           ASM FORMAT = FXDONLY'                    A45714
.T25B    AIF   (&SGEDT3A(19) NE 0).T25C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(19) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           ASM MAXIMUM FIXED LRECL = 80'            A45714
.T25C    AIF   ('&SGEDT2C(19)' EQ 'VAR').T25D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(19) NE 0).T25D TEST IF MAX. FIXED NEEDEDA45714
&SGEDT2A(19) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           ASM DEFAULT FIXED LRECL = 80'            A45714
.T25D    AIF   ('&SGEDT3C(19)' NE '').T25E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(19) SETC 'CAPSONLY'            SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           ASM CONVERT = CAPSONLY'                  A45714
.T25E    AIF   ('&SGEDT6C(19)' NE '').T25F TEST IF DEFAULT NEEDEDA45714
&SGEDT6C(19) SETC 'ASM'                 SET PROMPTER NAME VALUE  A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           ASM PROMPTER NAME = ASM'                 A45714
.T25F    AIF   ('&SGEDT7C(19)' NE '').T26 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(19) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
    MNOTE *,'           ASM PROMPTER SOURCE = DATASET'           A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR COBOL DATA SET TYPE                A45714
.*                                                               A45714
.T26     AIF   (&SGEDITA(20) NE 0).T26A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(20) SETA 400                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           COBOL BLOCK = 400'                       A45714
.T26A    AIF   ('&SGEDT2C(20)' NE '').T26B TEST IF RECFM NEEDED  A45714
&SGEDT2C(20) SETC 'FXDONLY'             SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           COBOL FORMAT = FXDONLY'                  A45714
.T26B    AIF   (&SGEDT3A(20) NE 0).T26C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(20) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN VALUE  A45714
    MNOTE *,'           COBOL MAXIMUM FIXED LRECL = 80'          A45714
.T26C    AIF   ('&SGEDT2C(20)' EQ 'VAR').T26D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(20) NE 0).T26D TEST IF FIXED DFT. NEEDEDA45714
&SGEDT2A(20) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           COBOL DEFAULT FIXED LRECL = 80'          A45714
.T26D    AIF   ('&SGEDT3C(20)' NE '').T26E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(20) SETC 'CAPSONLY'            SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           COBOL CONVERT = CAPSONLY'                A45714
.T26E    AIF   ('&SGEDT6C(20)' NE '').T26F TEST IF DEFAULT NEEDEDA45714
&SGEDT6C(20) SETC 'COBOL'               SET PROMPTER NAME VALUE  A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           COBOL PROMPTER NAME = COBOL'             A45714
.T26F    AIF   ('&SGEDT7C(20)' NE '').T27 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(20) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           COBOL PROMPTER SOURCE = DATASET'         A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR FORIGI DATA SET TYPE               A45714
.*                                                               A45714
.T27     AIF   (&SGEDITA(21) NE 0).T27A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(21) SETA 400                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI BLOCK = 400'                      A45714
.T27A    AIF   ('&SGEDT2C(21)' NE '').T27B TEST IF RECFM NEEDED  A45714
&SGEDT2C(21) SETC 'FXDONLY'             SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI FORMAT = FXDONLY'                 A45714
.T27B    AIF   (&SGEDT3A(21) NE 0).T27C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(21) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI MAXIMUM FIXED LRECL = 80'         A45714
.T27C    AIF   ('&SGEDT2C(21)' EQ 'VAR').T27D TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT2A(21) NE 0).T27D TEST IF FIXED DFT. NEEDEDA45714
&SGEDT2A(21) SETA 80                    SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI DEFAULT FIXED LRECL = 80'         A45714
.T27D    AIF   ('&SGEDT3C(21)' NE '').T27E TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(21) SETC 'CAPSONLY'            SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI CONVERT = CAPSONLY'               A45714
.T27E    AIF   ('&SGEDT4C(21)' NE '').T27F TEST IF CHECKER NEEDEDA45714
&SGEDT4C(21) SETC 'IPDSNEXC'            SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI CHECKER NAME = IPDSNEXC'          A45714
.T27F    AIF   ('&SGEDT6C(21)' NE '').T27G TEST IF DEFAULT NEEDEDA45714
&SGEDT6C(21) SETC 'FORT'                SET PROMPTER NAME VALUE  A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI PROMPTER NAME = FORT'             A45714
.T27G    AIF   ('&SGEDT7C(21)' NE '').T28X TEST IF DEFAULT NEEDEDA45714
&SGEDT7C(21) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           FORTGI PROMPTER SOURCE = DATASET'        A45714
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR GOFORT DATA SET TYPE               A45714
.*                                                               A45714
.T28X    AIF   (&SGEDITA(22) NE 0).T28A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(22) SETA 3120                  SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT BLOCK = 3120'                     A45714
.T28A    AIF   ('&SGEDT2C(22)' NE '').T28B TEST IF RECFM NEEDED  A45714
&SGEDT2C(22) SETC 'VAR'                 SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT FORMAT = VAR'                     A45714
.T28B    AIF   (&SGEDT3A(22) NE 0).T28C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(22) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT MAXIMUM FIXED LRECL = 255'        A45714
.T28C    AIF   ('&SGEDT2C(22)' EQ 'FXDONLY').T28E TEST IF FXDONLYA45714
         AIF   (&SGEDT5A(22) NE 0).T28D TEST IF MAX. VAR NEEDED  A45714
&SGEDT5A(22) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT MAXIMUM VAR LRECL = 255'          A45714
.T28D    AIF   ('&SGEDT2C(22)' NE 'VAR').T28E TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT4A(22) NE 0).T28E TEST IF DFT. VAR NEEDED  A45714
&SGEDT4A(22) SETA 255                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT DEFAULT VAR LRECL = 255'          A45714
.T28E    AIF   ('&SGEDT3C(22)' NE '').T28F TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(22) SETC 'CAPS'                SET CHAR.CONVERSION      A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT CONVERT = CAPS'                   A45714
.T28F    AIF   ('&SGEDT4C(22)' NE '').T28G TEST IF CHECKER NEEDEDA45714
&SGEDT4C(22) SETC 'IPDSNEXC'            SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT CHECKER NAME = IPDSNEXC'          A45714
.T28G    AIF   ('&SGEDT6C(22)' NE '').T28H TEST IF DEFAULT NEEDEDA45714
&SGEDT6C(22) SETC 'GOFORT'              SET PROMPTER NAME VALUE  A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT PROMPTER NAME = GOFORT'           A45714
.T28H    AIF   ('&SGEDT7C(22)' NE '').T29 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(22) SETC 'INCORE'              SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           GOFORT PROMPTER SOURCE = INCORE'         A45714
.T29     ANOP                                                  @ZA17963
.* DELETE  BASIC, IPLI TYPES                                   @ZA17963
.*                                                               A45714
.* * * SET DEFAULT VALUES FOR PLI DATA SET TYPE                  A45714
.*                                                               A45714
.T31     AIF   (&SGEDITA(25) NE 0).T31A TEST IF BLKSIZE NEEDED   A45714
&SGEDITA(25) SETA 400                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI BLOCK = 400'                         A45714
.T31A    AIF   ('&SGEDT2C(25)' NE '').T31B TEST IF RECFM NEEDED  A45714
&SGEDT2C(25) SETC 'VAR'                 SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI FORMAT = VAR'                        A45714
.T31B    AIF   (&SGEDT3A(25) NE 0).T31C TEST IF MAX. FIXED NEEDEDA45714
&SGEDT3A(25) SETA 100                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI MAXIMUM FIXED LRECL = 100'           A45714
.T31C    AIF   ('&SGEDT2C(25)' EQ 'FXDONLY').T31E TEST IF FXDONLYA45714
         AIF   (&SGEDT5A(25) NE 0).T31D TEST IF MAX. VAR NEEDED  A45714
&SGEDT5A(25) SETA 104                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI MAXIMUM VAR LRECL = 104'             A45714
.T31D    AIF   ('&SGEDT2C(25)' NE 'VAR').T31E TEST IF RECFM=VAR  A45714
         AIF   (&SGEDT4A(25) NE 0).T31E TEST IF DFT. VAR NEEDED  A45714
&SGEDT4A(25) SETA 104                   SET DEFAULT VALUE        A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI DEFAULT VAR LRECL = 104'             A45714
.T31E    AIF   ('&SGEDT3C(25)' NE '').T31G TEST IF DEFAULT NEEDEDA45714
&SGEDT3C(25) SETC 'CAPS'                SET CHAR.CONVERSION VALUEA45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI CONVERT = CAPS'                      A45714
.T31G    AIF   ('&SGEDT6C(25)' NE '').T31H TEST IF DEFAULT NEEDEDA45714
&SGEDT6C(25) SETC 'PLIC'                SET PROMPTER NAME VALUE
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI PROMPTER NAME = PLIC'
.T31H    AIF   ('&SGEDT7C(25)' NE '').T32 TEST IF DEFAULT NEEDED A45714
&SGEDT7C(25) SETC 'DATASET'             SET INPUT SOURCE VALUE   A45714
&B       SETB  1                        SET DEFAULT TAKEN SWITCH A45714
    MNOTE *,'           PLI PROMPTER SOURCE = DATASET'           A45714
.*                                                               Y02676
.* * * SET DEFAULT VALUES FOR VSBASIC DATA SET TYPE              Y02676
.*                                                               Y02676
.T32     ANOP                                                    Y02676
         AIF (&SGEDITA(26) NE 0).T32A TEST IF BLKSIZE NEEDED     Y02676
&SGEDITA(26) SETA  3120               SET DEFAULT VALUE          Y02676
&B       SETB  1                      SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC BLOCK = 3120'                    Y02676
.T32A    AIF   ('&SGEDT2C(26)' NE '').T32B TEST IF RECFM NEEDED  Y02676
&SGEDT2C(26) SETC 'VAR'               SET DEFAULT VALUE          Y02676
&B       SETB  1                      SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC FORMAT = VAR'                    Y02676
.T32B    AIF   (&SGEDT3A(26) NE 0).T32C TEST IF MAX. FIXED LRECL Y02676
.*                                    REQUIRED                   Y02676
&SGEDT3A(26) SETA  80                 SET DEFAULT VALUE          Y02676
&B       SETB  1                      SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC MAXIMUM FIXED LRECL = 80'        Y02676
.T32C    AIF   ('SGEDT2C(26)' EQ 'FXDONLY').T32E TEST IF FXDONLY Y02676
         AIF   (&SGEDT5A(26) NE 0).T32D TEST IF MAX. VAR NEEDED  Y02676
&SGEDT5A(26) SETA 255                 SET DEFAULT VALUE          Y02676
&B       SETB  1                      SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC MAXIMUM VAR LRECL = 255'         Y02676
.T32D    AIF   ('&SGEDT2C(26)' NE 'VAR').T32E TEST IF RECFM=VAR  Y02676
         AIF   (&SGEDT4A(26) NE 0).T32E TEST IF DFT. VAR NEEDED  Y02676
&SGEDT4A(26) SETA 255                 SET DEFAULT VALUE          Y02676
&B       SETB  1                      SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC DEFAULT VAR LRECL = 255'         Y02676
.T32E    AIF   ('&SGEDT3C(26)' NE '').T32F TEST IF DEFAULT NEEDEDY02676
&SGEDT3C(26) SETC 'CAPSONLY'          SET DEFAULT VALUE          Y02676
&B       SETB  1                      SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC CONVERT = CAPSONLY'              Y02676
.T32F   AIF   ('&SGEDT6C(26)' NE '').T32G TEST IF PRMPTER NEEDED Y02676
&SGEDT6C(26) SETC 'VSBASIC'           SET PROMPTER DEFAULT       Y02676
&B      SETB  1                       SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC PROMPTER NAME = VSBASIC'         Y02676
.T32G   AIF   ('&SGEDT7C(26)' NE '').T32H TEST IF DEFAULT NEEDED Y02676
&SGEDT7C(26) SETC 'INLIST'            SET INPUT SOURCE DEFAULT   Y02676
&B      SETB  1                       SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC INPUT SOURCE = INLIST'           Y02676
.T32H   AIF   ('&SGEDT8C(26)' NE '').T28 TEST IF DEFAULT NEEDED  Y02676
&SGEDT8C(26) SETC 'ICDQRNME'          SET DEFAULT DATEXIT        Y02676
&B      SETB  1                       SET DEFAULT TAKEN SWITCH   Y02676
    MNOTE *,'           VSBASIC DATEXIT NAME = ICDQRNME'         Y02676
.T28     AIF   (&B).EMEND          TEST DEFAULT TAKEN SWITCH     Y02676
    MNOTE *,'            NONE - ALL WERE USER SPECIFIED'         Y02676
         AGO   .EMEND                                            Y02676
.E44 MNOTE *,'      EDIT DATA SET TYPE ATTRIBUTE DEFAULTS TO BE TAKEN'
         AGO   .EDFALT                  GO PROCESS DEFAULTS      Y02676
.EMEND   ANOP                                                  @E2367FY
.********************************************************************
.*             THIS MACRO SETS THE PARAMETER LIST UP FOR MACRO
.*             SGIKJ0EB. THE PARAMETER LIST CONSISTS OF DATA SET
.*             TYPES AND THE BLOCKSIZES SPECIFIED FOR EACH TYPE.
.*             IT IS USED TO CONSTRUCT A PROCESSOR DATA TABLE FOR
.*             THE TSO EDIT COMMAND.
.********************************************************************
         AIF   ('&MODULE' EQ 'IKJEBINS').SKIP1                 @E2367FY
         SGIKJ0EB  DSTYPE=(PLIF,FORTE,FORTG,FORTH,TEXT,DATA,CLIST,     X
               CNTL,ASM,COBOL,FORTGI,GOFORT,PLI,VSBASIC,               X
               &SGEDITC(1),                                            X
               &SGEDITC(2),                                            X
               &SGEDITC(3),                                            X
               &SGEDITC(4),                                            X
               &SGEDITC(5),                                            X
               &SGEDITC(6),                                            X
               &SGEDITC(7),                                            X
               &SGEDITC(8),                                            X
               &SGEDITC(9),                                            X
               &SGEDITC(10)),                                          X
               BLKSIZE=(&SGEDITA(11),                                  X
               &SGEDITA(12),                                           X
               &SGEDITA(13),                                           X
               &SGEDITA(14),                                           X
               &SGEDITA(15),                                           X
               &SGEDITA(16),                                           X
               &SGEDITA(17),                                           X
               &SGEDITA(18),                                           X
               &SGEDITA(19),                                           X
               &SGEDITA(20),                                           X
               &SGEDITA(21),                                           X
               &SGEDITA(22),                                           X
               &SGEDITA(25),                                           X
               &SGEDITA(26),                                           X
               &SGEDITA(1),                                            X
               &SGEDITA(2),                                            X
               &SGEDITA(3),                                            X
               &SGEDITA(4),                                            X
               &SGEDITA(5),                                            X
               &SGEDITA(6),                                            X
               &SGEDITA(7),                                            X
               &SGEDITA(8),                                            X
               &SGEDITA(9),                                            X
               &SGEDITA(10)),                                          X
               RECFM=(&SGEDT2C(11),                                    X
               &SGEDT2C(12),                                           X
               &SGEDT2C(13),                                           X
               &SGEDT2C(14),                                           X
               &SGEDT2C(15),                                           X
               &SGEDT2C(16),                                           X
               &SGEDT2C(17),                                           X
               &SGEDT2C(18),                                           X
               &SGEDT2C(19),                                           X
               &SGEDT2C(20),                                           X
               &SGEDT2C(21),                                           X
               &SGEDT2C(22),                                           X
               &SGEDT2C(25),                                           X
               &SGEDT2C(26),                                           X
               &SGEDT2C(1),                                            X
               &SGEDT2C(2),                                            X
               &SGEDT2C(3),                                            X
               &SGEDT2C(4),                                            X
               &SGEDT2C(5),                                            X
               &SGEDT2C(6),                                            X
               &SGEDT2C(7),                                            X
               &SGEDT2C(8),                                            X
               &SGEDT2C(9),                                            X
               &SGEDT2C(10)),                                          X
               DLRECLF=(&SGEDT2A(11),                                  X
               &SGEDT2A(12),                                           X
               &SGEDT2A(13),                                           X
               &SGEDT2A(14),                                           X
               &SGEDT2A(15),                                           X
               &SGEDT2A(16),                                           X
               &SGEDT2A(17),                                           X
               &SGEDT2A(18),                                           X
               &SGEDT2A(19),                                           X
               &SGEDT2A(20),                                           X
               &SGEDT2A(21),                                           X
               &SGEDT2A(22),                                           X
               &SGEDT2A(25),                                           X
               &SGEDT2A(26),                                           X
               &SGEDT2A(1),                                            X
               &SGEDT2A(2),                                            X
               &SGEDT2A(3),                                            X
               &SGEDT2A(4),                                            X
               &SGEDT2A(5),                                            X
               &SGEDT2A(6),                                            X
               &SGEDT2A(7),                                            X
               &SGEDT2A(8),                                            X
               &SGEDT2A(9),                                            X
               &SGEDT2A(10)),                                          X
               MLRECLF=(&SGEDT3A(11),                                  X
               &SGEDT3A(12),                                           X
               &SGEDT3A(13),                                           X
               &SGEDT3A(14),                                           X
               &SGEDT3A(15),                                           X
               &SGEDT3A(16),                                           X
               &SGEDT3A(17),                                           X
               &SGEDT3A(18),                                           X
               &SGEDT3A(19),                                           X
               &SGEDT3A(20),                                           X
               &SGEDT3A(21),                                           X
               &SGEDT3A(22),                                           X
               &SGEDT3A(25),                                           X
               &SGEDT3A(26),                                           X
               &SGEDT3A(1),                                            X
               &SGEDT3A(2),                                            X
               &SGEDT3A(3),                                            X
               &SGEDT3A(4),                                            X
               &SGEDT3A(5),                                            X
               &SGEDT3A(6),                                            X
               &SGEDT3A(7),                                            X
               &SGEDT3A(8),                                            X
               &SGEDT3A(9),                                            X
               &SGEDT3A(10)),                                          X
               DLRECLV=(&SGEDT4A(11),                                  X
               &SGEDT4A(12),                                           X
               &SGEDT4A(13),                                           X
               &SGEDT4A(14),                                           X
               &SGEDT4A(15),                                           X
               &SGEDT4A(16),                                           X
               &SGEDT4A(17),                                           X
               &SGEDT4A(18),                                           X
               &SGEDT4A(19),                                           X
               &SGEDT4A(20),                                           X
               &SGEDT4A(21),                                           X
               &SGEDT4A(22),                                           X
               &SGEDT4A(25),                                           X
               &SGEDT4A(26),                                           X
               &SGEDT4A(1),                                            X
               &SGEDT4A(2),                                            X
               &SGEDT4A(3),                                            X
               &SGEDT4A(4),                                            X
               &SGEDT4A(5),                                            X
               &SGEDT4A(6),                                            X
               &SGEDT4A(7),                                            X
               &SGEDT4A(8),                                            X
               &SGEDT4A(9),                                            X
               &SGEDT4A(10)),                                          X
               MLRECLV=(&SGEDT5A(11),                                  X
               &SGEDT5A(12),                                           X
               &SGEDT5A(13),                                           X
               &SGEDT5A(14),                                           X
               &SGEDT5A(15),                                           X
               &SGEDT5A(16),                                           X
               &SGEDT5A(17),                                           X
               &SGEDT5A(18),                                           X
               &SGEDT5A(19),                                           X
               &SGEDT5A(20),                                           X
               &SGEDT5A(21),                                           X
               &SGEDT5A(22),                                           X
               &SGEDT5A(25),                                           X
               &SGEDT5A(26),                                           X
               &SGEDT5A(1),                                            X
               &SGEDT5A(2),                                            X
               &SGEDT5A(3),                                            X
               &SGEDT5A(4),                                            X
               &SGEDT5A(5),                                            X
               &SGEDT5A(6),                                            X
               &SGEDT5A(7),                                            X
               &SGEDT5A(8),                                            X
               &SGEDT5A(9),                                            X
               &SGEDT5A(10)),                                          X
               TRNSLT=(&SGEDT3C(11),                                   X
               &SGEDT3C(12),                                           X
               &SGEDT3C(13),                                           X
               &SGEDT3C(14),                                           X
               &SGEDT3C(15),                                           X
               &SGEDT3C(16),                                           X
               &SGEDT3C(17),                                           X
               &SGEDT3C(18),                                           X
               &SGEDT3C(19),                                           X
               &SGEDT3C(20),                                           X
               &SGEDT3C(21),                                           X
               &SGEDT3C(22),                                           X
               &SGEDT3C(25),                                           X
               &SGEDT3C(26),                                           X
               &SGEDT3C(1),                                            X
               &SGEDT3C(2),                                            X
               &SGEDT3C(3),                                            X
               &SGEDT3C(4),                                            X
               &SGEDT3C(5),                                            X
               &SGEDT3C(6),                                            X
               &SGEDT3C(7),                                            X
               &SGEDT3C(8),                                            X
               &SGEDT3C(9),                                            X
               &SGEDT3C(10)),                                          X
               CHKR=(&SGEDT4C(11),                                     X
               &SGEDT4C(12),                                           X
               &SGEDT4C(13),                                           X
               &SGEDT4C(14),                                           X
               &SGEDT4C(15),                                           X
               &SGEDT4C(16),                                           X
               &SGEDT4C(17),                                           X
               &SGEDT4C(18),                                           X
               &SGEDT4C(19),                                           X
               &SGEDT4C(20),                                           X
               &SGEDT4C(21),                                           X
               &SGEDT4C(22),                                           X
               &SGEDT4C(25),                                           X
               &SGEDT4C(26),                                           X
               &SGEDT4C(1),                                            X
               &SGEDT4C(2),                                            X
               &SGEDT4C(3),                                            X
               &SGEDT4C(4),                                            X
               &SGEDT4C(5),                                            X
               &SGEDT4C(6),                                            X
               &SGEDT4C(7),                                            X
               &SGEDT4C(8),                                            X
               &SGEDT4C(9),                                            X
               &SGEDT4C(10)),                                          X
               USREXT=(,,,,,,,,,,,,,,                                  X
               &SGEDT5C(1),                                            X
               &SGEDT5C(2),                                            X
               &SGEDT5C(3),                                            X
               &SGEDT5C(4),                                            X
               &SGEDT5C(5),                                            X
               &SGEDT5C(6),                                            X
               &SGEDT5C(7),                                            X
               &SGEDT5C(8),                                            X
               &SGEDT5C(9),                                            X
               &SGEDT5C(10)),                                          X
               PRMTR=(&SGEDT6C(11),                                    X
               &SGEDT6C(12),                                           X
               &SGEDT6C(13),                                           X
               &SGEDT6C(14),                                           X
               &SGEDT6C(15),                                           X
               &SGEDT6C(16),                                           X
               &SGEDT6C(17),                                           X
               &SGEDT6C(18),                                           X
               &SGEDT6C(19),                                           X
               &SGEDT6C(20),                                           X
               &SGEDT6C(21),                                           X
               &SGEDT6C(22),                                           X
               &SGEDT6C(25),                                           X
               &SGEDT6C(26),                                           X
               &SGEDT6C(1),                                            X
               &SGEDT6C(2),                                            X
               &SGEDT6C(3),                                            X
               &SGEDT6C(4),                                            X
               &SGEDT6C(5),                                            X
               &SGEDT6C(6),                                            X
               &SGEDT6C(7),                                            X
               &SGEDT6C(8),                                            X
               &SGEDT6C(9),                                            X
               &SGEDT6C(10)),                                          X
               DSNSRC=(&SGEDT7C(11),                                   X
               &SGEDT7C(12),                                           X
               &SGEDT7C(13),                                           X
               &SGEDT7C(14),                                           X
               &SGEDT7C(15),                                           X
               &SGEDT7C(16),                                           X
               &SGEDT7C(17),                                           X
               &SGEDT7C(18),                                           X
               &SGEDT7C(19),                                           X
               &SGEDT7C(20),                                           X
               &SGEDT7C(21),                                           X
               &SGEDT7C(22),                                           X
               &SGEDT7C(25),                                           X
               &SGEDT7C(26),                                           X
               &SGEDT7C(1),                                            X
               &SGEDT7C(2),                                            X
               &SGEDT7C(3),                                            X
               &SGEDT7C(4),                                            X
               &SGEDT7C(5),                                            X
               &SGEDT7C(6),                                            X
               &SGEDT7C(7),                                            X
               &SGEDT7C(8),                                            X
               &SGEDT7C(9),                                            X
               &SGEDT7C(10)),                                          X
               DATEXIT=(&SGEDT8C(11),                                  X
               &SGEDT8C(12),                                           X
               &SGEDT8C(13),                                           X
               &SGEDT8C(14),                                           X
               &SGEDT8C(15),                                           X
               &SGEDT8C(16),                                           X
               &SGEDT8C(17),                                           X
               &SGEDT8C(18),                                           X
               &SGEDT8C(19),                                           X
               &SGEDT8C(20),                                           X
               &SGEDT8C(21),                                           X
               &SGEDT8C(22),                                           X
               &SGEDT8C(25),                                           X
               &SGEDT8C(26),                                           X
               &SGEDT8C(1),                                            X
               &SGEDT8C(2),                                            X
               &SGEDT8C(3),                                            X
               &SGEDT8C(4),                                            X
               &SGEDT8C(5),                                            X
               &SGEDT8C(6),                                            X
               &SGEDT8C(7),                                            X
               &SGEDT8C(8),                                            X
               &SGEDT8C(9),                                            X
               &SGEDT8C(10))                                   @E2367FY
         END
         AGO   .SKIP2           END OF PROCESSING FOR IKJEBEPD @E2367FY
.****************************************************************A45714
.*    THIS MACRO SETS THE PARAMETER LIST UP FOR MACRO SGIKJ0E2.  A45714
.*    THE PARAMETER LIST CONSISTS OF DATA SET TYPES AND USER EXITA45714
.*    NAMES SPECIFIED FOR EACH USER TYPE. IT IS USED TO CONSTRUCTA45714
.*    THE INITIALIZATION ROUTINE FOR THE TSO EDIT COMMAND.       A45714
.****************************************************************A45714
.SKIP1   ANOP                   START OF PROCESSING IKJEBINS   @E2367FY
         SGIKJ0E2  DST=(PLI,COBOL,ASM,TEXT,DATA,CLIST,CNTL,GOFORT,     X
               FORTE,FORTG,FORTGI,FORTH,PLIF,VSBASIC,                  X
               &SGEDITC(1),                                            X
               &SGEDITC(2),                                            X
               &SGEDITC(3),                                            X
               &SGEDITC(4),                                            X
               &SGEDITC(5),                                            X
               &SGEDITC(6),                                            X
               &SGEDITC(7),                                            X
               &SGEDITC(8),                                            X
               &SGEDITC(9),                                            X
               &SGEDITC(10)),                                          X
               SUBFD=(&SGEDT5C(1),                                     X
               &SGEDT5C(2),                                            X
               &SGEDT5C(3),                                            X
               &SGEDT5C(4),                                            X
               &SGEDT5C(5),                                            X
               &SGEDT5C(6),                                            X
               &SGEDT5C(7),                                            X
               &SGEDT5C(8),                                            X
               &SGEDT5C(9),                                            X
               &SGEDT5C(10))                                   @E2367FY
         END
.SKIP2   ANOP                                                  @E2367FY
         MEND
