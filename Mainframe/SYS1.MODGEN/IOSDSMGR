* %      GOTO  SMGRPLS1;           /* BILINGUAL MAPPING                 00050000
         MACRO                                                          00100000
         IOSDSMGR                                                       00150000
*                                                                    */ 00200000
*%SMGRPLS1: ;                                                           00250000
*/* Start of Specifications ******************************************/ 00297900
*/*                                                                  */ 00345800
*/*01*   MACRO NAME = IOSDSMGR                                       */ 00393700
*/*                                                                  */ 00441600
*/*01*   DESCRIPTIVE NAME = SMGR - IOS Storage Manager Header Tables */ 00489500
*/*                                                                  */ 00537400
*/*01*   COPYRIGHT =                                                 */ 00587400
*/*       5645-001                                               @L3C*/ 00637400
*/*       THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                */ 00687400
*/*       (C) COPYRIGHT IBM CORP. 1982, 1997                     @L3C*/ 00737400
*/*       LICENSED MATERIALS - PROPERTY OF IBM                       */ 00787400
*/*                                                                  */ 00968500
*/*01*   STATUS = HBB6603                                        @L3C*/ 00971900
*/*                                                                  */ 00975300
*/*01*   DSECT NAME = SMGRPAGE,PAGEHDR,SMBLKHDR,LGEBLOCK         @L3C*/ 00978700
*/*                                                                  */ 00982100
*/*01*   COMPONENT  = I/O Supervisor (SC1C3)                     @L3C*/ 00985500
*/*                                                                  */ 00988900
*/*01*   Eye-Catcher: None                                       @L3A*/ 00992300
*/*02*   Offset: N/A                                             @L3A*/ 00995700
*/*02    Length: N/A                                             @L3A*/ 00999100
*/*                                                                  */ 01002500
*/*01*   Storage Attributes:                                     @L3A*/ 01005900
*/*02*   Subpool: N/A - Nucleus resident                         @L3A*/ 01009300
*/*02*   Key: 0                                                  @L3A*/ 01012700
*/*02*   Residency: Below 16M (PAGEHDR,SMBLKHDR,LGEBLOCK)        @L3A*/ 01016100
*/*                 Any       (SMGRPAGE)                         @L3A*/ 01019500
*/*02*   Main Storage: YES                                       @L3A*/ 01022900
*/*02*   Auxiliary Storage: n/a                                  @L3A*/ 01026300
*/*02*   Virtual Storage: n/a                                    @L3A*/ 01029700
*/*                                                                  */ 01033100
*/*01*   Size:  See assembler listing.                           @L3A*/ 01036500
*/*                                                                  */ 01039900
*/*01*   Created by: IOSVIOQM, IOSVSMGR (PAGEHDR,SMBLKHDR,LGEBLOCK)  */ 01043300
*/*                  IOSVDATA           (SMGRPAGE)               @L3A*/ 01046700
*/*                                                                  */ 01050100
*/*01*   Deleted by: N/A                                         @L3A*/ 01053500
*/*                                                                  */ 01056900
*/*01*   Pointed to by: N/A                                      @L3A*/ 01060300
*/*                                                                  */ 01064300
*/*01*   FUNCTION =                                                  */ 01112200
*/*              This macro provides IOS Storage Manager             */ 01160100
*/*              mappings, as follows:                               */ 01208000
*/*              1) Mapping of the Page Pool Header table data       */ 01255900
*/*              2) Mapping of the Storage Manager Page header       */ 01303800
*/*                 layout                                           */ 01351700
*/*              3) Mapping of the Storage Manager block             */ 01399600
*/*                 header layout for large blocks                   */ 01449600
*/*              4) Mapping of the Storage Manager large blocks      */ 01499600
*/*                                                                  */ 01591200
*/*01*   DEPENDENCIES = This macro requires that IOSDSRIO and        */ 01615100
*/*                     IECDIOQ be included with IOQIOSME=YES        */ 01639000
*/*                     specified                                @L3C*/ 01662900
*/*                                                                  */ 01666900
*/*                     Changes to IOSDSMGR (and IOSVDATA) require   */ 01670900
*/*                     identical changes to macro IECDSMGR (and     */ 01674900
*/*                     IECVDATA) since IPCS formatters use one      */ 01678900
*/*                     formatter for both IOS and EXCP blocks   @L3A*/ 01682900
*/*                                                                  */ 01687000
*/*01*   RESTRICTIONS = None                                         */ 01734900
*/*                                                                  */ 01782800
*/*01*   MODULE TYPE  = Control block                                */ 01830700
*/*                                                                  */ 01878600
*/*01*   PROCESSOR    = PLS/III Compiler and Assembler               */ 01926500
*/*                                                                  */ 01931200
*/*01*   Serialization: None                                     @L3A*/ 01935900
*/*                                                                  */ 01940600
*/*01*  Method of Access                                         @L3A*/ 01945300
*/*        ASSEMBLER - IOSDSMGR                                  @L3A*/ 01950000
*/*        PL/X      - %INCLUDE(IOSDSMGR)                        @L3A*/ 01954700
*/*                                                                  */ 01959400
*/*01*   External Classification: NONE                           @L3A*/ 01964100
*/*01*   End of External Classification.                         @L3A*/ 01968800
*/*                                                                  */ 01974400
*/*01*   CHANGE ACTIVITY =                                           */ 02006300
*/*A000000-999999           OS/VS2  HBB2102                  @G860PLE*/ 02038200
*/*                                                                  */ 02070200
*/*                                                                  */ 02166000
*/* $MAC(IOSDSMGR),COMP(SC1C3): IOS storage manager mappings         */ 02213900
*/*                                                                  */ 02261800
*/* $L1=VERS     HBB3310 860416 PDLE: Versioning macro into product  */ 02297700
*/* $L2=CONSREL  HBB3310 861229 PDLC: Separate IOS storage manager   */ 02333600
*/*                                   function from EXCP             */ 02369500
*/* $L3=WLMIOP   HBB6603 951018 PDLP: WLM support. Add pointer to    */ 02381500
*/*                                   IOQ extension              @L3A*/ 02393500
*/* $L4=IOSCT    HBB6603 960304 PDMC: IOS Ctrace                 @L4A*/ 02399500
*/*                                                                  */ 02400300
*/* $P0=PQC2036  HBB6603 960804 PDNO: Change CTRACE constants defined*/ 02401100
*/*                                   hex constants to decimal       */ 02402200
*/*                                   constants so that PLS modules  */ 02403300
*/*                                   do not get compiler errors @P0A*/ 02404400
*/*                                                                  */ 02405500
*/* $01=OZ78973  HBB2102 850601 PDLE: Large blocks can be lost,      */ 02434200
*/*                                   causing SQA to expand into     */ 02462900
*/*                                   SQA.                       @01A*/ 02491600
*/*                                                                  */ 02520300
*/* End of Specifications ********************************************/ 02560100
*%GOTO   SMGRPLS2;   /*                                                 02600000
         SPACE 1                                                        02650000
*********************************************************************** 02700000
* Storage Manager Pool header data and free queue Layout.             * 02750000
*                                                                     * 02800000
*  The pool header data table contains all the data necessary to      * 02850000
*  build and maintain an IOS storage manager control block.           * 02900000
*                                                                     * 02950000
*  The IOS Storage Manager Page Pool Header tables are contained      * 03000000
*  in IOSVDATA in the following order:                                * 03050000
*                                                                     * 03100000
*    - IOSVQHDR - IOQ page pool header table                          * 03150000
*    - IOSVSHDR - IOS large block page pool header table              * 03200000
*                                                                     * 03350000
*  A pointer in the IOCOM (IOCSMDHR) points to the IOS tables.        * 03366600
*                                                                     * 03383200
*********************************************************************** 03400000
SMGRPAGE DSECT                                                          03450000
*                       Displacement within macro -----                 03500000
*                       *********************************************** 03550000
SMBLKID  DS    CL4        0 - Four character block identifier           03600000
SMPGID   DS    CL16       4-  The 16 character page identifier.         03650000
SMPGESZE DS    A         14 - Size of page in bytes.                    03700000
SMPGFLG1 DS    X         18 - Flags                                     03750000
SMLOCANY EQU   X'80'          - when issuing a GETMAIN, use the         03800000
*                               LOC= ANY option.                        03850000
SMCTACT  EQU   X'40'          - Storage Manager component trace         03866600
*                               is active                         @L4A  03883200
SMPGFLG2 DS    X         19 - Flags- reserved                           03900000
SMPGPOOL DS    H         1A - Subpool number.                           03950000
SMSYNCA  DS    A         1C - Pointer to the IOSYNCH lock word in       04000000
*                             IOSVDATA that is to be used when          04050000
*                             scanning the page chain. If zero,         04100000
*                             IOSYNCH lock not used.                    04150000
SMBLKCNT DS    H         20 - Total number of blocks on page.           04200000
SMTBLKLN DS    H         22 - Length of the Storage Manager block and   04250000
*                             Storage Manager Block header area.        04300000
SMBLKLEN DS    H         24 - Length of the Storage Manager block.      04350000
SMPOFSET DS    H         26 - Length of the page header (offset to the  04400000
*                             1st block on page).                       04450000
SMPTOLE  DS    H         28 - Minimum number of pages always resident   04500000
*                             (Number of pages initialized at NIP time) 04550000
SMLINKOF DS    H         2A - Offset in block of the block chain        04600000
*                             LINK pointer.                             04650000
SMHDROF  DS    H         2C - Offset in block to the storage manager    04700000
*                             header block.                             04750000
SMBIDOF  DS    H         2E - Offset in block to the block identifier.  04800000
*                 ***************************************************** 04850000
SMPGEINC DS    A         30 - Free queue synch and free count, used to  04900000
*                             add a new page of blocks to free chain.   04950000
SMALLOCW DS    0F        34 - Block allocation word indicator           05000000
SMALASID DS    H              34- ASID field                            05050000
SMALUNSD DS    X              36- Unused                                05100000
SMALLOCB DS    X              37- Allocation field                      05150000
SMFREEW  DS    0F        38 - Block Free word indicator                 05200000
SMFRASID DS    H              38- ASID field                            05250000
SMFRUNSD DS    X              3A- Unused                                05300000
SMFREEB  DS    X              3B- Allocation field                      05350000
SMTHRESH DS    A         3C - Threshold  for page expansion             05400000
SMPHDATA DS    A         40 - Pointer to Pool header static data        05450000
*                 ***************************************************** 05500000
SMCMPHDR DS    A         44 - Compress- page pointer save area.         05550000
SMRCMPCT DS    H         48 - Compress- count of routine calls.         05600000
SMPFMCNT DS    H         4A - Compress- number pages returned.          05650000
SMCMNPGE DS    H         4C - Compress- minimum number pages/compress   05700000
SMCMNBLK DS    H         4E - compress- minimum number blocks/compress  05750000
*                 ***************************************************** 05800000
SMNOPGS  DS    A         50 - Count of pages in use.                    05850000
SM1STPGE DS    A         54 - Pointer to the 1st page in page chain or  05900000
*                             zero (Not used or zeroed by FRR)          05950000
*                 ***************************************************** 06000000
SMFQHEAD DS    0D             Start of Free Queue area                  06050000
SMFQSYNC DS    A         58 - Free queue synchronization count          06100000
SMFQ1BLK DS    A         5C - Free queue pointer to the 1st block in    06150000
*                             free chain or zero.                       06200000
SMFQBSVE DS    A         60 - Free queue build routine caller's         06250000
*                             return address.                           06300000
SMPTLSVE DS    H         64 - Save area for page obtain loop count      06350000
SMFQFCNT DS    H         66 - Last free queue build block count         06400000
SMRESVD2 DS    CL04      68 - Reserved, used by IOSVSMGR          @L3C  06413600
SMRESVD3 DS    CL04      6C - Reserved, used by IOSVSMGR          @L3C  06427200
SMEXTBID DS    CL4       70 - Block identifier of the block             06440800
*                             dependent extension                 @L3A  06454400
SMEXTPID DS    CL16      74 - Page identifier of the block              06468000
*                             dependent extension                 @L3A  06481600
SMEXTBLN DS    H         84 - Block length of the block dependent       06495200
*                             extension                           @L3A  06508800
SMEXTSPL DS    H         86 - Subpool number of the block dependent     06522400
*                             extension                           @L3A  06536000
SMEXTPSZ DS    H         88 - Total size of the block dependent         06538800
*                             extension page (including the page        06541600
*                             header                              @L3A  06544400
SMRESVD4 DS    XL6       8A - Reserved                            @L3A  06547200
         SPACE 1                                                        06550000
SMLENGTH EQU   *-SMGRPAGE     Length of SMGRPAGE mapping.               06600000
         SPACE  3                                                       06650000
*********************************************************************** 06700000
*  Storage Manager Page Header layout.                                * 06750000
*                                                                     * 06800000
*  This DSECT maps the page header area of each page obtained         * 06850000
*  for providing the IOS storage manager control blocks.              * 06900000
*                                                                     * 06910000
*  Note: The size of Storage Manager Page Header cannot exceed        * 06920000
*        48 bytes, which is the current size of IOQE page header  @L3A* 06930000
*                                                                     * 06940000
*********************************************************************** 06950000
PAGEHDR  DSECT                     Page Header layout----------------   07000000
PGHDRCNT DS    CL4                  0 - Number of blocks on page        07050000
PGHDBLKP DS    CL4                  4 - Pointer to 1st block on page    07100000
PGHDFLG1 DS    X                    8 - Page header flag byte 1         07150000
PGHDINIT EQU   X'80'                    .. Initial IPL page             07200000
PGHDLINT EQU   X'40'                    .. Last Initial page            07250000
PGHDFLG2 DS    X                    9 - Page header flag byte 2         07300000
PGHDMCNT DS    H                    A - Maximum number of blocks        07350000
*                                       contained on page               07400000
PGHDCHN  DS    CL4                  C - Pointer to the next page in     07450000
*                                       chain or zero for last in chain 07500000
PGHDID   DS    CL16                10 - 16 character page identifier    07550000
PGHDWKAR DS    CL4                 20 - Page header work word           07558300
PGHDBACK DS    0A                  24 - Pointer from the block          07566600
*                                       dependent extension to its      07574900
*                                       main block                @L3A  07583200
PGHDEXTP DS    A                   24 - Pointer from the main block to  07591500
*                                       the block dependent extension.  07599800
*                                       Zero if no extension exists     07608100
*                                                                 @L3A  07616400
* The following instruction will cause an assembly error if the         07624700
* size of pagehdr is greater than 48 bytes.                             07633000
         ORG   PAGEHDR+(48-(*-PAGEHDR))                           @L3A  07641300
PGHDLNTH EQU   *-PAGEHDR                Length of the page header area  07650000
         SPACE  3                                                       07700000
*********************************************************************** 07750000
*  Storage Manager Block Header Layouts                               * 07800000
*                                                                     * 07850000
*  The following DSECT describes the 8 byte block header that is      * 07900000
*  associated with each large block.                                  * 07950000
*                                                                     * 08000000
*  These block headers are for IOS Storage Manager use only.          * 08050000
*********************************************************************** 08100000
SMBLKHDR DSECT                     Storage Manager block header layout  08150000
SMBHASID DS    H                    0  - ASID field                     08200000
SMBHUNSD DS    X                    2  - Unused                         08250000
SMBHFLAG DS    X                    3  - Status byte - Free/Allocated   08300000
ALLOCLGE EQU   X'76'                    .Large  allocation indicator    08400000
FREELGE  EQU   X'17'                    .Large  Free indicator          08450000
CHNDLGE  EQU   X'18'                    .Large  chained indicator  @01A 08500000
SMBHPAGE DS    F                    4  - Block Page pointer             08650000
         EJECT                                                          08700000
*********************************************************************** 08750000
*  Storage Manager Large block layout including the IOS               * 08800000
*  Storage Manager header area.                                       * 08850000
*********************************************************************** 08900000
LGEBLOCK DSECT                     Large block layout----------------   08950000
LGEBLINK DS    0F                  Large block caller chain pointer     09000000
         DS    CL(240)             Large block length                   09050000
LGEBLKID DS    CL4                 Large block identifier word          09100000
LGEBLKFC DS    CL4                 Large block SM free chain pointer    09150000
LGEBHDR  DS    0CL8                Large block storage manager header   09200000
LGEHASID DS    H                   Large block ASID field               09250000
LGEHUNSD DS    X                   Unused byte                          09300000
LGEHFLAG DS    X                   Large block Status byte              09350000
LGEHPAGE DS    F                   Large block Page pointer             09400000
         SPACE 3                                                        09450000
*   Component Trace entry requestors                               @L4A 09500000
SMGICTGB EQU   X'00000101'         IOS Storage Manager Get Block        09550000
*                                  trace entry                     @L4A 09600000
SMGICTFB EQU   X'00000102'         IOS Storage Manager Free Block       09650000
*                                  trace entry                     @L4A 09700000
SMGICTGP EQU   X'00000103'         IOS Storage Manager Get Page         09750000
*                                  trace entry                     @L4A 09800000
SMGICTFP EQU   X'00000104'         IOS Storage Manager Free Page        09850000
*                                  trace entry                     @L4A 09900000
SMGICTPB EQU   X'00000105'         IOS Storage Manager Purge Blocks     09950000
*                                  trace entry                     @L4A 10000000
SMGECTGB EQU   X'00000201'         EXCP Common Storage Manager Get      10050000
*                                  Block trace entry               @L4A 10100000
SMGECTFB EQU   X'00000202'         EXCP Common Storage Manager Free     10150000
*                                  Block trace entry               @L4A 10200000
SMGECTGP EQU   X'00000203'         EXCP Common Storage Manager Get      10250000
*                                  Page trace entry                @L4A 10300000
SMGECTFP EQU   X'00000204'         EXCP Common Storage Manager Free     10350000
*                                  Page trace entry                @L4A 10400000
SMGECTPB EQU   X'00000205'         EXCP Storage Manager Purge Blocks    10450000
*                                  trace entry                     @L4A 10500000
SMGPCTGB EQU   X'00000301'         EXCP Private Storage Manager Get     10550000
*                                  Block trace entry               @L4A 10600000
SMGPCTFB EQU   X'00000302'         EXCP Private Storage Manager Free    10650000
*                                  Block trace entry               @L4A 10700000
SMGPCTGP EQU   X'00000303'         EXCP Private Storage Manager Get     10750000
*                                  Page trace entry                @L4A 10800000
SMGPCTFP EQU   X'00000304'         EXCP Private Storage Manager Free    10850000
*                                  Page trace entry                @L4A 10900000
         MEND ,                                                      */ 10950000
*%SMGRPLS2: ;                                                           11000000
*/*******************************************************************/  11050000
*/*   Storage Manager Pool Header data and Free queue Layout         */ 11100000
*/*                                                                  */ 11150000
*/*   The pool header data table contains all the data necessary to  */ 11200000
*/*   build and maintain an IOS storage manager control block.       */ 11250000
*/*                                                                  */ 11400000
*/*   The IOS Storage Manager Page Pool Header tables are contained  */ 11450000
*/*   in IOSVDATA in the following order:                            */ 11500000
*/*                                                                  */ 11650000
*/*     - IOSVQHDR - IOQ page pool header table                      */ 11658300
*/*     - IOSVSHDR - IOS large block page pool header table          */ 11666600
*/*                                                                  */ 11674900
*/*   A pointer in the IOCOM (IOCSMDHR) points to the IOS tables.    */ 11683200
*/*                                                                  */ 11691500
*/*******************************************************************/  11700000
* DCL 1 SMGRPAGE        BASED  , /* Storage Manager Page Header         11750000
*                                   data and Free queue area         */ 11800000
*       2 SMGRPHDR             , /* Pool Header data........         */ 11850000
*          4 SMBLKID   CHAR(04), /* Block identifer                  */ 11900000
*          4 SMPGID    CHAR(16), /* The 16 character page identifier */ 11950000
*          4 SMPGESZE   PTR(31), /* Page size in bytes               */ 12000000
*          4 SMPGFLG1   BIT(08), /* Flags                            */ 12050000
*           6 SMLOCANY  BIT(01), /* - When issuing the GETMAIN, use     12100000
*                                     the LOC=ANY option             */ 12150000
*           6 SMCTACT   BIT(01), /* - Storage Manager component trace   12166600
*                                     is active                  @L4A*/ 12183200
*          4 SMPGFLG2   BIT(08), /* Flags                            */ 12200000
*          4 SMPGPOOL FIXED(16), /* Subpool number                   */ 12250000
*          4 SMSYNCA    PTR(31), /* Pointer to the IOSYNCH lock word    12300000
*                                   in IOSVDATA that is to be used      12350000
*                                   when scanning the page chain     */ 12400000
*          4 SMBLKCNT   PTR(15), /* Total number of blocks on page   */ 12450000
*          4 SMTBLKLN   PTR(15), /* Length of storage manager block     12500000
*                                   and storage manager block header */ 12550000
*          4 SMBLKLEN   PTR(15), /* Length of the storage manager       12600000
*                                   block                            */ 12650000
*          4 SMPOFSET   PTR(15), /* Length of the page header (offset   12700000
*                                   to the 1st block on page)        */ 12750000
*          4 SMPTOLE    PTR(15), /* Minimum number of pages always      12800000
*                                   resident (number of pages           12850000
*                                   initialized at NIP time)         */ 12900000
*          4 SMLINKOF   PTR(15), /* Offset in block to the block        12950000
*                                   LINK chain pointer.              */ 13000000
*          4 SMHDROF    PTR(15), /* Offset in block to the storage      13050000
*                                   manager header area.             */ 13100000
*          4 SMBIDOF    PTR(15), /* Offset in block to the block        13150000
*                                   identifier word.                 */ 13200000
*          4 SMPGEINC   PTR(32), /* Free queue synch and free count,    13250000
*                                   used to add a new page of blocks    13300000
*                                   to the free chain                */ 13350000
*          4 SMALLOCW  CHAR(04), /* Block allocation word indicator  */ 13400000
*          4 SMFREEW   CHAR(04), /* Block free word indicator        */ 13450000
*          4 SMTHRESH  CHAR(04), /* Threshold for pool expansion     */ 13500000
*          4 SMPHDATA   PTR(31), /* Pointer to the Pool header static   13550000
*                                   data (first 20 hex bytes)        */ 13600000
*          4 SMCMPHDR   PTR(31), /* Compress- page pointer save area */ 13650000
*          4 SMRCMPCT  CHAR(02), /* Compress- Routine calls count    */ 13700000
*          4 SMPFMCNT  CHAR(02), /* Compress- number pages returned  */ 13750000
*          4 SMCMNPGE  CHAR(02), /* compress- minimum number of pages   13800000
*                                   required  to invoke compress     */ 13850000
*          4 SMCMNBLK  CHAR(02), /* Compress- minimum number of blocks  13900000
*                                   required to invoke compress      */ 13950000
*          4 SMNOPGS  FIXED(31), /* Count of pages in use            */ 14000000
*          4 SM1STPGE   PTR(31), /* Pointer to the first page in page   14050000
*                                   chain or zero (Not used or zeroed   14100000
*                                   by FRR)                          */ 14150000
*       2 SMFQHEAD             , /* Free Queue header - Must begin on   14200000
*                                   a double word boundary for CDS   */ 14250000
*          4 SMFQSYNC   PTR(32), /* Free Queue synchronization count */ 14300000
*          4 SMFQ1BLK   PTR(31), /* Free Queue pointer to the 1st       14350000
*                                   block in free chain or zero      */ 14400000
*          4 SMFQBSVE   PTR(31), /* Free Queue Build routine            14450000
*                                   caller's return address          */ 14500000
*          4 SMPTLSVE   PTR(15), /* Save area for page obtain loop      14550000
*                                   count                            */ 14600000
*          4 SMFQFCNT   PTR(15), /* Last free queue build free count */ 14650000
*          4 SMRESVD2  CHAR(04), /* Reserved, used by IOSVSMGR   @L3C*/ 14663600
*          4 SMRESVD3  CHAR(04), /* Reserved, used by IOSVSMGR   @L3C*/ 14677200
*          4 SMEXTBID  CHAR(04), /* Block identifier of the block       14686600
*                                   dependent extension          @L3A*/ 14696000
*          4 SMEXTPID  CHAR(16), /* Page identifier of the block        14705400
*                                   dependent extension          @L3A*/ 14714800
*          4 SMEXTBLN FIXED(15), /* Block length of the block           14724200
*                                   dependent extension          @L3A*/ 14733600
*          4 SMEXTSPL FIXED(15), /* Subpool number of the block         14743000
*                                   dependent extension          @L3A*/ 14752400
*          4 SMEXTPSZ FIXED(15), /* Total size of the block dependent   14761800
*                                   extension page (including the       14771200
*                                   page header)                 @L3A*/ 14780600
*          4 SMRESVD4 CHAR(06);  /* Reserved                     @L3A*/ 14790300
*/*******************************************************************/  14800000
*/*   Storage Manager Page header layout                             */ 14850000
*/*                                                                  */ 14900000
*/*   This DSECT maps the page header area of each page obtained     */ 14950000
*/*   for providing the IOS storage manager control blocks.          */ 15000000
*/*   Note: The size of Storage Manager Page Header cannot exceed    */ 15012500
*/*         48 bytes, which is the current size of IOQE page header  */ 15025000
*/*                                                              @L3A*/ 15037500
*/*******************************************************************/  15050000
* DECLARE                                                               15100000
*   1 PAGEHDR  BDY(WORD) CHAR(MIN(LENGTH(IOQ),LENGTH(IOQE),             15125000
*                                 LENGTH(SRIO))) BASED,    /*           15150000
*                                    Page Header layout---------@L3A */ 15175000
*    2 PGHDRCNT  CHAR(04)      ,  /* Count of blocks on page         */ 15200000
*    2 PGHDBLKP   PTR(31)      ,  /* Pointer to the 1st block on page*/ 15250000
*    2 PGHDFLG1   BIT(08)      ,  /* Page header flag byte 1         */ 15300000
*      4 PGHDINIT BIT(01)      ,  /* Initial (IPL) page              */ 15350000
*      4 PGHDLINT BIT(01)      ,  /* Last Initial page               */ 15400000
*    2 PGHDFLG2   BIT(08)      ,  /* Page header flag byte 2         */ 15450000
*    2 PGHDMCNT  CHAR(02)      ,  /* Maximum count of blocks on page */ 15500000
*    2 PGHDCHN    PTR(31)      ,  /* Pointer to next page in chain or   15550000
*                                    zero for last in chain          */ 15600000
*    2 PGHDID    CHAR(16)      ,  /* Page header identifier          */ 15650000
*    2 PGHDWKAR  CHAR(04)      ,  /* Page header work area word      */ 15672200
*    2 PGHDEXTP  PTR(31)       ,  /* Pointer from the main block to     15694400
*                                    the block dependent extension.     15716600
*                                    Zero if no extension exists @L3A*/ 15738800
*      4 PGHDBACK  PTR(31)     ;  /* Pointer from the block             15761000
*                                    dependent extension to its         15783200
*                                    main block                  @L3A*/ 15805400
*/********************************************************************/ 15827600
*/* Storage Manager Block Header Layouts                             */ 15850000
*/*                                                                  */ 15900000
*/* The following DSECT describes the 8 byte block header that is    */ 15950000
*/* associated with each large block.                                */ 16000000
*/*                                                                  */ 16050000
*/* These block headers are for IOS Storage Manager use only.        */ 16100000
*/*******************************************************************/  16150000
* DECLARE                                                               16200000
*   1 SMBLKHDR BDY(WORD) BASED ,  /* Storage Manager Block Header    */ 16250000
*    2 SMBHASID  CHAR(02)      ,  /*  - ASID field                   */ 16300000
*    2 SMBHUNSD  CHAR(01)      ,  /*  - Unused                       */ 16350000
*    2 SMBHFLAG  CHAR(01)      ,  /*  - Status byte - Free/Allocated */ 16400000
*    2 SMBHPAGE  CHAR(04)      ;  /*  - Block page pointer           */ 16450000
*/*******************************************************************/  16500000
*/*   Storage Manager Large block layout including the IOS           */ 16550000
*/*   Storage Manager header area.                                   */ 16600000
*/*******************************************************************/  16650000
* DECLARE                                                               16700000
*   1 LGEBLOCK BDY(WORD) BASED ,  /* Large block layout------------- */ 16750000
*    2 *       BDY(WORD) CHAR(240),  /* Large block length           */ 16800000
*     4 LGEBLINK  PTR(31)      ,  /* Large block caller chain           16850000
*                                      pointer                       */ 16900000
*    2 LGEBLKID  CHAR(04)      ,  /* Large block identifier word     */ 16950000
*    2 LGEBLKFC   PTR(31)      ,  /* Large block SM free chain ptr   */ 17000000
*    2 LGEBHDR   CHAR(08)      ,  /* Large block storage manager        17050000
*                                    header area.                    */ 17100000
*     4 LGEBASID CHAR(02)      ,  /* Large block ASID field          */ 17150000
*     4 LGEBUNSD CHAR(01)      ,  /* Unused byte                     */ 17200000
*     4 LGEHFLAG CHAR(01)      ,  /* Large block Status byte         */ 17250000
*     4 LGEHPAGE CHAR(04)      ;  /* Large block Page pointer        */ 17300000
*/*   Status byte constants                                          */ 17350000
*    DCL ALLOCLGE BIT(8) CONSTANT('76'X);/* Large  allocation Ind    */ 17400000
*    DCL FREELGE  BIT(8) CONSTANT('17'X);/* Large  Free Indicator    */ 17450000
*    DCL CHNDLGE  BIT(8) CONSTANT('18'X);/* Large  chained indicator    17500000
*                                                                @01A*/ 17550000
*/*   Component Trace entry requestors                           @L4A*/ 17600000
*    DCL SMGICTGB FIXED(31) CONSTANT(257); /* '00000101'X IOS Storage   17650000
*                                           Manager Get Block trace     17700000
*                                           entry                @P0C*/ 17750000
*    DCL SMGICTFB FIXED(31) CONSTANT(258); /* '00000102'X IOS Storage   17800000
*                                           Manager Free Block trace    17850000
*                                           entry                @P0C*/ 17900000
*    DCL SMGICTGP FIXED(31) CONSTANT(259); /* '00000103'X IOS Storage   17950000
*                                           Manager Get Page trace      18000000
*                                           entry                @P0C*/ 18050000
*    DCL SMGICTFP FIXED(31) CONSTANT(260); /* '00000104'X IOS Storage   18100000
*                                           Manager Free Page trace     18150000
*                                           entry                @P0C*/ 18200000
*    DCL SMGICTPB FIXED(31) CONSTANT(261); /* '00000105'X IOS Storage   18250000
*                                           Manager Purge Blocks        18300000
*                                           trace entry          @P0C*/ 18350000
*    DCL SMGECTGB FIXED(31) CONSTANT(513); /* '00000201'X EXCP Common   18400000
*                                           Storage Manager Get         18450000
*                                           Block trace entry    @P0C*/ 18500000
*    DCL SMGECTFB FIXED(31) CONSTANT(514); /* '00000202'X EXCP Common   18550000
*                                           Storage Manager Free        18600000
*                                           Block trace entry    @P0C*/ 18633300
*    DCL SMGECTGP FIXED(31) CONSTANT(515); /* '00000203'X EXCP Common   18666600
*                                           Storage Manager Get         18700000
*                                           Page trace entry     @P0C*/ 18750000
*    DCL SMGECTFP FIXED(31) CONSTANT(516); /* '00000204'X EXCP Common   18800000
*                                           Storage Manager Free        18850000
*                                           Page trace entry     @P0C*/ 18900000
*    DCL SMGECTPB FIXED(31) CONSTANT(517); /* '00000205'X EXCP Common   18950000
*                                           Manager Purge Blocks        19000000
*                                           trace entry          @P0C*/ 19050000
*    DCL SMGPCTGB FIXED(31) CONSTANT(769); /* '00000301'X EXCP Private  19100000
*                                           Storage Manager Get         19150000
*                                           Block trace entry    @P0C*/ 19200000
*    DCL SMGPCTFB FIXED(31) CONSTANT(770); /* '00000302'X EXCP Private  19250000
*                                           Storage Manager Free        19300000
*                                           Block trace entry    @P0C*/ 19350000
*    DCL SMGPCTGP FIXED(31) CONSTANT(771); /* '00000303'X EXCP Private  19400000
*                                           Storage Manager Get         19450000
*                                           Page trace entry     @P0C*/ 19500000
*    DCL SMGPCTFP FIXED(31) CONSTANT(772); /* '00000304'X EXCP Private  19550000
*                                           Storage Manager Free        19600000
*                                           Page trace entry     @P0C*/ 19650000
