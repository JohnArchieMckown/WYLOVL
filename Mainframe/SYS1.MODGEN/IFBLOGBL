*        %GOTO LOGBLPRO;          /* Bilingual Mapping Macro            00010000
         MACRO                                                          00020000
         IFBLOGBL &DSECT=YES                                            00030000
*                                                                       00040000
.*/      %LOGBLPRO: ;                                             /* */ 00050000
*/*START OF SPECIFICATIONS ******************************************** 00060000
*                                                                       00070000
*01* MACRO NAME: IFBLOGBL                                               00080000
*                                                                       00090000
*01* DESCRIPTIVE NAME: Logrec - Log block buffering parameter list      00100000
*02* ACRONYM: Logbl                                                     00110000
*                                                                       00120000
**********************************************************************/ 00130000
*/*01* PROPRIETARY STATEMENT=                                        */ 00140000
*/***PROPRIETARY_STATEMENT********************************************/ 00150000
*/*                                                                  */ 00160000
*/*                                                                  */ 00170000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00180000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00190000
*/* 5655-068 (C) COPYRIGHT IBM CORP. 1994                            */ 00200000
*/* SEE COPYRIGHT INSTRUCTIONS                                       */ 00210000
*/*                                                                  */ 00220000
*/* STATUS= HBB5520                                                  */ 00230000
*/*                                                                  */ 00240000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00250000
*/********************************************************************* 00260000
*                                                                       00270000
*01* FUNCTION:                                                          00280000
*                                                                       00290000
*    Mapping macro for the LOGREC Log block buffering routine           00300000
*    IFBLOGBF. Mapping contains information required to either          00310000
*    add a LOGREC record to a log block or write the log block          00320000
*    to the LOGREC log stream immediately.                              00330000
*                                                                       00340000
*01* EXTERNAL CLASSIFICATION:  NONE                                     00350000
*01* END OF EXTERNAL CLASSIFICATION:                                    00360000
*                                                                       00370000
*01* NOTES:                                                             00380000
*            Bilingual Mapping Macro (PL/X and BAL)                     00390000
*                                                                       00400000
*02* DEPENDENCIES: None                                                 00410000
*                                                                       00420000
*01* METHOD OF ACCESS:                                                  00430000
*                                                                       00440000
*02*   ASM:  IFBLOGBL DSECT=YES|NO                                      00450000
*                                                                       00460000
*            DSECT=YES  - Provides DSECT (mapping) for LOGBL.           00470000
*                         YES is the default.                           00480000
*                                                                       00490000
*            DSECT=NO   - Provides storage definition starting on       00500000
*                         a full word boundary.                         00510000
*                                                                       00520000
*02*   PLX:  %INCLUDE SYSLIB(IFBLOGBL)                                  00530000
*                                                                       00540000
*            %LOGBLBASE = '' - The macro will not be based.             00550000
*                                                                       00560000
*            %LOGBLBASE = 'BASED(POINTER)' - To have the mapping        00570000
*                                based on a pointer.                    00580000
*                                                                       00590000
*01* DSECT NAME: IFBLOGBL                                               00600000
*                                                                       00610000
*01* COMPONENT =  System Environmental Recording - Logrec (SCOBR)       00620000
*                                                                       00630000
*01* EYE-CATCHER: 'IFBLOGBL'                                            00640000
*02*   OFFSET: 0                                                        00650000
*02*   LENGTH: 8                                                        00660000
*                                                                       00670000
*01* CREATED BY: IFBSVC76 LOGREC Data Set Recording Routine (SVC76)     00680000
*                                                                       00690000
*01* DELETED BY: IFBSVC76 LOGREC Data Set Recording Routine (SVC76)     00700000
*                                                                       00710000
*01* POINTED TO BY:  Register 1 on input to IFBLOGBF                    00720000
*                                                                       00730000
*01* STORAGE ATTRIBUTES:                                                00740000
*02*  SUBPOOL  : 226                                                    00750000
*02*  KEY      : 0                                                      00760000
*02*  RESIDENCY: BELOW                                                  00770000
*                                                                       00780000
*01* SIZE:  36 (dec.) bytes                                             00790000
*                                                                       00800000
*01* FREQUENCY: Built for each invocation of SVC 76 that requires       00810000
*               the writing to the LOGREC Log Stream.                   00820000
*                                                                       00830000
*01* SERIALIZATION: None                                                00840000
*                                                                       00850000
*01* DISTRIBUTION LIBRARY = APVTMACS                                    00860000
*                                                                       00870000
*01* MESSAGES =                                                         00880000
*                                                                       00890000
*    BAL Version only =                                                 00900000
*                                                                       00910000
*    MNOTE 12,'AHA0010 IFBLOGBL:  DSECT MUST BE EITHER YES OR NO'       00920000
*                                                                       00930000
*                                                                       00940000
*01* CHANGE-ACTIVITY:                                                   00950000
*                                                                       00960000
*    Flag LineItem  FMID    DATE   ID   Comment                         00970000
*                                                                       00980000
*     $L0=LOGRC    HBB5520 940414 PDD6: Logrec Log Stream               00990000
*                                                                       01000000
*END OF SPECIFICATIONS ***********************************************/ 01010000
*        %GOTO LOGBLBEG;                                          /* *  01020000
*                                                                       01030000
         AIF   ('&DSECT' EQ 'YES').LOGBL10                              01040000
         AIF   ('&DSECT' EQ 'NO').LOGBL20                               01050000
         MNOTE 12,'AHA0010 IFBLOGBL:  DSECT MUST BE EITHER YES OR NO'   01060000
         AGO   .END                                                     01070000
.LOGBL10 ANOP                                                           01080000
IFBLOGBL DSECT ,                   IFBLOGBL data area mapping           01090000
         AGO   .LOGBL30                                                 01100000
.LOGBL20 ANOP                                                           01110000
IFBLOGBL DS    0F                  IFBLOGBL data area                   01120000
.LOGBL30 ANOP                                                           01130000
LOGBL    DS    0F                  Common name, word alignment          01140000
LOGBL_ID    DS    CL8              Eye catcher                          01150000
LOGBL_VERS  DS    XL2              Version number                       01160000
LOGBL_LEN   DS    H                Length of IFBLOGBL                   01170000
LOGBL_FUNCTION_CODE DS    XL4      Function code to log stream buffer   01180000
*                                  routine                              01190000
LOGBL_RECORD_ADDR   DS    A        Address of data record               01200000
LOGBL_RECORD_LEN    DS    F        Length of data record                01210000
LOGBL_FLAGS DS     0XL4             Flags                               01220000
LOGBL_FLAGS1       DS     XL1             First flag byte               01230000
LOGBL_LOGBLOCK_ALLOC_ERROR EQU   X'80'     On - when an error is        01240000
*                                          encountered while allocating 01250000
*                                          a log block                  01260000
LOGBL_FLAGS24      DS     XL3             2nd thru 4th flag bytes       01270000
LOGBL_RESV1 DS     CL8             Reserved for IBM                     01280000
*                                                                       01290000
LOGBL_LENGTH     EQU   *-LOGBL     Length of LOGBL                      01300000
LOGBL_VERSION    EQU   X'01'       The latest version of LOGBL          01310000
*                                                                       01320000
*    Possible function codes to be passed to IFBLOGBF                   01330000
LOGBL_BLOCK_DATA          EQU   1  Code indicating that the data in     01340000
*                                  the record is to be blocked          01350000
LOGBL_WRITE_TO_LOG_STREAM EQU   2  Code indicating write to log         01360000
*                                  stream immediately                   01370000
*                                                                       01380000
*    These constants are used to define the return codes from           01390000
*    IFBLOGBF.                                                          01400000
*                                                                       01410000
LOGBL_RETURN_OK           EQU   0  Successful processing                01420000
LOGBL_RETURN_OVERFLOW     EQU   12 Unsuccessful, an overflow occurred   01430000
LOGBL_RETURN_RECLEN_ERROR EQU   20 Unsuccessful, the record length      01440000
*                                  was too large to fit into            01450000
*                                  a logrec log stream log block        01460000
LOGBL_RETURN_ERROR        EQU   24 Unsuccessful, a system error was     01470000
*                                  encountered                          01480000
.*                                                                      01490000
.END     ANOP                                                           01500000
         MEND  ,                                                        01510000
.*                                                                      01520000
.*/      %LOGBLBEG: ;                                                   01530000
                                                                @SPACE; 01540000
 %IF LOGBLBASE = '' %THEN %LOGBLBASE = ' ';                             01550000
                                                                @SPACE; 01560000
  DCL 1 IFBLOGBL BDY(word) Logblbase,   /* Log stream buffer plist   */ 01570000
       2 Logbl,                         /* Common name               */ 01580000
        3 Logbl_id           CHAR(8),   /* Eye Catcher               */ 01590000
        3 Logbl_vers         FIXED(16), /* Version number            */ 01600000
        3 Logbl_len          FIXED(15), /* Length of IFBLOGBL        */ 01610000
        3 Logbl_function_code FIXED(32),/* Function code to log stream  01620000
                                           buffer routine            */ 01630000
        3 Logbl_record_addr  PTR(31),   /* Addr of data record       */ 01640000
        3 Logbl_record_len   FIXED(31), /* Length of data record     */ 01650000
        3 Logbl_flags        BIT(32),   /* Status flags              */ 01660000
         4 Logbl_flags1       BIT(8),   /* First flag byte           */ 01670000
          5 Logbl_logblock_alloc_error                                  01680000
                             BIT(1),    /* On - when an error is        01690000
                                           encountered while allocating 01700000
                                           a log block               */ 01710000
         4 Logbl_flags24      BIT(24),  /* 2nd thru 4th flag bytes   */ 01720000
        3 Logbl_resv1        CHAR(8);   /* Reserved for IBM          */ 01730000
                                                                @EJECT; 01740000
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01750000
  /*                                                                 */ 01760000
  /* These constants are used with the IFBLOGBL mapping              */ 01770000
  /*                                                                 */ 01780000
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01790000
                                                                @SPACE; 01800000
  DCL Logbl_eye_catcher CHAR(8) CONSTANT('IFBLOGBL'); /* The LOGBL      01810000
                                           identifier                */ 01820000
  DCL Logbl_version FIXED(16) CONSTANT(1); /* The version of the        01830000
                                              LOGBL                  */ 01840000
  DCL Logbl_length  FIXED(15) CONSTANT(LENGTH(LOGBL)); /*               01850000
                                           Length value of LOGBL     */ 01860000
                                                                @SPACE; 01870000
  DCL Logbl_block_data FIXED(32) CONSTANT(1); /* Code indicating that   01880000
                                           the data in the record is to 01890000
                                           be blocked                */ 01900000
  DCL Logbl_write_to_log_stream FIXED(32) CONSTANT(2); /* Write to      01910000
                                           Log Stream immediately    */ 01920000
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01930000
  /*                                                                 */ 01940000
  /* These constants are used to define the return codes from        */ 01950000
  /* IFBLOGBF.                                                       */ 01960000
  /*                                                                 */ 01970000
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01980000
                                                                @SPACE; 01990000
  DCL Logbl_return_ok    FIXED(31) CONSTANT(0); /* Successful           02000000
                                                processing           */ 02010000
  DCL Logbl_return_overflow FIXED(31) CONSTANT(12); /* Unsuccessful,    02020000
                                                an overflow occurred */ 02030000
  DCL Logbl_return_reclen_error  FIXED(31)                              02040000
                              CONSTANT(20);  /* Unsuccessful, the       02050000
                                                record length was too   02060000
                                                large to fit into a     02070000
                                                logrec log stream log   02080000
                                                block                */ 02090000
  DCL Logbl_return_error FIXED(31) CONSTANT(24); /* Unsuccessful,       02100000
                                                a system error was      02110000
                                                encountered          */ 02120000
