* %      GOTO  SMGRPLS1;           /* BILINGUAL MAPPING                 00050000
         MACRO                                                          00100000
         IECDSMGR                                                       00150000
*                                                                    */ 00200000
*%SMGRPLS1: ;                                                           00250000
*/* START OF SPECIFICATIONS ******************************************/ 00300000
*/*                                                                  */ 00350000
*/*01*  MACRO NAME:  IECDSMGR                                        */ 00400000
*/*                                                                  */ 00450000
*/*01*  DESCRIPTIVE NAME: SMGR - EXCP Storage Manager Header         */ 00500000
*/*                              Tables                              */ 00550000
*/*01*  COPYRIGHT:                                                   */ 00600000
*/*     5645-001                                                     */ 00650000
*/*     THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                 */ 00700000
*/*     (C) COPYRIGHT IBM CORP. 1988, 1997                           */ 00750000
*/*     LICENSED MATERIALS - PROPERTY OF IBM                         */ 00800000
*/*                                                                  */ 00950000
*/*01*  STATUS: HBB6603                                              */ 00955800
*/*                                                                  */ 00961600
*/*01*  DSECT-NAME:  SMGRPAGE, PAGEHDR, SMBLKHDR, LGXBLOCK,          */ 00967400
*/*                  MEDBLOCK                                        */ 00973200
*/*                                                                  */ 00979000
*/*01*  COMPONENT:  Execute Channel Program (SC1C6)                  */ 00984800
*/*                                                                  */ 00990600
*/*01*  EYE-CATCHER: None                                            */ 00996400
*/*02*   Offset: N/A                                                 */ 01002200
*/*02*   Length: N/A                                                 */ 01008000
*/*                                                                  */ 01013800
*/*01*  STORAGE ATTRIBUTES:                                          */ 01019600
*/*02*   Subpool: N/A - Nucleus Resident                             */ 01025400
*/*02*   Key: 0                                                      */ 01031200
*/*                                                                  */ 01037000
*/*01*  SIZE: See Assembler Listing                                  */ 01042800
*/*                                                                  */ 01050000
*/*01*  FUNCTION =                                                   */ 01100000
*/*              This macro provides EXCP Storage Manager            */ 01150000
*/*              mappings, as follows:                               */ 01200000
*/*              1) Mapping of the Page Pool Header table data       */ 01250000
*/*              2) Mapping of the Storage Manager Page header       */ 01300000
*/*                 layout                                           */ 01350000
*/*              3) Mapping of the Storage Manager block             */ 01400000
*/*                 header layout for large and medium blocks.       */ 01450000
*/*              4) Mapping of the Storage Manager large             */ 01500000
*/*                 and medium blocks.                               */ 01550000
*/*                                                                  */ 01600000
*/*01*  DEPENDENCIES =                                               */ 01620000
*/*      - Changes to IECDSMGR (and IECVDATA) require identical      */ 01640000
*/*        changes to IOSDSMGR (and IOSVDATA) since IPCS formatters  */ 01660000
*/*        use one formatter for both IOS and EXCP blocks            */ 01680000
*/*                                                                  */ 01700000
*/*01*  RESTRICTIONS = None                                          */ 01750000
*/*                                                                  */ 01800000
*/*01*  MODULE TYPE  = Control block                                 */ 01850000
*/*                                                                  */ 01900000
*/*01*  PROCESSOR    = PL/X Compiler and Assembler                   */ 01905800
*/*                                                                  */ 01911600
*/*01*  METHOD OF ACCESS:                                            */ 01917400
*/*      Assembler: IECDSMGR                                         */ 01923200
*/*      PL/X:      %INCLUDE SYSLIB(IECDSMGR)                        */ 01929000
*/*                                                                  */ 01934800
*/*01*  CREATED BY:                                                  */ 01940600
*/*      - IECVDATA - SMGRPAGE                                       */ 01946400
*/*      - IECVEXSM - PAGEHDR, SMBLKHDR, LGXBLOCK, MEDBLOCK          */ 01952200
*/*                                                                  */ 01958000
*/*01*  POINTED TO BY:  N/A                                          */ 01963800
*/*                                                                  */ 01969600
*/*01*  SERIALIZATION:  N/A                                          */ 01975400
*/*                                                                  */ 01981200
*/*01*  EXTERNAL CLASSIFICATION: None                                */ 01987000
*/*     END OF EXTERNAL CLASSIFICATION:                              */ 01992800
*/*                                                                  */ 02000000
*/*01*  CHANGE ACTIVITY =                                            */ 02050000
*/*                                                                  */ 02100000
*/* $MAC(IECDSMGR),COMP(SC1C6): EXCP storage manager mappings        */ 02150000
*/*                                                                  */ 02200000
*/* $L0=CONSREL  HBB3310 861229 PDLC: Separate EXCP storage manager  */ 02250000
*/*                                   function from IOS              */ 02300000
*/* $L1=WLMIOP   HBB6603 951018 PDNO: WLM Support.  Increase size of */ 02333300
*/*                                   SMGR and PAGE to be consistent */ 02366600
*/*                                   with IOSDSMGR.  Note: Entire   */ 02399900
*/*                                   prolog made SHOWHDR            */ 02433200
*/*                                   compliant                  @L1A*/ 02466500
*/* $L2=IOSCT    HBB6603 960304 PDMC: IOS Ctrace                 @L2A*/ 02483200
*/*                                                                  */ 02485600
*/* $P0=PQC2036  HBB6603 960804 PDNO: Change CTRACE constants defined*/ 02488000
*/*                                   hex constants to decimal       */ 02491000
*/*                                   constants so that PLS modules  */ 02494000
*/*                                   do not get compiler errors @P0A*/ 02497000
*/*                                                                  */ 02500000
*/* END OF SPECIFICATIONS ********************************************/ 02550000
*%GOTO   SMGRPLS2;   /*                                                 02650000
         SPACE 1                                                        02700000
*********************************************************************** 02750000
* Storage Manager Pool header data and free queue Layout.             * 02800000
*                                                                     * 02850000
*  The pool header data table contains all the data necessary to      * 02900000
*  build and maintain an EXCP storage manager control block.          * 02950000
*                                                                     * 03000000
*  The EXCP Storage Manager Page Pool Header tables are contained     * 03016600
*  in IECVDATA in the following order:                                * 03033200
*                                                                     * 03050000
*    - IECVSHDR - RQE page pool header table                          * 03100000
*    - IECVLHDR - EXCP large block page pool header table             * 03150000
*                                                                     * 03300000
*  A pointer in the IOCOM (IOCEXDHR) points to the EXCP tables.       * 03316600
*                                                                     * 03333200
*********************************************************************** 03350000
SMGRPAGE DSECT                                                          03400000
*                       Displacement within macro -----                 03450000
*                       *********************************************** 03500000
SMBLKID  DS    CL4        0 - Four character block identifier           03550000
SMPGID   DS    CL16       4- The 16 character page identifier.          03600000
SMPGESZE DS    A         14 - Size of page in bytes.                    03650000
SMPGFLG1 DS    X         18 - Flags                                     03700000
SMLOCANY EQU   X'80'          - when issuing a GETMAIN, use the         03750000
*                               LOC= ANY option.                        03800000
SMCTACT  EQU   X'40'          - Storage Manager component trace         03816600
*                               is active.                        @L2A  03833200
SMPGFLG2 DS    X         19 - Flags- reserved                           03850000
SMPGPOOL DS    H         1A - Subpool number.                           03900000
SMSYNCA  DS    A         1C - Pointer to the IOSYNCH lock word in       03950000
*                             IOSVDATA that is to be used when          04000000
*                             scanning the page chain. If zero,         04050000
*                             IOSYNCH lock not used.                    04100000
SMBLKCNT DS    H         20 - Total number of blocks on page.           04150000
SMTBLKLN DS    H         22 - Length of the Storage Manager block and   04200000
*                             Storage Manager Block header area.        04250000
SMBLKLEN DS    H         24 - Length of the Storage Manager block.      04300000
SMPOFSET DS    H         26 - Length of the page header (offset to the  04350000
*                             1st block on page).                       04400000
SMPTOLE  DS    H         28 - Minimum number of pages always resident   04450000
*                             (Number of pages initialized at NIP time) 04500000
SMLINKOF DS    H         2A - Offset in block of the block chain        04550000
*                             LINK pointer.                             04600000
SMHDROF  DS    H         2C - Offset in block to the storage manager    04650000
*                             header block.                             04700000
SMBIDOF  DS    H         2E - Offset in block to the block identifier.  04750000
*                 ***************************************************** 04800000
SMPGEINC DS    A         30 - Free queue synch and free count, used to  04850000
*                             add a new page of blocks to free chain.   04900000
SMALLOCW DS    0F        34 - Block allocation word indicator           04950000
SMALASID DS    H              34- ASID field                            05000000
SMALUNSD DS    X              36- Unused                                05050000
SMALLOCB DS    X              37- Allocation field                      05100000
SMFREEW  DS    0F        38 - Block Free word indicator                 05150000
SMFRASID DS    H              38- ASID field                            05200000
SMFRUNSD DS    X              3A- Unused                                05250000
SMFREEB  DS    X              3B- Allocation field                      05300000
SMTHRESH DS    A         3C - Threshold  for page expansion             05350000
SMPHDATA DS    A         40 - Pointer to Pool header static data        05400000
*                 ***************************************************** 05450000
SMCMPHDR DS    A         44 - Compress- page pointer save area.         05500000
SMRCMPCT DS    H         48 - Compress- count of routine calls.         05550000
SMPFMCNT DS    H         4A - Compress- number pages returned.          05600000
SMCMNPGE DS    H         4C - Compress- minimum number pages/compress   05650000
SMCMNBLK DS    H         4E - compress- minimum number blocks/compress  05700000
*                 ***************************************************** 05750000
SMNOPGS  DS    A         50 - Count of pages in use.                    05800000
SM1STPGE DS    A         54 - Pointer to the 1st page in page chain or  05850000
*                             zero (Not used or zeroed by FRR)          05900000
*                 ***************************************************** 05950000
SMFQHEAD DS    0D             Start of Free Queue area                  06000000
SMFQSYNC DS    A         58 - Free queue synchronization count          06050000
SMFQ1BLK DS    A         5C - Free queue pointer to the 1st block in    06100000
*                             free chain or zero.                       06150000
SMFQBSVE DS    A         60 - Free queue build routine caller's         06200000
*                             return address.                           06250000
SMPTLSVE DS    H         64 - Save area for page obtain loop count      06300000
SMFQFCNT DS    H         66 - Last free queue build block count         06350000
SMRESVD2 DS    CL04      68 - Reserved                                  06400000
SMRESVD3 DS    CL04      6C - Reserved                                  06450000
         DS    CL4       70 - Reserved for future block dependent       06454100
*                             extension ID                        @L1A  06458200
         DS    CL16      74 - Reserved for future block dependent       06462300
*                             extension page ID                   @L1A  06466400
         DS    H         84 - Reserved for future block dependent       06470500
*                             extension block length              @L1A  06474600
         DS    H         86 - Reserved for future block dependent       06478700
*                             extension subpool number            @L1A  06482800
         DS    H         88 - Reserved for future block dependent       06486900
*                             extension page size                 @L1A  06491000
SMRESVD4 DS    XL6       8A - Reserved                            @L1A  06495100
         SPACE 1                                                        06500000
SMLENGTH EQU   *-SMGRPAGE     Length of SMGRPAGE mapping.               06550000
         SPACE  3                                                       06600000
*********************************************************************** 06650000
*  Storage Manager Page Header layout.                                * 06700000
*                                                                     * 06750000
*  This DSECT maps the page header area of each page obtained         * 06800000
*  for providing the EXCP storage manager control blocks.             * 06850000
*********************************************************************** 06900000
PAGEHDR  DSECT                     Page Header layout----------------   06950000
PGHDRCNT DS    CL4                  0 - Number of blocks on page        07000000
PGHDBLKP DS    CL4                  4 - Pointer to 1st block on page    07050000
PGHDFLG1 DS    X                    8 - Page header flag byte 1         07100000
PGHDINIT EQU   X'80'                    .. Initial IPL page             07150000
PGHDLINT EQU   X'40'                    .. Last Initial page            07200000
PGHDFLG2 DS    X                    9 - Page header flag byte 2         07250000
PGHDMCNT DS    H                    A - Maximum number of blocks        07300000
*                                       contained on page               07350000
PGHDCHN  DS    CL4                  C - Pointer to the next page in     07400000
*                                       chain or zero for last in chain 07450000
PGHDID   DS    CL16                10 - 16 character page identifier    07500000
PGHDWKAR DS    CL4                 20 - Page header work word     @L1C  07520000
         DS    A                   24 - Reserved for future block       07540000
*                                       dependent extension page        07560000
*                                       pointer                   @L1A  07580000
PGHDLNTH EQU   *-PAGEHDR                Length of the page header area  07600000
         SPACE  3                                                       07650000
*********************************************************************** 07700000
*  Storage Manager Block Header Layouts                               * 07750000
*                                                                     * 07800000
*  The following DSECT describes the 8 byte block header that is      * 07850000
*  associated with each large and medium blocks.                      * 07900000
*                                                                     * 07950000
*  These block headers are for EXCP Storage Manager use only.         * 08000000
*********************************************************************** 08050000
SMBLKHDR DSECT                     Storage Manager block header layout  08100000
SMBHASID DS    H                    0  - ASID field                     08150000
SMBHUNSD DS    X                    2  - Unused                         08200000
SMBHFLAG DS    X                    3  - Status byte - Free/Allocated   08250000
ALLOCMED EQU   X'75'                    .Medium allocation indicator    08300000
ALLOCLGE EQU   X'76'                    .Large  allocation indicator    08350000
FREELGE  EQU   X'17'                    .Large  Free indicator          08400000
FREEMED  EQU   X'17'                    .Medium Free indicator          08450000
CHNDLGE  EQU   X'18'                    .Large  chained indicator       08500000
CHNDMED  EQU   X'18'                    .Medium chained indicator       08550000
SMBHPAGE DS    F                    4  - Block Page pointer             08600000
         EJECT                                                          08650000
         SPACE 3                                                        08700000
*********************************************************************** 08750000
*  Storage Manager EXCP Large block layout including the              * 08800000
*  Storage Manager header area.                                       * 08850000
*********************************************************************** 08900000
LGXBLOCK DSECT                     EXCP large block layout-----------   08950000
LGXBLINK DS    0F                  Large block caller chain pointer     09000000
         DS    CL(240)             Large block length                   09050000
LGXBLKID DS    CL4                 Large block identifier word          09100000
LGXBLKFC DS    CL4                 Large block SM free chain pointer    09150000
LGXBHDR  DS    0CL8                Large block storage manager header   09200000
LGXHASID DS    H                   Large block ASID field               09250000
LGXHUNSD DS    X                   Unused byte                          09300000
LGXHFLAG DS    X                   Large block Status byte              09350000
LGXHPAGE DS    F                   Large block Page pointer             09400000
         SPACE 3                                                        09450000
*********************************************************************** 09500000
*  Storage Manager EXCP RQE (medium) block layout including the       * 09550000
*  Storage Manager header area.                                       * 09600000
*********************************************************************** 09650000
MEDBLOCK DSECT                     EXCP RQE (medium) block layout-----  09700000
MEDBLINK DS    0F                    RQE block caller chain pointer     09750000
         DS    CL(48)                RQE block length                   09800000
MEDBLKID DS    CL4                   RQE block identifier word          09850000
MEDBLKFC DS    CL4                   RQE block SM free chain pointer    09900000
MEDBHDR  DS    0CL8                  RQE block storage manager header   09950000
MEDHASID DS    H                     RQE block ASID field               10000000
MEDHUNSD DS    X                         unused byte                    10050000
MEDHFLAG DS    X                     RQE block Status byte              10100000
MEDHPAGE DS    F                     RQE block Page pointer             10150000
*   Component Trace entry requestors                               @L2A 10151600
SMGICTGB EQU   X'00000101'         IOS Storage Manager Get Block        10153200
*                                  trace entry                     @L2A 10154800
SMGICTFB EQU   X'00000102'         IOS Storage Manager Free Block       10156400
*                                  trace entry                     @L2A 10158000
SMGICTGP EQU   X'00000103'         IOS Storage Manager Get Page         10159600
*                                  trace entry                     @L2A 10161200
SMGICTFP EQU   X'00000104'         IOS Storage Manager Free Page        10162800
*                                  trace entry                     @L2A 10164400
SMGICTPB EQU   X'00000105'         IOS Storage Manager Purge Blocks     10166000
*                                  trace entry                     @L2A 10167600
SMGECTGB EQU   X'00000201'         EXCP Common Storage Manager Get      10169200
*                                  Block trace entry               @L2A 10170800
SMGECTFB EQU   X'00000202'         EXCP Common Storage Manager Free     10172400
*                                  Block trace entry               @L2A 10174000
SMGECTGP EQU   X'00000203'         EXCP Common Storage Manager Get      10175600
*                                  Page trace entry                @L2A 10177200
SMGECTFP EQU   X'00000204'         EXCP Common Storage Manager Free     10178800
*                                  Page trace entry                @L2A 10180400
SMGECTPB EQU   X'00000205'         EXCP Storage Manager Purge Blocks    10182000
*                                  trace entry                     @L2A 10183600
SMGPCTGB EQU   X'00000301'         EXCP Private Storage Manager Get     10185200
*                                  Block trace entry               @L2A 10186800
SMGPCTFB EQU   X'00000302'         EXCP Private Storage Manager Free    10188400
*                                  Block trace entry               @L2A 10190000
SMGPCTGP EQU   X'00000303'         EXCP Private Storage Manager Get     10191600
*                                  Page trace entry                @L2A 10193200
SMGPCTFP EQU   X'00000304'         EXCP Private Storage Manager Free    10194800
*                                  Page trace entry                @L2A 10196400
         MEND ,                                                      */ 10200000
*%SMGRPLS2: ;                                                           10250000
*/*******************************************************************/  10300000
*/*   Storage Manager Pool Header data and Free queue Layout         */ 10350000
*/*                                                                  */ 10400000
*/*   The pool header data table contains all the data necessary to  */ 10450000
*/*   build and maintain an EXCP storage manager control block.      */ 10500000
*/*                                                                  */ 10550000
*/*   The EXCP Storage Manager Page Pool Header tables are contained */ 10600000
*/*   in IECVDATA in the following order:                            */ 10650000
*/*                                                                  */ 10750000
*/*     - IECVSHDR - RQE page pool header table                      */ 10758300
*/*     - IECVLHDR - EXCP large block page pool header table         */ 10766600
*/*                                                                  */ 10774900
*/*   A pointer in the IOCOM (IOCEXDHR) points to the EXCP tables.   */ 10783200
*/*                                                                  */ 10791500
*/*******************************************************************/  10800000
* DCL 1 SMGRPAGE        BASED  , /* Storage Manager Page Header         10850000
*                                   data and Free queue area         */ 10900000
*       2 SMGRPHDR             , /* Pool Header data........         */ 10950000
*          4 SMBLKID   CHAR(04), /* Block identifer                  */ 11000000
*          4 SMPGID    CHAR(16), /* The 16 character page identifier */ 11050000
*          4 SMPGESZE   PTR(31), /* Page size in bytes               */ 11100000
*          4 SMPGFLG1   BIT(08), /* Flags                            */ 11150000
*           6 SMLOCANY  BIT(01), /* - When issuing the GETMAIN, use     11200000
*                                     the LOC=ANY option             */ 11250000
*           6 SMCTACT   BIT(01), /* - Storage Manager component trace   11266600
*                                     is active                  @L2A*/ 11283200
*          4 SMPGFLG2   BIT(08), /* Flags                            */ 11300000
*          4 SMPGPOOL FIXED(16), /* Subpool number                   */ 11350000
*          4 SMSYNCA    PTR(31), /* Pointer to the IOSYNCH lock word    11400000
*                                   in IOSVDATA that is to be used      11450000
*                                   when scanning the page chain     */ 11500000
*          4 SMBLKCNT   PTR(15), /* Total number of blocks on page   */ 11550000
*          4 SMTBLKLN   PTR(15), /* Length of storage manager block     11600000
*                                   and storage manager block header */ 11650000
*          4 SMBLKLEN   PTR(15), /* Length of the storage manager       11700000
*                                   block                            */ 11750000
*          4 SMPOFSET   PTR(15), /* Length of the page header (offset   11800000
*                                   to the 1st block on page)        */ 11850000
*          4 SMPTOLE    PTR(15), /* Minimum number of pages always      11900000
*                                   resident (number of pages           11950000
*                                   initialized at NIP time)         */ 12000000
*          4 SMLINKOF   PTR(15), /* Offset in block to the block        12050000
*                                   LINK chain pointer.              */ 12100000
*          4 SMHDROF    PTR(15), /* Offset in block to the storage      12150000
*                                   manager header area.             */ 12200000
*          4 SMBIDOF    PTR(15), /* Offset in block to the block        12250000
*                                   identifier word.                 */ 12300000
*          4 SMPGEINC   PTR(32), /* Free queue synch and free count,    12350000
*                                   used to add a new page of blocks    12400000
*                                   to the free chain                */ 12450000
*          4 SMALLOCW  CHAR(04), /* Block allocation word indicator  */ 12500000
*          4 SMFREEW   CHAR(04), /* Block free word indicator        */ 12550000
*          4 SMTHRESH  CHAR(04), /* Threshold for pool expansion     */ 12600000
*          4 SMPHDATA   PTR(31), /* Pointer to the Pool header static   12650000
*                                   data (first 20 hex bytes)        */ 12700000
*          4 SMCMPHDR   PTR(31), /* Compress- page pointer save area */ 12750000
*          4 SMRCMPCT  CHAR(02), /* Compress- Routine calls count    */ 12800000
*          4 SMPFMCNT  CHAR(02), /* Compress- number pages returned  */ 12850000
*          4 SMCMNPGE  CHAR(02), /* compress- minimum number of pages   12900000
*                                   required  to invoke compress     */ 12950000
*          4 SMCMNBLK  CHAR(02), /* Compress- minimum number of blocks  13000000
*                                   required to invoke compress      */ 13050000
*          4 SMNOPGS  FIXED(31), /* Count of pages in use            */ 13100000
*          4 SM1STPGE   PTR(31), /* Pointer to the first page in page   13150000
*                                   chain or zero (Not used or zeroed   13200000
*                                   by FRR)                          */ 13250000
*       2 SMFQHEAD             , /* Free Queue header - Must begin on   13300000
*                                   a double word boundary for CDS   */ 13350000
*          4 SMFQSYNC   PTR(32), /* Free Queue synchronization count */ 13400000
*          4 SMFQ1BLK   PTR(31), /* Free Queue pointer to the 1st       13450000
*                                   block in free chain or zero      */ 13500000
*          4 SMFQBSVE   PTR(31), /* Free Queue Build routine            13550000
*                                   caller's return address          */ 13600000
*          4 SMPTLSVE   PTR(15), /* Save area for page obtain loop      13650000
*                                   count                            */ 13700000
*          4 SMFQFCNT   PTR(15), /* Last free queue build free count */ 13750000
*          4 SMRESVD2  CHAR(04), /* Reserved                         */ 13800000
*          4 SMRESVD3  CHAR(04), /* Reserved                     @L1C*/ 13808800
*          4 *         CHAR(04), /* Reserved for future block           13817600
*                                   dependent extension ID       @L1A*/ 13826400
*          4 *         CHAR(16), /* Reserved for future block           13835200
*                                   dependent extension page ID  @L1A*/ 13844000
*          4 *         FIXED(15),/* Reserved for future block           13852800
*                                   dependent extension block           13861600
*                                   length                       @L1A*/ 13870400
*          4 *         FIXED(15),/* Reserved for future block           13879200
*                                   dependent extension subpool         13888000
*                                   number                       @L1A*/ 13896800
*          4 *         FIXED(15),/* Reserved for future block           13905600
*                                   dependent extension page            13914400
*                                   size                         @L1A*/ 13923200
*          4 SMRESVD4  CHAR(06); /* Reserved                     @L1A*/ 13932000
*/********************************************************************/ 13940800
*/*   Storage Manager Page header layout                             */ 13950000
*/*                                                                  */ 14000000
*/*   This DSECT maps the page header area of each page obtained     */ 14050000
*/*   for providing the EXCP storage manager control blocks.         */ 14100000
*/*******************************************************************/  14150000
* DECLARE                                                               14200000
*   1 PAGEHDR  BDY(WORD) BASED,   /* Page Header layout------------- */ 14250000
*    2 PGHDRCNT  CHAR(04)      ,  /* Count of blocks on page         */ 14300000
*    2 PGHDBLKP   PTR(31)      ,  /* Pointer to the 1st block on page*/ 14350000
*    2 PGHDFLG1   BIT(08)      ,  /* Page header flag byte 1         */ 14400000
*      4 PGHDINIT BIT(01)      ,  /* Initial (IPL) page              */ 14450000
*      4 PGHDLINT BIT(01)      ,  /* Last Initial page               */ 14500000
*    2 PGHDFLG2   BIT(08)      ,  /* Page header flag byte 2         */ 14550000
*    2 PGHDMCNT  CHAR(02)      ,  /* Maximum count of blocks on page */ 14600000
*    2 PGHDCHN    PTR(31)      ,  /* Pointer to next page in chain or   14650000
*                                    zero for last in chain          */ 14700000
*    2 PGHDID    CHAR(16)      ,  /* Page header identifier          */ 14750000
*    2 PGHDWKAR  CHAR(04)      ,  /* Page header work area word  @L1C*/ 14783300
*    2 *         PTR(31)       ;  /* Reserved for future block          14816600
*                                    dependent extension page           14849900
*                                    pointer                     @L1A*/ 14883200
*/********************************************************************/ 14916500
*/* Storage Manager Block Header Layouts                             */ 14950000
*/*                                                                  */ 15000000
*/* The following DSECT describes the 8 byte block header that is    */ 15050000
*/* associated with each Large and medium block.                     */ 15100000
*/*                                                                  */ 15150000
*/* These block headers are for EXCP Storage Manager use only.       */ 15200000
*/*******************************************************************/  15250000
* DECLARE                                                               15300000
*   1 SMBLKHDR BDY(WORD) BASED ,  /* Storage Manager Block Header    */ 15350000
*    2 SMBHASID  CHAR(02)      ,  /*  - ASID field                   */ 15400000
*    2 SMBHUNSD  CHAR(01)      ,  /*  - Unused                       */ 15450000
*    2 SMBHFLAG  CHAR(01)      ,  /*  - Status byte - Free/Allocated */ 15500000
*    2 SMBHPAGE  CHAR(04)      ;  /*  - Block page pointer           */ 15550000
*/*******************************************************************/  15600000
*/*   Storage Manager EXCP Large block layout including the          */ 15650000
*/*   Storage Manager header area.                                   */ 15700000
*/*******************************************************************/  15750000
* DECLARE                                                               15800000
*   1 LGXBLOCK BDY(WORD) BASED ,  /* EXCP large block layout-------- */ 15850000
*    2 *       BDY(WORD) CHAR(240),  /*EXCP large block length       */ 15900000
*     4 LGXBLINK  PTR(31)      ,  /* EXCP large block caller chain      15950000
*                                      pointer                       */ 16000000
*    2 LGXBLKID  CHAR(04)      ,  /*EXCP large block identifier word */ 16050000
*    2 LGXBLKFC   PTR(31)      ,  /*EXCP large block SM free chain pt*/ 16100000
*    2 LGXBHDR   CHAR(08)      ,  /*EXCP large block storage manager    16150000
*                                    header area.                    */ 16200000
*     4 LGXBASID CHAR(02)      ,  /*EXCP large block ASID field      */ 16250000
*     4 LGXBUNSD CHAR(01)      ,  /* Unused byte                     */ 16300000
*     4 LGXHFLAG CHAR(01)      ,  /* Large block Status byte         */ 16350000
*     4 LGXHPAGE CHAR(04)      ;  /* Large block Page pointer        */ 16400000
*/*******************************************************************/  16450000
*/*   Storage Manager EXCP RQE (Medium) block layout including the   */ 16500000
*/*   Storage Manager header area.                                   */ 16550000
*/*******************************************************************/  16600000
* DECLARE                                                               16650000
*   1 MEDBLOCK BDY(WORD) BASED ,  /* EXCP RQE block layout--------   */ 16700000
*    2 *       BDY(WORD) CHAR(48), /* EXCP RQE block length          */ 16750000
*     4 MEDBLINK  PTR(31)      ,  /* EXCP RQE block caller chain        16800000
*                                      pointer                       */ 16850000
*    2 MEDBLKID  CHAR(04)      ,  /* EXCP RQE block identifier word  */ 16900000
*    2 MEDBLKFC   PTR(31)      ,  /* EXCP RQE block SM free chain pt */ 16950000
*    2 MEDBHDR   CHAR(08)      ,  /* EXCP RQE block storage manager     17000000
*                                    header area.                    */ 17050000
*     4 MEDBASID CHAR(02)      ,  /* EXCP RQE block ASID field       */ 17100000
*     4 MEDBUNSD CHAR(01)      ,  /* Unused byte                     */ 17150000
*     4 MEDHFLAG CHAR(01)      ,  /* EXCP RQE block Status byte      */ 17200000
*     4 MEDHPAGE CHAR(04)      ;  /* EXCP RQE block Page pointer     */ 17250000
*/*   Status byte constants                                          */ 17300000
*    DCL ALLOCMED BIT(8) CONSTANT('75'X);/* Medium allocation Ind    */ 17350000
*    DCL ALLOCLGE BIT(8) CONSTANT('76'X);/* Large  allocation Ind    */ 17400000
*    DCL FREEMED  BIT(8) CONSTANT('17'X);/* Medium Free Indicator    */ 17450000
*    DCL FREELGE  BIT(8) CONSTANT('17'X);/* Large  Free Indicator    */ 17500000
*    DCL CHNDMED  BIT(8) CONSTANT('18'X);/* Medium chained indicator */ 17550000
*    DCL CHNDLGE  BIT(8) CONSTANT('18'X);/* Large  chained indicator */ 17600000
*/*   Component Trace entry requestors                           @L2A*/ 17650000
*    DCL SMGICTGB FIXED(31) CONSTANT(257); /* '00000101'X IOS Storage   17700000
*                                           Manager Get Block trace     17750000
*                                           entry                @P0C*/ 17800000
*    DCL SMGICTFB FIXED(31) CONSTANT(258); /* '00000102'X IOS Storage   17850000
*                                           Manager Free Block trace    17900000
*                                           entry                @P0C*/ 17950000
*    DCL SMGICTGP FIXED(31) CONSTANT(259); /* '00000103'X IOS Storage   18000000
*                                           Manager Get Page trace      18050000
*                                           entry                @P0C*/ 18100000
*    DCL SMGICTFP FIXED(31) CONSTANT(260); /* '00000104'X IOS Storage   18150000
*                                           Manager Free Page trace     18200000
*                                           entry                @P0C*/ 18250000
*    DCL SMGICTPB FIXED(31) CONSTANT(261); /* '00000105'X IOS Storage   18300000
*                                           Manager Purge Blocks        18350000
*                                           trace entry          @P0C*/ 18400000
*    DCL SMGECTGB FIXED(31) CONSTANT(513); /* '00000201'X EXCP Common   18450000
*                                           Storage Manager Get         18500000
*                                           Block trace entry    @P0C*/ 18550000
*    DCL SMGECTFB FIXED(31) CONSTANT(514); /* '00000202'X EXCP Common   18600000
*                                           Storage Manager Free        18650000
*                                           Block trace entry    @P0C*/ 18700000
*    DCL SMGECTGP FIXED(31) CONSTANT(515); /* '00000203'X EXCP Common   18750000
*                                           Storage Manager Get         18800000
*                                           Page trace entry     @P0C*/ 18850000
*    DCL SMGECTFP FIXED(31) CONSTANT(516); /* '00000204'X EXCP Common   18900000
*                                           Storage Manager Free        18950000
*                                           Page trace entry     @P0C*/ 19000000
*    DCL SMGECTPB FIXED(31) CONSTANT(517); /* '00000205'X EXCP Common   19050000
*                                           Manager Purge Blocks        19100000
*                                           trace entry          @P0C*/ 19150000
*    DCL SMGPCTGB FIXED(31) CONSTANT(769); /* '00000301'X EXCP Private  19200000
*                                           Storage Manager Get         19250000
*                                           Block trace entry    @P0C*/ 19300000
*    DCL SMGPCTFB FIXED(31) CONSTANT(770); /* '00000302'X EXCP Private  19350000
*                                           Storage Manager Free        19400000
*                                           Block trace entry    @P0C*/ 19450000
*    DCL SMGPCTGP FIXED(31) CONSTANT(771); /* '00000303'X EXCP Private  19500000
*                                           Storage Manager Get         19550000
*                                           Page trace entry     @P0C*/ 19600000
*    DCL SMGPCTFP FIXED(31) CONSTANT(772); /* '00000304'X EXCP Private  19650000
*                                           Storage Manager Free        19700000
*                                           Page trace entry     @P0C*/ 19750000
