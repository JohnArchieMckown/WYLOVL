* % GOTO VKEYSPRO;   /*                                          @H1A   00050000
         MACRO                                                          00300019
         IEFVKEYS ,                                                     00331000
.*/ %VKEYSPRO: ;     /*                                          @H1A*/ 00362000
*/**** START OF SPECIFICATIONS ***************************************/ 00377500
*/*                                                                  */ 00393000
*/*    MACRO NAME = IEFVKEYS                                         */ 00408500
*/*                                                                  */ 00424000
*/*     ACRONYM = VKEYS                                              */ 00439500
*/*                                                                  */ 00455000
*/*    DESCRIPTIVE NAME = TABLE OF CONVERTER/INTERPRETER KEYS    @H1C*/ 00486000
*/*                                                                  */ 00517000
*/*    PROPRIETARY STATEMENT =                                       */ 00531700
*/*              5695-047                                            */ 00546400
*/*              THIS MACRO IS "RESTRICTED MATERIALS OF IBM"         */ 00561200
*/*              (C) COPYRIGHT IBM CORP. 1982, 1990                  */ 00583300
*/*              LICENSED MATERIALS - PROPERTY OF IBM                */ 00627600
*/*                                                                  */ 00672000
*/*    STATUS = HBB4430                                          @L2C*/ 00703000
*/*                                                                  */ 00734000
*/*    FUNCTION = This macro provides constants for the key          */ 00749500
*/*               values found in the Converter Interpreter          */ 00765000
*/*               (C/I) Text string.                                 */ 00780500
*/*                                                                  */ 00796000
*/*    NOTES =                                                       */ 00800400
*/*        - Bilingual mapping macro (PL/AS and BAL)                 */ 00804800
*/*        - C/I Text is a PSI (Product Sensitive Interface)         */ 00809200
*/*        - C/I Text is presented through the JES C/I Text Exit     */ 00813600
*/*                                                                  */ 00818000
*/*      DEPENDENCIES =  NONE                                        */ 00822400
*/*                                                                  */ 00826800
*/*      RESTRICTIONS =  NONE                                        */ 00831200
*/*                                                                  */ 00835600
*/*                                                                  */ 00840000
*/**** INVOCATION ****************************************************/ 00844400
*/*                                                                  */ 00848800
*/*    METHOD OF ACCESS =                                            */ 00853200
*/*                                                                  */ 00858000
*/*           PL/S - %INCLUDE SYSLIB(IEFVKEYS)                   @H1A*/ 00889000
*/*                                                                  */ 00920000
*/*                                                                  */ 01013000
*/*    PARAMETER DESCRIPTION =  NONE                                 */ 01059500
*/*                                                                  */ 01106000
*/*                                                                  */ 01106100
*/*    PARAMETER INTERDEPENDENCIES = N/A                             */ 01106200
*/*                                                                  */ 01106300
*/*------------------------------------------------------------------*/ 01106400
*/*                                                                  */ 01106500
*/*      BAL INVOCATION = Simple Invocation                          */ 01106600
*/*                       No DSECT required or Generated         @H1A*/ 01106700
*/*                                                                  */ 01106800
*/*                                                                  */ 01106900
*/*  IEFVKEYS            Should start in column 10                   */ 01107000
*/*                                                                  */ 01107100
*/********************************************************************/ 01107200
*/*                                                                  */ 01107300
*/*    DSECT NAME = None                                             */ 01107400
*/*                                                                  */ 01107500
*/*    COMPONENT = (SC1B9) MVS Converter                             */ 01107600
*/*                                                                  */ 01107700
*/*    EYE-CATCHER = None                                            */ 01107800
*/*                                                                  */ 01107900
*/*    CREATED BY = N/A                                              */ 01108000
*/*                                                                  */ 01108100
*/*    POINTED TO BY = N/A                                           */ 01108200
*/*                                                                  */ 01108300
*/*    DELETED BY = N/A                                              */ 01108400
*/*                                                                  */ 01108500
*/*    SERIALIZATION = None                                          */ 01108600
*/*                                                                  */ 01108700
*/*    STORAGE ATTRIBUTES =                                          */ 01108800
*/*                                                                  */ 01108900
*/*      ALLOCATION METHOD = Data only                               */ 01109000
*/*      SUBPOOL           = N/A                                     */ 01109100
*/*      KEY               = N/A                                     */ 01109200
*/*      RESIDENCY         = N/A                                     */ 01109300
*/*      SIZE              = N/A                                     */ 01109400
*/*                                                                  */ 01109500
*/*    DISTRIBUTION LIBRARY = AMODGEN                                */ 01109600
*/*                                                                  */ 01109700
*/*  CHANGE LEVEL = Y02668,G16APPK,0Z28955,H1,D1,L1,01,02,L2     @L2C*/ 01109800
*/*                                                                  */ 01109900
*/*  ID= ITEM    RELEASE YYMMDD PDNN:  FULL ITEM NAME                */ 01110000
*/*  -- -------- ------- ------ ----: -----------------------        */ 01110100
*/* $H1= EXTJCL  JBB2110 820702 PD2R: EXTENDED JCL SUPPORT       @H1A*/ 01113700
*/* $02= OY47882 JBB2220 910725 PDE1: INTERPRETER COMPATIBILITY  @02A*/ 01117500
*/* $D1= DCR0008 JBB2223 860929 PDB1: STOR MGMT SUBSYS STG2 SUPT @D1A*/ 01121400
*/* $L1= EMVS2   HBB4410 881031 PDM9: ENTERPRISE/MVS II          @L1A*/ 01125200
*/* $01= OY40107 HBB4410 910308 PDBN: MINOR KEYWORD OVERRIDE     @01A*/ 01127100
*/* $L2= PR430   HBB4430 920205 PDN3: Serviceability             @L2A*/ 01128100
*/*                                                                  */ 01129100
*/**** END OF SPECIFICATIONS *****************************************/ 01137900
*/* A - Prologue                                                 @H1A*/ 01146700
*/* C - RESERVED KEYS X'18' AND X'19' TO DD * AND DD DATA        @D1A*/ 01155600
*/* C - CHANGED KEY X'17' TO OVERRIDE FORM OF SJF KEYWORD        @L1A*/ 01156300
*/* C - CHANGED KEY X'7A' TO NAME ON EXEC STMT THAT INVOKES A    @L1A*/ 01157000
*/*     PROCEDURE                                                @L1A*/ 01157700
*/* C - CHANGED KEY X'A2' TO JCL VERSION NUMBER                  @L1A*/ 01158000
*/* C - CHANGED KEY X'BF' TO IF STMT VERB                        @L1A*/ 01158400
*/* C - CHANGED KEY X'C0' TO ELSE STMT VERB                      @L1A*/ 01159100
*/* C - CHANGED KEY X'C1' TO ENDIF STMT VERB                     @L1A*/ 01159800
*/* C - ADDED NEW KEYS FOR IF-EXPRESSION                         @L1A*/ 01160500
*/* C - RESERVED KEYS X'15' AND X'16' CHANGED TO EXPDT AND RETPD     */ 01160900
*/*     MAJOR KEYWORD KEYS (INTERNAL USE)                        @01A*/ 01161300
*/* C - Reserved key X'79' to indicate COND= in CI text obtained     */ 01161700
*/*     from COND. override.  This APAR is the Interpreter portion   */ 01162100
*/*     of OY44622.                                              @02A*/ 01162500
*/* C - Prologue to comply with SHOWHDR                          @L2A*/ 01162900
*/* ---------------------------------------------------------------- */ 01166100
*  %GOTO VKEYSPLS;           /*                                  @H1A   01168000
*                            VERB    KEYWORD                      19874 01200019
ETEND    EQU   X'00'   *     NONE    DICTIONARY END               19874 01500019
*        EQU   X'01'   *     DD      RESERVED                     19874 01800019
*        EQU   X'02'   *     DD      RESERVED                     19874 02100019
*        EQU   X'03'   *     DD      RESERVED                     19874 02400019
*        EQU   X'04'   *     DD      RESERVED                     19874 02700019
*        EQU   X'05'   *     DD      RESERVED                     19874 03000019
*        EQU   X'06'   *     DD      RESERVED                     19874 03300019
*        EQU   X'07'   *     DD      RESERVED                     19874 03600019
*        EQU   X'08'   *     DD      RESERVED                     19874 03900019
*        EQU   X'09'   *     DD      RESERVED                     19874 04200019
*        EQU   X'0A'   *     DD      RESERVED                     19874 04500019
*        EQU   X'0B'   *     DD      RESERVED                     19874 04800019
*        EQU   X'0C'   *     DD      RESERVED                     19874 05100019
*        EQU   X'0D'   *     DD      RESERVED                     19874 05400019
*        EQU   X'0E'   *     DD      RESERVED                     19874 05700019
*        EQU   X'0F'   *     DD      RESERVED                     19874 06000019
*        EQU   X'10'   *     DD      RESERVED                     19874 06300019
*        EQU   X'11'   *     DD      RESERVED                     19874 06600019
*        EQU   X'12'   *     DD      RESERVED                     19874 06900019
*        EQU   X'13'   *     DD      RESERVED                     19874 07200019
*        EQU   X'14'   *     DD      RESERVED                     19874 07500019
EXPDTK   EQU   X'15'   *     DD      EXPDT= MAJOR KEYWORD          @01C 07550000
*                                      INTERNAL KEY - USED IN      @01A 07600000
*                                      CONVERTER ONLY              @01A 07650000
RETPDK   EQU   X'16'   *     DD      RETPD= MAJOR KEYWORD          @01C 07700000
*                                      INTERNAL KEY - USED IN      @01A 07750000
*                                      CONVERTER ONLY              @01A 07800000
JDTOVRDK EQU   X'17'   *     DD      OVERRIDE FORM OF SJF KEYWORD  @L1A 08100000
SPLATK   EQU   X'18'   *     DD      * - INTERNAL KEY NOT USED IN      +08150000
                                     INTERNAL TEXT                 @D1C 08200000
DATAK    EQU   X'19'   *     DD      DATA - INTERNAL KEY NOT USED IN   +08250000
                                     INTERNAL TEXT                 @D1C 08300000
JDTKWDK  EQU   X'1A'   *     DD      JDT-DEFINED KEYWORD           @H1C 08750000
PROTECTK EQU   X'1B'   *     DD      PROTECT=                  @G32HPPJ 08800000
SUBSYSK  EQU   X'1C'   *     DD      SUBSYS=                   @G29AN2E 08850000
CHARSK   EQU   X'1D'   *     DD      CHARS=                    @Z40MPTH 08900000
MODIFYK  EQU   X'1E'   *     DD      MODIFY=                   @Z40MPTH 08950000
FLASHK   EQU   X'1F'   *     DD      FLASH=                    @Z40MPTH 09000000
BURSTK   EQU   X'20'   *     DD      BURST=                    @Z40MPTH 09050000
DSIDK    EQU   X'21'   *     DD      DSID=                     @Y30OPSB 09100000
MSVGPK   EQU   X'22'   *     DD      MSVGP=                    @Y30LPSB 09150000
HOLDK    EQU   X'23'   *     DD      HOLD=                       Y02668 09200000
SYSINCTK EQU   X'24'   *     DD      INTERNAL KEY- NUMBER SYSIN        +09250000
                                     RECORDS SPOOLED BY JES      Y02668 09300000
DESTK    EQU   X'25'   *     DD      DEST=                       Y02668 09350000
FRIDMK   EQU   X'26'   *     DD      FRID=                       Y02670 09400000
FREEK    EQU   X'27'   *     DD      FREE=                       Y02670 09450000
AMPK     EQU   X'28'   *     DD      AMP=                        Y01113 13200001
FUNCMK   EQU   X'29'   *     DD      FUNC=                        21088 13500001
DIAGNSK  EQU   X'2A'   *     DD      DIAGNS=                     I21042 13550001
DLMK     EQU   X'2B'   *     DD      DLM=                         21009 14100001
FCBK     EQU   X'2C'   *     DD      FCB=                         20202 14150001
TERMK    EQU   X'2D'   *     DD      TERM=                        20002 14700020
THRESHMK EQU   X'2E'   *     DD      THRESH=                      20001 15000020
RESERVMK EQU   X'2F'   *     DD      RESERVE=                     20002 15300020
PCIMK    EQU   X'30'   *     DD      PCI=                         20002 15600020
BUFMAXMK EQU   X'31'   *     DD      BUFMAX=                      20002 15900020
BUFOUTMK EQU   X'32'   *     DD      BUFOUT=                      20002 16200020
BUFINMK  EQU   X'33'   *     DD      BUFIN=                       20002 16500020
BUFSIZMK EQU   X'34'   *     DD      BUFSIZE=                     20002 16800020
DYNAK    EQU   X'35'   *     DD      DYNAM                        20002 17100020
QNAMEK   EQU   X'36'   *     DD      QNAME=                       20002 17400020
BUFOFFMK EQU   X'37'   *     DD      BUFOFF                       19200 17700020
OUTLIMK  EQU   X'38'   *     DD      OUTLIM                       19028 18000019
IPLTXIDK EQU   X'39'   *     DD      IPLTXID=                    Y01948 18300000
COPIESK  EQU   X'3A'   *     DD      COPIES=                     Y02668 18600000
GDSORGMK EQU   X'3B'   *     DD      GDSORG=                      19874 18900019
GNCPMK   EQU   X'3C'   *     DD      GNCP=                        19874 19200019
UCSK     EQU   X'3D'   *     DD      UCS=                         19874 19500019
DUMMK    EQU   X'3E'   *     DD      DUMMY                        19874 19800019
CHKPTK   EQU   X'3F'   *     DD      CHKPT=                    @Z30JPSF 20100000
DCBK     EQU   X'40'   *     DD      DCB=                         19874 20400019
UNITK    EQU   X'41'   *     DD      UNIT=                        19874 20700019
LABELK   EQU   X'42'   *     DD      LABEL=                       19874 21000019
VOLUMEK  EQU   X'43'   *     DD      VOLUME=                      19874 21300019
AFFK     EQU   X'44'   *     DD      AFF=                         19874 21600019
SEPK     EQU   X'45'   *     DD      SEP=                         19874 21900019
DISPK    EQU   X'46'   *     DD      DISP=                        19874 22200019
SPACEK   EQU   X'47'   *     DD      SPACE=                       19874 22500019
SPLITK   EQU   X'48'   *     DD      SPLIT=                       19874 22800019
DDNAMEK  EQU   X'49'   *     DD      DDNAME=                      19874 23100019
DSNAMEK  EQU   X'4A'   *     DD      DSNAME=                      19874 23400019
SYSOUTK  EQU   X'4B'   *     DD      SYSOUT=                      19874 23700019
SUBALLOK EQU   X'4C'   *     DD      SUBALLOC=                    19874 24000019
AFFMK    EQU   X'4D'   *     DD      AFF=        MINOR            19874 24300019
SEPMK    EQU   X'4E'   *     DD      SEP=        MINOR            19874 24600019
SERMK    EQU   X'4F'   *     DD      SER=                         19874 24900019
REFMK    EQU   X'50'   *     DD      REF=                         19874 25200019
EXPDTMK  EQU   X'51'   *     DD      EXPDT= MINOR KEYWORD         19874 25500000
RETPDMK  EQU   X'52'   *     DD      RETPD= MINOR KEYWORD         19874 25800000
BFALNMK  EQU   X'53'   *     DD      BFALN=                       19874 26100019
BFTEKMK  EQU   X'54'   *     DD      BFTEK=                       19874 26400019
BLKSIZMK EQU   X'55'   *     DD      BLKSIZE=                     19874 26700019
BUFLMK   EQU   X'56'   *     DD      BUFL=                        19874 27000019
BUFNOMK  EQU   X'57'   *     DD      BUFNO=                       19874 27300019
BUFRQMK  EQU   X'58'   *     DD      BUFRQ=                       19874 27600019
CODEMK   EQU   X'59'   *     DD      CODE=                        19874 27900019
CPRIMK   EQU   X'5A'   *     DD      CPRI=                        19874 28200019
CYLOFLMK EQU   X'5B'   *     DD      CYLOFL=                      19874 28500019
HIARCHMK EQU   X'5C'   *     DD      HIARCHY=                     19874 28800019
DENMK    EQU   X'5D'   *     DD      DEN=                         19874 29100019
DSORGMK  EQU   X'5E'   *     DD      DSORG=                       19874 29400019
EROPTMK  EQU   X'5F'   *     DD      EROPT=                       19874 29700019
INTVLMK  EQU   X'60'   *     DD      INTVL=                       19874 30000019
KEYLENMK EQU   X'61'   *     DD      KEYLEN=                      19874 30300019
LIMCTMK  EQU   X'62'   *     DD      LIMCT=                       19874 30600019
LRECLMK  EQU   X'63'   *     DD      LRECL=                       19874 30900019
MODEMK   EQU   X'64'   *     DD      MODE =                       19874 31200019
NCPMK    EQU   X'65'   *     DD      NCP=                         19874 31500019
NTMMK    EQU   X'66'   *     DD      NTM=                         19874 31800019
OPTCDMK  EQU   X'67'   *     DD      OPTCD=                       19874 32100019
PRTSPMK  EQU   X'68'   *     DD      PRTSP=                       19874 32400019
RECFMMK  EQU   X'69'   *     DD      RECFM=                       19874 32700019
RKPMK    EQU   X'6A'   *     DD      RKP=                         19874 33000019
SOWAMK   EQU   X'6B'   *     DD      SOWA=                        19874 33300019
STACKMK  EQU   X'6C'   *     DD      STACK=                       19874 33600019
TRTCHMK  EQU   X'6D'   *     DD      TRTCH=                       19874 33900019
DDK      EQU   X'6E'   *     DD      DD                           19874 34200019
*        EQU   X'6F'   *     EXEC    RESERVED                     19874 34500019
*        EQU   X'70'   *     EXEC    RESERVED                     19874 34800019
*        EQU   X'71'   *     EXEC    RESERVED                     19874 35100019
*        EQU   X'72'   *     EXEC    RESERVED                     19874 35400019
*        EQU   X'73'   *     EXEC    RESERVED                     19874 35700019
*        EQU   X'74'   *     EXEC    RESERVED                     19874 36000019
*        EQU   X'75'   *     EXEC    RESERVED                     19874 36300019
*        EQU   X'76'   *     EXEC    RESERVED                     19874 36600019
*        EQU   X'77'   *     EXEC    RESERVED                     19874 36900019
*        EQU   X'78'   *     EXEC    RESERVED                     19874 37200019
CONDDEK  EQU   X'79'   *     EXEC    COND= IN CI TEXT OBTAINED FROM    *37250000
                                     COND. OVERRIDE                @02A 37300000
PRSTEPK  EQU   X'7A'   *     EXEC    NAME ON EXEC STATEMENT            *37550000
                                     THAT INVOKES A PROCEDURE      @L1A 37600000
DYNMPEK  EQU   X'7B'   *     EXEC    DYNAMNBR.                   Y02670 38100000
DYNMEEK  EQU   X'7C'   *     EXEC    DYNAMNBR=                   Y02670 38400000
PRFMPEK  EQU   X'7D'   *     EXEC    PERFORM.                    Y02655 38700000
PRFMEEK  EQU   X'7E'   *     EXEC    PERFORM=                    Y02655 39000000
ADRSPPEK EQU   X'7F'   *     EXEC    ADDRSPC.                    Y01029 39300001
ADRSPEEK EQU   X'80'   *     EXEC    ADDRSPC=                    Y01029 39600001
SDPPEK   EQU   X'81'   *     EXEC    DPRTY.                       19874 39900019
SDPEEK   EQU   X'82'   *     EXEC    DPRTY=                       19874 40200019
*        EQU   X'83'   *     EXEC    RESERVED                    Y02668 40500000
RDEEK    EQU   X'84'   *     EXEC    RD=                          19874 40800019
RDPEK    EQU   X'85'   *     EXEC    RD.                          19874 41100019
ROLLPEK  EQU   X'86'   *     EXE     ROLL.                        19874 41400019
ROLLEEK  EQU   X'87'   *     EXE     ROLL=                        19874 41700019
REGINPEK EQU   X'88'   *     EXE     REGION.                      19874 42000019
REGINEEK EQU   X'89'   *     EXEC    REGION=                      19874 42300019
PGMEK    EQU   X'8A'   *     EXEC    PGM=                         19874 42600019
PROCEK   EQU   X'8B'   *     EXEC    PROC=                        19874 42900019
ACCTPEK  EQU   X'8C'   *     EXEC    ACCT.                        19874 43200019
CONDPEK  EQU   X'8D'   *     EXEC    COND.                        19874 43500019
PARMPEK  EQU   X'8E'   *     EXEC    PARM.                        19874 43800019
TIMEPEK  EQU   X'8F'   *     EXEC    TIME.                        19874 44100019
ACCTEEK  EQU   X'90'   *     EXEC    ACCT=                        19874 44400019
CONDEEK  EQU   X'91'   *     EXEC    COND=                        19874 44700019
PARMEEK  EQU   X'92'   *     EXEC    PARM=                        19874 45000019
TIMEEEK  EQU   X'93'   *     EXEC    TIME=                        19874 45300019
EXECK    EQU   X'94'   *     EXEC    EXEC                         19874 45600019
*        EQU   X'95'   *     JOB     RESERVED                     19874 45900019
*        EQU   X'96'   *     JOB     RESERVED                     19874 46200019
*        EQU   X'97'   *     JOB     RESERVED                     19874 46500019
*        EQU   X'98'   *     JOB     RESERVED                     19874 46800019
*        EQU   X'99'   *     JOB     RESERVED                     19874 47100019
*        EQU   X'9A'   *     JOB     RESERVED                     19874 47400019
*        EQU   X'9B'   *     JOB     RESERVED                     19874 47700019
*        EQU   X'9C'   *     JOB     RESERVED                     19874 48000019
*        EQU   X'9D'   *     JOB     RESERVED                     19874 48300019
*        EQU   X'9E'   *     JOB     RESERVED                     19874 48600019
*        EQU   X'9F'   *     JOB     RESERVED                     19874 48900019
*        EQU   X'A0'   *     JOB     RESERVED                     19874 49200019
*        EQU   X'A1'   *     JOB     RESERVED                     19874 49500019
JCLVERNK EQU   X'A2'   *     JOB     JCL VERSION NUMBER            @L1A 49800000
GROUPK   EQU   X'A3'   *     JOB     GROUP=                    @Z40RPSM 50100000
PASWORDK EQU   X'A4'   *     JOB     PASSWORD=                 @Z40RPSM 50400000
USERK    EQU   X'A5'   *     JOB     USER=                     @Z40RPTH 50700000
PRFMJK   EQU   X'A6'   *     JOB     PERFORM=                    Y02655 51000000
ADRSPJK  EQU   X'A7'   *     JOB     ADDRSPC=                    Y01029 51300001
NOTIFYJK EQU   X'A8'   *     JOB     NOTIFY=                      20001 51350001
TIMEJK   EQU   X'A9'   *     JOB     TIME=                        19874 51900019
RESTARJK EQU   X'AA'   *     JOB     RESTART=                     19874 52200019
RDJK     EQU   X'AB'   *     JOB     RD=                          19874 52500019
ROLLJK   EQU   X'AC'   *     JOB     ROLL=                        19874 52800019
CLASSJK  EQU   X'AD'   *     JOB     CLASS=                       19874 53100019
REGINJK  EQU   X'AE'   *     JOB     REGION=                      19874 53400019
CONDJK   EQU   X'AF'   *     JOB     COND=                        19874 53700019
PRTYJK   EQU   X'B0'   *     JOB     PRTY=                        19874 54000019
TYPRUNJK EQU   X'B1'   *     JOB     TYPRUN=                      19874 54300019
MSGCLAJK EQU   X'B2'   *     JOB     MSGCLASS=                    19874 54600019
MSGLEVJK EQU   X'B3'   *     JOB     MSGLEVEL=                    19874 54900019
JOBK     EQU   X'B4'   *     JOB     JOB                          19874 55200019
*        EQU   X'B5'   *     RESERVED RESERVED                    19874 55500019
*        EQU   X'B6'   *     RESERVED RESERVED                    19874 55800019
*        EQU   X'B7'   *     RESERVED RESERVED                    19874 56100019
*        EQU   X'B8'   *     RESERVED RESERVED                    19874 56400019
*        EQU   X'B9'   *     RESERVED RESERVED                    19874 56700019
*        EQU   X'BA'   *     RESERVED RESERVED                    19874 57000019
*        EQU   X'BB'   *     RESERVED RESERVED                    19874 57300019
*        EQU   X'BC'   *     RESERVED RESERVED                    19874 57600019
*        EQU   X'BD'   *     RESERVED RESERVED                    19874 57900019
JDTVERBK EQU   X'BE'   *     JDVB     JDT-DEFINED VERB             @H1C 58200000
IFVERBK  EQU   X'BF'   *     IF       IF VERB                      @L1A 58500000
ELSVERBK EQU   X'C0'   *     ELSE     ELSE VERB                    @L1A 58800000
EIFVERBK EQU   X'C1'   *     ENDIF    ENDIF VERB                   @L1A 59100000
*        EQU   X'C2'   *     RESERVED RESERVED                    19874 59400019
*        EQU   X'C3'   *     RESERVED RESERVED                    19874 59700019
*        EQU   X'C4'   *     RESERVED RESERVED                    19874 60000019
*        EQU   X'C5'   *     RESERVED RESERVED                    19874 60300019
*        EQU   X'C6'   *     RESERVED RESERVED                    19874 60600019
*        EQU   X'C7'   *     RESERVED RESERVED                    19874 60900019
*        EQU   X'C8'   *     RESERVED RESERVED                    19874 61200019
*        EQU   X'C9'   *     RESERVED RESERVED                    19874 61500019
*        EQU   X'CA'   *     RESERVED RESERVED                    19874 61800019
*        EQU   X'CB'   *     RESERVED RESERVED                    19874 62100019
*        EQU   X'CC'   *     RESERVED RESERVED                    19874 62400019
*        EQU   X'CD'   *     RESERVED RESERVED                    19874 62700019
*        EQU   X'CE'   *     RESERVED RESERVED                    19874 63000019
*        EQU   X'CF'   *     RESERVED RESERVED                    19874 63300019
*        EQU   X'D0'   *     RESERVED RESERVED                    19874 63600019
*        EQU   X'D1'   *     RESERVED RESERVED                    19874 63900019
*        EQU   X'D2'   *     RESERVED RESERVED                    19874 64200019
*        EQU   X'D3'   *     RESERVED RESERVED                    19874 64500019
*        EQU   X'D4'   *     RESERVED RESERVED                    19874 64800019
*        EQU   X'D5'   *     RESERVED RESERVED                    19874 65100019
*        EQU   X'D6'   *     RESERVED RESERVED                    19874 65400019
*        EQU   X'D7'   *     RESERVED RESERVED                    19874 65700019
*        EQU   X'D8'   *     RESERVED RESERVED                    19874 66000019
*        EQU   X'D9'   *     RESERVED RESERVED                    19874 66300019
*        EQU   X'DA'   *     RESERVED RESERVED                    19874 66600019
*        EQU   X'DB'   *     RESERVED RESERVED                    19874 66900019
*        EQU   X'DC'   *     RESERVED RESERVED                    19874 67200019
*        EQU   X'DD'   *     RESERVED RESERVED                    19874 67500019
*        EQU   X'DE'   *     RESERVED RESERVED                    19874 67800019
*        EQU   X'DF'   *     RESERVED RESERVED                    19874 68100019
*        EQU   X'E0'   *     RESERVED RESERVED                    19874 68400019
*        EQU   X'E1'   *     RESERVED RESERVED                    19874 68700019
*        EQU   X'E2'   *     RESERVED RESERVED                    19874 69000019
*        EQU   X'E3'   *     RESERVED RESERVED                    19874 69300019
*        EQU   X'E4'   *     RESERVED RESERVED                    19874 69600019
*        EQU   X'E5'   *     RESERVED RESERVED                    19874 69900019
*        EQU   X'E6'   *     RESERVED RESERVED                    19874 70200019
*        EQU   X'E7'   *     RESERVED RESERVED                    19874 70500019
*        EQU   X'E8'   *     RESERVED RESERVED                    19874 70800019
*        EQU   X'E9'   *     RESERVED RESERVED                    19874 71100019
*        EQU   X'EA'   *     RESERVED RESERVED                    19874 71400019
*        EQU   X'EB'   *     RESERVED RESERVED                    19874 71700019
*        EQU   X'EC'   *     RESERVED RESERVED                    19874 72000019
*        EQU   X'ED'   *     RESERVED RESERVED                    19874 72300019
*        EQU   X'EE'   *     RESERVED RESERVED                    19874 72600019
*        EQU   X'EF'   *     RESERVED RESERVED FOR MULTI-BYTE KEY 19874 72900019
INTKEY1  EQU   X'F0'   *     INTERNAL KEY                         19874 73200019
INTKEY2  EQU   X'F1'   *     INTERNAL KEY                         19874 73500019
INTKEY3  EQU   X'F2'   *     INTERNAL KEY                         19874 73800019
INTKEY4  EQU   X'F3'   *     INTERNAL KEY                         19874 74100019
INTKEY5  EQU   X'F4'   *     INTERNAL KEY                         19874 74400019
INTKEY6  EQU   X'F5'   *     INTERNAL KEY RESERVED                19874 74700019
INTKEY7  EQU   X'F6'   *     INTERNAL KEY RESERVED                19874 75000019
INTKEY8  EQU   X'F7'   *     INTERNAL KEY RESERVED                19874 75300019
INTKEY9  EQU   X'F8'   *     INTERNAL KEY RESERVED                19874 75600019
INTKEYA  EQU   X'F9'   *     INTERNAL KEY RESERVED                19874 75900019
INTKEYB  EQU   X'FA'   *     INTERNAL KEY RESERVED                19874 76200019
INTKEYC  EQU   X'FB'   *     INTERNAL KEY RESERVED                19874 76500019
*        EQU   X'FC'   *     NONE                                       76800000
*        EQU   X'FD'   *     NONE                                       77100000
ENDK     EQU   X'FE'   *     NONE    END KEY                      19874 77400019
ENDIND   EQU   X'FF'   *     NONE    END OF MODULE INDICATOR      19874 77700019
*   IF-EXPRESSION KEYS                                             @L1A 77706600
*   NOTE:                                                          @L1A 77707900
*   THE KEYS FOR THE IF STATEMENT DO NOT HAVE TO BE UNIQUE FROM    @L1A 77709200
*   KEYS ON THE OTHER STATEMENT TYPES SINCE THEY ARE NOT PROCESSED @L1A 77710500
*   THROUGH THE PDTS.                                              @L1A 77711800
IFJRCK   EQU   X'01'   *     IF      JOB LEVEL RC                  @L1A 77713200
IFSRCK   EQU   X'02'   *     IF      STEP LEVEL RC                 @L1A 77719800
IFRCK    EQU   X'03'   *     IF      RC                            @L1A 77726400
IFJABCCK EQU   X'04'   *     IF      JOB ABEND CODE                @L1A 77733000
IFSABCCK EQU   X'05'   *     IF      STEP ABEND CODE               @L1A 77739600
IFUABCK  EQU   X'06'   *     IF      USER ABEND CODE               @L1A 77746200
IFSABCK  EQU   X'07'   *     IF      SYSTEM ABEND CODE             @L1A 77752800
IFJABNDK EQU   X'08'   *     IF      JOB ABEND                     @L1A 77759400
IFSABNDK EQU   X'09'   *     IF      STEP ABEND                    @L1A 77766000
IFSRUNK  EQU   X'0A'   *     IF      STEP RUN                      @L1A 77772600
IFBOOLK  EQU   X'0B'   *     IF      BOOLEAN                       @L1A 77779200
IFOPERK  EQU   X'0C'   *     IF      OPERATOR                      @L1A 77785800
         MEND                */                                         77792400
   %VKEYSPLS: ;              /*                                  @H1A*/ 77800000
*/*                                      VERB   KEYWORD          @H1A*/ 77850000
* DCL ETEND   BIT(8) CONSTANT('00'X), /* DD     INTERNAL KEY -   @H1A   77900000
*                                               DICTIONARY END   @H1A*/ 77950000
*/*           BIT(8) CONSTANT('01'X),    DD     RESERVED         @H1A*/ 78000000
*/*           BIT(8) CONSTANT('02'X),    DD     RESERVED         @H1A*/ 78050000
*/*           BIT(8) CONSTANT('03'X),    DD     RESERVED         @H1A*/ 78100000
*/*           BIT(8) CONSTANT('04'X),    DD     RESERVED         @H1A*/ 78150000
*/*           BIT(8) CONSTANT('05'X),    DD     RESERVED         @H1A*/ 78200000
*/*           BIT(8) CONSTANT('06'X),    DD     RESERVED         @H1A*/ 78250000
*/*           BIT(8) CONSTANT('07'X),    DD     RESERVED         @H1A*/ 78300000
*/*           BIT(8) CONSTANT('08'X),    DD     RESERVED         @H1A*/ 78350000
*/*           BIT(8) CONSTANT('09'X),    DD     RESERVED         @H1A*/ 78400000
*/*           BIT(8) CONSTANT('0A'X),    DD     RESERVED         @H1A*/ 78450000
*/*           BIT(8) CONSTANT('0B'X),    DD     RESERVED         @H1A*/ 78500000
*/*           BIT(8) CONSTANT('0C'X),    DD     RESERVED         @H1A*/ 78550000
*/*           BIT(8) CONSTANT('0D'X),    DD     RESERVED         @H1A*/ 78600000
*/*           BIT(8) CONSTANT('0E'X),    DD     RESERVED         @H1A*/ 78650000
*/*           BIT(8) CONSTANT('0F'X),    DD     RESERVED         @H1A*/ 78700000
*/*           BIT(8) CONSTANT('10'X),    DD     RESERVED         @H1A*/ 78750000
*/*           BIT(8) CONSTANT('11'X),    DD     RESERVED         @H1A*/ 78800000
*/*           BIT(8) CONSTANT('12'X),    DD     RESERVED         @H1A*/ 78850000
*/*           BIT(8) CONSTANT('13'X),    DD     RESERVED         @H1A*/ 78900000
*/*           BIT(8) CONSTANT('14'X),    DD     RESERVED         @H1A*/ 78950000
*    EXPDTK   BIT(8) CONSTANT('15'X), /* DD     EXPDT= MAJOR KEY        78967600
*                                               INTERNAL TO             78985200
*                                               CONVERTER        @01C*/ 79002800
*    RETPDK   BIT(8) CONSTANT('16'X), /* DD     RETPD= MAJOR KEY        79020400
*                                               INTERNAL TO             79038000
*                                               CONVERTER        @01C*/ 79055600
*    JDTOVRDK BIT(8) CONSTANT('17'X), /* DD     OVERRIDE FORM OF SJF    79073800
*                                               KEYWORD          @L1A*/ 79097600
*    SPLATK   BIT(8) CONSTANT('18'X), /* DD     * - INTERNAL KEY        79121400
*                                               NOT USED IN INTERNAL    79142800
*                                               TEXT             @D1C*/ 79164200
*    DATAK    BIT(8) CONSTANT('19'X), /* DD     DATA - INTERNAL KEY     79185600
*                                               NOT USED IN INTERNAL    79207000
*                                               TEXT             @D1C*/ 79228400
*    JDTKWDK  BIT(8) CONSTANT('1A'X), /* DD     JDT-DEFINED KWD  @H1A*/ 79250000
*    PROTECTK BIT(8) CONSTANT('1B'X), /* DD     PROTECT=         @H1A*/ 79300000
*    SUBSYSK  BIT(8) CONSTANT('1C'X), /* DD     SUBSYS=          @H1A*/ 79350000
*    CHARSK   BIT(8) CONSTANT('1D'X), /* DD     CHARS=           @H1A*/ 79400000
*    MODIFYK  BIT(8) CONSTANT('1E'X), /* DD     MODIFY=          @H1A*/ 79450000
*    FLASHK   BIT(8) CONSTANT('1F'X), /* DD     FLASH=           @H1A*/ 79500000
*    BURSTK   BIT(8) CONSTANT('20'X), /* DD     BURST=           @H1A*/ 79550000
*    DSIDK    BIT(8) CONSTANT('21'X), /* DD     DSID=            @H1A*/ 79600000
*    MSVGPK   BIT(8) CONSTANT('22'X), /* DD     MSVGP=           @H1A*/ 79650000
*    HOLDK    BIT(8) CONSTANT('23'X), /* DD     HOLD=            @H1A*/ 79700000
*    SYSINCTK BIT(8) CONSTANT('24'X), /* DD     INTERNAL KEY - NUMBER   79750000
*                                               SYSIN RECORDS SPOOLED   79800000
*                                               BY JES           @H1A*/ 79850000
*    DESTK    BIT(8) CONSTANT('25'X), /* DD     DEST=            @H1A*/ 79950000
*    FRIDMK   BIT(8) CONSTANT('26'X), /* DD     FRID=            @H1A*/ 80000000
*    FREEK    BIT(8) CONSTANT('27'X), /* DD     FREE=            @H1A*/ 80050000
*    AMPK     BIT(8) CONSTANT('28'X), /* DD     AMP=             @H1A*/ 80100000
*    FUNCMK   BIT(8) CONSTANT('29'X), /* DD     FUNC=            @H1A*/ 80150000
*    DIAGNSK  BIT(8) CONSTANT('2A'X), /* DD     DIAGNS=          @H1A*/ 80200000
*    DLMK     BIT(8) CONSTANT('2B'X), /* DD     DLMK=            @H1A*/ 80250000
*    FCBK     BIT(8) CONSTANT('2C'X), /* DD     FCB=             @H1A*/ 80300000
*    TERMK    BIT(8) CONSTANT('2D'X), /* DD     TERM=            @H1A*/ 80350000
*    THRESHMK BIT(8) CONSTANT('2E'X), /* DD     THRESH=          @H1A*/ 80400000
*    RESERVMK BIT(8) CONSTANT('2F'X), /* DD     RESERVE=         @H1A*/ 80450000
*    PCIMK    BIT(8) CONSTANT('30'X), /* DD     PCI=             @H1A*/ 80500000
*    BUFMAXMK BIT(8) CONSTANT('31'X), /* DD     BUFMAX=          @H1A*/ 80550000
*    BUFOUTMK BIT(8) CONSTANT('32'X), /* DD     BUFOUT=          @H1A*/ 80600000
*    BUFINMK  BIT(8) CONSTANT('33'X), /* DD     BUFIN=           @H1A*/ 80650000
*    BUFSIZMK BIT(8) CONSTANT('34'X), /* DD     BUFSIZE=         @H1A*/ 80700000
*    DYNAK    BIT(8) CONSTANT('35'X), /* DD     DYNAM            @H1A*/ 80750000
*    QNAMEK   BIT(8) CONSTANT('36'X), /* DD     QNAME=           @H1A*/ 80800000
*    BUFOFFMK BIT(8) CONSTANT('37'X), /* DD     BUFOFF           @H1A*/ 80850000
*    OUTLIMK  BIT(8) CONSTANT('38'X), /* DD     OUTLIM           @H1A*/ 80900000
*    IPLTXIDK BIT(8) CONSTANT('39'X), /* DD     IPLTXID=         @H1A*/ 80950000
*    COPIESK  BIT(8) CONSTANT('3A'X), /* DD     COPIES=          @H1A*/ 81000000
*    GDSORGMK BIT(8) CONSTANT('3B'X), /* DD     GDSORG=          @H1A*/ 81050000
*    GNCPMK   BIT(8) CONSTANT('3C'X), /* DD     GNCP=            @H1A*/ 81100000
*    UCSK     BIT(8) CONSTANT('3D'X), /* DD     UCS=             @H1A*/ 81150000
*    DUMMK    BIT(8) CONSTANT('3E'X), /* DD     DUMMY            @H1A*/ 81200000
*    CHKPTK   BIT(8) CONSTANT('3F'X), /* DD     CHKPT=           @H1A*/ 81250000
*    DCBK     BIT(8) CONSTANT('40'X), /* DD     DCB=             @H1A*/ 81300000
*    UNITK    BIT(8) CONSTANT('41'X), /* DD     UNIT=            @H1A*/ 81350000
*    LABELK   BIT(8) CONSTANT('42'X), /* DD     LABEL=           @H1A*/ 81400000
*    VOLUMEK  BIT(8) CONSTANT('43'X), /* DD     VOLUME=          @H1A*/ 81450000
*    AFFK     BIT(8) CONSTANT('44'X), /* DD     AFF=             @H1A*/ 81500000
*    SEPK     BIT(8) CONSTANT('45'X), /* DD     SEP=             @H1A*/ 81550000
*    DISPK    BIT(8) CONSTANT('46'X), /* DD     DISP=            @H1A*/ 81600000
*    SPACEK   BIT(8) CONSTANT('47'X), /* DD     SPACE=           @H1A*/ 81650000
*    SPLITK   BIT(8) CONSTANT('48'X), /* DD     SPLIT=           @H1A*/ 81700000
*    DDNAMEK  BIT(8) CONSTANT('49'X), /* DD     DDNAME=          @H1A*/ 81750000
*    DSNAMEK  BIT(8) CONSTANT('4A'X), /* DD     DSNAME=          @H1A*/ 81800000
*    SYSOUTK  BIT(8) CONSTANT('4B'X), /* DD     SYSOUT=          @H1A*/ 81850000
*    SUBALLOK BIT(8) CONSTANT('4C'X), /* DD     SUBALLOC=        @H1A*/ 81900000
*    AFFMK    BIT(8) CONSTANT('4D'X), /* DD     AFF=   MINOR     @H1A*/ 81950000
*    SEPMK    BIT(8) CONSTANT('4E'X), /* DD     SEP=   MINOR     @H1A*/ 82000000
*    SERMK    BIT(8) CONSTANT('4F'X), /* DD     SER=             @H1A*/ 82050000
*    REFMK    BIT(8) CONSTANT('50'X), /* DD     REF=             @H1A*/ 82100000
*    EXPDTMK  BIT(8) CONSTANT('51'X), /* DD     EXPDT= MINOR KWD @H1A*/ 82150000
*    RETPDMK  BIT(8) CONSTANT('52'X), /* DD     RETPD= MINOR KWD @H1A*/ 82200000
*    BUFALNMK BIT(8) CONSTANT('53'X), /* DD     BFALN=           @H1A*/ 82250000
*    BFTEKMK  BIT(8) CONSTANT('54'X), /* DD     BFTEK=           @H1A*/ 82300000
*    BLKSIZMK BIT(8) CONSTANT('55'X), /* DD     BLKSIZE=         @H1A*/ 82350000
*    BUFLMK   BIT(8) CONSTANT('56'X), /* DD     BUFL=            @H1A*/ 82400000
*    BUFNOMK  BIT(8) CONSTANT('57'X), /* DD     BUFNO=           @H1A*/ 82450000
*    BUFRQMK  BIT(8) CONSTANT('58'X), /* DD     BUFRQ=           @H1A*/ 82500000
*    CODEMK   BIT(8) CONSTANT('59'X), /* DD     CODE=            @H1A*/ 82550000
*    CPRIMK   BIT(8) CONSTANT('5A'X), /* DD     CPRI=            @H1A*/ 82600000
*    CYLOFLMK BIT(8) CONSTANT('5B'X), /* DD     CYLOFL=          @H1A*/ 82650000
*    HIARCHMK BIT(8) CONSTANT('5C'X), /* DD     HIARCHY=         @H1A*/ 82700000
*    DENMK    BIT(8) CONSTANT('5D'X), /* DD     DEN=             @H1A*/ 82750000
*    DSORGMK  BIT(8) CONSTANT('5E'X), /* DD     DSORG=           @H1A*/ 82800000
*    EROPTMK  BIT(8) CONSTANT('5F'X), /* DD     EROPT=           @H1A*/ 82850000
*    INTVLMK  BIT(8) CONSTANT('60'X), /* DD     INTVL=           @H1A*/ 82900000
*    KEYLENMK BIT(8) CONSTANT('61'X), /* DD     KEYLEN=          @H1A*/ 82950000
*    LIMCTMK  BIT(8) CONSTANT('62'X), /* DD     LIMCT=           @H1A*/ 83000000
*    LRECLMK  BIT(8) CONSTANT('63'X), /* DD     LRECL=           @H1A*/ 83050000
*    MODEMK   BIT(8) CONSTANT('64'X), /* DD     MODE=            @H1A*/ 83100000
*    NCPMK    BIT(8) CONSTANT('65'X), /* DD     NCP=             @H1A*/ 83150000
*    NTMMK    BIT(8) CONSTANT('66'X), /* DD     NTM=             @H1A*/ 83200000
*    OPTCDMK  BIT(8) CONSTANT('67'X), /* DD     OPTCD=           @H1A*/ 83250000
*    PRTSPMK  BIT(8) CONSTANT('68'X), /* DD     PRTSP=           @H1A*/ 83300000
*    RECFMMK  BIT(8) CONSTANT('69'X), /* DD     RECFM=           @H1A*/ 83350000
*    RKPMK    BIT(8) CONSTANT('6A'X), /* DD     RKP=             @H1A*/ 83400000
*    SOWAMK   BIT(8) CONSTANT('6B'X), /* DD     SOWA=            @H1A*/ 83450000
*    STACKMK  BIT(8) CONSTANT('6C'X), /* DD     STACK=           @H1A*/ 83500000
*    TRTCHMK  BIT(8) CONSTANT('6D'X), /* DD     TRTCH=           @H1A*/ 83550000
*    DDK      BIT(8) CONSTANT('6E'X), /* DD     DD               @H1A*/ 83600000
*/*           BIT(8) CONSTANT('6F'X),    EXEC   RESERVED         @H1A*/ 83650000
*/*           BIT(8) CONSTANT('70'X),    EXEC   RESERVED         @H1A*/ 83700000
*/*           BIT(8) CONSTANT('71'X),    EXEC   RESERVED         @H1A*/ 83750000
*/*           BIT(8) CONSTANT('72'X),    EXEC   RESERVED         @H1A*/ 83800000
*/*           BIT(8) CONSTANT('73'X),    EXEC   RESERVED         @H1A*/ 83850000
*/*           BIT(8) CONSTANT('74'X),    EXEC   RESERVED         @H1A*/ 83900000
*/*           BIT(8) CONSTANT('75'X),    EXEC   RESERVED         @H1A*/ 83950000
*/*           BIT(8) CONSTANT('76'X),    EXEC   RESERVED         @H1A*/ 84000000
*/*           BIT(8) CONSTANT('77'X),    EXEC   RESERVED         @H1A*/ 84050000
*/*           BIT(8) CONSTANT('78'X),    EXEC   RESERVED         @H1A*/ 84100000
*    CONDDEK  BIT(8) CONSTANT('79'X),/*  EXEC   COND= IN CI TEXT        84120800
*                                       OBTAINED FROM COND. OVERRIDE    84141600
*                                                                @02C*/ 84162400
*    PRSTEPK  BIT(8) CONSTANT('7A'X),/*  EXEC   NAME ON THE EXEC        84183300
*                             STATEMENT THAT INVOKES A PROCEDURE @L1A*/ 84216600
*    DYNMPEK  BIT(8) CONSTANT('7B'X), /* EXEC   DYNAMNBR.        @H1A*/ 84250000
*    DYNMEEK  BIT(8) CONSTANT('7C'X), /* EXEC   DYNAMNBR=        @H1A*/ 84300000
*    PRFMPEK  BIT(8) CONSTANT('7D'X), /* EXEC   PERFORM.         @H1A*/ 84350000
*    PRFMEEK  BIT(8) CONSTANT('7E'X), /* EXEC   PERFORM=         @H1A*/ 84400000
*    ADRSPPEK BIT(8) CONSTANT('7F'X), /* EXEC   ADDRSPC.         @H1A*/ 84450000
*    ADRSPEEK BIT(8) CONSTANT('80'X), /* EXEC   ADDRSPC=         @H1A*/ 84500000
*    SDPPEK   BIT(8) CONSTANT('81'X), /* EXEC   DPRTY.           @H1A*/ 84550000
*    SDPEEK   BIT(8) CONSTANT('82'X), /* EXEC   DPRTY=           @H1A*/ 84600000
*/*           BIT(8) CONSTANT('83'X),    EXEC   RESERVED         @H1A*/ 84650000
*    RDEEK    BIT(8) CONSTANT('84'X), /* EXEC   RD=              @H1A*/ 84700000
*    RDPEK    BIT(8) CONSTANT('85'X), /* EXEC   RD.              @H1A*/ 84750000
*    ROLLPEK  BIT(8) CONSTANT('86'X), /* EXEC   ROLL.            @H1A*/ 84800000
*    ROLLEEK  BIT(8) CONSTANT('87'X), /* EXEC   ROLL=            @H1A*/ 84850000
*    REGINPEK BIT(8) CONSTANT('88'X), /* EXEC   REGION.          @H1A*/ 84900000
*    REGINEEK BIT(8) CONSTANT('89'X), /* EXEC   REGION=          @H1A*/ 84950000
*    PGMEK    BIT(8) CONSTANT('8A'X), /* EXEC   PGM=             @H1A*/ 85000000
*    PROCEK   BIT(8) CONSTANT('8B'X), /* EXEC   PROC=            @H1A*/ 85050000
*    ACCTPEK  BIT(8) CONSTANT('8C'X), /* EXEC   ACCT.            @H1A*/ 85100000
*    CONDPEK  BIT(8) CONSTANT('8D'X), /* EXEC   COND.            @H1A*/ 85150000
*    PARMPEK  BIT(8) CONSTANT('8E'X), /* EXEC   PARM.            @H1A*/ 85200000
*    TIMEPEK  BIT(8) CONSTANT('8F'X), /* EXEC   TIME.            @H1A*/ 85250000
*    ACCTEEK  BIT(8) CONSTANT('90'X), /* EXEC   ACCT=            @H1A*/ 85300000
*    CONDEEK  BIT(8) CONSTANT('91'X), /* EXEC   COND=            @H1A*/ 85350000
*    PARMEEK  BIT(8) CONSTANT('92'X), /* EXEC   PARM=            @H1A*/ 85400000
*    TIMEEEK  BIT(8) CONSTANT('93'X), /* EXEC   TIME=            @H1A*/ 85450000
*    EXECK    BIT(8) CONSTANT('94'X), /* EXEC   EXEC             @H1A*/ 85500000
*/*           BIT(8) CONSTANT('95'X),    JOB    RESERVED         @H1A*/ 85550000
*/*           BIT(8) CONSTANT('96'X),    JOB    RESERVED         @H1A*/ 85600000
*/*           BIT(8) CONSTANT('97'X),    JOB    RESERVED         @H1A*/ 85650000
*/*           BIT(8) CONSTANT('98'X),    JOB    RESERVED         @H1A*/ 85700000
*/*           BIT(8) CONSTANT('99'X),    JOB    RESERVED         @H1A*/ 85750000
*/*           BIT(8) CONSTANT('9A'X),    JOB    RESERVED         @H1A*/ 85800000
*/*           BIT(8) CONSTANT('9B'X),    JOB    RESERVED         @H1A*/ 85850000
*/*           BIT(8) CONSTANT('9C'X),    JOB    RESERVED         @H1A*/ 85900000
*/*           BIT(8) CONSTANT('9D'X),    JOB    RESERVED         @H1A*/ 85950000
*/*           BIT(8) CONSTANT('9E'X),    JOB    RESERVED         @H1A*/ 86000000
*/*           BIT(8) CONSTANT('9F'X),    JOB    RESERVED         @H1A*/ 86050000
*/*           BIT(8) CONSTANT('A0'X),    JOB    RESERVED         @H1A*/ 86100000
*/*           BIT(8) CONSTANT('A1'X),    JOB    RESERVED         @H1A*/ 86150000
*    JCLVERNK BIT(8) CONSTANT('A2'X), /* JOB    JCL VERSION NUM  @L1A*/ 86200000
*    GROUPK   BIT(8) CONSTANT('A3'X), /* JOB    GROUP=           @H1A*/ 86250000
*    PASWORDK BIT(8) CONSTANT('A4'X), /* JOB    PASSWORD=        @H1A*/ 86300000
*    USERK    BIT(8) CONSTANT('A5'X), /* JOB    USER=            @H1A*/ 86350000
*    PRFMJK   BIT(8) CONSTANT('A6'X), /* JOB    PERFORM=         @H1A*/ 86400000
*    ADRSPJK  BIT(8) CONSTANT('A7'X), /* JOB    ADDRSPC=         @H1A*/ 86450000
*    NOTIFYJK BIT(8) CONSTANT('A8'X), /* JOB    NOTIFY=          @H1A*/ 86500000
*    TIMEJK   BIT(8) CONSTANT('A9'X), /* JOB    TIME=            @H1A*/ 86550000
*    RESTARJK BIT(8) CONSTANT('AA'X), /* JOB    RESTART=         @H1A*/ 86600000
*    RDJK     BIT(8) CONSTANT('AB'X), /* JOB    RD=              @H1A*/ 86650000
*    ROLLJK   BIT(8) CONSTANT('AC'X), /* JOB    ROLL=            @H1A*/ 86700000
*    CLASSJK  BIT(8) CONSTANT('AD'X), /* JOB    CLASS=           @H1A*/ 86750000
*    REGINJK  BIT(8) CONSTANT('AE'X), /* JOB    REGION=          @H1A*/ 86800000
*    CONDJK   BIT(8) CONSTANT('AF'X), /* JOB    COND=            @H1A*/ 86850000
*    PRTYJK   BIT(8) CONSTANT('B0'X), /* JOB    PRTY=            @H1A*/ 86900000
*    TYPRUNJK BIT(8) CONSTANT('B1'X), /* JOB    TYPRUN=          @H1A*/ 86950000
*    MSGCLAJK BIT(8) CONSTANT('B2'X), /* JOB    MSGCLASS=        @H1A*/ 87000000
*    MSGLEVJK BIT(8) CONSTANT('B3'X), /* JOB    MSGLEVEL=        @H1A*/ 87050000
*    JOBK     BIT(8) CONSTANT('B4'X), /* JOB    JOB              @H1A*/ 87100000
*/*           BIT(8) CONSTANT('B5'X),    RESV   RESERVED         @H1A*/ 87150000
*/*           BIT(8) CONSTANT('B6'X),    RESV   RESERVED         @H1A*/ 87200000
*/*           BIT(8) CONSTANT('B7'X),    RESV   RESERVED         @H1A*/ 87250000
*/*           BIT(8) CONSTANT('B8'X),    RESV   RESERVED         @H1A*/ 87300000
*/*           BIT(8) CONSTANT('B9'X),    RESV   RESERVED         @H1A*/ 87350000
*/*           BIT(8) CONSTANT('BA'X),    RESV   RESERVED         @H1A*/ 87400000
*/*           BIT(8) CONSTANT('BB'X),    RESV   RESERVED         @H1A*/ 87450000
*/*           BIT(8) CONSTANT('BC'X),    RESV   RESERVED         @H1A*/ 87500000
*/*           BIT(8) CONSTANT('BD'X),    RESV   RESERVED         @H1A*/ 87550000
*    JDTVERBK BIT(8) CONSTANT('BE'X), /* JDVB   JDT-DEFINED VERB @H1A*/ 87600000
*    IFVERBK  BIT(8) CONSTANT('BF'X), /* IF     IF VERB          @L1A*/ 87650000
*    ELSVERBK BIT(8) CONSTANT('C0'X), /* ELSE   ELSE VERB        @L1A*/ 87700000
*    EIFVERBK BIT(8) CONSTANT('C1'X), /* ENDIF  ENDIF VERB       @L1A*/ 87750000
*/*           BIT(8) CONSTANT('C2'X),    RESV   RESERVED         @H1A*/ 87800000
*/*           BIT(8) CONSTANT('C3'X),    RESV   RESERVED         @H1A*/ 87850000
*/*           BIT(8) CONSTANT('C4'X),    RESV   RESERVED         @H1A*/ 87900000
*/*           BIT(8) CONSTANT('C5'X),    RESV   RESERVED         @H1A*/ 87950000
*/*           BIT(8) CONSTANT('C6'X),    RESV   RESERVED         @H1A*/ 88000000
*/*           BIT(8) CONSTANT('C7'X),    RESV   RESERVED         @H1A*/ 88050000
*/*           BIT(8) CONSTANT('C8'X),    RESV   RESERVED         @H1A*/ 88100000
*/*           BIT(8) CONSTANT('C9'X),    RESV   RESERVED         @H1A*/ 88150000
*/*           BIT(8) CONSTANT('CA'X),    RESV   RESERVED         @H1A*/ 88200000
*/*           BIT(8) CONSTANT('CB'X),    RESV   RESERVED         @H1A*/ 88250000
*/*           BIT(8) CONSTANT('CC'X),    RESV   RESERVED         @H1A*/ 88300000
*/*           BIT(8) CONSTANT('CD'X),    RESV   RESERVED         @H1A*/ 88350000
*/*           BIT(8) CONSTANT('CE'X),    RESV   RESERVED         @H1A*/ 88400000
*/*           BIT(8) CONSTANT('CF'X),    RESV   RESERVED         @H1A*/ 88450000
*/*           BIT(8) CONSTANT('D0'X),    RESV   RESERVED         @H1A*/ 88500000
*/*           BIT(8) CONSTANT('D1'X),    RESV   RESERVED         @H1A*/ 88550000
*/*           BIT(8) CONSTANT('D2'X),    RESV   RESERVED         @H1A*/ 88600000
*/*           BIT(8) CONSTANT('D3'X),    RESV   RESERVED         @H1A*/ 88650000
*/*           BIT(8) CONSTANT('D4'X),    RESV   RESERVED         @H1A*/ 88700000
*/*           BIT(8) CONSTANT('D5'X),    RESV   RESERVED         @H1A*/ 88750000
*/*           BIT(8) CONSTANT('D6'X),    RESV   RESERVED         @H1A*/ 88800000
*/*           BIT(8) CONSTANT('D7'X),    RESV   RESERVED         @H1A*/ 88850000
*/*           BIT(8) CONSTANT('D8'X),    RESV   RESERVED         @H1A*/ 88900000
*/*           BIT(8) CONSTANT('D9'X),    RESV   RESERVED         @H1A*/ 88950000
*/*           BIT(8) CONSTANT('DA'X),    RESV   RESERVED         @H1A*/ 89000000
*/*           BIT(8) CONSTANT('DB'X),    RESV   RESERVED         @H1A*/ 89050000
*/*           BIT(8) CONSTANT('DC'X),    RESV   RESERVED         @H1A*/ 89100000
*/*           BIT(8) CONSTANT('DD'X),    RESV   RESERVED         @H1A*/ 89150000
*/*           BIT(8) CONSTANT('DE'X),    RESV   RESERVED         @H1A*/ 89200000
*/*           BIT(8) CONSTANT('DF'X),    RESV   RESERVED         @H1A*/ 89250000
*/*           BIT(8) CONSTANT('E0'X),    RESV   RESERVED         @H1A*/ 89300000
*/*           BIT(8) CONSTANT('E1'X),    RESV   RESERVED         @H1A*/ 89350000
*/*           BIT(8) CONSTANT('E2'X),    RESV   RESERVED         @H1A*/ 89400000
*/*           BIT(8) CONSTANT('E3'X),    RESV   RESERVED         @H1A*/ 89450000
*/*           BIT(8) CONSTANT('E4'X),    RESV   RESERVED         @H1A*/ 89500000
*/*           BIT(8) CONSTANT('E5'X),    RESV   RESERVED         @H1A*/ 89550000
*/*           BIT(8) CONSTANT('E6'X),    RESV   RESERVED         @H1A*/ 89600000
*/*           BIT(8) CONSTANT('E7'X),    RESV   RESERVED         @H1A*/ 89650000
*/*           BIT(8) CONSTANT('E8'X),    RESV   RESERVED         @H1A*/ 89700000
*/*           BIT(8) CONSTANT('E9'X),    RESV   RESERVED         @H1A*/ 89750000
*/*           BIT(8) CONSTANT('E0'X),    RESV   RESERVED         @H1A*/ 89800000
*/*           BIT(8) CONSTANT('EA'X),    RESV   RESERVED         @H1A*/ 89850000
*/*           BIT(8) CONSTANT('EB'X),    RESV   RESERVED         @H1A*/ 89900000
*/*           BIT(8) CONSTANT('EC'X),    RESV   RESERVED         @H1A*/ 89950000
*/*           BIT(8) CONSTANT('ED'X),    RESV   RESERVED         @H1A*/ 90000000
*/*           BIT(8) CONSTANT('EE'X),    RESV   RESERVED         @H1A*/ 90050000
*/*           BIT(8) CONSTANT('EF'X),    RESV   MULTI-BYTE KEY   @H1A*/ 90100000
*    INTKEY1  BIT(8) CONSTANT('F0'X), /* INTERNAL KEY            @H1A*/ 90150000
*    INTKEY2  BIT(8) CONSTANT('F1'X), /* INTERNAL KEY            @H1A*/ 90200000
*    INTKEY3  BIT(8) CONSTANT('F2'X), /* INTERNAL KEY            @H1A*/ 90250000
*    INTKEY4  BIT(8) CONSTANT('F3'X), /* INTERNAL KEY            @H1A*/ 90300000
*    INTKEY5  BIT(8) CONSTANT('F4'X), /* INTERNAL KEY   RESERVED @H1A*/ 90350000
*    INTKEY6  BIT(8) CONSTANT('F5'X), /* INTERNAL KEY   RESERVED @H1A*/ 90400000
*    INTKEY7  BIT(8) CONSTANT('F6'X), /* INTERNAL KEY   RESERVED @H1A*/ 90450000
*    INTKEY8  BIT(8) CONSTANT('F7'X), /* INTERNAL KEY   RESERVED @H1A*/ 90500000
*    INTKEY9  BIT(8) CONSTANT('F8'X), /* INTERNAL KEY   RESERVED @H1A*/ 90550000
*    INTKEYA  BIT(8) CONSTANT('F9'X), /* INTERNAL KEY   RESERVED @H1A*/ 90600000
*    INTKEYB  BIT(8) CONSTANT('FA'X), /* INTERNAL KEY   RESERVED @H1A*/ 90650000
*    INTKEYC  BIT(8) CONSTANT('FB'X), /* INTERNAL KEY   RESERVED @H1A*/ 90700000
*/*           BIT(8) CONSTANT('FC'X),    NONE                    @H1A*/ 90750000
*/*           BIT(8) CONSTANT('FD'X),    NONE                    @H1A*/ 90800000
*    ENDK     BIT(8) CONSTANT('FE'X), /* NONE     END KEY        @H1A*/ 90850000
*    ENDIND   BIT(8) CONSTANT('FF'X); /* NONE     END OF MODULE  @H1A   90900000
*                                                 INDICATOR      @H1A*/ 90950000
*/* IF-EXPRESSION KEYS                                           @L1A*/ 91000000
*/* NOTE: */                                                            91010000
*/* THE KEYS FOR THE IF STATEMENT DO NOT HAVE TO BE UNIQUE FROM */      91020000
*/* KEYS ON THE OTHER STATEMENT TYPES SINCE THEY ARE NOT PROCESSED */   91030000
*/* THROUGH THE PDTS.                                            @L1A*/ 91040000
* DCL                                                                   91050000
*    IFJRCK   BIT(8) CONSTANT('01'X),/* IF  JOB LEVEL RC         @L1A*/ 91100000
*    IFSRCK   BIT(8) CONSTANT('02'X),/* IF  STEP LEVEL RC        @L1A*/ 91150000
*    IFRCK    BIT(8) CONSTANT('03'X),/* IF  RC                   @L1A*/ 91200000
*    IFJABCCK BIT(8) CONSTANT('04'X),/* IF  JOB ABEND CODE       @L1A*/ 91250000
*    IFSABCCK BIT(8) CONSTANT('05'X),/* IF  STEP ABEND CODE      @L1A*/ 91300000
*    IFUABCK  BIT(8) CONSTANT('06'X),/* IF  USER ABEND CODE      @L1A*/ 91350000
*    IFSABCK  BIT(8) CONSTANT('07'X),/* IF  SYSTEM ABEND CODE    @L1A*/ 91400000
*    IFJABNDK BIT(8) CONSTANT('08'X),/* IF  JOB ABEND            @L1A*/ 91450000
*    IFSABNDK BIT(8) CONSTANT('09'X),/* IF  STEP ABEND           @L1A*/ 91500000
*    IFSRUNK  BIT(8) CONSTANT('0A'X),/* IF  STEP RUN             @L1A*/ 91550000
*    IFBOOLK  BIT(8) CONSTANT('0B'X),/* IF  BOOLEAN              @L1A*/ 91600000
*    IFOPERK  BIT(8) CONSTANT('0C'X);/* IF  OPERATOR             @L1A*/ 91650000
