         MACRO  --  VALIDATE CHARACTERS IN PARAMETER OR SUBLIST         00050000
&LABEL   IOSDNAME &PARM=,&KEY=,&MAXLEN=8                                00100000
         AGO   .SKIP                                                    00150000
*/********************************************************************/ 00200000
*/*                                                                  */ 00250000
*/*01*  MACRO NAME = IOSDNAME                                        */ 00300000
*/*                                                                  */ 00350000
*/*01*  DESCRIPTIVE NAME = Validate each character of the parameter  */ 00400000
*/*                                                                  */ 00450000
*/*01*  MACRO CALL =                                                 */ 00500000
*/*     label IOSDNAME PARM=symbolic parameter of keyword | sublist  */ 00550000
*/*                    ,KEY=keyword name                             */ 00600000
*/*                   <,MAXLEN=maximum length of parameter>          */ 00650000
*/*                                                                  */ 00700000
*/*01* COPYRIGHT =                                                   */ 00750000
*/*      5740-XC6                                                    */ 00800000
*/*      THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                 */ 00850000
*/*      (C) COPYRIGHT IBM CORP. 1986                                */ 00900000
*/*      LICENSED MATERIALS - PROPERTY OF IBM                        */ 00950000
*/*                                                                  */ 01100000
*/*01* STATUS = JBB2220                                              */ 01150000
*/*                                                                  */ 01200000
*/*01* FUNCTION =  Internal routine to validity check a parameter    */ 01350000
*/*                value for valid entry point or module name        */ 01400000
*/*                characters.                                       */ 01450000
*/*                                                                  */ 01500000
*/*01* NOTES =   This macro must not set &ERROR to zero.             */ 01550000
*/*                                                                  */ 01600000
*/*01* MODULE TYPE -  BAL MACRO                                      */ 01650000
*/*                                                                  */ 01700000
*/*02*   PROCESSOR   -  ASSEMBLER-H                                  */ 01750000
*/*                                                                  */ 01800000
*/*02*   ATTRIBUTES - A BAL executable macro.                        */ 01850000
*/*                                                                  */ 01900000
*/*01* REGISTER CONVENTIONS = None.                                  */ 01950000
*/*                                                                  */ 02000000
*/*01* DEPENDENCIES = EBCDIC character set.                          */ 02050000
*/*                   Invoking macro must define &ERROR as a global. */ 02100000
*/*                                                                  */ 02150000
*/*01* RESTRICTIONS = For IOS use only                               */ 02200000
*/*                                                                  */ 02250000
*/*01* CALLERS =  IOSDDT                                             */ 02300000
*/*                                                                  */ 02350000
*/*01* INPUT =    PARM= 1 to 8 character symbolic parameter          */ 02400000
*/*               KEY= 1 to 8 character keyword name                 */ 02450000
*/*               MAXLEN= maximum parameter length                   */ 02500000
*/*                                                                  */ 02550000
*/*01* OUTPUT =   &ERROR=1 if an error was encountered               */ 02600000
*/*                                                                  */ 02650000
*/*01* CHANGE ACTIVITY -                                             */ 02700000
*/*   $MAC(IOSDNAME),COMP(SC1C3):                                       02750000
*/*   $L0=IOGEN   JBB2220 850211 PDLD: IOGEN Restructure             */ 02800000
*/*   $P1=PA20149,JBB2220 850211 PDLJ: TITLE Statement placement     */ 02850000
*/*                                    caused assembler error        */ 02900000
*/*   $L1=VERS    HBB3310 860416 PDLE: Versioning macro into product */ 02950000
*/*                                                              @L1A*/ 03000000
*/********************************************************************/ 03050000
.SKIP    ANOP                                                           03100000
         GBLB  &ERROR                 Error flag (also set by caller)   03150000
         LCLA  &L                     Length of parameter value         03200000
         LCLA  &NDX                   Substring index                   03250000
         LCLC  &CWK                   Character work variable           03300000
.*                                                                      03350000
&L       SETA  K'&PARM                Set length of parameter           03400000
         AIF   (&L LE &MAXLEN).GOODLEN      Check length                03450000
         MNOTE 8,'&KEY PARAMETER VALUE ''&PARM'' EXCEEDS &MAXLEN CHARAC*03500000
               TERS'                                                    03550000
&ERROR   SETB  1                      Indicate error                    03600000
.GOODLEN ANOP                                                           03650000
.*                                                                      03700000
.********************************************************************** 03750000
.*                                                                    * 03800000
.*       Validate each character in the parameter value               * 03850000
.*                                                                    * 03900000
.********************************************************************** 03950000
.*                                                                      04000000
&NDX     SETA  1                      Points to 1st character           04050000
.*                                                                      04100000
.NAMLOOP ANOP                         Loop to validate each char        04150000
         AIF   ('&PARM'(&NDX,1) LT 'A').NATIONL     National character  04200000
         AIF   ('&PARM'(&NDX,1) LE 'I').GOODNAM     Valid char (A-I)    04250000
         AIF   ('&PARM'(&NDX,1) LT 'J').BADNAM                          04300000
         AIF   ('&PARM'(&NDX,1) LE 'R').GOODNAM     Valid char (J-R)    04350000
         AIF   ('&PARM'(&NDX,1) LT 'S').BADNAM                          04400000
         AIF   ('&PARM'(&NDX,1) LE 'Z').GOODNAM     Valid char (S-Z)    04450000
         AIF   (&NDX EQ 1).BADNAM                   First char can not  04500000
.*                                                   be numeric         04550000
         AIF   ('&PARM'(&NDX,1) LT '0').BADNAM                          04600000
         AIF   ('&PARM'(&NDX,1) LE '9').GOODNAM     Valid digit (0-9)   04650000
.NATIONL ANOP                                                           04700000
         AIF   ('&PARM'(&NDX,1) EQ '$').GOODNAM     Valid char ($)      04750000
         AIF   ('&PARM'(&NDX,1) EQ '#').GOODNAM     Valid char (#)      04800000
         AIF   ('&PARM'(&NDX,1) EQ '@').GOODNAM     Valid char (@)      04850000
.BADNAM  ANOP                         Invalid character                 04900000
&CWK     SETC  '&PARM'(&NDX,1)        Isolate invalid character         04950000
         MNOTE 8,'INVALID CHARACTER ''&CWK'' IN &KEY PARAMETER'         05000000
&ERROR   SETB  1                      Indicate error                    05050000
.*                                                                      05100000
.GOODNAM ANOP                                                           05150000
&NDX     SETA  &NDX+1                 Point to next character           05200000
         AIF   (&NDX LE &L ).NAMLOOP  Check next character              05250000
.*                                                                      05300000
.********************************************************************** 05350000
.*                                                                    * 05400000
.*       Exit                                                         * 05450000
.*                                                                    * 05500000
.********************************************************************** 05550000
.*                                                                      05600000
.EXIT    ANOP                                                           05650000
         MEND                                                           05700000
