* %                         /*                                          00050000
         MACRO                                                          00100000
&NAME    PREVNTIO  &SRB=,&RELATED=                                      00150000
         LCLC  &LEV                                                     00200000
         LCLC  &TYP                                                     00250000
         LCLC  &S                                                       00300000
&S       SETC  '&SYSNDX'                                                00350000
.********************************************************************** 00400000
.*01* MODULE NAME =   PREVNTIO                                        * 00450000
.*                                                                    * 00500000
.*01* DESCRIPTION NAME = I/O Prevention                               * 00550000
.*                                                                    * 00600000
.*01* COPYRIGHT =                                                     * 01050000
.*     5740-XC6                                                       * 01100000
.*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    * 01150000
.*     (C) COPYRIGHT IBM CORP. 1985, 1986                             * 01200000
.*     LICENSED MATERIALS - PROPERTY OF IBM                           * 01250000
.*                                                                    * 01400000
.*01* STATUS = JBB2220                                                * 01450000
.*                                                                    * 01500000
.*01* MACRO CALL  =                                                   * 01505500
.*                                                                    * 01511000
.*    Assembler-H -                                                   * 01516500
.*               label PREVNTIO  SRB=x,RELATED=x                      * 01522000
.*                                                                    * 01527500
.*    PLS/3  -                                                        * 01533000
.*              ?label: PREVNTIO  SRB(x) RELATED(x)                   * 01538500
.*                                                                    * 01544000
.*01* FUNCTION =   -                                                  * 01550000
.*                 This executable macro provides the interface       * 01600000
.*                 with the IOS I/O Prevention service module.        * 01650000
.*                                                                    * 01700000
.*                 Register 0 and 1 are used in the interface         * 01750000
.*                 to the I/O Prevention service module ( these       * 01800000
.*                 registers are not preserved across this            * 01850000
.*                 interface).  Only registers 2-13 are preserved.    * 01900000
.*                                                                    * 01950000
.*01* INPUT =                                                         * 02000000
.*           Register 1 must contain the IOPID that is to be          * 02050000
.*                      prevented.                                    * 02100000
.*           Register 13 must point to a standard 18 word save area.  * 02150000
.*                                                                    * 02200000
.*           Caller must be authorized - Supervisor state.            * 02250000
.*           Caller may be in either task or SRB mode.                * 02300000
.*           Caller must be enabled and unlocked.                     * 02350000
.*           Caller must be in 31 bit mode.                           * 02400000
.*                                                                    * 02450000
.*                                                                    * 02500000
.*           SRB  - Specifies the address of a pre-built SRB that     * 02550000
.*                  is to be scheduled upon the completion of the     * 02600000
.*                  termination of data-transfer to all halted        * 02650000
.*                  subchannels.  Optional parameter.                 * 02700000
.*                                                                    * 02750000
.*           RELATED-  Optional                                       * 02800000
.*                                                                    * 02850000
.*           LABEL  - Optional                                        * 02900000
.*                                                                    * 02950000
.*01* OUTPUT =                                                        * 03000000
.*           The IOPID identifer is unallocated and all               * 03050000
.*           active I/O has been terminated at the subchannel.        * 03100000
.*           Since the termination process is an asynchronous         * 03150000
.*           process, the return to the caller could occur before     * 03200000
.*           the completion of the terminated  requests.  That is     * 03250000
.*           to say that the subchannel has been informed to halt     * 03300000
.*           data transfer but has not necessarily notified the       * 03350000
.*           device to stop data-transfer.                            * 03400000
.*                                                                    * 03450000
.*           Register 15  - The IOS I/O prevention service module     * 03500000
.*                          sets the return code in register 15       * 03550000
.*                          and a reason code in register 0.          * 03600000
.*                          See this module for the meanings of       * 03650000
.*                          these codes.                              * 03700000
.*                                                                    * 03750000
.*01* DEPENDENCIES =  None                                            * 03800000
.*                                                                    * 03850000
.*01* ATTRIBUTES   =  This macro expands as re-entrant code.          * 03900000
.*                                                                    * 03950000
.*01* RESTRICTIONS =  None                                            * 04000000
.*                                                                    * 04050000
.*01* MODULE TYPE  =  MACRO                                           * 04100000
.*                                                                    * 04150000
.*01* PROCESSOR    =  Assembler-H and PLS3                            * 04200000
.*                                                                    * 04250000
.*01* NOTES                                                           * 04300000
.*                                                                    * 04350000
.*         The following macros are required:                         * 04400000
.*                CVT  DSECT=YES                                      * 04450000
.*                IECDIOCM                                            * 04500000
.*                IHAPSA (necessary only in PLS)                      * 04550000
.*                EPILOG (necessary only in PLS)                      * 04600000
.*                                                                    * 04650000
.*                                                                    * 04700000
.*         Registers 2 - 13 will be maintained across the             * 04750000
.*         interface.                                                 * 04800000
.*                                                                    * 04850000
.*01* CHANGE ACTIVITY -                                               * 04900000
.*                                                                    * 04950000
.* $MAC(PREVNTIO),COMP(SC1C3): I/O prevention service                 * 05000000
.*                                                                    * 05050000
.* PN  REASON   RLSE    DATE   ORG   COMMENTS                         * 05090000
.* $L0=HARP01   JBB2216 831115 PDLE: New macro                        * 05130000
.* $P1=PAP004   JBB2216 831115 PDLE: Correct ASM logic                * 05170000
.* $L1=VERS     HBB3310 860416 PDLE: Versioning macro into product    * 05210000
.*                                                                @L1A* 05250000
.********************************************************************** 05300000
         AIF   (N'&SYSLIST GT 0).PRMERR2                                05350000
.*                                                                      05400000
.*    Generate assembler code                                           05450000
.*                                                                      05500000
&NAME    DS    0H                                                       05550000
         AIF   (T'&SRB EQ 'O').LEV002       NO SRB parameter provided   05600000
         AIF   ('&SRB' EQ '(0)').LEV005     SRB address in register 0   05650000
         AIF   ('&SRB'(1,1) NE '(').LEV004  Register specified     @P1C 05700000
         LR    0,&SRB(1)                   LOAD SRB ADDRESS IN REG 0    05750000
         AGO   .LEV005                                                  05800000
.LEV002  ANOP                                                           05850000
         SR    0,0                         NO SRB ADDRESS PROVIDED      05900000
         AGO   .LEV005                                                  05950000
.LEV004  ANOP                                                           06000000
         LA    0,&SRB(1)                   SET SRB ADDRESS IN REG 0     06050000
.LEV005  ANOP                                                           06100000
         L     15,CVTPTR(0,0)              GET CVT POINTER              06150000
         L     15,CVTIXAVL-CVTMAP(0,15)    GET IOCOM POINTER            06200000
         L     15,IOCPRVT-IOCOM(0,15)      GET IOSVPRVT ENTRY POINT     06250000
         BALR  14,15                       BRANCH TO PREVENT ROUTINE    06300000
         MEXIT                                                          06350000
.PRMERR2 MNOTE 8,'***  POSITIONAL PARAMETERS ARE NOT ALLOWED.'          06400000
         MEND                                                           06450000
                                                                     */ 06500000
 /*------------------------------------------------------------------*/ 06550000
 PREVNTIO: MACRO  KEYS(SRB,RELATED);                                    06600000
   /*  EXTERNAL VARIABLES                                            */ 06650000
   DCL  EHAREGS  CHAR   EXT;       /* REGS TO BE DCLD BY EPILOG      */ 06700000
   /*  INTERNAL VARIABLES                                            */ 06750000
   DCL  INDENT   FIXED;            /* INDENT  TWO COLUMNS            */ 06800000
   DCL  IMACRO   CHAR;             /* MACRO PARAMETERS               */ 06850000
   DCL  IRFY     CHAR;             /* USED TO RESPECIFY REGS IF         06900000
                                      NECESSARY                      */ 06950000
   DCL  REG      CHAR;             /* Set to 'Y' If register notation   07000000
                                      specified for SRB address, set    07050000
                                      to 'L' for LA notation.           07100000
                                      If SRB not specified, set to      07150000
                                      'N'.                           */ 07200000
   DCL  IERRLVL  FIXED;            /* RETURN CODE IF ERRORS          */ 07250000
   DCL  IERRMSG  CHAR;             /* ERROR MESSAGE PRINTED          */ 07300000
   IMACRO=' ?'||MACLABEL||MACNAME||MACLIST||' '||MACKEYS||' ';          07350000
   INDENT=MACCOL+2;                                                     07400000
   IERRLVL=0;                                                           07450000
 /*-----------------VERIFY NO POSITIONAL PARAMETERS------------------*/ 07500000
   IF NUMBER(MACLIST) > 0  THEN      /* No positional parameters     */ 07550000
     DO;                                                                07600000
       IERRLVL = 8;                                                     07650000
       IERRMSG = ' POSITIONAL PARAMETERS ARE NOT ALLOWED.';             07700000
       ANS MSG(IERRMSG);                                                07750000
       ANS (COMMENT(IERRMSG))   COL(INDENT);                            07800000
     END;                                                               07850000
 /*-----------------VERIFY NO POSITIONAL PARAMETERS------------------*/ 07900000
   IF IERRLVL~= 0 THEN               /* No positional parameters     */ 07950000
     DO;                                                                08000000
       ANS(COMMENT('INVALID PARAMETERS ENCOUNTERED.                     08050000
       NO CODE GENERATED.;'))                                           08100000
           COL(INDENT);                                                 08150000
       ANS(  COMMENT(IMACRO)) COL(MACCOL);                              08200000
       RETURN CODE(IERRLVL);        /* Return with non-zero RC       */ 08250000
     END;                                                               08300000
 /*-----------------GENERATE MACLABEL--------------------------------*/ 08350000
   IF MACLABEL~='' THEN              /* GENERATE MACLABEL            */ 08400000
      ANS(MACLABEL)  COL(MACLMAR);                                      08450000
   ANS('DO; '|| COMMENT(IMACRO)) COL(MACCOL); /* START CODE & LIST      08500000
                                                 MACRO PARAMETERS    */ 08550000
 /*-----------------PRODUCE PLS CODE---------------------------------*/ 08600000
 /*  CHECK TO SEE IF REGS ALREADY DCLD.  IF NOT, ADD TO EHAREGS      */ 08650000
 IRFY='GPR00P';                                                         08700000
 IF INDEX(EHAREGS,'00P')=0 THEN    /* HAS REG0 BEEN DECLARED         */ 08750000
    EHAREGS=EHAREGS||'00P';        /* NO, ADD TO EHAREGS             */ 08800000
 ANS('RFY  ' ||IRFY|| '    RSTD; ')   COL(INDENT);                      08850000
 /*---Establish how SRB parameter specified--------------------------*/ 08900000
 IF  SRB     = ''   THEN          /* No SRB parameter specified      */ 08950000
   REG = 'N';                     /* Indicate no SRB parameter       */ 09000000
 ELSE                                                                   09050000
   IF (SRB(1,1:1) = '(') &        /* Register notation specified ??  */ 09100000
     (INDEX(SRB(1),'->')) = 0 THEN /* AND no pointer notation           09150000
                                      specified within double set       09200000
                                      of parenthesis                 */ 09250000
     REG = 'Y';                   /* Indicate register notation      */ 09300000
   ELSE                                                                 09350000
     REG = 'L';                   /* Indicate LA notation required   */ 09400000
 /*---Establish SRB address or zero in register 0--------------------*/ 09450000
 IF REG = 'L'   THEN              /* Load Address notation specified */ 09500000
   DO;                                                                  09550000
     ANS('GPR00P = ADDR( ' ||  SRB(1)  ||'); '||                        09600000
     COMMENT(' REG0 = SRB ADDRESS '))     COL(INDENT);                  09650000
   END;                                                                 09700000
  ELSE                                                                  09750000
    IF  REG = 'Y'  THEN            /* Register notation specified    */ 09800000
      DO;                                                               09850000
        ANS('GPR00P = ' ||  SRB(1,2:LENGTH(SRB(1))-1) ||'; '||          09900000
        COMMENT(' LOAD REGISTER 0 WITH SRB ADDRESS '))   COL(INDENT);   09950000
      END;                                                              10000000
    ELSE                                                                10050000
      ANS('GPR00P='||'0'||'; '||                                        10100000
      COMMENT(' NO SRB ADDRESS     '))     COL(INDENT);                 10150000
 /*---Establish call to Prevent I/O module---------------------------*/ 10200000
 ANS('CALL  FLCCVT->CVTIXAVL->IOCPRVT->IOCVPRVT; '||                    10250000
    COMMENT(' CALL IOS IOSVPRVT ROUTINE '))  COL(INDENT);               10300000
 ANS('RFY  ' ||IRFY|| '  UNRSTD; ')  COL(INDENT);                       10350000
 ANS('END; '||COMMENT(IMACRO))  COL(MACCOL); /* END CODE & LIST         10400000
                                                MACRO PARAMETERS    */  10450000
 %END PREVNTIO;                                                         10500000
