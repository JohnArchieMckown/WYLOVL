*%GOTO DDOSPEC;                                                         00050000
*/*                                                                     00100000
         MACRO                                                          00150000
         AMDSADDO  &CONSOLE=,&OUTPUT=,&DUMP=                            00200000
**/                                                                     00250000
*%DDOSPEC: ;                                                            00300000
*/** START OF SPECIFICATIONS ****************************************** 00350000
*                                                                       00400000
*01* MACRO NAME: AMDSADDO                                               00450000
*                                                                       00500000
*01* DESCRIPTIVE NAME: Devices and Dump Options                         00550000
*                                                                       00600000
*02*   ACRONYM: DDO                                                     00650000
*                                                                       00700000
*01* DSECT NAME: DDO, DDOCONSD, DDOOUTPD, DDODUMPD, CONSDATA            00750000
*                                                                       00800000
*01* COMPONENT: Stand-Alone Dump (SC115)                          @01C  00850000
*                                                                       00900000
*01* PROPRIETARY STATEMENT:                                             00950000
*                                                                       01000000
*      LICENSED MATERIALS - PROPERTY OF IBM                             01050000
*      THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      01100000
*      5647-A01 (C) COPYRIGHT IBM CORP. 1990, 2000                      01150000
*                                                                       01250000
*01* STATUS: HBB7703                                               @L2C 01300000
*                                                                       01350000
*01* FUNCTION: Save area for AMDSADMP devices and dump options          01400000
*                                                                       01450000
*01* METHOD OF ACCESS:                                                  01500000
*                                                                       01550000
*02*   ASSEMBLER: (see invocation in AMDSADM2)                          01600000
*                                                                       01650000
*        AMDSADDO CONSOLE=......,OUTPUT=......,DUMP=.....               01700000
*                                                                       01750000
*02*   PL/S:                                                            01800000
*                                                                       01850000
*        %INCLUDE SYSLIB(AMDSADDO)                                      01900000
*                                                                       01950000
*01* POINTED TO BY: CTGTDDOP                                            02000000
*                                                                       02050000
*01* BASED ON: N/A                                                      02100000
*                                                                       02150000
*01* CREATED BY: AMDSADM2                                               02200000
*                                                                       02250000
*01* DELETED BY: N/A                                                    02300000
*                                                                       02350000
*01* EYE-CATCHER ID: AMDSADDO                                     @01C  02400000
*                                                                       02450000
*02*   OFFSET: 0                                                        02500000
*                                                                       02550000
*02*   LENGTH: 8                                                        02600000
*                                                                       02650000
*01* STORAGE ATTRIBUTES:                                                02700000
*                                                                       02750000
*02*   SUBPOOL: N/A                                                     02800000
*                                                                       02850000
*02*   KEY: 0                                                           02900000
*                                                                       02950000
*02*   RESIDENCY: Virtual storage above 16MB                            03000000
*                                                                       03050000
*01* SIZE: Maximum of 4096 bytes                                        03100000
*                                                                       03150000
*01* FREQUENCY: One                                                     03200000
*                                                                       03250000
*01* SERIALIZATION: N/A                                                 03450000
*                                                                       03500000
*01* NOTES: N/A                                                         03550000
*                                                                       03600000
*01* DEPENDENCIES:                                                      03650000
*                                                                       03700000
*        AMDSADDO is dependent on AMDSADMP syntax checking AMDSADDO's   03750000
*        keyword values.                                                03800000
*                                                                       03850000
*                                                                       03900000
*01* DISTRIBUTION LIBRARY: AMODGEN                                      03950000
*                                                                       04000000
*01* PUBLICATIONS: MVS/ESA Component Diagnosis and Logic: Service Aids  04050000
*                                                                       04062500
*01* EXTERNAL CLASSIFICATION: None                                @01A  04075000
*01* END OF EXTERNAL CLASSIFICATION                               @01A  04087500
*                                                                       04100000
*01* CHANGE ACTIVITY:                                                   04150000
*                                                                       04200000
* $MAC(AMDSADDO),COMP(SC115),PROD(HBB4420): Devices and Dump Options    04250000
*                                                                       04300000
* FLAG REASON   RELEASE    DATE   ORIGIN                                04350000
*                                                                       04400000
* $L0= CIHWE    HBB4420   891211  PD1X:  Dump Restructure          @L0A 04450000
* $P1= PH30453  HBB4420   900122  PD1X:  Continuation marks in wrong    04466600
*                                        column.                   @P1A 04483200
* $L1= 4DGIT    HBB5510   930304  PDCU:  4-digit Device support    @L1A 04491600
* $01= OW20377  HBB5510   960531  PDNO:  Allow default dump dataset     04494400
*                                        name to be used           @01A 04497200
* $L2= 64BIT    HBB7703   990603  B7VBGD:64 bit real support       @L2A 04498600
*                                                                       04500000
**** END OF SPECIFICATIONS *******************************************/ 04550000
*%GOTO DDOPLS;      /*                                                  04600000
         TITLE 'AMDSADDO    Devices and Dump Options'                   04650000
         LCLC  &CONADDR,&CONTYPE                                        04700000
         LCLC  &OUTADDR,&OUTTYPE,&OUTDEV,&OUTDDS                   @01C 04750000
         LCLA  &INDEX,&I,&OUTSTRT                                  @L1C 04800000
         LCLA  &NUMCONS                                                 04850000
         LCLA  &NUMOUTP                                                 04900000
         LCLC  &DLIST                                                   04950000
         LCLC  &Q,&QQ                                                   05000000
.*                                                                      05050000
&Q       SETC  ''''              Single quote                           05100000
&QQ      SETC  ''''''            Double quote                           05150000
.*                                                                      05200000
AMDSADDO CSECT                                                          05250000
**********************************************************************  05300000
*                                                                    *  05350000
*  Initial values are assembled in during the dump residence volume  *  05500000
*  initialization process. This allows information obtained from the *  05550000
*  AMDSADMP or AMDSADM2 keywords to be made available to the         *  05600000
*  program.                                                          *  05650000
*                                                                    *  05750000
**********************************************************************  05800000
         SPACE 1                                                        05850000
DDO      DS    0F                Devices and Dump Options               05900000
         SPACE 1                                                        05950000
DDOLEN   EQU   4096              Length of DDO: always a page in length 06000000
         SPACE 1                                                        06100000
DDOEYECT DC    C'AMDSADDO'       EBCDIC identifier                      06150000
         SPACE 1                                                        06200000
DDOCONSO DC    A(DDOCONSD-DDO)   Offset to CONSOLE options              06250000
DDOCONSL DC    A(DDOCONSE-DDOCONSD) Length of CONSOLE options           06300000
DDOCONSN DS    F                 Number of consoles in CONSOLE options  06350000
         SPACE 1                                                        06400000
DDOOUTPO DC    A(DDOOUTPD-DDO)   Offset to OUTPUT specification         06450000
DDOOUTPL DC    A(DDOOUTPE-DDOOUTPD) Length of OUTPUT specification      06500000
DDOOUTPN DS    F                 Number of devices in OUTPUT options   X06550000
                                 (set to 1)                             06600000
         SPACE 1                                                        06650000
DDODUMPO DC    A(DDODUMPD-DDO)   Offset to DUMP options                 06700000
DDODUMPL DC    A(DDODUMPE-DDODUMPD) Length of DUMP options              06750000
         SPACE 1                                                        06800000
         DC    100C' '           Reserved                               06850000
         SPACE 1                                                        06900000
         DS    0F                Align DDOCONSD to word boundary        06950000
DDOOPTNS EQU   *                 Options data                           07000000
DDOCONSD DS    0XL5              CONSOLE options consist of a list of  X07050000
                                 operator consoles                      07100000
TYPE3277 EQU   X'80'             Console type indicator                 07150000
TYPE3278 EQU   X'80'             Console type indicator                 07200000
TYPE3279 EQU   X'80'             Console type indicator                 07250000
TYPE3290 EQU   X'80'             Console type indicator                 07300000
TYPESYSC EQU   X'40'             System console type indicator     @L2A 07325000
&NUMCONS SETA  0                 Start number of consoles at zero       07350000
&INDEX   SETA  3                 Start loop counter at first           X07400000
                                 character of console address. (Skip   X07450000
                                 first two open parens)                 07500000
.CONLOOP ANOP                    Loop through CONSOLE input             07550000
         AIF   (K'&CONSOLE LT &INDEX).CONSEND Check for more CONSOLE   X07600000
                                 input                                  07650000
&I       SETA  1                 Start console address length at 1 @L1A 07677700
.INLOOP  AIF   ('&CONSOLE'(&INDEX+&I,1) EQ ',').CHKSLSH At comma?  @L1C 07705400
&I       SETA  &I+1              Bump console address length       @L1A 07733100
         AGO   .INLOOP           Continue loop                     @L1A 07760800
.CHKSLSH ANOP                                                      @L1A 07764700
         AIF   ('&CONSOLE'(&INDEX,1) NE '/').MINCONL               @L1A 07768600
&INDEX   SETA  &INDEX+1          Increase starting index if '/' is     X07772500
                                 seen                              @L1A 07776400
&I       SETA  &I-1              Decrease length of console address    X07780300
                                 if '/' is seen                         07784200
.MINCONL ANOP                    Validity check length             @L1A 07788100
         AIF   (&I GE 3).MAXCONL                                   @L1A 07792000
&I       SETA  3                                                   @L1A 07795900
.MAXCONL ANOP                                                      @L1A 07799800
         AIF   (&I LE 4).SAVADDR                                   @L1A 07803700
&I       SETA  4                                                   @L1A 07807600
.SAVADDR ANOP                                                      @L1A 07811500
&CONADDR SETC  '&CONSOLE'(&INDEX,&I) Extract console address       @L1C 07816200
&INDEX   SETA  &INDEX+&I+1       Move loop counter beyond console      X07843900
                                 address plus comma                @L1C 07871600
&CONTYPE SETC  'TYPE'.'&CONSOLE'(&INDEX,4) Extract this entrys four    X07900000
                                 character console type                 07950000
**********************************************************************  08000000
*                                                                    *  08050000
* An assembler error after the next statement means that the console *  08100000
* type specified in the CONSOLE= parameter of the AMDSADMP macro is  *  08150000
* either not valid or not supported.                                 *  08200000
*                                                                    *  08250000
**********************************************************************  08300000
&INDEX   SETA  &INDEX+6          Move loop counter beyond four         X08350000
                                 character console type plus a closed  X08400000
                                 paren, plus a comma or closed paren    08450000
         DC    FL2'0',XL2'&CONADDR',AL1(&CONTYPE) Defines a possible   X08500000
                                 SADMP operator console and type        08550000
&NUMCONS SETA  &NUMCONS+1        Increment number of consoles defined   08600000
&INDEX   SETA  &INDEX+1          Move loop counter to next character    08650000
         AGO   .CONLOOP          Go check for more input                08700000
.CONSEND ANOP                    End of CONSOLE input                   08750000
DDOCONSE EQU   *                 End of CONSOLE input                   08800000
         ORG   DDOCONSN          Go back to fill in number of consoles  08850000
         DC    F'&NUMCONS'       Number of consoles                     08900000
         ORG   DDOCONSE          Return to end of CONSOLE data          08950000
         SPACE 1                                                        09000000
&OUTDDS  SETC ' '                     Initialize Dataset name      @01A 09000200
&OUTDEV  SETC '&OUTPUT'               Assume only output device    @01A 09000400
         AIF  ('&OUTDEV'(1,1) NE '(').NODDSN  Is dataset name syntax   X09000600
                                      being used?                      X09000800
                                      No.  Set device only             X09001000
                                      Yes. Set both device and dataset X09001200
                                           name                    @01A 09001400
&OUTDEV  SETC ''                      Reinitialize output device   @01A 09001600
&OUTDDS  SETC ''                      Reinitialize dataset name    @01A 09001800
&INDEX   SETA 2                       Set loop index               @01A 09002000
.LOOP1   ANOP                         Loop to find output device   @01A 09002200
         AIF (&INDEX EQ K'&OUTPUT).NODDSN  Was end of output reached   X09002400
                                      before finding output device?    X09002600
                                      Yes. Exit                        X09002800
                                      No.  Continue                @01A 09003000
         AIF ('&OUTPUT'(&INDEX,1) EQ ',').DEVOK   Is end of output     X09003200
                                      device reached?                  X09003400
                                      Yes. Device is set               X09003600
                                      No.  Continue                @01A 09003800
&OUTDEV  SETC '&OUTDEV'.'&OUTPUT'(&INDEX,1)  Set output device     @01A 09004000
&INDEX   SETA &INDEX+1                Increment index              @01A 09004200
         AGO .LOOP1                   Branch to LOOP1              @01A 09004400
.DEVOK   ANOP                         Device is good               @01A 09004600
&INDEX   SETA &INDEX+1                Move past comma              @01A 09004800
.LOOP2   ANOP                         Loop to find dataset name    @01A 09005000
         AIF (&INDEX EQ K'&OUTPUT).NODDSN  Was end of output reached   X09005200
                                      before finding dataset name?     X09005400
                                      Yes. Exit                        X09005600
                                      No.  Continue                @01A 09005800
         AIF ('&OUTPUT'(&INDEX,1) EQ ')').DDSOK   Is end of dataset    X09006000
                                      name reached?                    X09006200
                                      Yes. Dataset name is set         X09006400
                                      No.  Continue                @01A 09006600
&OUTDDS  SETC '&OUTDDS'.'&OUTPUT'(&INDEX,1)  Set dataset name      @01A 09006800
&INDEX   SETA &INDEX+1                Increment index              @01A 09007000
         AGO .LOOP2                   Branch to LOOP2              @01A 09007200
.DDSOK   ANOP                         Dataset name is good         @01A 09007400
.NODDSN  ANOP                                                           09007600
&OUTSTRT SETA  2                 Set start of output address at 2       09010000
         AIF  ('&OUTDEV'(&OUTSTRT,1) NE '/').SAVOUT                @01C 09020000
&OUTSTRT SETA  3                 Set start of output address at 3  @L1A 09030000
.SAVOUT  ANOP                                                           09040000
         DS    0F                Align DDOOUTPD to word boundary        09050000
DDOOUTPD DS    0XL47             OUTPUT specification              @01C 09100000
&OUTTYPE SETC  '&OUTDEV'(1,1)    Extract this entrys one character     X09150000
                                 output device type                @01C 09200000
&OUTADDR SETC  '&OUTDEV'(&OUTSTRT,4)  Extract this entrys output       X09250000
                                      device address               @01C 09300000
**********************************************************************  09350000
*                                                                    *  09400000
* An assembler error after the next statement means that the output  *  09450000
* type specified in the OUTPUT= parameter of the AMDSADMP macro is   *  09500000
* either not valid or not supported.                                 *  09550000
*                                                                    *  09600000
**********************************************************************  09650000
         DC    XL2'&OUTADDR',CL1'&OUTTYPE' Defines a possible SADMP    X09700000
                                 output device and its type             09750000
         DC    CL44'&OUTDDS'     OUTPUT dataset name specification @01A 09775000
DDOOUTPE EQU   *                 End of OUTPUT input                    09800000
         ORG   DDOOUTPN          Go back and fill in number of devices  09850000
         DC    F'1'              Number of output devices is one        09900000
         ORG   DDOOUTPE          Return to end of OUTPUT data           09950000
         SPACE 1                                                        10000000
         DS    0F                Align DDODUMPD to word boundary        10050000
         SPACE 1                                                        10100000
         AIF (K'&DUMP EQ 0).NODUMP  Check for DUMP input                10150000
&INDEX   SETA  0                 Set loop counter to 0                  10200000
         SPACE 1                                                        10250000
.QLOOP   ANOP                    Loop to search for quotes              10300000
         AIF   (&INDEX EQ K'&DUMP).QLPEND Check for end of input        10350000
&INDEX   SETA  &INDEX+1          Move loop counter to next character    10400000
         AIF   ('&DUMP'(&INDEX,1) EQ '&Q').QFOUND Check for a quote     10450000
&DLIST   SETC  '&DLIST'.'&DUMP'(&INDEX,1) Not a quote, so add to input X10500000
                                 list                                   10550000
         AGO   .QLOOP            Continue to loop, looking for quotes   10600000
         SPACE 1                                                        10650000
.* Drop the opening and closing quotes.                                 10700000
.QFOUND  ANOP                    Process the quote                      10750000
         AIF   (&INDEX EQ 1 OR &INDEX EQ 2).QLOOP Check for first two  X10800000
                                 characters as quotes                   10850000
         AIF   (&INDEX EQ K'&DUMP OR &INDEX EQ K'&DUMP-1).QLOOP Check  X10900000
                                 for last two characters as quotes      10950000
&DLIST   SETC  '&DLIST'.'&QQ'    Replace any intervening quote (one    X11000000
                                 which is not an opening nor closing   X11050000
                                 quote) with a double quote        @P1C 11100000
         AGO   .QLOOP                                                   11150000
.QLPEND  ANOP                    End of looking for quotes              11200000
DDODUMPD DC    C'DUMP=',C'&DLIST',F'0' DUMP options for AMDSAPRS        11250000
         AGO   .DUMPEND                                                 11300000
.NODUMP  ANOP                                                           11350000
DDODUMPD DC    F'0'              DUMP= input for AMDSAPRS               11400000
.DUMPEND ANOP                                                           11450000
DDODUMPE EQU   *                 End of DUMP input                      11500000
         SPACE 1                                                        11550000
DDOSPARE EQU   (*-AMDSADDO)                                             11600000
         DC    (DDOSPARE/4)C'DDO '  The calculation of this value      X11650000
                                 will cause an error if the DDO        X11700000
                                 exceeds its allowed bounds             11750000
         MEND                                                           11800000
*                                                                    */ 11850000
*%DDOPLS: ;                                                             11900000
* @EJECT;                                                               11950000
*   /*                                                                  12000000
*      AMDSADMP Devices and Dump Options (DDO).                         12050000
*      This is the save area for SADMP devices and dump options.     */ 12100000
*                                                                       12200000
*   DECLARE                                                             12250000
*     1 DDO CHAR(4096) BASED BDY(DWORD), /* Devices and Dump Options */ 12300000
*      3 DDOEYECT CHAR(8),          /* EBCDIC identifier "AMDSADDO"  */ 12350000
*      3 DDOCONSO PTR(31),          /* Offset to CONSOLE options     */ 12400000
*      3 DDOCONSL FIXED(31),        /* Length of CONSOLE options     */ 12450000
*      3 DDOCONSN FIXED(31),        /* Number of consoles in CONSOLE */ 12500000
*                                   /* options                       */ 12550000
*      3 DDOOUTPO PTR(31),          /* Offset to OUTPUT specification*/ 12600000
*      3 DDOOUTPL FIXED(31),        /* Length of OUTPUT specification*/ 12650000
*      3 DDOOUTPN FIXED(31),        /* Number of devices in OUTPUT   */ 12700000
*                                   /* specification (set to 1)      */ 12750000
*      3 DDODUMPO PTR(31),          /* Offset to DUMP options        */ 12800000
*      3 DDODUMPL FIXED(31),        /* Length of DUMP options        */ 12850000
*      3 * CHAR(100),               /* Reserved                      */ 12900000
*      3 DDOOPTNS CHAR BDY(WORD),   /* Options data                  */ 12950000
*     1 DDOCONSD(*) CHAR(5) BASED(ADDR(DDO)+DDOCONSO), /* CONSOLE    */ 13000000
*                                   /* data                          */ 13050000
*      3 DDOCONFG CHAR(2),          /* Flags                         */ 13100000
*      3 DDOCONAD CHAR(2),          /* Console device address        */ 13150000
*      3 DDOCONTP CHAR(1),          /* Console device type           */ 13200000
*     1 DDOOUTPD(*) CHAR(47) BASED(ADDR(DDO)+DDOOUTPO), /* Output@01C*/ 13250000
*                                   /* device data                   */ 13300000
*      3 DDOOUTAD CHAR(2),          /* Output device address         */ 13500000
*      3 DDOOUTTP CHAR(1),          /* Output device type            */ 13550000
*      3 DDOOUTDS CHAR(44),         /* Output dump dataset name  @01A*/ 13575000
*     DDODUMPD CHAR(*) BASED(ADDR(DDO)+DDODUMPO), /* DUMP data       */ 13600000
*     DDOSPARE CHAR(*) BASED(ADDR(DDO)+DDODUMPO+DDODUMPL), /*        */ 13650000
*                                   /* Reserved                      */ 13700000
*                                                                       13750000
*     1 CONSDATA(*) CHAR(5) BASED,  /* CONSOLE data mapping          */ 13800000
*      2 CONSELEM CHAR(5),          /* Element in console list array */ 13850000
*       3 CONSSID BIT(32),          /* Subchannel ID (SID)           */ 13900000
*        5 CONSFLAG BIT(16),        /* Flags                         */ 13950000
*        5 CONSADDR BIT(16),        /* Console device address        */ 14000000
*       3 CONSTYPE BIT(8),          /* Console device type           */ 14050000
*        5 CONS3277 BIT(1),         /* 3277/3278/3279/3290 types     */ 14100000
*        5 CONSSYSC BIT(1),         /* Hardware system console   @L2C*/ 14133300
*        5 * BIT(6),                /* Reserved                  @L2C*/ 14166600
*                                                                       14200000
*     DDOID CHAR(8) CONSTANT('AMDSADDO'), /* Eye-catcher id          */ 14250000
*     MAXCONS FIXED(31) CONSTANT(21), /* Maximum number of consoles  */ 14300000
*                                   /* allowed                       */ 14350000
*     MAXOUTD FIXED(31) CONSTANT(2), /* Maximum number of output     */ 14400000
*                                   /* devices allowed               */ 14450000
*     OUTDEVLN FIXED(31) CONSTANT(4); /* Number of numerics in       */ 14500000
*                                   /* output device address     @L1C*/ 14550000
