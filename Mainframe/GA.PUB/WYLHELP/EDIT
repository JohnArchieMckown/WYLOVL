.cs 3 on
.item 'EDIT Command' 'Updated on 06/26/85 by AEH'
.boxon
EDIT [range] [COLUMNS=m[/n]] [SINGLE] [UPPER|UPLOW]
     [[OVER\n] [UNDER\n]|EQUAL\n] [list-options] [length-options]
.boxoff

.* DESCRIPTION
The EDIT command allows you to make multiple changes to a line or range of
lines.  Unlike MODIFY, EDIT consists of character for character replacement;
thus, you cannot insert or delete a character without replacing characters in
the line.

.ix 'EDIT Characters'
.ix 'EDIT Characters' '|'
.ix '|' 'as EDIT Character'
WYLBUR always lists the line to be edited first.  Then it prompts you with
"Edits\>\\".  In response, space over and type in the replacement characters
directly underneath the characters to be replaced.  To replace a character
with a blank, you must type a vertical bar (|).  If you type a vertical bar
under a blank, WYLBUR inserts a vertical bar.  Signal the end of your
alterations by pressing the RETURN key.  WYLBUR types the edited line for
inspection (unless you specify NOLIST) and prompts for more alterations to the
line (unless you specify SINGLE).  If you press the BREAK key, the alteration
process stops and the line being edited remains unchanged.

.cs 2 on
EDIT Characters
---------------
.cs 2 off
.us EDIT Characters

There are several characters that provide special functions when you type one
of them as the first character in response to the Edits prompt.  They are as
follows:

.ix 'EDIT Characters' L
.ix L 'as EDIT Character'
L\\\\\\\Typing L (for LIST), as the first character in response to the Edits
        prompt, specifies that the corrected line should be listed.  LIST is
        the default list-option for this command.  (See the description of
        list-options below for an explanation.)\

.ix 'EDIT Characters' M
.ix M 'as EDIT Character'
M\\\\\\\Typing M (for MODIFY), as the first character in response to the Edits
        prompt, allows you to alter the remainder of the line with modify
        characters.

.ix 'EDIT Characters' N
.* 09/17/86 18:32 GG.LSO
.* The use of &SYSBS.&SYSRB is used in the following index entry in order to
.* get the 'N' (uppercase n) entry as a separate entry from 'n' (lowercase N).
.ix 'N&SYSBS.&SYSRB' 'as EDIT Character'
N\\\\\\\Typing N (for NOLIST), as the first character in response to the Edits
        prompt, specifies that the corrected line should not be listed.
        NOLIST is also an option of the EDIT command.  (See the description of
        the list-options below for an explanation.)\

.ix 'EDIT Characters' ?
.ix '?' 'as EDIT Character'
?\\\\\\\Typing a question mark (?), as the first character in response to the
        Edits prompt, gives you a description of some of the appropriate
        responses to this prompt.

.ix 'EDIT Line-Oriented Functions'
.cs 2 on
Line-Oriented Functions
-----------------------
.cs 2 off
.us Line-Oriented Functions

You can enter a line-oriented function in response to the Edits prompt; you
must precede it by a period and enter it beginning in column 0 (i.e., the
position of the cursor after the Edits prompt).  The available line-oriented
functions are listed below.

.pa
.ix 'EDIT Line-Oriented Functions' '.COLLECT'
.ix '.COLLECT' 'on EDIT Command'
   .COLLECT    causes a prompt for new lines after the line being edited.
   (or .C)     Collecting new lines implies the acceptance of the editing
               changes to the current line.

.ix 'EDIT Line-Oriented Functions' '.DELETE'
.ix '.DELETE' 'on EDIT Command'
   .DELETE     deletes the line.
   (or .D)

.ix 'EDIT Line-Oriented Functions' '.INSERT'
.ix '.INSERT' 'on EDIT Command'
   .INSERT     causes a prompt for a new line after the line being edited.
   (or .I)     Inserting a new line implies the acceptance of the editing
               changes to the current line.

.ix 'EDIT Line-Oriented Functions' '.JOIN'
.ix '.JOIN' 'on EDIT Command'
   .JOIN       appends the next line to the line currently being edited.
   (or .J)

.ix 'EDIT Line-Oriented Functions' '.LINE'
   .LINE\n     accepts editing changes to the current line and then begins the
               editing process for the line indicated.

.ix 'EDIT Line-Oriented Functions' '.MODIFY'
.ix '.MODIFY' 'on EDIT Command'
   .MODIFY     accepts the editing changes to the current line and then
   (or .M)     switches to MODIFY mode.

.ix 'EDIT Line-Oriented Functions' '.NEXT'
.ix '.NEXT' 'on EDIT Command'
   .NEXT       accepts editing changes to the current line and then begins
               the editing process for the next line.

.ix 'EDIT Line-Oriented Functions' '.PREVIOUS'
.ix '.PREVIOUS' 'on EDIT Command'
   .PREVIOUS   accepts editing changes to the current line and then begins
               the editing process for the previous line.

.ix 'EDIT Line-Oriented Functions' '.REPLACE'
.ix '.REPLACE' 'on EDIT Command'
   .REPLACE    replaces the entire line.  A line prompt for the
   (or .R)     replacement will follow.

.ix 'EDIT Line-Oriented Functions' '.REVERT'
   .REVERT     returns the line to its original state (i.e., before any
               modifications were made).

.ix 'EDIT Line-Oriented Functions' '.SKIP'
.ix '.SKIP' 'on EDIT Command'
   .SKIP       ignores editing changes to the current line and the editing
               process proceeds with the next line in the range.

.ix 'EDIT Line-Oriented Functions' '.STOP'
.ix '.STOP' 'on EDIT Command'
   .STOP       terminates the entire command.  Any editing changes to the
               current line are ignored.

.ix '(BREAK)'
.ix 'BREAK key'
.ix key BREAK
.cs 2 on
BREAK Key
---------
.cs 2 off
.us BREAK Key

In the EDIT and MODIFY commands, BREAK is a special key that, when used with
other keys, allows processing of the line being edited just as pressing the
RETURN key does.  This is unlike the use of the BREAK key in other WYLBUR
commands.  The following summarizes the use of the BREAK key with both the
EDIT and the MODIFY commands:

   1.\(BREAK):  when pressed as the first character in response to the Edits
      or Mods prompt, aborts the command and leaves the line currently being
      edited unchanged.  However, remember that when you press BREAK in
      response to the Edits or Mods prompt AFTER you have typed other
      characters (including blanks), the typed line is canceled and WYLBUR
      prompts again for the line being edited.  Lines already terminated by
      pressing the RETURN key are not affected when the BREAK key is pressed.

.ix '@(BREAK)'
.ix 'BREAK key' 'use with @'
.ix key BREAK 'use with @'
   2.\@(BREAK):  does the editing specified and then gives a prompt for the
      current line in SINGLE mode or goes on to the next line in multiple
      mode.

.* SELECT 'EDIT Command Options'
.us Option Descriptions

.* OPTION RANGE
.optix range
range\\\\\\\\\\\is the range of lines to be edited.  If specified, it must be
                the first option.  If this option is not specified, the entire
                file is assumed.  Type HELP RANGE for a description of range.

.* OPTION COLUMNS,COLS
.optix COLUMNS
COLUMNS=m[/n]\\\restricts the editing to the columns specified.  When n is
                specified, editing take place from column m to the end of the
                line.  m/n gives a specific number of columns to be modified.
                When text is deleted, blanks are inserted at the ending column
                and any text past the last column specified will be lost (a
                message to that effect will be displayed at your terminal).

.* OPTION SINGLE,S
.optix SINGLE
SINGLE\\\\\\\\\\causes WYLBUR to prompt you for the alteration of a line only
                once instead of continuing to prompt you until you press the
                RETURN key as the first character of the line.

.* OPTION UPPER,UPLOW
.optix UPPER
.optix UPLOW
UPPER|UPLOW\\\\\when specified with EDIT, UPPER or UPLOW provides a temporary
                override of the session case setting.  UPLOW causes WYLBUR to
                retain the case (upper, lower, or a mixture) of the text as it
                is edited.  UPPER causes WYLBUR to convert all lowercase
                letters to uppercase as the text is edited.  (Type HELP
                SET TERMINAL CASE for a description of case settings.)\

.* OPTION OVER
.optix OVER
OVER\n\\\\\\\\\\prompts for changes to lines which are over n characters long.
                "n" is an integer between 0 and 235, inclusive.  OVER can be
                used with UNDER to select lines between the specified lengths.

.* OPTION UNDER
.optix UNDER
UNDER\n\\\\\\\\\prompts for changes to lines which are under n characters
                long.  "n" is an integer between 0 and 235, inclusive.  UNDER
                can be used with OVER to select lines between the specified
                lengths.

.* OPTION EQUAL
.optix EQUAL
EQUAL\n\\\\\\\\\prompts for changes to lines which are exactly n characters
                long.  "n" is an integer between 0 and 235, inclusive.

.* OPTION LIST-OPTIONS,LIST,NOLIST,NOTEXT,NUMBERED,UNNUMBERED,NONUMBERED,INTEGER
.optix list-options
list-options\\\\LIST, the default for this command, lists the corrected line;
                this option can be suppressed by specifying NOLIST.  For
                additional list-options, type HELP LIST-OPTIONS.  See the
                description of the EDIT characters above for another way to
                specify LIST and NOLIST.

.* OPTION LENGTH-OPTIONS,LENGTH,NOLENGTH
.optix length-options
length-options\\override the global length parameter (established with the SET
                LENGTH command).  If you specify NOLENGTH, the warning message
                about excess length will not be issued (unless the line is
                over 235 characters).  Type HELP LENGTH-OPTIONS for a
                description of the length-options.
.cs 3 off
