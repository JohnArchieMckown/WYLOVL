.cs 2 on
.item 'ON ERROR Statement' 'Added 12/21/87 by AHJ'
.boxon
ON ERROR [COMMAND='command'] [REENABLE]
.boxoff

.* DESCRIPTION
The ON ERROR statement lets you add a general error routine to an extended
EXEC.  Use the TRY command to catch specific, anticipated errors; ON ERROR
should be used to catch errors you cannot anticipate.  The error routine
should be used primarily for terminating or restarting the EXEC.

On the first error encountered, your EXEC file executes the specified command.
It also sets the following variables:

ERROR    (boolean)    TRUE if an error has occurred, FALSE otherwise.

ERRMSG    string    the message WYLBUR sends out when it encounters the
                    error.  For example:  'FOO not on PUB008'

ERRID     string    an 8 character id of the error.  For example:
                    'NOTONVOL'.  ERRID is set to 'OK      '
                    if the command executes successfully.

ERRINFO   string    a message indicating where the error occurred:
                    'EXEC error at line 11 of EXEC:  SCRIPT'

Your EXEC file should never be dependent on the exact phrasing of ERRMSG or
ERRINFO, as they may change in new releases of WYLBUR.  ERROR and ERRID,
however, should not change.  These error variables are reset on subsequent
errors.

ON ERROR REENABLE re-enables the error exit.  The CLEAR ERROR command clears
the error variables.

.* SELECT 'ON ERROR Statement Options'
.us Option Descriptions

.* OPTION COMMAND,CMD
.optix COMMAND
COMMAND='command'
\\\\\\\\\\\\\\\\specifies the command to execute when an error occurs.  This
                may be any command, including an XCALL or PCALL command.

.* OPTION REENABLE
.optix REENABLE
REENABLE\\\\\\\\reenables the error exit after an error has occurred.
.cs 2 off
