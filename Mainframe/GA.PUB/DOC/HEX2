DOC#HEX2 PUBLIC                          Latest update:  08/01/67
Information Technology Services            Creation date:  00/00/00
Stanford University                        Length:        112 lines


Title:  Hexadecimal to EBCDIC Conversion Routine for Extended
        Arguments

Library Program Number:  C026

Subprogram name(s):  HEX2

Summary:  This routine converts a string of hexadecimal digits into
          a string of EBCDIC characters which represent the hex
          digits.

Field of application:  Output Conversion, Program Debugging

Search key:  Hexadecimal Conversion

Languages from which this routine may be called:  FORTRAN IV;
                                                  Assembler; OS/360

Principal source language:  OS/360Assembler Language

Type of routine:  Closed, reentrant subroutine-type subprogram,
                  standard OS/360 calling sequence

Machine on which routine will execute:  IBM System/360

Monitor or operating system required:  OS/360

Special machine requirements:  None

Call:  CALL HEX2(DATA, N, BUFR)

Parameters:

     Parameter     Type                   Description

       DATA     any                  the name of the byte location
                                     containing the first two hex
                                     digits to be converted

       N        full word integer    a positive integer which gives
                                     the number of groups of four
                                     bytes (eight hex digits) to be
                                     put into EBCDIC form

       BUFR     any                  the name of the location where
                                     the first byte of the converted
                                     character string will be placed

Declarations:  None.  None in particular that no boundary
               alignments are required for DATA and BUFR.

Special system control cards needed:  None

Use:  The routine's primary use is to convert hexadecimal
information in a program into a form in which it can be easily
printed as hex digits.  A string of 4N bytes (8N hexadecimal digits)
beginning at DATA is converted to a string of 8N EBCDIC characters
beginning at BUFR, such that each character is the correct EBCDIC
representation of the corresponding hexadecimal digit from the
string at DATA.

For example, to print the contents of the first 100 words of COMMON
in hexadecimal, you could write:

     COMMON DATA(500)
     DOUBLE PRECISION BUFR(100)
     ---
     CALL HEX1(DATA(1),100,BUFR(1))
     WRITE (6,1)(BUFR(I),I=1,100)
  1  FORMAT(10A12)
     ---

This would print 10 lines of output with 10 groups of digits per
line, separated by 4 spaces.

Other input:  None

Other output:  None

Error conditions and messages:  None; a negative value for N will
                                probably cause a program
                                interruption, however.

Accuracy:  Not applicable

Time:  72 + 92N microseconds (Model 50)

Non-library routines or subroutines required:  None

Library routines or subroutines required:  None

Storage requirements:  60   = 96   bytes
                         16     10

Registers used:  All registers are preserved

Program description:  This program makes efficient use of the UNPK
                      and TR instructions and is therefore faster
                      than HEX1 for multiple conversions.

References:  None

Programmer:  John Ehrman

Certified by:  Karen Murata

Date:  August 1, 1967
