DOC#VPR2 PUBLIC                            Latest update:  08/01/67
Information Technology Services            Creation date:  00/00/00
Stanford University                        Length:        120 lines


Title:  Double Precision Inner Product Accumulation

Library Program Number:  C003

Subprogram name(s):  VPR2

Summary:  This routine forms the double-long produce of two long
floating-point arguments and adds it to a double-long sum, and
provides a simple indication of exponent overflow and underflow.

Field of application:  Numerical Analysis

Search key:  Vector Product, Inner Product, Double-Long Inner Product

Languages from which this routine may be called:  FORTRAN IV;
                                                  Assembler

Principal source language:  OS/360 Assembler Language

Type of routine:  Closed, reentrant subroutine-type subprogram,
standard OS/360 calling sequence

Machine on which routine will execute:  IBM System/360

Monitor or operating system required:  OS/360

Special machine requirements:  None

Call:  CALL VPR2(A,B,SUM(1),IEXP)

Parameters:

     Parameter     Type                   Description

      A,B        long floating-point  the two operands whose double-
                 numbers              long produce is to be formed

    SUM(1)       first of two         the two double-words at SUM(1)
                 double-words         and SUM(2) contain a double-
                                      long floating-point number to
                                      which the double-long product
                                      A*B is to be added

    IEXP         full word integer    if the characteristic of the
                                      sum overflows, IEXP will be
                                      increased by 1; if the
                                      characteristic underflows,
                                      IEXP will be decreased by 1.

Declarations:  A, B, and SUM will usually be declared to be double-
words, but they actually need only lie on full word boundaries.  They
must be normalized floating-point numbers.

Special system control cards needed:  None

Use:  Suppose a FORTRAN program is to calculate the inner product of
the arrays A and B.  Then one could write:

   DOUBLE PRECISION A920), B(20), SUM(2)
   - - -
   IEXP = 0
   SUM(1) = 0.0 DO
   SUM(2) = 0.0 DO
   DO 1 K = 1, 20
   Call VPR2(A(K), B(K), SUM(1), IEXP)
 1 CONTINUE

Then the double-long sum will be found in SUM(1) and SUM(2); SUM(1)
is a standard long floating-point number, and SUM(2) is the extension
of the fraction part of the sum.  If IEXP is set to 0 before a
sequence of calls for VPR2, then afterward the value of the long
                                                        128*IEXP
floating-point result at SUM(1) must be multiplied by 16        to
obtain an arithmetically correct result.

Other input:  None

Other output:  None

Error conditions and messages:  If the magnitude of IEXP is not
           24
less than 2  , the final value of IEXP may be incorrect.  Several
internal checks on the consistency of the arithmetic are made; if
any of these checks fails, SUM(1) and SUM92) will be set to zero,
                      31
IEXP will be set to -2  , and a normal return will be made.  It
should be noted that the above results cannot arise in a normal
situation, since a zero fraction will always have a zero
characteristic also.

Accuracy:  All intermediate arithmetic is done to a precision of 30
hexadecimal digits.

Time:  Approximately 1 millisecond (Model 50); considerably less if
A and/or B is zero or unnormalized, or if SUM is zero.

Non-library routines or subroutines required:  None

Library routines or subroutines required:  None

Library routines required:  None

Storage requirements:  350   = 848   bytes
                          16      10

Registers used:  All general registers are preserved, and the
floating point registers are untouched.

References:

Programmer:  John Ehrman (SLAC)

Certified by:  Lanse M. Leach

Date:  August 1, 1967
