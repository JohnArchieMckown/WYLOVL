DOC#COMPARE PUBLIC                         Latest update:  02/01/83
Information Technology Services            Creation date:  00/00/75
Stanford University                        Length:        133 lines


DESCRIPTION:

This utility program compares records of two data sets, comparing
text based on line number.  It indicates what changes were made to
the old data set to get the new data set.

USE:

This program is generally used to compare two EDIT or CARD NUMBERED
format data sets.*  The assumption is that one of the data sets was
created by modifying the other without renumbering.  The program
lists those changes as it finds them by comparing the text line by
line.  If renumbering was done  after modification, then the
comparisons made by this program will not be meaningful.  Neither
data set is actually changed by the program.  The program was
designed for persons maintaining programs for distribution.  It
allows them to compare versions of a program to determine changes.
It may also be useful in documentation activities where it is
necessary to highlight changed material.

JOB REQUIREMENTS:

    //  JOB
    //  EXEC COMPARE[,PARM='list']
    //OLD  DD  DSN=WYL.gg.uuu.dsname1,DISP=SHR
    //NEW  DD  DSN=WYL.gg.uuu.dsname2,DISP=SHR

You must supply the full data set names (WYL.gg.uuu.dsname1 and
WYL.gg.uuu.dsname2).  If the data sets are not cataloged, UNIT and
VOL parameters must be supplied as well (e.g. UNIT=DISK,
VOL=SER=PUB012).  (For further information on writing DD cards for
disk and tape files see "Batch Processing.") If the data set
is a member of a library, specify the member name in parenthesis
after the library name.  For example,

   //OLD  DD  DSN=WYL.gg.uu.lib(mem1),DISP=SHR

The parameter list on the EXEC statement is optional as indicated by
the square brackets. The PARM list may include the following
options:

   NOLIST        LIST is the default and generates a printed
                 listing of the comparisons.

   PUNCH         NOPUNCH is the default, meaning no punched deck of
                 the changes will be produced.  If you specify
                 PUNCH, a punched deck will be produced using the
                 default value of  '*&' as the string (or whatever
                 value you supply).

   STRING=CHARS  This must be the last parameter in the list and is
                 meaningful if you are punching a deck of changes.
                 The default is '*&' (* is the comment symbol for
                 Assembler Language); if you supply a value for
                 this parameter, PUNCH will be assumed.  The string
                 may not exceed 12 characters but may be null.

*If the data set is not EDIT format, the program assumes an 80
column image with sequencing in columns 73 through 80 (alphabetic or
numeric).

PRINTED OUTPUT:

Printed output shows all new inserted records, all old deleted
records (marked with a D in column 11), and all replaced records
(both the new and old images).  Columns 1 through 9 contain the
sequence number.  Column 10 is blank.  Column 11 contains a blank,
I, or D.  Columns 12 through 132 contain the image.  For long lines
only the first 121 characters will be displayed.  Note therefore
that if the difference between two lines lies beyond this column it
will not be visible on the printout.  The old image of a replace
contains the word FOR in the sequence field.  Column 11 contains an
"I" for any new image that is entirely blank.   Each group of
inserts, deletes, and replaces is prefaced by:

    a) -- INSERT FOLLOWING -- seq.num
    b) -- DELETE FOLLOWING --
    c) -- REPLACE FOLLOWING --

where the first double-dash occurs in column 1.  For inserts, the
seq.num is taken from the last image in the old data set that came
before the image being inserted.  If there was no previous image,
minus one (-1) is used as the seq.num for the INSERT header.

PUNCHED OUTPUT:

Punched output is composed of card images on SYSPUNCH with columns
73 through 80 equal to the line number (sequence  number) for  the
compared source decks.  All cards on SYSPUNCH represent changes that
must be made to the old data set to create the new data set.

Deletions have column 72 blanked out, the string value stored at the
beginning of the card image starting in column 1 and at the end of
the card image in reverse ending in column 71.  The string is
usually the comment symbol for the language in which the program is
written.  Deletions are thus flagged as comments in the punched
output.  If the original image was not blank in the starting
columns, then the entire image is right shifted.  If the string
value occurs in the original card image, it is replaced by blanks.

Insertions or replacements of blank lines have the string value
stored beginning in column 1 followed immediately by the string
value stored in reverse.

NOTE:

If the string specified in the parameter list is null, then deletion
and blank line insertion or replacement images are not changed in
any way.  Deletions would be output as is.

ERROR CONDITIONS:

None except those caused by JCL errors.

PROGRAM NOTES:

Additional information on this routine may be obtained from the
SPIRES subfile MASTERLIST.  See "Using Masterlist."

DISCLAIMER:

This program has been tested and has been found to operate as
described in this document.  However, no warranty is expressed or
implied by this publication regarding aptness, accuracy or
efficiency of this program for the individual application.  The user
is responsible for the choice of the program and charges or problems
incurred.  I.T.S. will investigate errors that are reported in
sufficient detail but cannot guarantee their correction.
