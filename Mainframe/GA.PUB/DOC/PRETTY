DOC#PRETTY PUBLIC                          Latest update:  09/01/84
Information Technology Services            Creation date:  00/00/74
Stanford University                        Length:         82 lines


DESCRIPTION:

This program renumbers the statements in a FORTRAN program (or
programs) in an orderly fashion. The output can be directed to a
disk data set or to the card punch.

FIELD OF APPLICATION:  Utility

SHARE CODE(S):  255

MAIN PROGRAM SOURCE LANGUAGE:  FORTRAN

PROGRAM STATISTICS:

   Program size: 44K bytes
   Number of source statements: 6680
   Names of all subprograms included in source code: GETLAB, SORT,
   QDCLAS, FIND, WHERE, SKIP, PUTNUM, PUTCHR, INIT, READ1, SKPBAL,
   SCAN, DEBUG, HELP

HARDWARE/SOFTWARE RESTRICTIONS:  OS/VS

JOB REQUIREMENTS:

   //  JOB Statement
   //  EXEC PRETTY
   //GO.SYSIN  DD  *

   <-----FORTRAN program(s) to be renumbered

   /*

To obtain punched card output, add the following statement to the
end of the above setup:

   //GO.PUNCH  DD  SYSOUT=B

Remember to estimate cards punched in the JOB statement.

To produce a data set on disk instead of punched cards, add the
following DD statement to the end of the above setup:

   //GO.PUNCH  DD  UNIT=DISK,DSN=WYL.gg.uuu.dsname,
   //   DISP=(NEW,KEEP),SPACE=(80,(n,10),RLSE),DCB=CARD

The approximate number of source cards (n), and data set name
(WYL.gg.uuu.dsname) must be supplied by the user.

USE:

PRETTY modifies a FORTRAN 66 deck or series of decks. The original
statement numbers are replaced so that they begin at 10 and
increment by 10. FORMAT statement numbers begin at 4000 and advance
by 10. PRETTY prints an orderly version of each routine preceded by
a correspondence table relating old to new statement numbers.

Caution:  FORTRAN cleaners are notoriously buggy. Do not discard your
original source until you have successfully compiled and executed
your PRETTY output.  Although PRETTY appears to work with Fortran 77
programs, it has not been extensively tested on other than Fortran
66 programs.

SUBMITTAL INFORMATION:

   Programmers:  Richard Sweet, Dan Ingalls
   Affiliation:  Stanford University Computer Science Department
   Date submitted:  June 1974

DISCLAIMER:

This program has been tested and has been found to operate as
described in this document. However, no warranty is expressed or
implied by this publication regarding aptness, accuracy or
efficiency of this program for the individual application. The user
is responsible for the choice of the program and charges or problems
incurred. ITS will investigate errors that are reported in
sufficient detail but cannot guarantee their correction.
