;this is xprocs#getcpu public
;
;
xproc () begin
  cpu_util = 0
  pcall get_wylcpu(cpu_util)
  comm WYLBUR cpu utilization is &(format(cpu_util,-1,2))
end


;  get_wylcpu
;
;  get wylbur cpu %
;
;  note: this routine waits 10 seconds for sample
;
proc get_wylcpu (cpu_percent) begin

   ; get start of elapsed time
   time_start = timebin

   ; get starting cpu time from wylbur job status
   marker = end
   dump status wylbur
   point 'WYLBUR/WYLBUR' (1) in &(marker)/last nolist
   if (current eq -1) begin  ;if no wylbur, return 0 %
      wait 10
      cpu_percent = 0
      return (cpu_percent)
   end
   temp = line(current)
   temp = substr(temp,index(temp,'TIME=')+5)
   temp = scan_token(temp)
   cpu_start = temp
   delete &(marker)/last

   ;wait for 10 secs.
   wait 10

   ; ending elapsed time
   time_end = timebin

   ; get ending cpu time from wylbur job status
   marker = end
   dump status wylbur
   point 'WYLBUR/WYLBUR' (1) in &(marker)/last nolist
   if (current eq -1) begin  ;if no wylbur, return 0 %
      cpu_percent = 0
      return (cpu_percent)
   end
   temp = line(current)
   temp = substr(temp,index(temp,'TIME=')+5)
   temp = scan_token(temp)
   cpu_end = temp
   delete &(marker)/last

   ; calculate cpu percentage
   cpu_percent = ((cpu_end-cpu_start)/(time_end-time_start))*100
   return(cpu_percent)
end
