XPROC () BEGIN
; SCRIPT -- create and run a batch SCRIPT job.
; New XPROC version for all batch SCRIPT 08/07/86

  DECLARE STRING REVDATE   ; last revision date
  REVDATE = '07/01/93'

; Recent revision log --
; 07/01/93 No DEST=SPECIAL if plain SCRIPT; allow NONE as scriplib
; 06/15/93 remove 3800 stuff; SYSB offline printer support;
;          allow duplex on laserwriter
; 05/19/92 tolerate 'IN USE' response from DSNINFO
; 09/03/91 update SCRIPTMG PFORMAT list: PP8D2P etc.
; 04/27/90 bug fix, not clearing X4090 flag when POSTSCRIPT
; 04/18/90 cleanup fallout from SYSB mods
; 04/13/90 SYSB compatible: refer to 4090/9790 as appropriate.
; 01/05/90 add 15 pitch SCRIPTMG fonts
; 01/02/90 change 9700 to 4090 and 2700 to 3700; discourage 3800.
; 11/14/89 allow specification of ATTACHED printer
; 09/27/89 improved ONLINE handling: set CHARS in parm, no DUPLEX
; 03/31/89 MEMBER bug in WYLBUR is still there (x'00' in MEMBER)
; 03/28/89 correct MEMBER/SMEMBER code (remove SMEMBER)
; 03/24/89 update SCRIPTMG PFORMAT list
; 01/31/89 preliminary ONLINE support
; 10/18/88 allow user-defined PHOTO font set
; 09/01/88 Update SCRIPTMG PFORMAT list
; 08/01/88 improved RUN prompt handling (allow RUN as response)
; 06/29/88 new PHOTO PFORMAT naming convention
; 05/20/88 add new SCRIPTMG PFORMATS
; 04/20/88 Adjust lines limit if graphics included
; 02/16/88 Support for new PFORMAT names
; 02/09/88 HELP now in LIBDATA PUBLIC.
; 02/03/88 HELP dsn now a variable.
; 11/09/87 don't put out /*OUTPUT PFORMAT for SCRIPTPG

DECLARE STRING HELPDSN
HELPDSN = 'WYL.GA.PUB.LIBDATA#SCRPHELP'

DECLARE STRING LIBDSN LIBDSN2 FORMCODE INDSN IMGLIB PFORMAT MEMBER
DECLARE STRING SX1 DSINFO PRINTER DEST SOPT2 FONTVER MGPCHAR
DECLARE STRING DSNPARM
DECLARE STRING S0 S1 S2 S3

DECLARE NUM LPI LINES CPU COPIES PITCH PL USERFILE WORKFILE JCLFILE

DECLARE BOOLEAN LANDSCAPE DUPLEX PDUPLEX PHOTOFLAG IMGFLAG POSTSFLAG
DECLARE BOOLEAN X4090 MGFLAG B0 CONTINUE USER_FONT ONLFLAG OFFLINE

;
;  CONTINUE    Flag for CONTINUE option
;  COPIES      COPIES OPTION
;  CPU         CPU time estimate
;  DEST        DEST code, null if local, ATTACHED for attached printer
;  DSINFO      DSNINFO RETURN FROM DSN CHECKER
;  DUPLEX      Flag to show format for duplex
;  FONTVER     Version of font libraries...null same as PROD
;  FORMCODE    FORMS CODE
;  IMGFLAG     FLAG TO SHOW IMAGES USED
;  IMGLIB      IMAGE LIBRARY NAME
;  INDSN       DATASET NAME
;  JCLFILE     ACTIVE file number for JCL file
;  LIBDSN      SCRIPT LIBRARY NAME
;  LIBDSN2     SECOND LIBRARY NAME, IF ANY
;  LINES       LINE LIMIT FOR JOBPARM STATEMENT
;  LPI         LPI VALUE
;  MEMBER      Library MEMBER name, (cleaned up)
;  MGPCHAR     "CHARS" option for SCRIPTMG PARM field
;  N0          MISC. TEMPORARY
;  N5          LINE/CPU LIMIT WORK VARIABLE
;  OFFLINE     flag for RLG offline printing
;  ONLFLAG     flag for terminal-format output
;  PDUPLEX     Flag to show print duplex (4090 only)
;  PFORMAT     PFORMAT or CHARS name
;  PHOTOFLAG   Flag to show PHOTO option
;  PITCH       PITCH
;  PL          Page Length
;  PRINTER     PRINTER TYPE: 4090, LASERJET, 3700, OTHER
;  SOPT2       SCRIPT OPTIONS
;  SX1         WORK VARIABLE FOR DSN CHECKER
;  S0,S1,S2,S3 Misc. temporary
;  USER_FONT   flag for user-defined PHOTO font set
;  USERFILE    Number of user's active file
;  WORKFILE    ACTIVE file number of work file
;  XPRT        Xerox printer model (4090 or 9790)
;
;  CONSTANTS ---------------------------------------------------
;
;  Xerox printer model
DECLARE STRING XPRT
XPRT = '4090'
IF (MACHINE EQ 'RLG') XPRT = '9790'

;  List of allowable 4090/9790 forms:
DECLARE STRING FORM4090
FORM4090  =  ' BOND 3HOL BLUE ARCB RAGB BOOK '

;  List of allowable SCRIPTMG formats:
DECLARE STRING MGFORMATS
MGFORMATS  =  ' PPMD0P PPMD2L PPMD2P PPMD5L PPMD5P PPMD5P PPMG2P PPSM12 PPSM13 PP8B5L PP8B5P PP8D2L PP8D2P RLGPMG RLGLMG CU12 DR12 DS12 DS13 DR15 CU15 '

;  List of allowable 4090 CHARS when not using SCRIPTMG:
DECLARE STRING CHAR_4090
CHAR_4090  =  ' TN10 TN12 TN15 CU10 CU12 CU15 BD10 BD12 BD15 DR12 DS12 IT10 IT12 '

; ------------------------- here's the code -----------------------

SET ESC &
WORKFILE = 0
JCLFILE = 0
USERFILE = ACTNO ; Save user's active file number
COMM SCRIPT version of &(REVDATE) -- Create and run a batch SCRIPT job.
COMM For help, reply '?' to any question.
COMM

DSNPARM = UPPER(SCAN_TOKEN(PARM_STRING))
PARM_STRING=SCAN_SKIP(PARM_STRING) ; later we'll look for options
;                                  ; in the remaining parm string
IF(DSNPARM EQ '') GOTO INIT
; DSN in PARM.
; see if user gave dsn(member)
M1=SCAN_TOKEN(PARM_STRING)  ; next token
N1=SIZE(M1)
IF (N1 GT 2) BEGIN;
   IF (SUB(M1,1,1) EQ '(' AND SUB(M1,N1,1) EQ ')') BEGIN
      DSNPARM=DSNPARM||M1  ; put member back (scan_token stripped it)
      PARM_STRING=SCAN_SKIP(PARM_STRING)  ; and take it out of parm
      END
   END
GOTO GOTPARM

START:
; here to restart
DSNPARM  =  ''
GOTO INIT

GOTPARM:
IF (DSNPARM EQ '*') BEGIN
   IF (PREFIX EQ '') BEGIN ; * is undefined
      WRI '* is undefined.'
      DSNPARM=''
      GOTO INIT
      END
   DSNPARM=PREFIX
   MEMBER=STRIP(SYS.MEMBER)
   MEMBER=STRIP(MEMBER,'B',S'00') ; WYLBUR bug, get binary zeros here
   IF (MEMBER NE '') DSNPARM=DSNPARM||'#'||MEMBER
   END
COMM SCRIPT Input is &(DSNPARM)
INIT:
PITCH =12 ; PITCH
PL =66 ; Page Length
LPI =6 ; LPI
PFORMAT = 'DR12'   ; Default character set if not PHOTO
MGPCHAR = 'DR12'   ; "chars" for SCRIPTMG PARM
FONTVER = ''
FORMCODE ='BOND' ; FORM
LANDSCAPE = FALSE
DUPLEX = FALSE
PDUPLEX = FALSE
PRINTER = XPRT
X4090 = TRUE
DEST = ''
CONTINUE = FALSE
PHOTOFLAG = FALSE
IMGFLAG = FALSE
MGFLAG = FALSE
POSTSFLAG = FALSE
IF (DSNPARM NE '') GOTO GOTDSN ; Got filename, don't ask for help
TRY REA STR DSNPARM UPP PRO 'Do you want instructions? '
IF (TRYATTN) GOTO QUIT
IF (DSNPARM EQ '') GOTO GETDSN
IF (INDEX('.YES.Y.OK.HELP.?.','.&(DSNPARM).') EQ 0) GOTO GETDSN
TRY LIST 3800/3849 FRO &(HELPDSN) UNN ; INTRO
WRI ' '
GETDSN:
TRY REA STR DSNPARM UPP PRO 'Dsname of SCRIPT input file: '
IF (TRYATTN) GOTO QUIT
DSNPARM = STRIP(DSNPARM)
IF(DSNPARM EQ'') GOTO GETDSN
GOTDSN:
IF(INDEX('.HELP.?.','.&(DSNPARM).') EQ 0) GOTO GOODDSN1
TRY LIST 3901/3950 FRO &(HELPDSN) UNN
GOTO GETDSN
BADDSN:
WRI DSNPARM||' is not a legal input.'
GOTO GETDSN
GOODDSN1:
IF (DSNPARM EQ '*') BEGIN
   IF (PREFIX EQ '') BEGIN ; * is undefined
      WRI '* is undefined.'
      DSNPARM=''
      GOTO GETDSN
      END
   DSNPARM=PREFIX
   MEMBER=STRIP(SYS.MEMBER)
   MEMBER=STRIP(MEMBER,'B',S'00') ; WYLBUR bug, get binary zeros here
   IF (MEMBER NE '') DSNPARM=DSNPARM||'#'||MEMBER
   END
IF(INDEX(DSNPARM,'#') GT 0) GOTO ISLIB1
IF(INDEX(DSNPARM,'(') GT 0) GOTO ISLIB2
GOTO GOTDSN1

;  here if library member
ISLIB1:
IF(SUB(DSNPARM,1,1) EQ'#') BEGIN
   MEMBER =SUB(DSNPARM,2)
   INDSN =LIBRARY
   GOTO CHECKDSN1
   END
N0 = INDEX(DSNPARM,'#')
INDSN =SUB(DSNPARM,1,N0-1)
MEMBER =SUB(DSNPARM,N0+1)
GOTO CHECKDSN1
ISLIB2:
IF(SUB(DSNPARM,1,1) EQ'(') BEGIN ; got (member)
   MEMBER =SUB(DSNPARM,2)        ; strip (
   IF(SUB(MEMBER,SIZ(MEMBER)) EQ')') MEMBER=SUB(MEMBER,1,SIZ(MEMBER)-1)  ; strip )
   IF (SIZ(MEMBER) GT 8) GOTO BADDSN ; bad name, too long
   INDSN =LIBRARY
   GOTO CHECKDSN1
   END
N0 = INDEX(DSNPARM,'(')
INDSN = SUB(DSNPARM,1,N0-1)
MEMBER = SUB(DSNPARM,N0+1)
IF(SUB(MEMBER,SIZ(MEMBER)) NE')') GOTO BADDSN
MEMBER = SUB(MEMBER,1,SIZ(MEMBER)-1)
GOTO CHECKDSN1
GOTDSN1:
INDSN = DSNPARM ; NO MEMBER
CHECKDSN1:
INDSN = DSNFORMAT(INDSN)
PCALL DSNCHECK(INDSN,DSINFO)
IF (DSINFO EQ '') BEGIN
   DSNPARM = '' ; show no dsn
   DSNPARM=''
   GOTO INIT ; and try again
   END
IF(SUBSTR(DSINFO,69,2) EQ 'PO') GOTO LIBRARY; if library
IF(MEMBER EQ'') GOTO NOTMEM
COMM &(INDSN) is not a library; member name (&(MEMBER)) ignored.
MEMBER =''
GOTO NOTMEM
LIBRARY:
IF(MEMBER NE'')GOTO NOTMEM
GETMEM:
TRY WRI INDSN||' is a library; you must specify a member name.'
TRY REA STR DSNPARM UPP PRO'Member name (CR=restart)? '
IF (TRYATTN) GOTO START
DSNPARM = STRIP(DSNPARM)
IF(INDEX('.HELP.?.','.&(DSNPARM).') NE 0) BEGIN
   COMM
   COMM The dsname you have specified (&(INDSN)) is a library.
   COMM Please specifiy which member of the library you wish to use. A member
   COMM The name must be 8 characters or fewer.
   COMM
   S0 = YESNO('Do you want a listing of the directory of the library?')
   IF (S0 EQ 'YES') TRY SHO DIR ALL IN &(INDSN)
   GOTO GETMEM
   END

MEMBER =DSNPARM
IF(MEMBER EQ'') GOTO INIT
IF(SUB(MEMBER,1,1) EQ'#') MEMBER =SUB(MEMBER,2)
NOTMEM:
IF(MEMBER EQ'')GOTO MEMDONE
IF(SIZ(MEMBER)GT 8) BEGIN ; Illegal membername
   WRI MEMBER||' - Illegal member name.'
   GOTO GETMEM
   END

DV=DSNVER('&(INDSN)(&(MEMBER))')  ; check for bad member etc.
IF (DV NE 'OK') BEGIN ; Bad member or name
   IF (DV EQ 'BAD MEMBER') BEGIN
      WRI MEMBER||' is not a member of '||INDSN
      END
      ELSE BEGIN
      WRI INDSN||'#'||MEMBER||':  '||DV
      END
   GOTO GETMEM
   END

MEMDONE:
;
;  get user-specified forms, library, etc. from input file
;
IF (ACTNO NE WORKFILE) BEGIN ; not in workfile, e.g. first pass thru
   OPEN WORK1 TITLE 'work file for SCRIPT'
   WORKFILE = ACTNO ; save this number
   END
ELSE BEGIN ; we've been thru before, already got a workfile
   IF (LAST GT 0) DEL .001/LAST
   END
PUTLINE 0.0
S0 = INDSN ; INPUT DSN
IF (MEMBER NE '') S0 = S0||'#'||MEMBER  ; LIB#MEM
COPY P'.***<A>'1 IN 0/100 TO 1 BY 1 FRO &(S0)   ; .***SCRIPLIB=, etc.
CHA 1/4 TO '' NOLIST ; remove the .***

;  SCRIPT LIBRARY
GETSCRIPLIB:
LIBDSN =''
LIBDSN2 =''
IF (MEMBER NE '') LIBDSN =INDSN   ; IF INPUT IS LIBRARY, LIB IS SCRIPLIB
;
;  SEE IF LIBNAME IN USER'S FILE
POI C'SCRIPLIB=' 1 (1) NOL   ; USER'S FILE HAS SCRIPLIB
IF (* GT 0) BEGIN ; something in user's file
   LIBDSN =UPP(SUB(LINE(*),10)) ; EXTRACT FROM ".**" LINE
   N0 = IND(LIBDSN,',') ; COMMA FOR SECOND DSN
   IF (N0 GT 0) BEGIN
      LIBDSN2 = STRIP(SUB(LIBDSN,N0+1)) ; YUP, GOT A SECOND ONE
      LIBDSN = STRIP(SUB(LIBDSN,1,N0-1))
      END
   END

WRI ' '
IF (LIBDSN NE '') BEGIN ; got some default
   S1 = LIBDSN
   IF (LIBDSN2 NE '') S1=S1||','||LIBDSN2
   TRY REA STR S0 UPP PRO'Name of SCRIPT Library (CR=&(S1),ATTN=none)? '
   IF (TRYATTN) GOTO REJSCRIPLIB
   IF (S0 EQ 'NONE') BEGIN ; none, explicitly
      LIBDSN=''
      LIBDSN2=''
      GOTO GOTSCRIPLIB
      END
   END
   ELSE BEGIN ; no default
   TRY REA STR S0 UPP PRO'Name of SCRIPT Library (CR=none)? '
   IF (TRYATTN) GOTO START
   END
N0 = IND(S0,',') ; COMMA FOR SECOND DSN
IF (N0 GT 0) BEGIN
   LIBDSN2 =SUB(S0,N0+1) ; YUP, GOT A SECOND ONE
   S0 = SUB(S0,1,N0-1)
   END

S0 = STRIP(S0)
IF(INDEX('.HELP.?.','.&(S0).') NE 0) BEGIN ; HELP SCRIPLIB
   ; depends on whether default was null or input library:
   IF (LIBDSN EQ '') TRY LIST 4501/4509 FRO &(HELPDSN) UNN
   ELSE TRY LIST 4511/4519 FRO &(HELPDSN) UNN
   ; Common help
   IF (~TRYATTN) TRY LIST 4551/4599 FRO &(HELPDSN) UNN
   GOTO GETSCRIPLIB
   END

IF (S0 NE '') LIBDSN =S0
GOTO GOTSCRIPLIB

; User rejected default lib.
REJSCRIPLIB:
LIBDSN ='' ; no library
TRY REA STR S0 UPP PRO 'Backup or Continue (CR=continue)? '
IF (TRYATTN) GOTO START
IF (S0 EQ '') GOTO GOTSCRIPLIB ; CR=CONTINUE
IF (S0 EQ '?') BEGIN
   TRY WRI 'Reply BACKUP to go back to the "Input DSN" prompt;'
   IF (TRYATTN) GOTO START
   TRY WRI 'Reply CONTINUE to continue processing with no SCRIPT library.'
   IF (TRYATTN) GOTO START
   GOTO REJSCRIPLIB
   END
IF (S0 EQ 'B' OR SUB(S0,1,3) EQ 'BAC') GOTO START ; BACKUP
IF (S0 EQ 'C' OR SUB(S0,1,3) EQ 'CON') GOTO GOTSCRIPLIB ; CONTINUE
TRY WRI 'Please reply BACKUP or CONTINUE.  Type ? for help.'
IF (TRYATTN) GOTO REJSCRIPLIB
GOTO REJSCRIPLIB

GOTSCRIPLIB:
IF (LIBDSN NE '') LIBDSN = DSNFORMAT(LIBDSN)
; FIX 2ND LIBNAME, IF ANY
IF (LIBDSN2 NE '') LIBDSN2 = DSNFORMAT(LIBDSN2)
;
GETIMGLIB:
; IMAGELIB
IMGLIB =''
IMGFLAG = FALSE
;
;  SEE IF IMAGELIB NAME IN USER'S FILE
POI C'IMAGELIB=' 1 OR 'IMGLIB=' 1 (1) NOL   ; USER'S FILE HAS IMAGELIB
IF (* GT 0) BEGIN ; found one form or the other
   S0=LINE(*)
   IX=INDEX(S0,'=')+1 ; point past whichever
   IMGLIB =UPP(SUB(S0,IX)) ; EXTRACT FROM ".**" LINE
   END
WRI ' '
;
PROMPTIMGLIB:
IF (IMGLIB NE '') BEGIN ; default will be value from file
   TRY REA STR S0 UPP PRO'Name of Image Library (CR=&(IMGLIB),ATTN=none)? '
   IF (TRYATTN) BEGIN ; User rejected default
      IMGLIB=''
      IMGFLAG=FALSE
      GOTO IMGDONE
      END
   END
   ELSE BEGIN ; default none
   TRY REA STR S0 UPP PRO'Name of Image Library (CR=none)? '
   IF (TRYATTN) GOTO GETSCRIPLIB
   END
S0 = STRIP(S0)
IF (S0 EQ '') GOTO IMGDONE         ; CR=Default (already set)
IF(INDEX('.HELP.?.','.&(S0).') GT 0) BEGIN ; HELP
   TRY LIST 4701/4799 FRO &(HELPDSN) UNN
   GOTO PROMPTIMGLIB
   END
ELSE IMGLIB=S0 ; use response as libname

IMGDONE:
IF (IMGLIB NE '') BEGIN
   TRY DV=DSNVER(IMGLIB)
   IF (TRYERR) BEGIN ; BAD SYNTAX
      TRY WRI IMGLIB||':  Invalid syntax in name.'
      IMGLIB=''
      GOTO PROMPTIMGLIB
      END
   IF (DV NE 'OK') BEGIN ; BAD IMGLIB
      TRY WRI IMGLIB||':  '||DV
      IMGLIB=''
      GOTO PROMPTIMGLIB
      END
   IMGLIB = DSNFORMAT(IMGLIB)
   IMGFLAG = TRUE
   END
; END OF IMAGELIB CODE

PROCESS_OPTIONS: ;---------------Processing Options--------------

DPROCESS='SCRIPTMG' ; default process
POI C'PROCESS=' 1 (1) NOL   ; User's file has process option
IF (* GE 0) DPROCESS = STRIP(UPP(SUB(LINE(*),9))) ; from .*** line

; Get user's options in case they specify a process (we'll also use
; them below as SCRIPT OPTIONS)

SOPT2 = 'none' ; default options if not in file
POI C'OPTIONS=' 1 (1) NOL   ; User's file has options
IF (* GE 0) SOPT2 = UPP(SUB(LINE(*),9)) ; Extract from ".**" line

B0 = TRUE   ; act like we found option below
IF (DPROCESS EQ 'PHOTO') GOTO DPHOTO
IF (SUB(DPROCESS,1,5) EQ 'POSTS') GOTO DPOSTS
IF (DPROCESS NE 'SCRIPT' AND DPROCESS NE 'SCRIPTMG') DPROCESS = 'SCRIPTMG'
PCALL FWORD(SOPT2,SOPT2,'PHOTO',B0,S2) ; look for PHOTO
DPHOTO:
IF (B0) BEGIN ; User said PHOTO in file
   PHOTOFLAG = TRUE
   DPROCESS = 'PHOTO'
   MGFLAG = FALSE
   POSTSFLAG = FALSE
   ONLFLAG = FALSE
   END

PCALL FWORD(SOPT2,SOPT2,'POSTS',B0,S2) ; look for POSTS
DPOSTS:
IF (B0) BEGIN ; User said POSTS in file
   POSTSFLAG = TRUE
   DPROCESS = 'POSTS'
   DEST = 'SELF'
   MGFLAG = FALSE
   PHOTOFLAG = FALSE
   ONLFLAG = FALSE
   END

PCALL FWORD(SOPT2,SOPT2,'DUPLEX',DUPLEX,S3) ; look for DUPLEX

WRI ' '
TRY REA STR S0 UPP PRO 'Which SCRIPT process do you want to use (RETURN=&(DPROCESS))? '
IF (TRYATTN) GOTO GETDSN
S0 = STRIP(S0)
IF (S0 EQ '') BEGIN ; Null
   S0 = DPROCESS ; set default
   END
ELSEIF(INDEX('.HELP.?.','.&(S0).') NE 0) BEGIN ; HELP
   WRI ' '
   TRY LIST 6001/6099 FRO &(HELPDSN) UNN
   GOTO PROCESS_OPTIONS
   END
IF (S0 EQ 'SCRIPT') BEGIN ; Plain SCRIPT
   PLAIN=TRUE
   MGFLAG = FALSE
   PHOTOFLAG = FALSE
   POSTSFLAG = FALSE
   ONLFLAG = FALSE
   END
ELSEIF (S0 EQ 'SCRIPTMG' OR S0 EQ '') BEGIN ; SCRIPTMG
   MGFLAG=TRUE
   PHOTOFLAG=FALSE
   POSTSFLAG = FALSE
   ONLFLAG = FALSE
   PLAIN=FALSE
   MGPCHAR = 'DR12'
   END
ELSEIF (S0 EQ 'PHOTO') BEGIN ; PHOTO
   PHOTOFLAG=TRUE
   POSTSFLAG = FALSE
   MGFLAG=FALSE
   ONLFLAG = FALSE
   PLAIN=FALSE
   END
ELSEIF (SUBSTR(S0,1,5) EQ 'POSTS') BEGIN ; POSTS
   POSTSFLAG = TRUE
   PHOTOFLAG = FALSE
   MGFLAG=FALSE
   ONLFLAG = FALSE
   PLAIN=FALSE
   END
ELSE BEGIN ; Invalid
   WRI S0||':  Invalid.  Specify SCRIPT, SCRIPTMG, PHOTO, or POSTSCRIPT.'
   GOTO PROCESS_OPTIONS
   END
GET_SCRIPT_OPTS:
;
; PROCESS SCRIPT DEFAULT OPTIONS AND PROMPT FOR MORE

WRI ' '
IF (SOPT2 EQ '') SOPT2 = 'none' ; default options if not in file
XOPT=''
IF (DUPLEX) XOPT='DUPLEX '
IF (PHOTOFLAG) XOPT=XOPT||'PHOTO '
IF (POSTSFLAG) XOPT=XOPT||'POSTS '
IF (XOPT NE '') BEGIN
   TRY WRI 'SCRIPT options '||XOPT||'will be supplied.'
   WRI ' '
   END
TRY REA STR S0 PRO'User SCRIPT Options (CR=&(SOPT2))? '
IF (TRYATTN) GOTO GETIMGLIB
IF (S0 EQ '' AND SOPT2 NE 'none') S0 = SOPT2 ; Use value from file
S0 = UPPER(STRIP(S0))
IF(INDEX('.HELP.?.','.&(S0).') NE 0) BEGIN ; HELP
   WRI ' '
   TRY LIST 4201/4250 FRO &(HELPDSN) UNN
   GOTO GET_SCRIPT_OPTS
   END
IF(SIZE(S0) GT 60) BEGIN ; Invalid length
   WRI'The SCRIPT option string is limited to 60 characters.'
   GOTO GET_SCRIPT_OPTS
   END

SOPT2 = S0 ; SCRIPT options now in SOPT2
IF (IND(SOPT2,'DUPLEX') NE 0) DUPLEX=TRUE  ; in case user option

;  PRINTER TYPE, DUPLEX OPTION
PRINT_OPTIONS:

IF (POSTSFLAG) BEGIN   ; PostScript
   PRINTER = 'LASERWRITER'
   X4090 = FALSE
   END
ELSE BEGIN; 4090/9790
   PRINTER = XPRT
   X4090 = TRUE
   END
LANDSCAPE = FALSE
;  SEE IF DUPLEX OPTION IN USER'S FILE
POI C'DUPLEX=' 1 (1) NOL   ; USER'S FILE HAS DUPLEX
IF (* GT 0) BEGIN ; DUPLEX option in file
   IF (INDEX(UPP(LINE(*)),'DUPLEX=YES') NE 0) DUPLEX = TRUE
   ELSEIF (INDEX(UPP(LINE(*)),'DUPLEX=NO') NE 0) DUPLEX = FALSE
   END

GET_PRINT_OPTS:

PDUPLEX = DUPLEX
WRI ' '
XOPT=XPRT
IF (POSTSFLAG) XOPT='Laserwriter'
IF (PDUPLEX) XOPT=XOPT||' duplex'
   ELSE XOPT=XOPT||' simplex'
S0 = ''
TRY REA STR S0 UPP PRO'Printer options (CR=&(XOPT))? '
   IF (TRYATTN) GOTO GET_SCRIPT_OPTS
S0 = STRIP(S0)
IF (S0 EQ '') GOTO GOT_PRINTER ; TAKE DEFAULT (ALREADY SET)
IF(INDEX('.HELP.?.','.&(S0).') NE 0) BEGIN ; help
   TRY LIST 4601/4699 FRO &(HELPDSN) UNN
   GOTO GET_PRINT_OPTS
   END

IF (IND(S0,'9700') NE 0 OR IND(S0,'9790') NE 0 OR IND(S0,'9700') NE 0) BEGIN
   PRINTER = XPRT
   X4090 = TRUE
   IF (IND(S0,'DUPLEX=NO') NE 0 OR IND(S0,'SIMPLEX') NE 0) PDUPLEX=FALSE
   IF (IND(S0,'DUPLEX') NE 0) BEGIN  ; 4090 DUPLEX
      DUPLEX = TRUE
      PDUPLEX = TRUE
      END
   GOTO GOT_4090
   END

IF (IND(S0,'DUPLEX=NO') NE 0 OR IND(S0,'SIMPLEX') NE 0) BEGIN    ; ***??
   PDUPLEX = FALSE
   PRINTER = XPRT
   X4090 = TRUE
   GOTO GOT_4090
   END
IF (IND(S0,'DUPLEX') NE 0) BEGIN  ; DUPLEX
   DUPLEX = TRUE
   PDUPLEX = TRUE
   END

IF (IND(S0,'SIMPLEX') NE 0) PDUPLEX = FALSE ; SIMPLEX, MAYBE 4090

IF (IND(S0,'LASERJ') NE 0) BEGIN ;  LASERJET
   PRINTER = 'LASERJET'
   X4090 = FALSE
   GOTO GOT_PRINTER
   END

IF (IND(S0,'LASERW') NE 0) BEGIN ; LASERWRITER
   PRINTER = 'LASERWRITER'
   X4090 = FALSE
   DEST = 'SELF'
   IF (PHOTOFLAG) BEGIN ; PHOTO/LASERWRITER:  use POSTS instead
      PHOTOFLAG = FALSE
      POSTSFLAG = TRUE
      END
   GOTO GOT_PRINTER
   END

IF (IND(S0,'LINOTRON') NE 0) BEGIN ; LINOTRONIC
   PRINTER = 'LINOTRONIC'
   X4090 = FALSE
   DEST = 'LINOTRON'
   IF (PHOTOFLAG) BEGIN ; PHOTO/LINOTRONIC:  use POSTS instead
      PHOTOFLAG = FALSE
      POSTSFLAG = TRUE
      PDUPLEX = FALSE
      END
   GOTO GOT_PRINTER
   END

IF (IND(S0,'3700') NE 0) BEGIN ; Xerox 3700
   PRINTER = '3700'
   X4090 = FALSE
   GOTO GOT_PRINTER
   END

IF (IND(S0,'SELF') NE 0) BEGIN ; DEST=SELF
   PRINTER='3700'
   X4090 = FALSE
   DEST='SELF'
   GOTO GOT_PRINTER
   END

IF (IND(S0,'WYL') NE 0) BEGIN ; WYLBUR-style online
   PRINTER = 'WYLBUR'
   ONLFLAG = TRUE
   GOTO GOT_ONLINE
   END

IF (IND(S0,'TERM') NE 0) BEGIN ; TERMINAL-style online
   PRINTER = 'TERMINAL'
   ONLFLAG = TRUE
   GOTO GOT_ONLINE
   END
; here when unrecognized printer opts
WRI S0||':  Invalid printer option(s)'
GOTO GET_PRINT_OPTS

; Common online (terminal-format output) code

GOT_ONLINE:
X4090 = FALSE
PITCH = 10
MGPCHAR = 'TERM'
DUPLEX=FALSE
DEST = ''
GOTO GET_LINE_LIM

GOT_4090:
; Here if 4090 (simplex or duplex)
IF (IND(S0,'LAND') NE 0) LANDSCAPE = TRUE
IF (PDUPLEX) DUPLEX=TRUE ; gonna print duplex, format for it too
IF (POSTSFLAG) BEGIN ; POSTSCRIPT/4090:  use PHOTO instead
   POSTSFLAG = FALSE
   PHOTOFLAG = TRUE
   END

GOT_PRINTER:
IF (~X4090) BEGIN ; Not 4090/9790 etc.
   PDUPLEX=FALSE    ; only 4090 can duplex
   OFFLINE=FALSE    ; or (RLG) be offline printer
   END

; check for consistency -- printer vs. process

IF (PHOTOFLAG AND ~X4090) BEGIN
   WRI 'Error:  PHOTO can only be used with the '||XPRT||' printer.'
   GOTO PROCESS_OPTIONS
   END

GET_FORM:
; FORM -- 4090/9790 ONLY

LPI =6      ; DEFAULT LPI
IF (~X4090 ) GOTO GOT_FORMS
DFORM = 'BOND' ; 4090 default form
POI C'FORMS=' 1 (1) NOL   ; USER'S FILE HAS FORMS
S1 = ''
IF (* GT 0) BEGIN ; found a FORMS= line
   S1 = STRIP(UPP(SUB(LINE(*),7))) ; From line
   IF (SIZE(S1) EQ 4 AND INDEX(FORM4090,S1) NE 0) DFORM = S1
      ELSE BEGIN ; bad form in file
      WRI 'Note:  Invalid form '||S1||' specified in file, ignored.'
      S1 = DFORM
      END
   END ; Now DFORM is from file if good, else default for printer

WRI ' '
PROMPT_FORM:
TRY REA STR S0 UPP PRO'Printer Form (CR=&(DFORM))? '
IF (TRYATTN) GOTO PRINT_OPTIONS
S0 = STRIP(S0)
IF(S0 EQ '') BEGIN ; take default
   FORMCODE = DFORM
   GOTO GOT_FORMS
   END
IF(INDEX('.HELP.?.','.&(S0).') NE 0) BEGIN
   WRI ' '
   TRY LIST 4001/4049 FRO &(HELPDSN) UNN
   GOTO PROMPT_FORM
   END

; GOT A FORM CODE
IF (SIZE(S0) EQ 4 AND INDEX(FORM4090,S0) GT 0) FORMCODE = S0
   ELSE BEGIN  ; bad form code
   WRI ' '
   WRI '<.b+>'||S0||'<.b-> is an invalid form code. Please type one of the allowable'
   WRI 'forms codes:  '||FORM4090
   WRI 'Type <.b+>?<.b-> if you need more information.'
   WRI ' '
   GOTO PROMPT_FORM
   END

GOT_FORMS:
; end of "get forms" code

GET_CHARS:
; CHARACTER SET

DCHARS = ''
FONTVER = ''
S1 = ''
IF (PHOTOFLAG) BEGIN
   PFORMAT = 'PTACC1' ; PHOTO default
   CTYPE = 'Font set (PFORMAT)'
   HELP = '4051/4099' ; HELP line range
   END
ELSEIF(POSTSFLAG) BEGIN ; POSTSCRIPT default
   PFORMAT='PTACC1' ; default
   CTYPE = 'Font set (PFORMAT)'
   HELP = '3701/3799'
   END
ELSEIF(MGFLAG) BEGIN ;  SCRIPTMG
   IF (X4090) BEGIN
      PFORMAT = 'PPMD2P' ; SCRIPTMG default
      CTYPE = 'PFORMAT'
      HELP = '4101/4149' ;
      END

   ELSE BEGIN;  Laserjet or 3700 with SCRIPTMG
      PFORMAT='TN12'
      IF (PRINTER EQ 'LASERJET') PFORMAT='TN10'
      CTYPE = 'Character set'
      IF (PRINTER EQ '3700') HELP = '3101/3199'
      ELSE HELP = '3501/3599' ; Laserjet etc.
      END
   END ; END SCRIPTMG
ELSEIF(X4090) BEGIN ; plain SCRIPT/4090
   PFORMAT = 'DR12'
   CTYPE = 'Character set'
   HELP = '3601/3699'
   END
ELSE BEGIN
   PFORMAT = 'TN12'
   CTYPE = 'Character set'
   HELP = '3601/3699'
   END

POI C'CHARS=' 1 OR C'FONTS=' 1 OR C'PFORMAT=' 1 (1) NOL   ; USER'S FILE HAS CHARS
IF (* GT 0) BEGIN
   S0=LINE(*)
   N0=IND(S0,'=')+1 ; POINT PAST =
   DCHARS = STRIP(UPP(SUB(S0,N0))) ; EXTRACT FROM ".**" LINE
   END;
;  Now, DCHARS = value from file, or null if none given
;  PFORMAT = default for given process
;  CTYPE = what we're asking for, e.g. "character set"
PROMPT_CHARS:

WRI ' '
IF (DCHARS NE '') PFORMAT = DCHARS ; use system default if not in file
TRY REA STR S0 UPP PRO '&(CTYPE) (CR=default &(PFORMAT))? '
IF (TRYATTN) GOTO GET_PRINT_OPTS
S0 = STRIP(S0)
IF(INDEX('.HELP.?.','.&(S0).') GT 0) BEGIN ; HELP
   TRY LIST &(HELP) FRO &(HELPDSN) UNN
   GOTO PROMPT_CHARS
   END
IF (S0 NE '') PFORMAT = S0 ; User specified new value

IF (MGFLAG AND (X4090)) BEGIN ;  SCRIPTMG CHARS CHECK---
   IF (IND(MGFORMATS,' '||PFORMAT||' ') EQ 0) BEGIN ; Invalid pformat
      TRY LIST 4151/4199 FRO &(HELPDSN) UNN ; error msg
      GOTO GET_CHARS
      END
   ; got a good pformat in PFORMAT
   PITCH = 12
   IF (PFORMAT EQ 'DS13')  BEGIN ; XLATE CHARS/PFMT
      PFORMAT = 'PPSM13'
      IF (LANDSCAPE) BEGIN  ; Can't do it in landscape
         WRI 'ERROR:  This font is not available in landscape mode.'
         GOTO GET_FORM ; try again
         END
      END
   IF (PFORMAT EQ 'DS12' OR PFORMAT EQ 'DR12' OR PFORMAT EQ 'CU12') BEGIN
      PFORMAT = 'PPMD2P'
      IF (LANDSCAPE) PFORMAT = 'PP8D2L' ; DR12/LANDSCAPE
      END
   IF (PFORMAT EQ 'PPMD5P' OR PFORMAT EQ 'DR15' OR PFORMAT EQ 'CU15') BEGIN
      PFORMAT='PPMD5P'
      IF (LANDSCAPE) PFORMAT='PPMD5L'
      PITCH=15
      END
   IF (PFORMAT EQ 'PPMD5L') BEGIN ; 15p/land
      LANDSCAPE=TRUE
      PITCH=15
      PL=51
      END
   IF (PFORMAT EQ 'PPMD2L') BEGIN ; page length, 6lpi/landscape
      PL =51
      LPI = 6
      END
   IF (PFORMAT EQ 'PP8D2L') BEGIN ; page length, 8.1 lpi/landscape
      PL =68
      LPI = 8
      END
   IF (PFORMAT EQ 'PP8D2P') BEGIN ; page length, 8.1 lpi/portrait
      PL = 89
      LPI = 8
      END
   IF (PFORMAT EQ 'PP8B5L') BEGIN ; page length, 8.1 lpi/landscape
      PL =68
      LPI = 8
      END
   IF (PFORMAT EQ 'PP8B5P') BEGIN ; page length, 8.1 lpi/portrait
      PL = 89
      LPI = 8
      END
   IF (PFORMAT EQ 'RLGLMG') BEGIN ; 6LPI/LAND ver. of RLGPMG
      PL=51
      LPI=6
      END
   IF (PFORMAT EQ 'PPMD1P') PITCH = 10
   END ; --------------------END SCRIPTMG CHARS CHECK

ELSEIF (PHOTOFLAG) BEGIN ; ---PHOTO CHAR CHECK---------
   USER_FONT=FALSE;
   IF (SIZE(PFORMAT) NE 6) BEGIN ; Invalid length
      WRI PFORMAT||': Invalid.  PFORMAT name must be 6 characters long.'
      GOTO PROMPT_CHARS
      END
   DSNV=DSNVER('SYS4.SCRIPT.PROD.FONT#&(PFORMAT)')
   IF (DSNV NE 'OK') BEGIN ; not in prod. library
      DSNV=DSNVER('SYS4.SCRIPT.TEST.FONT#&(PFORMAT)')
      IF (DSNV EQ 'OK') FONTVER='TEST';  ok, found in test.fontlib
      ELSE BEGIN; not in test.fontlib either...
         DSNV=DSNVER('SYS4.X9700.PROD.FONT#&(PFORMAT)')
         IF (DSNV EQ 'OK') USER_FONT=TRUE; in PHOTO lib but not SCRIPT
         ELSE BEGIN;
            WRI PFORMAT||':  Unknown PFORMAT name.'
            OPEN SCRWK TITLE 'work area for SCRIPT EXECFILE'
            DUM DIR IN SYS4.SCRIPT.PROD.FONT
            NUM BY 1.0 STA 1.0
            DEL 1/3
            DEL ~'P' 1 AND ~'SYS' 1 AND ~'L' 1
            D 'SYS' 1 AND ~P'<NN>' 5  ; Keep SYST10 etc.
            D ' ' 5/5
            D 'PR' 1 OR'PUB' 1
            D P'<N>' 2/2
            D 'SYSR' 1 OR 'SYSU' 1
            D ~' ' 7/7
            PUTLINE 1.0 Standard PFORMAT Names
            PUTLINE 2.0 ----------------------------------------------
            MOV 'SYS' 1 TO 1001 ; old names at end
            MOV 'TT' 1 TO END
            PUTLINE 1000 Obsolete PFORMAT names
            TRY WRI 'Valid PFORMAT names are:'
            TRY LIS UNN
            CLOSE
            GOTO PROMPT_CHARS
            END
         END
      END
   PITCH = 12
   IF (PFORMAT EQ 'TAB98B' OR PFORMAT EQ 'TTBDFB') PITCH = 15
   ELSEIF (INDEX('LP',SUB(PFORMAT,1,1)) NE 0) BEGIN ; new format name
      S0=SUB(PFORMAT,5,1) ; codes pitch
      N0=IND('123456789ABCDEFGHIJKLMNOPQRSTU',S0) ; CPI value
      IF (N0 NE 0) PITCH = N0
      END
   END

ELSEIF (POSTSFLAG) BEGIN ; ---POSTSCRIPT CHAR CHECK---------
   IF (SIZE(PFORMAT) GT 8 OR SIZE(PFORMAT) EQ 0) BEGIN ; Invalid length
      WRI PFORMAT||': Invalid.  PFORMAT name must be 1-8 characters long.'
      GOTO PROMPT_CHARS
      END
   DSNV=DSNVER('SYS4.POSTS.PROD.FONT#&(PFORMAT)'); look in library
   IF (DSNV NE 'OK') BEGIN ; unknown pformat
      WRI PFORMAT||':  Unknown PFORMAT name.'
      WRI 'Valid names are shown below.'
      TRY SHO DIR IN SYS4.POSTS.PROD.FONT
      GOTO PROMPT_CHARS
      END
   PITCH = 12
   IF (INDEX('TAB98B TTBDFB TACBAD',PFORMAT) NE 0) PITCH = 15
   ELSEIF (INDEX('LP',SUB(PFORMAT,1,1)) NE 0) BEGIN ; new format name
      S0=SUB(PFORMAT,5,1) ; codes pitch
      N0=IND('123456789ABCDEFGHIJKLMNOPQRSTU',S0) ; CPI value
      IF (N0 NE 0) PITCH = N0
      END
   END

ELSE BEGIN ;  ---------Non-PHOTO, non-MG CHARS CHECK ---------------
   IF (SIZE(PFORMAT) NE 4) BEGIN ; invalid length
      WRI PFORMAT||': Invalid.  Character set name must be 4 characters long.'
      GOTO PROMPT_CHARS
      END
   IF (X4090) BEGIN ; 4090 plain CHARS check
      IF (INDEX(CHAR_4090,PFORMAT) EQ 0) BEGIN
         WRI PFORMAT||':  Unknown CHARS name.'
         WRI 'Valid names are: '||CHAR_4090
         GOTO PROMPT_CHARS
         END
   END
; get pitch
S1 = SUBSTR(PFORMAT,1,2) ; first part e.g. TN
S2 = SUBSTR(PFORMAT,3,2) ; last part e.g. 10
PITCH = 0
IF (VER(S1,'ABCDEFGHIJKLMNOPQRSTUVWXYZ') EQ 0 AND VER(S2,'0123456789') EQ 0) PITCH=NCONVERT(S2)
IF (PFORMAT EQ 'U340' OR PFORMAT EQ 'U670') PITCH = 12
IF (PITCH EQ 0) REA VAL PITCH PRO 'Pitch (characters per inch)? '
END

END_CHARS:

GET_DEST:

IF (X4090 AND MACHINE NE 'RLG') GOTO END_DEST ; FORGET IT IF 4090
IF (MACHINE EQ 'RLG' AND X4090 AND ~PLAIN AND DEST EQ '') BEGIN ; RLG default
   DEST='SPECIAL'
   END
IF (~X4090 AND ~POSTSFLAG) PFORMAT =''
WRI ' '
IF (DEST NE '') TRY REA STR S0 UPP PRO 'DEST code (CR=&(DEST))?  '
   ELSE TRY REA STR S0 UPP PRO 'DEST code?  '
IF (TRYATTN) GOTO PRINT_OPTIONS
IF (IND('.HELP.?.','.'||S0||'.') NE 0) BEGIN
   TRY LIS 4801/4899 FRO &(HELPDSN) UNN
   GOTO GET_DEST
   END
S0 = STRIP(S0)
IF (S0 EQ 'ATTACHED' OR S0 EQ 'JPRINT') BEGIN
   DEST = 'ATTACHED'
   END
   ELSEIF (S0 NE '') DEST = S0
END_DEST:
IF (X4090 AND (DEST EQ 'SPECIAL' OR DEST EQ 'FITEST')) OFFLINE=TRUE

GET_COPIES:
; PROMPT FOR COPIES OPTION
IF (DEST EQ 'ATTACHED') GOTO GET_LINE_LIM
WRI ' '
TRY READ STRING S0 UPP PRO 'How many copies do you want (CR=default 1)? '
IF (TRYATTN) GOTO GET_CHARS
S0 = STRIP(S0)
IF (S0 NE '') BEGIN ; user specified something
   IF(INDEX('.HELP.?.','.&(S0).') NE 0) BEGIN ; HELP
      COMM
      COMM For multiple copies of your SCRIPT output, enter the number
      COMM of copies you want.
      COMM
      GOTO GET_COPIES
      END
   COPIES =NCONVERT(S0)
   END

GET_LINE_LIM:
; PROMPT FOR LINES OPTION ON THE JOBPARM CARD
;
WRI ' '
TRY READ STRING S0 PRO'Output line limit in thousands (CR=5)? '
IF (TRYATTN) GOTO GET_COPIES
S0 = UPPER(STRIP(S0))
IF(S0 NE '') BEGIN ; some response
   IF(INDEX('.HELP.?.','.&(S0).') EQ 0) LINES = NCONVERT(S0) ; got limit
   ELSE BEGIN ; need help
      COMM
      COMM The output line limit is specified in thousands of lines.
      COMM The default is 5 for 5,000 lines.  Your job is cancelled if
      COMM this limit is exceeded.
      COMM
      GOTO GET_LINE_LIM
      END
   END


CALC_CPU:
;  now estimate cpu time
NPAS =1 ; no. passes...tentative
;  Find out PASSES value from SCRIPT options
PCALL FWORD(SOPT2,S0,'2P',B0,S1) ; look for 2P
IF (B0) NPAS=2 ; found 2P
   ELSE BEGIN
   PCALL FWORD(SOPT2,S0,'PAS=',B0,S1) ; look for PAS=value
   IF (B0) BEGIN ; found PAS=
      IF (VERIFY(S1,' 0123456789') EQ 0) NPAS=NCONVERT(S1)
      END
   END
N5 = LINES ; LINE LIMIT OR 0
IF (N5 LE 0) N5 = 5 ; USE DEFAULT
CPU =N5*NPAS*2 ; EST. CPU=LINES*PASSES*2
IF (PHOTOFLAG) CPU = CPU*2
IF (IMGFLAG) BEGIN ; got graphics
   CPU = CPU*1.2
   LINES = LINES*1.5+10
   LINES = INT(LINES)
   END
IF (CPU LT 15) CPU =15
CPU=INT(CPU+.99)  ; round up

; SETUP SCRIPT JOB JCL
IF (ACTNO EQ WORKFILE) CLOSE ; we're in workfile, get new active
IF (JCLFILE NE 0) BEGIN;  ; JCL file exists
   IF (ACTNO NE JCLFILE) PICK &(JCLFILE)
   DEL 0.0/LAST
   END
ELSE BEGIN ; No JCL file yet, make one
  OPEN SCRIPT TITLE 'JCL generated by SCRIPT'
  JCLFILE = ACTNO
  END

IF (CPU LT 60) S0 =',TIME=(,&(FORMAT(CPU,-1,0)))' ; Time limit, seconds only
   ELSE S0 = ',TIME='||FORMAT((CPU+59)/60,-1,0)      ; Time limit, minutes
   IF (CPU LT 30) S0=''

;  which proc to use?

IF (PHOTOFLAG) BEGIN  ; PHOTO
   IF (IMGFLAG) PROCNAME = 'SCRIPTPG'
   ELSE PROCNAME = 'SCRIPTP'
   END
   ELSEIF (POSTSFLAG) PROCNAME = 'SCRIPTPS'
   ELSEIF (MGFLAG) PROCNAME = 'SCRIPTMG'
   ELSE PROCNAME = 'SCRIPT'

IF (PROCNAME EQ 'SCRIPTMG' AND X4090) BEGIN
   PUTEND //   JOB    &(S0),MSGCLASS=G
   END
ELSE PUTEND //   JOB    &(S0)
PUTEND /*JOBPARM LINECT=0,FORMS=&(FORMCODE)
IF (LINES GT 0) PUTEND /*JOBPARM LINES=&(LINES)
IF (X4090) BEGIN ; 4090 PRINTER
   IF (PROCNAME NE 'SCRIPT') BEGIN
      PUTEND /*JOBPARM PFORMAT=L132,FCB=FULL   **for all except SCRIPT output**
      END
   ELSE PUTEND /*JOBPARM FCB=FULL
   IF (PDUPLEX ) PUTEND /*OUTPUT &(FORMCODE) FORMS=&(FORMCODE),DUPLEX=YES
   ELSE  PUTEND /*OUTPUT &(FORMCODE) FORMS=&(FORMCODE),DUPLEX=NO
   IF (PROCNAME EQ 'SCRIPTP') PUTEND /*OUTPUT &(FORMCODE) PFORMAT=&(PFORMAT)
   END
;  If Laserjet, etc., set dest if any
IF (DEST NE 'LINOTRON' AND DEST NE 'ATTACHED' AND DEST NE '') PUTEND /*JOBPARM DEST=&(DEST)
IF (POSTSFLAG) BEGIN
   PUTEND /*JOBPARM PFORMAT=L132
   IF (DEST NE 'ATTACHED') PUTEND /*OUTPUT &(FORMCODE) PFORMAT=POST,DEST=&(DEST)
   END
;  If Laserjet, no DEST, just hold output for remote print
;  (also for ONLINE output, attached printer)
IF ( ~X4090 AND DEST EQ '') PUTEND /*JOBPARM HOLD=OUTPUT
IF (DEST EQ 'ATTACHED') PUTEND /*JOBPARM HOLD=OUTPUT
PUTEND //*
IF (COPIES EQ 0) COPIES =1
S0='PFORMAT'
IF (PROCNAME EQ 'SCRIPT') S0='CHARS'
IF (X4090) BEGIN
   PUTEND //SCRIPT EXEC &(PROCNAME),COPIES=&(COPIES),&(S0)=&(PFORMAT),FORMS=&(FORMCODE),
   IF (PROCNAME EQ 'SCRIPTMG' AND OFFLINE) PUTEND //  PPARM='OFFLINE=YES',MGVER=TEST,
   END
ELSEIF (~ONLFLAG) BEGIN ; Laserjet etc.
   PUTEND //SCRIPT EXEC &(PROCNAME),COPIES=&(COPIES),FORMS=&(FORMCODE),
   IF (MGFLAG) PUTEND //  PPARM='PRINTER=LASERJET,BI=UB',
   END
ELSE BEGIN ; online
   PUTEND //SCRIPT EXEC SCRIPTMG,MGVER=TEST,
   PUTEND //  PPARM='PRINTER=&(PRINTER)',
   END
IF (IMGFLAG) PUTEND //  IMGLIB='&(IMGLIB)',
IF (POSTSFLAG) PUTEND //  PFORMAT=&(PFORMAT),
IF (FONTVER NE '') PUTEND //  FONTVER=&(FONTVER),
FFTOP = 1
XOPT = ''
IF (PHOTOFLAG) BEGIN ; PHOTO
   IF (USER_FONT) XOPT='PHOTO'
   ELSE XOPT = 'PHOTO PROFILE'
   END
ELSEIF (POSTSFLAG) XOPT='POSTS PROFILE'
IF (PROCNAME EQ 'SCRIPTMG') XOPT='+CHARS=&(MGPCHAR),PL='||FORMAT(PL,2,0)
IF (PROCNAME EQ 'SCRIPT') XOPT='+CHARS=&(PFORMAT)'
IF (DUPLEX AND ~ONLFLAG) XOPT=XOPT||' DUPLEX'
IF (~X4090) FFTOP = 4;
IF (SOPT2 NE '')  PUTEND // SOPT2='&(SOPT2)',
PUTEND // SOPT1='FFTO=&(FFTOP),CO=10,CPI=&(PITCH),+FORMS=&(FORMCODE) &(XOPT)'
; SYSLIB DD CARD IF LIBRARY IS GIVEN
IF(LIBDSN NE '') BEGIN
   PUTEND //SYSLIB   DD  DSN=&(LIBDSN),DISP=SHR
   IF (LIBDSN2 NE '') PUTEND //         DD  DSN=&(LIBDSN2),DISP=SHR
   END
; SYSIN DD CARD
IF (MEMBER NE '') PUTEND //SYSIN  DD  DSN=&(INDSN)(&(MEMBER)),DISP=SHR
   ELSE PUTEND //SYSIN  DD  DSN=&(INDSN),DISP=SHR
; OVERRIDE DD IF NOT 4090
IF (MGFLAG AND (~X4090) AND ~ONLFLAG AND ~POSTSFLAG) BEGIN
   PUTEND //CONVERT.SYSOUT DD SYSOUT=(A,,&(FORMCODE)),
   PUTEND //  CHARS=(TN&(PITCH),BD&(PITCH),IT&(PITCH)),DCB=OPTCD=J,FCB=
   END
;
READY_TO_RUN:
; GET READY TO RUN THE JOB
;
CONTINUE = FALSE
WRI ' '
TRY REA STR S0 UPP PRO 'Enter RUN Options, QUIT, PAUSE, or RESTART (CR=run): '
IF (TRYATTN) GOTO RUN_ATTN
S0 = STRIP(S0)
IF (S0 EQ '') GOTO RUN
IF (S0 EQ 'RUN') BEGIN
   S0=''
   GOTO RUN
   END
IF(INDEX('.HELP.?.','.&(S0).') EQ 0) GOTO PARSE_RUN
COMM
TRY LIST 4301/4350 FRO &(HELPDSN) UNN
GOTO READY_TO_RUN

RUN_ATTN:
; ATTN exit from RUN
GOTO GET_SCRIPT_OPTS
;
; Normal response (RUN, CONTINUE, etc.)
;
PARSE_RUN:
S0 = S0||' '
PCALL FWORD(S0,S0,'CONTINUE',CONTINUE,S1) ; look for CONTINUE
IF (~CONTINUE) PCALL FWORD(S0,S0,'CONT',CONTINUE,S1) ; look for CONT
IF (CONTINUE) GOTO END_RUN_OPTS

IF(SUB(S0,1,3) EQ'RUN') BEGIN
   S0=STRIP(SUB(S0,4))
   END
IF(SUB(S0,1,3) EQ'LIS') GOTO LIST_JCL
IF(S0 EQ 'L') GOTO LIST_JCL
IF(SUB(S0,1,3) EQ'PAU' OR S0 EQ'P') GOTO PAUSE
IF(SUB(S0,1,3) EQ'QUI' OR S0 EQ'Q') GOTO QUIT
IF(SUB(S0,1,3) EQ'EXI') GOTO QUIT
IF(SUB(S0,1,3) EQ'RES') BEGIN ; clean up
   S0 = ''
   DSNPARM=''
   MEMBER=''
   GOTO INIT
   END
END_RUN_OPTS:
; fixup "hold=yes"
PCALL FWORD(S0,S2,'HOLD=',B0,S1) ; look for HOLD=
IF (B0) BEGIN ; Found HOLD= something
   S1=UPPER(S1)
   IF (S1 EQ 'Y' OR S1 EQ 'YES') BEGIN ; found HOLD=YES
      S0=S2 ; remove from run options string
      S0=STRIP(S0)||' HOLD ' ; put it back the right way
      END
   END

RUN:
WRI ' '
TRY RUN NOTIFY &(S0)
IF (~TRYERR) GOTO QUIT ; ran OK
WRI S0||': Invalid RUN options.'
GOTO READY_TO_RUN ; propmt for new RUN options
LIST_JCL:

LIST
GOTO READY_TO_RUN
PAUSE:
COMM The SCRIPT JCL is in the active file.
COMM Type XGO to resume.
XPAUSE
GOTO READY_TO_RUN

QUIT:
IF (ACTNO NE USERFILE) PICK &(USERFILE)
IF (CONTINUE) BEGIN
   DSNPARM=''
   GOTO INIT
   END
COMM Exiting SCRIPT
OUT:
END

; Data set checker subroutine  ------------------------------------
; DSNAME INPUT IN CHECKDSN; DSNINFO RETURN IN DSINFO
PROC DSNCHECK (CHECKDSN,DSINFO) BEGIN
DECLARE STRING SX1
SX1 = DSNVER(CHECKDSN)
DSINFO = ''
IF (SX1 EQ 'OK' OR SX1 EQ 'BAD MEMBER' OR SX1 EQ 'IN USE') DSINFO = DSNINFO(CHECKDSN)   ; OK
   ELSE WRI 'Error:  Data set '||CHECKDSN||' is '||SX1  ; error
RETURN(CHECKDSN,DSINFO)
END

;----------------- find and extract a word -----------------------
PROC FWORD(IN,OUT,WORD,FLAG,VALUE) BEGIN
;  IN is input string
;  OUT is output string (with word removed)
;  WORD is word to look for
;  FLAG is TRUE if the word was found, else FALSE
;  VALUE is the argument value found if WORD ended in = sign

DECLARE STRING XIN
DECLARE BOOLEAN EQF
EQF=FALSE
FLAG = FALSE
VALUE=''
XIN=' '||TRANSLATE(IN, ' ', ',')||' '  ; commas to blanks; pad
WORD = ' '||STRIP(WORD) ; pad word so find only if delimited
IF (SUBSTR(WORD,SIZE(WORD),1) NE '=') WORD=WORD||' ' ; pad on rt.
   ELSE EQF=TRUE ; we have WORD= so look for argument
OUT = IN
WL = SIZE(WORD)
IX = INDEX(XIN,WORD) ; find word
IF (IX GT 0) BEGIN ; Found the word
   FLAG = TRUE
;  Remove word from string...
   IF (IX EQ 1) F1=''             ;  word was first
      ELSE F1=SUBSTR(IN,1,IX-1)   ;  part ahead of word
   IF (SIZE(IN) LE IX+WL-2) F2='' ;  word was last
      ELSE F2=SUBSTR(IN,IX+WL-1)  ;  part after word
   IF (EQF) BEGIN ; this is word=value, get value
   IX = FIND(F2,' ,') ; next delimiter
   IF (IX EQ 0) BEGIN ; no more delims in line, take it all
      VALUE=F2
      F2=''
      END
      ELSEIF (IX EQ 1) BEGIN ; immediate delim, null arg
         VALUE=''
         IF (SIZE(F2) GT 1) F2=SUBSTR(F2,2)
         ELSE F2=''
         END
      ELSE BEGIN ; some arg
         VALUE=SUBSTR(F2,1,IX-1)
         IF (SIZE(F2) GT IX) F2=SUBSTR(F2,IX+1)
         ELSE F2=''
         END
      END
   IF (F1 NE '' AND F2 NE '') BEGIN ; check for extra comma now
      IF (SUBSTR(F1,SIZE(F1),1) EQ ',' AND SUBSTR(F2,1,1) EQ ',') F2=SUBSTR(F2,2)  ;  don't keep two commas
      END
;  Make sure some delimiter is left between parts
   IF (F1 NE '' AND F2 NE '') BEGIN ; got two parts
      S1=SUBSTR(F1,SIZE(F1),1) ; last of the first
      S2=SUBSTR(F2,1,1)        ; first of the last
      S1=S1||S2                ; trailing+leading delimiters
      IF (FIND(S1,', ') EQ 0) F1=F1||' ' ; put in a blank
      END
   OUT=F1||F2
   OUT=STRIP(OUT,'B',',')
   OUT=STRIP(OUT)
   OUT=STRIP(OUT,'B',',')
   END
RETURN(OUT,FLAG,VALUE)
END
