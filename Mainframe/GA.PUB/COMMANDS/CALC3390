XPROC () BEGIN
DECLARE NUM K D KL DL KN DN SP1 BKT
DECLARE NUM SP2 DL0 SP3
DECLARE STR S0
DECLARE BOOLEAN GVN_KNT UP

;  rev mcl 1998/05/26
;  Calculate blocks per track, or bytes per block, for 3390
;  Written by Mark C. Lawrence (GA.MCL) 1990/10/23
;  ref:  GC26-4574
;  1729 "cells" per track
;  space per block is 10+K+D cells (integer)
;  see "K" calcs in "key" code below
;  see "D" calcs in proc BCALC below
;  maximum block size 56664 bytes
LOOP:
K=0
KN=0
REA STR S0 UPP PRO 'Specify COUNT or LENGTH? ' ATTN=QUIT
S0 = STRIP(S0)
IF (S0 EQ '') GOTO QUIT            ; null is quit
IF (ABB('COUNT',S0,3)) BEGIN ; given count
   GVN_KNT=TRUE
   REA VAL BKT PRO 'Block Count? '
   END
ELSEIF (ABB('LENGTH',S0,3)) BEGIN ; given length
   GVN_KNT=FALSE
   REA VAL DL PRO 'Data Length? '
   END
ELSE BEGIN;    bad parm
   IF (S0 NE '?' AND S0 NE 'HELP') WRI S0||':  invalid.' ATTN=LOOP
   WRI 'Reply COUNT to specify number of blocks per track, or LENGTH to '  ATTN=LOOP
   WRI 'specify block length.' ATTN=LOOP
   GOTO LOOP
   END
REA VAL KL PRO 'Key Length? ' ATTN=QUIT
IF (KL EQ 0) GOTO NOKEY

KN = (KL+6)/232
PCALL CEIL(KN,KN)
K = (KL+6*KN+6)/34
PCALL CEIL(K,K)
K = K+9

NOKEY:
IF (GVN_KNT) BEGIN  ; given block count
   SP1=INT(1729/BKT)
   SP2=SP1-10-K     ; cells per block, max.
   DL0=INT(33.14*(SP2-9)-6)
;  value approximate because formulas require rounding up at 2 places.
;  now iterate thru BCALC to adjust value...we'll be within about 3
;  bytes...
   PCALL BCALC(SP3,DL0)
   IF(SP3 LE SP2) GOTO SMALL
   WHILE (SP3 GT SP2) BEGIN
      DL0=DL0-1
      PCALL BCALC(SP3,DL0)
      DL=DL0
      END
   GOTO GOTCT
SMALL:
   WHILE (SP3 LE SP2) BEGIN
      DL=DL0
      DL0=DL0+1
      PCALL BCALC(SP3,DL0)
      END
GOTCT:
   WRI 'Block length is '||FORMAT(DL,5,0)
   END ; given block count
ELSE BEGIN ; given data length

   PCALL BCALC(D,DL)

   SP1 = 10+K+D    ; cells per block
   BKT = INT(1729/SP1)
   WRI FORMAT(BKT,3,0)||' blocks per track'
   END ; given data length

;  common to given dl, given bkt

BYT=BKT*DL
EFF=BYT/56664
WRI FORMAT(BYT,5,0)||' bytes per track; '||FORMAT(EFF,2,5)||' utilization'

GOTO LOOP
QUIT:
END

PROC CEIL(I1,X) BEGIN
DECLARE NUM I2
I1=INT(X)
I2=X-I1
IF (I2 GT 0) I1=I1+1
RETURN(I1)
END

PROC BCALC(D,DL) BEGIN
;  DL is data length, bytes
;  D is cells per block (result)
DECLARE NUM DN
DN=(DL+6)/232
PCALL CEIL(DN,DN)
D = (DL+6*DN+6)/34
PCALL CEIL(D,D)
D=D+9
RETURN(D)
END
