; BOLDIT - An EXEC file developed by Celso Frazao, RLIN.
;
; This exec file will translate portions of text in your active
; file into the proper hexadecimal characters for bold or italicized
; printing with the multiple character sets MT10, MT12, MT15, ML10
; and MH12 on the 3800 laser printer.  When executing, to the user
; the exec file looks like a MODIFY command in WYLBUR, where you
; type key characters under the characters in your text that you
; want converted.
;
; To use this exec file most efficiently, you should define a WYLBUR
; command (perhaps in your logon exec file) as follows:
;
;     DEFINE BOLDIT AS 'EXEC FROM LIB#BOLDIT PUBLIC CLR PARM=(' APPEND ')'
;
; BOLDIT is only a suggested name; you might select a different
; command name.
;
; Then, to convert text on particular lines of your active file
; (such as lines 10 and 13), issue the command
;
;     COMMAND? boldit 10 13
;        10.     These three words should be in bold.
;     BOLD/ITAL?
;
; Then on the "BOLD/ITAL?" prompt line, type one of the following
; key characters beneath each of the characters you want to change:
;
;           B = bold
;           I = italic
;      R or N = revert to normal
;
; You do not need to type any key characters beneath characters you
; do not want to change. (Note the parallels to the MODIFY command.)
; Here is the above example continued:
;
;     COMMAND? boldit 10 13
;        10.     These three words should be in bold.
;     BOLD/ITAL? bbbbb bbbbb bbbbb
;        10.     ##### ##### ##### should be in bold.
;     BOLD/ITAL?                               (RETURN is pressed)
;        13.     These three words should be in italics.
;     BOLD/ITAL? iiiii iiiii iiiii
;        13.     ##### ##### ##### should be in italics.
;     BOLD/ITAL?                               (RETURN is pressed)
;
; When you press RETURN after typing in your key characters, WYLBUR
; displays the changed line and allows you to make more changes to
; that line if you want.  Pressing RETURN again accepts the change
; and allows you to alter the next line requested (in this case,
; line 13).  When finished, you are returned to command mode and
; the exec file is done.
;
; Note that unlike the MODIFY command, if you press ATTN to abort
; the BOLDIT process after you have already changed a line, the
; changes made are not ignored, but have in fact already been made.
;
;
; Then you may want to print your active file, using one of the
; multiple character sets, by using a command such as
;
;     PRINT CHARS=MT12
;
; Note that characters converted to bold or italic representation
; using this exec file may cause the terminal to behave abnormally
; (for instance, the terminal may beep, or the screen go blank, or
; the converted characters may just print as "#" as shown above)
; when the lines are listed.  These characters will print as desired
; on the 3800 laser printer even though they are not displayed
; properly on your terminal.
;
; For more information about the multiple character sets, see the
; documents "Character Sets for the 3800 Laser Printer" and
; "Using the 3800 Laser Printer".  For more information in general,
; please see the specialist consultants on the 3800 in Forsythe.
;
; Documentation revised by GA.JNK, 9/12/80.
;
; Variable usage:
;  S0 = remainder of command (line range)
;  S1 = source character (also temp string)
;  S2 = edit character
;  S3 = translated character
;  S4 = (unused)
;  S5 = 'edit' string
;  S6 = translate table for bold characters
;  S7 = translate table for italic characters
;  S8 = translate table for normal characters
;  S9 = user's original escape character
;
;  N1 = index for FIND, VERIFY, INDEX
;
;  W1 = last line # processed
;
COMM - This EXEC enables you to edit lines in your active file
COMM   so that they print as bold or italic characters with the
COMM   multiple character sets on the 3800 printer.
COMM
CLR VAR;
SET VAL S9 = ESC;
SET ESC &
SET VAL S0 = PARM;
IF (S0 EQ '') THEN READ STRING S0 PROMPT 'LINE RANGE? (RETURN=QUIT) ' ATTN=LAST-4; ask for line range if not supplied
;
;  Init bold translate table (X'FF' will not translate)
SET VAL S6 = S'E14142434445464748498A9AAABACACB'
SET VAL S6 = S6 || S'90515253545516575859CDCECFDADBDC'
SET VAL S6 = S6 || S'78796263646566676869DDDEDFEAEBEC'
SET VAL S6 = S6 || S'7071727374757677EDEEEFFAFBFCFDFE'
SET VAL S6 = S6 || S'40414243444546474849D04B4C4D4E4F'
SET VAL S6 = S6 || S'8051525354555657585990C05C5D5E5F'
SET VAL S6 = S6 || S'60616263646566676869566B6C6D6EE1'
SET VAL S6 = S6 || S'707172737475767778797A7BA07D7E7F'
SET VAL S6 = S6 || S'808A9AAABACACBCDCECF8A8B8CC08E8F'
SET VAL S6 = S6 || S'90DADBDCDDDEDFEAEBEC9A9B80D09E9F'
SET VAL S6 = S6 || S'A0A1EDEEEFFAFBFCFDFEAAABACADAEAF'
SET VAL S6 = S6 || S'B0B1BDBEBFBABBBCBDBEBABBBCBDBEBF'
SET VAL S6 = S6 || S'C0414243444546474849CACBCCCDCECF'
SET VAL S6 = S6 || S'D0515253545556575859DADBDCDDDEDF'
SET VAL S6 = S6 || S'E0E16263646566676869EAEBECEDEEEF'
SET VAL S6 = S6 || S'70717273747576777879FAFBFCFDFE'
;
;  Initialize italic translate table
SET VAL S7 = S'000102030405060708090A0B0C0D0E0F'
SET VAL S7 = S7 || S'101112131415161718191A1B1C1D1E1F'
SET VAL S7 = S7 || S'202122232425262728292A2B2C2D2E2F'
SET VAL S7 = S7 || S'303132333435363738393A3B3C3D3E3F'
SET VAL S7 = S7 || S'400102030405060708099D4B4C4D4E4F'
SET VAL S7 = S7 || S'9C111213141516171819108D5C5D5E5F'
SET VAL S7 = S7 || S'606122232425262728296A6B6C6D6E00'
SET VAL S7 = S7 || S'303132333435363720217A7B7C7D7E7F'
SET VAL S7 = S7 || S'9C0A0B0C0D0E0F1A1B1C0A8B8C8D8E8F'
SET VAL S7 = S7 || S'101D1E1F2A2B2C2D2E2F0B9B9C9D9E9F'
SET VAL S7 = S7 || S'7CA138393A3B3C3D3E3F0CABACADAEAF'
SET VAL S7 = S7 || S'B0B1B2B3B4B5B6B7B8B90DBBBCBDBEBF'
SET VAL S7 = S7 || S'8D0102030405060708090E0FCC1A1B1C'
SET VAL S7 = S7 || S'9D11121314156A1718191D1E1F2A2B2C'
SET VAL S7 = S7 || S'E00022232425262728292D2E2F38393A'
SET VAL S7 = S7 || S'303132333435363720213B3C3D3E3F'
;
;  Initialize bold-or-italic-to-normal translate table
SET VAL S8 = S'6FC1C2C3C4C5C6C7C8C9818283848586'
SET VAL S8 = S8 || S'5AD1D2D3D4D54FD7D8D9878889919293'
SET VAL S8 = S8 || S'F8F9E2E3E4E5E6E7E8E9949596979899'
SET VAL S8 = S8 || S'F0F1F2F3F4F5F6F7A2A3A4A5A6A7A8A9'
SET VAL S8 = S8 || S'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
SET VAL S8 = S8 || S'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
SET VAL S8 = S8 || S'6061E2E3E4E5E6E7E8E9D66B6C6D6E6F'
SET VAL S8 = S8 || S'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
SET VAL S8 = S8 || S'50818283848586878889818B8C5B8E8F'
SET VAL S8 = S8 || S'5A919293949596979899829B504A9E9F'
SET VAL S8 = S8 || S'7CA1A2A3A4A5A6A7A8A983ABACADAEAF'
SET VAL S8 = S8 || S'B0B1B2B3B4B5B6B7B8B984BBBCBDBEBF'
SET VAL S8 = S8 || S'5BC1C2C3C4C5C6C7C8C98586CC878889'
SET VAL S8 = S8 || S'4AD1D2D3D4D5D6D7D8D9919293949596'
SET VAL S8 = S8 || S'E06FE2E3E4E5E6E7E8E9979899A2A3A4'
SET VAL S8 = S8 || S'F0F1F2F3F4F5F6F7F8F9A5A6A7A8A9'
;
IF(S0 EQ '') EXEC 189
CH 1 TO X'FF' IN &S0 NOL;        so we can do any associative stuff
P F NOL;
;
;NEXTLINE :
P X'FF'1 (1) IN */L NOL;              get a marked line
IF (* LT 0) POINT ";DONE "1 (1) EXEC NOL;    jump if no more
CHANGE X'FF'1 TO '' IN * NOL;         restore the line
SET VAL W1 = *;                       remember last line touched
;
;DISPLAY :
L *;
READ STR S5 UPP ATTN=LAST-4 PRO 'BOLD/ITAL? ';   get "edit" string
IF (SIZE(S5) EQ 0) POINT ";NEXTLINE "1 (1) EXEC NOL; done w/ line
;
;NEXTSCAN :
SET VAL N1 = VERIFY(S5,' ');          find non-blank character
IF (N1 EQ 0) POINT ";DISPLAY "1 (1) EXEC NOL;   nothing to change
SET VAL S2 = SUBSTR(S5,N1,1);           pick up the edit character
SET VAL S5 = SUB(S5,1,N1-1) || " " || SUB(S5,N1+1); blank in edit str
READ STRING S1 USING * COLUMNS &N1/&N1;   get the source character
IF (S2 EQ 'B') SET VAL S3 = SUB(S6,1+NHEX(DISPLAY(S1)),1); translate
ELSE IF (S2 EQ 'I') SET VAL S3 = SUB(S7,1+NHEX(DISPLAY(S1)),1);
ELSE IF (S2 EQ 'R') SET VAL S3 = SUB(S8,1+NHEX(DISPLAY(S1)),1);
ELSE IF (S2 EQ 'N') SET VAL S3 = SUB(S8,1+NHEX(DISPLAY(S1)),1); ='R'
ELSE WRITE 'INVALID EDIT CHARACTER';
ELSE POINT ";DISPLAY "1 (1) EXEC NOL;         re-prompt
;
IF (S3 NE "'") CH &N1/&N1 TO '&S3' IN * NOL;   update WYLBUR line
          ELSE CH &N1/&N1 TO "&S3" IN * NOL;
POINT ";NEXTSCAN "1 (1) EXEC NOL;     go process next edit char
;
;DONE :     **** NOTE:  M-U-S-T be at end of exec file ****
CH X'FF'1 TO '' NOL;                  ensure clean file if attn
SET * = &W1;                          point to last mod line
SET ESC &S9;
CLR EXEC;                              go away

