; BACKUP
;  Recent revision history:
;
;  03/12/02 slp  Replace $dump ucb with dump ucb
;  07/12/96      delete SYSC, add SMS
;  12/22/94      allow S20000 tapes.  null EXVOL if VOL given
;  12/03/93      tape unit name change
;  10/07/92      change "all PUB1nn" prompt
;  07/13/92      bug fix: SETUP for T3480
;  06/29/92      bug fix: default unit for specified vol.
;  06/24/92      default to 3480 output; check outcode
;  02/26/91      3480 support
;  08/13/90      Correct problem with volseq/volcnt in TLMS
;  06/15/89      Clarify "default volumes" prompt for SYSA/SYSC
;  10/24/88      FROM/TO compatibility with NODE=SYSn.
;  09/06/88      ATTN handling of disk index, again...
;  08/30/88      Correct handling of disk, tape dsnames
;                Use DSNFORMAT to qualify names
;  08/23/88      Correct ATTN handling of "tape index dsn" prompt
;                Correct ATTN handling of "disk index dsn" prompt
;  05/11/88      OPEN new active file; prompt for OPTION;
;                various message cleanups
;  06/03/87      New variables; nonspecific vol. for RLG machine
;  01/30/86      Generate unique tape and disk dsn for index file
;  04/24/85      Check tape location
;
;
; variable usage
;
;  DVOLPRMT Prompt text: default vols to backup (machine dependent)
;  FILESEQ  Starting file sequence number
;  IXDSN    Dsname of index file on disk
;  IXVOL    Disk volume for index file
;  JNAME    "user name" for JOB statement
;  LNODE    node sublists
;  NODE     Node
;  OLDESC   User's escape char.
;  OPFROM   FROM value
;  OPTION   OPTION value for BACKUP
;  OPTO     TO value
;  OUTCODE  TLMS output use code
;  S0       misc. prompts and replies
;  TAPEDSN  Dsname of index file on tape
;  TAPEVOL  Tape volume serial
;  TUNIT    Unit name for tape
;  UACCT    Account
;  VOLHELP  line range in this exec for HELP VOLS (machine dependent)
;  VOLS     Disk volume(s) to backup
;
;  N0       Misc. indices etc.
;  N1
;  OLDACT   Previous ACTIVE file number or 0 if none
COMM BACKUP version of 1996/07/12
COMM
CLEAR VARIABLES
DECLARE STRING  TAPEVOL TUNIT VOLS IXDSN IXVOL LNODE TAPEDSN NODE UACCT OUTCODE
DECLARE STRING  OLDESC OPTION JNAME OPFROM OPTO DVOLPRMT VOLHELP TPREFIXES
DECLARE NUM  FILESEQ OLDACT LIXD LIXT
OLDESC =ESC
SET ESC &
OLDACT = ACTNO
IF (LINES EQ 0) OLDACT=0
FILESEQ =0
TUNIT='T3480'
TPREFIXES='AS AU AX BS BU BX CS ES EU EX ED EN RS D0 S0 S1 S2 S3 U0 X0'
OPTION=''
DVOLPRMT='All PUB and STR volumes'
VOLHELP= '2301/2329'   ; HELP VOL text
IF (MACHINE EQ 'RLG') DVOLPRMT='All volumes'
   THEN VOLHELP='2331/2359'
;
OPEN BACKUP TITLE 'JCL generated by UTIL BACKUP'

REA STR S0 UPP ATTN=1200 PRO 'Do you need instructions? '
IF (SIZE(S0) EQ 0) EXEC 150
IF (SUBSTR(S0,1,1) EQ 'N') EXEC 150
LIS 2001/2099 EXE UNN ATTN=150

;  Account(s)
UACCT =''  ; Default account: none (BACKUP will supply job acct)
REA STR S0 UPP ATTN=100 PRO 'Account(s) for which you want a backup made (RETURN=your account): '
IF (S0 EQ '') EXE 300 ; Default
IF (IND(S0,'?') NE 0) LIS 2101/2199 EXE UNN ATTN=200
   THEN EXE 200
; clean up the list.
EXEC 1500 SAVE
UACCT =S0   ; SQUASHED CLEANED LIST
IF (IND(UACCT,',') EQ 0) EXE 300 ; ONLY ONE
IF (SUB(UACCT,1,1) NE '(') UACCT ='('||UACCT
IF (SUB(UACCT,SIZE(UACCT),1) NE ')') UACCT =UACCT||')'
;
;  NODE
;
NODE =''
IF (UACCT NE '') EXE 400 ; NODE, ACC are mutually exclusive
COMM
COMM Node defining data sets to be backed up (RETURN=all data sets
REA STR S0 UPP ATTN=200 PRO 'belonging to your account)? '
IF (SIZE(S0) EQ 0) EXE 400
IF (SUBSTR(S0,1,1) EQ '?') LIS 2150/2199 EXE UNN ATTN=300
   THEN EXEC 300
NODE = STRIP(S0)              ; Copy cleaned string
;  NODE CHECK
;  NODE=node (or list of nodes)
IF (SUBSTR(NODE,1,1) EQ '(') NODE =SUB(NODE,2,SIZE(NODE)-2) ;strip()
LNODE ='(' ; will receive node or node list
N0 = INDEX(NODE,',')  ; find next delimiter
IF (N0 EQ 0) N0 = SIZE(NODE)+1 ; if last or only item
IF (N0 LE 1) EXE 330 ; nothing left
S0 = SUB(NODE,1,N0-1) ; get subparm
NODE =SUB(NODE,N0+1) ; strip from input list
;  SYSn -> SYSn.  (add the dot, else DSNFORMAT won't recognize)
IF (SIZE(S0) EQ 4 AND SUB(S0,1,3) EQ 'SYS' AND VER(SUB(S0,4,1),'12345') EQ 0) S0=S0||'.'
TRY S0 = DSNFORMAT(S0)   ; Add default qualifier
IF (TRYERR) WRI S0||': Invalid.'
   THEN EXEC 300
;
;  add subparm to output list
LNODE =LNODE||S0||','
IF (SIZE(NODE) GT 0) EXE 312 ; do another
;
; here at end of list of nodes
N0 = SIZE(LNODE) ; length of result string
IF (SUB(LNODE,N0,1) EQ ',') LNODE =SUB(LNODE,1,N0-1) ; strip ,
NODE =LNODE||')'  ; list of qualified nodes back in NODE
;
LNODE=SUBSTR(LNODE,2)  ; strip ( for from/to qulaifier
IF (SUB(REV(LNODE),1,1) NE '.') LNODE=LNODE||'.' ; need trailing dot
IF (INDEX(LNODE,',') NE 0) LNODE='' ; forget it if list

; FROM/TO options
OPTO=''
OPFROM=''
IF (INDEX(NODE,',') GT 0 OR INDEX(UACCT,',') GT 0) EXE 500
WRI ' '
REA STR S0 UPP PRO 'Specify FROM or TO options (YES/NO)? ' ATTN=300
S0=STRIP(S0)
IF (S0 EQ '') EXE 500 ; RETURN=NO
IF (S0 EQ '?') LIS 3101/3199 EXE UNN ATTN=400 ; help from/to
   THEN EXEC 400
IF (S0 EQ 'YES' OR S0 EQ 'OK' OR S0 EQ 'Y') EXE 420 ; yes
IF (S0 EQ 'NO' OR S0 EQ 'N') EXE 500 ; No
WRI 'Please answer YES or NO.'
EXE 400

; OK, get options
REA STR OPFROM UPP PRO '   FROM=' ATTN=400
IF (STRIP(OPFROM) EQ '') EXE 430 ; null FROM
IF (NODE EQ '') EXE 424 ; no node
;  here if node was specified
   IF (INDEX(OPFROM,NODE) NE 1) OPFROM=LNODE||OPFROM
   EXEC 430
;  No node
IF (UACCT EQ '') TRY OPFROM = DSNFORMAT(OPFROM)
   ELSE TRY OPFROM = DSNFORMAT(OPFROM||' ACCT='||UACCT)
IF (TRYERR) WRI OPFROM||': Invalid, must be partial or full dsname'
   THEN EXEC 420

REA STR OPTO UPP PRO '   TO=' ATTN=400
IF (STRIP(OPTO) EQ '') EXE 440 ; null
IF (NODE EQ '') EXE 433 ; no node
;  here if node was specified
   IF (INDEX(OPTO,NODE) NE 1) OPTO=LNODE||OPTO
   EXEC 440
;  No node
IF (UACCT EQ '') TRY OPTO = DSNFORMAT(OPTO)
   ELSE TRY OPTO = DSNFORMAT(OPTO||' ACCT='||UACCT)
IF (TRYERR) WRI OPTO||': Invalid, must be partial or full dsname'
   THEN EXEC 430

; FROM/TO compatibility check
IF (OPTO EQ '' OR OPFROM EQ '') EXE 460 ; not both specified
IF (OPTO GT OPFROM) EXE 450 ; OK, TO>FROM
WRI 'ERROR:  TO value '||OPTO||' is less than FROM value '||OPFROM
EXE 400

; total length check
N1=SIZE(OPTO)+SIZE(OPFROM)
IF (N1 LE 49) EXE 460 ; OK, fits on JCL line
WRI 'ERROR:  FROM+TO options too long--'
WRI 'FROM='||OPFROM||'  TO='||OPTO
WRI 'Total length may not exceed 49 characters.'
EXE 400

; Construct OPTION symbolic parameter for TO/FROM
OPTION=''
IF (OPTO EQ '' AND OPFROM EQ '') EXE 500 ; nuthin'
IF (OPFROM NE '') OPTION='FROM='||OPFROM
   THEN IF (OPTO NE '') OPTION=OPTION||','
IF (OPTO NE '') OPTION=OPTION||'TO='||OPTO

;
; DISK VOLUMES
;
VOLS =''
COMM
WRI 'Enter a list of the disk volumes (separated by commas) containing'
WRI 'data sets to be backed up (RETURN='||DVOLPRMT||'): '
WRI ' '
REA STR S0 UPP ATTN=200 PRO 'VOL = '
IF (SIZE(S0) EQ 0) EXE 550
IF (SUBSTR(S0,1,1) EQ '?') LIS &(VOLHELP) EXE UNN ATTN=500
   THEN EXEC 500
;
; CLEAN UP LIST
;
EXEC 1500 SAVE
VOLS =S0

; CHECK FOR MULTIPLE VOLS
IF (SIZE(VOLS) GT 6) VOLS ='('||VOLS||')'

;  INDEX FILE
;
IXDSN ='BACKUP.INDEX.D'||SUBSTR(DATE,16,2)||SUBSTR(DATE,10,2)||SUBSTR(DATE,13,2)
IXDSN=DSNFORMAT(IXDSN)
LIXD=SIZE(IXDSN) ; Length of generated name
COMM
WRI 'Data set name for the INDEX file on disk?'
REA STR S0 UPP ATTN=707 PRO '(RETURN=&(IXDSN), ATTN=no index file): '
S0 = STRIP(S0)
IF (SIZE(S0) EQ 0) EXE 730  ; OK, use default
IF (SUBSTR(S0,1,1) EQ '?') LIS 2401/2449 EXE UNN ATTN=700
   THEN EXEC 700
EXE 710 ; user gave name
; ATTN response to prompt
IXDSN ='' ; NO DISK INDEX
REA STR S0 UPP PRO 'Continue, Backup to previous prompt, or Quit? (RETURN=continue) ' ATTN=1300
S0=STRIP(S0)
IF (S0 EQ '') EXE 800 ; CR=continue, no index file
IF (SUB(S0,1,1) EQ 'Q') EXE 1300 ; Quit
IF (SUB(S0,1,1) EQ 'B') EXE 500 ; backup
IF (SUB(S0,1,1) EQ 'C') EXE 800 ; continue
REA STR S0 UPP PRO 'Please enter C to continue, B to backup, Q to quit: ' ATTN=1300
EXE 707.2

LIXD=0       ; show not a generated name
IXDSN=S0     ; copy given dsn

;  INDEX DSNAME VALIDITY CHECK
IF (IND(IXDSN,'#') EQ 0) EXE 730 ; EXCLUDE LIBRARY MEMBERS
COMM &(IXDSN):  INVALID.
LIST 2451/2499 EXE UNN ATTN=700
EXE 700

TRY IXDSN =DSNFORMAT(IXDSN) ; qualify and test
IF (TRYERR) EXEC 700        ; bad syntax
;
; CHECK FOR DUPLICATE INDEX
;
DUM CAT LIK '&(IXDSN)' INT
IF (LINES EQ 0) EXE 760 ; NOT FOUND...GOOD NEWS
POI '&(IXDSN) ' NOLIST ; Find exact match (note trailing blank)
IF (* LT 0) DEL 0/LAST ; Not found
   THEN EXE 760
; duplicate name
IF (LIXD EQ 0) EXE 747 ; Not generated name, user must fix it
; generated name was duplicate, make it unique
REA STR S0 USI LAST COL 3/46 ; last name in catlg
S0=SUBSTR(S0,LIXD+1,1)
N1=INDEX(' ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789',S0) ; where were we
IF (N1 EQ 0) N1=1
S1=SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789',N1,1) ;  next char.
IXDSN=IXDSN||S1
DEL 0/LAST
EXE 760

; User-supplied duplicate name

WRI 'ERROR:  &(IXDSN) is already cataloged.'
DEL 0/LAST
LIS 2501/2599 EXE UNN ATTN=700
EXE 700

;  VOLUME FOR INDEX

COMM
IXVOL =''
IF (MACHINE EQ 'RLG') EXE 780
;  INDEX VOLUME, SYSA
REA STR S0 UPP ATTN=700 PRO 'Volume for index file (RETURN=use SMS)? '
IF (SIZE(S0) EQ 0) EXE 799         ; NO VOL, USE NONSPECIFIC REQ.
IF (SUBSTR(S0,1,1) EQ '?') LIS 2601/2649 EXE UNN ATTN=760 ; HELP
   THEN EXE 760
IXVOL = STRIP(S0)
IF (SIZE(S0) EQ 6) EXE 790         ; GOOD SIZE FOR VOL-SER
COMM &S0:  INVALID VOLUME
IXVOL =''
EXE 760

; INDEX VOL, RLG SYSTEM
IXVOL =''
REA STR S0 UPP ATTN=700 PRO 'Volume for Index file: '
IF (S0 EQ '?') LIS 2651/2699 EXE UNN ATTN=760 ; HELP
   THEN EXE 760
IF (S0 EQ '') LIS 2651/2699 EXE UNN ATTN=760 ; Null response invalid
   THEN EXE 760
IXVOL = STRIP(S0) ; COPY CLEANED VOL
IF (SIZE(IXVOL) EQ 6) EXE 790         ; GOOD SIZE FOR VOL-SER
COMM &(IXVOL):  INVALID VOLUME
IXVOL =''
EXE 760
; INDEX VOLUME CHECK
DUMP UCB &(IXVOL)
IF (IND(LINE(LAST),'NOT FOUND') NE 0) WRI IXVOL||': volume not found.'
   THEN DEL 0/LAST
   THEN EXE 760 ; TRY AGAIN
DEL 0/LAST

;  TAPE VOLUME
;
TUNIT='T3480'
COMM
COMM Volume serial of the tape onto which data sets are to be
READ STR TAPEVOL UPP ATTN=700 PRO 'copied (RETURN=Obtain a rental tape)? '
IF (SIZE(TAPEVOL) EQ 0) TAPEVOL = 'SCRTCH'
   THEN EXE 899
IF (SUBSTR(TAPEVOL,1,1) EQ '?') LIS 2201/2299 EXE UNN ATTN=800 ; EXPLAIN
   THEN EXEC 800

IF (TAPEVOL EQ '3480' OR TAPEVOL EQ 'T3480') TAPEVOL='SCRTCH'
   THEN TUNIT='3480'
   THEN EXEC 899
IF (TAPEVOL EQ '3420' OR TAPEVOL EQ 'T3420' OR TAPEVOL EQ 'TAPE' OR TAPEVOL EQ 'T6250') TAPEVOL='SCRTCH'
   THEN TUNIT='T6250'
   THEN EXEC 899

IF (SIZE(TAPEVOL) NE 6) WRI TAPEVOL||':  Invalid.  Tape number must be 6 characters'
   THEN EXE 800
S0 = SUBSTR(TAPEVOL,1,2)          ; PREFIX
IF (INDEX(TPREFIXES,S0) NE 0) EXE 820  ; PREFIX OK
WRI S0||' is not a valid tape number prefix.'
EXE 800

S0 = SUBSTR(TAPEVOL,3,4)          ; SUFFIX
IF (VERIFY(S0,'0123456789') NE 0) WRI TAPEVOL||':  Invalid; last 4 characters must be numeric.'
   THEN EXE 800
IF (SUB(TAPEVOL,2,1) GE '0') TUNIT='T3480'
   ELSE TUNIT='T6250'
; tape check
TRY DUMP TAPE &(TAPEVOL) INTERNAL
IF (TRYERR) WRI TRYMSG
   THEN EXEC 800
S0 = SUB(LINE(LAST),147,5)   ; VOLSEQ (2 COL), BLANK, VOLCNT
IF (S0 EQ ' 1  1') EXE 830 ; OK...VOL 1 OF 1
IF (S0 EQ ' ?  ?') EXE 830 ; OK...NEW TAPE, NO INFO
TRY QUI N1=NCON(SUB(S0,1,2))   ; VOLSEQ
IF (TRYERR) EXE 830 ; Not numeric, don't check
TRY QUI N2=NCON(SUB(S0,4,2))   ; VOLCNT
IF (TRYERR) EXE 830
IF (N1 GE N2) EXE 830  ; OK--last volume
WRI 'ERROR:  This tape is volume '||SUB(S0,1,2)||' of '||SUB(S0,4,2)
WRI 'BACKUP cannot be used with multivolume tapes.'
DEL LAST
EXE 800

; OK, IS VOLUME 1 OF 1
S0 = SUB(LINE(LAST),138,2) ; LABEL
IF (S0 NE 'SL') WRI 'ERROR:  Tape &(TAPEVOL) has label type &S0; BACKUP requires LABEL=SL.'
   THEN DEL LAST
   THEN EXE 800
REA VAL FILESEQ USI LAST COL 90/93   ; FILE COUNT
FILESEQ =FILESEQ+1                    ;   NEXT FILE

; location
REA VAL S0 USI LAST COL 188/189 ; LOCATION CODE
OUTCODE=SUB(LINE(LAST),131,1) ; output use code
IF (IND('.10.83.','.&S0.') GT 0) EXE 843 ; AT FORSYTHE, OK
WRI 'Tape '||TAPEVOL||' is not at Forsythe.  Location code is '||S0 ATTN=NEXT
DEL LAST
EXEC 800
DEL LAST
;  OUTCODE
IF (OUTCODE NE '1') EXE 850 ; OK
WRI 'Tape '||TAPEVOL||' has output use code 1 (no write).'
IF (YESNO('OK to reset outcode? ') NE 'YES') EXE 800
SET TAPE &(TAPEVOL) OUTCODE=2  ; reset outcode

;  FILE SEQUENCE
;
IF (TAPEVOL EQ 'SCRTCH') EXEC 899        ; MUST START AT FILE 1 IF SCRATCH TAPE
COMM
REA STR S0 UPP ATTN=800 PRO 'At which file sequence number do you wish to start (RETURN=&(FILESEQ))? '
IF (SIZE(S0) EQ 0) EXE 899         ; Default
IF (SUBSTR(S0,1,1) EQ '?') LIS 3001/3049 EXE UNN ATTN=850
   THEN                    LIS 3051/3099 EXE UNN ATTN=850
   THEN EXE 850
S0 = STRIP(S0)   ; CLEAN UP STRING
;
N0 = VER(S0,'0123456789')    ; VERIFY ALL NUMERIC
IF (N0 NE 0) S0 = SUBSTR(S0,N0,1)         ; BAD CHAR.
   THEN COMM &S0:  INVALID:  Characters must be all numeric
   THEN EXE 850

FILESEQ =S0    ;  COPY/CONVERT FILESEQ
IF (FILESEQ GT 1) LIS 3051/3099 EXE UNN ATTN=900 ; full tape warning
;  INDEX FILE ON TAPE
;
TAPEDSN ='BACKUP.INDEX.T'||SUBSTR(DATE,16,2)||SUBSTR(DATE,10,2)||SUBSTR(DATE,13,2)
TAPEDSN=DSNFORMAT(TAPEDSN)
LIXT=SIZE(TAPEDSN)
COMM
WRI 'Data set name for the INDEX file on tape?' ATTN=800
REA STR S0 UPP ATTN=800 PRO '(RETURN=&(TAPEDSN)): '
IF (SIZE(S0) EQ 0) EXE 930  ; OK, use default
IF (SUBSTR(S0,1,1) EQ '?') LIS 2701/2749 EXE UNN ATTN=900
   THEN EXEC 900

TAPEDSN = STRIP(S0)
LIXT=0

;  Qualify and check index dsname
IF (IND(TAPEDSN,'#') EQ 0) EXE 930 ; EXCLUDE LIBRARY MEMBERS
COMM &(TAPEDSN):  INVALID.  # not allowed in name.
LIST 2751/2799 EXE UNN ATTN=900
EXE 900

TRY TAPEDSN =DSNFORMAT(TAPEDSN)
IF (TRYERR) EXE 923
;
; CHECK FOR DUPLICATE INDEX
;
DUM CAT LIK '&(TAPEDSN)' INT
IF (LINES EQ 0) EXE 950 ; NOT FOUND...GOOD NEWS
POI '&(TAPEDSN) ' NOLIST ; Find exact match (note trailing blank)
IF (* LT 0) DEL 0/LAST ; Not found
   THEN EXE 950
; duplicate name
IF (LIXT EQ 0) EXE 947 ; Not generated name, user must fix it
; generated name was duplicate, make it unique
REA STR S0 USI LAST COL 3/46 ; last name in catlg
S0=SUBSTR(S0,LIXT+1,1)
N1=INDEX(' ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789',S0) ; where were we
IF (N1 EQ 0) N1=1
S1=SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789',N1,1) ;  next char.
TAPEDSN=TAPEDSN||S1
DEL 0/LAST
EXE 950

; User-supplied duplicate name

WRI 'ERROR:  &(TAPEDSN) is already cataloged.'
DEL 0/LAST
LIS 2801/2899 EXE UNN ATTN=900
EXE 900
;
;  BUILD JCL
;
JNAME = NODE                      ; NODE
IF (SUBSTR(JNAME,1,1) EQ '(') JNAME = SUBSTR(JNAME,2,SIZE(JNAME)-2) ; no()
IF (SUBSTR(JNAME,1,4) EQ 'WYL.') JNAME = SUBSTR(JNAME,12)  ; NO PREFIX IN USERNAME FIELD
IF (SIZE(JNAME) LT 14) JNAME = JNAME||' '||VOLS   ; NODE, VOLUME LIST
IF (SIZE(JNAME) LT 14) JNAME = 'Backup '||JNAME
IF (SIZE(JNAME) GT 20) JNAME = SUBSTR(JNAME,1,20)
;
PUTEND //   JOB  ,'&(JNAME)',TIME=2
IF (TUNIT EQ '3480' OR TUNIT EQ 'T3480') PUTEND /*SETUP T3480=1 OUTPUT=&(TAPEVOL)
   ELSE PUTEND /*SETUP T6250=1 OUTPUT=&(TAPEVOL)
PUTEND /*JOBPARM PURGE=NO,NOTIFY=&(ACC)
PUTEND // EXEC BACKUP,TUNIT=&(TUNIT),
IF (TAPEVOL NE 'SCRTCH')     PUTEND // TAPE=&(TAPEVOL),
IF (SIZE(VOLS) NE 0)         PUTEND // VOL='&(VOLS)',
   THEN                      PUTEND // EXVOL=,
IF (UACCT NE '')             PUTEND // ACC='&(UACCT)',
IF (OPTION NE '')            PUTEND // OPTION='&(OPTION)',
IF (SIZE(IXDSN) NE 0)        PUTEND // DSN='&(IXDSN)',IXVOL=&(IXVOL),
                             PUTEND // TAPEDSN='&(TAPEDSN)',TDISP=CATLG,
;
IF (SIZE(NODE) GE 5)         PUTEND // NODE='&(NODE)',
IF (FILESEQ NE 0)            PUTEND // FILE=&(FILESEQ)
CHANGE ', ' TO '' IN LAST NOLIST
;
;  READY TO RUN
;
COMM
REA STR S0 UPP ATTN=1100 PRO 'RUN? '
IF (SIZE(S0) EQ 0) EXE 1030
IF (SUBSTR(S0,1,1) EQ 'Y') EXE 1030
IF (S0 EQ 'OK') EXEC 1030
IF (S0 EQ 'HOLD') EXE 1035         ; RUN HOLD
IF (SUBSTR(S0,1,1) EQ 'N') EXE 1100
;
LIS 3201/3299 EXE UNN ATTN=1000 ; EXPLAIN RUN
EXE 1000
;
RUN NUM
IF (OLDACT NE 0) PICK &(OLDACT)
EXE 1200
;
PUTEND /*JOBPARM HOLD=OUTPUT,PURGE=NO
EXE 1030
; DON'T RUN
;
COMM The JCL is in your active file; issue a RUN command to submit the job.
IF (OLDACT NE 0) WRI 'Type PICK &(OLDACT) to restore your previous active file.'
;
;
; CLEAN UP
;
SET ESC '&(OLDESC)'
CLR EXE

; ABORT
CLOSE
IF (OLDACT NE 0) PIC &(OLDACT)
EXE 1200

;
; Subroutine to squash out imbedded blanks, put commas in where
; blanks were, remove redundant commas.  For example,
;   PUB101,  PUB102     PUB103  becomes PUB101,PUB102,PUB103
;
; Input/Output in S0
; N0 is used
; uses ESC char, writes/deletes END line
;
; return is via EXEC RETURN
;
S0 = STRIP(S0)
PUTEND &S0
SQUASH LAST
CH ' ' TO ',' IN LAST NOLIST
CH ',,' TO ',' IN LAST NOLIST
CH ', ' TO '' IN LAST NOLIST
REA STR S0 USI LAST DELETE
EXEC RETURN
----help general----

This EXEC file will submit a job to make a backup copy of your disk
data sets on tape.  Optionally, it will save (on disk) an "INDEX"
file that contains the control statements necessary to restore the
files to disk at a later time; a copy of this file is always saved on
the tape.

A document, BACKUP/RESTORE, is available that describes this program
in further detail.  Use the PUBLISH command to obtain this document.

In the prompts that follow, RETURN means "press the RETURN key on
your terminal without typing anything".

If you respond to a prompt with a question mark (?), you will be
given an explanation of that prompt, and the prompt will be reissued.

If you press BREAK in response to a prompt, you will be returned to
the previous prompt.

----help account----  (and node)

Normally, BACKUP will copy all data sets belonging to the account
under which it is run.  You may reply to this prompt with an account,
a group code, a user code, or a list with any combination of such
items, separated by commas.  There may up to 10 items in the list,
but its length may not exceed 60 characters.

The rules for processing these items are:

* If an account (as gg.uuu) is specified, all data sets belonging
  to that account are copied.
* If a group code is specified, all data sets belonging to that group
  are copied.
* If a user code is specified, it is assumed to belong to the last
  preceding group code specified in the list (as gg or gg.uuu), or,
  if no such item precedes it in the list, to the group under which
  the job is run.
* Items must be separated by commas.

You must have at least READ access to the data sets thay you want
to backup; data sets to which you don't have access will be skipped.

Instead of an account or accounts, you may specify a "node" that
qualifies the data sets to be copied.  For example, you could specify
a node of PROJECT1 and BACKUP would then copy all your data sets that
begin with PROJECT1.  To specify a node, respond with RETURN to the
"account" prompt; BACKUP will then prompt for a node.

You can use the "node" option to specify data sets belonging to
several accounts; to do so, include the WYL.gg.uuu prefix on each
node.

----help tape volume----

Tapes are identified by a six-character "volume serial number"
(actually, a group of letters and numerals).  At the Stanford Data
Center, tape volume serial "numbers" are usually a combination of two
letters and four numerals (e.g. AS9876, AX4567) or one letter and 5
numerals (e.g. S00123).  The Data Center maintains two "scratch
pools" of rental tapes; one (the AS and ES series) for standard
"round reel" tapes, and one (the S series tapes) for 3480 "cartridge"
tapes.  If you do not specify a volume here, the system will obtain a
3480-type tape for you and rent it to your account.  If you do
specify a volume, is is assumed that this volume is already in the
tape library, and contains standard labels.

To have the system supply you with a "round reel" type rental tape,
reply "TAPE" to the "tape volume?" prompt.

----help disk volumes, SYSA ----

If all of your data sets reside in the SMS storage pool (STR series
volumes), you should just press "carriage return".  If you
specify ALL, all disk volumes on the system (except the scratch
volume SCR001) will be inspected for data sets to be backed up.
Otherwise, you may enter a list of volumes which are to be inspected
for data sets to be backed up, e.g. LIB101,LIB102.

You can specify a partial volume name; for example, STR0 would specify
all volumes with names beginning STR0 (the SMS "small datasets" pool).

----help disk volumes, SYSB ----

If you just press RETURN, all disk volumes on the system (except the
scratch volume SCR001) will be inspected for data sets to be backed
up.  Otherwise, you may enter a list of volumes which are to be
inspected for data sets to be backed up, e.g. RLG020,RLG021.

Note:  It doesn't hurt to specify volumes which don't contain any of
your data sets, that is, the cost of looking at a volume to see if it
has any of your data sets is small.

----help index file---

BACKUP uses the IBM utility program IEHMOVE to copy your data sets
from disk to tape.  The INDEX file contains the IEHMOVE control
statements which can be used (by RESTORE) to copy these data sets
back to disk.  A copy of this file is written as the first file on
the tape; if you supply a data set name in response to this prompt,
a copy of this file will be written on disk as well; it will be
given the name you specify.  This data set will require only
one track of disk space unless you have a very large
number of data sets.

When you restore the data sets, the INDEX file must reside on disk;
if you do not save a copy on disk now, you will have to restore it
to disk before you can restore the other files using RESTORE, but
you will save the disk storage charges incurred if a copy is kept on
disk.

----error: index in library----
The index file must not be a library member.  Although it is possible
to store index files in a library under certain conditions, it is
tricky enough that it is not recommended.  Writing the index file
into your WYLBUR library may destroy the library.

----error:  duplicate index----

The BACKUP job will create a new Index file; therefore, the file must
not already exist.  The data set name you specified is the name of an
existing cataloged data set.  Specify a new (unique) name.

----help index volume----
If you do not specify a volume, it will be placed on an arbitrarily
chosen PUBxxx volume.  Note that since this data set will be
cataloged, you do not need to know what volume it is on.

----help index volume, RLG system----

Specify the disk volume on which you want to place the Index file.
You must specify a volume, since the RLG system has no storage
volumes.

----help tape index file---

BACKUP uses the IBM utility program IEHMOVE to copy your data sets
from disk to tape.  The INDEX file contains the IEHMOVE control
statements which can be used (by RESTORE) to copy these data sets
back to disk.  A copy of this file is always written as the first
file on the tape (you were asked earlier if you wanted a copy on disk
as well).  If you are using a Generation Data Group or other special
scheme to keep track of your BACKUP tapes, you should supply an
appropriate data set name here; the name must be different from the
name used for the disk index file.  This file will be cataloged by
BACKUP.

----error: tape index in library----
The tape index file cannot be a library member; libraries cannot
be stored on tape.

----error:  duplicate tape index----

The BACKUP job will create a new Index file on the tape; therefore,
the file must not already exist.  The data set name you specified is
the name of an existing cataloged data set.  Specify a new (unique)
name.

----help file sequence----

Files on a tape are located by File Sequence Number, the first file
having a sequence number of 1.  The default value shown in the prompt
is one greater than the number shown in the Tape Library Management
System (TLMS) records for your tape.  If you just want to add files
to this tape, just press RETURN and the default value will be used.
If you want to overwrite some existing files, you can specify a lower
number.  If you specify a higher number the job will fail, unless
there actually more files than shown in the TLMS data base (which is
possible but unlikely).

Note:  It is not possible to replace files in the middle of a tape,
that is, if your tape has 10 files and you re-write files 4 and 5,
files 4 through 10 of the original tape will be lost.

----full tape warning----

<.b+>Caution:<.b->  If BACKUP runs out of tape it will fail.  One data set will
be spanned onto a second tape volume; that volume will be listed in
the job log and JCL listing.  Subsequent files will NOT be copied,
although they will appear in the index file.

----help FROM/TO options----
You can use the FROM and/or TO options to specify a limitation on the
data set names to be backed up.  You can combine these with the NODE
or ACCOUNT options, but only if a single node or account is
specified.

FROM and TO specify data set name "stems" just as they would in a
SHOW CATALOG command.  For example, if you specify TO=S, a data set
called NUTS would be copied but a data set called SOUP would not
(because the string 'S   ' sorts before the string 'SOUP').

You can specify both FROM and TO, but in this case the TO string must
be "greater than" (i.e., sort after) the FROM string.

FROM and TO may be unqualified name stems as shown above; BACKUP will
supply the proper account prefix.  If you supply qualified names, you
must ensure that they are compatible with the ACCOUNT or NODE that
you specified.  The total length of the FROM and TO strings
(including the WYL.gg.uuu. prefix) may not exceed 49 characters, that
is, the length of the unqualified strings may not exceed 27
characters.

----help run----

If you reply YES or just press RETURN, the job will be submitted with
a RUN command, and the active file containing the JCL will be closed.  If
you reply HOLD, the job will be submitted with a RUN HOLD command and
the JCL file will be closed as before.  If you reply NO, BACKUP will
not run the job and will leave the active file with the JCL for you to
inspect or modify.  You will then have to issue a RUN command to
actually submit the job.

Your files have not been backed up until this job has run
successfully.  You should inspect the output of the job carefully;
you should see a message like "Successful completion of BACKUP".  The
appearance of a data set name in the INDEX file does not mean that
the file has been successfully copied to tape unless BACKUP ends with
a return code of 0 and a message as indicated above.  Contact
Consulting if you need assistance in understanding the messages.

