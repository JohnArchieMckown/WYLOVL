;WYL.GA.PUB.LIB#TABLE--rewritten 12/31/80 by Lincoln Ong, C.I.T. Technical Support Services
;  last revision 07/02/90 MCL
;This EXEC file produces a 3800 or 4090 character set table.
;
;Associated files:
;     Character set tables
;     1-3 WCGM               -- WYL.GA.PUB.LIBDATA#TABLE1
;     1-3 WCGM (underscored) -- WYL.GA.PUB.LIBDATA#TABLE1U
;       4 WCGM               -- WYL.GA.PUB.LIBDATA#TABLE4
;       4 WCGM (underscored) -- WYL.GA.PUB.LIBDATA#TABLE4U
;
;          Variables used:
;     INDNT = indentation
;
;     OLDESC = original ESC setting
;     UPARM = PARM
;          (CHARS=aann,PITCH=nn,4WCGMS=aaa,FORMS=aaaa,COPIES=nn,MULTIPLE,UNDER)
;     TIMEDATE = time stamp  (mm/dd/yy)
;     CHARLIST = character set list  (char1,char2,char3,...,charN)
;     CHARS = current character set
;     PITCH = character pitch  (10, 12, or 15)
;     WCGM4 = 4 WCGM's?  (boolean)
;     FORMS = output form  (<CR> = BOND)
;     MODE = PORTRAIT or LANDSCAPE (4090 only)
;     SCOPIES = number of copies  (1 to 99; <CR> = 1)
;
CLR VAL
DECLARE BOOLEAN  WCGM4
DECLARE STRING  SCOPIES FORMS PITCH CHARS FTEST MODE
DECLARE STRING  OLDESC UPARM TIMEDATE CHARLIST
DECLARE NUM INDNT
OLDESC = ESC
SET ESC &
UPARM = UPP(PARM)||','
INDNT = 15
TIMEDATE = '                                    '||SUB(DAT,10,8)
MODE = ''
IF (IND(UPARM,'CHARS=(') NE 0) CHARLIST = SUB(UPARM,IND(UPARM,'CHARS=(')+7)  ;A character set list was given.
   THEN CHARLIST = SUB(CHARLIST,1,IND(CHARLIST,')')-1)||','
   THEN EXE *+3
IF (IND(UPARM,'CHARS=') NE 0) CHARLIST = SUB(UPARM,IND(UPARM,'CHARS=')+6)  ;A character set was given.
   THEN CHARLIST = SUB(CHARLIST,1,IND(CHARLIST,','))
IF (IND(UPARM,'PITCH=') NE 0) PITCH = SUB(UPARM,IND(UPARM,'PITCH=')+6)
   THEN PITCH = SUB(PITCH,1,IND(PITCH,',')-1)
IF (IND(UPARM,'4WCGMS=') NE 0) S0 = SUB(UPARM,IND(UPARM,'4WCGMS=')+7)
   THEN S0 = SUB(S0,1,IND(S0,',')-1)
   THEN IF (S0 EQ 'YES' OR S0 EQ 'Y') WCGM4=TRUE
IF (IND(UPARM,'FORMS=') NE 0) FORMS = SUB(UPARM,IND(UPARM,'FORMS=')+6)
   THEN FORMS = SUB(FORMS,1,IND(FORMS,',')-1)
IF (IND(UPARM,'COPIES=') NE 0) SCOPIES = SUB(UPARM,IND(UPARM,'COPIES=')+7)
   THEN SCOPIES = SUB(SCOPIES,1,IND(SCOPIES,',')-1)
IF (SIZ(UPARM) GT 1) EXE *+3
WRI '' ATTN=NEX
WRI 'TABLE  Revised 07/02/90' ATTN=NEX
WRI '' ATTN=NEX
WRI "Prints a 3800 or 4090 character set table.  Type a '?' for help." ATTN=NEX
;
;Character Set
;
IF (IND(CHARLIST,',') NE 0) CHARS = SUB(CHARLIST,1,IND(CHARLIST,',')-1)  ;Find the first character set.
   THEN CHARLIST = SUB(CHARLIST,IND(CHARLIST,',')+1)  ;Reduce character set list by one character set.
SET RET=NEX                            ;Common return area.
WRI '' ATTN=NEX
IF (SIZ(CHARLIST)+SIZ(CHARS) NE 0) WRI 'CHARACTER SET = &(CHARS)' ATTN=NEX  ;If a character set list was given, prompt with current character set.
IF (CHARS NE '') EXE *+3
REA UPP STR CHARS PRO 'Character set(s) (<ATTN>=quit): ' ATTN=507
IF (CHARS EQ '') EXE PREV
IF (IND(CHARS,',') NE 0) CHARLIST = CHARS||','  ;If a character set list has been entered, set up list.
   THEN CHARS = ''                     ;Reset current character set.
   THEN EXE RET-3
IF (CHARS EQ '?') WRI 'Enter the character set name of the table you want to be printed.' ATTN=58
   THEN WRI 'If you want several character set tables, separate the character set' ATTN=58
   THEN WRI 'names by commas without intervening spaces.  A valid character set' ATTN=58
   THEN WRI 'name is from 2 to 4 characters in length.' ATTN=58
   THEN WRI '' ATTN=58
   THEN EXE 58
IF (SIZ(CHARS) GT 4) WRI "'&(CHARS)': INVALID CHARACTER SET NAME" ATTN=58
   THEN WRI 'A character set name can be from 2 to 4 characters in length.' ATTN=58
   THEN WRI '' ATTN=58
   THEN EXE 58
;
;Output forms
;
IF (FORMS NE '') EXE *+3
REA UPP STR FORMS PRO 'Output form (<CR>=BOND, <ATTN>=restart): ' ATTN=500
IF (FORMS EQ '') FORMS = 'BOND'          ;Default output form.
IF (FORMS EQ '?') EXE *+2
XCALL COMMANDS#FORMCHEK PUB (FORMS,FTEST)  ; check form
;  Results in FTEST:  XEROX, 3800, UNKNOWN, INVALID, IMPACT.
IF (FTEST EQ 'INVALID' OR FTEST EQ 'UNKNOWN') WRI FORMS||':  '||FTEST||' form code' ATTN=203
   THEN WRI 'Valid forms for the 3800 printer are: BLNK, 1181, 1281, and 9511.' ATTN=203
   THEN WRI 'Valid forms for the 4090 printer are: BOND, 3HOL, ARCB, RAGB, and BLUE.' ATTN=203
   THEN WRI 'For a description of these forms, type: USE DOC#FORMS PUBLIC' ATTN=203
   THEN WRI '' ATTN=203
   THEN EXE 203
IF (FTEST EQ 'IMPACT') WRI FORMS||' is an impact printer form.'
   THEN EXE 203

; 4090 stuff
IF (FTEST NE 'XEROX') EXE 300
WCGM4 = TRUE
MODE=''
REA STR S0 UPP PRO 'Orientation PORTRAIT or LANDSCAPE? (RETURN=PORTRAIT)  '
S0 = STRIP(S0)
IF (S0 EQ '') EXE 400
IF (ABB('PORTRAIT',S0,3)) EXE 400 ; PORT
IF (ABB('LANDSCAPE',S0,3)) MODE='LANDSCAPE'
   THEN EXEC 400
IF (S0 EQ '?') LIST 280/290 EXE UNN ATTN=254
   THEN EXEC 254
WRI S0||':  Invalid.  Valid modes are PORTRAIT and LANDSCAPE.'
   THEN LIST 281/290 EXE UNN ATTN=254
   THEN EXE 254

; Help mode
On the Xerox 4090 and 9790 printers, the paper can be oriented so the
long side is vertical ("portrait mode") or horizontal ("landscape mode").
In some cases there are slight differences between the "landscape" and
"portrait" versions of a font.

;Number of WCGM's (i.e. EQ 4)
;
IF (WCGM4) EXE 350
IF (IND('AL.BD.BF.BG.CU.FM.FT.HY.IC.IF.IT.LW.SC.TF.TN.',SUB(CHARS,1,2)||'.') NE 0) WCGM4 = FALSE ;Occupies less than 3 WCGM's.
   THEN EXE 350
IF (IND('AD.MA.MC.MH.ML.MT.TX.',SUB(CHARS,1,2)||'.') NE 0) WCGM4 = TRUE   ;Occupies more than 3 WCGM's.
   THEN EXE 350
REA UPP STR S0 PRO "4 WCGM's (No or Yes  <CR>=no, <ATTN>=restart): " ATTN=500
IF (S0 EQ '') WCGM4 = FALSE
   THEN EXE 350
IF (ABB('YES',S0,1)) WCGM4 = TRUE
   THEN EXE 350
IF (ABB('NO',S0,1)) WCGM4 = FALSE
   THEN EXE 350
WRI 'Answer YES if it is a 4 WCGM character set, or NO if not.  The size' ATTN=307
WRI 'of each character set is measured in modules called Writable' ATTN=307
WRI 'Character Generation Modules (WCGM).  Each character set loads at' ATTN=307
WRI 'least one but not more than four of these modules.' ATTN=307
WRI '' ATTN=307
EXE 307

;Pitch (3800 ONLY)
;
IF (PITCH NE '') EXE *+7
IF (SUB(CHARS,1,1) EQ 'U') EXE *+4        ;Pitch is not determinable from character set name.
IF (SUB(CHARS,1,1) EQ 'X') IF (IND('0.2.5.',SUB(CHARS,4,1)||'.') NE 0) PITCH = 10+SUB(CHARS,4,1)
IF (IND('10.12.15.',SUB(CHARS,3,2)||'.') NE 0) PITCH = SUB(CHARS,3,2)  ;Pitch is last character of name.
IF (PITCH NE '') EXE *+3
REA STR PITCH PRO 'Pitch (<CR>=10, <ATTN>=restart): ' ATTN=L-4
IF (PITCH EQ '') PITCH = 10            ;Default pitch.
IF (PITCH EQ '?') EXE *+2
IF (IND('10.12.15.',PITCH||'.') EQ 0) WRI "'&(PITCH)': INVALID PITCH" ATTN=357
   THEN WRI 'Valid 3800 character set pitches are: 10, 12, and 15.' ATTN=357
   THEN WRI '' ATTN=357
   THEN EXE 357
IF (PITCH EQ 10) INDNT = 15            ;1.5 inch margin for each pitch setting.
IF (PITCH EQ 12) INDNT = 18
IF (PITCH EQ 15) INDNT = 22
;
;Number of copies
;
IF (SCOPIES NE '') EXE *+3
REA STR SCOPIES PRO 'Number of copies (<CR>=1, <ATTN>=restart): ' ATTN=L-7
IF (SCOPIES EQ '') SCOPIES = 1             ;Default number of copies.
IF (SCOPIES EQ '?') EXE *+3
IF (SCOPIES GE 1 AND SCOPIES LE 99) EXE *+5
WRI "'&(SCOPIES)': INVALID NUMBER OF COPIES" ATTN=NEX
WRI 'The number of copies possible are from 1 to 99.' ATTN=NEX
WRI '' ATTN=NEX
EXE *-7
IF (WCGM4) EXE *+4 ;If character set occupies more than 3 WCGM's, use 4 WCGM table.
PRI FRO libdata#tab1 pub IND=&(INDNT) CHA=(TF&(PITCH),&(CHARS)) TIT="&(CHARS||SUB('    ',1,(4-SIZ(CHARS))))&(TIMEDATE)" ID=#&(CHARS) FOR=&(FORMS) COP=&(SCOPIES)
IF (IND(UPARM,'UNDER') NE 0) PRI FRO libdata#tab1u pub IND=&(INDNT) CHA=(TN&(PITCH),&(CHARS)) TIT="&(CHARS||SUB('    ',1,(4-SIZ(CHARS))))&(TIMEDATE)" ID=#&(CHARS) FOR=&(FORMS) COP=&(SCOPIES)
EXE *+3
PRI FRO libdata#tab4 pub &(MODE) IND=&(INDNT) CHA=&(CHARS) TIT="&(CHARS||SUB('    ',1,(4-SIZ(CHARS))))&(TIMEDATE)" ID=#&(CHARS) FOR=&(FORMS) COP=&(SCOPIES)
IF (IND(UPARM,'UNDER') NE 0) PRI FRO libdata#tab4u pub IND=&(INDNT) CHA=&(CHARS) TIT="&(CHARS||SUB('    ',1,(4-SIZ(CHARS))))&(TIMEDATE)" ID=#&(CHARS) FOR=&(FORMS) COP=&(SCOPIES)

PITCH = ''                          ;Reset the pitch to null.
WCGM4 = FALSE                       ;Reset the 4WCGM flag.
IF (CHARLIST NE '') CHARS = SUB(CHARLIST,1,IND(CHARLIST,',')-1)  ;Increment to next character set.
   ELSE CHARS = ''
CHARLIST = SUB(CHARLIST,IND(CHARLIST,',')+1)       ;Reduce the character set list by one character set.
IF (CHARS NE '') EXE RET                  ;Continue processing until character set list is empty.
IF (IND(UPARM,'MULTIPLE') NE 0) EXE RET   ;If MULTIPLE is specified, return to prompt for next character set.
EXE 507

;Common reset area when ATTN key is pressed.
SCOPIES = ''                        ;Copies.
FORMS = ''                          ;Forms.
FTEST = ''
MODE = ''                           ;orientation (4090 only)
WCGM4 = FALSE                       ;4WCGM flag.
PITCH = ''                          ;Pitch.
INDNT = 15
CHARS = ''                          ;Character set.
EXE RET
SET ESC=&(OLDESC)
CLR EXE
