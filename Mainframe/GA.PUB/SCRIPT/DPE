
                                                        +-------+
                                                        |  .PE  |
                                                        +-------+

PERFORM processes  the remainder  of the  current physical  input
line (if any) or the next physical input line (if none) the spec-
ified number of times.

     +-------+---------------------------------------------+
     |       |                                             |
     |  .PE  |    <<.U+>1<.U->|n|ON|OFF|DELETE>                      |<.NORMAL>
     |       |                                             |
     +-------+---------------------------------------------+

This control word does not cause a break, although the line being
PERFORMed may.   PERFORM  provides a primitive facility  for one-
line loops.

<.B+><<.U+>1<.U->|n|ON>:  <.B->If used with no operand, the line to be PERFORMed will<.NORMAL>
   be processed once.   An integer operand "n" causes the line to
   be processed "n" times,  and "ON" causes it to be processed up
   to a maximum of 32,767 times or until PERFORM is turned OFF or
   DELETEd.  PERFORMs within PERFORMs are allowed.
<.B+>0:  <.B->An zero  operand terminates processing of  the line currently<.NORMAL>
   being PERFORMed but will not terminate an active PERFORM line.
<.B+><OFF|DELETE>:  <.B->An "OFF" operand terminates  all processing of the<.NORMAL>
   line currently being PERFORMed.   DELETE terminates all nested
   levels of PERFORMs.

<.U+>EXAMPLES<.NORMAL>
(1) .pe 20;.ce;Hi There!
    will produce 20 centered lines of "Hi There!"
(2) Alternatively,  the "object"  of the PERFORM may  be the next
    physical input line:
      .pe 20
      .ce;Hi There!
(3) To format  the first 1000 numbers  into 10 paragraphs  of 100
    each:
    .sr i = 0;.* number of numbers done
    .sr j = 0;.* "paragraph" counter
    .dm GROUP begin
    .if &j eq 0 .pp
    .sr i = &i + 1;&i
    .sr j = &j + 1
    .if &j eq 10 .sr j = 0
    .dm GROUP end
    .pe on;.GROUP;.if &i ge 1000 .pe delete
(4) The same example as above, using nested PERFORMs:
    .sr i=0;.pe 10;.pp;.pe 100;.sr i=&i+1;&i

