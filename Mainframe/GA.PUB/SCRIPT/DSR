
                                                        +-------+
                                                        |  .SR  |
                                                        +-------+

SET  REFERENCE assigns  a character  or  numeric value  to a  Set
Symbol.

     +-------+---------------------------------------------+
     |       |                                             |
     |       |           = <character string>              |
     |  .SR  |    symbol = <numeric expression>            |
     |       |           <OFF>                             |
     |       |                                             |
     +-------+---------------------------------------------+

This control word does not cause a break.   The Set Symbol speci-
fied as the first operand is  assigned the value specified by the
second operand.   If the second operand is omitted, a null string
will be assigned.  If the Set Symbol did not previously exist, it
is created.   The  Symbol name must be followed by  an equal sign
"=" with or without intervening blanks.

<.B+>symbol =:   <.B->The name  of a Set  Symbol may consist  of up  to ten<.NORMAL>
   characters.   Names  may include  only uppercase  or lowercase
   alphabetics, digits, the "$", "#", and "@", and the underscore
   ("_").  When the UPPER option or ".SU UPPER" is in effect, all
   lowercase  alphabetic characters  in  a  Set Symbol  name  are
   treated as if entered in uppercase.    The Set Symbol name may
   optionally be subscripted with an integer, signed or unsigned.
   A  subscript may  range from  -1000000 to  +1000000.   A  zero
   subscript is logically the same  as having no subscript.   The
   subscript value may be implied  by specifying a null subscript
   in the form "()":
     .sr symbol() = ...
   has the same effect as
     .sr symbol = &symbol + 1
     .sr symbol(&symbol) = ...
   because SCRIPT uses "array position  zero" to retain the count
   of the number of elements in the array.
<.B+>symbol = character string:  <.B->The string operand may be a delimited<.NORMAL>
   string or an undelimited string.   In  the first case,  if the
   first character is a ' (apostrophe), " (quote),  / (slash),  |
   (or bar), ! (exclamation mark), ~ (not sign), or ^ (cent sign)
   then that first character will be  treated as the delimiter if
   the last character  in the operand matches  the initial delim-
   iter.  The value assigned will be from the character following
   the leading delimiter up to  the character preceding the final
   delimiter.   Blanks and embedded  delimiters are considered to
   be part of the assigned value.

      If there is no matching terminating delimiter,  the operand
   is treated as  an undelimited string,  and  the value assigned
   consists of everything up to  and including the last non-blank
   character on the input line.

<.B+>symbol 'character string:  <.B->The equal  sign in a symbol assignment<.NORMAL>
   may be omitted if the first character of the value is a single
   quote.   The value  is taken from the  character following the
   quote to the end of the  record,  not including the last char-
   acter if  it also  is a  single quote.    If the  value is  to
   include trailing blanks then a terminating quote must be used.
<.B+>symbol  = numeric  expression:   <.B->Numeric  values may  consist  of<.NORMAL>
   expressions (see Examples for details).  Integer decimal terms
   as well as binary,   character,  and hexadecimal self-defining
   terms (in the ASSEMBLER sense) are supported.  Parentheses and
   unary plus and  minus operators are fully  supported.   Blanks
   between terms and operators are optional.
<.B+>symbol =  %:  <.B->The  page-number symbol  (see .PS)   if entered  by<.NORMAL>
   itself, will be treated as though the current printable output
   page number  had been specified in  its place (the  System Set
   Symbol &SYSPPAGE also provides this ability).  The page number
   string is always treated as a  character operand,  even if the
   current page number is all numeric.
<.B+>symbol OFF:  <.B->Undefines the specified Set Symbol name.<.NORMAL>

<.U+>NOTES<.NORMAL>
(1) If a character string is the assigned value,  it must consist
    of  no  more  characters  than the  maximum  allowed  by  the
    SRLength option (default is 240), or the string will be trun-
    cated on the right.
(2) A complete list  of System Set Symbols and  their purposes is
    provided in an Appendix to this manual.

<.U+>EXAMPLES<.NORMAL>
(1) The following  demonstrate valid  numeric (integer)   expres-
    sions:
      .sr i=5
      .sr i= +5
      .sr i=((+5*3-1)*7)+1
      .sr i = ((X'F05'+C'A')* B'1111')/16
      .sr i(1+1) = (1+1)
(2) The following demonstrate character-string assignments:
      .sr x = 3.5
      .sr c=abcdefg
      .sr c = 'ABCDEFG'
      .sr c = "don't be silly"
      .sr string = 'undelimited string
      .sr alpha(1) = 'A'
      .sr alpha(2) = B
      .sr pagenum = %
(3) The sequence:

      .sr equno=0
          .
          .
      .sr equno = &equno + 1
      .sr xeqn = &equno
       (&equno):  x = erfc(a - bc)
      .sr equno = &equno +1
       (&equno):  y = erfc(a + bc)
       Using Equation &xeqn gives ...
    produces the following results:
       (1):  x = erfc(a - bc)
       (2):  y = erfc(a + bc)
       Using Equation 1 gives ...
(4) The sequence:
      .sr a = 0
      .sr b = -5
      .sr c = a
      .sr d = 'b'
      .sr &c = &&d+1
      The value of "a" is &a..
      The value of "b" is &b..
      The value of "c" is &c..
      The value of "d" is &d..
    produces the following results:
      The value of "a" is -4.
      The value of "b" is -5.
      The value of "c" is a.
      The value of "d" is b.
(5) To undefine a Set Symbol:
      .sr var = first;.* Set Symbol 'var' has a value
      .sr var OFF    ;.* Set Symbol 'var' is undefined
      .sr var = next ;.* Set Symbol 'var' defined again

