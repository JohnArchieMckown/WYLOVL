
                                                        +-------+
                                                        |  .CH  |
                                                        +-------+

CHANGE defines strings of text to  be replaced in following input
records.

     +-------+---------------------------------------------+
     |       |                                             |
     |       |    /string1/string2/<n> ...                 |
     |  .CH  |                                             |
     |       |    DELETE </string1/ ...>                   |
     |       |                                             |
     +-------+---------------------------------------------+

<.B+>/string1/string2/  ...:  <.B->SCRIPT  examines  subsequent input  text<.NORMAL>
   lines and the  operands of control words  for character string
   "string1", and wherever found,  replace "string1" by "string2"
   before  further processing  the line.    The second  character
   string may  be longer,   shorter,  or the  same length  as the
   "string1".   Either "string1" or "string2" may be null, but if
   "string1" is  null the replacement  string is inserted  at the
   front  of <.U+>text<.U->  <.U->lines  only.    The character  delimiting  the<.NORMAL>
   strings is  always first  and cannot  occur in  either of  the
   strings.   Trailing  delimiters will be assumed,   if omitted.
   When  searching  for  strings to  be  replaced,   the  longest
   "string1" is always searched for first.  After replacement has
   been done on an input line, the first column is again examined
   for a control-word indicator, normally period (".").  If there
   is one,  the changed input line will be processed as a control
   line; otherwise, it will be processed as a text input line.
<.B+>/string1/string2/<n>  ...:  <.B->Only  the  first  "n" occurrences  of<.NORMAL>
   "string1" per input line will  be replaced.   If omitted,  all
   occurrences per line will be  changed.   Multiple string pairs
   may be specified on the same .CH control word.
<.B+>DELETE </string1/  ...>:  <.B->removes "string1" from  the replacement<.NORMAL>
   action.  Multiple delimited strings to be deleted may be spec-
   ified on the same ".CH" control  word.   If no string operands
   follow "DELETE",  all  CHANGE strings currently in  effect are
   deleted.

This control  word does not  cause a  break.   No changes  are in
effect  initially  and  they are  cleared  between  PASses.    If
replacement yields a resulting input line longer than 250 charac-
ters, an error message results.

<.U+>NOTES<.NORMAL>
(1) Only one CHANGE  operation will be applied  per logical input
    record,  so  control words  with "line"  operands or  another
    control word as operand will not be altered more than once.
(2) The operands of  some control words are  not directly altered
    by an outstanding CHANGE.   When the result of these operands
    is processed they will be  subject to change.   These control

    words are ".  ",  ".CH",  ".DO",  ".EL",  ".SU",  ".TH",  and
    ".UR".

<.U+>EXAMPLES<.NORMAL>
(1) .CH /UW/University of Waterloo/
    The UW version of SCRIPT is used by
    faculty, staff, and students at the UW.
    .CH DELETE /UW/
    produces:   The University  of Waterloo version of  SCRIPT is
    used by faculty,   staff,  and students at  the University of
    Waterloo.
(2) .ch /SUP0/&X'B0./ /SUP1/&X'B1./
    .ch /BULLET/&X'AF./ /SQUARE/&X'9F./
    This will do superscripts (SUP0, SUP1)
    and bullets (BULLET, SQUARE).
    .ch delete /BULLET/ /SQUARE/ /SUP0/ /SUP1/
    produces:   This will do superscripts (À, Á)  and bullets (·,
     ).
(3) .ch //.us /
    This produces a paragraph of text that is all
    underscored.  The ".us" control word is inserted
    at the front of each line.
    .ch DELETE //
    produces:   <.U+>This  produces a  paragraph of  text that  is all<.NORMAL>
    <.U+>underscored<.U->.  <.U+>The<.U-> <.U->".<.U+>us<.U->" <.U+>control word is inserted at the front<.NORMAL>
    <.U+>of each line<.U->.<.NORMAL>
(4) .CH /ABC/the first three letters of the alphabet/
    .CH /ABCD/ABCD/
    Always change ABC but don't touch ABCDEFGH..XYZ.
    .CH DELETE /ABC/ /ABCD/
    produces:    Always change  the first  three  letters of  the
    alphabet but don't touch ABCDEFGH...XYZ.
(5) .ch '*****'AAAAA'
    *************** <-- fifteen characters
    .ch DELETE '*****'
    produces:  AAAAAAAAAAAAAAA <-- fifteen characters
(6) .ch /*****/AAAAA/1 /****/BBBB/1 /***/CCC/1
    .ch /**/DD/1 /*/E/1
    *************** <-- fifteen characters
    .ch DELETE
    produces:  AAAAABBBBCCCDDE <-- fifteen characters

