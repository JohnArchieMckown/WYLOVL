VSTC     TITLE 'ORVYL''S SET AND CLEAR COMMANDS'
********************************************************************
*                                                                  *
*       ORVYL/370  RELEASE III - CLASS I - STANFORD PROPRIETARY    *
*                                                                  *
********************************************************************
         SPACE 2
         HIBAL ,
         SPACE 2
* MODIFICATIONS
*
         EJECT
VSTC     CSECT ,
         IDENT 00
         SPACE 2
         COPY  ORVDEFN
         SPACE 3
         REGS  ,,SR,TR,QR,RR,PR,BR,WAR,RAR,CLWR
         EJECT ,
         MACRO
&L       SYSONLY ,
&L       VCALL PRIVTEST
         BNZR  BR
         MEND
*
         MACRO
&L       BTD   &LOC,&LEN,&WORD,&SW,&COMMAS=NO
         LCLC  &CM
         AIF   ('&COMMAS' NE 'YES').NOCM
&CM      SETC  'C'
.NOCM    ANOP
&L       SYSLR 15,&WORD,OP=L
         SYSLR 0,&LEN,TYPE=&SW
         SYSLR 1,&LOC
         XCALL BTD&CM
         MEND
*
         MACRO
&L       PRVBLOCK ,
&L       LCALL PRVPTEST
         MEND
         EJECT
*GEN
         COPY  SCP
         EJECT
         COPY  CLW
         EJECT
*NOGEN
*
VSTC     CSECT ,
         USING CLW,CLWR                ##
*  SET COMMAND
*
SET      VENTER 2,11,*
         BAS   BR,SETSCAN
         USING BASE,BR                 ## BASE IS EXIT
BASE     EQU   *
*  EXIT
         CLEAR R15                     SET OK RETURN
STCRET   LABEL ,
         VEXIT 2,11,LTR
*
SCRET    LPR   R0,R0
         BZ    MISSING
ILLSTR   SEG   (1),(0)
         SEG   ': Invalid string'
         B     ERROR
*
REQABORT SEG   'Request aborted'
         B     ERROR
*
PRVPTEST IF    ^CLWPFPRV,RAR            PRIVATE PROGRAM?
         SEG   'Private '
PROGLDED SEG   'Program loaded, command blocked'
         B     ERROR
*
ILLVAL   SEG   'Invalid value'
         B     ERROR
*
MISSING  SEG   'Missing operand'
         B     ERROR
*
UNREC    LABEL ,
         SEG   (1),(0)
         SEG   ': Invalid'
ERROR    VCALL TYPEIT
         BR    BR                      EXIT
*
WYLMIL   LABEL ,
         LA    R15,4                   SEND CODE
         B     STCRET                  SEND 'SET' ON TO MILTEN
*
STCWREX  VWRITE
         BR    BR
*
STCWRITE VSAVE WAR,RAR,*               SAVE RETURN
         VWRITE
         VREST WAR,RAR
         BZR   RAR                     NO ERROR
         BR    BR                      EXIT
         EJECT
* SCAN SET OPTION
*
SETSCAN  SCAN  KWSET,CLWKWCB           SCAN FOR OPTION
         B     SCRET                   UNUSUAL RETURN
         SPACE
*  SET OPTION TABLE
*
KWSET    LABEL ,
         SCKW  T,SETTRAP
         SCKW  TRAP,SETTRAP
         SCKW  EVENT,SETEVENT,A
         SCKW  MONITOR,SETMONIT,A
*        SCKW  SLAVE,NOTYET
*GEN
         VPMTAB SETKWRT                SET KEYWORDS FOR VPM
         VGPTAB SETKWRT                SET KEYWORDS FOR VGP
         VSSVTAB SETKWRT               SET KEYWORDS FOR VSSV
         VSSWTAB SETKWRT               SET KEYWORDS FOR VSSW
*NOGEN
         SCKW  TIMER,SETTIMER,(P,LN)
         SCKW  FMSK,SETFILEM,A
         SCKW  ZOT,SETZOT
         SCKW  CLPERR,SETCLPER
         SCKW  PSCLP,SETPSCLP
         SCKW  REGION,SETREGN,A
         SCKW  ,WYLMIL
         EJECT
*  SET TRAP
*
SETTRAP  LABEL ,
         PRVBLOCK ,
         VCALL EVAL                    GET LOCATION
         BM    ERROR                   PRINT ERROR MESSAGE
         N     R0,=X'0FFFFFFF'
         IF    ^CLWSSP,BEGIN
         N     R0,=X'00FFFFFF'
         END   ,
         IF    (R0,Z),STILL
         ST    R0,CLWTEMP
*         CLI   CLWTEMP,0
*         BNE   STILL
         TM    CLWTEMP,X'F0'
         BNZ   STILL
         TM    CLWTEMP+3,1             MUST BE EVEN
         BO    STODD
         LA    RR,CLWTRAPS+(CLWNTRAP-1)*5
         LA    TR,CLWNTRAP
         CLEAR SR
STLOOP   OC    @RR(3),@RR              LOOK FOR EMPTY TABLE ENTRY
         BNZ   STL1
         LR    QR,TR
         LR    SR,RR
STL1     CLC   @RR(3),CLWTEMP+1        TRAP ALREADY THERE?
         BE    STALRDY                 BR IF SO
         S     RR,=A(5)
         BCT   TR,STLOOP
         IF    (SR,NZ),STFND           BR IF EMPTY ENTRY FOUND
         SEG   'Too many traps'
         B     ERROR
*
STFND    LABEL ,
         LR    R1,R0
         LA    R0,@SR+3
         LA    R15,2
         VCALL READCORE                GET WHATS THERE
         B     *+4(15)
         B     STASK
         B     STOK
         B     STNONE
         B     STILL
*
STASK    LABEL ,
         CLI   @SR+3,X'0A'             SVC?
         BE    STSVC
         IF    ('CLI  @SR+3,X"AF"',EQ),STMON   MONITOR CALL
         VCALL VERPATCH                VERIFY
         BNZR  BR
*
STOK     LABEL ,
         CLI   3(SR),X'0A'             SVC?
         BE    STSVC                   BR IF SO
         IF    ('CLI  @SR+3,X"AF"',EQ),STMON   MONITOR CALL
         LA    R0,CLWPSVC              LOCATION OF PAUSE SVC
         L     R1,CLWTEMP
         LA    R15,2
         VCALL RITECORE
         MVC   @SR(3),CLWTEMP+1        SAVE ADDR IN TABLE
         SEG   'Trap '
         SEGDC 1,(QR)
         SEG   ' set'
         B     STCWREX                 WRITE AND EXIT
*
STNONE   SEG   'Core not defined'
         B     ERROR
*
STILL    SEG   'Invalid address'
         B     ERROR
*
STODD    SEG   'Odd address'
         B     ERROR
*
STALRDY  SEG   'Trap already there'
         B     ERROR
*
STSVC    SEG   'Svc may not be trapped'
         B     ERROR
*
STMON    SEG   'Monitor call may not be trapped'
         B     ERROR
*
         EJECT
* SET MONITOR
*
         USING SEVWA,WAR               ##
SETMONIT LABEL ,
         PRVBLOCK ,
         LA    R13,SEVWA+SEVWASIZ      RESERVE SOME STACK
         CLEAR (SEVWMSK,12)
         IF    (CLWPFPL+CLWPFPIC,Z),SEVNPIC  ANY PROGRAM TO MONITOR?
         CLEAR TR                      NO EVENT LIST YET
         SCAN  MONTBL,CLWKWCB
         BM    SCRET                   ERROR IN SCAN
SMN1     LTR   TR,TR                   REG LIST?
         BZ    SMN3
         SCINIT (SR),(TR),CLWKWCB
SMN2     VCALL EVAL                    GET REG
         BM    ERROR                   PRINT ERROR MESSAGE
         BZ    SMN3                    NO MORE
         LTR   SR,R0
         BM    ILLVAL
         C     SR,=A(15)
         BH    ILLVAL
         L     R0,=X'00008000'
         SRL   R0,@SR
         O     R0,SEVWMSK
         ST    R0,SEVWMSK
         B     SMN2
*
SMN3     LABEL ,                      NEW MONITOR MASKS
         VSET  18,SEVWMSK
         BNZ   SMNPROG
         BR    BR
MONTBL   SCKW  ,MNCLASS,I,15           JUST AN INTEGER
         SCKW  NONE,,A                 JUST IGNORE
         SCKW  ALL,MNALL
         SCKW  ,EVREG1                 LIKE A REGISTER LIST?
*
MNCLASS  L     R0,=X'00008000'
         L     R1,CLWKWVAL             VALUE OF INTEGER
         SRL   R0,@R1
         O     R0,SEVWMSK
         ST    R0,SEVWMSK
         SCRTN (15)
*
MNALL    OC    SEVWMSK+2(2),=X'FFFF'
         SCRTN (15)
*
SMNPROG  SEG   'Monitor set by your program'
         B     ERROR
         DROP  WAR                     ##
         EJECT
*  SET EVENT
*
         USING SEVWA,WAR               ##
SETEVENT LABEL ,
         PRVBLOCK ,
         LA    R13,SEVWA+SEVWASIZ      RESERVE SOME STACK
         CLEAR (SEVWMSK,12)
         IF    (CLWPFPL+CLWPFPIC,Z),SEVNPIC  ANY PROGRAM TO MONITOR?
         CLEAR TR                      NO REGISTER LIST YET
         SCAN  EVENTBL,CLWKWCB
         BM    SCRET                   ERROR IN SCAN
         CLEAR CLWMEVCN                RESET CONTINUE FLAG
         MVC   SEVWSTRT(4),CLWUPST     DEFAULT RANGE
         TM    SEVWFL,SEVWFRAN         RANGE SPECIFIED?
         BZ    SEV1                    NO
         TM    SEVWMSK,PEFETCH+PESTORE FETCH OR STORE SET?
         BNZ   SEV0                    YES
         OI    SEVWMSK,PEFETCH+PESTORE SET BOTH BY DEFAULT
SEV0     SCINIT (QR),(RR),CLWKWCB
         VCALL EVAL
         BM    ERROR                   PRINT ERROR MESSAGE
         BZ    MISSING
         N     R0,=X'7FFFFFFF'
         IF    ^CLWSSP,'N  R0,=X"00FFFFFF"'
         ST    R0,SEVWSTRT
         ST    R0,SEVWEND              ASSUME END=START
         VCALL EVAL
         BM    ERROR                   PRINT ERROR MESSAGE
         BZ    SEV1
         N     R0,=X'7FFFFFFF'
         IF    ^CLWSSP,'N  R0,=X"00FFFFFF"'
         ST    R0,SEVWEND
SEV1     LTR   TR,TR                   REG LIST?
         BZ    SEV3
         SCINIT (SR),(TR),CLWKWCB
SEV2     VCALL EVAL                    GET REG
         BM    ERROR                   PRINT ERROR MESSAGE
         BZ    SEV3                    NO MORE
         LTR   SR,R0
         BM    ILLVAL
         C     SR,=A(16)
         BNL   ILLVAL
         L     R0,=X'00008000'
         SRL   R0,@SR
         O     R0,SEVWMSK
         ST    R0,SEVWMSK
         B     SEV2
*
SEV3     LABEL ,
         VSET  17,SEVWMSK
         BNZ   SEVPROG
         BR    BR
         SPACE
*  EVENT KEYWORDS
*
EVENTBL  SCKW  FETCH,EVFET,A
         SCKW  STORE,EVSTO,A
         SCKW  BRANCH,EVBRA,A
         SCKW  REGISTER,EVREG,(A,P)
         SCKW  RANGE,EVRAN,(A,P)
         SCKW  CONTINUE,EVCON,A
         SCKW  GO,EVCON
         SCKW  ,UNREC
*
EVFET    OI    SEVWMSK,PEFETCH
         SCRTN (15)
*
EVSTO    OI    SEVWMSK,PESTORE
         SCRTN (15)
*
EVBRA    OI    SEVWMSK,PEBRANCH
         SCRTN (15)
*
EVREG    BZ    MISSING                 NO PARM
         OI    SEVWMSK,PEREG           SET REGISTER EVENT
         C     R0,=A(3)                POSSIBLY 'ALL'?
         BNE   EVREG1
         CLC   @R1(3),=C'ALL'
         BE    EVREGALL
EVREG1   CLI   @R1,C'('                PAREN STRING?
         BNE   UNREC
         LA    SR,@R1+1                STRING POINTER
         LR    TR,R0
         DECR  TR
         DECR  TR
         SCRTN (15)
EVREGALL MVC   SEVWMSK+2(2),=X'FFFF'   SET ALL BITS
         SCRTN (15)
*
EVRAN    BZ    MISSING                 NO PARM
         CLI   @R1,C'('                PAREN STRING?
         BNE   UNREC
         OI    SEVWFL,SEVWFRAN         MARK RANGE
         LA    QR,@R1+1
         LR    RR,R0
         DECR  RR
         DECR  RR
         SCRTN (15)
*
EVCON    SEG   'Continue option moved to the "GO" command'
         B     ERROR
*
SEVPROG  SEG   'Program event recording set by your program'
         B     ERROR
*
SEVNPIC  SEG   'No program in memory'
         B     ERROR
         DROP  WAR                     ##
PEFETCH  EQU   B'01000000'
PESTORE  EQU   B'00100000'
PEBRANCH EQU   B'10000000'
PEREG    EQU   B'00010000'
*
SEVWA    DSECT
         VSA   2,11                    REG SAVE
SEVWMSK  DS    X                       PER MASK
SEVWFL   DS    X                       UNUSED
*
SEVWFRAN EQU   X'80'                   RANGE SPECIFIED
*
SEVWREGS DS    X                       REGISTER MASKS
SEVWSTRT DS    A                       START ADDRESS
SEVWEND  DS    A                       END ADDRESS
SEVWASIZ EQU   *-SEVWA
VSTC     CSECT
         EJECT
*
*        SET ORVYL TIMER INTERVAL
*
SETTIMER DS    0H                 GET TIMER INTERVAL
         BZ    MISSING
         SR    SR,SR
         L     TR,@R15            GET TIMER VALUE IN 1000THS SEC
         IF    ((TR,LT,100),AND,(TR,GT,0)),BEGIN
         SEG   'Value too small, interval set to minimum.'
         LCALL STCWRITE
         END
         LA    TR,99(TR)
         D     SR,=F'100'         TR  -  TIMER VALUE IN 10TH OF SECS.
         STH   TR,CLWTIVAL
         IF    CLWFPRGL,BEGIN     CHECK FOR INTERVAL VALIDITY
         SEG   'Timer may not be set when Proglook in effect.'
         LCALL STCWRITE
         BR    BR
         END
         CLC   CLWTIMAX,=H'0'
         IF    (E,AND,(TR,GT,32000)),BEGIN   MAX INTERVAL IS 50 MINS
         MVC   CLWTIVAL(2),=H'32000'
         SEG   'Value too large, interval set to maximum. '
         LCALL STCWRITE
         END
         CLC   CLWTIMAX(2),=H'0'     IF MAX INTERVAL LIMIT, CHECK VALUE
         IF    NE,BEGIN
         CLC   CLWTIVAL(2),CLWTIMAX
         IF    H,BEGIN
         MVC   CLWTIVAL(2),CLWTIMAX
         SEG   'Value too large, interval set to maximum. '
         LCALL STCWRITE
         END
         IF    (TR,Z),BEGIN
         MVC   CLWTIVAL(2),CLWTIMAX
         SEG   'Timer may not be cleared, interval set to maximum. '
         LCALL STCWRITE
         END
         END
*
*     GOT INTERVAL VALUE,  SET ORVYL TIMER
*
         LH    R1,CLWTIVAL        IF INTERVAL IS ZERO, TURN OFF TIMER
         LH    R0,CLWTMAX
         IF    (R1,Z),BEGIN
         IF    (R0,Z),BEGIN
         SR    R1,R1
         VSET  153,(R1)
         BR    BR
         END
         ELSE BEGIN                        (UNLESS CPU LIMIT SET, THEN
         STH   R0,CLWTIVAL                    SET MAX TIMEOUT)
         END
         END
         SENSE 4                  GET CURRENT TIME
         LR    TR,R15
         SR    SR,SR
         D     SR,=F'3840'        TR - CURRENT TIME IN 10THS
         LH    SR,CLWTIVAL        SR - TIIMER INTERVAL IN 10THS
         LH    R1,CLWTMAX         R1 - CPU TIME LIMIT IN 10THS
         LR    QR,R1              QR - TIME LEFT TILL CPU MAX TIMEOUT
         SR    QR,TR
         IF    (R1,NZ),BEGIN           IF MAX CPU LIMIT THEN
         CR    TR,R1              CURNT TIME > CPU LIMIT, DON'T RESET
         BNLR  BR                 TIMER    (GO BYE-BYE)
         IF    ('CR SR,QR',H),BEGIN
         LR    SR,QR              NEXT TIMEOUT > CPU LIMIT, THEN USE
         END   ,                   CPU LIMIT
         END
         MH    SR,=H'3840'        TIMEOUT INTERVAL
         VSET  153,(SR)           SET TIMER
         BR    BR                 DONE
         EJECT
*  SET ZOT VALUE (VALUE TO INITIALIZE CORE TO)
*
SETZOT   LABEL ,
         PRVBLOCK ,
         SCTELL ,CLWKWCB               SAVE SCAN
         LR    SR,R0
         LR    TR,R1
         SCAN  ,CLWKWCB                GET TOKEN
         BZ    DODEFZOT                NOTHING THERE, TAKE DEFAULT
         SCINIT (TR),(SR),CLWKWCB      RESTORE SCAN
         LA    R0,1                    ONLY 1 BYTE ALLOWED
         LA    R1,CLWTEMP              WHERE TO PUT IT
         VCALL EVHEX                   GET HEX STRING
         BNZ   ERROR                   BAD VALUE
         VSET  23,LC:CLWTEMP           SET ZOT CHARACTER
         BR    BR                      DONE.
*
DODEFZOT CLPSERV RSTRASH               RESET THE TRASH BYTE
         BR    BR
         EJECT
*
*    SET REGION SIZE
*
         USING SEVWA,WAR               ##
SETREGN  LABEL ,
         LA    R13,SEVWA+SEVWASIZ      RESERVE SOME STACK
         CLEAR (SEVWMSK,12)
         IF    CLWFCMD,'LA  R1,REGNKTB'  COMMAND SVC
         ELSE  'LA  R1,REGNTBL'        USER TYPED COMMAND
         SCAN  (R1),CLWKWCB
         BM    SCRET
         L     TR,SEVWEND              GET RANGE VALUE
         IF    (TR,NP),ILLVAL
         IF    (TR,GT,CLWUPML),BEGIN    OVER MAXIMUM REGION SIZE
         SEG   'Region value too large'
         B     ERROR
         END   ,
         L     R11,CLWSCP
         WITH  (SCP,R11),BEGIN
         IF    CLWPFPL+CLWPFPIC,BEGIN
         SH    TR,CLWUPRSV             REMOVE PROGRAM SIZE
         BNP   TOOLOW
         IF    ^CLWFCMD,'STH  TR,CLWUPURV'  RESET IF USER COMMAND
         SH    TR,SCPRESRV             REDUCE BY AMOUNT USED
         BNP   TOOLOW
         END   ,
         STH   TR,SCPUNRSV             SET NEW PAGE LIMIT
         END   ,
         BR    BR
*
TOOLOW   SEG   'Region value too small'
         B     ERROR
*
REGNTBL  SCKW  MAX,RGNMAX
         SCKW  ,RGNVAL,(I,PI)
REGNKTB  SCKW  ,RGNK
*
RGNK     LABEL ,
         LR    SR,R0                   LENGTH
         DECR  SR
         LA    SR,@R1(SR)              LAST POSITION
         CLI   @SR,C'K'                RIGHT FORMAT?
         BNE   UNREC
         VPUSH R14,R15,*
         DECR  R0
         XCALL DTB                     CONVERT
         BNZ   ILLVAL                  NO GOOD
         LA    R15,@R15+3              ROUND UP
         SRL   R15,2                   TO NUMBER OF PAGES
         ST    R15,SEVWEND
         VPOP  R14,R15,*
         SCRTN (R15)
*
RGNMAX   SEG   '"MAX" no longer supported - command ignored.'
         B     STCWREX
*
RGNVAL   L     R1,CLWKWVAL             REGION VALUE
         ST    R1,SEVWEND
         SCRTN (15)
         DROP  WAR                     ##
         EJECT
*
* PROGRAM SET OPTIONS
*
*GEN
         VPMTAB SETTAB,15
*NOGEN
         VCALL PROGRAMS
         BNZ   WYLMIL                  PASS ON TO OTHERS
         BR    BR
         SPACE 6
*
* ORVYL SYSTEM SET OPTIONS
*
*GEN
         VSSVTAB SETTAB,15
*NOGEN
         VCALL CLPSYSTM
         BNZ   WYLMIL                  PASS ON TO OTHERS
         BR    BR
*GEN
         VSSWTAB SETTAB,15
*NOGEN
         VCALL CLPSYST2
         BNZ   WYLMIL                  PASS ON TO OTHERS
         BR    BR
         EJECT
*
* FILE SET OPTIONS
*
*GEN
         VGPTAB SETTAB,15
*NOGEN
         VCALL FILES
         BNZ   WYLMIL                  PASS ON TO OTHERS
         BR    BR
         EJECT
* CLEAR COMMAND
*
*
*        NOTE:  PR IS USED AS A POINTER FOR BLANKING RECOGNIZED
*               CLEAR OPTIONS - IT'S CONTENTS MUST BE PRESERVED
*               THRU ALL CLEAR ROUTINES.
*
CLEAR    VENTER 2,11,*
         L     BR,=A(BASE)             BASE AND EXIT ROUTINE
         USING BASE,BR                 ##
         CLEAR CLWMCLRP                CLEAR UNREC. FLAG
         SCTELL ,CLWKWCB               FIND WHERE WE ARE
         LR    PR,R1
         VPUSH R1,,*
CLRETRY  SCAN  CLRTBL,CLWKWCB          SCAN FOR MORE CLEARS
         BM    SCRET                   ILLEGAL STRING
         IF    ^CLWMCLRP,'BR  BR'      ANYTHING TO SEND ON?
         LR    R0,PR                   END OF STRING
         LA    SR,CLWIBUF              START OF COMMAND
         SR    PR,SR                   LENGTH TO SEND ON
         STH   PR,CLWIBUFN             SAVE IT
         VPOP  R1,,*
         SR    R0,R1                   LENGTH OF ERROR TEXT
         SCINIT (R1),(R0),(R15)        RESET FOR ERROR MESSAGES
         B     WYLMIL                  SEND THE COMMAND ON
*
CLRTBL   SCKW  CORE,CLRCORE,A
         SCKW  CLPERR,CLRCLPER
         SCKW  TRAP,CLRTRAP,(P,PI),CLWNTRAP
         SCKW  T,CLRT,(P,PI),CLWNTRAP  FOR 'CT' ABBREVIATION
         SCKW  TRAPS,CLRTRAPS
         SCKW  TS,CLRTS                FOR 'CTS' ABBREVIATION
*         SCKW  SCREEN,CLRSCRN
*         SCKW  SCRN,CLRSCRN
         SCKW  EVENT,CLREVENT,A
         SCKW  MONITOR,CLRMONIT,A
         SCKW  ,CLRUNREC
         SPACE 3
CLRUNREC LABEL ,
         SET   CLWMCLRP                SET UNREC. CLR FLAG
         SR    R1,PR                   GET LENGTH TO BLANK
         BNP   CLRUNR1                 GETTING NOWHERE FAST
         MVI   @PR,C' '                BLANK FIRST BYTE
         SH    R1,=Y(2)                REDUCE FOR EXECUTE
         BM    CLRUNR1
         EX    R1,'MVC  @PR+1(0),@PR'  BLANK IT
CLRUNR1  SCTELL ,CLWKWCB
         LR    PR,R1                   SAVE NEW POINTER
         B     CLRETRY                 SCAN FOR MORE CLEARS
         EJECT
CLRCLPER LABEL ,
         VCALL PRIVTEST
         BNZ   CLRETRY                 SCAN FOR MORE CLEARS
         L     R11,CLWSCP
         WITH  (SCP,R11),'CLEAR SCPFERR'
         B     CLRETRY                 SCAN FOR MORE CLEARS
         SPACE 5
*
*  CLEAR CORE
*
CLRCORE  LABEL ,
         CLEAR R15                     CODE 0 FOR CLR CORE
         VCALL PROGRAMS
         B     CLRETRY                 SCAN FOR MORE CLEARS
         EJECT
*  CLEAR TRAP
*
CLRTRAP  LA    RR,CLRETRY
CLRT1    BM    CLTILL                  BAD TRAP
         BZ    MISSTRAP                NO TRAP SPECIFIED
         L     R15,@R15                GET VALUE
         DECR  R15                     REDUCE FOR OFFSET
         MH    R15,=Y(5)               OFFSET INTO TABLE
         LA    SR,CLWTRAPS(15)         TRAP ENTRY
         CLC   @SR(3),=XL3'00'         ANY TRAP THERE?
         BE    CLTILL1                 NOPE
         MVC   CLWTEMP+1(3),@SR        ALIGN
         L     R1,CLWTEMP              ADDRESS TO REPAIR
         LA    R1,@R1                  CLEAN IT UP
         LA    R15,2                   LENGTH OF TEXT
         LA    R0,@SR+3                ADDRESS OF TEXT
         VCALL RITECORE                RESTORE
         CLEAR (@SR,5)                 CLEAR ENTRY
         BR    RR
         SPACE 3
CLTILL   LCR   R0,R0                   LENGTH TO POSITIVE
CLTILL1  SEG   (1),(0)                 seg it
         SEG   ': No such trap'
         B     MISSWR                  VWRITE AND SCAN
         SPACE 1
MISSTRAP SEG   'No trap specified'
MISSWR   LR    RAR,RR                  RETURN FROM WRITE IS SCAN
         B     STCWRITE
         SPACE 3
*
* CLEAR TRAP ABBREVIATION
*
CLRT     LR    RR,BR
         B     CLRT1
         EJECT
*  CLEAR TRAPS
*
CLRTRAPS LA    RR,CLRETRY
CLRTS1   VCALL CLEANTRP
         BR    RR
         SPACE 3
*
* CLEAR TRAPS ABBREVIATION
*
CLRTS    LR    RR,BR
         B     CLRTS1
         EJECT
*  CLEAR SCREEN
*
CLRSCRN  LABEL ,
         CONTROL LA:1,25               TURN OFF NL'S
         WAIT  (0)
         LA    R0,7
         LA    R1,=X'27ADF2D127AD86'   CLEAR SCREEN SEQUENCE
         SEG   (1),(0)
         LCALL STCWRITE
         CONTROL LA:1,26               TURN NL'S BACK ON
         WAIT  (0)
         B     CLRETRY                 SCAN FOR MORE CLEARS
         EJECT
*  CLEAR EVENT
*
CLREVENT LABEL ,
         CLEAR (@R13,12)               ZERO A TEMP AREA
         VSET  17,(13)                 CONDITIONAL CLEAR
         BNZ   NOCLPPER                NOT ALLOWED
         B     CLRETRY                 SCAN FOR MORE CLEARS
*
NOCLPPER SEG   'Event not set'
         LCALL STCWRITE
         B     CLRETRY                 SCAN FOR MORE CLEARS
         SPACE 3
*
*  CLEAR MONITOR
*
CLRMONIT LABEL ,
         CLEAR (@R13,4)                ZERO A TEMP AREA
         VSET  18,(13)                 CONDITIONAL MONITOR CLEAR
         BNZ   NOCLPMON                NOT ALLOWED
         B     CLRETRY                 SCAN FOR MORE CLEARS
*
NOCLPMON SEG   'Monitor not set'
         LCALL STCWRITE
         B     CLRETRY                 SCAN FOR MORE CLEARS
         EJECT
*  SPECIAL SEG ROUTINE
*
SEG      LABEL ,
         VPUSH RAR,,*
         VSEG  (1),(0)
         VPOP  RAR,,*
         BR    RAR
         SPACE 5
         GENMSGS
         END   .
