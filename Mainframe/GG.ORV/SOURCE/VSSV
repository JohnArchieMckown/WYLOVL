VSSV     TITLE 'ORVYL''S INTERNAL SET, SHOW AND DUMP COMMANDS'
********************************************************************
*                                                                  *
*      ORVYL/370  RELEASE III - CLASS I - STANFORD PROPRIETARY     *
*                                                                  *
********************************************************************
         SPACE 3
         HIBAL ASSOC=YES
*
VSSV     CSECT
         IDENT 07
         SPACE 2
         COPY  ORVDEFN
&MODULE  SETC  'VSSV'
         SPACE 3
         REGS  ,,SR,TR,QR,RR,BRR,BR,WAR,RAR,CLWR,LCBR,CTR
         EJECT
*
         MACRO
&L       BTD   &LOC,&LEN,&WORD,&SW,&COMMAS=NO
         LCLC  &CM
         AIF   ('&COMMAS' NE 'YES').NOCM
&CM      SETC  'C'
.NOCM    ANOP
&L       SYSLR 15,&WORD,OP=L
         SYSLR 0,&LEN,TYPE=&SW
         SYSLR 1,&LOC
         XCALL BTDU&CM
         MEND
*
         MACRO
&L       BTX   &LOC,&LEN,&WORD
&L       SYSLR 15,&WORD,OP=L
         SYSLR 0,&LEN
         SYSLR 1,&LOC
         XCALL BTX
         MEND
*
         MACRO
&L       SYSONLY ,
&L       LCALL SYSTEST
         MEND
*
         MACRO
&L       PRVBLOCK ,
&L       LCALL PRVPTEST
         MEND
*
         MACRO
&L       EVAL  &DUMMY
&L       LCALL EVAL
         MEND
*
         MACRO
&L       SEGDC &LEN,&WORD,&SW
&L       SYSLR 15,&WORD,OP=L
         SYSLR 0,&LEN,TYPE=&SW
         LCALL SEGDC
         MEND
*
         MACRO
&L       SEGHX &LEN,&WORD
&L       SYSLR 15,&WORD,OP=L
         SYSLR 0,&LEN
         LCALL SEGHX
         MEND
         EJECT
*GEN
         COPY  SCP
         EJECT
         COPY  CLW
         EJECT
         COPY  SPB
         EJECT
         COPY  SSB
         EJECT
         COPY  SLISTMAC
         EJECT
         COPY  MAT
         EJECT
         COPY  FILECB
         EJECT
         COPY  FSB
         EJECT
         COPY  FILEDSD
         EJECT
*-
*-       WORK AREA
*-
WA       DSECT
         VSA   SR,RAR
*
WAFL     FLAG  ,                       MISC FLAGS
         FLAG  WAFLSYS                 SYSTEM PRIVS
         FLAG  WAFLINS                 INSIDER
         KWREC FLAGS
*
AREA     DS    0D
WAORVST  DS    2A
WACPUT   DS    2A
WADSPT   DS    2A
WAIOT    DS    2A
WAORVCPU DS    2A                      ORVYL CPU TIME CONSUMED
*
         ORG   AREA                    SHOW VUSERS
WAUNEXT  DS    A                       NEXT ASB IN CHAIN
WAUIOS   DS    A                       USER I/O COUNT
WAUCPU   DS    2A                      USER CPU TIME
WAUID    DS    CL8                     USER ID
WAUPGNM  DS    CL8                     PROGRAM NAME
WAUTID   DS    A                       TERMINAL ID
WAUSPOD  DS    A                       SPB ADDRESS
WAULTIM  DS    A                       MINUTES LOGGED ON
WAUAREA  EQU   WAUNEXT,*-WAUNEXT,C'X'
WAULNO   DS    A                       LINE NUMBER
WAUSPO   DS    A                       SHARED PROGRAM ADDRESS
WAUFLAG  FLAG  ,
         FLAG  WAUFSHOW                SHOW THIS GUY
WAUWA    EQU   WAUNEXT,*-WAUNEXT,C'X'
*
         ORG   AREA
WAVVOLUM DS    0A                  Start of SHOW/SET VVOLUME wa
WAVVPTR  DS    A                   Work pointer
WAVVFSN  DS    CL8                 File system name
WAVVFSBP DS    A                   FSB pointer
WAVVFSB  DS    XL(FSBOWNER-FSBBID) First part of FSB
WAVVDSD  DS    XL(L'FILEDSD)       DSD area
WAVVUNPK DS    CL8
WAVVWRK  EQU   AREA,*-AREA,C'X'
*
         ORG   AREA
WAVREGIO DS    0A                  Start of SHOW/SET VREGION wa
WAVRADDR DS    A                   Address of halfword region parm
         DS    A
WAVRLEN  DS    H                   Length
WAVREG   DS    H                   Region
WAVRORG  DS    A                   Origin
*
         ORG   AREA
WAVGSTRT EQU   *                   Start of SHOW VGROUP wa
WAVGROUP DS    CL2                 Group
WAVGS113 DS    0CL9                Status 113 return
WAVGFSID DS    X                   File system id
WAVGFSNM DS    CL8                 File system name
*
         ORG   AREA
WASPB    DS    ((L'SPB+4+3)/4)F        SPB WORK AREA
WASPBIX  DS    8A                      SPB INDEX TABLE
WASPBIT  DS    A                       SPB INDEX TABLE POINTER
WASPBCU  DS    H                       CURRENT ACTIVE
WASPBMX  DS    H                       INDEX TABLE SIZE
*
         ORG   ,
WASIZE   EQU   *-WA
*
*
SETON    EQU   0
SETOFF   EQU   4
SETPATH  EQU   0
SETJES   EQU   4
SETOSF   EQU   8
SETNET   EQU   12
         EJECT
*NOGEN
VSSV     CSECT
*
*
         USING CLW,CLWR                ##
         USING WA,WAR                  ##
*  SYSTEM COMMANDS
*
CLPSYSTM VENTER SR,RAR,WASIZE
BASE2    EQU   *+4094
         LA    BRR,BASE2
         USING BASE2,BRR               ##
         CLEAR (WAFL,4)
         LR    TR,R15                  SAVE ENTRY CODE
         CLPSERV PRIVTST               UPDATE PRIVS
         L     SR,CLWSCP               SCP POINTER
         USING SCP,SR
         IF    ('TM  SCPPRIV,KWRIFSPR',O),'SET  WAFLSYS'
         DROP  SCP
         CLPSERV LOCCT                 SENSE CT ADDRESS
         LR    CTR,R1
         BAS   BR,CMDTABLE
         USING BASE,BR                 ## BASE IS EXIT
BASE     EQU   *
*  EXIT
         BC    0,0                     NOP for FSCALL erorr rets
         BC    0,0                     NOP for FSCALL erorr rets
         SR    R15,R15                 SET OK RETURN
*
SHRET    LR    SR,R15
         LCALL AMODE24             Force return to 24 bit mode
         LR    R15,SR
*
         CLEAR CLWFOSC
         VEXIT SR,RAR,LTR
*
SCRET    LPR   R0,R0
         BZ    MISSING
ILLSTR   SEG   (1),(0)
         SEG   ': Invalid string'
         B     ERROR
*
REQABORT SEG   'Request aborted'
         B     ERROR
*
PRVPTEST IF    ^CLWPFPRV,RAR            PRIVATE PROGRAM?
         SEG   'Private program loaded, command blocked'
         B     ERROR
*
SYSTEST  IF    WAFLSYS,RAR
PRIVCMD  LABEL ,
         LA    SR,CLWKWKW+7            LAST BYTE OF KEYWORD
         LA    TR,L'CLWKWKW            LENGTH OF KEYWORD
PRIVLOOK LABEL ,
         CLI   @SR,C' '                STILL BLANK
         BNE   PRIVGOT                 NOPE -- REPORT INVALID
         DECR  SR                      BACK OFF ADDRESS
         BCT   TR,PRIVLOOK             KEEP LOOKING FOR LAST CHAR
PRIVGOT  LABEL ,
         LA    R1,CLWKWKW              ADDRESS OF KEYWORD
         LR    R0,TR                   ACTUAL LENGTH
         B     UNREC                   TELL THE BAD NEWS
         SPACE ,
*
ILLVAL   SEG   'Invalid value'
         B     ERROR
*
ILLADDR  SEG   'Invalid address'
         B     ERROR
*
ILLINE   SEG   'Invalid line'
         B     ERROR
*
MISSING  SEG   'Missing operand'
         B     ERROR
*
*  UNRECOGNIZED NAME
*
UNREC    LABEL ,
         SEG   (1),(0)
         SEG   ': Invalid'
         B     ERROR
ERRORMSG SEG   (1),(0)                 SEG MESSAGE
ERROR    LABEL ,                       BE GRAMATICAL
         VCALL TYPEIT
         BR    BR                      EXIT
*
WYLMIL   LABEL ,
         LA    R15,4                   SEND CODE
         B     SHRET                   SEND 'SHOW' ON TO MILTEN
*
MSGEXIT  SEG   (1),(0)
WRITEXIT VWRITE
         BR    BR
*
SEG      VPUSH RAR,,*
         VSEG  (1),(0)
         VPOP  RAR,,*
         BR    RAR
*box
*
*  PRCT -- Local routine to do percentage.
*    On entry:  Seg's R0/R1 as a percentage.
*
PRCT     VSAVE WAR,RAR,*
         CLEAR R14,R15
         IF    (R1,NZ),BEGIN
         LR    R15,R0
         M     R14,=A(1000)
         DR    R14,R1
         END
         BTR   CLWTEMP,(0,1),(R15)  Percentage -- nnn.n
         SEG   (R1),(R0)
         SEG   '%'
         VREST WAR,RAR
         BR    RAR
*box
*
*  FRTOMEG -- Display number in R15 which is in 4K frames as
*    megabytes.
*
FRTOMEG  VSAVE WAR,RAR,*
         SRL   R15,8               Convert frames to megabytes
         SEGDC 0,(R15)             Megs
         SEG   'M'
         VREST WAR,RAR
         BR    RAR
*
EVAL     VSAVE WAR,RAR,*
         VCALL EVAL
         VREST WAR,RAR                 RETURN IS IN RAR
         BM    ERROR
         BR    RAR
*
MSG      VPUSH RAR,,*                  SEG, WRITE, AND RETURN
         SEG   (1),(0)
         B     WRIT1
*
WRITE    VPUSH RAR,,*                  SAVE RETURN
WRIT1    VWRITE ,
         BNZR  BR                      ATTN OR ERROR
         VPOP RAR,,*
         BR    RAR                     NO ERROR
*
SGOSD    VPUSH RAR,,*
         MVCOS CLWTEMP(4),@R14
         BTD   CLWTEMP+4,0,CLWTEMP
         SEG   (1),(0)
         VPOP  RAR,,*
         BR    RAR
*
SEGDC    VPUSH RAR,14,*
         BTD   CLWTEMP,(0),(15)
         VSEG  (1),(0)
         VPOP  RAR,14,*
         BR    RAR
*
SEGHX    VPUSH RAR,14,*
         BTX   CLWTEMP,(0),(15)
         VSEG  (1),(0)
         VPOP  RAR,14,*
         BR    RAR
*
SEGSECS  L     R15,=V(SEGSECS)         TIME IN R1
         BR    R15                     RETURN IN RAR
*box
*
*  AMODE31 -- Routine to switch to 31-bit addressing mode.
*
AMODE31  LA    R15,A31GO
         O     R15,=A(X'80000000')  31 bit mode wanted
         BSM   0,R15
*
A31GO    BR    RAR                 Return
*box
*
*  AMODE24 -- Routine to switch back to 24-bit addressing mode.
*
AMODE24  LA    R15,A24GO
         BSM   0,R15               Return to 24 bit mode
*
A24GO    BR    RAR                 Return
         EJECT
*-
*-       SYSTEM COMMAND VECTOR TABLE
*-
CMDTABLE LABEL
         VSSVTAB  SYTAB,TR
         TITLE 'SHOW VUSERS Command'
*box
*
*        SHOW VUSERS
*
SHVUSERS LABEL
         CLEAR WAUWA
         SCAN  SHVUPRT,CLWKWCB     SHOW VUSERS options
         BNZ   SCRET               Trouble, scram
         SEG   'Session Id  Account     Program     '
         SEG   'I/O count   CPU time    Logon'
         IF    (WAUSPO,NZ),BEGIN
         SEG   '  SP Origin'
         END   ,
         LCALL WRITE
         CLEAR R14
         LOOP  BEGIN
         CLPSERV UINFO,WAUAREA,L'WAUAREA,(R14)
         IF    NZ,EXIT                 DONE
         SET   WAUFSHOW
         IF    ((WAULNO,NZ),AND,(WAULNO,NE,WAUTID)),'CLEAR WAUFSHOW'
         IF    ((WAUSPO,NZ),AND,(WAUSPO,NE,WAUSPOD)),'CLEAR WAUFSHOW'
         IF    WAUFSHOW,BEGIN
*  Session ID
         SEG   'Mil-'
         SEGDC 6,WAUTID
         SEG   '  '
*  Account
         SEG   WAUID+3,2               GROUP
         SEG   '.'
         SEG   WAUID,3                 USER
         SEG   '      '
*  Program
         SEG   WAUPGNM,8
         SEG   '    '
*  I/O Count
         SEGDC 9,WAUIOS
         SEG   '  '
*  CPU time
         LM    R14,R15,WAUCPU          CPU TIME
         D     R14,=A(10000*4096)       TO CENTI-SECONDS
         BTR   CLWTEMP,(9,2),(15)
         SEG   (1),(0)
         SEG   '  '
         SEGDC 7,WAULTIM
         SEG   '   '
*  Minutes logged on
         IF    (WAUSPO,NZ),BEGIN
         SEGHX 8,L:WAUSPOD
         END   ,
         LCALL WRITE
         END   ,                       OF Show this one
         L     R14,WAUNEXT
         UNTIL (R14,Z),END             DO ALL
SHVUSX   BR    BR                      DONE
SHVUPRT  SCKW  SPO,SHVUSPB,(A,P)
         SCKW  ?,SHVUHELP,A
         SCKW  ,SHVULNO,I
         SCKW  ,UNREC
SHVULNO  LABEL ,
         MVC   WAULNO,CLWKWVAL
         SCRTN (15)
SHVUSPB  LABEL ,
         VPUSH R14,R15,*
         LR    R2,R0               Save
         LR    R3,R1               Save
         XCALL XTB
         IF    NZ,BEGIN
         SEG   (R3),(R2)
         SETMSG ': invalid hex string'
         B     MSGEXIT
         END   ,
         ST    R15,WAUSPO
         NI    WAUSPO,255-X'80'    Take out address mode if necessary
         VPOP  R14,R15,*
         SCRTN (15)
*-
SHVUHELP LABEL ,
         LCALL WRITE
         SEG   'SHOW VUSERS <parameters> '
         LCALL WRITE
         SEG   ' where parameters can one of the following:'
         LCALL WRITE
         SEG   'o nnnn      - nnnn is the line number of the user'
         LCALL WRITE
         SEG   'o SPO xxxx  - Users of shared program with origin '
         SEG   'of xxxxxxxx (in hex)'
         LCALL WRITE
         LCALL WRITE
         BR    BR               Done
         TITLE 'SHOW VVERSION Command'
*box
*
*        SHOW VVERSION -- Display Orvyl version information.
*              Text is zapped into "VERSION" CSECT.
*
SHVVERSI SEG   L:=A(VERSION),L'VERSTEXT  Display version info
         LCALL WRITE
*
         BR    BR
         TITLE 'SHOW/SET VVOLUME Command'
*box
*
*        SHOW VVOLUME
*
*           Displays statistics for file system volumes.
*
SHVVOLUM BEGIN ,
         WITH  (FSB,WAVVFSB)
         WITH  (FILEDSD,WAVVDSD)
         CLEAR WAVVWRK
         SCAN  ,CLWKWCB
         BNP   SCRET               Trouble, scram
         IF    (@R1,EQ,'?'),SHOVVOLH
         BAS   RR,VVOLFSN          Edit file system name
         L     SR,FSBFRDB
         SEG   'DSD      Dataset name                           '
         SEG   '         Start  Count      I/Os'
         LCALL WRITE
         LOOP  BEGIN
         IF    (SR,Z),EXIT
         SENSE 153,FILEDSD,L'FILEDSD,(SR) Get DSD
         SEGHX 8,(SR)
         SEG   ' '
         SEG   DSDDSN,L'DSDDSN
         SEG   ' '
         SEGDC 8,DSDSTART
         SEG   ' '
         SEGDC 6,DSDCNT
         SEG   ' '
         SEGDC 9,DSDICNT
         LCALL WRITE
         L     SR,DSDNXT           Next in list
         END   ,
         BR    BR                  Done
         END   ,
*box
*
*        SET VADDVOL
*
*           Adds an additional volume to the file system.
*
SETVADDV BEGIN ,
         WITH  (FSB,WAVVFSB)
         WITH  (FILEDSD,WAVVDSD)
         IF    (CLWACCT,NE,'GG.ORV'),VVOLER91
         CLEAR WAVVWRK
         SCAN  ,CLWKWCB
         BNP   SCRET               Trouble, scram
         IF    (@R1,EQ,'?'),SETVADDH
         BAS   RR,VVOLFSN          Edit file system name
         SCAN  ,CLWKWCB
         IF    Z,BEGIN             Derive DSN from last one
         L     SR,FSBLRDB          Get last DSD addr
         SENSE 153,FILEDSD,L'FILEDSD,(SR) Get last DSD
         SEG   'Last '
         SEG   DSDDSN,L'DSDDSN
         LCALL WRITE
         LA    R14,DSDDSN+L'DSDDSN-1 Point to last char
         LA    R15,L'DSDDSN
         LOOP  BEGIN
         IF    ('CLI @R14,C" "',NE),EXIT
         DECR  R14
         UNTIL (BCT,R15),END
         IF    (R15,LT,2),VVOLER93
         LR    RR,R15              Save length of DSN
         LOOP  BEGIN
         IF    ('CLI @R14,C"0"',LT),EXIT
         DECR  R14
         UNTIL (BCT,R15),END
         LR    SR,RR               Get length of DSN
         IF    ('SR SR,R15',Z),VVOLER93
         LA    TR,@R14+1           Point to first digit
         LR    R15,SR              Get length of number
         DEX   R15,'PACK WAVVPTR,@TR(1)'
         AP    WAVVPTR,=PL1'1'     Calc next dataset
         UNPK  WAVVUNPK,WAVVPTR    Get the new number
         OI    WAVVUNPK+L'WAVVUNPK-1,C'0' Make display
         LA    R14,WAVVUNPK
         LA    R15,L'WAVVUNPK
         LOOP  BEGIN
         IF    ('CLI @R14,C"0"',NE),EXIT
         INCR  R14
         UNTIL (BCT,R15),END
         IF    (R15,GT,SR),BEGIN
         IF    (RR,EQ,L'DSDDSN),BEGIN
         INCR  R14                 Truncate
         DECR  R15                 Truncate
         END   ,
         END   ,
         ELSEIF (R15,LT,SR),BEGIN
         SR    SR,R15              Calc difference
         AR    TR,SR               Increment pointer
         END   ,
         DEX   R15,'MVC @TR(1),@R14' Set new name
         END   ,
         ELSE  BEGIN
         IF    (R0,GT,L'DSDDSN),VVOLER93
         MVI   DSDDSN,C' '
         MVC   DSDDSN+1(L'DSDDSN-1),DSDDSN
         LR    R15,R0
         DEX   R15,'MVC DSDDSN(1),@R1' Get DSN specified
         END   ,
         SEG   'Add  '
         LA    R14,DSDDSN
         LA    R15,L'DSDDSN
         LOOP  BEGIN
         IF    ('CLI @R14,C" "',EQ),EXIT
         INCR  R14
         UNTIL (BCT,R15),END
         LA    R15,DSDDSN
         SR    R14,R15
         SEG   DSDDSN,(R14)
         SEG   '  to '
         SEG   WAVVFSN,L'WAVVFSN
         SEG   '???'
         LCALL CHKOK
         BNZ   REQABORT
         CLPSERV ADDVOL,WAVVFSN,DSDDSN Add the volume
         B     *+4(15)
         B     VADDER00            Volume added
         B     VADDER04            Invalid file system name
         B     VADDER08            Allocation error
         B     VADDER12            Open error
         B     VADDER16            Block length error
         B     VADDER20            Header length error
         B     VADDER24            Insufficient bitmap blocks
         B     VADDER28            Volume already referenced
         END   ,

*box
*
*        SET VREMVOL
*
*           Removes last volume from the file system.
*
SETVREMV BEGIN ,
         WITH  (FSB,WAVVFSB)
         WITH  (FILEDSD,WAVVDSD)
         IF    (CLWACCT,NE,'GG.ORV'),VVOLER91
         CLEAR WAVVWRK
         SCAN  ,CLWKWCB
         BNP   SCRET               Trouble, scram
         IF    (@R1,EQ,'?'),SETVREMH
         BAS   RR,VVOLFSN          Edit file system name
         IF    (FSBFRDB,EQ,FSBLRDB),VVOLER92
         L     SR,FSBLRDB          Get last DSD addr
         SENSE 153,FILEDSD,L'FILEDSD,(SR) Get last DSD
         SEG   'Remove  '
         LA    R14,DSDDSN
         LA    R15,L'DSDDSN
         LOOP  BEGIN
         IF    ('CLI @R14,C" "',EQ),EXIT
         INCR  R14
         UNTIL (BCT,R15),END
         LA    R15,DSDDSN
         SR    R14,R15
         SEG   DSDDSN,(R14)
         SEG   '  from '
         SEG   WAVVFSN,L'WAVVFSN
         SEG   '???'
         LCALL CHKOK
         BNZ   REQABORT
         CLPSERV ADDVOL,WAVVFSN,0  Remove the volume
         B     *+4(15)
         B     VREMER00            Volume removed
         B     VADDER04            Invalid file system name
         B     VREMER08            Blocks being used in volume
         END   ,

VVOLFSN  LABEL ,
         IF    (R0,GT,L'FSBNAME),VVOLER90 Invalid file system name
         MVI   WAVVFSN,C' '
         MVC   WAVVFSN+1(L'WAVVFSN-1),WAVVFSN
         LR    R15,R0
         DEX   R15,'MVC WAVVFSN(1),@R1' Get file system name
         SENSE 153,WAVVPTR,L'WAVVPTR,MATPTR Get MAT pointer
         L     SR,WAVVPTR
         AH    SR,=Y(MATFILCB-MAT)
         SENSE 153,WAVVPTR,L'WAVVPTR,(SR)  Get FILECB pointer
         L     SR,WAVVPTR
         AH    SR,=Y(FILEFFSB-FILECB)
         SENSE 153,WAVVPTR,L'WAVVPTR,(SR)  Get first FSB pointer
         L     SR,WAVVPTR
         WITH  (FSB,WAVVFSB),BEGIN
         LOOP  BEGIN
         IF    (SR,Z),VVOLER90     Invalid file system name
         SENSE 153,WAVVFSB,L'WAVVFSB,(SR)  Get FSB
         IF    (FSBNAME,EQ,WAVVFSN),EXIT   Found
         L     SR,FSBCHAIN         Next FSB pointer
         END   ,
         END   ,
         ST    SR,WAVVFSBP
         BR    RR                  Return to caller

SHOVVOLH LABEL ,
         LCALL WRITE
         SEG   'SHOW VVOLUME ffffffff'
         B     SHOVREM2

SETVADDH LABEL ,
         LCALL WRITE
         SEG   'SET VADDVOL ffffffff <dddddddddd>'
         LCALL WRITE
         SEG   '  where ffffffff is the file system name '
         SEG   'and optionally ddddddddd is the'
         LCALL WRITE
         SEG   '  DSN of the volume being added to the file '
         SEG   'system specified. If not provided,'
         LCALL WRITE
         SEG   '  the next logical DSN will be derived from the '
         SEG   'DSN of the current last volume.'
         LCALL WRITE
         B     VVOLER99

SETVREMH LABEL ,
         LCALL WRITE
         SEG   'SET VREMVOL ffffffff'
SHOVREM2 LABEL ,
         LCALL WRITE
         SEG   '  where ffffffff is the file system name'
         LCALL WRITE
         B     VVOLER99

VADDER00 LABEL ,
         SEG   'Volume added'
         B     VVOLER99

VREMER00 LABEL ,
         SEG   'Volume removed'
         B     VVOLER99

VADDER04 LABEL ,
         B     VVOLER90  ????

VADDER08 LABEL ,
         SEG   'Allocation error'
         B     VVOLER99

VREMER08 LABEL ,
         SEG   'Blocks being used in volume'
         B     VVOLER99

VADDER12 LABEL ,
         SEG   'Open error'
         B     VVOLER99

VADDER16 LABEL ,
         SEG   'Block length error'
         B     VVOLER99

VADDER20 LABEL ,
         SEG   'Header length error'
         B     VVOLER99

VADDER24 LABEL ,
         SEG   'Insufficient bitmap blocks'
         B     VVOLER99

VADDER28 LABEL ,
         SEG   'Volume already referenced by Orvyl'
         B     VVOLER99

VVOLER90 LABEL ,
         SEG   'Invalid file system name: '
         SEG   WAVVFSN,L'WAVVFSN
         B     VVOLER99
VVOLER91 LABEL ,
         SEG   'Not authorized'
         B     VVOLER99
VVOLER92 LABEL ,
         SEG   'Can not remove the only volume.'
         LCALL WRITE
         SEG   'Use SET NOVFILE to inactivate file system.'
         B     VVOLER99
VVOLER93 LABEL ,
         SEG   'Invalid DSN specified'
         B     VVOLER99
VVOLER99 LABEL ,
         LCALL WRITE
         BR    BR                  Return
         TITLE 'SHOW/SET VREGION Command'
*box
*
*        SHOW VREGION
*
*           Displays the system wide region parameters.
*
SHVREGIO LABEL ,
         B     VREGDISP            Display
*box
*
*        SET VREGION
*
*           Sets the system wide region.
*
SETVREGI LABEL ,
         LCALL WRITE
         SYSONLY ,                 Privileged
         CLPSERV VREGION           Get region parameters
         STM   R14,R1,WAVREGIO     Save parameters
         IF    (WAVRLEN,EQ,=Y(X'300')),SETVRERR
         VCALL EVAL
         BM    SETVRER3
         IF    (R0,LT,=Y(X'300')),SETVRER2
         IF    (R0,GT,WAVRLEN),SETVRER2
         LR    R2,R0
         VCALL VERPATCH            Verify patch
         BNZR  BR
         ACALL AMODE31
         L     R15,WAVRADDR
         STH   R2,@R15             Set new region parameter
         ACALL AMODE24
         SEG   'New region parameter set'
         LCALL WRITE
         B     VREGDISP
SETVRERR LABEL ,
         SEG   'Can''t set region when length and region '
         SEG   'are both x0300'
         B     SETVRER9
SETVRER2 LABEL ,
         LR    R15,R0
         SEGHX 4,(R15)
         SEG   ' invalid'
SETVRER3 LABEL ,
         SEG   ', '
SETVRER5 LABEL ,
         SEG   'Region must be a number of pages '
         SEG   'between x0300 and x'
         SEGHX 4,LH:WAVRLEN
SETVRER9 LABEL ,
         LCALL WRITE
         B     VREGDIS2
VREGDISP LABEL ,
         CLPSERV VREGION           Get region parameters
         STM   R14,R1,WAVREGIO     Save parameters
VREGDIS2 LABEL ,
         SEG   'User area origin: '
         SEGHX 8,L:WAVRORG
         SEG   ', length: '
         SEGHX 4,LH:WAVRLEN
         SEG   ' pages, region: '
         SEGHX 4,LH:WAVREG
         SEG   ' pages'
         LCALL WRITE
*
         BR    BR
         TITLE 'SHOW VGROUP Command'
*box
*
*        SHOW VGROUP
*
*           Displays the file system for a group.
*
SHVGROUP LABEL
         SCAN  SHVGPRT,CLWKWCB     SHOW VGROUP options
         BNZ   SCRET               Trouble, scram
         STATUS 113,WAVGS113,L'WAVGS113,WAVGROUP Get file sys for grp
         B     *+16(R15)               INDEX INTO RETURN CODES
         B     SHVGINV             -12 INVALID GROUP
         B     SHVGINV              -8 INVALID GROUP
         B     SETMANY              -4 TOO MANY DEVICES ATTACHED
SHVGWAIT LABEL ,
         WAIT  (0)                     WAIT FOR COMPLETION
         LCALL WRITE
         SEG   'File System ID: '
         SEGDC 0,LC:WAVGFSID
         SEG   '  Name: '
         SEG   WAVGFSNM,L'WAVGFSNM
         LCALL WRITE
         LCALL WRITE
         BR    BR
SHVGINV  LABEL ,
         SETMSG 'Group specified not valid for Orvyl file systems'
         B     MSGEXIT             Done
SHVGG    LABEL ,
         IF    (R0,NE,2),BEGIN
         SETMSG 'Group must be specified (GG etc)'
         B     MSGEXIT
         END   ,
         MVC   WAVGROUP,@R1
         SCRTN (15)
SHVGPRT  SCKW  GROUP,SHVGG,A
         SCKW  ,SHVGG
         TITLE 'SHOW VSESSION Command'
*box
*
*        SHOW VSESSION
*
SHVSESSI LABEL
         SETMSG 'Command not yet implemented.'
         B     MSGEXIT
*
         TITLE 'SHOW VTIME Command'
*box
*
*        SHOW VTIME
*
SHVTIME  LABEL
         SEG   'Orvyl session statistics:'
         LCALL WRITE
         SENSE 25                      GET STATS
         LR    SR,R1                   SAVE CPU TIME
         SEGDC 1,(R0),PAD
         SEG   ' file I/O''s'
         LCALL WRITE
         SEG   ' '
         LR    R15,SR                  COPY CPU TIME
         CLEAR R14
         D     R14,=A(384)             TO CENTI-SECONDS
         LR    TR,R15                  SAVE CENTI-SECONDS
         BTR   CLWTEMP,(0,2),(15)
         VSEG  (1),(0)
         SEG   ' CPU seconds'
         LCALL WRITE
         SEG   ' '
         LR    R15,TR                  GET CENTI-SECONDS
         M     R14,=A(287)             CONVERT SECONDS TO
         D     R14,=A(100)              3081 MODEL D UNITS
         BTR   CLWTEMP,(0,2),(15)
         VSEG  (1),(0)
         SEG   ' Charge units'
         LCALL WRITE
         BR    BR
         TITLE 'SHOW VSYS Command'
*box
*
*  SHOW VSYS -- Show shared programs.
*
SHVSYS   LABEL ,
         CLPSERV SPBPTR                GET SPB CHAIN POINTER
         IF    ('LTR  SR,R15',Z),RAR   NONE TO SHOW
         SEG   'Name     Users  Size  Origin    '
         IF    CLWSSP,BEGIN
         SEG   'SPB       '
         END   ,
         SEG   'Program'
         LCALL WRITE
         ACALL AMODE31
         WHILE (SR,NZ),BEGIN
         WITH  (SPB,SR)
         SEG   SPBNAME,8
         SEGDC 6,L:SPBNU               USER COUNT
         L     R15,SPBSIZE             VIRTUAL
         SRL   R15,10                  TO K
         SEGDC 5,(R15)                  IN K
         SEG   'K'
         SEG   '  '
         L     R15,SPBORGIN            ORIGIN
         IF    SPBFM31,'O R15,=X"80000000"'
         SEGHX 8,(R15)
         SEG   '  '
         IF    CLWSSP,BEGIN
         LA    R15,SPB                 SPB ADDR
         SEGHX 8,(R15)
         SEG   '  '
         END   ,
         SETMSG SPBFILE,L'SPBFILE   Proglib
         XCALL RTRIM
         SEG   (R1),(R0)
         SEG   '('
         SETMSG SPBPROG,L'SPBPROG   Member name
         XCALL RTRIM
         SEG   (R1),(R0)
         SEG   ')'
*
         IF    SPBFPURGABLE,'SEG " (Purgable)"'
         IF    SPBFCORPSE,'SEG " (Corpse)"'
*
         ACALL AMODE24
         LCALL WRITE
         ACALL AMODE31
         L     SR,SPBNEXT              NEXT IN THE CHAIN
         END   ,
         ACALL AMODE24
         BR    BR
         TITLE 'SHOW VSYMBOLS Command'
*box
*
*  SHOW VSYMBOLS -- Show shared symbol table.
*
SHVSYMBO LABEL
         CLPSERV SPBPTR
         LR    TR,R15                  Get address of first SPB
*-
*-       SHOW VSYM title.
*-
         SEG   'Program   Users  Value   Symbol'
*              'XXXXXXXX* xxxx  xxxxxxxx xxxxxxxxxxxxxxxxxx'
         LCALL WRITE
*-
*-       SHOW VSYM entries.
*-
         ACALL AMODE31
         WHILE (TR,NZ),BEGIN           Go through all SPBs
         WITH  (SPB,TR)
         LT    SR,SPBSSB               Get the SSB queue
         IF    (NZ),BEGIN              Write out the program header
         WITH  (SSB,SR)
*-
*-       Write out the initial information about the program
*-
         SEG   SPBNAME,8               Program name
         IF    SPBFCORPSE,BEGIN        Mark Corpse entries
         SEG   '*'
         END   ELSE,BEGIN
         SEG   ' '
         END
         SEG   ' '
         SEGDC 4,SPBNREF               Number of references
         SEG   '  '                    followed by two blanks
         B     SVSNXT                  Jump ahead a bit
*-
*-       Loop through the symbol entries
*-
         WHILE (SR,NZ),BEGIN           Go through table...
         SEG   '                '      Get the spacing
SVSNXT   LABEL ,                       Label to skip the spacing
         SEGHX 8,L:SSBWORD             Symbol value
         SEG   ' '
*
         SETMSG SSBNAME                 Symbol name
         XCALL RTRIM
         SEG   (R1),(R0)
         ACALL AMODE24
         LCALL WRITE
         ACALL AMODE31
*
         L     SR,SSBNEXT              Next SSB in chain
         END
         END
         L     TR,SPBNEXT              Next SPB in the chain
         END
         ACALL AMODE24
*
         BR    BR
         TITLE 'Internal SET Commands'
*
*    SET TO CANCEL ORVYL ON NEXT CLP ERROR
*
SETCLPER SYSONLY
         L     R1,CLWSCP
         WITH  (SCP,R1),'SET SCPFERR'
         BR    BR
         SPACE 3
*
*    SET USER PROGRAM AS PSEUDO CLP
*
SETPSCLP SYSONLY ,
         CLPSERV PSEUDO,4              SET FLAG
         BR    BR
         EJECT
*
* SET/RESET FILE SYSTEM MODES
*
SETVMAIN LABEL ,                       SET READ ONLY
         LA    TR,4                    INDICATE READ ONLY
         B     SETMAINT                JOIN COMMON CODE
         SPACE ,
SETNOVMA LABEL ,
         CLEAR TR                      CLEAR READ ONLY
         B     SETMAINT                JOIN COMMON CODE
         SPACE ,
SETNOVFI LABEL ,                       BLOCK ALL ACCESS
         LA    TR,12                   INDICATE NO ACCESS
         B     SETMAINT                JOIN COMMON CODE
         SPACE ,
SETVFILE LABEL ,
         LA    TR,8                    ALLOW ACCESS
         B     SETMAINT                JOIN COMMON CODE
         SPACE ,
SETMAINT LABEL ,                       COMMON PROCESSING
         IF    ^WAFLSYS,BEGIN
         CLC   CLWACCT,=C'BP.ORV'      RLIN FELLOW?
         BNE   PRIVCMD                 PRETEND IT NEVER HAPPENED
         END   ,
         SCAN  ,CLWKWCB                GET FILE SYSTEM NAME
         BNP   SCRET                   NO GOOD
         IF    (R0,GT,8),ILLSTR         THIS EITHER
         MVC   CLWTEMP(8),CLWKWKW       SAVE NAME
         SEG   CLWTEMP,8
         SEG   ' access will be '
         LR    R1,TR                   POINT AT PROPER MESSAGE
         SLL   R1,2                    TIMES 4
         LA    R1,VMSGS(R1)
         LA    R0,10
         SEG   (R1),(R0)               ADD IT
         LCALL CHKOK                   HONEST-DODGER?
         BNZ   REQABORT                MUST BE A CLANTON
         STATUS 108,CLWTEMP,(TR)       REQUEST SPECIFIED FILE MODE
         B     *+12(R15)               INDEX INTO RETURN CODES
         B     SETNOFS              -8 INVALID FILE SYSTEM NAME
         B     SETMANY              -4 TOO MANY DEVICES ATTACHED
         B     SETMWAIT              0 OPERATION BEGUN
         B     SETALDY               4 FILE SYSTEM ALREADY SET
         B     SETINVA               8 INVALID ACCOUNT
         B     SETINVC              12 INVALID CODE
SETMWAIT LABEL ,
         WAIT  (0)                     WAIT FOR COMPLETION
         B     *+8(R15)                INDEX INTO RETURN CODES
         B     SETIOE               -4 I/O ERROR OCCURED
         B     SETMOK                0 REQUESTED MODE SET
         B     SETMSTIL              4 FILE MAINTENANCE IN PRGRSS
         B     SETMRG                8 RICHARD GOOFED
         B     SETMWS               12 YOU WIN SOME
         B     SETMWS               16     AND
         B     SETMLS               20 YOU LOSE SOME
         SPACE ,
SETMANY  LABEL ,
         SEG   'Too many devices attached'
         B     ERROR
         SPACE ,
SETALDY  LABEL ,
         SEG   'File system already in requested mode'
         B     ERROR
         SPACE ,
SETIOE   LABEL ,
         SEG   'I/O error'
         B     ERROR
SETMOK   LABEL ,
         SEG   'Requested file mode set'
         B     WRITEXIT
         SPACE ,
SETMSTIL LABEL ,
         SEG   'File maintenance still in progress'
         B     ERROR
         SPACE ,
SETNOFS  LABEL ,
         SEG   'File system not found'
         B     ERROR
*
SETINVA  LABEL ,
         SEG   'You can''t do that'
         B     ERROR
         SPACE ,
SETMLS   LABEL ,
         SEG   'You lose some...'
         B     ERROR
         SPACE ,
SETINVC  LABEL ,
         SEG   'This will never happen'
         B     ERROR
         SPACE ,
SETMRG   LABEL ,
         SEG   'Richard goofed'
         B     ERROR
*
SETMWS   LABEL ,
         SEG   'You win some...'
         B     ERROR
         EJECT ,
*
*  SET USER PATHS UNAVAILABLE
*
SETNOVPA SYSONLY ,
         SEG   'User path'
         SEG   ' access will be blocked'
         LCALL CHKOK                   VERIFY HIS RESOLVE
         BNZ   REQABORT                HE DIDN'T
         CLPSERV UIOFSET,SETPATH,SETOFF
         BR    BR
         SPACE 3
*
*  SET USER PATHS AVAILABLE
*
SETVPATH SYSONLY ,
         SEG   'User path'
         SEG   ' access will be allowed'
         LCALL CHKOK                   VERIFY HIS RESOLVE
         BNZ   REQABORT                HE DIDN'T
         CLPSERV UIOFSET,SETPATH,SETON
         BR    BR
         EJECT
*
*  SET NETWORK UNAVAILABLE
*
SETNOVNE SYSONLY ,
         SEG   'Network'
         SEG   ' access will be blocked'
         LCALL CHKOK                   VERIFY HIS RESOLVE
         BNZ   REQABORT                HE DIDN'T
         CLPSERV UIOFSET,SETNET,SETOFF
         BR    BR
         SPACE 3
*
*  SET NETWORK FILE AVAILABLE
*
SETVNET  SYSONLY ,
         SEG   'Network'
         SEG   ' access will be allowed'
         LCALL CHKOK                   VERIFY HIS RESOLVE
         BNZ   REQABORT                HE DIDN'T
         CLPSERV UIOFSET,SETNET,SETON
         BR    BR
         EJECT
*
*  SET OS FILES UNAVAILABLE
*
SETNOVOS SYSONLY ,
         SEG   'OS file'
         SEG   ' access will be blocked'
         LCALL CHKOK                   VERIFY HIS RESOLVE
         BNZ   REQABORT                HE DIDN'T
         CLPSERV UIOFSET,SETOSF,SETOFF
         BR    BR
         SPACE 3
*
*  SET OS FILES AVAILABLE
*
SETVOSF  SYSONLY ,
         SEG   'OS file'
         SEG   ' access will be allowed'
         LCALL CHKOK                   VERIFY HIS RESOLVE
         BNZ   REQABORT                HE DIDN'T
         CLPSERV UIOFSET,SETOSF,SETON
         BR    BR
         EJECT
*
*  SET JES READER UNAVAILABLE
*
SETNOVJE SYSONLY ,
         SEG   'JES reader'
         SEG   ' access will be blocked'
         LCALL CHKOK
         BNZ   REQABORT
         CLPSERV UIOFSET,SETJES,SETOFF
         BR    BR
         SPACE 3
*
* SET JES READER AVAILABLE
*
SETVJES  SYSONLY ,
         SEG   'JES reader'
         SEG   ' access will be allowed'
         LCALL CHKOK
         BNZ   REQABORT
         CLPSERV UIOFSET,SETJES,SETON
         BR    BR
         EJECT ,
REFRESH  RECORD BEGIN
REFNAME  DS    CL8                     Name of program for refresh
         END   ,
         SPACE ,
SETREFRE SYSONLY ,
         WITH  (REFRESH,CLWTEMP)
         SCAN  ,CLWKWCB
         BNP   SCRET                   No good parm
         IF    (R0,GT,8),ILLSTR
         MVC   REFNAME,CLWKWKW         Save shared pgm name
*
*  Verify that this is what the user wants
*
         SEG   'Shared program '
         VSEG  REFNAME
         SEG   ' will be refreshed '
         LCALL CHKOK                   Check it out dude!
         IF    NZ,REQABORT             chicken
*
*  Get SPB loading enqueue
*
         SETMSG 'SPB LOADING STUFF'
         FSCALL ENQ
*
*  Refresh SPB entry
*
         CLPSERV REFSPB,LA:REFNAME
         LR    SR,R15
*
*  Release enqueue
*
         FSCALL DEQ
*
*  All done.
*
         SEG   'Refresh of '
         VSEG  REFNAME
         IF    (SR,ZERO),BEGIN
         SEG   ' completed.'
         END   ELSE,BEGIN
         SEG   ' failed.'
         END   ,
         LCALL WRITE
         BR    BR
*
*
*
         FSCALL GOSUB
         EJECT ,
*
*  VERIFY USER REQUEST TO ENABLE/DISABLE SOME FUNCTION
*
CHKOK    VPUSH RAR,,*
         VMARK ,
         SEG   'Ok'
         VREAD ,
         BNZ   CKABORT
         SCINIT (1),(0),CLWKWCB
         SCAN  CKTBL,CLWKWCB           SCAN FOR ANSWER
CKABORT  LR    R15,RAR                 FOR RETURN CODE
         B     CKEXIT
*
CKOK     SR    R15,R15                 FOR RETURN CODE
*
CKEXIT   VPOP  RAR,,*
         LTR   R15,R15                 SET CC
         BR    RAR                     RETURN
*
CKTBL    SCKW  YES,CKOK
         SCKW  OK,CKOK
         SCKW  ,CKABORT
         EJECT
SETNOPSC LABEL ,
         SYSONLY ,
         CLPSERV PSEUDO,0              RESET FLAG
         BR    BR
         EJECT
*  CONSTANTS
*
         SPACE
VMSGS    DC    CL16'read/write'
         DC    CL16'read only'
         DC    CL16'allowed'
         DC    CL16'blocked'
         SPACE 5
         GENMSGS
         SPACE 6
         DROP  ,
         EJECT
         LTORG
*
VERSION  CSECT
VERSTEXT DC    CL235'No ORVYL version information available.'
         DC    C'<---<<< End of version info'
         END   .
