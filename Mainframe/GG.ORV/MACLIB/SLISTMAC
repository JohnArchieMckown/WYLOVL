*******************************************************************             
*                                                                 *             
* Macros for the serialized manipulation of single linked lists   *             
* in memory.  These lists are of the PUSH/POP (LIFO) variety.     *             
* Serialization is achieved using the CDS and CS instructions.    *             
*                                                                 *             
*******************************************************************             
                                                                                
*******************************************************************             
*                                                                 *             
* Single linked list head fields                                  *             
*                                                                 *             
*******************************************************************             
         MACRO                                                                  
&LAB     SHEAD                                                                  
         AIF   ('&LAB' EQ '').ERR                                               
&LAB     DS   0D                   Single linked CDS list                       
&LAB.FP  DS    A                   Forward pointer                              
&LAB.SEQ DS    A                   CDS sequence number                          
         MEXIT                                                                  
.ERR     MNOTE 8,'Label (list name) required'                                   
         MEND                                                                   
                                                                                
*******************************************************************             
*                                                                 *             
* Push an item onto a single linked list                          *             
*                                                                 *             
*******************************************************************             
         MACRO                                                                  
&LABEL   SPUSH &HEAD=,&ITEM=                                                    
         LCLC  &X                                                               
         AIF   ('&LABEL' EQ '').NOLAB                                           
&LABEL   LABEL ,                                                                
.NOLAB   ANOP  ,                                                                
         AIF   ('&HEAD' EQ '').ERR1                                             
         AIF   ('&ITEM' EQ '').ERR2                                             
*gen                                                                            
         LM    R14,R15,&HEAD       Get fwd ptr and sequence number              
         LA    RVR,&ITEM           Point to new item                            
         LOOP  BEGIN                                                            
         LA    RS,1(R15)           Increment sequence                           
         MVC   &ITEM.(L'&HEAD.FP),&HEAD.FP Set item fwd ptr                     
         CDS   R14,RVR,&HEAD       Add item to list                             
         UNTIL (Z),END                                                          
*nogen                                                                          
         AGO   .EXIT                                                            
.ERR1    MNOTE 8,'Head is a required parameter'                                 
         AGO   .EXIT                                                            
.ERR2    MNOTE 8,'Item is a required parameter'                                 
.EXIT    ANOP  ,                                                                
         MEND  ,                                                                
                                                                                
*******************************************************************             
*                                                                 *             
* Pop an item from a single linked list. Addr returned in RVR     *             
* (zero if the list was empty).                                   *             
*                                                                 *             
*******************************************************************             
         MACRO                                                                  
&LABEL   SPOP  &HEAD=                                                           
         AIF   ('&LABEL' EQ '').NOLAB                                           
&LABEL   LABEL ,                                                                
.NOLAB   ANOP  ,                                                                
         AIF   ('&HEAD' EQ '').ERR1                                             
*gen                                                                            
         LM    RVR,RS,&HEAD        Get fwd and sequence number                  
         LOOP  BEGIN                                                            
         IF    (RVR,Z),EXIT        None to get                                  
         LR    R14,RVR             Point to first item                          
         L     R14,0(R14)          Get fwd pointer                              
         LA    R15,1(RS)           Increment sequence                           
         CDS   RVR,R14,&HEAD       Remove item from list                        
         UNTIL (Z),END                                                          
*nogen                                                                          
         AGO   .EXIT                                                            
.ERR1    MNOTE 8,'Head is a required parameter'                                 
.EXIT    ANOP  ,                                                                
         MEND  ,                                                                
                                                                                
*******************************************************************             
*                                                                 *             
* Get an available item from list (ptr returned in RVR). Memory   *             
* will be obtained if the list is empty.                          *             
*                                                                 *             
*******************************************************************             
         MACRO                                                                  
&LABEL   SAVAIL &HEAD=,&LEN=,&LOC=GLOBHI,&FIX=,&PAGE=                           
         AIF   ('&LABEL' EQ '').NOLAB                                           
&LABEL   LABEL ,                                                                
.NOLAB   ANOP  ,                                                                
         AIF   ('&HEAD' EQ '').ERR1                                             
         AIF   ('&LEN' EQ '').ERR2                                              
         SPOP  HEAD=&HEAD          pop a free item                              
         IF    (RVR,Z),BEGIN       empty list                                   
         VMGET &LEN,LOC=&LOC,FIX=&FIX,PAGE=&PAGE                                
         IF    ('LTR RVR,RVR',ZERO),'ABORT NO_MEM_&HEAD'                        
         END   ,                                                                
         AGO   .EXIT                                                            
.ERR1    MNOTE 8,'Head is a required parameter'                                 
         AGO   .EXIT                                                            
.ERR2    MNOTE 8,'Len is a required parameter'                                  
.EXIT    ANOP  ,                                                                
         MEND  ,                                                                
                                                                                
SLDUMMY  RECORD BEGIN                                                           
SLDUM    SHEAD ,                                                                
         END                                                                    
