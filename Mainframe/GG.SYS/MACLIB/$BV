         MACRO                                                                  
        $BV    &FF,&C,&B                                                        
.*       ADDED 3/77, JDN;  MODIFIED 9/77, JDN                                   
.*       Labeled Using support.  If the flag byte is addressed with             
.*       a labeled using, specify it as "label:byte.value"                      
         GBLA  &$CCVAL,&$BFVAL,&$BFCC,&$ORVAL,&$ORBITS                          
         GBLB  &$OK                                                             
         GBLC  &$BFMSG,&$CCTYP,&$BFLOC,&$BFTYP                                  
         LCLA  &VAL,&I,&J,&N,&CCSTBL(16)                                        
         LCLB  &MULT,&COND,&NOT,&FNOT,&COMPLEX                                  
         LCLC  &BYTE,&LOC(0),&TYP,&CC,&TMP,&BOP,&F,&LABEL                       
&F       SETC  '&FF'                                                            
&CCSTBL(1) SETA  ,7+1,,,,,,1+1,14+1,,,,,,8+1                                    
&$BFMSG  SETC  ''                                                               
         AIF   ('&C' EQ '').BSTART                               JSL            
        $CCLKUP &C                                                              
         AIF   (NOT &$OK).EXIT                                                  
&CC      SETC  '&$CCVAL'                                                        
&TYP     SETC  '&$CCTYP'                                                        
&COND    SETB  1                                                                
.BSTART  AIF   ('&F'(1,1) NE '.').NDFLT                                         
&BYTE    SETC  '.'                                                              
&I       SETA  1                                                                
         AGO   .SCAN                                                            
.NDFLT   ANOP                                                                   
&J       SETA  &I+1                                                             
.BLOOP   AIF   (&I GE K'&F).BDONE                                               
&I       SETA  &I+1                                                             
         AIF   ('&F'(&I,1) EQ '.').DOT                                          
.*                                                                              
.*  Since we can have qualified names for labeled usings, we will               
.*  use the ':' character to separate USING labels and flag values              
.*  but change it to a dot for the assembler.                                   
.*                                                                              
         AIF   ('&F'(&I,1) NE ':').BLOOP                                        
&LABEL   SETC  '&F'(1,&I-1).'.'                                                 
&F       SETC  '&F'(&I+1,K'&F-&I)                                               
&I       SETA  0                                                                
         AIF   ('&LABEL'(1,1) NE '^').BSTART                                    
&LABEL   SETC  '&LABEL'(2,K'&LABEL-1)                                           
&F       SETC  '^&F'                                                            
         AGO   .BSTART                                                          
.DOT     ANOP  ,                                                                
&BYTE    SETC  '&F'(&J,&I-&J)                                                   
         AGO   .SCAN                                                            
.BDONE   ANOP                                                                   
&I       SETA  0                                                                
.SCAN    ANOP                                                                   
&J       SETA  &I+1                                                             
.LOOP    AIF   (&I GE K'&F).LAST                                                
&I       SETA  &I+1                                                             
         AIF   ('&F'(&I,1) NE '+' AND '&F'(&I,1) NE '*').LOOP                   
         AIF   ('&BOP' NE '' AND '&F'(&I,1) NE '&BOP').ERRMIX                   
&BOP     SETC  '&F'(&I,1)                                                       
&I       SETA  &I-1                                                             
.LAST    ANOP                                                                   
&TMP     SETC  '&F'(&J,&I-&J+1)                                                 
&FNOT    SETB  0                                                                
         AIF   ('&TMP'(1,1) NE '^').LKUP                                        
&TMP     SETC  '&TMP'(2,K'&TMP-1)                                               
&FNOT    SETB  (NOT &FNOT)                                                      
.LKUP   $BFLKUP &TMP                                                            
         AIF   (NOT &$OK).EXIT,(NOT &FNOT).CHEK                                 
&$BFCC   SETA  15-&$BFCC                                                        
.CHEK    AIF   ('&$BFLOC' EQ '').NOLOC                                          
&N       SETA  &N+1                                                             
&LOC(&N) SETC  '&$BFLOC'                                                        
.NOLOC  $LOR   &VAL,&$BFVAL                                                     
&VAL     SETA  &$ORVAL                                                          
         AIF   (&COND).GOTCC                                                    
         AIF   (&MULT AND '&TYP' NE 'TM').ERRMULT                               
         AIF   ('&TYP' NE '' AND '&TYP' NE '&$BFTYP').ERRTYP                    
&TYP     SETC  '&$BFTYP'                                                        
         AIF   ('&CC' EQ '' OR '&CC' EQ '&$BFCC').SETCC                         
         AIF   ('&TYP' NE 'TM').ERRTYP                                          
         AIF   (&COMPLEX OR &CCSTBL(&CC+1) EQ 0).COMPL                          
&TEMP    SETA  &CCSTBL(&CC+1)-1                                                 
&CC      SETC  '&TEMP'                                                          
         AIF   ('&CC' EQ '&$BFCC').SETCC                                        
.COMPL   AIF   (&$ORBITS GT 1).ERRCOND                                          
&$BFCC   SETA  &CCSTBL(&$BFCC+1)-1                                              
         AIF   (&$BFCC LT 0 OR '&CC' NE '&$BFCC').ERRCOND                       
.SETCC   ANOP                                                                   
&CC      SETC  '&$BFCC'                                                         
&COMPLEX SETB  (&COMPLEX OR &$ORBITS GT 1)                                      
&MULT    SETB  1                                                                
.GOTCC   ANOP                                                                   
&I       SETA  &I+1                                                             
         AIF   (&I LT K'&F).SCAN                                                
.*                                                                              
.*  ALL FLAGS HAVE BEEN EVALUATED, NOW DO COND CODE CHECKING...                 
&$BFVAL  SETA  &VAL                                                             
&$BFCC   SETA  &CC                                                              
         AIF   ('&BYTE' EQ '').NOTDOT                            JSL            
.NLOOP   AIF   ('&BYTE'(1,1) NE '^').NOTDOT                      JSL            
&NOT     SETB  (NOT &NOT)                                        JSL            
&BYTE    SETC  '&BYTE'(2,K'&BYTE-1)                              JSL            
         AGO   .NLOOP                                            JSL            
.NOTDOT  AIF   (NOT &NOT).TYP                                                   
&$BFCC   SETA  15-&$BFCC                                                        
.TYP     AIF   (&COND OR '&TYP' NE 'TM').LOC                                    
&I       SETA  &$BFCC                                                           
         AIF   ('&BOP' EQ '').LOC,('&BOP' EQ '*').AND                           
         AIF   (&$BFCC EQ 7 OR &$BFCC EQ 14).LOC                                
         AIF   (&COMPLEX).ERRCOMP                                               
&$BFCC   SETA  14                                                               
         AIF   (&I EQ 8).LOC                                                    
&$BFCC   SETA  7                                                                
         AIF   (&I EQ 1).LOC                                                    
         AGO   .ERRCOND                                                         
.AND     AIF   (&$BFCC EQ 8 OR &$BFCC EQ 1).LOC                                 
         AIF   (&COMPLEX).ERRCOMP                                               
&$BFCC   SETA  1                                                                
         AIF   (&I EQ 7).LOC                                                    
&$BFCC   SETA  8                                                                
         AIF   (&I EQ 14).LOC                                                   
         AGO   .ERRCOND                                                         
.LOC     ANOP                                                                   
&I       SETA  1                                                                
.CHKLP   AIF   (&I GT &N).CHKDN                                                 
&J       SETA  1                                                                
.CHKILP  AIF   (&J GT &I).CHKIDN,(&J EQ &I).CHKISKP                             
  DS 0SL2(&LOC(&I)-&LOC(&J),&LOC(&J)-&LOC(&I)) FLAGS NOT IN SAME BYTE           
.CHKISKP ANOP                                                                   
&J       SETA  &J+1                                                             
         AGO   .CHKILP                                                          
.CHKIDN  ANOP                                                                   
&I       SETA  &I+1                                                             
         AGO   .CHKLP                                                           
.CHKDN   AIF   ('&BYTE' NE '' AND '&BYTE' NE '.').NOBYTE                        
&BYTE    SETC  '&B'                                                             
         AIF   ('&BYTE' NE '').NOBYTE,(&N EQ 0).ERRLOC                          
&BYTE    SETC  '&LOC(1)'                                                        
.NOBYTE  ANOP                                                                   
&$BFLOC  SETC  '&LABEL.&BYTE'                                                   
&$BFTYP  SETC  '&TYP'                                                           
&$OK     SETB  1                                                                
         GBLC  &($CN&$BFTYP&$BFCC)                                              
&$BFMSG  SETC  '&($CN&$BFTYP&$BFCC)'                                            
         AIF   ('&$BFMSG' NE '').EXIT                                           
&$BFMSG  SETC  '&($CN&$BFCC)'                                                   
         AIF   ('&$BFMSG' NE '').EXIT                                           
&$BFMSG  SETC  ''                                                               
         MEXIT                                                                  
.*                                                                              
.ERRMIX  MNOTE 8,'&FF - MIXED AND''S/OR''S ARE NOT ALLOWED'                     
         AGO   .ERR                                                             
.ERRTYP  MNOTE 8,'&FF - FLAG TYPES CONFLICT (&TYP,&$BFTYP)'                     
         AGO   .ERR                                                             
.ERRCOND MNOTE 8,'&FF - FLAG CONDITION CODES CONFLICT'                          
         AGO   .ERR                                                             
.ERRMULT MNOTE 8,'&FF - MULTIPLE FLAGS ARE ONLY VALID AS MASKS'                 
         AGO   .ERR                                                             
.ERRLOC  MNOTE 8,'&FF - NO FLAG BYTE LOCATION GIVEN'                            
         AGO   .ERR                                                             
.ERRCOMP MNOTE 8,'&FF - FLAG EXPRESSION TOO COMPLEX, USE SEP. TESTS'            
.ERR     ANOP                                                                   
&$OK     SETB  1                   IT WAS A "BV", BUT SYNTAX IS BAD             
&$BFLOC  SETC  '*'                                                              
&$BFVAL  SETA  0                                                                
&$BFCC   SETA  0                                                                
&$BFTYP  SETC  'TM'                                                             
&$BFMSG  SETC  'FALSE'                                                          
.EXIT    MEND                                                                   
