         MACRO                                                                  
&LABEL   USING &PUSH=NO,&DROP=NO                                                
.*       RE-DONE 2/77, JDN;  MODS: DO REAL DROP FOR R0, 12/78, JDN              
         GBLA  &$COUNT,&$UR#STK(0),&$UPTR,&$REG#,&$LUPTR                        
         GBLB  &$OK                                                             
         GBLC  &$USINGS(16),&$USTK(0),&$LUSING(0),&$USTYPE                      
         LCLA  &I,&I1,&I2,&R,&LBX                                               
         LCLC  &NAME,&REG,&MSG,&LBA,&LBB,&LBC,&LBS,&LBN,&MSGEND                 
&$USTYPE SETC  ''                      No using type defined yet                
&NOP     SETA  N'&SYSLIST                                                       
.NOPLOOP AIF   (&NOP LE 0).NOPERR,('&SYSLIST(&NOP)' NE '').NEXT                 
&NOP     SETA  &NOP-1                                                           
         AGO   .NOPLOOP                                                         
.NOPERR  MNOTE 8,'USING OPERANDS MISSING'                                       
         MEXIT                                                                  
.NEXT    AIF   (&I GE &NOP).EXIT                                                
&I       SETA  &I+1                                                             
.*                                                                              
.*  If this SYSLIST element is a sublist, unravel it, otherwise                 
.*  interpret it starting at .NAME                                              
.*                                                                              
         AIF   ('&SYSLIST(&I)' EQ '&SYSLIST(&I,1)').NAME                        
&LABEL   USING &SYSLIST(&I,1),&SYSLIST(&I,2),&SYSLIST(&I,3),           *        
               &SYSLIST(&I,4),&SYSLIST(&I,5),&SYSLIST(&I,6),           *        
               PUSH=&PUSH,DROP=&DROP     CAF                                    
         AGO   .NEXT                                                            
.NAME    ANOP                                                                   
&NAME    SETC  '&SYSLIST(&I)'                                                   
         AIF   ('&NAME'(1,1) NE '*').NOTSTAR                                    
$$$&$COUNT.B DS 0X                                                              
&NAME    SETC  '$$$&$COUNT.B'.'&NAME'(2,K'&NAME-1)                              
&$COUNT  SETA  &$COUNT+1                                                        
.NOTSTAR ANOP                                                                   
.*                                                                              
.*  When looking for a register, the default is the data area                   
.*  with an "R" appended to the end of the data area name.                      
.*                                                                              
&REG     SETC  '&NAME.R'                                                        
.*                                                                              
.*  If the name is the last in the list, or doesn't have a pair                 
.*  that isn't a sublist, use the default register name.                        
.*                                                                              
         AIF (&I GE &NOP OR '&SYSLIST(&I+1)'NE'&SYSLIST(&I+1,1)').REG           
.LOOP    ANOP                                                                   
&I       SETA  &I+1                                                             
&REG     SETC  '&SYSLIST(&I)'                                                   
.*                                                                              
.*  The register is valid if it is a number (0..15) or a predefined             
.*  HIBAL register symbol                                                       
.*                                                                              
.REG    $RGLKUP &REG                                                            
         AIF   (&$OK).REGA                                                      
         AIF   ('&REG'(1,1) GE '0').ISREG                                       
&LABEL   AUSING &NAME,&REG             Associative using                        
         AGO   .FIN                                                             
.ISREG   ANOP  ,                                                                
&$REG#   SETA  &REG                                                             
.REGA    ANOP  ,                                                                
&R       SETA  &$REG#                                                           
         AIF   ('&LABEL' EQ '').REGAUL                                          
.*                                                                              
.*  Do work for labeled usings - defining global symbols etc                    
.*                                                                              
&$USTYPE SETC  'L'                     Labeled using type                       
&LBA     SETC  '$$U&LABEL.A'           register value                           
&LBB     SETC  '$$U&LABEL.B'           defined bit                              
&LBC     SETC  '$$U&LABEL.C'           value of area of using                   
&LBS     SETC  '$$U&LABEL.S'           stack pointer                            
&LBN     SETC  '$$U&LABEL.N'           now-active using stack loc               
         GBLA  &(&LBA)(0),&(&LBS),&(&LBN)                                       
         GBLB  &(&LBB)                                                          
         GBLC  &(&LBC)(0)                                                       
.*                                                                              
.*  See if this labeled using has appeared before                               
.*                                                                              
         AIF   (&(&LBB)).LBLDEF                                                 
&$LUPTR  SETA  &$LUPTR+1                                                        
&$LUSING(&$LUPTR) SETC '&LABEL'                                                 
&(&LBB)  SETB  1                       now it's defined                         
&(&LBS)  SETA  1                       init Stack pointer                       
&(&LBN)  SETA  1                       now-active = first = none                
.LBLDEF  ANOP  ,                                                                
         AIF   ('&NAME' NE '@R&R').NOLDROP                                      
       $$DROP  &LABEL                                                           
&MSG     SETC  '&LABEL..&(&LBC)(&(&LBN))' LABEL.AREA                            
         MNOTE *,'|<R&(&LBA)(&(&LBN)) &MSG'                                     
&(&LBS)  SETA  1                                                                
&(&LBN)  SETA  1                                                                
&(&LBC)(1) SETC  ''                                                             
         AGO   .FIN                                                             
.NOLDROP ANOP  ,                                                                
.*                                                                              
.*  If there is an labeled active using, put out the drop message               
.*                                                                              
&LBX     SETA  &(&LBS)                                                          
         AIF   ('&(&LBC)(&(&LBN))' EQ '').NOLACT                                
&MSG     SETC  '&LABEL..&(&LBC)(&(&LBN))'                                       
         MNOTE *,'|<R&(&LBA)(&(&LBN)) &MSG'                                     
.NOLACT  ANOP  ,                                                                
         AIF   ('&PUSH' EQ 'NO').NOLPUSH                                        
&(&LBS)  SETA  &(&LBS)+1                                                        
.NOLPUSH ANOP  ,                                                                
&LBX     SETA  &(&LBS)                                                          
&(&LBC)(&LBX)  SETC  '&NAME'                                                    
&(&LBA)(&LBX)  SETA  &R                                                         
.*                                                                              
&LABEL $$USING &NAME,&R                                                         
&(&LBN)  SETA  &(&LBS)                 now-active is top of stack               
&MSG     SETC  '&LABEL..&NAME'         LABEL.AREA                               
         MNOTE *,'|>R&R &MSG'                                                   
         AGO   .FIN                                                             
.REGAUL  ANOP  ,                                                                
&$USTYPE SETC  'U'                     Regular using type                       
         AIF   ('&NAME' EQ '&$USINGS(&$REG#+1)').FIN                            
.*                                                                              
         AIF   ('&NAME' EQ '@R&R').NODROP,('&PUSH' EQ 'NO').NOPUSH              
&$UPTR   SETA  &$UPTR+1                                                         
&$USTK(&$UPTR) SETC '&$USINGS(&R+1)'                                            
&$UR#STK(&$UPTR) SETA &R                                                        
.NOPUSH  DROP  &R                                                               
.NODROP  ANOP                                                                   
&MSG     SETC  '&$USINGS(&R+1)'                                                 
&$USINGS(&R+1) SETC '&NAME'                                                     
.*                                                                              
.*  Push or Drop all regs with the same using, but a higher                     
.*  register number.                                                            
.*                                                                              
.CHKLP   ANOP  ,                                                                
        $USLKUP &NAME                                                           
         AIF   (&$REG# LE &R).CHKDN                                             
         AIF   ('&PUSH' EQ 'NO').CHKNP                                          
&$UPTR   SETA  &$UPTR+1                                                         
&$USTK(&$UPTR)   SETC '&NAME'                                                   
&$UR#STK(&$UPTR) SETA &$REG#                                                    
         AGO   .CHKDO                                                           
.CHKNP   AIF   ('&DROP' NE 'NO').CHKDO                                          
         MNOTE 4,'WARNING - &LABEL.R&$REG# WILL BE DROPPED'                     
.CHKDO   ANOP  ,                                                                
         DROP  &$REG#                                                           
         AGO   .CHKLP                                                           
.CHKDN   ANOP  ,                                                                
       $$USING &NAME,&REG                                                       
         AIF   ('&NAME' NE '@R&R').USING                                        
         AIF   (&R NE 0).NOTZ                                                   
       $$DROP  0                                                                
.NOTZ    AIF   ('&MSG' EQ '').FIN                                               
  AIF   ('&MSG'(1,3) NE '$$$' OR '&MSG'(K'&MSG,1) NE 'B').DROPMSG               
.*                                                                              
.*  Change base register using name to '*'                                      
.*                                                                              
&MSG     SETC  '*'                                                              
.DROPMSG MNOTE *,'|<R&R &MSG'                                                   
         AGO   .FIN                                                             
.USING   ANOP                                                                   
&MSG     SETC  '&NAME'                                                          
&I1      SETA  1                                                                
.DBLOOP  AIF   ('&MSG'(&I1,1) EQ '+').DOBAS                                     
&I1      SETA  &I1+1                                                            
         AIF   (&I1 GT K'&MSG).DOBAS                                            
         AGO   .DBLOOP                                                          
.DOBAS   ANOP  ,                                                                
  AIF   ('&MSG'(1,3) NE '$$$' OR '&MSG'(&I1-1,1) NE 'B').USNGMSG                
.*                                                                              
.*  Change base register using name to '*'                                      
.*                                                                              
&MSGEND  SETC  ''                                                               
         AIF   (&I1 GT K'&MSG).NOEND                                            
&MSGEND  SETC  '&MSG'(&I1,K'&MSG-&I1+1)                                         
.NOEND   ANOP  ,                                                                
&MSG     SETC  '*&MSGEND'                                                       
.USNGMSG MNOTE *,'|>R&R &MSG'                                                   
.FIN     ANOP                                                                   
&NAME    SETC  '&NAME+4096'                                                     
    AIF (&I LT &NOP AND '&SYSLIST(&I+1)' EQ '&SYSLIST(&I+1,1)').LOOP            
         AGO   .NEXT                                                            
.NOTREG  MNOTE 8,'&REG IS NOT A REGISTER'                                       
.EXIT    MEND                                                                   
