         MACRO                                                                  
&L       WHILE &LEXP,&LABEL                                                     
.*       RE-DONE 4/77, JDN;  MODIFIED 12/78, JDN                                
.*       ADD SUPPORT FOR BCT LOOPS 8/85, JKR                                    
.*     If the &LEXP operand is (BCT,reg) a BCT reg,... is done                  
         GBLA  &$COUNT,&$BPTR,&$NEST,&$REG#                                     
         GBLB  &$OK                                                             
         GBLC  &$BSTK(0),&$BLABSTK(0)                                           
         LCLB  &BCT                                                             
&BCT     SETB  0                       Not a BCT by default                     
&INDX    SETC  '$$$&$COUNT'                                                     
&$COUNT  SETA  &$COUNT+1                                                        
&SLAB    SETC  '&INDX.S'                                                        
&LAB     SETC  '&L'                                                             
&T       SETC  'BEGIN'                                                          
         AIF   (N'&LEXP NE 2).NOTBCT,('&LEXP(1)' NE 'BCT').NOTBCT               
        $RGLKUP &LEXP(2)                                                        
         AIF   (NOT &$OK).NOTBCT                                                
&BCT     SETB  1                       This is a BCT                            
         AGO   .BCT                                                             
.NOTBCT  ANOP  ,                                                                
         AIF   ('&LABEL' EQ 'BEGIN' OR '&LABEL '(1,1) EQ '''').NEWBLK           
         AIF   ('&LABEL' EQ '' OR '&LABEL' EQ 'END').OLDBLK                     
         MNOTE 8,'&LABEL NOT "BEGIN", "END", OR QUOTED INSTRUCTION'             
         AGO   .NEWBLK                                                          
.OLDBLK  AIF   ('&$BSTK(&$BPTR)'(1,1) NE 'L').ERRTYP                            
&LAB     SETC  '&$BLABSTK(&$BPTR)'                                              
&INDX    SETC  '&$BSTK(&$BPTR)'(2,7)                                            
&SLAB    SETC  ''                                                               
&$BPTR   SETA  &$BPTR-1                                                         
&$NEST   SETA  &$NEST-1                                                         
         AIF   ('&LABEL' NE 'END').NEWBLK                                       
&I       SETA  &$NEST+1                                                         
         MNOTE *,'<&I'                                                          
&T       SETC  '&INDX.S'                                                        
.NEWBLK  ANOP  ,                                                                
&L       IF    &LEXP,&T,INDX=&INDX,SLAB=&SLAB                                   
         AIF   ('&LABEL' EQ 'END').EXIT,(&BCT).NOSTACK                          
&$BLABSTK(&$BPTR) SETC '&LAB'                                                   
&$BSTK(&$BPTR)    SETC 'L&INDX'                                                 
.NOSTACK AIF   ('&LABEL' EQ '' OR '&LABEL' EQ 'BEGIN').EXIT                     
         GEN   &LABEL                                                           
         END   ,                       Force end of quoted loop                 
         AGO   .EXIT                                                            
.*  BCT case                                                                    
.BCT     ANOP  ,                                                                
         AIF   ('&LABEL' EQ 'END').BOLDBLK                                      
         AIF   ('&LABEL' NE '').NOTNULL                                         
         MNOTE 8,'NON-NESTED WHILE NOT VALID WITH BCT-TYPE LOOP'                
         AGO   .MEXIT                                                           
.NOTNULL AIF   ('&LABEL' NE 'BEGIN').NOTBEG                                     
         MNOTE 8,'BEGIN is not a valid label with the BCT-type loop'            
         AGO   .MEXIT                                                           
.NOTBEG  MNOTE 8,'Invalid label on UNTIL/WHILE'                                 
         AGO   .MEXIT                                                           
.BOLDBLK AIF   ('&$BSTK(&$BPTR)'(1,1) NE 'L').ERRTYP                            
&INDX    SETC  '&$BSTK(&$BPTR)'(2,7)                                            
&$BSTK(&$BPTR) SETC 'C&INDX'           Change type to code block                
.*                                                                              
         MNOTE *,'<&$NEST'             Unindent early                           
&L       BCT   &$REG#,&INDX.S                                                   
         END   ,                       End loop                                 
.EXIT    MEXIT                                                                  
.*                                                                              
.ERRTYP  ANOP                                                                   
&TYP     SETC  '&$BSTK(&$BPTR)'(1,1)                                            
 MNOTE 8,'NON-NESTED WHILE NOT VALID IN THIS BLOCK (BSTK TYPE=&TYP)'            
         MEND                                                                   
