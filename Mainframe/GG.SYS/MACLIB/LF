         MACRO ,                       LF: Load with length check               
&L       LF   &REG,&FLOC,&LEN=,&ALIGNED=YES     Load field                      
.*  This macro loads a register, and if the location to load from               
.*  is a storage location, the length is checked to see how long                
.*  the operand is, to set the proper OP CODE                                   
.*       Labeled Using support added 04/87, JKR                                 
         GBLA  &$REG#,&$$LF                                                     
         GBLB  &$HIBAL,&$OK                                                     
         GBLC  &$LULBL,&$LUADDR                                                 
         LCLA  &LLEN,&INDX                                                      
         LCLC  &OPCD,&EQU,&LOC,&LBL                                             
&LOC     SETC  '&FLOC'                                                          
        $LBLAD &LOC                    Labeled Using support:                   
&LBL     SETC  '&$LULBL'                Using label                             
&LOC     SETC  '&$LUADDR'                Address                                
&L       LABEL ,                                                                
.*       Take parenthesis off of register                                       
&RV      SETC  '&REG'                                                           
         AIF   ('&REG'(1,1) NE '(' OR '&REG'(K'&REG,1) NE ')').NRR              
&RV      SETC  '&REG'(2,K'&REG-2)                                               
.NRR     AIF   (NOT &$HIBAL).NRH                                                
.*       Change Hibal symbolic register to number                               
        $RGLKUP &RV                                                             
         AIF   (NOT &$OK).NRH                                                   
&RV      SETC  '&$REG#'                                                         
.NRH     ANOP                                                                   
.*  If second parm is a reg, do $L                                              
         AIF   ('&LOC'(1,1) EQ '(').GO$L                                        
.*  Look for LA: style parameter                                                
&INDX    SETA  0                                                                
.OPSRCH  ANOP  ,                                                                
&INDX    SETA  &INDX+1                                                          
         AIF   ('&FLOC'(&INDX,1) EQ ':').GO$L                                   
         AIF   (&INDX LT K'&FLOC).OPSRCH                                        
         AGO   .NOOP                                                            
.GO$L   $L     &RV,&FLOC                                                        
         MEXIT ,                                                                
.NOOP    ANOP  ,                                                                
         AIF   ('&LEN' NE '').LENSET                                            
&LLEN    SETA  L'&LOC                  Implicit length                          
         AGO   .SETOP                  Now go set OP-CODE                       
.LENSET  ANOP  ,                                                                
&$$LF    SETA  &$$LF+1                 This garbage is because                  
&EQU     SETC  '$$LF&$$LF'              we need to force the                    
&EQU     EQU   0,&LEN,C'N'               assembler to evaluate the              
&LLEN    SETA  L'&EQU                     length of our item before             
.SETOP   ANOP  ,                           the 'second pass'                    
         AIF   (&LLEN NE 1).NOT1                                                
&OPCD    SETC  'LC'                                                             
         AGO   .DOL                                                             
.NOT1    AIF   (&LLEN NE 2).NOT2                                                
         AIF   ('&ALIGNED' NE 'YES').NOT2AL                                     
&OPCD    SETC  'LH'                    2 Byte aligned                           
         AGO   .DOL                                                             
.NOT2AL  ANOP  ,                                                                
&OPCD    SETC  'L2'                    2 Byte, not aligned                      
         AGO   .DOL                                                             
.NOT2    AIF   (&LLEN NE 3).NOT3                                                
&OPCD    SETC  'L3'                                                             
         AGO   .DOL                                                             
.NOT3    AIF   ('&ALIGNED' NE 'YES').NOT4AL                                     
&OPCD    SETC  'L'                     4 Byte aligned                           
         AGO   .DOL                                                             
.NOT4AL  ANOP  ,                                                                
&OPCD    SETC  'L4'                    4 Byte, not aligned                      
.DOL     ANOP  ,                                                                
         &OPCD &RV,&LBL.&LOC                                                    
         MEND  ,                                                                
