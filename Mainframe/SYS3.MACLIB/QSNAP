         MACRO                                                                  
&L       QSNAP &OP,&LEN,&MODE=                                                  
.*                                                                              
.*  SUPPORT FOR QSNAP SVC.  SPECIFIED AS FOLLOWS                                
.*       QSNAP  (R0,R2,LINK)       - SNAP UP TO 6 REGISTERS                     
.*       QSNAP  ADDR,LEN           - SNAP (LEN) BYTES AT 'ADDR'                 
.*                               (ASSUMES ADDRESSABILITY FOR S-CON)             
.*                               (0 < LEN < 256 , 16 DEFAULT)                   
.*       QSNAP  'MSG'              - WRITE MSG TO SNAP LOG                      
.*       QSNAP  =A(ADDR),LEN       - SNAP (LEN) BYTES AT 'ADDR'                 
.*       QSNAP  =V(ADDR),LEN       - SAME                                       
.*                                                                              
.*                                                                              
.*       ALL SNAP MESSAGES WRITTEN TO HASP JOB LOG UNLESS MODE                  
.*       OPERAND USED:                                                          
.*             MODE=WTO            WRITE TO CONSOLE (ROUTCDE=2)                 
.*             MODE=WTL            WRITE TO SYSLOG                              
.*             MODE=LOG            WRITE TO HASP JOB LOG ONLY                   
.*             MODE=SGEN           TEST MODE                                    
.*             MODE=SEQNO          (NYI)                                        
.*       ALL MODE SWITCHES ARE LATCHING, I.E., WILL STAY IN EFFECT              
.*       FOR FUTURE QSNAP CALLS UNLESS MODE OPERAND USED AGAIN,                 
.*       IN WHICH CASE ALL DESIRED (NON-DEFAULT) OPTIONS MUST BE                
.*       RESET.  MULTIPLE OPTIONS CAN BE EXPRESSED IN A LIST                    
.*       (E.G., MODE=(WTL,SEQNO)).                                              
.*                                                                              
.*       J. LIPKIS, SCIP SYSTEMS, APRIL, 1977.                                  
.*                                                                              
.*       Modified 9/84, Niz                                                     
.*                                                                              
         GBLB  &NOQSNAP            (See SYSDEFN)                                
         GBLB  &MFLGS(10)                                                       
         LCLA  &CNT,&FLGS,&N,&RNUM,&M,&FTAB(10)                                 
         LCLC  &LN,&TEMP,&LAB,&MTAB(10),&R(6)                                   
&MTAB(1) SETC  'WTO'                                                            
&MTAB(2) SETC  'WTL'                                                            
&MTAB(3) SETC  'LOG'                                                            
&MTAB(4) SETC  'SGEN'                                                           
&MTAB(5) SETC  'SEQNO'                                                          
&FTAB(1) SETA  X'10',X'20',0,0,X'40'   WTO,WTL,LOG,SGEN,SEQNO                   
         AIF   (NOT &NOQSNAP).DOSNAP                                            
&L       LABEL                                                                  
         MEXIT                                                                  
.DOSNAP  ANOP                                                                   
         AIF   (N'&MODE EQ 0).ENDMODE        NO NEW MODE SETTINGS               
&MFLGS(1) SETB 0,0,0,0,0,0,0,0,0,0           RESET ALL MODE SWITCHES            
.NLOOP   AIF   (&N GE N'&MODE).ENDMODE                                          
&N       SETA  &N+1                                                             
&M       SETA  1                                                                
.MLOOP   AIF   ('&MODE(&N)' EQ '&MTAB(&M)').MSET                                
&M       SETA  &M+1                                                             
         AIF   (&M LE N'&MTAB).MLOOP                                            
         MNOTE *,'&MODE(&N) - IGNORED'                                          
         AGO   .NLOOP                                                           
.MSET    ANOP                                                                   
&MFLGS(&M) SETB  1                                                              
         AGO   .NLOOP                                                           
.ENDMODE ANOP                                                                   
&N       SETA  0                                                                
.SETLOOP ANOP                                                                   
         AIF   (&N GE N'&MFLGS).ENDSETS                                         
&N       SETA  &N+1                                                             
&FLGS    SETA  &FLGS+&MFLGS(&N)*&FTAB(&N)                                       
         AGO   .SETLOOP                                                         
.ENDSETS ANOP                                                                   
         AIF   (NOT &MFLGS(4)).PROD                                             
.PROD    ANOP                                                                   
         CNOP  0,4                                                              
&L       SVC   222                                                              
.SVCDONE AIF   ('&OP' EQ '').NULL  USER DOESN'T WANT MUCH                       
         AIF   ('&OP'(1,1) EQ '(').REGS      REGISTER LIST                      
         AIF   ('&OP'(1,1) EQ '''').MSG      'MSG TEXT'                         
         AIF   ('&OP'(1,3) EQ '=A(').ADCON   =A(ADDR)                           
         AIF   ('&OP'(1,3) EQ '=V(').ADCON   =V(ADDR)                           
.*  HAVE UNQUALIFIED BRANCH LABEL (S-CON FORM)                                  
&TEMP    SETC  'AL2(0),S(&OP.)'                                                 
&FLGS    SETA  &FLGS+8             SET X'08' BIT                                
         AGO   .COMACON                                                         
.ADCON   ANOP                      ADCON FORM                                   
&TEMP    SETC  '&OP'(2,1).'('.'&OP'(4,K'&OP-4).')'                              
&FLGS    SETA  &FLGS+4                                                          
.COMACON AIF   ('&LEN' EQ '').LENDFLT        USER-SPECIFIED LEN?                
&LN      SETC  '&LEN'                                                           
         AGO   .LENOK                                                           
.LENDFLT ANOP                                                                   
&LN      SETC  '16'                SET DEFAULT                                  
.LENOK   DC    AL1(&FLGS,&LN),&TEMP                                             
         MEXIT                                                                  
.*  MESSAGE OPERAND                                                             
.MSG     ANOP                                                                   
&CNT     SETA  K'&OP-2             DECR LEN FOR QUOTES                          
&FLGS    SETA  &FLGS+1                                                          
         DC    AL1(&FLGS,&CNT)                                                  
         LA    *-*,=C&OP           (NOT EXECUTED)                               
.*       ORG   *-4                                                              
.*       DC    H'0'                ELIMINATE LA INSTR                           
.*       ORG   ,                                                                
         MEXIT                                                                  
.*  REGISTER LIST                                                               
.REGS    ANOP                                                                   
&FLGS    SETA  &FLGS+2                                                          
&CNT     SETA  N'&OP                                                            
         AIF   (&CNT LE 6).NUMOK   6 REGS MAX                                   
         MNOTE *,'TOO MANY REGISTERS SPECIFIED, FIRST 6 USED'                   
&CNT     SETA  6                                                                
.NUMOK   ANOP                                                                   
&RNUM    SETA  &CNT                                                             
&N       SETA  0                                                                
&M       SETA  0                                                                
&R(1)    SETC  '0','0','0','0','0','0'                                          
.REGLOOP ANOP                                                                   
&N       SETA  &N+1                LOOP/LIST INDEX                              
&TATT    SETC  '&OP(&N)'                                                        
&TATT    SETC  T'&TATT                                                          
         AIF   ('&TATT' EQ 'U').REGOK                                           
         AIF   ('&TATT' EQ 'N').REGOK                                           
         AIF   ('&TATT' EQ '#').REGOK                                           
         MNOTE *,'&OP(&N) - INVALID REGISTER SPECIFICATION, IGNORED'            
&CNT     SETA  &CNT-1                                                           
         AGO   .ENDLOOP                                                         
.REGOK   ANOP                                                                   
&M       SETA  &M+1                                                             
&R(&M)   SETC  '&OP(&N)'           INSERT IN LIST OF REGS                       
.ENDLOOP AIF   (&N LT &RNUM).REGLOOP         FINISH OPERAND LIST                
         DC    AL1(&FLGS,&CNT,0)                                                
         DC    AL.4(&R(1),&R(2),&R(3),&R(4),&R(5),&R(6))                        
         MEXIT                                                                  
.NULL    DC    AL1(&FLGS),5AL1(0)                                               
.EXIT    MEND                                                                   
